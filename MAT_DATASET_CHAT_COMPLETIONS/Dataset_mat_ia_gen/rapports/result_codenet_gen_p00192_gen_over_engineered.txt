================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
from typing import List, Optional, Tuple


class Car:
    def __init__(self, car_id: int, park_duration: int, arrival_time: int):
        self.car_id = car_id
        self.park_duration = park_duration
        self.arrival_time = arrival_time
        self.departure_time = arrival_time + park_duration
        # park_position: None if not parked, else (space_index, level) where level=0 bottom,1 top
        self.park_position: Optional[Tuple[int, int]] = None
        # When parked on top, must wait bottom car to depart first
        self.waiting_for_lower = False


class ParkingSpace:
    def __init__(self, index: int):
        self.index = index
        # bottom car or None
        self.bottom: Optional[Car] = None
        # top car or None
        self.top: Optional[Car] = None

    def is_empty(self):
        return self.bottom is None and self.top is None

    def has_no_car(self):
        # no car either bottom or top
        return self.is_empty()

    def has_one_car(self):
        return (self.bottom is None) != (self.top is None)

    def cars(self):
        result = []
        if self.bottom is not None:
            result.append(self.bottom)
        if self.top is not None:
            result.append(self.top)
        return result

    def empty_positions(self):
        pos = []
        if self.bottom is None:
            pos.append(0)
        if self.top is None:
            pos.append(1)
        return pos


class ParkingLot:
    def __init__(self, m: int):
        self.spaces = [ParkingSpace(i + 1) for i in range(m)]  # 1-indexed internally for numbering convenience
        self.wait_queue: deque[Car] = deque()
        self.current_time = 0
        self.output_order: List[int] = []  # car_id in order of leaving

    def can_park_in_space(self, space: ParkingSpace, dp_time: int) -> bool:
        # always true, but check for empty or not
        return space.bottom is None or space.top is None

    def _remaining_time(self, car: Car, now: int) -> int:
        remain = car.departure_time - now
        return max(remain, 0)

    def _find_spaces_no_cars(self):
        return [space for space in self.spaces if space.is_empty()]

    def _find_spaces_with_one_car(self):
        return [space for space in self.spaces if space.has_one_car()]

    def _find_spaces_bottom_only(self):
        return [space for space in self.spaces if space.bottom is not None and space.top is None]

    def _assign_park_position(self, car: Car, space: ParkingSpace):
        if space.is_empty():
            # Simply park bottom first
            space.bottom = car
            car.park_position = (space.index, 0)
        else:
            # The rules says if one car, new one goes up and old moves down: but here no movement after parked
            # Actually the problem states: when parking on an occupied space, the existing car below moves to top, and new car is on bottom
            # Or the new car goes on top, and existing is pushed bottom? The problem states that when we park on a spot with 1 car, the existing car is pushed to top and new car is bottom.

            # Implement that existing car moves to top, new car bottom:
            if space.bottom is not None and space.top is None:
                # push bottom car up, new car bottom
                # But problem says the existing car "が先に駐車していた車 B は上段になります." in example : the previous car moves to top and new car bottom.
                # But higher in description it says: 上段の車を出す時、下段の車が先に出る必要があるので上段の車の駐車時間が過ぎても下段の車の持ち主が戻っていないと出せない。
                # So bottom and top clause is as described: existing bottom is pushed up, new car is bottom.
                old_car = space.bottom
                space.top = old_car
                old_car.park_position = (space.index, 1)
                space.bottom = car
                car.park_position = (space.index, 0)
            elif space.top is not None and space.bottom is None:
                # Should not happen based on problem statement, but just handle anyway
                old_car = space.top
                space.bottom = car
                car.park_position = (space.index, 0)
                space.top = old_car
                old_car.park_position = (space.index, 1)
            else:
                # Both occupied cannot assign here
                raise RuntimeError("Trying to park on a full space")

    def _remaining_park_time_in_space(self, space: ParkingSpace, now: int) -> List[int]:
        # returns remaining time of cars in that space
        times = []
        if space.bottom is not None:
            times.append(space.bottom.departure_time - now)
        if space.top is not None:
            times.append(space.top.departure_time - now)
        return times

    def _min_diff_space(self, car: Car, now: int) -> Optional[ParkingSpace]:
        # Implements the rules:
        # 「駐車してある車の残り駐車時間が駐車しようとしている車の駐車時間以上のものがある場合、その差が一番小さい駐車スペースに駐車します。」
        # 「駐車してあるどの車の残り駐車時間も駐車しようとしている車の駐車時間未満である場合、その差が一番小さい駐車スペースに駐車します。」
        # かつ条件に合うもの複数あれば番号小さい方
        # We consider all spaces with 1 car (because if no car, will park first in empty spaces)
        candidates = []
        for space in self._find_spaces_with_one_car():
            # Calculate minimum remaining parking time of cars in space
            remaining_times = self._remaining_park_time_in_space(space, now)
            if not remaining_times:
                continue
            min_remaining = min(remaining_times)
            if min_remaining >= car.park_duration:
                # difference >= 0
                diff = min_remaining - car.park_duration
                candidates.append((diff, space.index, space))
        if candidates:
            # Take minimal diff and smallest index
            candidates.sort(key=lambda x: (x[0], x[1]))
            return candidates[0][2]
        else:
            # no spaces with car whose remain time >= car's parking time
            # use smaller diff but now car's parking time larger than remaining times
            candidates = []
            for space in self._find_spaces_with_one_car():
                remaining_times = self._remaining_park_time_in_space(space, now)
                if not remaining_times:
                    continue
                min_remaining = min(remaining_times)
                # all less than car's time here
                diff = car.park_duration - min_remaining
                candidates.append((diff, space.index, space))
            if candidates:
                candidates.sort(key=lambda x: (x[0], x[1]))
                return candidates[0][2]
        return None

    def park_car(self, car: Car):
        # Step 1: if any empty space, park in minimal number empty space bottom
        empty_spaces = self._find_spaces_no_cars()
        if empty_spaces:
            empty_spaces.sort(key=lambda s: s.index)
            self._assign_park_position(car, empty_spaces[0])
            return

        # Step 2: try to park in space following the difference rule
        space = self._min_diff_space(car, self.current_time)
        if space is not None:
            self._assign_park_position(car, space)
            return

        # Step 3: no space available, wait queue
        self.wait_queue.append(car)

    def _remove_car(self, car: Car):
        space_idx, level = car.park_position
        space = self.spaces[space_idx - 1]
        if level == 0:
            space.bottom = None
        else:
            space.top = None
        car.park_position = None

    def _find_departing_cars(self):
        # find cars that must depart at current time
        # must handle:
        # - lower cars depart first
        # - top cars must wait their lower to depart first if in same space
        # Return list of cars that can depart now ordered by space index
        departing_bottom = []
        departing_top = []
        for space in self.spaces:
            b = space.bottom
            t = space.top
            if b and b.departure_time <= self.current_time:
                departing_bottom.append((space.index, b))
            if t and t.departure_time <= self.current_time:
                departing_top.append((space.index, t))

        departing_bottom.sort(key=lambda x: x[0])
        departing_top.sort(key=lambda x: x[0])

        # Bottom cars depart first
        bottom_cars_departing = [c for _, c in departing_bottom]

        # For top cars, only depart if bottom car has departed or not present
        top_cars_departing = []
        for space_idx, top_car in departing_top:
            space = self.spaces[space_idx - 1]
            # can depart only if bottom is None or bottom has departure_time <= current_time (already departing)
            if space.bottom is None or (space.bottom.departure_time <= self.current_time and space.bottom not in bottom_cars_departing):
                top_cars_departing.append(top_car)
            else:
                # must wait for bottom car
                pass

        # top cars depart simultaneous after their bottom cars
        # but possible multiple top cars in different spaces
        # return all departing cars bottom then top ordered by space index
        return bottom_cars_departing, top_cars_departing

    def process_departures(self):
        bottom_depart, top_depart = self._find_departing_cars()
        # depart bottom cars
        for car in bottom_depart:
            self._remove_car(car)
            self.output_order.append(car.car_id)
        # depart top cars after bottom cars
        for car in top_depart:
            self._remove_car(car)
            self.output_order.append(car.car_id)
        return len(bottom_depart) + len(top_depart)

    def tick(self):
        # process departures first at current time
        departed_count = self.process_departures()
        # After all departures, process waiting queue for parking if spaces free
        while self.wait_queue:
            car = self.wait_queue[0]
            # check if can park now at current time (there may newly opened space)
            # search empty space
            empty_spaces = self._find_spaces_no_cars()
            if empty_spaces:
                empty_spaces.sort(key=lambda s: s.index)
                self._assign_park_position(car, empty_spaces[0])
                self.wait_queue.popleft()
                continue
            else:
                # try min diff space
                space = self._min_diff_space(car, self.current_time)
                if space is not None:
                    self._assign_park_position(car, space)
                    self.wait_queue.popleft()
                    continue
                else:
                    break  # no space for first waiting car, wait further time

    def run_simulation(self, cars: List[Car]):
        # cars arrive 10 minutes apart starting time 0, indexes are 1-based car_id
        # simulation time step in minutes: minimal unit 1 minute, but cars arrive every 10 minutes
        # simulation ends when all cars departed

        total_cars = len(cars)
        parked_count = 0
        arrived_idx = 0
        last_arrival_time = (cars[-1].arrival_time if cars else 0)
        max_time = max(c.departure_time for c in cars) if cars else 0
        # we simulate from time=0 forward in minutes

        # an abstraction: event loop

        # maintain when next car arrives
        # We proceed minute per minute for simplicity (max 120 parking time; time may go max 100*10 + max t)
        # but since max number of cars 100 and max parking time 120, it's acceptable.

        while len(self.output_order) < total_cars:

            # Arrival of cars
            # Cars arrive exact at their arrival_time
            while arrived_idx < total_cars and cars[arrived_idx].arrival_time == self.current_time:
                car = cars[arrived_idx]
                self.park_car(car)
                arrived_idx += 1

            # depart cars and park waiting at this time
            self.tick()
            self.current_time += 1


def parse_input() -> List[Tuple[int, int, List[int]]]:
    import sys
    dataset = []
    lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while idx < len(lines):
        if lines[idx].strip() == '':
            idx += 1
            continue
        m_n = lines[idx].split()
        if len(m_n) < 2:
            break
        m, n = int(m_n[0]), int(m_n[1])
        idx += 1
        if m == 0 and n == 0:
            break
        t_list = []
        for _ in range(n):
            t_list.append(int(lines[idx]))
            idx += 1
        dataset.append((m, n, t_list))
    return dataset


def main():
    dataset = parse_input()
    for (m, n, t_list) in dataset:
        parking_lot = ParkingLot(m)
        cars = []
        for i, t in enumerate(t_list):
            # arrival time every 10 minutes * index starting from 0 => i*10
            cars.append(Car(i + 1, t, i * 10))
        parking_lot.run_simulation(cars)
        print(' '.join(map(str, parking_lot.output_order)))


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.408840298652649
    2. 'abc' → logprob: -1.408840298652649
    3. 'deque' → logprob: -1.408840298652649
    4. 'Counter' → logprob: -2.1588401794433594
    5. ' defaultdict' → logprob: -2.1588401794433594
    6. ' Counter' → logprob: -4.033840179443359
    7. ' abc' → logprob: -4.658840179443359
    8. 'named' → logprob: -5.533840179443359
    9. ' deque' → logprob: -6.283840179443359
    10. '```' → logprob: -6.783840179443359

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010466400533914566
    2. '.' → logprob: -5.385466575622559
    3. '\' → logprob: -6.385466575622559
    4. '\(' → logprob: -6.385466575622559
    5. '\n' → logprob: -7.260466575622559
    6. '```' → logprob: -7.885466575622559
    7. '[' → logprob: -8.010466575622559
    8. 'newline' → logprob: -8.260466575622559
    9. ',' → logprob: -8.760466575622559
    10. '\[' → logprob: -8.885466575622559

Token 5: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7537786364555359
    2. '(' → logprob: -1.2537786960601807
    3. 'a' → logprob: -2.6287786960601807
    4. '\' → logprob: -3.1287786960601807
    5. '.' → logprob: -3.2537786960601807
    6. '\n' → logprob: -4.128778457641602
    7. ',' → logprob: -4.503778457641602
    8. 'newline' → logprob: -4.878778457641602
    9. '
' → logprob: -5.003778457641602
    10. '[' → logprob: -5.003778457641602

Token 6: ' typing' (ID: 34152)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.8912053108215332
    2. ' collections' → logprob: -1.0162053108215332
    3. ' itertools' → logprob: -1.8912053108215332
    4. ' typing' → logprob: -3.391205310821533
    5. ' sys' → logprob: -3.891205310821533
    6. ' heap' → logprob: -4.641205310821533
    7. ' os' → logprob: -5.266205310821533
    8. ' math' → logprob: -5.766205310821533
    9. ' copy' → logprob: -6.891205310821533
    10. ' time' → logprob: -7.891205310821533

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4818873405456543
    2. 'import' → logprob: -0.9818873405456543
    3. '.' → logprob: -5.106887340545654
    4. '_' → logprob: -8.106887817382812
    5. '.import' → logprob: -8.106887817382812
    6. '_import' → logprob: -8.481887817382812
    7. '[' → logprob: -8.481887817382812
    8. ' as' → logprob: -8.856887817382812
    9. ' ' → logprob: -9.481887817382812
    10. '```' → logprob: -9.481887817382812

Token 8: ' List' (ID: 2655)
  Prédit: ' De'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' De' → logprob: -0.5065551996231079
    2. 'Deque' → logprob: -1.256555199623108
    3. 'De' → logprob: -2.5065550804138184
    4. ' deque' → logprob: -4.631555080413818
    5. 'List' → logprob: -5.256555080413818
    6. ' List' → logprob: -5.381555080413818
    7. 'Any' → logprob: -5.631555080413818
    8. 'deque' → logprob: -5.756555080413818
    9. 'Iterable' → logprob: -6.506555080413818
    10. ' Optional' → logprob: -6.881555080413818

Token 9: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5470239520072937
    2. '
' → logprob: -1.9220240116119385
    3. 'def' → logprob: -2.5470240116119385
    4. '\n' → logprob: -2.6720240116119385
    5. '\' → logprob: -3.4220240116119385
    6. 'class' → logprob: -3.5470240116119385
    7. '

' → logprob: -3.5470240116119385
    8. '[' → logprob: -4.172023773193359
    9. '<|end|>' → logprob: -5.422023773193359
    10. ',' → logprob: -5.547023773193359

Token 10: ' Optional' (ID: 19351)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -1.1557732820510864
    2. 'Deque' → logprob: -1.4057732820510864
    3. ' De' → logprob: -1.5307732820510864
    4. 'deque' → logprob: -2.030773162841797
    5. ' Optional' → logprob: -2.530773162841797
    6. 'Optional' → logprob: -5.155773162841797
    7. ' Tuple' → logprob: -6.155773162841797
    8. 'De' → logprob: -6.780773162841797
    9. ' Callable' → logprob: -7.155773162841797
    10. ' Iterable' → logprob: -7.405773162841797

Token 11: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.29186880588531494
    2. '```' → logprob: -2.0418686866760254
    3. '
' → logprob: -2.1668686866760254
    4. '

' → logprob: -5.416868686676025
    5. 'def' → logprob: -6.291868686676025
    6. '\n' → logprob: -6.916868686676025
    7. '``' → logprob: -7.541868686676025
    8. '
' → logprob: -7.916868686676025
    9. ' class' → logprob: -8.416869163513184
    10. '\' → logprob: -8.666869163513184

Token 12: ' Tuple' (ID: 50841)
  Prédit: 'Deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Deque' → logprob: -1.1338974237442017
    2. 'deque' → logprob: -1.1338974237442017
    3. ' deque' → logprob: -1.5088974237442017
    4. ' De' → logprob: -2.758897304534912
    5. ' Union' → logprob: -3.508897304534912
    6. 'Tuple' → logprob: -4.883897304534912
    7. 'Any' → logprob: -5.008897304534912
    8. ' Tuple' → logprob: -5.008897304534912
    9. 'Iterable' → logprob: -5.633897304534912
    10. 'Union' → logprob: -5.633897304534912

Token 13: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8645773530006409
    2. '```' → logprob: -0.9895773530006409
    3. '
' → logprob: -1.739577293395996
    4. '\n' → logprob: -4.239577293395996
    5. '

' → logprob: -4.489577293395996
    6. '``' → logprob: -5.989577293395996
    7. '\' → logprob: -6.989577293395996
    8. 'def' → logprob: -7.114577293395996
    9. '
' → logprob: -7.364577293395996
    10. ' class' → logprob: -8.239577293395996

Token 14: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004162687808275223
    2. 'def' → logprob: -5.504162788391113
    3. '```' → logprob: -9.504162788391113
    4. ' class' → logprob: -11.754162788391113
    5. '<class' → logprob: -14.629162788391113
    6. '"class' → logprob: -15.254162788391113
    7. 'clas' → logprob: -15.504162788391113
    8. '-class' → logprob: -15.504162788391113
    9. 'de' → logprob: -15.754162788391113
    10. 'async' → logprob: -15.879162788391113

Token 15: ' Car' (ID: 4004)
  Prédit: ' Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -1.1474186182022095
    2. ' Solution' → logprob: -1.2724186182022095
    3. ' Binary' → logprob: -1.8974186182022095
    4. ' ' → logprob: -2.14741849899292
    5. ' Node' → logprob: -3.39741849899292
    6. ' My' → logprob: -3.64741849899292
    7. ' Queue' → logprob: -3.64741849899292
    8. ' Stack' → logprob: -4.64741849899292
    9. ' Graph' → logprob: -4.77241849899292
    10. ' De' → logprob: -4.77241849899292

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005740475375205278
    2. 'Queue' → logprob: -5.880740642547607
    3. '(' → logprob: -6.130740642547607
    4. 'Deque' → logprob: -8.50574016571045
    5. ':
' → logprob: -9.13074016571045
    6. 'Attributes' → logprob: -10.00574016571045
    7. 'Scheduler' → logprob: -10.00574016571045
    8. 'Details' → logprob: -10.75574016571045
    9. 'Data' → logprob: -10.75574016571045
    10. 'Deck' → logprob: -10.75574016571045

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5390401482582092
    2. '   ' → logprob: -1.2890400886535645
    3. '(' → logprob: -2.5390400886535645
    4. '<|end|>' → logprob: -3.5390400886535645
    5. ' ' → logprob: -3.9140400886535645
    6. '```' → logprob: -5.7890400886535645
    7. '  ' → logprob: -6.2890400886535645
    8. ' (' → logprob: -6.5390400886535645
    9. '    ' → logprob: -6.6640400886535645
    10. '(object' → logprob: -6.6640400886535645

Token 18: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.02112017571926117
    2. 'def' (adapté à ' def') → logprob: -4.521120071411133
    3. '   ' → logprob: -4.646120071411133
    4. '    ' → logprob: -8.896120071411133
    5. '```' → logprob: -9.271120071411133
    6. ' pass' → logprob: -9.646120071411133
    7. ' ' → logprob: -10.271120071411133
    8. ' __' → logprob: -11.271120071411133
    9. ' ```' → logprob: -11.396120071411133
    10. ' car' → logprob: -11.521120071411133

Token 19: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0024170377291738987
    2. '__' → logprob: -7.377417087554932
    3. 'itialize' → logprob: -7.502417087554932
    4. ' ' → logprob: -7.752417087554932
    5. ' init' → logprob: -8.377416610717773
    6. ' def' → logprob: -8.502416610717773
    7. ' _' → logprob: -9.502416610717773
    8. 'ialize' → logprob: -9.877416610717773
    9. ' ```' → logprob: -9.877416610717773
    10. ' ' → logprob: -10.002416610717773

Token 20: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.625
    3. ' init' → logprob: -17.25
    4. 'inite' → logprob: -18.5
    5. 'in' → logprob: -18.625
    6. 'int' → logprob: -20.125
    7. '	init' → logprob: -21.0
    8. 'innit' → logprob: -21.0
    9. '_init' → logprob: -21.125
    10. 'inti' → logprob: -21.875

Token 21: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.024191023781895638
    2. '__' → logprob: -3.77419114112854
    3. '__(
' → logprob: -7.524190902709961
    4. '(' → logprob: -8.774190902709961
    5. '(self' → logprob: -9.274190902709961
    6. '__((' → logprob: -9.774190902709961
    7. '__('' → logprob: -10.024190902709961
    8. '__(*' → logprob: -10.399190902709961
    9. '__("' → logprob: -12.399190902709961
    10. '_(' → logprob: -12.649190902709961

Token 22: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005537479883059859
    2. ' self' → logprob: -7.500553607940674
    3. '_self' → logprob: -15.625554084777832
    4. '	self' → logprob: -15.750554084777832
    5. ')' → logprob: -15.875554084777832
    6. '(self' → logprob: -16.125553131103516
    7. ' ' → logprob: -17.125553131103516
    8. ',' → logprob: -17.125553131103516
    9. ',self' → logprob: -17.875553131103516
    10. '   ' → logprob: -18.250553131103516

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4185999929904938
    2. 'self' → logprob: -1.4185999631881714
    3. ' self' → logprob: -3.168600082397461
    4. ' ,' → logprob: -3.793600082397461
    5. '(self' → logprob: -4.793600082397461
    6. ' car' → logprob: -5.168600082397461
    7. ')' → logprob: -5.293600082397461
    8. ' )' → logprob: -5.418600082397461
    9. ' (' → logprob: -5.918600082397461
    10. ' ' → logprob: -6.293600082397461

Token 24: ' car' (ID: 1669)
  Prédit: ' make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' make' → logprob: -0.13966543972492218
    2. 'make' → logprob: -2.514665365219116
    3. ' model' → logprob: -3.389665365219116
    4. ' id' → logprob: -5.639665603637695
    5. 'model' → logprob: -5.639665603637695
    6. 'self' → logprob: -6.389665603637695
    7. ' position' → logprob: -6.389665603637695
    8. ' self' → logprob: -6.389665603637695
    9. ' color' → logprob: -6.639665603637695
    10. 'id' → logprob: -7.639665603637695

Token 25: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.015401146374642849
    2. '_type' → logprob: -4.265401363372803
    3. '_name' → logprob: -7.265401363372803
    4. '_model' → logprob: -8.015400886535645
    5. '_' → logprob: -9.390400886535645
    6. '_make' → logprob: -10.265400886535645
    7. 's' → logprob: -10.515400886535645
    8. 'type' → logprob: -11.265400886535645
    9. ' _' → logprob: -11.765400886535645
    10. '_list' → logprob: -12.140400886535645

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000718626833986491
    2. ',' → logprob: -7.750718593597412
    3. ':int' → logprob: -8.25071907043457
    4. ' :' → logprob: -10.75071907043457
    5. '):' → logprob: -12.62571907043457
    6. ')' → logprob: -14.50071907043457
    7. ':str' → logprob: -14.62571907043457
    8. ' ,' → logprob: -14.75071907043457
    9. '=' → logprob: -15.12571907043457
    10. '<|end|>' → logprob: -15.87571907043457

Token 27: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47436466813087463
    2. ' int' → logprob: -0.9743646383285522
    3. ' str' → logprob: -8.349364280700684
    4. 'str' → logprob: -10.099364280700684
    5. ':int' → logprob: -12.849364280700684
    6. '[int' → logprob: -12.849364280700684
    7. '=int' → logprob: -13.224364280700684
    8. ' ' → logprob: -13.849364280700684
    9. '<int' → logprob: -13.849364280700684
    10. '	int' → logprob: -15.349364280700684

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001640876434976235
    2. '):' → logprob: -9.500164031982422
    3. ')' → logprob: -9.625164031982422
    4. ' ,' → logprob: -10.875164031982422
    5. '<|end|>' → logprob: -13.375164031982422
    6. ',
' → logprob: -14.125164031982422
    7. ',int' → logprob: -14.625164031982422
    8. ':' → logprob: -15.250164031982422
    9. '‌,' → logprob: -15.250164031982422
    10. '<|end|>' → logprob: -15.500164031982422

Token 29: ' park' (ID: 11796)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.859961211681366
    2. ' model' → logprob: -1.1099612712860107
    3. ' make' → logprob: -1.6099612712860107
    4. ' color' → logprob: -3.9849612712860107
    5. ' location' → logprob: -5.234961032867432
    6. 'model' → logprob: -5.484961032867432
    7. 'make' → logprob: -5.484961032867432
    8. 'position' → logprob: -5.859961032867432
    9. ' car' → logprob: -5.984961032867432
    10. ' brand' → logprob: -6.234961032867432

Token 30: '_duration' (ID: 59503)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.2257811576128006
    2. 'ing' → logprob: -1.6007812023162842
    3. '_time' → logprob: -8.225781440734863
    4. 'e' → logprob: -10.850781440734863
    5. '_' → logprob: -10.975781440734863
    6. 'er' → logprob: -11.725781440734863
    7. '_id' → logprob: -11.725781440734863
    8. '_duration' → logprob: -12.225781440734863
    9. '_space' → logprob: -12.350781440734863
    10. ')' → logprob: -12.350781440734863

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.542423165636137e-05
    2. '):' → logprob: -9.750085830688477
    3. ':int' → logprob: -11.125085830688477
    4. ')' → logprob: -11.875085830688477
    5. ' :' → logprob: -13.125085830688477
    6. '=' → logprob: -13.250085830688477
    7. ',' → logprob: -14.625085830688477
    8. '_:' → logprob: -15.500085830688477
    9. ' ):' → logprob: -15.875085830688477
    10. '_seconds' → logprob: -15.875085830688477

Token 32: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18010729551315308
    2. 'int' → logprob: -1.8051073551177979
    3. ' Optional' → logprob: -8.180107116699219
    4. ' float' → logprob: -10.305107116699219
    5. 'Optional' → logprob: -10.430107116699219
    6. ')' → logprob: -11.680107116699219
    7. 'float' → logprob: -12.805107116699219
    8. ':int' → logprob: -13.055107116699219
    9. ' ' → logprob: -13.305107116699219
    10. '[int' → logprob: -13.680107116699219

Token 33: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1570046991109848
    2. ',' → logprob: -2.0320045948028564
    3. ')' → logprob: -4.2820048332214355
    4. ':' → logprob: -8.032004356384277
    5. '):
' → logprob: -9.657004356384277
    6. ' ):' → logprob: -11.782004356384277
    7. '):
' → logprob: -12.782004356384277
    8. ' ,' → logprob: -13.032004356384277
    9. '   ' → logprob: -13.032004356384277
    10. '=' → logprob: -13.157004356384277

Token 34: ' arrival' (ID: 24861)
  Prédit: ' arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrival' → logprob: -0.6612448692321777
    2. ' entry' → logprob: -1.7862448692321777
    3. ' position' → logprob: -2.6612448692321777
    4. ' start' → logprob: -3.0362448692321777
    5. ' car' → logprob: -3.6612448692321777
    6. ' is' → logprob: -4.036244869232178
    7. ' license' → logprob: -4.286244869232178
    8. ' color' → logprob: -4.536244869232178
    9. ' direction' → logprob: -4.786244869232178
    10. ' exit' → logprob: -5.036244869232178

Token 35: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.229872087715194e-05
    2. '_timestamp' → logprob: -10.250061988830566
    3. '_' → logprob: -11.000061988830566
    4. '_delay' → logprob: -13.625061988830566
    5. '_date' → logprob: -14.125061988830566
    6. ':' → logprob: -14.125061988830566
    7. '_type' → logprob: -14.125061988830566
    8. '_interval' → logprob: -14.250061988830566
    9. '_day' → logprob: -14.250061988830566
    10. '_times' → logprob: -14.375061988830566

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00904527585953474
    2. '):' → logprob: -4.759045124053955
    3. ')' → logprob: -7.884045124053955
    4. ' :' → logprob: -11.259045600891113
    5. '):
' → logprob: -11.259045600891113
    6. ' ):' → logprob: -11.509045600891113
    7. ':int' → logprob: -11.509045600891113
    8. '=' → logprob: -12.634045600891113
    9. '<|end|>' → logprob: -13.384045600891113
    10. ',' → logprob: -14.009045600891113

Token 37: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2047659009695053
    2. 'int' → logprob: -1.7047659158706665
    3. ' Optional' → logprob: -5.829765796661377
    4. 'Optional' → logprob: -8.329766273498535
    5. ':int' → logprob: -9.204766273498535
    6. ')' → logprob: -10.079766273498535
    7. '[int' → logprob: -11.829766273498535
    8. ' ' → logprob: -11.954766273498535
    9. ' )' → logprob: -13.329766273498535
    10. ' float' → logprob: -13.454766273498535

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01924741454422474
    2. ')' → logprob: -4.019247531890869
    3. ',' → logprob: -6.894247531890869
    4. '):
' → logprob: -10.019247055053711
    5. ':' → logprob: -10.394247055053711
    6. ' ):' → logprob: -12.394247055053711
    7. '):
' → logprob: -13.144247055053711
    8. ')->' → logprob: -14.394247055053711
    9. '   ' → logprob: -14.519247055053711
    10. ' )' → logprob: -15.269247055053711

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.268254896393046e-05
    2. '<|end|>' → logprob: -10.500082969665527
    3. ')' → logprob: -11.000082969665527
    4. 'self' → logprob: -11.625082969665527
    5. ' self' → logprob: -12.125082969665527
    6. '   ' → logprob: -12.250082969665527
    7. '      ' → logprob: -12.625082969665527
    8. ' ' → logprob: -12.875082969665527
    9. '        ' → logprob: -13.000082969665527
    10. ' ' → logprob: -13.250082969665527

Token 40: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2664013206958771
    2. '       ' → logprob: -1.7664012908935547
    3. ' self' → logprob: -2.7664012908935547
    4. '   ' → logprob: -11.516401290893555
    5. ' ' → logprob: -12.141401290893555
    6. '	self' → logprob: -12.391401290893555
    7. ' ' → logprob: -12.391401290893555
    8. 'super' → logprob: -12.641401290893555
    9. '```' → logprob: -12.891401290893555
    10. '_self' → logprob: -13.766401290893555

Token 41: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.16862662136554718
    2. '.' → logprob: -1.9186266660690308
    3. '._' → logprob: -5.41862678527832
    4. '_car' → logprob: -5.79362678527832
    5. 'car' → logprob: -8.04362678527832
    6. '_id' → logprob: -8.41862678527832
    7. ' .' → logprob: -9.29362678527832
    8. ' car' → logprob: -9.41862678527832
    9. '.id' → logprob: -9.54362678527832
    10. '_' → logprob: -10.04362678527832

Token 42: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.5690089639974758e-05
    2. '_' → logprob: -12.000015258789062
    3. '._' → logprob: -12.000015258789062
    4. '_ids' → logprob: -13.875015258789062
    5. ' _' → logprob: -14.000015258789062
    6. '_type' → logprob: -14.500015258789062
    7. '.' → logprob: -14.875015258789062
    8. '_i' → logprob: -15.250015258789062
    9. '_data' → logprob: -16.750015258789062
    10. ')' → logprob: -16.750015258789062

Token 43: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5799438953399658
    2. ' =' → logprob: -1.5799438953399658
    3. ',' → logprob: -1.7049438953399658
    4. '<|end|>' → logprob: -3.204943895339966
    5. ':' → logprob: -5.579943656921387
    6. ' ,' → logprob: -6.204943656921387
    7. '<|end|>' → logprob: -6.204943656921387
    8. ' ' → logprob: -6.329943656921387
    9. ')' → logprob: -6.454943656921387
    10. '   ' → logprob: -8.829943656921387

Token 44: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.018150413408875465
    2. 'car' → logprob: -4.018150329589844
    3. '	car' → logprob: -15.518150329589844
    4. ' ' → logprob: -16.018150329589844
    5. ' ' → logprob: -16.143150329589844
    6. '_car' → logprob: -16.393150329589844
    7. '(car' → logprob: -18.393150329589844
    8. '.car' → logprob: -19.893150329589844
    9. 'Car' → logprob: -20.143150329589844
    10. ' Car' → logprob: -21.518150329589844

Token 45: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.008931032381951809
    2. '_' → logprob: -4.7589311599731445
    3. '_d' → logprob: -8.508931159973145
    4. 'd' → logprob: -10.258931159973145
    5. ')' → logprob: -10.633931159973145
    6. ' _' → logprob: -10.758931159973145
    7. '_ids' → logprob: -11.883931159973145
    8. '_i' → logprob: -12.008931159973145
    9. '._' → logprob: -12.133931159973145
    10. '_token' → logprob: -12.258931159973145

Token 46: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004480085335671902
    2. '<|end|>' → logprob: -6.004479885101318
    3. 'self' → logprob: -6.754479885101318
    4. '
' → logprob: -7.254479885101318
    5. '<|end|>' → logprob: -10.379480361938477
    6. '```' → logprob: -11.004480361938477
    7. ' self' → logprob: -11.379480361938477
    8. '        
' → logprob: -11.504480361938477
    9. '   ' → logprob: -11.629480361938477
    10. 'newline' → logprob: -11.754480361938477

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014650908298790455
    2. 'self' → logprob: -4.264650821685791
    3. '<|end|>' → logprob: -8.26465129852295
    4. ' self' → logprob: -8.76465129852295
    5. ',' → logprob: -10.88965129852295
    6. ' ' → logprob: -11.38965129852295
    7. '
' → logprob: -11.38965129852295
    8. '   ' → logprob: -12.13965129852295
    9. '        ' → logprob: -12.51465129852295
    10. '        
' → logprob: -12.63965129852295

Token 48: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4349360167980194
    2. ' self' → logprob: -1.1849360466003418
    3. '       ' → logprob: -3.059936046600342
    4. '        ' → logprob: -10.809935569763184
    5. ' ' → logprob: -12.059935569763184
    6. ' ' → logprob: -12.309935569763184
    7. '	self' → logprob: -13.434935569763184
    8. '```' → logprob: -13.934935569763184
    9. '_self' → logprob: -13.934935569763184
    10. ',' → logprob: -14.559935569763184

Token 49: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0062878066673874855
    2. '.car' → logprob: -5.131287574768066
    3. ' .' → logprob: -9.256287574768066
    4. '._' → logprob: -9.631287574768066
    5. '.arr' → logprob: -9.881287574768066
    6. '.period' → logprob: -10.756287574768066
    7. '.vehicle' → logprob: -11.006287574768066
    8. '.space' → logprob: -11.256287574768066
    9. '.is' → logprob: -11.256287574768066
    10. '```' → logprob: -12.006287574768066

Token 50: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.0004195906512904912
    2. 'id' → logprob: -8.625419616699219
    3. 'car' → logprob: -9.250419616699219
    4. 'parking' → logprob: -9.625419616699219
    5. 'arrival' → logprob: -10.000419616699219
    6. '_id' → logprob: -11.875419616699219
    7. 'd' → logprob: -12.625419616699219
    8. 'par' → logprob: -12.750419616699219
    9. 'p' → logprob: -13.000419616699219
    10. ' park' → logprob: -13.000419616699219

Token 51: '_duration' (ID: 59503)
  Prédit: '_duration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -0.009277388453483582
    2. '_' → logprob: -5.13427734375
    3. '_time' → logprob: -5.75927734375
    4. ' _' → logprob: -9.50927734375
    5. 'ing' → logprob: -10.38427734375
    6. 'ed' → logprob: -10.88427734375
    7. '_length' → logprob: -11.50927734375
    8. '_type' → logprob: -11.50927734375
    9. '_space' → logprob: -12.00927734375
    10. '```' → logprob: -12.25927734375

Token 52: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7870906591415405
    2. '=' → logprob: -1.0370906591415405
    3. ' =' → logprob: -1.9120906591415405
    4. '<|end|>' → logprob: -3.66209077835083
    5. ',' → logprob: -4.91209077835083
    6. ')' → logprob: -5.78709077835083
    7. ' ,' → logprob: -6.16209077835083
    8. '<|end|>' → logprob: -6.28709077835083
    9. ' ' → logprob: -7.66209077835083
    10. ' )' → logprob: -8.037090301513672

Token 53: ' park' (ID: 11796)
  Prédit: ' park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' park' → logprob: -0.006999996956437826
    2. 'park' → logprob: -5.006999969482422
    3. ' car' → logprob: -8.381999969482422
    4. ' ' → logprob: -10.006999969482422
    5. ' ' → logprob: -11.881999969482422
    6. ' parking' → logprob: -14.256999969482422
    7. '```' → logprob: -14.381999969482422
    8. 'car' → logprob: -14.381999969482422
    9. ' par' → logprob: -14.631999969482422
    10. ' parque' → logprob: -14.756999969482422

Token 54: '_duration' (ID: 59503)
  Prédit: '_duration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -0.28945502638816833
    2. '_' → logprob: -1.6644550561904907
    3. '_time' → logprob: -2.789454936981201
    4. ' _' → logprob: -8.28945541381836
    5. 'ed' → logprob: -9.41445541381836
    6. ')' → logprob: -9.91445541381836
    7. 'time' → logprob: -10.28945541381836
    8. 'ing' → logprob: -10.41445541381836
    9. '_DURATION' → logprob: -10.41445541381836
    10. 'duration' → logprob: -11.03945541381836

Token 55: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002877984195947647
    2. 'self' → logprob: -6.377878189086914
    3. '
' → logprob: -7.002878189086914
    4. '<|end|>' → logprob: -8.502878189086914
    5. ' self' → logprob: -10.877878189086914
    6. '```' → logprob: -12.002878189086914
    7. '<|end|>' → logprob: -12.127878189086914
    8. ',' → logprob: -12.252878189086914
    9. '        
' → logprob: -12.377878189086914
    10. 'newline' → logprob: -12.377878189086914

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07661669701337814
    2. 'self' → logprob: -2.7016167640686035
    3. '<|end|>' → logprob: -5.7016167640686035
    4. ' self' → logprob: -7.2016167640686035
    5. '
' → logprob: -7.5766167640686035
    6. '        
' → logprob: -7.9516167640686035
    7. '\' → logprob: -7.9516167640686035
    8. ' ' → logprob: -8.201616287231445
    9. 'newline' → logprob: -8.576616287231445
    10. ',' → logprob: -8.576616287231445

Token 57: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.34728074073791504
    2. '       ' → logprob: -1.347280740737915
    3. ' self' → logprob: -3.472280740737915
    4. '<|end|>' → logprob: -6.597280502319336
    5. ' ' → logprob: -7.347280502319336
    6. '\' → logprob: -9.722280502319336
    7. '```' → logprob: -10.222280502319336
    8. '        ' → logprob: -10.222280502319336
    9. '        
' → logprob: -10.347280502319336
    10. '	self' → logprob: -10.597280502319336

Token 58: '.arr' (ID: 76200)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4015309512615204
    2. '.arr' → logprob: -1.1515309810638428
    3. '.car' → logprob: -4.776530742645264
    4. '_arr' → logprob: -6.026530742645264
    5. '._' → logprob: -6.026530742645264
    6. '_' → logprob: -7.651530742645264
    7. 'arrival' → logprob: -7.776530742645264
    8. ' .' → logprob: -9.151531219482422
    9. 'arr' → logprob: -9.401531219482422
    10. '=' → logprob: -10.151531219482422

Token 59: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.021420443430542946
    2. '_' → logprob: -4.146420478820801
    3. '_time' → logprob: -6.271420478820801
    4. 'i' → logprob: -6.396420478820801
    5. 'iv' → logprob: -7.021420478820801
    6. 'ived' → logprob: -8.6464204788208
    7. 'ive' → logprob: -8.7714204788208
    8. '_i' → logprob: -9.0214204788208
    9. 'a' → logprob: -9.1464204788208
    10. 'ivals' → logprob: -9.3964204788208

Token 60: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0003418991982471198
    2. '_' → logprob: -8.00034236907959
    3. '_times' → logprob: -13.25034236907959
    4. '_t' → logprob: -13.75034236907959
    5. '_line' → logprob: -14.12534236907959
    6. ')_' → logprob: -14.12534236907959
    7. ')' → logprob: -14.87534236907959
    8. ' _' → logprob: -15.37534236907959
    9. '_timestamp' → logprob: -15.75034236907959
    10. '_Time' → logprob: -15.75034236907959

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132677972316742
    2. '=' → logprob: -1.3132678270339966
    3. ')' → logprob: -12.813267707824707
    4. ' ' → logprob: -13.438267707824707
    5. '<|end|>' → logprob: -14.313267707824707
    6. ',' → logprob: -15.688267707824707
    7. ' ' → logprob: -15.813267707824707
    8. '    ' → logprob: -15.938267707824707
    9. ' =
' → logprob: -16.063268661499023
    10. ' )' → logprob: -16.438268661499023

Token 62: ' arrival' (ID: 24861)
  Prédit: ' arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrival' → logprob: -0.25197669863700867
    2. 'arrival' → logprob: -1.501976728439331
    3. 'arr' → logprob: -10.00197696685791
    4. ' ' → logprob: -13.37697696685791
    5. 'Arrival' → logprob: -14.87697696685791
    6. ' ' → logprob: -15.75197696685791
    7. ' arr' → logprob: -15.87697696685791
    8. ' arrivals' → logprob: -17.501976013183594
    9. ' ar' → logprob: -17.626976013183594
    10. 'ar' → logprob: -17.626976013183594

Token 63: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -12.125005722045898
    3. '_t' → logprob: -16.0000057220459
    4. ' _' → logprob: -16.2500057220459
    5. 'time' → logprob: -16.3750057220459
    6. '_token' → logprob: -16.7500057220459
    7. 'Time' → logprob: -17.0000057220459
    8. '_times' → logprob: -17.3750057220459
    9. '_TIME' → logprob: -17.8750057220459
    10. '_tim' → logprob: -18.0000057220459

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03186779096722603
    2. '<|end|>' → logprob: -3.531867742538452
    3. '<|end|>' → logprob: -7.406867980957031
    4. '

' → logprob: -7.781867980957031
    5. '   ' → logprob: -8.031867980957031
    6. '    
' → logprob: -8.781867980957031
    7. 'newline' → logprob: -8.906867980957031
    8. '\n' → logprob: -9.031867980957031
    9. '```' → logprob: -9.531867980957031
    10. '' → logprob: -10.031867980957031

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028101949021220207
    2. '<|end|>' → logprob: -4.153101921081543
    3. '   ' → logprob: -5.028101921081543
    4. '       ' → logprob: -6.403101921081543
    5. '    
' → logprob: -6.903101921081543
    6. '

' → logprob: -7.153101921081543
    7. '<|end|>' → logprob: -7.403101921081543
    8. '\n' → logprob: -8.153101921081543
    9. '' → logprob: -8.403101921081543
    10. 'newline' → logprob: -8.403101921081543

Token 66: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '.depart' (ID: 192809)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3852546513080597
    2. '._' → logprob: -2.1352546215057373
    3. '.status' → logprob: -2.8852546215057373
    4. '.is' → logprob: -3.3852546215057373
    5. '_status' → logprob: -3.6352546215057373
    6. '_time' → logprob: -4.010254859924316
    7. '.available' → logprob: -4.885254859924316
    8. '```' → logprob: -5.010254859924316
    9. '_queue' → logprob: -5.260254859924316
    10. ' .' → logprob: -5.385254859924316

Token 68: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.004096093121916056
    2. '_time' → logprob: -5.504096031188965
    3. 'e' → logprob: -12.379096031188965
    4. 'time' → logprob: -12.629096031188965
    5. '_' → logprob: -12.754096031188965
    6. 'u' → logprob: -13.004096031188965
    7. '```' → logprob: -13.004096031188965
    8. 'URE' → logprob: -14.504096031188965
    9. 'a' → logprob: -14.879096031188965
    10. 'ue' → logprob: -15.129096031188965

Token 69: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.002494802698493004
    2. '_' → logprob: -6.002494812011719
    3. ' _' → logprob: -12.627494812011719
    4. '=' → logprob: -12.627494812011719
    5. 'time' → logprob: -12.627494812011719
    6. 'Time' → logprob: -12.627494812011719
    7. '_timestamp' → logprob: -13.377494812011719
    8. ' =' → logprob: -14.127494812011719
    9. '_Time' → logprob: -14.127494812011719
    10. '_TIME' → logprob: -14.127494812011719

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16035056114196777
    2. '=' → logprob: -1.9103505611419678
    3. '=None' → logprob: -9.035350799560547
    4. ':' → logprob: -12.535350799560547
    5. ' ' → logprob: -12.910350799560547
    6. ' None' → logprob: -14.285350799560547
    7. '<|end|>' → logprob: -15.285350799560547
    8. 'None' → logprob: -16.535350799560547
    9. ' =
' → logprob: -16.660350799560547
    10. '  ' → logprob: -16.785350799560547

Token 71: ' arrival' (ID: 24861)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.05702715739607811
    2. 'None' → logprob: -2.9320271015167236
    3. '0' → logprob: -6.432027339935303
    4. ' ' → logprob: -8.432026863098145
    5. ' arrival' → logprob: -8.432026863098145
    6. 'arrival' → logprob: -9.682026863098145
    7. ' -' → logprob: -10.932026863098145
    8. ' self' → logprob: -11.932026863098145
    9. '=None' → logprob: -12.807026863098145
    10. '-' → logprob: -13.057026863098145

Token 72: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.371605948312208e-05
    2. '_' → logprob: -10.375053405761719
    3. 'time' → logprob: -12.875053405761719
    4. '```' → logprob: -13.000053405761719
    5. ' _' → logprob: -13.125053405761719
    6. '_token' → logprob: -13.750053405761719
    7. ')_' → logprob: -13.875053405761719
    8. '_TIME' → logprob: -13.875053405761719
    9. '_space' → logprob: -14.000053405761719
    10. '_val' → logprob: -14.000053405761719

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.422182559967041
    2. '<|end|>' → logprob: -1.297182559967041
    3. ' +' → logprob: -2.672182559967041
    4. '<|end|>' → logprob: -6.547182559967041
    5. ' ' → logprob: -7.672182559967041
    6. ' +
' → logprob: -10.797182083129883
    7. ')' → logprob: -11.797182083129883
    8. '```' → logprob: -11.797182083129883
    9. '+self' → logprob: -12.047182083129883
    10. '	' → logprob: -12.422182083129883

Token 74: ' park' (ID: 11796)
  Prédit: ' park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' park' → logprob: -0.18044036626815796
    2. 'park' → logprob: -1.8054404258728027
    3. ' self' → logprob: -8.055439949035645
    4. 'self' → logprob: -8.430439949035645
    5. ' ' → logprob: -9.180439949035645
    6. ' car' → logprob: -10.555439949035645
    7. '   ' → logprob: -11.180439949035645
    8. 'car' → logprob: -12.305439949035645
    9. ' parking' → logprob: -13.055439949035645
    10. '```' → logprob: -13.305439949035645

Token 75: '_duration' (ID: 59503)
  Prédit: '_duration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -0.00011903966515092179
    2. '_' → logprob: -9.25011920928955
    3. '_d' → logprob: -10.75011920928955
    4. '_time' → logprob: -14.37511920928955
    5. ' _' → logprob: -14.75011920928955
    6. '_DURATION' → logprob: -15.25011920928955
    7. '_
' → logprob: -17.250118255615234
    8. '```' → logprob: -17.875118255615234
    9. '_depth' → logprob: -18.000118255615234
    10. '\' → logprob: -18.125118255615234

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012155230157077312
    2. '

' → logprob: -4.512155055999756
    3. '


' → logprob: -7.887155055999756
    4. '   ' → logprob: -8.137155532836914
    5. '<|end|>' → logprob: -9.012155532836914
    6. '```' → logprob: -9.387155532836914
    7. '    
' → logprob: -9.512155532836914
    8. 'class' → logprob: -9.762155532836914
    9. '
    
' → logprob: -10.762155532836914
    10. '
' → logprob: -10.762155532836914

Token 77: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.037456147372722626
    2. '

' → logprob: -3.7874560356140137
    3. '<|end|>' → logprob: -4.412456035614014
    4. '


' → logprob: -7.162456035614014
    5. 'class' → logprob: -7.662456035614014
    6. '<|end|>' → logprob: -8.037456512451172
    7. '```' → logprob: -8.662456512451172
    8. '
' → logprob: -9.787456512451172
    9. '    
' → logprob: -10.037456512451172
    10. '   ' → logprob: -10.162456512451172

Token 78: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022085100412368774
    2. '

' → logprob: -4.022085189819336
    3. '<|end|>' → logprob: -6.147085189819336
    4. '


' → logprob: -7.272085189819336
    5. '```' → logprob: -8.272085189819336
    6. '    
' → logprob: -8.522085189819336
    7. '   ' → logprob: -8.647085189819336
    8. '
    
' → logprob: -9.022085189819336
    9. '\n' → logprob: -9.397085189819336
    10. '<|end|>' → logprob: -9.772085189819336

Token 79: ' park' (ID: 11796)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0592386722564697
    2. 'self' → logprob: -1.1842386722564697
    3. '       ' → logprob: -1.6842386722564697
    4. '```' → logprob: -3.1842386722564697
    5. 'pass' → logprob: -3.1842386722564697
    6. '    ' → logprob: -4.184238433837891
    7. '   ' → logprob: -4.309238433837891
    8. '        ' → logprob: -4.309238433837891
    9. '#' → logprob: -5.309238433837891
    10. ' ' → logprob: -5.684238433837891

Token 80: '_position' (ID: 23739)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.04060092568397522
    2. 'ing' → logprob: -4.165600776672363
    3. '_time' → logprob: -4.415600776672363
    4. '   ' → logprob: -5.915600776672363
    5. '_status' → logprob: -5.915600776672363
    6. '_duration' → logprob: -6.415600776672363
    7. '       ' → logprob: -6.915600776672363
    8. '_' → logprob: -7.415600776672363
    9. '_times' → logprob: -7.665600776672363
    10. 'd' → logprob: -7.790600776672363

Token 81: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03306471183896065
    2. '=' → logprob: -3.533064603805542
    3. ' ' → logprob: -6.533064842224121
    4. ':' → logprob: -7.158064842224121
    5. '=None' → logprob: -7.533064842224121
    6. '<|end|>' → logprob: -7.658064842224121
    7. ' None' → logprob: -10.783064842224121
    8. 'None' → logprob: -11.658064842224121
    9. ' :' → logprob: -11.908064842224121
    10. '   ' → logprob: -11.908064842224121

Token 82: ' None' (ID: 4662)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.3755064904689789
    2. 'Optional' → logprob: -1.3755065202713013
    3. ' None' → logprob: -3.6255064010620117
    4. 'None' → logprob: -3.7505064010620117
    5. 'int' → logprob: -4.875506401062012
    6. ' int' → logprob: -6.000506401062012
    7. ' ' → logprob: -10.125506401062012
    8. '   ' → logprob: -11.375506401062012
    9. 'self' → logprob: -11.375506401062012
    10. '	Optional' → logprob: -12.000506401062012

Token 83: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05658499523997307
    2. '=' → logprob: -2.9315850734710693
    3. '=None' → logprob: -7.43158483505249
    4. ' ' → logprob: -7.68158483505249
    5. ' None' → logprob: -7.93158483505249
    6. 'None' → logprob: -8.931585311889648
    7. '<|end|>' → logprob: -8.931585311889648
    8. ':' → logprob: -11.931585311889648
    9. '   ' → logprob: -12.056585311889648
    10. ',' → logprob: -12.431585311889648

Token 84: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.163550466299057
    2. ' the' → logprob: -2.41355037689209
    3. 'not' → logprob: -3.41355037689209
    4. ' self' → logprob: -4.16355037689209
    5. ' None' → logprob: -5.28855037689209
    6. 'None' → logprob: -5.78855037689209
    7. 'the' → logprob: -5.91355037689209
    8. 'self' → logprob: -6.66355037689209
    9. ' car' → logprob: -7.66355037689209
    10. ' no' → logprob: -9.41355037689209

Token 85: ' parked' (ID: 79911)
  Prédit: ' parked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parked' → logprob: -0.4074498116970062
    2. ' None' → logprob: -2.032449722290039
    3. 'None' → logprob: -2.532449722290039
    4. 'park' → logprob: -2.657449722290039
    5. ' yet' → logprob: -3.282449722290039
    6. '```' → logprob: -5.032449722290039
    7. ' assigned' → logprob: -5.907449722290039
    8. ' park' → logprob: -5.907449722290039
    9. '_' → logprob: -6.657449722290039
    10. ' ' → logprob: -7.657449722290039

Token 86: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49032828211784363
    2. ',' → logprob: -2.115328311920166
    3. '<|end|>' → logprob: -2.115328311920166
    4. 'self' → logprob: -2.740328311920166
    5. ' None' → logprob: -3.615328311920166
    6. ' self' → logprob: -4.115328311920166
    7. ' ' → logprob: -4.240328311920166
    8. 'None' → logprob: -4.240328311920166
    9. ' ,' → logprob: -5.865328311920166
    10. '   ' → logprob: -6.865328311920166

Token 87: ' else' (ID: 1203)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.46556973457336426
    2. ' int' → logprob: -2.0905697345733643
    3. ' or' → logprob: -2.3405697345733643
    4. 'Optional' → logprob: -2.5905697345733643
    5. ' Optional' → logprob: -3.9655697345733643
    6. ' else' → logprob: -4.590569496154785
    7. 'or' → logprob: -4.715569496154785
    8. '       ' → logprob: -4.965569496154785
    9. 'else' → logprob: -5.215569496154785
    10. ' otherwise' → logprob: -5.215569496154785

Token 88: ' (' (ID: 350)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03932357206940651
    2. ' an' → logprob: -4.164323806762695
    3. ' int' → logprob: -4.539323806762695
    4. 'an' → logprob: -4.914323806762695
    5. ' the' → logprob: -6.164323806762695
    6. 'the' → logprob: -6.164323806762695
    7. 'Optional' → logprob: -7.664323806762695
    8. 'index' → logprob: -9.664323806762695
    9. ' Optional' → logprob: -9.664323806762695
    10. '[int' → logprob: -10.539323806762695

Token 89: 'space' (ID: 8775)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7528958320617676
    2. ' int' → logprob: -0.7528958320617676
    3. 'row' → logprob: -4.002895832061768
    4. ' Tuple' → logprob: -4.627895832061768
    5. ' row' → logprob: -5.002895832061768
    6. 'x' → logprob: -5.002895832061768
    7. 'Tuple' → logprob: -5.752895832061768
    8. ' Optional' → logprob: -6.627895832061768
    9. 'slot' → logprob: -7.002895832061768
    10. 'level' → logprob: -7.002895832061768

Token 90: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.2308419793844223
    2. '_id' → logprob: -2.105841875076294
    3. ',' → logprob: -3.480841875076294
    4. ' index' → logprob: -4.480842113494873
    5. ')' → logprob: -4.605842113494873
    6. 'index' → logprob: -4.855842113494873
    7. '_x' → logprob: -4.980842113494873
    8. '_number' → logprob: -4.980842113494873
    9. '_idx' → logprob: -5.855842113494873
    10. '_position' → logprob: -6.105842113494873

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3502740263938904
    2. ')' → logprob: -1.2252740859985352
    3. ':' → logprob: -7.350274085998535
    4. ' ' → logprob: -8.225274085998535
    5. ' ,' → logprob: -8.225274085998535
    6. ' or' → logprob: -8.850274085998535
    7. ' )' → logprob: -9.225274085998535
    8. '```' → logprob: -9.475274085998535
    9. '<|end|>' → logprob: -9.725274085998535
    10. ',)' → logprob: -10.100274085998535

Token 92: ' level' (ID: 3211)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.0843398571014404
    2. ' space' → logprob: -1.8343398571014404
    3. ' slot' → logprob: -2.0843398571014404
    4. ')' → logprob: -2.2093398571014404
    5. ' spot' → logprob: -2.7093398571014404
    6. ' offset' → logprob: -3.4593398571014404
    7. ' level' → logprob: -3.5843398571014404
    8. ' int' → logprob: -4.0843400955200195
    9. 'position' → logprob: -4.0843400955200195
    10. 'space' → logprob: -4.0843400955200195

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014835083857178688
    2. '_index' → logprob: -4.514834880828857
    3. ',' → logprob: -6.014834880828857
    4. ' )' → logprob: -6.764834880828857
    5. 'index' → logprob: -10.514835357666016
    6. ')
' → logprob: -11.139835357666016
    7. '_level' → logprob: -11.389835357666016
    8. '),' → logprob: -11.389835357666016
    9. ' ,' → logprob: -11.514835357666016
    10. '<|end|>' → logprob: -11.639835357666016

Token 94: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06812670081853867
    2. '
' → logprob: -3.568126678466797
    3. 'self' → logprob: -3.943126678466797
    4. '<|end|>' → logprob: -4.443126678466797
    5. ' self' → logprob: -5.818126678466797
    6. ' ' → logprob: -6.693126678466797
    7. '   ' → logprob: -7.193126678466797
    8. ' 
' → logprob: -7.943126678466797
    9. '        
' → logprob: -8.068126678466797
    10. ',' → logprob: -8.193126678466797

Token 95: ' level' (ID: 3211)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4276737868785858
    2. 'the' → logprob: -1.1776738166809082
    3. 'car' → logprob: -3.802673816680908
    4. ' parked' → logprob: -5.177673816680908
    5. ' car' → logprob: -5.427673816680908
    6. 'self' → logprob: -6.427673816680908
    7. ' it' → logprob: -6.677673816680908
    8. '       ' → logprob: -6.802673816680908
    9. 'space' → logprob: -7.552673816680908
    10. 'it' → logprob: -7.552673816680908

Token 96: '=' (ID: 28)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14448806643486023
    2. '<|end|>' → logprob: -2.3944880962371826
    3. ')' → logprob: -4.3944878578186035
    4. ' was' → logprob: -4.5194878578186035
    5. 'is' → logprob: -5.2694878578186035
    6. ' =' → logprob: -5.6444878578186035
    7. '=' → logprob: -6.2694878578186035
    8. ' ' → logprob: -6.2694878578186035
    9. ':' → logprob: -6.7694878578186035
    10. '=None' → logprob: -7.0194878578186035

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3542482256889343
    2. ' ' → logprob: -1.229248285293579
    3. '1' → logprob: -5.729248046875
    4. ' int' → logprob: -6.604248046875
    5. 'int' → logprob: -8.354248046875
    6. ' None' → logprob: -8.479248046875
    7. ' space' → logprob: -9.354248046875
    8. ' '' → logprob: -9.604248046875
    9. 'space' → logprob: -9.854248046875
    10. ' parking' → logprob: -9.854248046875

Token 98: ' bottom' (ID: 8725)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9934268593788147
    2. '<|end|>' → logprob: -0.9934268593788147
    3. ')' → logprob: -2.86842679977417
    4. '   ' → logprob: -3.24342679977417
    5. '_level' → logprob: -3.74342679977417
    6. ' ,' → logprob: -3.74342679977417
    7. ' ' → logprob: -3.99342679977417
    8. ' or' → logprob: -4.11842679977417
    9. '_space' → logprob: -4.36842679977417
    10. 'space' → logprob: -4.86842679977417

Token 100: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4333130121231079
    2. '1' → logprob: -1.058313012123108
    3. '<|end|>' → logprob: -5.933312892913818
    4. 'space' → logprob: -7.308312892913818
    5. ' space' → logprob: -7.433312892913818
    6. '0' → logprob: -8.808313369750977
    7. '(space' → logprob: -8.808313369750977
    8. '<|end|>' → logprob: -9.683313369750977
    9. ' or' → logprob: -9.808313369750977
    10. ' None' → logprob: -9.933313369750977

Token 101: ' top' (ID: 2344)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6988969445228577
    2. ',' → logprob: -1.198896884918213
    3. '<|end|>' → logprob: -2.323896884918213
    4. ')' → logprob: -3.073896884918213
    5. 'top' → logprob: -4.073896884918213
    6. 'or' → logprob: -4.698896884918213
    7. ' top' → logprob: -5.698896884918213
    8. ' ,' → logprob: -5.698896884918213
    9. ' )' → logprob: -5.948896884918213
    10. '=' → logprob: -6.073896884918213

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5295857787132263
    2. '<|end|>' → logprob: -2.029585838317871
    3. ' ' → logprob: -2.404585838317871
    4. '   ' → logprob: -3.029585838317871
    5. ' 
' → logprob: -3.029585838317871
    6. '       ' → logprob: -3.154585838317871
    7. '    
' → logprob: -4.279585838317871
    8. 'newline' → logprob: -5.154585838317871
    9. '  
' → logprob: -5.404585838317871
    10. '```' → logprob: -5.654585838317871

Token 104: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.21337080001831055
    2. ' self' → logprob: -1.9633708000183105
    3. '       ' → logprob: -2.9633708000183105
    4. '   ' → logprob: -9.963371276855469
    5. ' ' → logprob: -10.088371276855469
    6. '	self' → logprob: -12.088371276855469
    7. '
' → logprob: -12.713371276855469
    8. '  ' → logprob: -12.838371276855469
    9. '        ' → logprob: -12.963371276855469
    10. '        
' → logprob: -13.213371276855469

Token 105: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00017874970217235386
    2. '.car' → logprob: -9.250178337097168
    3. '._' → logprob: -9.750178337097168
    4. ' .' → logprob: -11.250178337097168
    5. '.pet' → logprob: -13.125178337097168
    6. '.period' → logprob: -13.625178337097168
    7. '.user' → logprob: -13.875178337097168
    8. '.
' → logprob: -14.125178337097168
    9. '​.' → logprob: -14.500178337097168
    10. '.​' → logprob: -14.625178337097168

Token 106: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -9.29340603761375e-05
    2. 'car' → logprob: -9.875092506408691
    3. 'parking' → logprob: -10.500092506408691
    4. 'departure' → logprob: -12.000092506408691
    5. 'position' → logprob: -12.250092506408691
    6. 'par' → logprob: -14.375092506408691
    7. ' park' → logprob: -14.750092506408691
    8. 'depart' → logprob: -15.375092506408691
    9. 'p' → logprob: -15.625092506408691
    10. '_' → logprob: -15.625092506408691

Token 107: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.02088436856865883
    2. '_' → logprob: -3.8958842754364014
    3. '_positions' → logprob: -8.52088451385498
    4. ' _' → logprob: -9.52088451385498
    5. '_space' → logprob: -10.52088451385498
    6. '_pos' → logprob: -11.02088451385498
    7. 'ed' → logprob: -11.27088451385498
    8. '_location' → logprob: -13.02088451385498
    9. '_
' → logprob: -13.39588451385498
    10. '```' → logprob: -13.52088451385498

Token 108: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890212535858154
    2. '=' → logprob: -2.578902244567871
    3. ' ' → logprob: -12.078902244567871
    4. '=None' → logprob: -12.078902244567871
    5. ':' → logprob: -14.953902244567871
    6. ' None' → logprob: -15.203902244567871
    7. ' =
' → logprob: -15.203902244567871
    8. '<|end|>' → logprob: -17.328901290893555
    9. ' =)' → logprob: -17.703901290893555
    10. ')' → logprob: -17.703901290893555

Token 109: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.5759422183036804
    2. 'Optional' → logprob: -0.8259422183036804
    3. '	Optional' → logprob: -13.200942039489746
    4. 'None' → logprob: -14.700942039489746
    5. ' ' → logprob: -15.825942039489746
    6. ' None' → logprob: -15.825942039489746
    7. '(Optional' → logprob: -16.200942993164062
    8. '.Optional' → logprob: -17.200942993164062
    9. '   ' → logprob: -17.325942993164062
    10. 'Opt' → logprob: -17.700942993164062

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.749814019713085e-06
    2. '[
' → logprob: -12.250006675720215
    3. '[int' → logprob: -13.500006675720215
    4. ' [' → logprob: -15.875006675720215
    5. '[List' → logprob: -15.875006675720215
    6. '=' → logprob: -16.37500762939453
    7. ' ' → logprob: -16.75000762939453
    8. '[(' → logprob: -16.87500762939453
    9. '<Tuple' → logprob: -17.37500762939453
    10. '```' → logprob: -17.37500762939453

Token 111: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0019348275382071733
    2. ' Tuple' → logprob: -6.251935005187988
    3. 'tuple' → logprob: -12.501935005187988
    4. 'Tu' → logprob: -13.501935005187988
    5. '[' → logprob: -14.876935005187988
    6. '   ' → logprob: -15.501935005187988
    7. ' tuple' → logprob: -15.501935005187988
    8. ' ' → logprob: -16.001934051513672
    9. '  ' → logprob: -16.626934051513672
    10. '_tuple' → logprob: -16.626934051513672

Token 112: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.45848218582978e-06
    2. 'int' → logprob: -13.12500286102295
    3. ' [' → logprob: -15.75000286102295
    4. '[in' → logprob: -16.000001907348633
    5. '[
' → logprob: -16.500001907348633
    6. '(int' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '[' → logprob: -18.125001907348633
    9. ']' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.750001907348633

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. ',int' → logprob: -10.000085830688477
    3. ' ,' → logprob: -10.750085830688477
    4. '[int' → logprob: -11.000085830688477
    5. 'int' → logprob: -13.625085830688477
    6. '[' → logprob: -14.625085830688477
    7. ',
' → logprob: -14.750085830688477
    8. '```' → logprob: -15.875085830688477
    9. ',float' → logprob: -16.000085830688477
    10. ' ' → logprob: -16.250085830688477

Token 114: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08901504427194595
    2. ' int' → logprob: -2.464015007019043
    3. '0' → logprob: -10.589015007019043
    4. ' ' → logprob: -11.214015007019043
    5. '[int' → logprob: -11.214015007019043
    6. ']int' → logprob: -11.839015007019043
    7. '	int' → logprob: -12.089015007019043
    8. '   ' → logprob: -13.214015007019043
    9. '  ' → logprob: -13.339015007019043
    10. '(int' → logprob: -13.714015007019043

Token 115: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.00024596223374828696
    2. ']]=' → logprob: -9.250246047973633
    3. ')]' → logprob: -9.375246047973633
    4. ' ]]' → logprob: -10.750246047973633
    5. ']' → logprob: -10.875246047973633
    6. ']]
' → logprob: -11.375246047973633
    7. ']]]' → logprob: -13.000246047973633
    8. ']]

' → logprob: -13.375246047973633
    9. ']])' → logprob: -13.625246047973633
    10. ']>' → logprob: -13.625246047973633

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.428823322057724
    2. '=' → logprob: -1.0538233518600464
    3. '=None' → logprob: -10.053823471069336
    4. ')' → logprob: -10.428823471069336
    5. ' ' → logprob: -10.678823471069336
    6. '<|end|>' → logprob: -11.428823471069336
    7. '   ' → logprob: -11.678823471069336
    8. '       ' → logprob: -13.178823471069336
    9. ']' → logprob: -13.303823471069336
    10. ' =
' → logprob: -14.303823471069336

Token 117: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.12692810595035553
    2. 'None' → logprob: -2.1269280910491943
    3. '=None' → logprob: -17.126928329467773
    4. '_None' → logprob: -17.626928329467773
    5. '(None' → logprob: -17.751928329467773
    6. ',None' → logprob: -19.626928329467773
    7. '.None' → logprob: -20.626928329467773
    8. '   ' → logprob: -20.626928329467773
    9. ' ' → logprob: -20.876928329467773
    10. ' ' → logprob: -21.501928329467773

Token 118: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1789364516735077
    2. '<|end|>' → logprob: -2.42893648147583
    3. '

' → logprob: -3.05393648147583
    4. '   ' → logprob: -4.30393648147583
    5. '    
' → logprob: -5.67893648147583
    6. '


' → logprob: -6.05393648147583
    7. '' → logprob: -6.05393648147583
    8. '<|end|>' → logprob: -6.55393648147583
    9. '



' → logprob: -6.80393648147583
    10. '\n' → logprob: -7.17893648147583

Token 119: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17043083906173706
    2. '

' → logprob: -2.170430898666382
    3. '


' → logprob: -4.420430660247803
    4. '   ' → logprob: -4.545430660247803
    5. '<|end|>' → logprob: -4.545430660247803
    6. '    
' → logprob: -5.920430660247803
    7. 'class' → logprob: -6.170430660247803
    8. '



' → logprob: -6.670430660247803
    9. ' 
' → logprob: -7.545430660247803
    10. '' → logprob: -7.545430660247803

Token 120: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017469331622123718
    2. '   ' → logprob: -5.14246940612793
    3. '

' → logprob: -5.39246940612793
    4. '<|end|>' → logprob: -6.01746940612793
    5. '    
' → logprob: -6.51746940612793
    6. 'class' → logprob: -7.26746940612793
    7. '
    
' → logprob: -7.51746940612793
    8. '


' → logprob: -7.64246940612793
    9. 'def' → logprob: -7.64246940612793
    10. 'newline' → logprob: -8.89246940612793

Token 121: ' When' (ID: 4296)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7835544347763062
    2. 'self' → logprob: -0.9085544347763062
    3. ' is' → logprob: -3.9085545539855957
    4. 'is' → logprob: -4.158554553985596
    5. 'park' → logprob: -4.533554553985596
    6. ' waiting' → logprob: -5.283554553985596
    7. 'def' → logprob: -5.283554553985596
    8. 'waiting' → logprob: -5.408554553985596
    9. ' parked' → logprob: -5.408554553985596
    10. ' def' → logprob: -5.533554553985596

Token 122: ' parked' (ID: 79911)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5840308666229248
    2. 'self' → logprob: -1.5840308666229248
    3. ' the' → logprob: -1.5840308666229248
    4. 'the' → logprob: -4.834031105041504
    5. '   ' → logprob: -6.709031105041504
    6. ' a' → logprob: -6.709031105041504
    7. 'park' → logprob: -6.834031105041504
    8. ' car' → logprob: -6.834031105041504
    9. '_arr' → logprob: -7.084031105041504
    10. ' queue' → logprob: -7.084031105041504

Token 123: ' on' (ID: 402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9110854268074036
    2. ',' → logprob: -1.2860853672027588
    3. '       ' → logprob: -1.5360853672027588
    4. ' self' → logprob: -2.911085367202759
    5. '<|end|>' → logprob: -3.536085367202759
    6. '   ' → logprob: -4.536085605621338
    7. '<|end|>' → logprob: -6.036085605621338
    8. '
' → logprob: -6.661085605621338
    9. ',self' → logprob: -6.911085605621338
    10. '.' → logprob: -7.161085605621338

Token 124: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6198692321777344
    2. ' bottom' → logprob: -1.8698692321777344
    3. 'top' → logprob: -2.1198692321777344
    4. ' the' → logprob: -2.6198692321777344
    5. 'bottom' → logprob: -3.1198692321777344
    6. ' a' → logprob: -3.3698692321777344
    7. 'the' → logprob: -4.244869232177734
    8. 'a' → logprob: -5.119869232177734
    9. ' two' → logprob: -6.119869232177734
    10. ' an' → logprob: -6.244869232177734

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7161024212837219
    2. 'self' → logprob: -1.3411023616790771
    3. '       ' → logprob: -2.216102361679077
    4. '   ' → logprob: -2.466102361679077
    5. ' self' → logprob: -3.716102361679077
    6. ' ,' → logprob: -4.966102600097656
    7. ':' → logprob: -5.966102600097656
    8. '_position' → logprob: -5.966102600097656
    9. '_level' → logprob: -6.591102600097656
    10. '_car' → logprob: -6.716102600097656

Token 126: ' must' (ID: 2804)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2963046133518219
    2. ' self' → logprob: -1.9213045835494995
    3. '#' → logprob: -3.171304702758789
    4. '       ' → logprob: -3.796304702758789
    5. ' the' → logprob: -3.921304702758789
    6. 'the' → logprob: -4.171304702758789
    7. ' #' → logprob: -5.671304702758789
    8. '   ' → logprob: -6.796304702758789
    9. 'we' → logprob: -7.296304702758789
    10. '        ' → logprob: -7.796304702758789

Token 127: ' wait' (ID: 5238)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.1344356536865234
    2. ' have' → logprob: -1.1344356536865234
    3. ' wait' → logprob: -1.5094356536865234
    4. ' move' → logprob: -4.134435653686523
    5. ' not' → logprob: -4.259435653686523
    6. '_wait' → logprob: -4.259435653686523
    7. '_be' → logprob: -4.509435653686523
    8. ' always' → logprob: -4.634435653686523
    9. ' also' → logprob: -4.759435653686523
    10. '_' → logprob: -4.759435653686523

Token 128: ' bottom' (ID: 8725)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.975238561630249
    2. '_' → logprob: -1.475238561630249
    3. 'for' → logprob: -2.225238561630249
    4. '_car' → logprob: -2.975238561630249
    5. '_time' → logprob: -3.100238561630249
    6. ' for' → logprob: -3.225238561630249
    7. '_until' → logprob: -3.350238561630249
    8. '_queue' → logprob: -4.100238800048828
    9. '_list' → logprob: -4.225238800048828
    10. '_to' → logprob: -4.475238800048828

Token 129: ' car' (ID: 1669)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.6417911052703857
    2. '_' → logprob: -1.5167911052703857
    3. '_space' → logprob: -2.5167911052703857
    4. '_time' → logprob: -3.7667911052703857
    5. '_queue' → logprob: -3.8917911052703857
    6. '_to' → logprob: -4.141791343688965
    7. '<|end|>' → logprob: -4.391791343688965
    8. '_for' → logprob: -4.766791343688965
    9. 'car' → logprob: -5.016791343688965
    10. '_position' → logprob: -5.266791343688965

Token 130: ' to' (ID: 316)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.3056668043136597
    2. '       ' → logprob: -1.4306668043136597
    3. 'self' → logprob: -1.9306668043136597
    4. '_car' → logprob: -2.430666923522949
    5. ' ' → logprob: -3.305666923522949
    6. ' for' → logprob: -3.555666923522949
    7. '   ' → logprob: -3.555666923522949
    8. '_wait' → logprob: -3.805666923522949
    9. '<|end|>' → logprob: -3.805666923522949
    10. '
' → logprob: -4.055666923522949

Token 131: ' depart' (ID: 14182)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.22108688950538635
    2. ' depart' → logprob: -2.4710869789123535
    3. ' leave' → logprob: -2.8460869789123535
    4. 'leave' → logprob: -3.8460869789123535
    5. ' finish' → logprob: -4.0960869789123535
    6. 'finish' → logprob: -5.0960869789123535
    7. '_depart' → logprob: -5.8460869789123535
    8. ' be' → logprob: -6.2210869789123535
    9. 'departure' → logprob: -6.2210869789123535
    10. 'be' → logprob: -7.4710869789123535

Token 132: ' first' (ID: 1577)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09257672727108002
    2. ' self' → logprob: -2.467576742172241
    3. '       ' → logprob: -5.717576503753662
    4. '	self' → logprob: -9.21757698059082
    5. '<|end|>' → logprob: -9.96757698059082
    6. ' ' → logprob: -10.09257698059082
    7. '   ' → logprob: -10.21757698059082
    8. 'pass' → logprob: -10.59257698059082
    9. '
' → logprob: -10.84257698059082
    10. 'def' → logprob: -10.96757698059082

Token 136: '.wait' (ID: 29833)
  Prédit: '.wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wait' → logprob: -0.5442655086517334
    2. '.' → logprob: -1.5442655086517334
    3. '.is' → logprob: -2.4192655086517334
    4. '.can' → logprob: -3.6692655086517334
    5. '_wait' → logprob: -3.6692655086517334
    6. '._' → logprob: -4.2942657470703125
    7. '.must' → logprob: -4.6692657470703125
    8. '.has' → logprob: -4.7942657470703125
    9. ' .' → logprob: -4.7942657470703125
    10. '.w' → logprob: -6.2942657470703125

Token 137: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.011835903860628605
    2. '_' → logprob: -5.761836051940918
    3. '_time' → logprob: -6.261836051940918
    4. '_list' → logprob: -6.386836051940918
    5. '_for' → logprob: -6.386836051940918
    6. 's' → logprob: -6.636836051940918
    7. '_queue' → logprob: -7.511836051940918
    8. 'ed' → logprob: -8.011836051940918
    9. '_bottom' → logprob: -8.261836051940918
    10. '_on' → logprob: -8.886836051940918

Token 138: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.5210381746292114
    2. '_' → logprob: -1.7710381746292114
    3. '_time' → logprob: -2.396038055419922
    4. '_on' → logprob: -2.771038055419922
    5. 'ing' → logprob: -3.271038055419922
    6. '_list' → logprob: -4.771038055419922
    7. '_to' → logprob: -4.896038055419922
    8. '_car' → logprob: -5.021038055419922
    9. '_times' → logprob: -5.021038055419922
    10. 'ed' → logprob: -5.771038055419922

Token 139: '_lower' (ID: 72335)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012944797053933144
    2. '<|end|>' → logprob: -5.38794469833374
    3. ' =' → logprob: -5.51294469833374
    4. '_car' → logprob: -6.01294469833374
    5. '_bottom' → logprob: -7.63794469833374
    6. '=' → logprob: -7.76294469833374
    7. '_' → logprob: -8.262945175170898
    8. '=None' → logprob: -8.637945175170898
    9. ' :' → logprob: -9.387945175170898
    10. '_top' → logprob: -9.762945175170898

Token 140: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5152652859687805
    2. '_car' → logprob: -1.1402652263641357
    3. ' =' → logprob: -3.2652652263641357
    4. '_' → logprob: -3.2652652263641357
    5. '=' → logprob: -5.390265464782715
    6. '_space' → logprob: -7.640265464782715
    7. '_c' → logprob: -7.765265464782715
    8. 'car' → logprob: -8.890265464782715
    9. ' :' → logprob: -9.140265464782715
    10. '_:' → logprob: -9.390265464782715

Token 141: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.027947548776865005
    2. ' False' → logprob: -3.9029476642608643
    3. 'True' → logprob: -5.402947425842285
    4. 'None' → logprob: -6.152947425842285
    5. '0' → logprob: -8.152947425842285
    6. ' True' → logprob: -8.652947425842285
    7. ' None' → logprob: -8.777947425842285
    8. '[]' → logprob: -9.027947425842285
    9. ' ' → logprob: -12.652947425842285
    10. '   ' → logprob: -12.777947425842285

Token 142: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2468336969614029
    2. '<|end|>' → logprob: -1.6218336820602417
    3. '

' → logprob: -4.371833801269531
    4. '\n' → logprob: -6.246833801269531
    5. '   ' → logprob: -6.496833801269531
    6. '<|end|>' → logprob: -6.621833801269531
    7. '    
' → logprob: -6.996833801269531
    8. 'newline' → logprob: -7.246833801269531
    9. '' → logprob: -7.496833801269531
    10. '


' → logprob: -7.746833801269531

Token 143: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.15279752016067505
    2. '
' → logprob: -2.0277974605560303
    3. '

' → logprob: -4.652797698974609
    4. ' class' → logprob: -8.52779769897461
    5. '


' → logprob: -9.40279769897461
    6. '    
' → logprob: -9.52779769897461
    7. '   ' → logprob: -10.27779769897461
    8. 'def' → logprob: -10.40279769897461
    9. '<|end|>' → logprob: -10.52779769897461
    10. '
    
' → logprob: -11.02779769897461

Token 144: ' Parking' (ID: 40497)
  Prédit: ' Parking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Parking' → logprob: -0.04284342750906944
    2. 'Parking' → logprob: -3.7928433418273926
    3. ' Car' → logprob: -4.667843341827393
    4. 'class' → logprob: -4.917843341827393
    5. '```' → logprob: -7.417843341827393
    6. ' Garage' → logprob: -8.04284381866455
    7. ' Stack' → logprob: -8.48034381866455
    8. ' Val' → logprob: -8.54284381866455
    9. ' parking' → logprob: -8.85534381866455
    10. ' Multi' → logprob: -9.04284381866455

Token 145: 'Space' (ID: 13331)
  Prédit: 'Lot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Lot' → logprob: -0.19043497741222382
    2. 'Garage' → logprob: -2.3154349327087402
    3. ':' → logprob: -3.4404349327087402
    4. 'Stack' → logprob: -3.5654349327087402
    5. 'System' → logprob: -4.56543493270874
    6. 'Manager' → logprob: -6.06543493270874
    7. 'Area' → logprob: -7.81543493270874
    8. 'Structure' → logprob: -8.190435409545898
    9. 'Slot' → logprob: -8.690435409545898
    10. 'Tower' → logprob: -8.940435409545898

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036152780521661043
    2. ':
' → logprob: -5.628615379333496
    3. '(' → logprob: -12.253615379333496
    4. '):' → logprob: -12.628615379333496
    5. '():' → logprob: -13.003615379333496
    6. 's' → logprob: -13.628615379333496
    7. ':

' → logprob: -13.628615379333496
    8. ':**' → logprob: -14.628615379333496
    9. 'Slot' → logprob: -15.253615379333496
    10. 'Stack' → logprob: -15.378615379333496

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002853136509656906
    2. 'def' → logprob: -6.502852916717529
    3. ' def' → logprob: -6.627852916717529
    4. 'class' → logprob: -10.627853393554688
    5. '	def' → logprob: -14.502853393554688
    6. ':' → logprob: -14.627853393554688
    7. '  ' → logprob: -15.002853393554688
    8. ')' → logprob: -15.377853393554688
    9. '```' → logprob: -15.502853393554688
    10. '(' → logprob: -15.627853393554688

Token 148: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5862274765968323
    2. ' def' → logprob: -0.8362274765968323
    3. '   ' → logprob: -4.8362274169921875
    4. 'class' → logprob: -6.0862274169921875
    5. '	def' → logprob: -11.836227416992188
    6. ' class' → logprob: -12.336227416992188
    7. '__' → logprob: -12.461227416992188
    8. ' ' → logprob: -13.211227416992188
    9. ' __' → logprob: -13.461227416992188
    10. '```' → logprob: -13.586227416992188

Token 149: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.13988064229488373
    2. ' def' → logprob: -2.139880657196045
    3. 'class' → logprob: -5.639880657196045
    4. '__' → logprob: -5.764880657196045
    5. 'def' → logprob: -6.139880657196045
    6. ' ' → logprob: -7.014880657196045
    7. 'object' → logprob: -7.139880657196045
    8. 'init' → logprob: -7.514880657196045
    9. ' object' → logprob: -8.014880180358887
    10. ' init' → logprob: -8.014880180358887

Token 150: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.500003814697266
    3. ' init' → logprob: -13.625003814697266
    4. 'class' → logprob: -15.125003814697266
    5. '__' → logprob: -16.250003814697266
    6. '   ' → logprob: -16.500003814697266
    7. 'int' → logprob: -16.750003814697266
    8. '``' → logprob: -16.750003814697266
    9. 'def' → logprob: -17.375003814697266
    10. 'inite' → logprob: -17.500003814697266

Token 151: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007131858728826046
    2. '(self' → logprob: -5.507132053375244
    3. '(' → logprob: -6.507132053375244
    4. '__' → logprob: -6.757132053375244
    5. '__(
' → logprob: -8.757131576538086
    6. '_(' → logprob: -8.882131576538086
    7. ' (' → logprob: -9.507131576538086
    8. '__((' → logprob: -11.632131576538086
    9. '_' → logprob: -11.757131576538086
    10. '__('' → logprob: -13.507131576538086

Token 152: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05492708459496498
    2. ' self' → logprob: -2.929927110671997
    3. ',' → logprob: -10.804926872253418
    4. '
' → logprob: -11.804926872253418
    5. ' ' → logprob: -11.929926872253418
    6. 'space' → logprob: -13.179926872253418
    7. ')' → logprob: -13.679926872253418
    8. 'elf' → logprob: -13.804926872253418
    9. '	self' → logprob: -13.929926872253418
    10. '<|end|>' → logprob: -14.054926872253418

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2285749316215515
    2. ' ,' → logprob: -1.6035749912261963
    3. 'self' → logprob: -6.353574752807617
    4. ' ' → logprob: -7.728574752807617
    5. ' self' → logprob: -8.603574752807617
    6. '):' → logprob: -8.978574752807617
    7. ' ):' → logprob: -8.978574752807617
    8. '):
' → logprob: -9.103574752807617
    9. '_,' → logprob: -9.228574752807617
    10. ' )' → logprob: -9.353574752807617

Token 154: ' index' (ID: 3472)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.39540284872055054
    2. 'self' → logprob: -2.1454029083251953
    3. ' index' → logprob: -2.3954029083251953
    4. ' space' → logprob: -3.5204029083251953
    5. ' capacity' → logprob: -3.7704029083251953
    6. ' position' → logprob: -4.020402908325195
    7. ' level' → logprob: -4.270402908325195
    8. 'index' → logprob: -5.020402908325195
    9. 'space' → logprob: -5.645402908325195
    10. ' total' → logprob: -5.645402908325195

Token 155: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0318269208073616
    2. '):' → logprob: -3.656826972961426
    3. ',' → logprob: -5.781826972961426
    4. ':int' → logprob: -6.656826972961426
    5. ' :' → logprob: -7.531826972961426
    6. '):
' → logprob: -8.031826972961426
    7. ' ):' → logprob: -9.031826972961426
    8. '_:' → logprob: -9.531826972961426
    9. '=' → logprob: -10.281826972961426
    10. ' ,' → logprob: -11.531826972961426

Token 156: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22546467185020447
    2. ' int' → logprob: -1.6004647016525269
    3. '   ' → logprob: -10.600464820861816
    4. '0' → logprob: -12.100464820861816
    5. '
' → logprob: -12.350464820861816
    6. ' ' → logprob: -12.350464820861816
    7. ':int' → logprob: -12.600464820861816
    8. ')' → logprob: -12.850464820861816
    9. ',' → logprob: -13.850464820861816
    10. '):
' → logprob: -13.975464820861816

Token 157: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7652583718299866
    2. ',' → logprob: -1.0152583122253418
    3. '):' → logprob: -1.7652583122253418
    4. '):
' → logprob: -7.640258312225342
    5. ')' → logprob: -8.3902587890625
    6. ' ,' → logprob: -8.7652587890625
    7. '   ' → logprob: -8.8902587890625
    8. ' ):
' → logprob: -8.8902587890625
    9. ' ):' → logprob: -9.3902587890625
    10. ':' → logprob: -9.7652587890625

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06837166845798492
    2. 'self' → logprob: -3.0683717727661133
    3. ' self' → logprob: -3.9433717727661133
    4. '   ' → logprob: -9.693371772766113
    5. '(self' → logprob: -10.318371772766113
    6. '	self' → logprob: -10.568371772766113
    7. '      ' → logprob: -10.818371772766113
    8. ' ' → logprob: -10.943371772766113
    9. '```' → logprob: -11.693371772766113
    10. '        ' → logprob: -11.943371772766113

Token 159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3914523720741272
    2. ' self' → logprob: -1.1414523124694824
    3. '       ' → logprob: -5.391452312469482
    4. '	self' → logprob: -12.26645278930664
    5. '
' → logprob: -12.64145278930664
    6. '   ' → logprob: -12.76645278930664
    7. '#' → logprob: -14.26645278930664
    8. '        
' → logprob: -14.26645278930664
    9. '        ' → logprob: -14.39145278930664
    10. '    ' → logprob: -14.39145278930664

Token 160: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.1577771157026291
    2. '.available' → logprob: -3.4077770709991455
    3. '.is' → logprob: -3.7827770709991455
    4. 'index' → logprob: -3.9077770709991455
    5. '.' → logprob: -4.032777309417725
    6. '_index' → logprob: -4.282777309417725
    7. ' .' → logprob: -4.782777309417725
    8. '=index' → logprob: -5.157777309417725
    9. '.space' → logprob: -5.657777309417725
    10. '.id' → logprob: -5.907777309417725

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018277887254953384
    2. '=' → logprob: -4.018278121948242
    3. ':' → logprob: -9.143278121948242
    4. ' ' → logprob: -11.393278121948242
    5. '<|end|>' → logprob: -12.893278121948242
    6. '   ' → logprob: -13.518278121948242
    7. '=None' → logprob: -13.768278121948242
    8. ',' → logprob: -13.893278121948242
    9. '<|end|>' → logprob: -13.893278121948242
    10. '=int' → logprob: -14.393278121948242

Token 162: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.012518951669335365
    2. ' index' → logprob: -4.387518882751465
    3. '0' → logprob: -12.012518882751465
    4. '	index' → logprob: -14.387518882751465
    5. 'None' → logprob: -14.387518882751465
    6. '[index' → logprob: -14.637518882751465
    7. '(index' → logprob: -15.137518882751465
    8. ' ' → logprob: -15.262518882751465
    9. '#index' → logprob: -15.262518882751465
    10. 'int' → logprob: -15.512518882751465

Token 163: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03222394734621048
    2. 'self' → logprob: -3.78222393989563
    3. ' self' → logprob: -5.407224178314209
    4. '       ' → logprob: -5.907224178314209
    5. '<|end|>' → logprob: -7.657224178314209
    6. '        
' → logprob: -7.907224178314209
    7. '  
' → logprob: -8.28222370147705
    8. ',' → logprob: -8.65722370147705
    9. ' 
' → logprob: -9.03222370147705
    10. '
' → logprob: -9.15722370147705

Token 164: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.245383858680725
    2. '       ' → logprob: -1.370383858680725
    3. ' self' → logprob: -1.370383858680725
    4. '
' → logprob: -1.620383858680725
    5. ' #' → logprob: -6.1203837394714355
    6. '#' → logprob: -6.3703837394714355
    7. '   ' → logprob: -7.7453837394714355
    8. ' 
' → logprob: -7.8703837394714355
    9. '	self' → logprob: -8.745384216308594
    10. 'class' → logprob: -8.870384216308594

Token 165: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018137309700250626
    2. 'deque' → logprob: -5.393137454986572
    3. 'None' → logprob: -6.018137454986572
    4. '[]' → logprob: -6.018137454986572
    5. 'bottom' → logprob: -6.018137454986572
    6. '[' → logprob: -6.143137454986572
    7. '0' → logprob: -6.893137454986572
    8. '[self' → logprob: -7.018137454986572
    9. ' self' → logprob: -7.143137454986572
    10. 'False' → logprob: -7.893137454986572

Token 166: ' bottom' (ID: 8725)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05485159158706665
    2. ' self' → logprob: -3.054851531982422
    3. 'deque' → logprob: -5.929851531982422
    4. '#' → logprob: -7.679851531982422
    5. '[' → logprob: -7.679851531982422
    6. 'False' → logprob: -8.179851531982422
    7. 'slots' → logprob: -8.179851531982422
    8. 'bottom' → logprob: -8.554851531982422
    9. 'True' → logprob: -8.679851531982422
    10. 'de' → logprob: -8.804851531982422

Token 167: ' car' (ID: 1669)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.2841331660747528
    2. '_' → logprob: -2.284133195877075
    3. ':' → logprob: -2.659133195877075
    4. ' =' → logprob: -2.784133195877075
    5. 'occupied' → logprob: -5.034132957458496
    6. 'car' → logprob: -5.659132957458496
    7. '=None' → logprob: -7.409132957458496
    8. '_taken' → logprob: -7.534132957458496
    9. '=' → logprob: -7.784132957458496
    10. '_available' → logprob: -7.784132957458496

Token 168: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030845478177070618
    2. ' =' → logprob: -5.878084659576416
    3. ' :' → logprob: -8.753084182739258
    4. '=' → logprob: -9.253084182739258
    5. 'car' → logprob: -11.753084182739258
    6. '=None' → logprob: -12.003084182739258
    7. '   ' → logprob: -13.128084182739258
    8. ',' → logprob: -13.128084182739258
    9. ' ' → logprob: -13.253084182739258
    10. 's' → logprob: -13.503084182739258

Token 169: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.043864380568265915
    2. ' None' → logprob: -3.1688644886016846
    3. 'top' → logprob: -7.2938642501831055
    4. ' top' → logprob: -9.293864250183105
    5. 'none' → logprob: -10.418864250183105
    6. '[' → logprob: -11.168864250183105
    7. '[]' → logprob: -11.293864250183105
    8. '   ' → logprob: -11.293864250183105
    9. '[top' → logprob: -11.793864250183105
    10. 'self' → logprob: -13.168864250183105

Token 170: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20365093648433685
    2. ' self' → logprob: -2.328650951385498
    3. '       ' → logprob: -2.578650951385498
    4. '   ' → logprob: -5.578650951385498
    5. ':' → logprob: -5.828650951385498
    6. ' =' → logprob: -6.203650951385498
    7. 'None' → logprob: -7.453650951385498
    8. ',' → logprob: -8.07865047454834
    9. ' None' → logprob: -8.45365047454834
    10. '=' → logprob: -8.95365047454834

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3881892263889313
    2. 'self' → logprob: -1.2631891965866089
    3. ' self' → logprob: -3.2631893157958984
    4. '   ' → logprob: -8.013189315795898
    5. ',' → logprob: -9.263189315795898
    6. 'None' → logprob: -9.263189315795898
    7. ' None' → logprob: -9.638189315795898
    8. ':' → logprob: -9.888189315795898
    9. '	self' → logprob: -11.513189315795898
    10. '
' → logprob: -11.763189315795898

Token 172: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12777487933635712
    2. 'None' → logprob: -2.127774953842163
    3. 'bottom' → logprob: -7.877774715423584
    4. ' self' → logprob: -8.127775192260742
    5. ' None' → logprob: -9.002775192260742
    6. '   ' → logprob: -10.877775192260742
    7. '[]' → logprob: -12.377775192260742
    8. 'b' → logprob: -12.502775192260742
    9. '[self' → logprob: -12.877775192260742
    10. '	self' → logprob: -13.002775192260742

Token 173: '.bottom' (ID: 35613)
  Prédit: '_bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.38427025079727173
    2. '_car' → logprob: -2.134270191192627
    3. ' =' → logprob: -2.384270191192627
    4. 'bottom' → logprob: -3.259270191192627
    5. ':' → logprob: -4.009270191192627
    6. '_space' → logprob: -5.009270191192627
    7. '.bottom' → logprob: -5.009270191192627
    8. ' bottom' → logprob: -5.134270191192627
    9. '=' → logprob: -5.759270191192627
    10. '_b' → logprob: -5.884270191192627

Token 174: ':' (ID: 25)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.013813448138535023
    2. ':' → logprob: -4.888813495635986
    3. ' =' → logprob: -5.138813495635986
    4. 'car' → logprob: -8.763813018798828
    5. '=' → logprob: -9.263813018798828
    6. 'Car' → logprob: -10.388813018798828
    7. '=None' → logprob: -10.888813018798828
    8. '_c' → logprob: -11.763813018798828
    9. '_space' → logprob: -12.138813018798828
    10. '_' → logprob: -13.263813018798828

Token 175: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.5898100733757019
    2. 'Optional' → logprob: -0.8398100733757019
    3. 'None' → logprob: -4.714809894561768
    4. ' None' → logprob: -5.339809894561768
    5. '	Optional' → logprob: -11.339810371398926
    6. ' ' → logprob: -13.589810371398926
    7. '[' → logprob: -13.714810371398926
    8. '   ' → logprob: -14.089810371398926
    9. '(Optional' → logprob: -14.339810371398926
    10. '  ' → logprob: -15.339810371398926

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.641841820150148e-05
    2. '<Car' → logprob: -11.25002670288086
    3. 'Car' → logprob: -12.62502670288086
    4. '[
' → logprob: -12.75002670288086
    5. '['' → logprob: -12.87502670288086
    6. '[int' → logprob: -13.62502670288086
    7. '[List' → logprob: -13.87502670288086
    8. '=' → logprob: -14.25002670288086
    9. '```' → logprob: -15.12502670288086
    10. '[class' → logprob: -15.50002670288086

Token 177: 'Car' (ID: 9680)
  Prédit: 'Car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.00018041854491457343
    2. ' Car' → logprob: -8.6251802444458
    3. '<Car' → logprob: -15.0001802444458
    4. 'int' → logprob: -15.2501802444458
    5. '[' → logprob: -15.5001802444458
    6. '   ' → logprob: -16.750181198120117
    7. 'car' → logprob: -17.375181198120117
    8. '[int' → logprob: -17.625181198120117
    9. '_car' → logprob: -17.875181198120117
    10. '.Car' → logprob: -18.500181198120117

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001278534036828205
    2. ' ]' → logprob: -9.125127792358398
    3. ']=' → logprob: -11.125127792358398
    4. ')' → logprob: -12.750127792358398
    5. '=' → logprob: -14.875127792358398
    6. '[' → logprob: -15.625127792358398
    7. ' =' → logprob: -15.750127792358398
    8. '`]' → logprob: -15.750127792358398
    9. ']
' → logprob: -16.5001277923584
    10. ',' → logprob: -16.5001277923584

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11289642006158829
    2. '=' → logprob: -2.23789644241333
    3. '=None' → logprob: -10.112895965576172
    4. '<|end|>' → logprob: -10.612895965576172
    5. ' ' → logprob: -11.987895965576172
    6. '   ' → logprob: -13.987895965576172
    7. '<|end|>' → logprob: -15.362895965576172
    8. '=False' → logprob: -15.362895965576172
    9. '  ' → logprob: -15.612895965576172
    10. ' =
' → logprob: -15.612895965576172

Token 180: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10020667314529419
    2. ' None' → logprob: -2.3502066135406494
    3. '(None' → logprob: -18.72520637512207
    4. '=None' → logprob: -18.85020637512207
    5. '_None' → logprob: -19.35020637512207
    6. ',None' → logprob: -19.72520637512207
    7. ' ' → logprob: -19.97520637512207
    8. ' ' → logprob: -20.10020637512207
    9. '   ' → logprob: -21.10020637512207
    10. 'none' → logprob: -21.85020637512207

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027152379043400288
    2. '   ' → logprob: -6.127715110778809
    3. '
' → logprob: -7.752715110778809
    4. '#' → logprob: -9.877715110778809
    5. ' ' → logprob: -10.752715110778809
    6. '        
' → logprob: -12.252715110778809
    7. '           ' → logprob: -12.377715110778809
    8. '      ' → logprob: -12.877715110778809
    9. 'self' → logprob: -12.877715110778809
    10. ',' → logprob: -13.002715110778809

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012320445966906846
    2. 'self' → logprob: -9.750123023986816
    3. '   ' → logprob: -10.125123023986816
    4. '#' → logprob: -11.000123023986816
    5. '
' → logprob: -12.625123023986816
    6. ' self' → logprob: -13.375123023986816
    7. ' ' → logprob: -13.500123023986816
    8. '           ' → logprob: -14.500123023986816
    9. '	' → logprob: -14.875123023986816
    10. '      ' → logprob: -15.250123023986816

Token 183: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5939125418663025
    2. '       ' → logprob: -0.8439125418663025
    3. ' self' → logprob: -4.468912601470947
    4. '#' (adapté à ' #') → logprob: -5.093912601470947
    5. '   ' → logprob: -9.093912124633789
    6. ' #' → logprob: -9.968912124633789
    7. ' ' → logprob: -10.593912124633789
    8. '	self' → logprob: -11.593912124633789
    9. '
' → logprob: -11.968912124633789
    10. '           ' → logprob: -12.218912124633789

Token 184: ' top' (ID: 2344)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.56895512342453
    2. 'top' → logprob: -1.5689551830291748
    3. ' top' → logprob: -2.068955183029175
    4. ' self' → logprob: -2.318955183029175
    5. '       ' → logprob: -7.693954944610596
    6. '   ' → logprob: -8.693955421447754
    7. ' ' → logprob: -9.318955421447754
    8. '
' → logprob: -10.318955421447754
    9. 'Top' → logprob: -10.318955421447754
    10. '#' → logprob: -10.443955421447754

Token 185: ' car' (ID: 1669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019543453527148813
    2. 'car' → logprob: -8.750195503234863
    3. ' :' → logprob: -10.875195503234863
    4. ' car' → logprob: -11.875195503234863
    5. '_car' → logprob: -12.000195503234863
    6. 'Car' → logprob: -13.000195503234863
    7. ' =' → logprob: -14.000195503234863
    8. ' ' → logprob: -15.000195503234863
    9. '   ' → logprob: -15.500195503234863
    10. '[' → logprob: -15.500195503234863

Token 186: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -6.861651490908116e-05
    2. ' =' → logprob: -10.375068664550781
    3. ' :' → logprob: -10.875068664550781
    4. '       ' → logprob: -12.250068664550781
    5. 'self' → logprob: -12.250068664550781
    6. '   ' → logprob: -12.875068664550781
    7. 'Optional' → logprob: -13.375068664550781
    8. '=None' → logprob: -13.500068664550781
    9. '=' → logprob: -14.500068664550781
    10. '<|end|>' → logprob: -14.500068664550781

Token 187: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3155302405357361
    2. 'None' → logprob: -1.3155303001403809
    3. 'Optional' → logprob: -6.565530300140381
    4. ' Optional' → logprob: -7.065530300140381
    5. '=None' → logprob: -13.815529823303223
    6. '(None' → logprob: -13.940529823303223
    7. ' ' → logprob: -14.065529823303223
    8. ' ' → logprob: -15.065529823303223
    9. 'self' → logprob: -15.440529823303223
    10. ':' → logprob: -16.06553077697754

Token 188: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24031804502010345
    2. 'self' → logprob: -2.1153180599212646
    3. ':' → logprob: -2.9903180599212646
    4. ' self' → logprob: -3.8653180599212646
    5. ' =' → logprob: -4.3653178215026855
    6. '   ' → logprob: -5.7403178215026855
    7. '=' → logprob: -6.2403178215026855
    8. '
' → logprob: -6.4903178215026855
    9. ' ' → logprob: -7.1153178215026855
    10. '(self' → logprob: -7.6153178215026855

Token 189: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8830199837684631
    2. 'self' → logprob: -0.8830199837684631
    3. '       ' → logprob: -1.7580199241638184
    4. ' None' → logprob: -8.758020401000977
    5. '   ' → logprob: -8.883020401000977
    6. ' ' → logprob: -9.258020401000977
    7. 'None' → logprob: -10.008020401000977
    8. '	self' → logprob: -10.133020401000977
    9. ' ' → logprob: -11.133020401000977
    10. '(self' → logprob: -11.258020401000977

Token 190: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03074696846306324
    2. ' self' → logprob: -3.5307469367980957
    3. 'None' → logprob: -7.030746936798096
    4. ' None' → logprob: -9.280747413635254
    5. '       ' → logprob: -11.155747413635254
    6. '   ' → logprob: -13.280747413635254
    7. '	self' → logprob: -14.155747413635254
    8. ' ' → logprob: -14.280747413635254
    9. '           ' → logprob: -15.530747413635254
    10. '  ' → logprob: -15.655747413635254

Token 191: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.0009132515988312662
    2. ':' → logprob: -7.375913143157959
    3. '.' → logprob: -8.375913619995117
    4. ' .' → logprob: -10.625913619995117
    5. 'top' → logprob: -10.625913619995117
    6. '[top' → logprob: -13.625913619995117
    7. '.Top' → logprob: -13.875913619995117
    8. '	top' → logprob: -14.000913619995117
    9. '.bottom' → logprob: -14.250913619995117
    10. '_top' → logprob: -14.250913619995117

Token 192: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039919656701385975
    2. ' =' → logprob: -6.003992080688477
    3. '=' → logprob: -6.628992080688477
    4. ' :' → logprob: -8.628992080688477
    5. '=None' → logprob: -11.378992080688477
    6. ' ' → logprob: -13.628992080688477
    7. '<|end|>' → logprob: -13.878992080688477
    8. ')' → logprob: -14.878992080688477
    9. ':int' → logprob: -15.878992080688477
    10. '：' → logprob: -16.253992080688477

Token 193: ' Optional' (ID: 19351)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2905701994895935
    2. 'Optional' → logprob: -1.7905702590942383
    3. ' None' → logprob: -2.5405702590942383
    4. ' Optional' → logprob: -5.040570259094238
    5. ' ' → logprob: -12.915570259094238
    6. '=None' → logprob: -14.165570259094238
    7. '(None' → logprob: -14.290570259094238
    8. '  ' → logprob: -14.415570259094238
    9. '	Optional' → logprob: -14.790570259094238
    10. '   ' → logprob: -15.040570259094238

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. '[
' → logprob: -13.000006675720215
    3. '<Car' → logprob: -13.125006675720215
    4. 'Car' → logprob: -13.500006675720215
    5. '```' → logprob: -15.125006675720215
    6. ' [' → logprob: -15.500006675720215
    7. '=' → logprob: -15.875006675720215
    8. '[int' → logprob: -16.12500762939453
    9. '	' → logprob: -16.37500762939453
    10. '(Car' → logprob: -16.50000762939453

Token 195: 'Car' (ID: 9680)
  Prédit: 'Car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -4.842555426876061e-06
    2. ' Car' → logprob: -12.250004768371582
    3. '<Car' → logprob: -17.2500057220459
    4. '_car' → logprob: -19.8750057220459
    5. 'car' → logprob: -20.1250057220459
    6. '
' → logprob: -20.3750057220459
    7. '.Car' → logprob: -20.7500057220459
    8. '   ' → logprob: -21.5000057220459
    9. ' ' → logprob: -21.6250057220459
    10. 'C' → logprob: -21.7500057220459

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0078106774017214775
    2. ')' → logprob: -4.882810592651367
    3. ']=' → logprob: -9.257810592651367
    4. '[' → logprob: -10.257810592651367
    5. '=' → logprob: -10.757810592651367
    6. ' ]' → logprob: -11.007810592651367
    7. ')]' → logprob: -11.632810592651367
    8. '])' → logprob: -12.132810592651367
    9. '=None' → logprob: -12.507810592651367
    10. '(None' → logprob: -12.882810592651367

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269323080778122
    2. ' =' → logprob: -2.126932382583618
    3. '=None' → logprob: -12.626932144165039
    4. 'None' → logprob: -15.376932144165039
    5. ' ' → logprob: -15.501932144165039
    6. '(None' → logprob: -15.626932144165039
    7. ']' → logprob: -16.37693214416504
    8. '[' → logprob: -16.62693214416504
    9. ')' → logprob: -16.87693214416504
    10. '   ' → logprob: -17.25193214416504

Token 198: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007100477814674377
    2. ' None' → logprob: -7.2507100105285645
    3. 'none' → logprob: -17.375709533691406
    4. '(None' → logprob: -17.875709533691406
    5. '=None' → logprob: -18.875709533691406
    6. ',None' → logprob: -19.375709533691406
    7. '_None' → logprob: -19.500709533691406
    8. '   ' → logprob: -19.625709533691406
    9. 'No' → logprob: -20.375709533691406
    10. ' ' → logprob: -20.500709533691406

Token 199: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6209294199943542
    2. '
' → logprob: -0.9959294199943542
    3. 'class' → logprob: -2.870929479598999
    4. '<|end|>' → logprob: -3.620929479598999
    5. '    
' → logprob: -5.37092924118042
    6. 'def' → logprob: -6.12092924118042
    7. '

' → logprob: -6.99592924118042
    8. '<|end|>' → logprob: -7.74592924118042
    9. '```' → logprob: -7.87092924118042
    10. '


' → logprob: -8.745929718017578

Token 201: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004212908912450075
    2. '   ' → logprob: -5.504212856292725
    3. ' def' → logprob: -9.004213333129883
    4. '@property' → logprob: -11.379213333129883
    5. 'class' → logprob: -16.754213333129883
    6. '	def' → logprob: -16.879213333129883
    7. '    
' → logprob: -17.129213333129883
    8. 'de' → logprob: -17.254213333129883
    9. ' ' → logprob: -17.754213333129883
    10. '@' → logprob: -17.879213333129883

Token 202: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5891225934028625
    2. 'is' → logprob: -0.8391225934028625
    3. 'can' → logprob: -4.964122772216797
    4. ' can' → logprob: -5.714122772216797
    5. '_is' → logprob: -6.589122772216797
    6. 'def' → logprob: -7.464122772216797
    7. ' has' → logprob: -8.714122772216797
    8. ' def' → logprob: -8.964122772216797
    9. '_can' → logprob: -8.964122772216797
    10. '__' → logprob: -9.089122772216797

Token 203: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.11949167400598526
    2. '_full' → logprob: -2.3694915771484375
    3. '_available' → logprob: -4.6194915771484375
    4. '_' → logprob: -4.7444915771484375
    5. '_free' → logprob: -7.9944915771484375
    6. 'empty' → logprob: -9.119491577148438
    7. '_f' → logprob: -9.744491577148438
    8. ' empty' → logprob: -11.744491577148438
    9. '_two' → logprob: -11.869491577148438
    10. ' _' → logprob: -12.244491577148438

Token 204: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014223090372979641
    2. '(' → logprob: -4.264223098754883
    3. '()' → logprob: -10.014223098754883
    4. 'self' → logprob: -11.389223098754883
    5. '(
' → logprob: -13.514223098754883
    6. ' (' → logprob: -14.264223098754883
    7. '(

' → logprob: -14.639223098754883
    8. '(s' → logprob: -14.764223098754883
    9. '   ' → logprob: -15.889223098754883
    10. ')' → logprob: -15.889223098754883

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05577188730239868
    2. ')' → logprob: -3.180771827697754
    3. '):
' → logprob: -4.555771827697754
    4. 'self' → logprob: -6.805771827697754
    5. '(self' → logprob: -7.555771827697754
    6. ' ):' → logprob: -8.055771827697754
    7. '):

' → logprob: -9.180771827697754
    8. '()' → logprob: -10.305771827697754
    9. ',' → logprob: -10.555771827697754
    10. ' )' → logprob: -10.680771827697754

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04745117574930191
    2. 'return' → logprob: -3.2974512577056885
    3. ' return' → logprob: -4.672451019287109
    4. '   ' → logprob: -11.54745101928711
    5. 'self' → logprob: -12.42245101928711
    6. ' ' → logprob: -14.79745101928711
    7. '        ' → logprob: -14.79745101928711
    8. '      ' → logprob: -14.92245101928711
    9. '	return' → logprob: -14.92245101928711
    10. ' ' → logprob: -15.17245101928711

Token 207: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5761852264404297
    2. ' return' → logprob: -0.8261852264404297
    3. '       ' → logprob: -8.32618522644043
    4. '   ' → logprob: -13.07618522644043
    5. 'self' → logprob: -13.95118522644043
    6. ' self' → logprob: -14.45118522644043
    7. '	return' → logprob: -16.57618522644043
    8. '    ' → logprob: -17.95118522644043
    9. '           ' → logprob: -18.95118522644043
    10. ' ' → logprob: -18.95118522644043

Token 208: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03805583342909813
    2. ' self' → logprob: -3.288055896759033
    3. '   ' → logprob: -11.663055419921875
    4. '(self' → logprob: -12.288055419921875
    5. 'not' → logprob: -14.413055419921875
    6. '       ' → logprob: -15.413055419921875
    7. ' not' → logprob: -16.038055419921875
    8. ' ' → logprob: -16.413055419921875
    9. '	self' → logprob: -16.538055419921875
    10. ' (' → logprob: -17.038055419921875

Token 209: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.002672564936801791
    2. '.' → logprob: -6.1276726722717285
    3. '.top' → logprob: -7.7526726722717285
    4. ' .' → logprob: -10.75267219543457
    5. '.bot' → logprob: -11.87767219543457
    6. '.empty' → logprob: -12.25267219543457
    7. 'bottom' → logprob: -12.50267219543457
    8. '.space' → logprob: -12.62767219543457
    9. ').' → logprob: -13.12767219543457
    10. '.Bottom' → logprob: -13.25267219543457

Token 210: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25193002820014954
    2. 'is' → logprob: -1.5019299983978271
    3. '==' → logprob: -14.376930236816406
    4. ' ' → logprob: -15.876930236816406
    5. 'and' → logprob: -16.001930236816406
    6. '   ' → logprob: -16.751930236816406
    7. ')' → logprob: -17.501930236816406
    8. '	is' → logprob: -17.501930236816406
    9. '```' → logprob: -18.251930236816406
    10. ')is' → logprob: -18.251930236816406

Token 211: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5759401321411133
    2. ' None' → logprob: -0.8259401321411133
    3. '_None' → logprob: -14.825940132141113
    4. '(None' → logprob: -15.575940132141113
    5. '   ' → logprob: -16.325939178466797
    6. ' ' → logprob: -16.325939178466797
    7. '_none' → logprob: -17.950939178466797
    8. 'none' → logprob: -19.825939178466797
    9. '=None' → logprob: -19.825939178466797
    10. ',None' → logprob: -19.950939178466797

Token 212: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22964315116405487
    2. 'and' → logprob: -1.6046431064605713
    3. '<|end|>' → logprob: -5.47964334487915
    4. '   ' → logprob: -10.604642868041992
    5. '<|end|>' → logprob: -11.229642868041992
    6. '	and' → logprob: -12.229642868041992
    7. ' ' → logprob: -12.854642868041992
    8. ' or' → logprob: -12.979642868041992
    9. '    ' → logprob: -13.979642868041992
    10. ',' → logprob: -14.854642868041992

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16023123264312744
    2. ' self' → logprob: -1.9102312326431274
    3. '       ' → logprob: -12.910231590270996
    4. '   ' → logprob: -13.160231590270996
    5. '	self' → logprob: -13.410231590270996
    6. ' ' → logprob: -14.910231590270996
    7. '(self' → logprob: -15.410231590270996
    8. '    ' → logprob: -15.410231590270996
    9. '  ' → logprob: -16.53523063659668
    10. ' ' → logprob: -16.66023063659668

Token 214: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -4.739826181321405e-05
    2. '.' → logprob: -10.12504768371582
    3. 'top' → logprob: -12.12504768371582
    4. ' .' → logprob: -13.62504768371582
    5. '.bottom' → logprob: -15.75004768371582
    6. '	top' → logprob: -16.12504768371582
    7. '.Top' → logprob: -16.25004768371582
    8. ' top' → logprob: -16.37504768371582
    9. 'Top' → logprob: -17.50004768371582
    10. ').' → logprob: -17.62504768371582

Token 215: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47407910227775574
    2. 'is' → logprob: -0.9740791320800781
    3. ' ' → logprob: -14.349079132080078
    4. '==' → logprob: -15.099079132080078
    5. '	is' → logprob: -15.099079132080078
    6. '.is' → logprob: -15.474079132080078
    7. 'None' → logprob: -15.599079132080078
    8. ' ' → logprob: -16.099079132080078
    9. ' None' → logprob: -16.099079132080078
    10. '()' → logprob: -16.099079132080078

Token 216: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020461321400944144
    2. ' None' → logprob: -8.500205039978027
    3. '(None' → logprob: -15.000205039978027
    4. '   ' → logprob: -15.250205039978027
    5. '=None' → logprob: -15.375205039978027
    6. 'none' → logprob: -15.750205039978027
    7. '_None' → logprob: -16.25020408630371
    8. '.None' → logprob: -19.00020408630371
    9. ',None' → logprob: -19.00020408630371
    10. '_none' → logprob: -19.12520408630371

Token 217: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04758463054895401
    2. '<|end|>' → logprob: -3.2975845336914062
    3. '
' → logprob: -5.172584533691406
    4. 'def' → logprob: -6.297584533691406
    5. '<|end|>' → logprob: -6.797584533691406
    6. '    
' → logprob: -7.297584533691406
    7. '```' → logprob: -9.547584533691406
    8. ' def' → logprob: -9.797584533691406
    9. ')' → logprob: -10.922584533691406
    10. '

' → logprob: -11.797584533691406

Token 219: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008646479807794094
    2. '   ' → logprob: -4.758646488189697
    3. ' def' → logprob: -10.383646011352539
    4. '```' → logprob: -14.633646011352539
    5. '	def' → logprob: -14.883646011352539
    6. '    
' → logprob: -16.38364601135254
    7. '`' → logprob: -17.50864601135254
    8. '       ' → logprob: -18.00864601135254
    9. '@property' → logprob: -18.38364601135254
    10. '  ' → logprob: -18.50864601135254

Token 220: ' has' (ID: 853)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9141298532485962
    2. 'can' → logprob: -0.9141298532485962
    3. ' has' → logprob: -2.2891297340393066
    4. 'has' → logprob: -2.4141297340393066
    5. ' is' → logprob: -5.539129734039307
    6. 'is' → logprob: -6.164129734039307
    7. 'def' → logprob: -7.414129734039307
    8. ' def' → logprob: -8.539130210876465
    9. '_can' → logprob: -9.164130210876465
    10. 'add' → logprob: -9.289130210876465

Token 221: '_no' (ID: 13575)
  Prédit: '_bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.19002901017665863
    2. '_space' → logprob: -2.3150289058685303
    3. '_top' → logprob: -3.1900289058685303
    4. '_empty' → logprob: -4.690029144287109
    5. 'bottom' → logprob: -5.065029144287109
    6. '_' → logprob: -5.065029144287109
    7. 'space' → logprob: -6.065029144287109
    8. ' bottom' → logprob: -6.065029144287109
    9. ' space' → logprob: -6.190029144287109
    10. 'top' → logprob: -6.565029144287109

Token 222: '_car' (ID: 62991)
  Prédit: '_bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.6009791493415833
    2. '_top' → logprob: -0.9759791493415833
    3. '_car' → logprob: -3.3509790897369385
    4. 'top' → logprob: -3.6009790897369385
    5. 'bottom' → logprob: -5.350979328155518
    6. '_' → logprob: -6.100979328155518
    7. 'car' → logprob: -6.225979328155518
    8. ' top' → logprob: -6.850979328155518
    9. '_space' → logprob: -7.475979328155518
    10. ' bottom' → logprob: -7.600979328155518

Token 223: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006508486345410347
    2. '()' → logprob: -5.6315083503723145
    3. '(' → logprob: -6.5065083503723145
    4. 'self' → logprob: -7.6315083503723145
    5. '_bottom' → logprob: -8.381508827209473
    6. '():
' → logprob: -8.756508827209473
    7. '   ' → logprob: -9.381508827209473
    8. ' (' → logprob: -9.381508827209473
    9. '():' → logprob: -9.381508827209473
    10. 'bottom' → logprob: -9.881508827209473

Token 224: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1556904911994934
    2. '):
' → logprob: -2.2806904315948486
    3. ')' → logprob: -4.155690670013428
    4. '()' → logprob: -4.905690670013428
    5. '():' → logprob: -5.280690670013428
    6. '(self' → logprob: -5.530690670013428
    7. '()):
' → logprob: -5.905690670013428
    8. '   ' → logprob: -6.405690670013428
    9. 'self' → logprob: -6.905690670013428
    10. ':' → logprob: -7.030690670013428

Token 225: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.32393765449523926
    2. '       ' → logprob: -1.6989376544952393
    3. 'self' → logprob: -2.6989376544952393
    4. 'return' → logprob: -4.19893741607666
    5. '   ' → logprob: -5.32393741607666
    6. ' self' → logprob: -6.07393741607666
    7. ' return' → logprob: -6.19893741607666
    8. '(' → logprob: -6.82393741607666
    9. 's' → logprob: -8.57393741607666
    10. ':' → logprob: -8.82393741607666

Token 226: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11939530819654465
    2. 'return' → logprob: -2.2443952560424805
    3. '       ' → logprob: -5.2443952560424805
    4. '   ' → logprob: -6.7443952560424805
    5. ' self' → logprob: -9.86939525604248
    6. 'self' → logprob: -10.61939525604248
    7. '	return' → logprob: -11.74439525604248
    8. ' ' → logprob: -11.86939525604248
    9. '
' → logprob: -13.11939525604248
    10. '    ' → logprob: -13.49439525604248

Token 227: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14587917923927307
    2. 'return' → logprob: -2.0208792686462402
    3. '       ' → logprob: -5.89587926864624
    4. ' self' → logprob: -8.520878791809082
    5. 'self' → logprob: -8.895878791809082
    6. '   ' → logprob: -9.645878791809082
    7. 'def' → logprob: -11.520878791809082
    8. '	return' → logprob: -11.645878791809082
    9. ' ' → logprob: -11.895878791809082
    10. '
' → logprob: -12.270878791809082

Token 228: ' car' (ID: 1669)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7186778783798218
    2. 'self' → logprob: -0.7186778783798218
    3. ' bottom' → logprob: -4.718677997589111
    4. ' return' → logprob: -5.468677997589111
    5. ' car' → logprob: -5.468677997589111
    6. 'return' → logprob: -6.343677997589111
    7. 'car' → logprob: -6.843677997589111
    8. '(self' → logprob: -6.843677997589111
    9. ' (' → logprob: -6.968677997589111
    10. '_car' → logprob: -7.093677997589111

Token 229: ' either' (ID: 4784)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.4278665781021118
    2. ' =' → logprob: -1.5528665781021118
    3. ' is' → logprob: -1.6778665781021118
    4. ' return' → logprob: -2.1778664588928223
    5. '=' → logprob: -2.3028664588928223
    6. 'return' → logprob: -3.0528664588928223
    7. ':' → logprob: -3.5528664588928223
    8. '   ' → logprob: -4.302866458892822
    9. ' and' → logprob: -4.677866458892822
    10. ' or' → logprob: -5.052866458892822

Token 230: ' bottom' (ID: 8725)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1580828428268433
    2. ' return' → logprob: -1.6580828428268433
    3. ' or' → logprob: -1.9080828428268433
    4. '   ' → logprob: -1.9080828428268433
    5. '       ' → logprob: -3.033082962036133
    6. ' at' → logprob: -3.533082962036133
    7. 'def' → logprob: -3.908082962036133
    8. ',' → logprob: -4.033082962036133
    9. ':' → logprob: -4.033082962036133
    10. ' and' → logprob: -4.158082962036133

Token 231: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.016688982024788857
    2. 'or' → logprob: -4.266688823699951
    3. ' and' → logprob: -6.891688823699951
    4. '<|end|>' → logprob: -7.391688823699951
    5. ',' → logprob: -7.766688823699951
    6. 'def' → logprob: -8.89168930053711
    7. '<|end|>' → logprob: -9.51668930053711
    8. 'return' → logprob: -10.14168930053711
    9. 'and' → logprob: -10.14168930053711
    10. ' return' → logprob: -10.51668930053711

Token 232: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.11290067434310913
    2. ' top' → logprob: -2.237900733947754
    3. '   ' → logprob: -10.737900733947754
    4. '       ' → logprob: -11.112900733947754
    5. 'self' → logprob: -11.112900733947754
    6. '           ' → logprob: -11.862900733947754
    7. '(top' → logprob: -12.737900733947754
    8. ' ' → logprob: -12.987900733947754
    9. '	top' → logprob: -12.987900733947754
    10. '
' → logprob: -13.237900733947754

Token 233: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07587134838104248
    2. '       ' → logprob: -2.950871467590332
    3. ':' → logprob: -4.700871467590332
    4. 'return' → logprob: -4.950871467590332
    5. ' return' → logprob: -6.450871467590332
    6. ':return' → logprob: -7.325871467590332
    7. ' and' → logprob: -7.575871467590332
    8. ',' → logprob: -7.825871467590332
    9. ':
' → logprob: -8.075871467590332
    10. ' or' → logprob: -8.200871467590332

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06257690489292145
    2. '   ' → logprob: -2.81257700920105
    3. 'return' → logprob: -8.312577247619629
    4. '()' → logprob: -9.312577247619629
    5. ' return' → logprob: -9.312577247619629
    6. ':' → logprob: -9.687577247619629
    7. ':return' → logprob: -11.187577247619629
    8. '    ' → logprob: -11.437577247619629
    9. '     ' → logprob: -11.562577247619629
    10. '(' → logprob: -11.562577247619629

Token 235: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.441297709941864
    2. 'return' (adapté à ' return') → logprob: -1.1912977695465088
    3. ' return' → logprob: -2.941297769546509
    4. '   ' → logprob: -8.81629753112793
    5. '	return' → logprob: -11.06629753112793
    6. '```' → logprob: -11.81629753112793
    7. ' ' → logprob: -13.69129753112793
    8. '	' → logprob: -14.56629753112793
    9. '{return' → logprob: -15.31629753112793
    10. ':return' → logprob: -15.31629753112793

Token 236: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062021125108003616
    2. ' self' → logprob: -2.812021017074585
    3. '(self' → logprob: -10.187021255493164
    4. '   ' → logprob: -11.312021255493164
    5. '	self' → logprob: -13.812021255493164
    6. 'not' → logprob: -13.937021255493164
    7. ' not' → logprob: -14.937021255493164
    8. ' (' → logprob: -15.187021255493164
    9. '       ' → logprob: -15.312021255493164
    10. '    ' → logprob: -15.562021255493164

Token 237: '.is' (ID: 3109)
  Prédit: '.bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.090887151658535
    2. '.is' → logprob: -2.4658870697021484
    3. 'is' → logprob: -6.465887069702148
    4. 'bottom' → logprob: -8.465887069702148
    5. '.' → logprob: -9.215887069702148
    6. '.top' → logprob: -10.340887069702148
    7. ' .' → logprob: -11.465887069702148
    8. '.empty' → logprob: -11.965887069702148
    9. ' is' → logprob: -12.215887069702148
    10. '.bot' → logprob: -12.215887069702148

Token 238: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -4.429896944202483e-05
    2. '_' → logprob: -10.250043869018555
    3. '_none' → logprob: -12.375043869018555
    4. 'empty' → logprob: -12.750043869018555
    5. ' _' → logprob: -13.750043869018555
    6. '__' → logprob: -16.375043869018555
    7. '_EMPTY' → logprob: -16.375043869018555
    8. '_emp' → logprob: -16.375043869018555
    9. '_any' → logprob: -16.500043869018555
    10. ')_' → logprob: -17.125043869018555

Token 239: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.180258191714529e-06
    2. '()

' → logprob: -12.750008583068848
    3. '()
' → logprob: -13.000008583068848
    4. '(' → logprob: -13.500008583068848
    5. '())' → logprob: -14.625008583068848
    6. ' ()' → logprob: -15.125008583068848
    7. ')' → logprob: -15.750008583068848
    8. '().' → logprob: -15.875008583068848
    9. '()`' → logprob: -16.50000762939453
    10. '()==' → logprob: -16.75000762939453

Token 240: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004029483534395695
    2. '   ' → logprob: -5.629029273986816
    3. ' def' → logprob: -7.879029273986816
    4. ')' → logprob: -10.879029273986816
    5. '<|end|>' → logprob: -10.879029273986816
    6. '```' → logprob: -12.129029273986816
    7. '	def' → logprob: -13.504029273986816
    8. '<|end|>' → logprob: -13.629029273986816
    9. ' ' → logprob: -13.754029273986816
    10. '  ' → logprob: -14.629029273986816

Token 242: ' has' (ID: 853)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.7114900946617126
    2. ' can' → logprob: -1.2114901542663574
    3. ' has' → logprob: -2.2114901542663574
    4. 'has' → logprob: -2.4614901542663574
    5. ' is' → logprob: -4.961490154266357
    6. 'is' → logprob: -5.211490154266357
    7. 'def' → logprob: -6.086490154266357
    8. ' def' → logprob: -7.211490154266357
    9. 'bottom' → logprob: -8.0864896774292
    10. ' bottom' → logprob: -8.3364896774292

Token 243: '_one' (ID: 26979)
  Prédit: '_bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.06678081303834915
    2. '_top' → logprob: -3.6917808055877686
    3. '_no' → logprob: -4.566781044006348
    4. '_' → logprob: -4.691781044006348
    5. '_car' → logprob: -5.066781044006348
    6. 'bottom' → logprob: -5.566781044006348
    7. '_any' → logprob: -6.191781044006348
    8. '_none' → logprob: -6.691781044006348
    9. '_empty' → logprob: -7.066781044006348
    10. '_space' → logprob: -7.191781044006348

Token 244: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.21828505396842957
    2. '()' → logprob: -1.968285083770752
    3. '_' → logprob: -2.968285083770752
    4. 'car' → logprob: -5.843285083770752
    5. '(self' → logprob: -6.468285083770752
    6. '(' → logprob: -8.968284606933594
    7. '_space' → logprob: -8.968284606933594
    8. 'Car' → logprob: -10.093284606933594
    9. '()
' → logprob: -10.093284606933594
    10. '_c' → logprob: -10.593284606933594

Token 245: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021676832693628967
    2. '(' → logprob: -8.500216484069824
    3. 'self' → logprob: -11.875216484069824
    4. '(
' → logprob: -12.250216484069824
    5. ' (' → logprob: -14.750216484069824
    6. '(s' → logprob: -15.125216484069824
    7. '()' → logprob: -15.125216484069824
    8. '   ' → logprob: -15.375216484069824
    9. ' self' → logprob: -16.00021743774414
    10. '	self' → logprob: -16.37521743774414

Token 246: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6812374591827393
    2. '):
' → logprob: -0.8062374591827393
    3. ')' → logprob: -3.4312374591827393
    4. '()' → logprob: -4.80623722076416
    5. '()):
' → logprob: -5.55623722076416
    6. '   ' → logprob: -7.05623722076416
    7. '():
' → logprob: -7.43123722076416
    8. '(self' → logprob: -7.68123722076416
    9. '():' → logprob: -8.05623722076416
    10. 'self' → logprob: -8.05623722076416

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11689035594463348
    2. '   ' → logprob: -2.7418904304504395
    3. 'return' → logprob: -3.4918904304504395
    4. ' return' → logprob: -4.2418904304504395
    5. ':' → logprob: -7.9918904304504395
    6. ':return' → logprob: -8.991889953613281
    7. ':
' → logprob: -9.241889953613281
    8. '(' → logprob: -9.491889953613281
    9. '        
' → logprob: -9.991889953613281
    10. '<|end|>' → logprob: -9.991889953613281

Token 248: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6878853440284729
    2. 'return' (adapté à ' return') → logprob: -1.1878852844238281
    3. '       ' → logprob: -1.6878852844238281
    4. '   ' → logprob: -4.937885284423828
    5. ' (' → logprob: -8.187885284423828
    6. '(return' → logprob: -9.187885284423828
    7. '(' → logprob: -11.312885284423828
    8. ' ' → logprob: -11.562885284423828
    9. '     ' → logprob: -12.812885284423828
    10. '	return' → logprob: -12.812885284423828

Token 249: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009011718444526196
    2. 'self' → logprob: -5.384011745452881
    3. ' (' → logprob: -5.509011745452881
    4. '(bool' → logprob: -9.259011268615723
    5. '   ' → logprob: -9.634011268615723
    6. ' self' → logprob: -10.134011268615723
    7. '(not' → logprob: -10.384011268615723
    8. '(' → logprob: -10.509011268615723
    9. '((' → logprob: -10.509011268615723
    10. ' ' → logprob: -10.634011268615723

Token 250: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6331696510314941
    2. '(self' → logprob: -0.7581696510314941
    3. ' (' → logprob: -8.383169174194336
    4. ' self' → logprob: -8.383169174194336
    5. 'bool' → logprob: -10.258169174194336
    6. '(' → logprob: -10.758169174194336
    7. '[self' → logprob: -10.758169174194336
    8. '(bool' → logprob: -11.133169174194336
    9. '   ' → logprob: -11.883169174194336
    10. ' ' → logprob: -12.383169174194336

Token 251: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -8.911954500945285e-05
    2. '.top' → logprob: -9.500088691711426
    3. 'bottom' → logprob: -11.250088691711426
    4. '.' → logprob: -14.250088691711426
    5. ' bottom' → logprob: -16.000089645385742
    6. ' .' → logprob: -16.000089645385742
    7. '.bot' → logprob: -16.625089645385742
    8. '   ' → logprob: -17.375089645385742
    9. '```' → logprob: -17.875089645385742
    10. ').' → logprob: -18.000089645385742

Token 252: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.20159178972244263
    2. ' is' → logprob: -1.7015917301177979
    3. '   ' → logprob: -8.826591491699219
    4. ')' → logprob: -11.326591491699219
    5. 'and' → logprob: -11.451591491699219
    6. ' ' → logprob: -12.076591491699219
    7. ')is' → logprob: -13.326591491699219
    8. '    ' → logprob: -14.326591491699219
    9. '	is' → logprob: -15.326591491699219
    10. 'if' → logprob: -15.701591491699219

Token 253: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.40231624245643616
    2. 'None' → logprob: -1.1523162126541138
    3. ' not' → logprob: -4.652316093444824
    4. ' None' → logprob: -5.152316093444824
    5. '   ' → logprob: -14.902316093444824
    6. 'none' → logprob: -14.902316093444824
    7. '(None' → logprob: -15.902316093444824
    8. ' ' → logprob: -16.27731704711914
    9. 'Not' → logprob: -16.90231704711914
    10. '	not' → logprob: -17.40231704711914

Token 254: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000837980885989964
    2. 'and' → logprob: -7.250837802886963
    3. ')!=' → logprob: -9.625838279724121
    4. ' )' → logprob: -10.375838279724121
    5. ' and' → logprob: -11.625838279724121
    6. 'or' → logprob: -11.625838279724121
    7. ' or' → logprob: -12.250838279724121
    8. '   ' → logprob: -12.750838279724121
    9. '       ' → logprob: -12.750838279724121
    10. ',' → logprob: -14.250838279724121

Token 255: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0008118899422697723
    2. ')!=' → logprob: -8.250811576843262
    3. '^' → logprob: -9.125811576843262
    4. ' !=' → logprob: -9.250811576843262
    5. ')' → logprob: -9.250811576843262
    6. '!=(' → logprob: -9.500811576843262
    7. 'or' → logprob: -9.875811576843262
    8. '()!=' → logprob: -10.125811576843262
    9. 'is' → logprob: -10.250811576843262
    10. 'xor' → logprob: -10.750811576843262

Token 256: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11494753509759903
    2. '(True' → logprob: -2.614947557449341
    3. '(False' → logprob: -3.489947557449341
    4. ' (' → logprob: -5.364947319030762
    5. '(bool' → logprob: -9.364947319030762
    6. '(None' → logprob: -9.739947319030762
    7. 'False' → logprob: -10.489947319030762
    8. '(' → logprob: -11.364947319030762
    9. 'True' → logprob: -11.489947319030762
    10. '   ' → logprob: -11.614947319030762

Token 257: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010552048683166504
    2. '(self' → logprob: -4.760551929473877
    3. ' self' → logprob: -6.260551929473877
    4. ' (' → logprob: -10.760552406311035
    5. '   ' → logprob: -13.760552406311035
    6. '[self' → logprob: -14.010552406311035
    7. ' ' → logprob: -14.385552406311035
    8. '	self' → logprob: -14.635552406311035
    9. '
' → logprob: -14.885552406311035
    10. '  ' → logprob: -15.635552406311035

Token 258: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.07890091091394424
    2. 'top' → logprob: -2.5789008140563965
    3. 'None' → logprob: -12.203901290893555
    4. ' top' → logprob: -12.828901290893555
    5. '.bottom' → logprob: -13.703901290893555
    6. '(top' → logprob: -13.953901290893555
    7. '[top' → logprob: -14.703901290893555
    8. '	top' → logprob: -15.203901290893555
    9. '   ' → logprob: -15.703901290893555
    10. '.' → logprob: -15.703901290893555

Token 259: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.018332194536924362
    2. ' is' → logprob: -4.018332004547119
    3. 'None' → logprob: -8.643332481384277
    4. ' None' → logprob: -12.143332481384277
    5. ' ' → logprob: -14.643332481384277
    6. ')' → logprob: -15.768332481384277
    7. '   ' → logprob: -16.51833152770996
    8. ')is' → logprob: -16.51833152770996
    9. '=None' → logprob: -18.26833152770996
    10. '```' → logprob: -18.39333152770996

Token 260: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004307884373702109
    2. ' None' → logprob: -7.750430583953857
    3. '(None' → logprob: -16.625431060791016
    4. 'not' → logprob: -16.875431060791016
    5. '=None' → logprob: -17.000431060791016
    6. '   ' → logprob: -17.500431060791016
    7. ' ' → logprob: -18.125431060791016
    8. 'none' → logprob: -19.375431060791016
    9. '_None' → logprob: -19.500431060791016
    10. '  ' → logprob: -19.750431060791016

Token 261: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -13.250003814697266
    3. ' )' → logprob: -13.500003814697266
    4. '   ' → logprob: -14.500003814697266
    5. '<|end|>' → logprob: -15.250003814697266
    6. ')

' → logprob: -17.000003814697266
    7. '       ' → logprob: -17.375003814697266
    8. '))' → logprob: -17.750003814697266
    9. ')#' → logprob: -17.750003814697266
    10. '),' → logprob: -18.000003814697266

Token 262: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03785200044512749
    2. 'def' (adapté à ' def') → logprob: -3.5378520488739014
    3. '<|end|>' → logprob: -5.162851810455322
    4. ' def' → logprob: -6.787851810455322
    5. '
' → logprob: -7.787851810455322
    6. '<|end|>' → logprob: -8.16285228729248
    7. '    
' → logprob: -9.03785228729248
    8. ' ' → logprob: -9.28785228729248
    9. '```' → logprob: -9.53785228729248
    10. '  ' → logprob: -9.78785228729248

Token 264: ' cars' (ID: 13653)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.9360823631286621
    2. 'has' → logprob: -1.311082363128662
    3. ' can' → logprob: -1.811082363128662
    4. 'can' → logprob: -1.936082363128662
    5. 'def' → logprob: -4.061082363128662
    6. ' is' → logprob: -5.061082363128662
    7. ' def' → logprob: -5.561082363128662
    8. 'is' → logprob: -6.186082363128662
    9. 'available' → logprob: -8.31108283996582
    10. ' available' → logprob: -8.81108283996582

Token 265: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019032935379073024
    2. '(' → logprob: -6.376903057098389
    3. '()' → logprob: -8.751903533935547
    4. 'self' → logprob: -11.376903533935547
    5. '_count' → logprob: -11.376903533935547
    6. '(
' → logprob: -11.751903533935547
    7. '   ' → logprob: -12.126903533935547
    8. ' (' → logprob: -13.001903533935547
    9. '():' → logprob: -14.376903533935547
    10. '()(' → logprob: -14.501903533935547

Token 266: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45841214060783386
    2. '):' → logprob: -1.0834121704101562
    3. '):
' → logprob: -3.8334121704101562
    4. '()' → logprob: -5.708412170410156
    5. '()):
' → logprob: -6.833412170410156
    6. '())' → logprob: -7.208412170410156
    7. ' )' → logprob: -7.583412170410156
    8. ' ):' → logprob: -7.583412170410156
    9. '():' → logprob: -7.583412170410156
    10. '):

' → logprob: -8.583412170410156

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9266199160483666e-05
    2. '   ' → logprob: -11.125019073486328
    3. '[]' → logprob: -13.500019073486328
    4. ' if' → logprob: -14.500019073486328
    5. ':' → logprob: -14.625019073486328
    6. '[' → logprob: -14.875019073486328
    7. '           ' → logprob: -15.125019073486328
    8. '      ' → logprob: -15.250019073486328
    9. 'return' → logprob: -15.375019073486328
    10. '     ' → logprob: -15.625019073486328

Token 268: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6602054238319397
    2. 'cars' → logprob: -1.285205364227295
    3. 'car' → logprob: -1.660205364227295
    4. 'c' → logprob: -5.285205364227295
    5. 'return' → logprob: -5.535205364227295
    6. 'if' → logprob: -6.410205364227295
    7. '   ' → logprob: -6.660205364227295
    8. 'bottom' → logprob: -7.160205364227295
    9. 'sp' → logprob: -7.535205364227295
    10. '[' → logprob: -7.910205364227295

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028131507337093353
    2. '()' → logprob: -4.028131484985352
    3. '=' → logprob: -5.278131484985352
    4. '   ' → logprob: -6.028131484985352
    5. '():' → logprob: -6.528131484985352
    6. '=[]' → logprob: -8.403131484985352
    7. ' ' → logprob: -8.528131484985352
    8. ':' → logprob: -8.528131484985352
    9. '       ' → logprob: -9.153131484985352
    10. '()
' → logprob: -10.028131484985352

Token 270: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.038305867463350296
    2. '[]' → logprob: -3.2883057594299316
    3. ' []
' → logprob: -8.53830623626709
    4. '[' → logprob: -9.91330623626709
    5. '[]

' → logprob: -11.53830623626709
    6. ' []' → logprob: -12.41330623626709
    7. '([])
' → logprob: -13.53830623626709
    8. '   ' → logprob: -13.53830623626709
    9. '[])
' → logprob: -13.66330623626709
    10. '[(' → logprob: -14.66330623626709

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016460261540487409
    2. ' if' → logprob: -6.501646041870117
    3. 'if' → logprob: -9.126646041870117
    4. '[' → logprob: -11.501646041870117
    5. '
' → logprob: -12.001646041870117
    6. '```' → logprob: -12.126646041870117
    7. ',' → logprob: -12.626646041870117
    8. '   ' → logprob: -12.876646041870117
    9. '        
' → logprob: -13.251646041870117
    10. '[]' → logprob: -13.501646041870117

Token 272: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02980823442339897
    2. ' if' → logprob: -3.779808282852173
    3. '       ' → logprob: -5.029808044433594
    4. '   ' → logprob: -14.529808044433594
    5. '	if' → logprob: -14.904808044433594
    6. '[' → logprob: -15.529808044433594
    7. ' ' → logprob: -15.904808044433594
    8. '
' → logprob: -16.904808044433594
    9. 'for' → logprob: -17.654808044433594
    10. '	' → logprob: -18.029808044433594

Token 273: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269972026348114
    2. ' self' → logprob: -2.126997232437134
    3. '       ' → logprob: -9.626996994018555
    4. '   ' → logprob: -13.751996994018555
    5. ' ' → logprob: -14.251996994018555
    6. '	self' → logprob: -14.376996994018555
    7. '(self' → logprob: -14.876996994018555
    8. '[self' → logprob: -15.501996994018555
    9. '           ' → logprob: -16.376996994018555
    10. '=self' → logprob: -16.626996994018555

Token 274: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -1.8193366486229934e-05
    2. '.' → logprob: -11.250018119812012
    3. ' .' → logprob: -12.875018119812012
    4. '.top' → logprob: -13.250018119812012
    5. 'bottom' → logprob: -14.750018119812012
    6. '.bot' → logprob: -15.750018119812012
    7. '.Bottom' → logprob: -16.000019073486328
    8. '.has' → logprob: -16.250019073486328
    9. '.lower' → logprob: -17.625019073486328
    10. '   ' → logprob: -17.625019073486328

Token 275: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07023095339536667
    2. 'is' → logprob: -2.6952309608459473
    3. ':' → logprob: -8.195230484008789
    4. ':
' → logprob: -11.070230484008789
    5. ' ' → logprob: -13.820230484008789
    6. '	is' → logprob: -14.070230484008789
    7. ')' → logprob: -15.195230484008789
    8. '!=' → logprob: -15.320230484008789
    9. '   ' → logprob: -15.820230484008789
    10. '```' → logprob: -16.19523048400879

Token 276: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.25231605768203735
    2. ' not' → logprob: -1.5023159980773926
    3. 'None' → logprob: -9.37731647491455
    4. '       ' → logprob: -9.50231647491455
    5. '   ' → logprob: -9.75231647491455
    6. '
' → logprob: -10.62731647491455
    7. '```' → logprob: -10.62731647491455
    8. '    ' → logprob: -10.62731647491455
    9. 'Not' → logprob: -11.00231647491455
    10. '           ' → logprob: -11.62731647491455

Token 277: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00015955790877342224
    2. ' None' → logprob: -8.75015926361084
    3. '(None' → logprob: -15.00015926361084
    4. '   ' → logprob: -15.50015926361084
    5. 'none' → logprob: -15.62515926361084
    6. '=None' → logprob: -15.87515926361084
    7. '_None' → logprob: -16.500160217285156
    8. '```' → logprob: -16.750160217285156
    9. 'not' → logprob: -18.125160217285156
    10. ',None' → logprob: -18.250160217285156

Token 278: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12333465367555618
    2. ':' → logprob: -2.2483346462249756
    3. '           ' → logprob: -4.748334884643555
    4. 'result' → logprob: -6.998334884643555
    5. '       ' → logprob: -8.248334884643555
    6. ',result' → logprob: -8.498334884643555
    7. '):
' → logprob: -8.623334884643555
    8. ',' → logprob: -9.498334884643555
    9. '[result' → logprob: -9.873334884643555
    10. '(result' → logprob: -9.998334884643555

Token 279: '           ' (ID: 352)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.22781327366828918
    2. '       ' → logprob: -2.352813243865967
    3. '           ' → logprob: -2.852813243865967
    4. ' result' → logprob: -2.977813243865967
    5. ',result' → logprob: -10.602813720703125
    6. '	result' → logprob: -12.352813720703125
    7. '
' → logprob: -12.852813720703125
    8. '(result' → logprob: -13.102813720703125
    9. '   ' → logprob: -13.727813720703125
    10. '	       ' → logprob: -14.102813720703125

Token 280: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.023253517225384712
    2. ' result' → logprob: -3.7732534408569336
    3. '               ' → logprob: -12.398253440856934
    4. '           ' → logprob: -12.523253440856934
    5. '       ' → logprob: -15.773253440856934
    6. '	result' → logprob: -16.14825439453125
    7. ',result' → logprob: -17.39825439453125
    8. '(result' → logprob: -17.77325439453125
    9. '.result' → logprob: -18.14825439453125
    10. '[result' → logprob: -18.39825439453125

Token 281: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -11.750008583068848
    3. ' .' → logprob: -15.375008583068848
    4. 'append' → logprob: -18.00000762939453
    5. '.ap' → logprob: -18.12500762939453
    6. '.app' → logprob: -18.62500762939453
    7. '.add' → logprob: -20.12500762939453
    8. '.extend' → logprob: -20.12500762939453
    9. ').' → logprob: -20.37500762939453
    10. '.Append' → logprob: -21.25000762939453

Token 282: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033939589047804475
    2. 'self' → logprob: -8.00033950805664
    3. '(' → logprob: -12.62533950805664
    4. ' self' → logprob: -14.75033950805664
    5. '((' → logprob: -15.75033950805664
    6. ' (' → logprob: -16.50033950805664
    7. '   ' → logprob: -18.50033950805664
    8. '	self' → logprob: -19.62533950805664
    9. '('' → logprob: -20.50033950805664
    10. '(
' → logprob: -20.50033950805664

Token 283: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -2.7014437364414334e-05
    2. '.' → logprob: -10.87502670288086
    3. ' .' → logprob: -11.87502670288086
    4. 'bottom' → logprob: -14.12502670288086
    5. '.top' → logprob: -16.12502670288086
    6. '.Bottom' → logprob: -16.50002670288086
    7. '.bot' → logprob: -17.25002670288086
    8. '   ' → logprob: -17.75002670288086
    9. '.b' → logprob: -17.87502670288086
    10. ').' → logprob: -18.12502670288086

Token 284: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741246700286865
    2. ')
' → logprob: -0.9741246700286865
    3. '       ' → logprob: -10.474124908447266
    4. ' )
' → logprob: -11.724124908447266
    5. ' )' → logprob: -12.474124908447266
    6. ')return' → logprob: -12.849124908447266
    7. ')

' → logprob: -13.224124908447266
    8. '   ' → logprob: -13.599124908447266
    9. ')
' → logprob: -14.349124908447266
    10. '())
' → logprob: -15.224124908447266

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008216670714318752
    2. 'if' → logprob: -5.508216857910156
    3. ' if' → logprob: -5.633216857910156
    4. '   ' → logprob: -7.633216857910156
    5. '```' → logprob: -10.258216857910156
    6. '
' → logprob: -11.383216857910156
    7. 'return' → logprob: -11.633216857910156
    8. '           ' → logprob: -12.508216857910156
    9. '	if' → logprob: -13.883216857910156
    10. '	' → logprob: -14.133216857910156

Token 286: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04079973325133324
    2. ' if' → logprob: -3.415799617767334
    3. 'if' (adapté à ' if') → logprob: -5.040799617767334
    4. '   ' → logprob: -7.415799617767334
    5. '
' → logprob: -11.415800094604492
    6. ' ' → logprob: -11.665800094604492
    7. '	' → logprob: -11.915800094604492
    8. '	if' → logprob: -11.915800094604492
    9. 'return' → logprob: -12.040800094604492
    10. '    ' → logprob: -12.665800094604492

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693451344966888
    2. ' self' → logprob: -2.12693452835083
    3. '           ' → logprob: -13.001934051513672
    4. '       ' → logprob: -13.126934051513672
    5. '   ' → logprob: -14.126934051513672
    6. '	self' → logprob: -15.001934051513672
    7. ' ' → logprob: -15.126934051513672
    8. '(self' → logprob: -15.376934051513672
    9. ' ' → logprob: -15.626934051513672
    10. '    ' → logprob: -16.501934051513672

Token 288: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.0006111674592830241
    2. 'top' → logprob: -7.500611305236816
    3. '.' → logprob: -9.875611305236816
    4. ' .' → logprob: -12.375611305236816
    5. ' top' → logprob: -13.250611305236816
    6. '	top' → logprob: -15.125611305236816
    7. '[top' → logprob: -15.875611305236816
    8. 'Top' → logprob: -16.0006103515625
    9. '.
' → logprob: -16.3756103515625
    10. '.Top' → logprob: -16.8756103515625

Token 289: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10022101551294327
    2. 'is' → logprob: -2.3502209186553955
    3. '        ' → logprob: -12.100220680236816
    4. '       ' → logprob: -13.350220680236816
    5. '           ' → logprob: -13.600220680236816
    6. ' ' → logprob: -13.600220680236816
    7. '    ' → logprob: -13.725220680236816
    8. '
' → logprob: -14.350220680236816
    9. '   ' → logprob: -14.475220680236816
    10. '         ' → logprob: -14.475220680236816

Token 290: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2811759114265442
    2. 'not' → logprob: -1.4061758518218994
    3. 'None' → logprob: -11.90617561340332
    4. '   ' → logprob: -12.40617561340332
    5. ' ' → logprob: -12.53117561340332
    6. '    ' → logprob: -13.28117561340332
    7. 'Not' → logprob: -13.28117561340332
    8. '       ' → logprob: -13.90617561340332
    9. ' ' → logprob: -13.90617561340332
    10. '	not' → logprob: -14.15617561340332

Token 291: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002622894535306841
    2. ' None' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.125262260437012
    4. 'none' → logprob: -16.625263214111328
    5. 'not' → logprob: -16.875263214111328
    6. '_None' → logprob: -17.000263214111328
    7. '(None' → logprob: -17.500263214111328
    8. '    ' → logprob: -17.500263214111328
    9. '       ' → logprob: -17.625263214111328
    10. '  ' → logprob: -18.000263214111328

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043861642479896545
    2. ':
' → logprob: -3.1688616275787354
    3. '):' → logprob: -7.7938618659973145
    4. '):
' → logprob: -8.418861389160156
    5. '           ' → logprob: -9.043861389160156
    6. ')' → logprob: -9.418861389160156
    7. ',' → logprob: -11.668861389160156
    8. '       ' → logprob: -11.793861389160156
    9. ':return' → logprob: -13.543861389160156
    10. ' :' → logprob: -13.668861389160156

Token 293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037896272260695696
    2. 'result' → logprob: -5.62878942489624
    3. ' result' → logprob: -8.628789901733398
    4. '       ' → logprob: -11.753789901733398
    5. ',result' → logprob: -13.878789901733398
    6. '(result' → logprob: -14.753789901733398
    7. '   ' → logprob: -15.003789901733398
    8. '
' → logprob: -15.253789901733398
    9. 'return' → logprob: -15.503789901733398
    10. '	result' → logprob: -15.628789901733398

Token 294: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.20142163336277008
    2. ' result' → logprob: -1.7014216184616089
    3. '           ' → logprob: -12.201421737670898
    4. '       ' → logprob: -12.701421737670898
    5. '(result' → logprob: -16.5764217376709
    6. '	result' → logprob: -16.5764217376709
    7. ',result' → logprob: -17.4514217376709
    8. '[result' → logprob: -18.4514217376709
    9. '        ' → logprob: -18.8264217376709
    10. '=result' → logprob: -18.8264217376709

Token 295: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3544423381972592e-05
    2. 'append' → logprob: -11.37501335144043
    3. '.' → logprob: -13.25001335144043
    4. ' .' → logprob: -15.37501335144043
    5. '.app' → logprob: -17.12501335144043
    6. '.extend' → logprob: -17.37501335144043
    7. '           ' → logprob: -18.75001335144043
    8. '.add' → logprob: -19.12501335144043
    9. '.Append' → logprob: -19.25001335144043
    10. 'Append' → logprob: -19.62501335144043

Token 296: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. '(
' → logprob: -18.000009536743164
    4. ' (' → logprob: -18.250009536743164
    5. 'self' → logprob: -19.625009536743164
    6. '(sel' → logprob: -21.000009536743164
    7. '(this' → logprob: -21.500009536743164
    8. '((' → logprob: -22.000009536743164
    9. '(s' → logprob: -22.125009536743164
    10. '(

' → logprob: -22.875009536743164

Token 297: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.003181159496307373
    2. 'top' → logprob: -5.753180980682373
    3. '.' → logprob: -13.003181457519531
    4. ' top' → logprob: -14.378181457519531
    5. ' .' → logprob: -15.378181457519531
    6. '	top' → logprob: -15.503181457519531
    7. '[top' → logprob: -16.25318145751953
    8. '.bottom' → logprob: -17.75318145751953
    9. '(top' → logprob: -17.75318145751953
    10. '_top' → logprob: -17.87818145751953

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004120192490518093
    2. ')
' → logprob: -5.504120349884033
    3. '       ' → logprob: -10.754119873046875
    4. ')return' → logprob: -10.879119873046875
    5. ' )' → logprob: -14.754119873046875
    6. '<|end|>' → logprob: -15.254119873046875
    7. ')
' → logprob: -15.379119873046875
    8. ')

' → logprob: -15.504119873046875
    9. 'return' → logprob: -16.004119873046875
    10. '),' → logprob: -16.629119873046875

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034449346363544464
    2. 'return' → logprob: -3.534449338912964
    3. ' return' → logprob: -5.409449577331543
    4. '   ' → logprob: -8.909449577331543
    5. '	return' → logprob: -10.409449577331543
    6. '
' → logprob: -10.784449577331543
    7. '<|end|>' → logprob: -11.909449577331543
    8. ':return' → logprob: -12.159449577331543
    9. '	' → logprob: -12.409449577331543
    10. '```' → logprob: -12.784449577331543

Token 300: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07530124485492706
    2. ' return' → logprob: -2.825301170349121
    3. '       ' → logprob: -4.325301170349121
    4. '
' → logprob: -12.075301170349121
    5. '	return' → logprob: -12.075301170349121
    6. '   ' → logprob: -12.950301170349121
    7. ':return' → logprob: -14.200301170349121
    8. 'eturn' → logprob: -15.200301170349121
    9. '        
' → logprob: -15.700301170349121
    10. ' ' → logprob: -15.950301170349121

Token 301: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0005530327325686812
    2. ' result' → logprob: -7.500553131103516
    3. '(result' → logprob: -21.500553131103516
    4. '[result' → logprob: -21.750553131103516
    5. '	result' → logprob: -22.000553131103516
    6. ' ' → logprob: -22.750553131103516
    7. '  ' → logprob: -23.625553131103516
    8. '   ' → logprob: -24.000553131103516
    9. '=result' → logprob: -24.000553131103516
    10. 're' → logprob: -24.125553131103516

Token 302: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02728923037648201
    2. '
' → logprob: -4.402289390563965
    3. 'def' → logprob: -4.902289390563965
    4. '    
' → logprob: -5.902289390563965
    5. 'class' → logprob: -6.152289390563965
    6. '<|end|>' → logprob: -6.152289390563965
    7. '<|end|>' → logprob: -9.527289390563965
    8. '```' → logprob: -9.652289390563965
    9. ' 
' → logprob: -10.777289390563965
    10. '        
' → logprob: -10.902289390563965

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03995890915393829
    2. 'def' → logprob: -3.289958953857422
    3. 'class' → logprob: -6.789958953857422
    4. ' def' → logprob: -7.789958953857422
    5. '    
' → logprob: -8.414958953857422
    6. '
' → logprob: -10.039958953857422
    7. ' ' → logprob: -10.539958953857422
    8. '```' → logprob: -10.664958953857422
    9. '  ' → logprob: -11.289958953857422
    10. '<|end|>' → logprob: -11.664958953857422

Token 304: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014331669546663761
    2. '   ' → logprob: -4.264331817626953
    3. 'class' → logprob: -9.139331817626953
    4. ' def' → logprob: -9.764331817626953
    5. '    
' → logprob: -13.389331817626953
    6. '```' → logprob: -14.514331817626953
    7. '	def' → logprob: -15.139331817626953
    8. '  ' → logprob: -15.264331817626953
    9. '
' → logprob: -15.514331817626953
    10. ' ' → logprob: -15.764331817626953

Token 305: ' empty' (ID: 8213)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.43921247124671936
    2. 'can' → logprob: -1.189212441444397
    3. ' park' → logprob: -3.6892125606536865
    4. ' remove' → logprob: -4.564212322235107
    5. 'park' → logprob: -5.439212322235107
    6. 'remove' → logprob: -5.439212322235107
    7. ' has' → logprob: -6.189212322235107
    8. ' is' → logprob: -6.564212322235107
    9. '_can' → logprob: -7.064212322235107
    10. ' add' → logprob: -7.439212322235107

Token 306: '_positions' (ID: 93193)
  Prédit: '_bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.6294755339622498
    2. '_' → logprob: -1.0044755935668945
    3. '_top' → logprob: -3.3794755935668945
    4. '_sp' → logprob: -4.0044755935668945
    5. '_space' → logprob: -4.2544755935668945
    6. '_position' → logprob: -4.5044755935668945
    7. '_positions' → logprob: -4.7544755935668945
    8. '_spaces' → logprob: -5.1294755935668945
    9. '_pos' → logprob: -5.8794755935668945
    10. '_b' → logprob: -6.2544755935668945

Token 307: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.392202976712724e-06
    2. 'self' → logprob: -12.500006675720215
    3. '(' → logprob: -14.125006675720215
    4. '   ' → logprob: -14.375006675720215
    5. ' (' → logprob: -14.625006675720215
    6. 'def' → logprob: -14.625006675720215
    7. '(s' → logprob: -16.0000057220459
    8. '       ' → logprob: -16.6250057220459
    9. '():
' → logprob: -16.7500057220459
    10. '_(' → logprob: -17.6250057220459

Token 308: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6910487413406372
    2. '):
' → logprob: -1.0660487413406372
    3. ')' → logprob: -2.4410486221313477
    4. '(self' → logprob: -3.1910486221313477
    5. 'self' → logprob: -3.6910486221313477
    6. '()' → logprob: -7.441048622131348
    7. '()):
' → logprob: -8.816048622131348
    8. '():' → logprob: -9.191048622131348
    9. '):

' → logprob: -9.316048622131348
    10. ' ):' → logprob: -9.441048622131348

Token 309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030555464327335358
    2. 'result' → logprob: -6.253055572509766
    3. 'positions' → logprob: -7.128055572509766
    4. '   ' → logprob: -8.753055572509766
    5. ' positions' → logprob: -9.753055572509766
    6. ' result' → logprob: -9.878055572509766
    7. ':
' → logprob: -11.628055572509766
    8. 'empty' → logprob: -12.128055572509766
    9. ':' → logprob: -12.253055572509766
    10. 'return' → logprob: -12.503055572509766

Token 310: ' pos' (ID: 1253)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.029534317553043365
    2. ' positions' → logprob: -4.279534339904785
    3. '       ' → logprob: -4.404534339904785
    4. 'result' → logprob: -6.529534339904785
    5. 'empty' → logprob: -7.279534339904785
    6. 'pos' (adapté à ' pos') → logprob: -7.279534339904785
    7. 'slots' → logprob: -10.279534339904785
    8. ' result' → logprob: -10.904534339904785
    9. 'spaces' → logprob: -10.904534339904785
    10. ' empty' → logprob: -10.904534339904785

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08218178153038025
    2. '=' → logprob: -2.582181692123413
    3. '=[]
' → logprob: -6.332181930541992
    4. '=[]' → logprob: -6.582181930541992
    5. 's' → logprob: -9.457181930541992
    6. '()' → logprob: -10.582181930541992
    7. '   ' → logprob: -12.582181930541992
    8. 'itions' → logprob: -12.707181930541992
    9. ' ' → logprob: -12.832181930541992
    10. '=[' → logprob: -12.957181930541992

Token 312: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.029755352064967155
    2. '[]' → logprob: -3.5297553539276123
    3. ' []
' → logprob: -12.779755592346191
    4. '[]

' → logprob: -13.404755592346191
    5. '[])
' → logprob: -15.404755592346191
    6. '[' → logprob: -15.654755592346191
    7. '()
' → logprob: -17.029754638671875
    8. '0' → logprob: -17.279754638671875
    9. ' []' → logprob: -17.404754638671875
    10. 'set' → logprob: -17.654754638671875

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006156423594802618
    2. '
' → logprob: -5.8811564445495605
    3. ' if' → logprob: -6.3811564445495605
    4. 'if' → logprob: -7.1311564445495605
    5. '[' → logprob: -8.256155967712402
    6. ' =' → logprob: -8.631155967712402
    7. '.append' → logprob: -9.256155967712402
    8. '(' → logprob: -9.381155967712402
    9. '        
' → logprob: -9.756155967712402
    10. ':' → logprob: -9.881155967712402

Token 314: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006921391934156418
    2. ' if' → logprob: -5.006921291351318
    3. '       ' → logprob: -8.506921768188477
    4. '
' → logprob: -12.631921768188477
    5. '[]' → logprob: -15.131921768188477
    6. '   ' → logprob: -15.131921768188477
    7. '[]
' → logprob: -17.006921768188477
    8. ' ' → logprob: -17.256921768188477
    9. '	if' → logprob: -17.256921768188477
    10. '        ' → logprob: -18.006921768188477

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022838652133942
    2. ' self' → logprob: -1.9102283716201782
    3. '	self' → logprob: -13.410228729248047
    4. '   ' → logprob: -13.785228729248047
    5. '       ' → logprob: -13.910228729248047
    6. '(self' → logprob: -15.160228729248047
    7. '[self' → logprob: -15.410228729248047
    8. ' ' → logprob: -16.535228729248047
    9. '    ' → logprob: -16.660228729248047
    10. '     ' → logprob: -16.785228729248047

Token 316: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -7.226628895296017e-06
    2. '.' → logprob: -12.375007629394531
    3. 'bottom' → logprob: -13.500007629394531
    4. '.top' → logprob: -13.750007629394531
    5. ' .' → logprob: -15.125007629394531
    6. '.bot' → logprob: -17.00000762939453
    7. '.left' → logprob: -18.00000762939453
    8. '.empty' → logprob: -18.00000762939453
    9. '.Bottom' → logprob: -18.12500762939453
    10. '.is' → logprob: -18.75000762939453

Token 317: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01815052703022957
    2. 'is' → logprob: -4.018150329589844
    3. ')' → logprob: -14.768150329589844
    4. '
' → logprob: -16.643150329589844
    5. ' ' → logprob: -17.018150329589844
    6. 'None' → logprob: -17.518150329589844
    7. '	is' → logprob: -17.643150329589844
    8. ' )' → logprob: -17.643150329589844
    9. '<|end|>' → logprob: -17.893150329589844
    10. '```' → logprob: -18.143150329589844

Token 318: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03804149478673935
    2. ' None' → logprob: -3.288041591644287
    3. '   ' → logprob: -17.038042068481445
    4. '_None' → logprob: -17.913042068481445
    5. ' ' → logprob: -18.288042068481445
    6. '_none' → logprob: -18.788042068481445
    7. '(None' → logprob: -18.913042068481445
    8. 'none' → logprob: -19.663042068481445
    9. '  ' → logprob: -19.913042068481445
    10. '=None' → logprob: -20.288042068481445

Token 319: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16040852665901184
    2. ':' → logprob: -1.9104084968566895
    3. '       ' → logprob: -9.285408973693848
    4. '           ' → logprob: -9.785408973693848
    5. '):
' → logprob: -10.910408973693848
    6. ',' → logprob: -11.785408973693848
    7. ' :
' → logprob: -12.160408973693848
    8. ':
' → logprob: -13.910408973693848
    9. ' :' → logprob: -14.035408973693848
    10. ':

' → logprob: -14.160408973693848

Token 320: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14666855335235596
    2. '           ' → logprob: -2.0216684341430664
    3. 'pos' → logprob: -5.896668434143066
    4. ' pos' → logprob: -6.771668434143066
    5. '   ' → logprob: -9.771668434143066
    6. ',pos' → logprob: -10.896668434143066
    7. '	pos' → logprob: -12.521668434143066
    8. ',' → logprob: -12.646668434143066
    9. '	       ' → logprob: -13.396668434143066
    10. '
' → logprob: -14.021668434143066

Token 321: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0005014431662857533
    2. ' pos' → logprob: -7.62550163269043
    3. '0' → logprob: -11.37550163269043
    4. '           ' → logprob: -13.25050163269043
    5. '	pos' → logprob: -16.25050163269043
    6. 'position' → logprob: -17.62550163269043
    7. '   ' → logprob: -17.75050163269043
    8. ' ' → logprob: -18.25050163269043
    9. '1' → logprob: -18.37550163269043
    10. '               ' → logprob: -19.25050163269043

Token 322: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000947545631788671
    2. '.' → logprob: -7.00094747543335
    3. ' .' → logprob: -10.375947952270508
    4. '           ' → logprob: -12.750947952270508
    5. 'append' → logprob: -14.625947952270508
    6. '=' → logprob: -14.750947952270508
    7. '.Append' → logprob: -15.500947952270508
    8. '               ' → logprob: -15.625947952270508
    9. '.add' → logprob: -15.750947952270508
    10. '().' → logprob: -15.750947952270508

Token 323: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42900729179382324
    2. '0' → logprob: -1.0540072917938232
    3. ' (' → logprob: -8.304007530212402
    4. ' ' → logprob: -10.179007530212402
    5. '(self' → logprob: -11.554007530212402
    6. '   ' → logprob: -11.929007530212402
    7. '((' → logprob: -12.804007530212402
    8. '(index' → logprob: -15.054007530212402
    9. '       ' → logprob: -15.179007530212402
    10. '```' → logprob: -15.429007530212402

Token 324: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4748896360397339
    2. '0' → logprob: -0.9748896360397339
    3. ' (' → logprob: -7.224889755249023
    4. ' ' → logprob: -9.724889755249023
    5. '(self' → logprob: -11.599889755249023
    6. '   ' → logprob: -11.849889755249023
    7. '(index' → logprob: -12.849889755249023
    8. ')' → logprob: -12.974889755249023
    9. '       ' → logprob: -14.349889755249023
    10. '(
' → logprob: -15.349889755249023

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02331174910068512
    2. ')
' → logprob: -3.7733118534088135
    3. ' )' → logprob: -10.023311614990234
    4. '       ' → logprob: -11.023311614990234
    5. ' )
' → logprob: -12.773311614990234
    6. ')
' → logprob: -13.898311614990234
    7. '   ' → logprob: -14.523311614990234
    8. ')return' → logprob: -14.648311614990234
    9. ')

' → logprob: -14.773311614990234
    10. '<|end|>' → logprob: -16.148311614990234

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04173143953084946
    2. '
' → logprob: -3.416731357574463
    3. '<|end|>' → logprob: -5.291731357574463
    4. ' 
' → logprob: -6.791731357574463
    5. '        
' → logprob: -7.166731357574463
    6. ' if' → logprob: -8.291731834411621
    7. ' ' → logprob: -8.416731834411621
    8. '        ' → logprob: -8.541731834411621
    9. '  
' → logprob: -8.916731834411621
    10. '    
' → logprob: -10.291731834411621

Token 327: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19130343198776245
    2. '       ' → logprob: -2.4413034915924072
    3. ' if' → logprob: -2.4413034915924072
    4. '   ' → logprob: -10.816303253173828
    5. '	if' → logprob: -13.441303253173828
    6. '
' → logprob: -14.316303253173828
    7. '      ' → logprob: -15.066303253173828
    8. '           ' → logprob: -15.066303253173828
    9. '     ' → logprob: -16.191303253173828
    10. '    ' → logprob: -16.191303253173828

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6326145529747009
    2. ' self' → logprob: -0.7576145529747009
    3. '   ' → logprob: -12.757614135742188
    4. ' ' → logprob: -12.882614135742188
    5. '       ' → logprob: -12.882614135742188
    6. '	self' → logprob: -13.132614135742188
    7. '           ' → logprob: -13.257614135742188
    8. '(self' → logprob: -13.507614135742188
    9. '  ' → logprob: -13.757614135742188
    10. '[self' → logprob: -15.257614135742188

Token 329: '.top' (ID: 16801)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.2519674599170685
    2. '.top' → logprob: -1.501967430114746
    3. ' top' → logprob: -10.501967430114746
    4. '.' → logprob: -11.626967430114746
    5. '	top' → logprob: -13.751967430114746
    6. '[top' → logprob: -15.126967430114746
    7. 'Top' → logprob: -15.376967430114746
    8. '   ' → logprob: -15.876967430114746
    9. '_top' → logprob: -16.501968383789062
    10. ' .' → logprob: -16.626968383789062

Token 330: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005932236090302467
    2. 'is' → logprob: -5.130932331085205
    3. 'None' → logprob: -13.255931854248047
    4. '==' → logprob: -14.005931854248047
    5. ' ==' → logprob: -14.505931854248047
    6. ' None' → logprob: -15.880931854248047
    7. ' ' → logprob: -15.880931854248047
    8. '   ' → logprob: -16.505931854248047
    9. '	is' → logprob: -16.630931854248047
    10. ')' → logprob: -16.755931854248047

Token 331: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00317783304490149
    2. ' None' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.378177642822266
    4. '(None' → logprob: -17.503177642822266
    5. ' ' → logprob: -17.878177642822266
    6. '=None' → logprob: -18.128177642822266
    7. '_None' → logprob: -18.753177642822266
    8. '0' → logprob: -19.253177642822266
    9. '  ' → logprob: -20.003177642822266
    10. ',None' → logprob: -20.503177642822266

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5805914998054504
    2. ':
' → logprob: -0.8305914998054504
    3. '           ' → logprob: -5.455591678619385
    4. '):
' → logprob: -8.330591201782227
    5. '       ' → logprob: -9.580591201782227
    6. '):' → logprob: -10.455591201782227
    7. ',' → logprob: -11.330591201782227
    8. ')' → logprob: -12.455591201782227
    9. '   ' → logprob: -12.580591201782227
    10. ' :
' → logprob: -13.455591201782227

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008046153001487255
    2. ' pos' → logprob: -5.2580461502075195
    3. 'pos' → logprob: -5.8830461502075195
    4. '       ' → logprob: -11.13304615020752
    5. '	pos' → logprob: -12.88304615020752
    6. '	       ' → logprob: -13.50804615020752
    7. '          ' → logprob: -14.00804615020752
    8. '   ' → logprob: -14.13304615020752
    9. ',pos' → logprob: -14.25804615020752
    10. '               ' → logprob: -14.88304615020752

Token 334: ' pos' (ID: 1253)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008089098846539855
    2. '           ' → logprob: -7.5008087158203125
    3. 'pos' (adapté à ' pos') → logprob: -8.750808715820312
    4. ' ' → logprob: -9.375808715820312
    5. '       ' → logprob: -12.000808715820312
    6. '   ' → logprob: -12.250808715820312
    7. ' pos' → logprob: -13.875808715820312
    8. '               ' → logprob: -14.625808715820312
    9. '0' → logprob: -16.125808715820312
    10. '```' → logprob: -16.125808715820312

Token 335: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.4418171455617994e-05
    2. '.' → logprob: -10.250044822692871
    3. 'append' → logprob: -11.750044822692871
    4. '           ' → logprob: -14.500044822692871
    5. '==' → logprob: -15.000044822692871
    6. ' .' → logprob: -15.625044822692871
    7. '=' → logprob: -18.000043869018555
    8. '.app' → logprob: -18.125043869018555
    9. 'Append' → logprob: -18.625043869018555
    10. ').' → logprob: -18.875043869018555

Token 336: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25199970602989197
    2. '(' → logprob: -1.5019997358322144
    3. ' ' → logprob: -9.626999855041504
    4. '(
' → logprob: -12.751999855041504
    5. ' (' → logprob: -13.376999855041504
    6. '   ' → logprob: -15.751999855041504
    7. '```' → logprob: -17.751998901367188
    8. '`' → logprob: -17.751998901367188
    9. ')' → logprob: -18.251998901367188
    10. '  ' → logprob: -18.626998901367188

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.750003814697266
    4. ')' → logprob: -18.250003814697266
    5. '  ' → logprob: -19.875003814697266
    6. '۱' → logprob: -20.000003814697266
    7. '```' → logprob: -20.875003814697266
    8. '１' → logprob: -21.250003814697266
    9. '
' → logprob: -21.687503814697266
    10. '       ' → logprob: -21.750003814697266

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015121236210688949
    2. ')
' → logprob: -6.501512050628662
    3. '       ' → logprob: -11.87651252746582
    4. ')return' → logprob: -13.37651252746582
    5. ' )' → logprob: -15.00151252746582
    6. ')

' → logprob: -15.12651252746582
    7. ')
' → logprob: -15.12651252746582
    8. '   ' → logprob: -16.25151252746582
    9. ']' → logprob: -16.62651252746582
    10. '),' → logprob: -17.50151252746582

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005688918754458427
    2. 'return' → logprob: -5.2556891441345215
    3. ' return' → logprob: -7.7556891441345215
    4. '   ' → logprob: -10.755688667297363
    5. '	return' → logprob: -12.505688667297363
    6. '           ' → logprob: -14.630688667297363
    7. '	' → logprob: -14.880688667297363
    8. ',' → logprob: -15.505688667297363
    9. '
' → logprob: -16.13068962097168
    10. ':return' → logprob: -16.13068962097168

Token 340: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.253713458776474
    2. 'return' (adapté à ' return') → logprob: -1.5037134885787964
    3. ' return' → logprob: -6.378713607788086
    4. '   ' → logprob: -9.503713607788086
    5. '	return' → logprob: -11.878713607788086
    6. '
' → logprob: -13.253713607788086
    7. '           ' → logprob: -14.753713607788086
    8. ':return' → logprob: -15.253713607788086
    9. 'eturn' → logprob: -15.253713607788086
    10. ',' → logprob: -15.378713607788086

Token 341: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0040785204619169235
    2. ' pos' → logprob: -5.504078388214111
    3. '[pos' → logprob: -16.379077911376953
    4. '	pos' → logprob: -17.879077911376953
    5. ' ' → logprob: -18.879077911376953
    6. '[' → logprob: -19.879077911376953
    7. '(pos' → logprob: -20.254077911376953
    8. '_pos' → logprob: -21.129077911376953
    9. '   ' → logprob: -21.254077911376953
    10. '.pos' → logprob: -21.879077911376953

Token 342: '


' (ID: 2499)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25647738575935364
    2. 'def' → logprob: -2.2564773559570312
    3. '<|end|>' → logprob: -2.2564773559570312
    4. '
' → logprob: -4.881477355957031
    5. '    
' → logprob: -5.006477355957031
    6. 'class' → logprob: -6.881477355957031
    7. '<|end|>' → logprob: -7.131477355957031
    8. '```' → logprob: -8.131477355957031
    9. ' def' → logprob: -9.256477355957031
    10. ' 
' → logprob: -10.131477355957031

Token 343: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.410660058259964
    2. 'class' → logprob: -1.4106600284576416
    3. '   ' → logprob: -2.4106600284576416
    4. '
' → logprob: -7.035660266876221
    5. '<|end|>' → logprob: -7.285660266876221
    6. ' def' → logprob: -7.660660266876221
    7. '    
' → logprob: -7.660660266876221
    8. '```' → logprob: -8.910659790039062
    9. '<|end|>' → logprob: -9.285659790039062
    10. ' class' → logprob: -9.410659790039062

Token 344: ' Parking' (ID: 40497)
  Prédit: ' Parking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Parking' → logprob: -0.635979413986206
    2. 'Parking' → logprob: -0.760979413986206
    3. 'Double' → logprob: -7.135979652404785
    4. 'Garage' → logprob: -7.385979652404785
    5. ' Garage' → logprob: -8.135979652404785
    6. 'Two' → logprob: -8.135979652404785
    7. 'Multi' → logprob: -8.260979652404785
    8. ' Double' → logprob: -8.260979652404785
    9. ' Multi' → logprob: -8.760979652404785
    10. ' double' → logprob: -9.260979652404785

Token 345: 'Lot' (ID: 41922)
  Prédit: 'Lot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lot' → logprob: -0.08518984913825989
    2. 'Garage' → logprob: -2.7101898193359375
    3. 'Manager' → logprob: -4.3351898193359375
    4. 'System' → logprob: -6.8351898193359375
    5. 'Stack' → logprob: -7.7101898193359375
    6. 'Area' → logprob: -8.460189819335938
    7. 'Facility' → logprob: -9.835189819335938
    8. 'Tower' → logprob: -9.960189819335938
    9. 'Structure' → logprob: -10.335189819335938
    10. ':' → logprob: -10.460189819335938

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005235767923295498
    2. ':
' → logprob: -5.25523567199707
    3. '(' → logprob: -14.38023567199707
    4. '(object' → logprob: -15.25523567199707
    5. ':def' → logprob: -15.25523567199707
    6. '):' → logprob: -15.50523567199707
    7. '(P' → logprob: -15.63023567199707
    8. ':

' → logprob: -16.00523567199707
    9. '   ' → logprob: -16.38023567199707
    10. ':
' → logprob: -16.63023567199707

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06692486256361008
    2. ' def' → logprob: -2.816924810409546
    3. 'def' → logprob: -5.316925048828125
    4. '	def' → logprob: -10.941925048828125
    5. '(' → logprob: -11.941925048828125
    6. ',' → logprob: -13.191925048828125
    7. '(def' → logprob: -13.316925048828125
    8. ')' → logprob: -13.566925048828125
    9. ' (' → logprob: -13.566925048828125
    10. ':' → logprob: -13.816925048828125

Token 348: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13797001540660858
    2. ' def' → logprob: -2.137969970703125
    3. '   ' → logprob: -4.512969970703125
    4. 'class' → logprob: -11.762969970703125
    5. '	def' → logprob: -12.762969970703125
    6. ' ' → logprob: -13.137969970703125
    7. 'from' → logprob: -13.887969970703125
    8. '```' → logprob: -14.137969970703125
    9. '  ' → logprob: -14.512969970703125
    10. '    ' → logprob: -15.637969970703125

Token 349: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.5458401441574097
    2. ' __' → logprob: -1.6708401441574097
    3. ' def' → logprob: -1.9208401441574097
    4. 'def' → logprob: -3.170840263366699
    5. '__' → logprob: -3.420840263366699
    6. '_init' → logprob: -5.170840263366699
    7. ' init' → logprob: -5.670840263366699
    8. '```' → logprob: -6.545840263366699
    9. 'int' → logprob: -7.545840263366699
    10. ' ' → logprob: -9.4208402633667

Token 350: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00017159747949335724
    2. 'it' → logprob: -8.875171661376953
    3. 'nit' → logprob: -11.500171661376953
    4. '__' → logprob: -11.875171661376953
    5. 'int' → logprob: -12.125171661376953
    6. '   ' → logprob: -12.875171661376953
    7. 'def' → logprob: -13.125171661376953
    8. '_init' → logprob: -13.250171661376953
    9. ' init' → logprob: -14.125171661376953
    10. '```' → logprob: -14.625171661376953

Token 351: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02063169702887535
    2. '(self' → logprob: -3.895631790161133
    3. '__(
' → logprob: -9.895631790161133
    4. '__' → logprob: -11.395631790161133
    5. '_(' → logprob: -11.770631790161133
    6. 'self' → logprob: -11.770631790161133
    7. '   ' → logprob: -11.895631790161133
    8. '(' → logprob: -13.895631790161133
    9. '=self' → logprob: -14.020631790161133
    10. ' (' → logprob: -14.020631790161133

Token 352: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.842555426876061e-06
    2. ' self' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.2500057220459
    4. ',' → logprob: -17.5000057220459
    5. '
' → logprob: -18.3750057220459
    6. '       ' → logprob: -18.6250057220459
    7. '0' → logprob: -18.7500057220459
    8. ' ' → logprob: -20.5000057220459
    9. 'num' → logprob: -21.0000057220459
    10. '1' → logprob: -21.1250057220459

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008439337252639234
    2. 'self' → logprob: -7.1258440017700195
    3. '__,' → logprob: -10.37584400177002
    4. ' ,' → logprob: -12.25084400177002
    5. '_,' → logprob: -14.00084400177002
    6. ',
' → logprob: -14.37584400177002
    7. ',self' → logprob: -14.62584400177002
    8. ' self' → logprob: -15.00084400177002
    9. '(self' → logprob: -15.12584400177002
    10. '__(' → logprob: -15.37584400177002

Token 354: ' m' (ID: 284)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.032212406396865845
    2. 'self' → logprob: -4.782212257385254
    3. ' num' → logprob: -4.782212257385254
    4. 'capacity' → logprob: -5.157212257385254
    5. 'n' → logprob: -5.782212257385254
    6. 'spaces' → logprob: -5.907212257385254
    7. 'space' → logprob: -6.407212257385254
    8. 'total' → logprob: -7.157212257385254
    9. 'max' → logprob: -8.657212257385254
    10. ' capacity' → logprob: -8.657212257385254

Token 355: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48332616686820984
    2. ':' → logprob: -1.1083261966705322
    3. ':int' → logprob: -3.3583261966705322
    4. '):' → logprob: -4.483325958251953
    5. '):
' → logprob: -5.983325958251953
    6. ' ,' → logprob: -6.483325958251953
    7. '=int' → logprob: -7.108325958251953
    8. ',int' → logprob: -7.358325958251953
    9. '=' → logprob: -7.358325958251953
    10. ')' → logprob: -8.608325958251953

Token 356: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031806828919798136
    2. ' int' → logprob: -5.753180503845215
    3. '[int' → logprob: -14.003180503845215
    4. ')' → logprob: -14.753180503845215
    5. ':int' → logprob: -14.753180503845215
    6. '=int' → logprob: -15.003180503845215
    7. ' ' → logprob: -15.253180503845215
    8. '   ' → logprob: -16.25318145751953
    9. ',' → logprob: -16.25318145751953
    10. '2' → logprob: -16.50318145751953

Token 357: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06294882297515869
    2. '):' → logprob: -2.812948703765869
    3. '):
' → logprob: -7.187948703765869
    4. ')' → logprob: -9.187949180603027
    5. ' ,' → logprob: -9.687949180603027
    6. ':' → logprob: -11.062949180603027
    7. '):
' → logprob: -11.312949180603027
    8. ' ):' → logprob: -11.437949180603027
    9. ',m' → logprob: -11.937949180603027
    10. '   ' → logprob: -12.437949180603027

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5146551132202148
    2. ' self' → logprob: -1.1396551132202148
    3. 'self' → logprob: -2.514655113220215
    4. '   ' → logprob: -7.514655113220215
    5. ' ' → logprob: -8.264655113220215
    6. '	self' → logprob: -8.514655113220215
    7. 'from' → logprob: -9.264655113220215
    8. ',' → logprob: -9.389655113220215
    9. '<|end|>' → logprob: -10.014655113220215
    10. 'n' → logprob: -10.514655113220215

Token 359: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010450123809278011
    2. '       ' → logprob: -5.2604498863220215
    3. ' self' → logprob: -5.2604498863220215
    4. 'from' → logprob: -11.88545036315918
    5. '   ' → logprob: -13.01045036315918
    6. '#' → logprob: -15.63545036315918
    7. '	self' → logprob: -16.01045036315918
    8. ' ' → logprob: -16.26045036315918
    9. 'import' → logprob: -16.38545036315918
    10. 'super' → logprob: -16.88545036315918

Token 360: '.sp' (ID: 16144)
  Prédit: '.m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0011043755803257227
    2. '.' → logprob: -7.751104354858398
    3. '.sp' → logprob: -8.126104354858398
    4. '._' → logprob: -9.501104354858398
    5. '.size' → logprob: -9.751104354858398
    6. ' .' → logprob: -9.876104354858398
    7. '.capacity' → logprob: -10.126104354858398
    8. '.num' → logprob: -10.751104354858398
    9. '.s' → logprob: -10.876104354858398
    10. '.rows' → logprob: -11.001104354858398

Token 361: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.0002569289645180106
    2. 'ace' → logprob: -8.375256538391113
    3. 'ac' → logprob: -11.625256538391113
    4. 'a' → logprob: -12.000256538391113
    5. 'ces' → logprob: -13.125256538391113
    6. 'paces' → logprob: -13.250256538391113
    7. 'acing' → logprob: -14.000256538391113
    8. '_' → logprob: -14.250256538391113
    9. 'ec' → logprob: -14.500256538391113
    10. 'spaces' → logprob: -14.625256538391113

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25198784470558167
    2. '=' → logprob: -1.5019878149032593
    3. ':' → logprob: -9.75198745727539
    4. '=[]' → logprob: -15.50198745727539
    5. ' =[' → logprob: -15.62698745727539
    6. '=[' → logprob: -15.87698745727539
    7. '[' → logprob: -16.87698745727539
    8. ' ' → logprob: -17.12698745727539
    9. '=[]
' → logprob: -18.37698745727539
    10. '＝' → logprob: -18.50198745727539

Token 363: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007271163631230593
    2. ' [' → logprob: -5.0072712898254395
    3. '[m' → logprob: -7.5072712898254395
    4. '[int' → logprob: -13.257270812988281
    5. 'deque' → logprob: -13.882270812988281
    6. '[List' → logprob: -14.007270812988281
    7. '[P' → logprob: -14.382270812988281
    8. '[self' → logprob: -14.632270812988281
    9. '[array' → logprob: -14.632270812988281
    10. '[new' → logprob: -14.757270812988281

Token 364: 'Parking' (ID: 57723)
  Prédit: 'Parking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parking' → logprob: -2.935296834039036e-06
    2. ' Parking' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.375003814697266
    4. '       ' → logprob: -21.125003814697266
    5. 'parking' → logprob: -21.250003814697266
    6. 'Painting' → logprob: -22.250003814697266
    7. 'Park' → logprob: -22.500003814697266
    8. '           ' → logprob: -23.000003814697266
    9. ' parking' → logprob: -23.250003814697266
    10. 'Packing' → logprob: -23.375003814697266

Token 365: 'Space' (ID: 13331)
  Prédit: 'Space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Space' → logprob: -1.9361264946837764e-07
    2. 'space' → logprob: -16.375
    3. 'Spaces' → logprob: -17.375
    4. '[' → logprob: -17.5
    5. '_space' → logprob: -17.5
    6. ' Space' → logprob: -19.0
    7. 'Parking' → logprob: -19.25
    8. '   ' → logprob: -19.5
    9. 'Spot' → logprob: -20.0
    10. ' space' → logprob: -20.625

Token 366: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.7432603272027336e-06
    2. 'i' → logprob: -14.000001907348633
    3. '(index' → logprob: -14.500001907348633
    4. '(' → logprob: -15.500001907348633
    5. ' (' → logprob: -16.375001907348633
    6. ' i' → logprob: -17.250001907348633
    7. '(idx' → logprob: -18.625001907348633
    8. '(k' → logprob: -19.125001907348633
    9. ']' → logprob: -19.250001907348633
    10. '(_)' → logprob: -19.375001907348633

Token 367: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002651503309607506
    2. ' )' → logprob: -8.625265121459961
    3. 'for' → logprob: -10.375265121459961
    4. ' for' → logprob: -10.500265121459961
    5. '        ' → logprob: -11.625265121459961
    6. '(i' → logprob: -12.125265121459961
    7. '       ' → logprob: -12.500265121459961
    8. 'i' → logprob: -13.375265121459961
    9. '   ' → logprob: -13.625265121459961
    10. ' i' → logprob: -13.750265121459961

Token 368: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.949026571121067e-05
    2. ' ' → logprob: -9.250099182128906
    3. '0' → logprob: -12.625099182128906
    4. '   ' → logprob: -18.375099182128906
    5. '
' → logprob: -19.000099182128906
    6. ')' → logprob: -19.375099182128906
    7. '```' → logprob: -20.375099182128906
    8. '2' → logprob: -21.125099182128906
    9. '=' → logprob: -21.500099182128906
    10. ',' → logprob: -21.625099182128906

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.297462171758525e-05
    2. '0' → logprob: -10.750033378601074
    3. ' ' → logprob: -11.375033378601074
    4. '   ' → logprob: -17.625032424926758
    5. '2' → logprob: -18.125032424926758
    6. '```' → logprob: -18.500032424926758
    7. '
' → logprob: -19.562532424926758
    8. 'm' → logprob: -19.875032424926758
    9. '100' → logprob: -19.937532424926758
    10. '`' → logprob: -20.187532424926758

Token 370: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ' )' → logprob: -11.000017166137695
    3. ' for' → logprob: -15.250017166137695
    4. 'for' → logprob: -15.750017166137695
    5. ')m' → logprob: -16.250017166137695
    6. ')
' → logprob: -16.375017166137695
    7. ',' → logprob: -17.000017166137695
    8. ' ' → logprob: -18.000017166137695
    9. ')]' → logprob: -18.000017166137695
    10. 'm' → logprob: -18.000017166137695

Token 371: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05672905966639519
    2. 'for' → logprob: -2.9317290782928467
    3. ')' → logprob: -6.306728839874268
    4. '	for' → logprob: -11.056729316711426
    5. ' ' → logprob: -13.181729316711426
    6. ' )' → logprob: -13.556729316711426
    7. ']' → logprob: -14.056729316711426
    8. '   ' → logprob: -15.056729316711426
    9. '       ' → logprob: -15.306729316711426
    10. '
' → logprob: -15.931729316711426

Token 372: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7354415655136108
    2. ' i' → logprob: -1.2354415655136108
    3. 'i' → logprob: -1.7354415655136108
    4. 'range' → logprob: -2.9854416847229004
    5. '_' → logprob: -5.8604416847229
    6. ' _' → logprob: -8.485441207885742
    7. '_range' → logprob: -9.860441207885742
    8. '_i' → logprob: -9.985441207885742
    9. ' ' → logprob: -12.610441207885742
    10. ' in' → logprob: -14.235441207885742

Token 373: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029007334262132645
    2. 'in' → logprob: -3.9040074348449707
    3. ' range' → logprob: -5.029007434844971
    4. 'range' → logprob: -6.279007434844971
    5. ' ' → logprob: -12.529006958007812
    6. ' i' → logprob: -13.404006958007812
    7. '_range' → logprob: -14.154006958007812
    8. '(range' → logprob: -14.279006958007812
    9. ' xrange' → logprob: -14.779006958007812
    10. ',' → logprob: -15.154006958007812

Token 374: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -19.126928329467773
    4. '(range' → logprob: -19.626928329467773
    5. 'rang' → logprob: -21.251928329467773
    6. '_range' → logprob: -21.751928329467773
    7. 'Range' → logprob: -23.376928329467773
    8. ' ' → logprob: -23.626928329467773
    9. ' xrange' → logprob: -23.626928329467773
    10. '.range' → logprob: -23.751928329467773

Token 375: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.3663626305060461e-05
    2. 'm' → logprob: -11.25001335144043
    3. ')m' → logprob: -15.50001335144043
    4. '(' → logprob: -15.62501335144043
    5. '	m' → logprob: -15.87501335144043
    6. ' m' → logprob: -18.00001335144043
    7. ' (' → logprob: -18.87501335144043
    8. ',m' → logprob: -18.87501335144043
    9. '   ' → logprob: -19.00001335144043
    10. '[m' → logprob: -19.50001335144043

Token 376: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.7697225252486533e-06
    2. ')' → logprob: -12.875003814697266
    3. ']' → logprob: -14.000003814697266
    4. ')]
' → logprob: -15.250003814697266
    5. ' )' → logprob: -16.750003814697266
    6. ')}' → logprob: -17.250003814697266
    7. '))' → logprob: -18.750003814697266
    8. ')],' → logprob: -19.000003814697266
    9. '       ' → logprob: -19.375003814697266
    10. '}]' → logprob: -19.375003814697266

Token 377: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07376683503389359
    2. '       ' → logprob: -2.8237669467926025
    3. '<|end|>' → logprob: -4.948766708374023
    4. 'self' → logprob: -5.698766708374023
    5. '   ' → logprob: -7.073766708374023
    6. ' self' → logprob: -8.448766708374023
    7. 'def' → logprob: -8.948766708374023
    8. '
' → logprob: -10.823766708374023
    9. '	self' → logprob: -11.073766708374023
    10. ' ' → logprob: -11.073766708374023

Token 379: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1187300756573677
    2. 'spaces' → logprob: -2.868730068206787
    3. '<|end|>' → logprob: -3.868730068206787
    4. '[]' → logprob: -4.868730068206787
    5. '[m' → logprob: -5.118730068206787
    6. ' spaces' → logprob: -5.618730068206787
    7. 'range' → logprob: -5.743730068206787
    8. ']' → logprob: -5.993730068206787
    9. '[' → logprob: -6.118730068206787
    10. 'list' → logprob: -6.743730068206787

Token 381: '-index' (ID: 45533)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.09352973848581314
    2. '-index' → logprob: -2.96852970123291
    3. 'based' → logprob: -3.59352970123291
    4. ' based' → logprob: -4.84352970123291
    5. ' to' → logprob: -7.21852970123291
    6. ' -' → logprob: -7.46852970123291
    7. 'indexed' → logprob: -8.34352970123291
    8. '-' → logprob: -8.46852970123291
    9. ' indexed' → logprob: -8.96852970123291
    10. ']' → logprob: -8.96852970123291

Token 382: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.000874539720825851
    2. 'based' → logprob: -8.250874519348145
    3. ' based' → logprob: -8.500874519348145
    4. 'ing' → logprob: -8.875874519348145
    5. 'd' → logprob: -9.125874519348145
    6. '[' → logprob: -10.250874519348145
    7. '   ' → logprob: -10.500874519348145
    8. '-based' → logprob: -11.125874519348145
    9. '.' → logprob: -11.250874519348145
    10. ']' → logprob: -11.375874519348145

Token 383: ' internally' (ID: 65530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4316762685775757
    2. '<|end|>' → logprob: -1.3066762685775757
    3. '
' → logprob: -2.5566763877868652
    4. 'self' → logprob: -7.181676387786865
    5. ' self' → logprob: -7.556676387786865
    6. '   ' → logprob: -7.806676387786865
    7. '<|end|>' → logprob: -7.931676387786865
    8. ' ' → logprob: -9.806675910949707
    9. '```' → logprob: -9.806675910949707
    10. ',' → logprob: -10.806675910949707

Token 385: ' numbering' (ID: 169570)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.66792231798172
    2. 'parking' → logprob: -1.2929222583770752
    3. 'spaces' → logprob: -3.167922258377075
    4. 'clar' → logprob: -3.417922258377075
    5. 'cons' → logprob: -3.917922258377075
    6. 'user' → logprob: -3.917922258377075
    7. ' parking' → logprob: -4.292922496795654
    8. ' clarity' → logprob: -4.292922496795654
    9. ' convenience' → logprob: -4.292922496795654
    10. 'space' → logprob: -4.667922496795654

Token 386: ' convenience' (ID: 24582)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6960483193397522
    2. '       ' → logprob: -0.8210483193397522
    3. '<|end|>' → logprob: -2.8210482597351074
    4. '   ' → logprob: -6.696048259735107
    5. '<|end|>' → logprob: -8.196048736572266
    6. 'self' → logprob: -9.196048736572266
    7. ' self' → logprob: -9.946048736572266
    8. ')' → logprob: -9.946048736572266
    9. '
' → logprob: -10.071048736572266
    10. '        
' → logprob: -10.321048736572266

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05392502248287201
    2. '   ' → logprob: -4.053925037384033
    3. '
' → logprob: -4.178925037384033
    4. '<|end|>' → logprob: -4.678925037384033
    5. 'self' → logprob: -4.803925037384033
    6. ' self' → logprob: -6.303925037384033
    7. 'def' → logprob: -8.678924560546875
    8. '```' → logprob: -8.928924560546875
    9. ' ' → logprob: -10.053924560546875
    10. '<|end|>' → logprob: -10.428924560546875

Token 389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009449340868741274
    2. '       ' → logprob: -7.375945091247559
    3. 'from' → logprob: -8.500945091247559
    4. ' self' → logprob: -9.625945091247559
    5. '
' → logprob: -10.750945091247559
    6. '   ' → logprob: -11.625945091247559
    7. 'import' → logprob: -12.375945091247559
    8. '#' → logprob: -12.500945091247559
    9. 'def' → logprob: -12.500945091247559
    10. 'for' → logprob: -12.875945091247559

Token 390: '.wait' (ID: 29833)
  Prédit: '.available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.available' → logprob: -1.059434175491333
    2. '.wait' → logprob: -1.809434175491333
    3. '.queue' → logprob: -2.434434175491333
    4. '.events' → logprob: -2.809434175491333
    5. '.free' → logprob: -3.309434175491333
    6. '.c' → logprob: -3.309434175491333
    7. '.capacity' → logprob: -3.559434175491333
    8. '.' → logprob: -3.559434175491333
    9. '.time' → logprob: -3.684434175491333
    10. '.event' → logprob: -3.809434175491333

Token 391: '_queue' (ID: 25622)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.038214534521102905
    2. '_queue' → logprob: -3.2882144451141357
    3. 'queue' → logprob: -9.163214683532715
    4. 'list' → logprob: -10.663214683532715
    5. '_list' → logprob: -11.038214683532715
    6. '_' → logprob: -11.163214683532715
    7. 'ng' → logprob: -13.163214683532715
    8. 'ING' → logprob: -13.288214683532715
    9. 'ings' → logprob: -13.413214683532715
    10. ' queue' → logprob: -13.538214683532715

Token 392: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25198838114738464
    2. ' =' → logprob: -1.501988410949707
    3. ':' → logprob: -9.751988410949707
    4. '=[]' → logprob: -14.626988410949707
    5. ' ' → logprob: -15.001988410949707
    6. 'deque' → logprob: -15.501988410949707
    7. 's' → logprob: -16.62698745727539
    8. ' :' → logprob: -17.62698745727539
    9. '  ' → logprob: -18.00198745727539
    10. '＝' → logprob: -18.00198745727539

Token 393: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002694416616577655
    2. 'Deque' → logprob: -8.250269889831543
    3. ' deque' → logprob: -11.750269889831543
    4. 'de' → logprob: -15.500269889831543
    5. 'List' → logprob: -17.125268936157227
    6. '   ' → logprob: -17.500268936157227
    7. '(de' → logprob: -19.125268936157227
    8. '	de' → logprob: -20.000268936157227
    9. '.de' → logprob: -20.625268936157227
    10. '`' → logprob: -20.625268936157227

Token 394: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005192132201045752
    2. '=' → logprob: -6.130192279815674
    3. ' =' → logprob: -6.880192279815674
    4. '()' → logprob: -7.130192279815674
    5. '[int' → logprob: -7.255192279815674
    6. '=[]' → logprob: -8.255191802978516
    7. '[List' → logprob: -9.380191802978516
    8. ']' → logprob: -9.880191802978516
    9. '[]' → logprob: -10.255191802978516
    10. '<Car' → logprob: -11.505191802978516

Token 395: 'Car' (ID: 9680)
  Prédit: 'Car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -2.696889623621246e-06
    2. 'Tuple' → logprob: -13.75000286102295
    3. ' Car' → logprob: -13.75000286102295
    4. '[' → logprob: -15.87500286102295
    5. 'Optional' → logprob: -16.125001907348633
    6. 'int' → logprob: -16.625001907348633
    7. ']' → logprob: -16.750001907348633
    8. 'car' → logprob: -16.875001907348633
    9. '(Car' → logprob: -17.125001907348633
    10. '<Car' → logprob: -17.500001907348633

Token 396: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5094070477061905e-05
    2. ']=' → logprob: -11.625015258789062
    3. '[' → logprob: -12.375015258789062
    4. '()]' → logprob: -13.875015258789062
    5. ' ]' → logprob: -14.375015258789062
    6. ']()' → logprob: -16.125015258789062
    7. ']>' → logprob: -16.250015258789062
    8. ']
' → logprob: -16.750015258789062
    9. '`]' → logprob: -17.125015258789062
    10. '>' → logprob: -18.375015258789062

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007725752890110016
    2. ' =' → logprob: -4.882725715637207
    3. ']' → logprob: -9.257725715637207
    4. '()' → logprob: -11.257725715637207
    5. '=[]' → logprob: -11.757725715637207
    6. ')' → logprob: -13.382725715637207
    7. ']=' → logprob: -13.632725715637207
    8. '[]' → logprob: -14.882725715637207
    9. '(' → logprob: -16.257726669311523
    10. '[' → logprob: -16.382726669311523

Token 398: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.5048530030981055e-06
    2. ' deque' → logprob: -13.500001907348633
    3. '(de' → logprob: -17.125001907348633
    4. '[]' → logprob: -19.500001907348633
    5. 'de' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '()' → logprob: -20.625001907348633
    8. 'Deque' → logprob: -21.375001907348633
    9. 'dq' → logprob: -21.500001907348633
    10. 'queue' → logprob: -22.000001907348633

Token 399: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.12258882028982e-05
    2. '([]' → logprob: -10.25006103515625
    3. '()
' → logprob: -10.75006103515625
    4. '()]' → logprob: -13.12506103515625
    5. '[]' → logprob: -13.37506103515625
    6. '()

' → logprob: -15.12506103515625
    7. '(' → logprob: -16.12506103515625
    8. '()<' → logprob: -16.50006103515625
    9. '(),' → logprob: -16.62506103515625
    10. '()
' → logprob: -16.75006103515625

Token 400: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02355675958096981
    2. 'def' → logprob: -3.898556709289551
    3. '       ' → logprob: -6.273556709289551
    4. ' self' → logprob: -7.398556709289551
    5. '   ' → logprob: -8.02355670928955
    6. 'from' → logprob: -9.77355670928955
    7. 'import' → logprob: -10.14855670928955
    8. '
' → logprob: -10.52355670928955
    9. '#' → logprob: -10.89855670928955
    10. '```' → logprob: -11.64855670928955

Token 402: '.current' (ID: 8357)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.070377230644226
    2. '.current' → logprob: -1.195377230644226
    3. '.available' → logprob: -2.1953773498535156
    4. '.ex' → logprob: -2.4453773498535156
    5. '.time' → logprob: -3.5703773498535156
    6. '.active' → logprob: -3.6953773498535156
    7. '.completed' → logprob: -3.9453773498535156
    8. '.par' → logprob: -4.445377349853516
    9. '.depart' → logprob: -4.695377349853516
    10. '.wait' → logprob: -4.695377349853516

Token 403: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0013721456052735448
    2. '_c' → logprob: -6.751372337341309
    3. 'Time' → logprob: -9.751372337341309
    4. '_' → logprob: -9.876372337341309
    5. 'time' → logprob: -9.876372337341309
    6. '_par' → logprob: -11.626372337341309
    7. '_car' → logprob: -11.876372337341309
    8. '_size' → logprob: -12.376372337341309
    9. 'ly' → logprob: -12.626372337341309
    10. ' time' → logprob: -13.251372337341309

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20145125687122345
    2. '=' → logprob: -1.701451301574707
    3. ':' → logprob: -10.201451301574707
    4. ':int' → logprob: -14.701451301574707
    5. ' ' → logprob: -14.826451301574707
    6. ' :' → logprob: -17.20145034790039
    7. '=int' → logprob: -18.32645034790039
    8. '  ' → logprob: -19.07645034790039
    9. 'int' → logprob: -19.32645034790039
    10. '＝' → logprob: -19.57645034790039

Token 405: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'None' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '-' → logprob: -21.000001907348633
    6. '=' → logprob: -21.625001907348633
    7. '۰' → logprob: -22.375001907348633
    8. '000' → logprob: -22.750001907348633
    9. '  ' → logprob: -23.000001907348633
    10. '```' → logprob: -23.125001907348633

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. 'None' → logprob: -19.125
    4. '   ' → logprob: -20.0
    5. '-' → logprob: -20.25
    6. '۰' → logprob: -20.625
    7. 'arrival' → logprob: -20.75
    8. 'arr' → logprob: -21.0625
    9. '=' → logprob: -21.25
    10. '1' → logprob: -21.5

Token 407: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7041651010513306
    2. '
' → logprob: -1.3291651010513306
    3. '<|end|>' → logprob: -1.7041651010513306
    4. 'def' → logprob: -2.954164981842041
    5. '    
' → logprob: -5.954164981842041
    6. '<|end|>' → logprob: -6.204164981842041
    7. ' def' → logprob: -6.579164981842041
    8. '

' → logprob: -8.4541654586792
    9. '```' → logprob: -8.9541654586792
    10. ' ' → logprob: -9.3291654586792

Token 409: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4010928273200989
    2. 'def' → logprob: -1.151092767715454
    3. '   ' → logprob: -5.651093006134033
    4. ' self' → logprob: -5.651093006134033
    5. '<|end|>' → logprob: -5.901093006134033
    6. '#' → logprob: -6.901093006134033
    7. ' def' → logprob: -7.276093006134033
    8. '       ' → logprob: -7.401093006134033
    9. '<|end|>' → logprob: -8.401092529296875
    10. 'pass' → logprob: -8.401092529296875

Token 410: '.output' (ID: 27521)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029342293739318848
    2. '.available' → logprob: -4.904342174530029
    3. '.car' → logprob: -5.529342174530029
    4. '.events' → logprob: -6.029342174530029
    5. '.depart' → logprob: -6.404342174530029
    6. '.process' → logprob: -6.654342174530029
    7. '.completed' → logprob: -6.654342174530029
    8. '.wait' → logprob: -6.779342174530029
    9. ' .' → logprob: -7.154342174530029
    10. '.current' → logprob: -7.279342174530029

Token 411: '_order' (ID: 17446)
  Prédit: '_logs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_logs' → logprob: -1.2104922533035278
    2. '_lines' → logprob: -1.4604922533035278
    3. '_log' → logprob: -1.8354922533035278
    4. '_' → logprob: -2.5854921340942383
    5. ' =' → logprob: -2.9604921340942383
    6. '_events' → logprob: -3.2104921340942383
    7. '_buffer' → logprob: -3.4604921340942383
    8. '_queue' → logprob: -3.4604921340942383
    9. '_times' → logprob: -3.7104921340942383
    10. '=' → logprob: -3.8354921340942383

Token 412: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5068305134773254
    2. '=' → logprob: -1.1318304538726807
    3. '=[]' → logprob: -2.8818304538726807
    4. 'ed' → logprob: -4.50683069229126
    5. ':' → logprob: -5.50683069229126
    6. '_' → logprob: -7.38183069229126
    7. '<|end|>' → logprob: -7.63183069229126
    8. '_id' → logprob: -8.131830215454102
    9. '_queue' → logprob: -8.256830215454102
    10. '_list' → logprob: -8.381830215454102

Token 413: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.03806409612298012
    2. ' List' → logprob: -3.2880640029907227
    3. 'list' → logprob: -11.538064002990723
    4. '[]' → logprob: -12.163064002990723
    5. '[List' → logprob: -12.538064002990723
    6. '	List' → logprob: -13.413064002990723
    7. 'deque' → logprob: -13.538064002990723
    8. ' list' → logprob: -14.413064002990723
    9. 'int' → logprob: -15.538064002990723
    10. ' ' → logprob: -15.663064002990723

Token 414: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6932609677314758
    2. '[int' → logprob: -0.6932609677314758
    3. 'int' → logprob: -10.06826114654541
    4. '[str' → logprob: -10.94326114654541
    5. ' =' → logprob: -11.06826114654541
    6. '[List' → logprob: -11.44326114654541
    7. 'Car' → logprob: -12.06826114654541
    8. '[
' → logprob: -12.06826114654541
    9. '<Car' → logprob: -12.31826114654541
    10. '<|end|>' → logprob: -12.31826114654541

Token 415: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.927930654550437e-05
    2. ']=' → logprob: -10.500029563903809
    3. '[' → logprob: -13.750029563903809
    4. ']
' → logprob: -15.750029563903809
    5. ')' → logprob: -15.750029563903809
    6. ' ]' → logprob: -16.000028610229492
    7. '[int' → logprob: -16.750028610229492
    8. ']int' → logprob: -17.125028610229492
    9. '()]' → logprob: -18.250028610229492
    10. '=' → logprob: -18.500028610229492

Token 416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0022709856275469065
    2. ' =' → logprob: -6.1272711753845215
    3. '=[]' → logprob: -9.377270698547363
    4. '[]' → logprob: -14.752270698547363
    5. ']' → logprob: -15.127270698547363
    6. ' ' → logprob: -15.752270698547363
    7. ')' → logprob: -16.25227165222168
    8. '=[]
' → logprob: -16.37727165222168
    9. '   ' → logprob: -16.62727165222168
    10. '<|end|>' → logprob: -16.87727165222168

Token 417: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.644463479053229e-05
    2. '[]
' → logprob: -10.000046730041504
    3. '[]

' → logprob: -14.375046730041504
    4. '[]}' → logprob: -14.750046730041504
    5. ' []' → logprob: -16.875045776367188
    6. '[])' → logprob: -17.250045776367188
    7. '[]"' → logprob: -17.250045776367188
    8. '[]>' → logprob: -17.750045776367188
    9. '[],' → logprob: -17.750045776367188
    10. '=[]' → logprob: -18.125045776367188

Token 418: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2840254008769989
    2. 'def' → logprob: -1.5340254306793213
    3. '<|end|>' → logprob: -4.034025192260742
    4. '
' → logprob: -4.409025192260742
    5. ' def' → logprob: -7.409025192260742
    6. '    
' → logprob: -7.409025192260742
    7. '<|end|>' → logprob: -8.159025192260742
    8. '```' → logprob: -9.409025192260742
    9. ',' → logprob: -10.659025192260742
    10. ')' → logprob: -10.784025192260742

Token 419: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019003450870513916
    2. '   ' → logprob: -4.019003391265869
    3. ' def' → logprob: -7.894003391265869
    4. '
' → logprob: -8.019003868103027
    5. '    
' → logprob: -10.019003868103027
    6. '<|end|>' → logprob: -11.019003868103027
    7. '       ' → logprob: -11.394003868103027
    8. 'self' → logprob: -11.394003868103027
    9. '```' → logprob: -11.394003868103027
    10. '

' → logprob: -11.394003868103027

Token 420: ' car' (ID: 1669)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7814451456069946
    2. 'List' → logprob: -1.5314451456069946
    3. 'self' → logprob: -1.6564451456069946
    4. 'car' → logprob: -3.656445026397705
    5. '[]' → logprob: -3.656445026397705
    6. 'Car' → logprob: -3.656445026397705
    7. '       ' → logprob: -3.906445026397705
    8. 'def' → logprob: -4.906445026397705
    9. '   ' → logprob: -5.031445026397705
    10. ' #' → logprob: -5.656445026397705

Token 421: '_id' (ID: 1537)
  Prédit: '_ids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.14357426762580872
    2. 's' → logprob: -2.5185742378234863
    3. '_id' → logprob: -3.0185742378234863
    4. '_depart' → logprob: -7.143574237823486
    5. 'ids' → logprob: -7.268574237823486
    6. '<|end|>' → logprob: -7.518574237823486
    7. '_s' → logprob: -7.643574237823486
    8. ' ids' → logprob: -7.893574237823486
    9. 'id' → logprob: -8.268574714660645
    10. 'departure' → logprob: -8.393574714660645

Token 422: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ' order' (ID: 2569)
  Prédit: 'departure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'departure' → logprob: -0.23920553922653198
    2. 'order' → logprob: -1.7392055988311768
    3. 'arrival' → logprob: -4.114205360412598
    4. 'parking' → logprob: -4.239205360412598
    5. 'depart' → logprob: -5.864205360412598
    6. 'the' → logprob: -6.739205360412598
    7. 'park' → logprob: -6.864205360412598
    8. ' departure' → logprob: -7.239205360412598
    9. ' order' → logprob: -8.364205360412598
    10. '   ' → logprob: -10.114205360412598

Token 424: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2914733290672302
    2. 'def' → logprob: -1.916473388671875
    3. '       ' → logprob: -2.416473388671875
    4. ' of' → logprob: -5.041473388671875
    5. 'self' → logprob: -5.291473388671875
    6. ' def' → logprob: -6.916473388671875
    7. '
' → logprob: -7.291473388671875
    8. 'of' → logprob: -7.291473388671875
    9. ' self' → logprob: -7.791473388671875
    10. 's' → logprob: -7.791473388671875

Token 425: ' leaving' (ID: 15021)
  Prédit: 'departure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'departure' → logprob: -0.015186779201030731
    2. 'depart' → logprob: -5.015186786651611
    3. ' departure' → logprob: -5.015186786651611
    4. 'parking' → logprob: -6.765186786651611
    5. 'which' → logprob: -8.640186309814453
    6. 'their' → logprob: -9.265186309814453
    7. 'arrival' → logprob: -9.265186309814453
    8. 'completion' → logprob: -9.390186309814453
    9. '   ' → logprob: -10.015186309814453
    10. 'le' → logprob: -10.515186309814453

Token 426: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5281755924224854
    2. 'def' → logprob: -1.0281755924224854
    3. '<|end|>' → logprob: -3.0281755924224854
    4. '
' → logprob: -6.528175354003906
    5. '<|end|>' → logprob: -6.528175354003906
    6. ' def' → logprob: -6.903175354003906
    7. '    
' → logprob: -9.278175354003906
    8. '```' → logprob: -9.653175354003906
    9. ')' → logprob: -10.028175354003906
    10. ' ' → logprob: -10.153175354003906

Token 427: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12815332412719727
    2. '   ' → logprob: -2.1281533241271973
    3. ' def' → logprob: -6.878153324127197
    4. '
' → logprob: -9.378152847290039
    5. '    
' → logprob: -10.003152847290039
    6. '```' → logprob: -10.378152847290039
    7. '<|end|>' → logprob: -11.753152847290039
    8. '	def' → logprob: -12.128152847290039
    9. '    ' → logprob: -12.753152847290039
    10. ')' → logprob: -12.878152847290039

Token 428: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010413920972496271
    2. '   ' → logprob: -9.750103950500488
    3. ' def' → logprob: -10.000103950500488
    4. '```' → logprob: -15.875103950500488
    5. '
' → logprob: -16.375104904174805
    6. '#' → logprob: -17.250104904174805
    7. '	def' → logprob: -17.375104904174805
    8. '<|end|>' → logprob: -17.750104904174805
    9. ')' → logprob: -18.000104904174805
    10. '    
' → logprob: -18.000104904174805

Token 429: ' can' (ID: 665)
  Prédit: ' park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' park' → logprob: -0.5901123881340027
    2. ' process' → logprob: -1.5901124477386475
    3. ' arrive' → logprob: -2.4651124477386475
    4. ' advance' → logprob: -2.8401124477386475
    5. ' update' → logprob: -3.8401124477386475
    6. ' find' → logprob: -4.090112209320068
    7. 'park' → logprob: -4.090112209320068
    8. 'advance' → logprob: -4.840112209320068
    9. 'process' → logprob: -4.965112209320068
    10. ' try' → logprob: -5.215112209320068

Token 430: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0023820691276341677
    2. '_place' → logprob: -6.627382278442383
    3. '_accept' → logprob: -7.627382278442383
    4. '_allocate' → logprob: -8.127382278442383
    5. '_fit' → logprob: -10.002382278442383
    6. '_ac' → logprob: -10.127382278442383
    7. '_add' → logprob: -10.252382278442383
    8. '_take' → logprob: -11.127382278442383
    9. '_fill' → logprob: -11.252382278442383
    10. '_continue' → logprob: -11.377382278442383

Token 431: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.0010218516690656543
    2. 'place' → logprob: -7.626021862030029
    3. '_' → logprob: -8.501021385192871
    4. 'ac' → logprob: -9.001021385192871
    5. 'accept' → logprob: -9.251021385192871
    6. 'add' → logprob: -10.001021385192871
    7. 'fit' → logprob: -11.626021385192871
    8. ' park' → logprob: -11.751021385192871
    9. 'put' → logprob: -11.876021385192871
    10. 'assign' → logprob: -12.126021385192871

Token 432: '_in' (ID: 2267)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003384422743692994
    2. '(' → logprob: -8.750338554382324
    3. 'self' → logprob: -8.875338554382324
    4. '   ' → logprob: -11.375338554382324
    5. '(
' → logprob: -11.625338554382324
    6. ' self' → logprob: -12.625338554382324
    7. 'def' → logprob: -12.750338554382324
    8. '[self' → logprob: -12.750338554382324
    9. ' (' → logprob: -12.875338554382324
    10. '_in' → logprob: -13.875338554382324

Token 433: '_space' (ID: 36700)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11347733438014984
    2. '(self' → logprob: -2.4884772300720215
    3. 'space' → logprob: -4.1134772300720215
    4. 'def' → logprob: -5.3634772300720215
    5. '_space' → logprob: -6.8634772300720215
    6. ' self' → logprob: -7.1134772300720215
    7. '   ' → logprob: -7.7384772300720215
    8. 'empty' → logprob: -7.8634772300720215
    9. 'bottom' → logprob: -8.61347770690918
    10. 'this' → logprob: -9.98847770690918

Token 434: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.37503719329834
    3. 'self' → logprob: -12.50003719329834
    4. '(
' → logprob: -13.62503719329834
    5. ' (' → logprob: -14.87503719329834
    6. '   ' → logprob: -16.125036239624023
    7. '(s' → logprob: -17.125036239624023
    8. '(space' → logprob: -17.125036239624023
    9. 'def' → logprob: -17.750036239624023
    10. ' self' → logprob: -18.000036239624023

Token 435: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00118677644059062
    2. 'self' → logprob: -6.876186847686768
    3. ',' → logprob: -9.87618637084961
    4. '(' → logprob: -10.75118637084961
    5. ' self' → logprob: -10.75118637084961
    6. '(
' → logprob: -11.00118637084961
    7. ' (' → logprob: -11.25118637084961
    8. ')' → logprob: -11.87618637084961
    9. ',self' → logprob: -12.37618637084961
    10. 'space' → logprob: -12.50118637084961

Token 436: ' space' (ID: 4918)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004224185831844807
    2. 'space' → logprob: -5.7542243003845215
    3. '       ' → logprob: -7.3792243003845215
    4. ' self' → logprob: -8.379223823547363
    5. '   ' → logprob: -8.629223823547363
    6. 'car' → logprob: -12.254223823547363
    7. 'def' → logprob: -12.629223823547363
    8. ')' → logprob: -13.129223823547363
    9. ' space' → logprob: -13.754223823547363
    10. '(self' → logprob: -14.629223823547363

Token 437: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3079094886779785
    2. ':' → logprob: -1.6829094886779785
    3. 'self' → logprob: -2.6829094886779785
    4. '(self' → logprob: -5.6829094886779785
    5. ' self' → logprob: -5.9329094886779785
    6. '   ' → logprob: -6.0579094886779785
    7. '       ' → logprob: -6.6829094886779785
    8. ':self' → logprob: -8.30790901184082
    9. ' ,' → logprob: -8.68290901184082
    10. ')' → logprob: -8.80790901184082

Token 438: ' Parking' (ID: 40497)
  Prédit: 'Parking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parking' → logprob: -0.1893336921930313
    2. 'self' → logprob: -1.9393336772918701
    3. ' Parking' → logprob: -4.314333915710449
    4. '   ' → logprob: -4.564333915710449
    5. ' self' → logprob: -6.689333915710449
    6. '       ' → logprob: -7.439333915710449
    7. 'Space' → logprob: -7.564333915710449
    8. ',' → logprob: -7.564333915710449
    9. 'int' → logprob: -7.814333915710449
    10. 'space' → logprob: -7.814333915710449

Token 439: 'Space' (ID: 13331)
  Prédit: 'Space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Space' → logprob: -5.319370302458992e-06
    2. 'Spaces' → logprob: -12.875005722045898
    3. 'space' → logprob: -14.125005722045898
    4. '_space' → logprob: -14.125005722045898
    5. '   ' → logprob: -14.375005722045898
    6. ')' → logprob: -15.500005722045898
    7. ' Space' → logprob: -16.3750057220459
    8. '       ' → logprob: -16.5000057220459
    9. '_SPACE' → logprob: -16.7500057220459
    10. 'Position' → logprob: -16.8750057220459

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018208740220870823
    2. ')' → logprob: -9.500182151794434
    3. ' ,' → logprob: -9.750182151794434
    4. '   ' → logprob: -11.000182151794434
    5. '):' → logprob: -11.375182151794434
    6. 'self' → logprob: -12.000182151794434
    7. ':' → logprob: -12.500182151794434
    8. '):
' → logprob: -12.500182151794434
    9. ',
' → logprob: -12.750182151794434
    10. '       ' → logprob: -12.875182151794434

Token 441: ' dp' (ID: 21546)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.34952276945114136
    2. 'level' → logprob: -1.8495228290557861
    3. ' car' → logprob: -2.974522829055786
    4. 'pos' → logprob: -3.724522829055786
    5. ' level' → logprob: -3.849522829055786
    6. 'position' → logprob: -3.849522829055786
    7. ' position' → logprob: -4.974522590637207
    8. ')' → logprob: -5.224522590637207
    9. ' pos' → logprob: -6.474522590637207
    10. 'arrival' → logprob: -6.974522590637207

Token 442: '_time' (ID: 6425)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.6936235427856445
    2. 'os' → logprob: -1.8186235427856445
    3. 't' → logprob: -2.0686235427856445
    4. ':' → logprob: -2.8186235427856445
    5. ',' → logprob: -3.5686235427856445
    6. ')' → logprob: -3.5686235427856445
    7. '):
' → logprob: -3.5686235427856445
    8. 'osition' → logprob: -3.8186235427856445
    9. 'ar' → logprob: -4.4436235427856445
    10. '):' → logprob: -4.6936235427856445

Token 443: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8519774079322815
    2. ',' → logprob: -1.2269773483276367
    3. '):
' → logprob: -1.9769773483276367
    4. '):' → logprob: -2.3519773483276367
    5. ')' → logprob: -3.2269773483276367
    6. 'd' → logprob: -6.726977348327637
    7. 'car' → logprob: -7.101977348327637
    8. '   ' → logprob: -7.601977348327637
    9. '_time' → logprob: -7.601977348327637
    10. 'y' → logprob: -7.851977348327637

Token 444: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08984348922967911
    2. 'Car' → logprob: -3.589843511581421
    3. ')' → logprob: -4.214843273162842
    4. 'nt' → logprob: -4.589843273162842
    5. 't' → logprob: -5.089843273162842
    6. 'self' → logprob: -5.589843273162842
    7. 'Optional' → logprob: -5.589843273162842
    8. ' int' → logprob: -6.089843273162842
    9. 'car' → logprob: -6.339843273162842
    10. '):
' → logprob: -6.464843273162842

Token 445: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7479155659675598
    2. ')' → logprob: -0.8729155659675598
    3. '):
' → logprob: -2.372915506362915
    4. '):' → logprob: -4.247915744781494
    5. '   ' → logprob: -6.997915744781494
    6. ')->' → logprob: -8.997915267944336
    7. ':' → logprob: -8.997915267944336
    8. '):
' → logprob: -8.997915267944336
    9. ' ,' → logprob: -10.372915267944336
    10. ' )' → logprob: -10.747915267944336

Token 446: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06464054435491562
    2. '->' → logprob: -3.564640522003174
    3. ' ->' → logprob: -4.189640522003174
    4. ')' → logprob: -4.564640522003174
    5. '       ' → logprob: -5.314640522003174
    6. ':
' → logprob: -6.564640522003174
    7. '   ' → logprob: -6.689640522003174
    8. ')->' → logprob: -7.689640522003174
    9. '):
' → logprob: -8.189640998840332
    10. '):' → logprob: -8.314640998840332

Token 447: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.006081902887672186
    2. ' bool' → logprob: -5.256082057952881
    3. 'List' → logprob: -7.756082057952881
    4. '   ' → logprob: -8.631081581115723
    5. 'int' → logprob: -9.006081581115723
    6. 'Optional' → logprob: -9.631081581115723
    7. '	bool' → logprob: -11.381081581115723
    8. '       ' → logprob: -11.506081581115723
    9. '(bool' → logprob: -12.506081581115723
    10. ' ' → logprob: -12.631081581115723

Token 448: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014840320218354464
    2. ':
' → logprob: -6.876483917236328
    3. '):' → logprob: -8.376483917236328
    4. ',' → logprob: -9.751483917236328
    5. '<|end|>' → logprob: -10.376483917236328
    6. '):
' → logprob: -10.501483917236328
    7. '   ' → logprob: -10.751483917236328
    8. '       ' → logprob: -11.001483917236328
    9. ')' → logprob: -11.126483917236328
    10. '():' → logprob: -11.501483917236328

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007343231234699488
    2. '   ' → logprob: -5.382343292236328
    3. ':' → logprob: -7.132343292236328
    4. '[' → logprob: -8.007343292236328
    5. ')' → logprob: -8.257343292236328
    6. '        
' → logprob: -9.007343292236328
    7. '    ' → logprob: -9.132343292236328
    8. ' for' → logprob: -9.257343292236328
    9. '<|end|>' → logprob: -9.257343292236328
    10. ' return' → logprob: -9.507343292236328

Token 450: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01607096940279007
    2. 'if' → logprob: -4.39107084274292
    3. ' if' → logprob: -6.64107084274292
    4. '#' (adapté à ' #') → logprob: -7.14107084274292
    5. 'return' → logprob: -7.14107084274292
    6. 'for' → logprob: -8.516071319580078
    7. '   ' → logprob: -9.391071319580078
    8. '
' → logprob: -9.641071319580078
    9. ' for' → logprob: -9.891071319580078
    10. ' return' → logprob: -10.016071319580078

Token 451: ' always' (ID: 3324)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2186294049024582
    2. 'return' → logprob: -2.4686293601989746
    3. '       ' → logprob: -2.5936293601989746
    4. '#' → logprob: -3.4686293601989746
    5. ' if' → logprob: -5.843629360198975
    6. 'space' → logprob: -6.593629360198975
    7. 'empty' → logprob: -7.718629360198975
    8. ' return' → logprob: -8.468629837036133
    9. 'len' → logprob: -8.593629837036133
    10. 'for' → logprob: -9.093629837036133

Token 452: ' true' (ID: 1343)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6900113821029663
    2. 'return' → logprob: -1.0650113821029663
    3. 'if' → logprob: -2.690011501312256
    4. 'def' → logprob: -3.565011501312256
    5. ' return' → logprob: -3.940011501312256
    6. ' True' → logprob: -4.065011501312256
    7. ' if' → logprob: -4.815011501312256
    8. 'allow' → logprob: -5.440011501312256
    9. ' allow' → logprob: -6.315011501312256
    10. 'true' → logprob: -6.565011501312256

Token 453: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: ' but' (ID: 889)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38291677832603455
    2. ' return' → logprob: -2.0079166889190674
    3. ' as' → logprob: -2.2579166889190674
    4. '       ' → logprob: -3.5079166889190674
    5. ' if' → logprob: -4.6329169273376465
    6. ' since' → logprob: -4.6329169273376465
    7. 'if' → logprob: -4.8829169273376465
    8. '   ' → logprob: -5.2579169273376465
    9. ' because' → logprob: -5.7579169273376465
    10. 'since' → logprob: -5.8829169273376465

Token 455: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3777882754802704
    2. 'if' → logprob: -2.2527883052825928
    3. 'def' → logprob: -3.1277883052825928
    4. '       ' → logprob: -3.7527883052825928
    5. 'return' → logprob: -3.8777883052825928
    6. 'for' → logprob: -4.002788066864014
    7. 'we' → logprob: -4.627788066864014
    8. 'the' → logprob: -4.877788066864014
    9. ' if' → logprob: -5.127788066864014
    10. 'could' → logprob: -5.127788066864014

Token 456: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3495628535747528
    2. '       ' → logprob: -1.7245628833770752
    3. 'if' → logprob: -3.599562883377075
    4. ' True' → logprob: -3.849562883377075
    5. ' for' → logprob: -4.099562644958496
    6. '   ' → logprob: -4.599562644958496
    7. 'True' → logprob: -4.724562644958496
    8. 'return' → logprob: -5.349562644958496
    9. '<|end|>' → logprob: -5.349562644958496
    10. ' return' → logprob: -5.599562644958496

Token 457: ' empty' (ID: 8213)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.44072285294532776
    2. 'space' → logprob: -1.5657228231430054
    3. ' not' → logprob: -3.065722942352295
    4. 'self' → logprob: -4.065722942352295
    5. ' self' → logprob: -4.190722942352295
    6. 'dp' → logprob: -4.315722942352295
    7. 'not' → logprob: -4.565722942352295
    8. 'None' → logprob: -5.440722942352295
    9. 'True' → logprob: -5.690722942352295
    10. 'False' → logprob: -5.690722942352295

Token 458: ' or' (ID: 503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1704000234603882
    2. ' and' → logprob: -1.5454000234603882
    3. '       ' → logprob: -1.7954000234603882
    4. ' or' → logprob: -1.9204000234603882
    5. '   ' → logprob: -3.5454001426696777
    6. '_spaces' → logprob: -3.7954001426696777
    7. '(space' → logprob: -3.9204001426696777
    8. '_space' → logprob: -4.295400142669678
    9. 'space' → logprob: -4.295400142669678
    10. ' return' → logprob: -4.295400142669678

Token 459: ' not' (ID: 625)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.5316684246063232
    2. '(space' → logprob: -1.0316684246063232
    3. ' space' → logprob: -4.531668663024902
    4. '(' → logprob: -4.656668663024902
    5. '(self' → logprob: -5.031668663024902
    6. 'self' → logprob: -5.406668663024902
    7. ' (' → logprob: -5.406668663024902
    8. '(not' → logprob: -6.031668663024902
    9. '(has' → logprob: -6.031668663024902
    10. 'has' → logprob: -6.031668663024902

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6105796694755554
    2. '<|end|>' → logprob: -1.4855797290802002
    3. ':' → logprob: -2.3605797290802
    4. ' ' → logprob: -3.1105797290802
    5. '   ' → logprob: -3.8605797290802
    6. '  
' → logprob: -4.735579490661621
    7. '<|end|>' → logprob: -4.860579490661621
    8. ' 
' → logprob: -4.985579490661621
    9. ' if' → logprob: -5.110579490661621
    10. '(space' → logprob: -5.235579490661621

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014026227407157421
    2. '   ' → logprob: -4.514026165008545
    3. ' return' → logprob: -6.264026165008545
    4. 'return' → logprob: -7.014026165008545
    5. '<|end|>' → logprob: -9.764026641845703
    6. ' if' → logprob: -10.514026641845703
    7. ',' → logprob: -10.889026641845703
    8. ':' → logprob: -11.764026641845703
    9. '        
' → logprob: -11.764026641845703
    10. '           ' → logprob: -12.389026641845703

Token 462: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2170161008834839
    2. ' return' → logprob: -1.8420161008834839
    3. '       ' → logprob: -3.3420162200927734
    4. '   ' → logprob: -7.592016220092773
    5. ' if' → logprob: -7.717016220092773
    6. 'if' → logprob: -8.342016220092773
    7. '	return' → logprob: -11.842016220092773
    8. 'space' → logprob: -12.592016220092773
    9. '           ' → logprob: -12.842016220092773
    10. '    ' → logprob: -12.842016220092773

Token 463: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.16687804460525513
    2. ' space' → logprob: -1.9168779850006104
    3. '(space' → logprob: -5.7918782234191895
    4. 'True' → logprob: -6.4168782234191895
    5. ' True' → logprob: -6.5418782234191895
    6. '(True' → logprob: -8.916877746582031
    7. ' len' → logprob: -9.041877746582031
    8. ' (' → logprob: -9.166877746582031
    9. 'len' → logprob: -9.666877746582031
    10. ' not' → logprob: -10.666877746582031

Token 464: '.bottom' (ID: 35613)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.07180633395910263
    2. '.has' → logprob: -2.6968064308166504
    3. '.empty' → logprob: -6.44680643081665
    4. 'is' → logprob: -8.946805953979492
    5. '.' → logprob: -9.321805953979492
    6. 'has' → logprob: -11.321805953979492
    7. 'empty' → logprob: -11.696805953979492
    8. '.bottom' → logprob: -11.696805953979492
    9. ' is' → logprob: -12.071805953979492
    10. '.can' → logprob: -12.571805953979492

Token 465: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07889111340045929
    2. 'is' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.453890800476074
    4. '==' → logprob: -15.078890800476074
    5. ' ' → logprob: -15.703890800476074
    6. ')' → logprob: -16.45389175415039
    7. 'or' → logprob: -16.45389175415039
    8. 'None' → logprob: -16.82889175415039
    9. '	is' → logprob: -16.95389175415039
    10. '[' → logprob: -16.95389175415039

Token 466: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008614926598966122
    2. ' None' → logprob: -4.758615016937256
    3. 'not' → logprob: -15.508614540100098
    4. '_None' → logprob: -17.258615493774414
    5. '(None' → logprob: -17.383615493774414
    6. '   ' → logprob: -17.383615493774414
    7. ' ' → logprob: -17.758615493774414
    8. ' not' → logprob: -18.133615493774414
    9. 'none' → logprob: -18.383615493774414
    10. '=None' → logprob: -18.383615493774414

Token 467: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2070785015821457
    2. '<|end|>' → logprob: -1.832078456878662
    3. 'or' → logprob: -3.707078456878662
    4. ' and' → logprob: -6.707078456878662
    5. 'and' → logprob: -7.332078456878662
    6. '<|end|>' → logprob: -7.582078456878662
    7. '
' → logprob: -12.08207893371582
    8. '.' → logprob: -12.58207893371582
    9. '	or' → logprob: -12.58207893371582
    10. '   ' → logprob: -12.70707893371582

Token 468: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.3136298358440399
    2. '(space' → logprob: -1.4386298656463623
    3. '(dp' → logprob: -4.063629627227783
    4. 'dp' → logprob: -4.938629627227783
    5. ' (' → logprob: -5.563629627227783
    6. ' space' → logprob: -6.438629627227783
    7. '(d' → logprob: -8.188630104064941
    8. '(' → logprob: -8.313630104064941
    9. '(True' → logprob: -8.438630104064941
    10. '   ' → logprob: -8.563630104064941

Token 469: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.004735564813017845
    2. '.bottom' → logprob: -5.754735469818115
    3. 'top' → logprob: -6.879735469818115
    4. '.' → logprob: -8.379735946655273
    5. '.space' → logprob: -9.504735946655273
    6. '.depart' → logprob: -9.754735946655273
    7. ' .' → logprob: -10.254735946655273
    8. '.is' → logprob: -11.254735946655273
    9. '.has' → logprob: -11.254735946655273
    10. 'bottom' → logprob: -11.379735946655273

Token 470: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00016074994346126914
    2. 'is' → logprob: -8.750161170959473
    3. 'None' → logprob: -13.625161170959473
    4. '0' → logprob: -15.250161170959473
    5. '<|end|>' → logprob: -15.250161170959473
    6. ' None' → logprob: -16.000160217285156
    7. ' ' → logprob: -16.000160217285156
    8. '[' → logprob: -16.375160217285156
    9. '<|end|>' → logprob: -16.875160217285156
    10. '==' → logprob: -16.875160217285156

Token 471: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005537479883059859
    2. ' None' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.375554084777832
    4. 'none' → logprob: -15.875554084777832
    5. '(None' → logprob: -16.875553131103516
    6. '_None' → logprob: -16.875553131103516
    7. 'not' → logprob: -17.125553131103516
    8. '    ' → logprob: -17.125553131103516
    9. ' ' → logprob: -17.250553131103516
    10. '  ' → logprob: -17.625553131103516

Token 472: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' _' (ID: 1175)
  Prédit: ' park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' park' → logprob: -0.2722873091697693
    2. ' def' → logprob: -2.147287368774414
    3. 'park' → logprob: -3.397287368774414
    4. ' find' → logprob: -3.397287368774414
    5. ' can' → logprob: -3.897287368774414
    6. ' try' → logprob: -4.022287368774414
    7. 'def' → logprob: -4.897287368774414
    8. '_' → logprob: -6.272287368774414
    9. 'can' → logprob: -7.147287368774414
    10. ' parking' → logprob: -7.272287368774414

Token 476: 'remaining' (ID: 83570)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.0047277212142944
    2. 'park' → logprob: -1.3797277212142944
    3. 'try' → logprob: -1.6297277212142944
    4. 'process' → logprob: -2.629727840423584
    5. 'assign' → logprob: -3.379727840423584
    6. 'can' → logprob: -3.754727840423584
    7. 'attempt' → logprob: -4.379727840423584
    8. 'handle' → logprob: -4.629727840423584
    9. 'advance' → logprob: -5.129727840423584
    10. 'update' → logprob: -5.254727840423584

Token 477: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6986276507377625
    2. '_capacity' → logprob: -1.8236277103424072
    3. '_' → logprob: -1.9486277103424072
    4. '_par' → logprob: -2.5736277103424072
    5. '_duration' → logprob: -2.9486277103424072
    6. '_space' → logprob: -3.9486277103424072
    7. '_wait' → logprob: -4.323627471923828
    8. '_c' → logprob: -4.698627471923828
    9. '_car' → logprob: -5.073627471923828
    10. '_spaces' → logprob: -5.573627471923828

Token 478: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003053288906812668
    2. '_for' → logprob: -6.628053188323975
    3. '_to' → logprob: -7.378053188323975
    4. '(car' → logprob: -7.753053188323975
    5. '(' → logprob: -8.378053665161133
    6. '_until' → logprob: -9.378053665161133
    7. '_of' → logprob: -9.628053665161133
    8. '_in' → logprob: -9.753053665161133
    9. '_before' → logprob: -10.253053665161133
    10. '_after' → logprob: -10.378053665161133

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39055904746055603
    2. '(self' → logprob: -1.3905590772628784
    3. 'self' → logprob: -3.265558958053589
    4. ')' → logprob: -3.765558958053589
    5. ',self' → logprob: -5.515559196472168
    6. '(car' → logprob: -5.515559196472168
    7. '(' → logprob: -6.765559196472168
    8. ' ,' → logprob: -7.015559196472168
    9. ')(' → logprob: -7.140559196472168
    10. '_' → logprob: -8.140559196472168

Token 480: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0877719447016716
    2. ' car' → logprob: -2.5877718925476074
    3. 'self' → logprob: -5.712771892547607
    4. 'current' → logprob: -6.587771892547607
    5. 'space' → logprob: -6.962771892547607
    6. 'park' → logprob: -7.337771892547607
    7. ' current' → logprob: -7.337771892547607
    8. ' self' → logprob: -7.462771892547607
    9. 'departure' → logprob: -8.087772369384766
    10. ' departure' → logprob: -8.712772369384766

Token 481: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3456988334655762
    2. 'self' → logprob: -1.3456988334655762
    3. ')' → logprob: -2.095698833465576
    4. ',' → logprob: -2.595698833465576
    5. '(self' → logprob: -2.720698833465576
    6. '(car' → logprob: -2.970698833465576
    7. '<|end|>' → logprob: -3.095698833465576
    8. '.car' → logprob: -3.470698833465576
    9. '):
' → logprob: -3.470698833465576
    10. '):' → logprob: -3.845698833465576

Token 482: ' Car' (ID: 4004)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08519718796014786
    2. 'Car' → logprob: -2.8351972103118896
    3. ' self' → logprob: -3.9601972103118896
    4. ' car' → logprob: -6.5851969718933105
    5. 'car' → logprob: -6.8351969718933105
    6. ')' → logprob: -7.4601969718933105
    7. 'Optional' → logprob: -7.7101969718933105
    8. ' Car' → logprob: -8.710197448730469
    9. 'int' → logprob: -9.460197448730469
    10. ' ' → logprob: -10.335197448730469

Token 483: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33638888597488403
    2. '):
' → logprob: -1.4613888263702393
    3. ')' → logprob: -2.9613888263702393
    4. '   ' → logprob: -6.961389064788818
    5. ',' → logprob: -7.461389064788818
    6. ')->' → logprob: -8.83638858795166
    7. '):
' → logprob: -9.33638858795166
    8. ' ):' → logprob: -9.46138858795166
    9. ':' → logprob: -10.08638858795166
    10. '():
' → logprob: -10.96138858795166

Token 484: ' now' (ID: 1954)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6624126434326172
    2. 'current' → logprob: -0.7874126434326172
    3. 'time' → logprob: -4.537412643432617
    4. 'now' → logprob: -4.787412643432617
    5. 'at' → logprob: -5.537412643432617
    6. ' at' → logprob: -6.412412643432617
    7. ' time' → logprob: -6.912412643432617
    8. 'until' → logprob: -7.037412643432617
    9. 't' → logprob: -7.412412643432617
    10. 'curr' → logprob: -7.912412643432617

Token 485: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21915416419506073
    2. ':' → logprob: -1.9691541194915771
    3. ')' → logprob: -3.094154119491577
    4. '):
' → logprob: -5.094154357910156
    5. ' ):' → logprob: -5.719154357910156
    6. '=' → logprob: -6.469154357910156
    7. ' )' → logprob: -8.094154357910156
    8. ' ' → logprob: -8.719154357910156
    9. '   ' → logprob: -9.594154357910156
    10. ':int' → logprob: -9.719154357910156

Token 486: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000429596402682364
    2. ')' → logprob: -8.125429153442383
    3. ' int' → logprob: -9.000429153442383
    4. '[int' → logprob: -13.250429153442383
    5. ':int' → logprob: -13.250429153442383
    6. '):
' → logprob: -13.500429153442383
    7. '   ' → logprob: -14.000429153442383
    8. '	int' → logprob: -14.250429153442383
    9. '=int' → logprob: -15.000429153442383
    10. '  ' → logprob: -15.250429153442383

Token 487: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.125741109251976
    2. '):' → logprob: -2.2507410049438477
    3. '):
' → logprob: -4.375741004943848
    4. ')->' → logprob: -8.750741004943848
    5. '):
' → logprob: -9.625741004943848
    6. ':' → logprob: -11.250741004943848
    7. ' )' → logprob: -11.750741004943848
    8. '   ' → logprob: -12.000741004943848
    9. '):

' → logprob: -13.375741004943848
    10. ' ):' → logprob: -14.000741004943848

Token 488: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.06665311753749847
    2. ':' → logprob: -2.81665301322937
    3. ' ->' → logprob: -6.066653251647949
    4. '       ' → logprob: -6.941653251647949
    5. ')' → logprob: -7.441653251647949
    6. '   ' → logprob: -7.816653251647949
    7. ')->' → logprob: -8.56665325164795
    8. ':return' → logprob: -9.56665325164795
    9. '=' → logprob: -10.19165325164795
    10. ':
' → logprob: -10.19165325164795

Token 489: ' int' (ID: 677)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18007123470306396
    2. 'int' → logprob: -2.5550713539123535
    3. 'car' → logprob: -2.6800713539123535
    4. 'return' → logprob: -4.1800713539123535
    5. ' car' → logprob: -6.3050713539123535
    6. ' max' → logprob: -6.9300713539123535
    7. '(max' → logprob: -8.930070877075195
    8. 'Car' → logprob: -9.055070877075195
    9. '(int' → logprob: -10.680070877075195
    10. ' return' → logprob: -10.805070877075195

Token 490: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10951045155525208
    2. '       ' → logprob: -2.8595104217529297
    3. ':
' → logprob: -3.1095104217529297
    4. ':return' → logprob: -6.85951042175293
    5. '):
' → logprob: -8.35951042175293
    6. '   ' → logprob: -9.10951042175293
    7. 'return' → logprob: -9.10951042175293
    8. ',' → logprob: -9.23451042175293
    9. '<|end|>' → logprob: -9.73451042175293
    10. '):' → logprob: -10.60951042175293

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018226856365799904
    2. 'return' → logprob: -4.018226623535156
    3. ' return' → logprob: -9.518226623535156
    4. '   ' → logprob: -12.893226623535156
    5. 'max' → logprob: -14.518226623535156
    6. '```' → logprob: -16.143226623535156
    7. '{return' → logprob: -16.143226623535156
    8. '	return' → logprob: -17.018226623535156
    9. '`' → logprob: -17.643226623535156
    10. ' ' → logprob: -17.893226623535156

Token 492: ' remain' (ID: 12760)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.031006157398223877
    2. '       ' → logprob: -3.531006097793579
    3. 'max' → logprob: -7.031006336212158
    4. 'car' → logprob: -8.156005859375
    5. ' return' → logprob: -9.406005859375
    6. '   ' → logprob: -13.906005859375
    7. ' max' → logprob: -15.156005859375
    8. '```' → logprob: -15.531005859375
    9. '{return' → logprob: -16.281005859375
    10. '`' → logprob: -16.656005859375

Token 493: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.4116745889186859
    2. '_time' → logprob: -1.5366746187210083
    3. '=' → logprob: -2.7866744995117188
    4. 's' → logprob: -3.2866744995117188
    5. 'ning' → logprob: -4.786674499511719
    6. ' =' → logprob: -5.661674499511719
    7. 'g' → logprob: -5.786674499511719
    8. '_' → logprob: -6.161674499511719
    9. ')' → logprob: -6.911674499511719
    10. 'ings' → logprob: -7.661674499511719

Token 494: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.18133682012557983
    2. 'max' → logprob: -1.8063368797302246
    3. ' max' → logprob: -6.806336879730225
    4. ' car' → logprob: -7.681336879730225
    5. '(car' → logprob: -12.181336402893066
    6. '   ' → logprob: -12.306336402893066
    7. '       ' → logprob: -12.431336402893066
    8. 'maximum' → logprob: -13.306336402893066
    9. '(max' → logprob: -13.431336402893066
    10. '	car' → logprob: -13.556336402893066

Token 495: '.depart' (ID: 192809)
  Prédit: '.depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depart' → logprob: -2.1888679839321412e-05
    2. '.' → logprob: -11.250021934509277
    3. 'departure' → logprob: -12.125021934509277
    4. ' .' → logprob: -13.000021934509277
    5. '.car' → logprob: -14.625021934509277
    6. '.arr' → logprob: -15.125021934509277
    7. '.department' → logprob: -15.875021934509277
    8. '.de' → logprob: -16.87502098083496
    9. '.dep' → logprob: -17.00002098083496
    10. '.deposit' → logprob: -17.50002098083496

Token 496: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -6.074907287256792e-05
    2. 'ature' → logprob: -10.87506103515625
    3. 't' → logprob: -11.25006103515625
    4. 'iture' → logprob: -11.87506103515625
    5. '_time' → logprob: -11.87506103515625
    6. 'sure' → logprob: -12.37506103515625
    7. 'time' → logprob: -13.37506103515625
    8. '   ' → logprob: -13.62506103515625
    9. 'eture' → logprob: -13.87506103515625
    10. 'uration' → logprob: -14.00006103515625

Token 497: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -13.000004768371582
    3. ' _' → logprob: -14.125004768371582
    4. 'time' → logprob: -14.250004768371582
    5. '_t' → logprob: -15.000004768371582
    6. '_token' → logprob: -16.125003814697266
    7. '_times' → logprob: -16.500003814697266
    8. 't' → logprob: -17.125003814697266
    9. '_timer' → logprob: -17.250003814697266
    10. 's' → logprob: -17.250003814697266

Token 498: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014138251543045
    2. '-' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.451414108276367
    4. '   ' → logprob: -15.951414108276367
    5. ' ' → logprob: -16.076414108276367
    6. '
' → logprob: -17.451414108276367
    7. '–' → logprob: -18.076414108276367
    8. '—' → logprob: -18.451414108276367
    9. '−' → logprob: -18.576414108276367
    10. '  ' → logprob: -18.701414108276367

Token 499: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.008618119172751904
    2. ' now' → logprob: -4.758618354797363
    3. '	now' → logprob: -13.258618354797363
    4. '[now' → logprob: -13.758618354797363
    5. 'max' → logprob: -15.258618354797363
    6. '   ' → logprob: -15.883618354797363
    7. '_now' → logprob: -16.008617401123047
    8. '(now' → logprob: -16.133617401123047
    9. 'nown' → logprob: -16.633617401123047
    10. '.now' → logprob: -16.758617401123047

Token 500: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00268089072778821
    2. 'if' → logprob: -6.252680778503418
    3. '       ' → logprob: -7.502680778503418
    4. ' return' → logprob: -8.627680778503418
    5. ' if' → logprob: -10.877680778503418
    6. '{return' → logprob: -13.377680778503418
    7. '
' → logprob: -14.502680778503418
    8. ':return' → logprob: -15.377680778503418
    9. '	return' → logprob: -16.252681732177734
    10. ')return' → logprob: -17.002681732177734

Token 503: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18066854774951935
    2. 'remain' → logprob: -1.930668592453003
    3. ' max' → logprob: -3.930668592453003
    4. ' remain' → logprob: -7.430668354034424
    5. '0' → logprob: -12.180668830871582
    6. 'rem' → logprob: -12.680668830871582
    7. '	max' → logprob: -13.555668830871582
    8. 'remaining' → logprob: -13.930668830871582
    9. 'min' → logprob: -14.305668830871582
    10. '[max' → logprob: -14.805668830871582

Token 504: '(rem' (ID: 150425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00861456897109747
    2. '(rem' → logprob: -4.758614540100098
    3. 'remain' → logprob: -17.383615493774414
    4. '0' → logprob: -18.133615493774414
    5. 'rem' → logprob: -18.633615493774414
    6. '(rest' → logprob: -18.633615493774414
    7. ' (' → logprob: -20.008615493774414
    8. '(
' → logprob: -20.133615493774414
    9. '(ret' → logprob: -21.008615493774414
    10. '(rel' → logprob: -21.883615493774414

Token 505: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.0003112711710855365
    2. 'aining' → logprob: -9.125310897827148
    3. '0' → logprob: -9.375310897827148
    4. '(' → logprob: -9.750310897827148
    5. '1' → logprob: -10.875310897827148
    6. '[' → logprob: -11.875310897827148
    7. '```' → logprob: -12.250310897827148
    8. '   ' → logprob: -12.250310897827148
    9. ' ' → logprob: -12.375310897827148
    10. 'an' → logprob: -12.375310897827148

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012819580733776093
    2. '(' → logprob: -4.387819766998291
    3. '0' → logprob: -8.137819290161133
    4. ' ,' → logprob: -11.262819290161133
    5. '1' → logprob: -13.012819290161133
    6. ',
' → logprob: -14.012819290161133
    7. ')' → logprob: -14.637819290161133
    8. ' ' → logprob: -15.137819290161133
    9. '),' → logprob: -15.262819290161133
    10. '(
' → logprob: -15.512819290161133

Token 507: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.000051498413086
    4. ')' → logprob: -16.500051498413086
    5. '       ' → logprob: -18.000051498413086
    6. '1' → logprob: -18.812551498413086
    7. '```' → logprob: -18.812551498413086
    8. '           ' → logprob: -19.000051498413086
    9. ' ' → logprob: -19.000051498413086
    10. '۰' → logprob: -19.062551498413086

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. ')' → logprob: -15.250031471252441
    4. '   ' → logprob: -16.875032424926758
    5. '```' → logprob: -17.312532424926758
    6. '۰' → logprob: -17.875032424926758
    7. '1' → logprob: -17.937532424926758
    8. '00' → logprob: -18.312532424926758
    9. 'zero' → logprob: -18.812532424926758
    10. '=' → logprob: -18.875032424926758

Token 509: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018006093159783632
    2. '<|end|>' → logprob: -8.7501802444458
    3. ')
' → logprob: -11.0001802444458
    4. '   ' → logprob: -13.3751802444458
    5. '<|end|>' → logprob: -13.7501802444458
    6. ' )' → logprob: -14.0001802444458
    7. ')return' → logprob: -14.7501802444458
    8. '       ' → logprob: -14.8751802444458
    9. ')

' → logprob: -15.6251802444458
    10. '}' → logprob: -15.7501802444458

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6099523901939392
    2. 'def' → logprob: -1.359952449798584
    3. '<|end|>' → logprob: -1.734952449798584
    4. '
' → logprob: -4.359952449798584
    5. ' def' → logprob: -5.234952449798584
    6. '<|end|>' → logprob: -5.859952449798584
    7. '```' → logprob: -6.859952449798584
    8. '    
' → logprob: -7.359952449798584
    9. ')' → logprob: -8.109951972961426
    10. ' ' → logprob: -8.984951972961426

Token 511: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: ' _' (ID: 1175)
  Prédit: ' park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' park' → logprob: -0.6179108619689941
    2. ' process' → logprob: -1.9929108619689941
    3. ' try' → logprob: -2.117910861968994
    4. ' find' → logprob: -2.867910861968994
    5. 'park' → logprob: -3.117910861968994
    6. ' attempt' → logprob: -3.617910861968994
    7. ' can' → logprob: -3.992910861968994
    8. ' _' → logprob: -4.742910861968994
    9. ' update' → logprob: -5.117910861968994
    10. ' def' → logprob: -5.242910861968994

Token 513: 'find' (ID: 6555)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.1297763586044312
    2. 'park' → logprob: -1.7547763586044312
    3. 'try' → logprob: -1.8797763586044312
    4. 'find' → logprob: -2.1297764778137207
    5. 'can' → logprob: -2.3797764778137207
    6. 'advance' → logprob: -3.5047764778137207
    7. 'update' → logprob: -3.7547764778137207
    8. 'handle' → logprob: -3.7547764778137207
    9. 'remove' → logprob: -4.004776477813721
    10. 'attempt' → logprob: -4.629776477813721

Token 514: '_spaces' (ID: 180762)
  Prédit: '_space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_space' → logprob: -1.299898624420166
    2. '_available' → logprob: -1.299898624420166
    3. '_empty' → logprob: -1.799898624420166
    4. '_sp' → logprob: -2.299898624420166
    5. '_next' → logprob: -2.549898624420166
    6. '_best' → logprob: -2.924898624420166
    7. '_par' → logprob: -3.424898624420166
    8. '_free' → logprob: -4.549898624420166
    9. '_' → logprob: -4.799898624420166
    10. '_first' → logprob: -6.549898624420166

Token 515: '_no' (ID: 13575)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09100448340177536
    2. '_with' → logprob: -2.5910043716430664
    3. '_for' → logprob: -5.466004371643066
    4. '(' → logprob: -6.091004371643066
    5. '_to' → logprob: -6.341004371643066
    6. '_empty' → logprob: -6.341004371643066
    7. '_that' → logprob: -7.091004371643066
    8. 'with' → logprob: -7.591004371643066
    9. '_available' → logprob: -8.716004371643066
    10. 'self' → logprob: -9.591004371643066

Token 516: '_c' (ID: 1303)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6614257097244263
    2. 'ne' → logprob: -0.9114257097244263
    3. '_car' → logprob: -3.5364255905151367
    4. 'car' → logprob: -3.9114255905151367
    5. 'w' → logprob: -4.911425590515137
    6. 'n' → logprob: -5.036425590515137
    7. 'one' → logprob: -5.411425590515137
    8. 'empty' → logprob: -5.911425590515137
    9. 'top' → logprob: -6.161425590515137
    10. 'r' → logprob: -6.286425590515137

Token 517: 'ars' (ID: 1904)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0904156044125557
    2. 'ars' → logprob: -2.4654157161712646
    3. 'ont' → logprob: -6.8404154777526855
    4. '_ar' → logprob: -9.590415954589844
    5. 'on' → logprob: -9.965415954589844
    6. 'a' → logprob: -10.340415954589844
    7. 'cars' → logprob: -10.340415954589844
    8. '(ar' → logprob: -10.590415954589844
    9. '_' → logprob: -11.090415954589844
    10. 'o' → logprob: -11.090415954589844

Token 518: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014239625306800008
    2. 'self' → logprob: -9.000142097473145
    3. '(' → logprob: -11.500142097473145
    4. ' (' → logprob: -12.875142097473145
    5. 'elf' → logprob: -13.375142097473145
    6. 'def' → logprob: -14.125142097473145
    7. ' self' → logprob: -14.375142097473145
    8. '   ' → logprob: -15.000142097473145
    9. '	self' → logprob: -15.000142097473145
    10. '_(' → logprob: -15.000142097473145

Token 519: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007032568100839853
    2. 'self' → logprob: -7.37570333480835
    3. ')' → logprob: -11.250702857971191
    4. '(' → logprob: -11.250702857971191
    5. 'def' → logprob: -11.375702857971191
    6. '       ' → logprob: -11.625702857971191
    7. ' (' → logprob: -11.625702857971191
    8. '):
' → logprob: -12.375702857971191
    9. 'elf' → logprob: -12.625702857971191
    10. 'f' → logprob: -13.000702857971191

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012959148734807968
    2. ':' → logprob: -5.012959003448486
    3. '[' → logprob: -6.012959003448486
    4. '   ' → logprob: -6.762959003448486
    5. '[]' → logprob: -6.762959003448486
    6. ' return' → logprob: -8.762959480285645
    7. ':
' → logprob: -8.887959480285645
    8. ',' → logprob: -8.887959480285645
    9. '):
' → logprob: -9.012959480285645
    10. '=[]' → logprob: -9.512959480285645

Token 521: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07538183778524399
    2. 'return' (adapté à ' return') → logprob: -2.7003817558288574
    3. 'result' → logprob: -6.200381755828857
    4. ' return' → logprob: -6.450381755828857
    5. 'spaces' → logprob: -7.200381755828857
    6. '[' → logprob: -7.575381755828857
    7. '[]' → logprob: -8.700382232666016
    8. ' spaces' → logprob: -9.325382232666016
    9. 'empty' → logprob: -9.700382232666016
    10. ' result' → logprob: -9.950382232666016

Token 522: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.43562787771224976
    2. ' [' → logprob: -1.4356279373168945
    3. '[' → logprob: -2.4356279373168945
    4. '[index' → logprob: -5.6856279373168945
    5. '[int' → logprob: -5.6856279373168945
    6. '[idx' → logprob: -5.9356279373168945
    7. '[self' → logprob: -5.9356279373168945
    8. '[s' → logprob: -6.1856279373168945
    9. '[type' → logprob: -6.5606279373168945
    10. '[item' → logprob: -6.9356279373168945

Token 523: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.007970941253006458
    2. 's' → logprob: -4.882970809936523
    3. ' space' → logprob: -8.007970809936523
    4. 'sp' → logprob: -11.382970809936523
    5. 'i' → logprob: -11.757970809936523
    6. ' s' → logprob: -12.632970809936523
    7. 'spaces' → logprob: -12.757970809936523
    8. '(space' → logprob: -12.882970809936523
    9. '   ' → logprob: -13.757970809936523
    10. 'self' → logprob: -14.382970809936523

Token 524: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038048841059207916
    2. 'for' → logprob: -3.28804874420166
    3. '        ' → logprob: -13.03804874420166
    4. '           ' → logprob: -13.28804874420166
    5. '	for' → logprob: -13.91304874420166
    6. ' ' → logprob: -14.28804874420166
    7. ' in' → logprob: -14.53804874420166
    8. '       ' → logprob: -14.91304874420166
    9. '         ' → logprob: -15.28804874420166
    10. '            ' → logprob: -15.53804874420166

Token 525: ' space' (ID: 4918)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02642952837049961
    2. ' self' → logprob: -3.6514294147491455
    3. 'space' → logprob: -9.026429176330566
    4. ' space' → logprob: -12.901429176330566
    5. '	self' → logprob: -13.401429176330566
    6. '   ' → logprob: -13.651429176330566
    7. ' ' → logprob: -13.901429176330566
    8. '(self' → logprob: -14.026429176330566
    9. '       ' → logprob: -14.151429176330566
    10. '
' → logprob: -15.526429176330566

Token 526: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03420020267367363
    2. 'in' → logprob: -3.4092001914978027
    3. 'space' → logprob: -7.534200191497803
    4. ' space' → logprob: -12.034200668334961
    5. ' ' → logprob: -12.284200668334961
    6. '(space' → logprob: -12.909200668334961
    7. '        ' → logprob: -13.909200668334961
    8. '       ' → logprob: -13.909200668334961
    9. '<|end|>' → logprob: -14.159200668334961
    10. '    ' → logprob: -14.409200668334961

Token 527: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013271415373310447
    2. ' self' → logprob: -6.626327037811279
    3. '(self' → logprob: -14.876327514648438
    4. '
' → logprob: -15.751327514648438
    5. '	self' → logprob: -15.751327514648438
    6. '   ' → logprob: -15.751327514648438
    7. '[self' → logprob: -16.626327514648438
    8. '=self' → logprob: -16.876327514648438
    9. '       ' → logprob: -17.001327514648438
    10. ' ' → logprob: -17.251327514648438

Token 528: '.sp' (ID: 16144)
  Prédit: '.sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.00020389800192788243
    2. 'spaces' → logprob: -9.250204086303711
    3. ' .' → logprob: -10.125204086303711
    4. '.' → logprob: -10.125204086303711
    5. 'self' → logprob: -11.000204086303711
    6. 'sp' → logprob: -13.000204086303711
    7. '.s' → logprob: -13.250204086303711
    8. '	sp' → logprob: -13.875204086303711
    9. 'paces' → logprob: -14.000204086303711
    10. ' spaces' → logprob: -14.375204086303711

Token 529: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -4.23917081207037e-05
    2. 'paces' → logprob: -10.875041961669922
    3. 'spaces' → logprob: -11.000041961669922
    4. '   ' → logprob: -13.125041961669922
    5. 'ace' → logprob: -13.250041961669922
    6. 'ces' → logprob: -14.375041961669922
    7. '```' → logprob: -14.750041961669922
    8. 'laces' → logprob: -15.125041961669922
    9. '(self' → logprob: -15.250041961669922
    10. 'self' → logprob: -15.250041961669922

Token 530: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011049704626202583
    2. 'if' → logprob: -4.511049747467041
    3. '       ' → logprob: -13.761049270629883
    4. '           ' → logprob: -14.386049270629883
    5. '        ' → logprob: -15.761049270629883
    6. '	if' → logprob: -17.136049270629883
    7. '          ' → logprob: -18.011049270629883
    8. '         ' → logprob: -18.136049270629883
    9. '               ' → logprob: -18.136049270629883
    10. '            ' → logprob: -18.386049270629883

Token 531: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.06998022645711899
    2. ' space' → logprob: -2.6949801445007324
    3. '        ' → logprob: -10.94498062133789
    4. '(space' → logprob: -11.19498062133789
    5. '       ' → logprob: -11.94498062133789
    6. '    ' → logprob: -13.44498062133789
    7. '.space' → logprob: -13.94498062133789
    8. '   ' → logprob: -13.94498062133789
    9. ' ' → logprob: -14.44498062133789
    10. '           ' → logprob: -14.56998062133789

Token 532: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.11331374943256378
    2. '.has' → logprob: -2.238313674926758
    3. '.' → logprob: -8.363313674926758
    4. '.empty' → logprob: -8.863313674926758
    5. '.bottom' → logprob: -9.863313674926758
    6. ' .' → logprob: -10.238313674926758
    7. '.have' → logprob: -11.238313674926758
    8. 'is' → logprob: -11.613313674926758
    9. '   ' → logprob: -13.613313674926758
    10. '.are' → logprob: -13.863313674926758

Token 533: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -6.670925358776003e-05
    2. 'empty' → logprob: -9.625066757202148
    3. '_' → logprob: -15.125066757202148
    4. '_none' → logprob: -16.25006675720215
    5. ' empty' → logprob: -16.62506675720215
    6. 'Empty' → logprob: -16.62506675720215
    7. '_EMPTY' → logprob: -17.37506675720215
    8. '(empty' → logprob: -17.62506675720215
    9. '_no' → logprob: -17.75006675720215
    10. 's' → logprob: -18.12506675720215

Token 534: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -3.774276774493046e-05
    2. '()' → logprob: -10.250038146972656
    3. '()]
' → logprob: -13.125038146972656
    4. ']' → logprob: -16.250038146972656
    5. '())' → logprob: -16.750038146972656
    6. ']()' → logprob: -17.000038146972656
    7. '()],' → logprob: -17.375038146972656
    8. '()].' → logprob: -17.750038146972656
    9. '()}' → logprob: -17.875038146972656
    10. '()==' → logprob: -18.750038146972656

Token 535: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006797884125262499
    2. '()]' → logprob: -7.375679969787598
    3. ' ]' → logprob: -10.250679969787598
    4. ')]' → logprob: -11.375679969787598
    5. ']
' → logprob: -12.875679969787598
    6. '   ' → logprob: -13.125679969787598
    7. ']

' → logprob: -13.750679969787598
    8. '       ' → logprob: -15.250679969787598
    9. '.]' → logprob: -16.25067901611328
    10. ']()' → logprob: -16.37567901611328

Token 536: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.43295252323150635
    2. '   ' → logprob: -1.1829525232315063
    3. ' def' → logprob: -3.682952404022217
    4. '
' → logprob: -4.057952404022217
    5. '```' → logprob: -7.182952404022217
    6. '    
' → logprob: -7.432952404022217
    7. '<|end|>' → logprob: -7.932952404022217
    8. ' ' → logprob: -8.432952880859375
    9. '

' → logprob: -8.932952880859375
    10. '	def' → logprob: -8.932952880859375

Token 538: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1457524448633194
    2. '_find' → logprob: -2.020752429962158
    3. '_' → logprob: -6.395752429962158
    4. ' def' → logprob: -7.520752429962158
    5. ' find' → logprob: -8.020752906799316
    6. '_add' → logprob: -9.395752906799316
    7. '_def' → logprob: -9.895752906799316
    8. 'def' → logprob: -10.145752906799316
    9. ' ' → logprob: -10.395752906799316
    10. '_try' → logprob: -10.395752906799316

Token 539: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0005221736500971019
    2. '_find' → logprob: -8.37552261352539
    3. 'remaining' → logprob: -8.50052261352539
    4. ' find' → logprob: -11.00052261352539
    5. '_remaining' → logprob: -11.12552261352539
    6. 'has' → logprob: -11.12552261352539
    7. 'empty' → logprob: -11.87552261352539
    8. 'def' → logprob: -12.12552261352539
    9. 'available' → logprob: -12.50052261352539
    10. 'spaces' → logprob: -13.62552261352539

Token 540: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.0014731991104781628
    2. 'spaces' → logprob: -6.626473426818848
    3. '_positions' → logprob: -9.376473426818848
    4. ' spaces' → logprob: -11.251473426818848
    5. '_' → logprob: -11.501473426818848
    6. '_space' → logprob: -11.876473426818848
    7. '_one' → logprob: -12.126473426818848
    8. '_empty' → logprob: -12.501473426818848
    9. '_sp' → logprob: -12.626473426818848
    10. 'empty' → logprob: -12.876473426818848

Token 541: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.422478049993515
    2. '_no' → logprob: -1.2974780797958374
    3. '_has' → logprob: -3.047477960586548
    4. '_one' → logprob: -4.047478199005127
    5. '_without' → logprob: -6.547478199005127
    6. '_have' → logprob: -6.547478199005127
    7. '_that' → logprob: -7.297478199005127
    8. '(lambda' → logprob: -7.297478199005127
    9. 'with' → logprob: -7.547478199005127
    10. '```' → logprob: -8.297477722167969

Token 542: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.0028628890868276358
    2. '_no' → logprob: -6.377862930297852
    3. 'one' → logprob: -7.252862930297852
    4. '(lambda' → logprob: -9.377862930297852
    5. '_has' → logprob: -10.127862930297852
    6. '
' → logprob: -10.502862930297852
    7. '_two' → logprob: -10.502862930297852
    8. 'One' → logprob: -10.627862930297852
    9. '#' → logprob: -10.752862930297852
    10. '(' → logprob: -11.002862930297852

Token 543: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -6.396757089532912e-05
    2. '_c' → logprob: -10.0000638961792
    3. 'car' → logprob: -11.8750638961792
    4. '_' → logprob: -12.7500638961792
    5. 'def' → logprob: -13.2500638961792
    6. 'Car' → logprob: -13.5000638961792
    7. ' _' → logprob: -13.6250638961792
    8. '```' → logprob: -13.7500638961792
    9. '   ' → logprob: -14.3750638961792
    10. '<Car' → logprob: -15.2500638961792

Token 544: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009132102131843567
    2. '(' → logprob: -4.759131908416748
    3. '(
' → logprob: -8.009132385253906
    4. 'self' → logprob: -9.884132385253906
    5. 'def' → logprob: -10.134132385253906
    6. ' (' → logprob: -10.259132385253906
    7. '(lambda' → logprob: -10.384132385253906
    8. 'return' → logprob: -12.009132385253906
    9. '(s' → logprob: -12.134132385253906
    10. '       ' → logprob: -12.259132385253906

Token 545: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0083806486800313
    2. '():
' → logprob: -5.75838041305542
    3. 'self' → logprob: -6.38338041305542
    4. '()' → logprob: -6.38338041305542
    5. '(' → logprob: -7.38338041305542
    6. '():' → logprob: -7.75838041305542
    7. 'def' → logprob: -8.008380889892578
    8. '(
' → logprob: -8.758380889892578
    9. 'return' → logprob: -9.883380889892578
    10. '   ' → logprob: -9.883380889892578

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01937076635658741
    2. '():
' → logprob: -4.8943705558776855
    3. ' return' → logprob: -5.2693705558776855
    4. ':
' → logprob: -5.5193705558776855
    5. 'return' → logprob: -6.8943705558776855
    6. '):
' → logprob: -7.2693705558776855
    7. '():' → logprob: -7.8943705558776855
    8. ':' → logprob: -8.019371032714844
    9. '()' → logprob: -9.769371032714844
    10. '   ' → logprob: -11.019371032714844

Token 547: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0713333711028099
    2. '       ' → logprob: -2.821333408355713
    3. ' return' → logprob: -4.696333408355713
    4. '
' → logprob: -8.946332931518555
    5. '   ' → logprob: -10.071332931518555
    6. '```' → logprob: -11.321332931518555
    7. '[' → logprob: -12.571332931518555
    8. '	return' → logprob: -13.446332931518555
    9. 'def' → logprob: -14.071332931518555
    10. '[
' → logprob: -14.321332931518555

Token 548: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3872438669204712
    2. ' [' → logprob: -1.1372438669204712
    3. '   ' → logprob: -8.13724422454834
    4. '  ' → logprob: -11.26224422454834
    5. ' ' → logprob: -11.63724422454834
    6. '       ' → logprob: -11.63724422454834
    7. '[
' → logprob: -11.76224422454834
    8. '[self' → logprob: -12.13724422454834
    9. '[s' → logprob: -12.13724422454834
    10. '[i' → logprob: -12.26224422454834

Token 549: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0006326167494989932
    2. ' space' → logprob: -7.3756327629089355
    3. '(space' → logprob: -12.625632286071777
    4. 's' → logprob: -14.250632286071777
    5. '   ' → logprob: -14.625632286071777
    6. '       ' → logprob: -14.750632286071777
    7. '        ' → logprob: -15.500632286071777
    8. '           ' → logprob: -15.500632286071777
    9. 'spaces' → logprob: -15.625632286071777
    10. 'sp' → logprob: -15.625632286071777

Token 550: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01356063224375248
    2. 'for' → logprob: -4.388560771942139
    3. ' if' → logprob: -7.388560771942139
    4. '       ' → logprob: -9.01356029510498
    5. '           ' → logprob: -9.63856029510498
    6. '(space' → logprob: -9.63856029510498
    7. '        ' → logprob: -10.13856029510498
    8. '   ' → logprob: -10.63856029510498
    9. ' in' → logprob: -11.13856029510498
    10. 'space' → logprob: -11.26356029510498

Token 551: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0017287296941503882
    2. 'self' → logprob: -7.126728534698486
    3. ' space' → logprob: -7.126728534698486
    4. 'lambda' → logprob: -9.376729011535645
    5. 's' → logprob: -11.251729011535645
    6. 'x' → logprob: -11.376729011535645
    7. '(space' → logprob: -11.876729011535645
    8. ' self' → logprob: -13.376729011535645
    9. ' lambda' → logprob: -13.876729011535645
    10. 'spaces' → logprob: -14.001729011535645

Token 552: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8251938819885254
    2. 'space' → logprob: -1.4501938819885254
    3. 'in' → logprob: -1.9501938819885254
    4. '(space' → logprob: -2.5751938819885254
    5. 'for' → logprob: -3.3251938819885254
    6. ' for' → logprob: -3.5751938819885254
    7. 'car' → logprob: -4.450193881988525
    8. '   ' → logprob: -4.950193881988525
    9. 'lambda' → logprob: -4.950193881988525
    10. ' space' → logprob: -5.075193881988525

Token 553: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00022070204431656748
    2. ' self' → logprob: -8.50022029876709
    3. 'space' → logprob: -12.62522029876709
    4. '(self' → logprob: -12.75022029876709
    5. '   ' → logprob: -13.12522029876709
    6. '[self' → logprob: -13.25022029876709
    7. '
' → logprob: -13.50022029876709
    8. 'spaces' → logprob: -13.87522029876709
    9. '[' → logprob: -14.12522029876709
    10. 's' → logprob: -14.25022029876709

Token 554: '.sp' (ID: 16144)
  Prédit: '.sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.03898105025291443
    2. 'spaces' → logprob: -3.7889809608459473
    3. 'sp' → logprob: -4.163980960845947
    4. '	sp' → logprob: -11.413981437683105
    5. 'self' → logprob: -11.663981437683105
    6. '.s' → logprob: -11.788981437683105
    7. '(sp' → logprob: -11.788981437683105
    8. '.space' → logprob: -12.538981437683105
    9. 'space' → logprob: -12.538981437683105
    10. '   ' → logprob: -13.163981437683105

Token 555: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.0001801801408873871
    2. 'paces' → logprob: -8.8751802444458
    3. '```' → logprob: -11.6251802444458
    4. 'ace' → logprob: -11.6251802444458
    5. 'a' → logprob: -12.3751802444458
    6. 'spaces' → logprob: -12.7501802444458
    7. '[' → logprob: -12.7501802444458
    8. '#' → logprob: -13.0001802444458
    9. 'ces' → logprob: -13.0001802444458
    10. '   ' → logprob: -13.3751802444458

Token 556: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03805331513285637
    2. 'if' → logprob: -3.288053274154663
    3. '       ' → logprob: -11.913053512573242
    4. '           ' → logprob: -12.413053512573242
    5. '        ' → logprob: -14.788053512573242
    6. '          ' → logprob: -15.288053512573242
    7. '               ' → logprob: -15.413053512573242
    8. '         ' → logprob: -16.038053512573242
    9. '            ' → logprob: -16.663053512573242
    10. '   ' → logprob: -17.288053512573242

Token 557: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.029800597578287125
    2. ' space' → logprob: -3.5298006534576416
    3. '(space' → logprob: -10.779800415039062
    4. '   ' → logprob: -10.904800415039062
    5. '       ' → logprob: -12.279800415039062
    6. ' ' → logprob: -13.779800415039062
    7. '        ' → logprob: -14.029800415039062
    8. '    ' → logprob: -14.154800415039062
    9. 'len' → logprob: -14.529800415039062
    10. '
' → logprob: -14.529800415039062

Token 558: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -12.125007629394531
    3. ' .' → logprob: -14.250007629394531
    4. '   ' → logprob: -14.375007629394531
    5. 'has' → logprob: -14.500007629394531
    6. '.have' → logprob: -15.250007629394531
    7. ' has' → logprob: -15.375007629394531
    8. '.bottom' → logprob: -17.12500762939453
    9. '.is' → logprob: -17.12500762939453
    10. ').' → logprob: -17.25000762939453

Token 559: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.00014120421838015318
    2. 'one' → logprob: -8.875141143798828
    3. '
' → logprob: -14.750141143798828
    4. 'One' → logprob: -15.375141143798828
    5. '```' → logprob: -15.750141143798828
    6. '_only' → logprob: -16.125141143798828
    7. '1' → logprob: -16.250141143798828
    8. '_once' → logprob: -16.250141143798828
    9. ' one' → logprob: -16.750141143798828
    10. '_ONE' → logprob: -16.750141143798828

Token 560: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.676292231422849e-05
    2. 'car' → logprob: -11.250017166137695
    3. '_' → logprob: -13.125017166137695
    4. '(car' → logprob: -14.375017166137695
    5. '_c' → logprob: -14.500017166137695
    6. '
' → logprob: -16.125017166137695
    7. 'Car' → logprob: -16.250017166137695
    8. '()' → logprob: -16.750017166137695
    9. ' _' → logprob: -16.750017166137695
    10. '	car' → logprob: -17.125017166137695

Token 561: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -2.939851037808694e-05
    2. '()' → logprob: -11.000029563903809
    3. ']' → logprob: -11.500029563903809
    4. '()]
' → logprob: -13.000029563903809
    5. ']()' → logprob: -15.500029563903809
    6. '())' → logprob: -17.500028610229492
    7. ')]' → logprob: -17.625028610229492
    8. '()][' → logprob: -18.500028610229492
    9. ' ()' → logprob: -19.000028610229492
    10. '()],' → logprob: -19.000028610229492

Token 562: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6940150260925293
    2. '()]' → logprob: -0.6940150260925293
    3. ')]' → logprob: -7.319015026092529
    4. ']()' → logprob: -9.694015502929688
    5. '()' → logprob: -10.069015502929688
    6. ' ]' → logprob: -10.444015502929688
    7. '<|end|>' → logprob: -10.444015502929688
    8. ')' → logprob: -11.444015502929688
    9. '   ' → logprob: -11.569015502929688
    10. '()]
' → logprob: -11.694015502929688

Token 563: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6585968136787415
    2. '<|end|>' → logprob: -1.2835967540740967
    3. '   ' → logprob: -1.9085967540740967
    4. 'def' (adapté à ' def') → logprob: -3.2835967540740967
    5. '<|end|>' → logprob: -4.158596992492676
    6. '```' → logprob: -6.908596992492676
    7. '

' → logprob: -7.158596992492676
    8. '    
' → logprob: -7.158596992492676
    9. ' def' → logprob: -7.408596992492676
    10. ' ' → logprob: -8.033596992492676

Token 565: ' _' (ID: 1175)
  Prédit: ' park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' park' → logprob: -1.2793959379196167
    2. ' _' → logprob: -1.4043959379196167
    3. '_' → logprob: -1.9043959379196167
    4. ' def' → logprob: -2.2793960571289062
    5. ' try' → logprob: -2.5293960571289062
    6. ' find' → logprob: -2.9043960571289062
    7. ' can' → logprob: -3.2793960571289062
    8. ' add' → logprob: -4.029396057128906
    9. ' attempt' → logprob: -4.779396057128906
    10. ' process' → logprob: -4.904396057128906

Token 566: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.03753262385725975
    2. 'process' → logprob: -3.9125325679779053
    3. 'park' → logprob: -5.287532806396484
    4. '_find' → logprob: -5.412532806396484
    5. 'try' → logprob: -6.412532806396484
    6. 'handle' → logprob: -6.787532806396484
    7. 'def' → logprob: -6.912532806396484
    8. 'assign' → logprob: -7.287532806396484
    9. 'fill' → logprob: -8.162532806396484
    10. 'can' → logprob: -8.162532806396484

Token 567: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.0003404687449801713
    2. '_empty' → logprob: -9.500340461730957
    3. 'spaces' → logprob: -9.500340461730957
    4. '_' → logprob: -9.875340461730957
    5. '_available' → logprob: -10.250340461730957
    6. '_c' → logprob: -10.875340461730957
    7. '_positions' → logprob: -11.000340461730957
    8. '_space' → logprob: -11.875340461730957
    9. '_sp' → logprob: -12.000340461730957
    10. '_car' → logprob: -12.125340461730957

Token 568: '_bottom' (ID: 59652)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.04046241194009781
    2. '_no' → logprob: -3.5404624938964844
    3. 'with' → logprob: -5.040462493896484
    4. '(lambda' → logprob: -6.290462493896484
    5. '_without' → logprob: -7.415462493896484
    6. '(' → logprob: -7.540462493896484
    7. 'def' → logprob: -8.415462493896484
    8. '_has' → logprob: -8.540462493896484
    9. '(self' → logprob: -8.790462493896484
    10. '_not' → logprob: -9.040462493896484

Token 569: '_only' (ID: 43039)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.27472567558288574
    2. '_only' → logprob: -2.0247256755828857
    3. '_with' → logprob: -3.1497256755828857
    4. '_' → logprob: -4.149725914001465
    5. '_is' → logprob: -4.399725914001465
    6. '_not' → logprob: -4.899725914001465
    7. '(' → logprob: -5.149725914001465
    8. '_empty' → logprob: -5.149725914001465
    9. 'with' → logprob: -5.399725914001465
    10. 'only' → logprob: -5.649725914001465

Token 570: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -12.00001335144043
    3. 'def' → logprob: -13.00001335144043
    4. 'self' → logprob: -13.25001335144043
    5. ' (' → logprob: -13.50001335144043
    6. '       ' → logprob: -14.25001335144043
    7. '(
' → logprob: -14.62501335144043
    8. '   ' → logprob: -14.62501335144043
    9. '():
' → logprob: -16.00001335144043
    10. 'return' → logprob: -16.12501335144043

Token 571: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008586966432631016
    2. '():
' → logprob: -8.000858306884766
    3. '):
' → logprob: -8.625858306884766
    4. '(' → logprob: -9.125858306884766
    5. '():' → logprob: -9.500858306884766
    6. '):' → logprob: -9.875858306884766
    7. 'self' → logprob: -10.125858306884766
    8. '       ' → logprob: -10.875858306884766
    9. 'def' → logprob: -11.500858306884766
    10. '()' → logprob: -11.500858306884766

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002281695604324341
    2. 'return' → logprob: -6.377281665802002
    3. ' return' → logprob: -8.25228214263916
    4. '(self' → logprob: -8.62728214263916
    5. '):
' → logprob: -9.87728214263916
    6. 'self' → logprob: -10.50228214263916
    7. '
' → logprob: -10.62728214263916
    8. ')' → logprob: -11.50228214263916
    9. '   ' → logprob: -11.75228214263916
    10. ':
' → logprob: -12.12728214263916

Token 573: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.028772693127393723
    2. ' return' → logprob: -3.9037725925445557
    3. '       ' → logprob: -4.903772830963135
    4. 'def' → logprob: -7.528772830963135
    5. '
' → logprob: -8.903772354125977
    6. '   ' → logprob: -9.403772354125977
    7. '[' → logprob: -11.278772354125977
    8. '```' → logprob: -13.028772354125977
    9. '	return' → logprob: -13.403772354125977
    10. ' ' → logprob: -13.403772354125977

Token 574: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6953129768371582
    2. ' [' → logprob: -0.6953129768371582
    3. '[s' → logprob: -7.570312976837158
    4. '[i' → logprob: -7.820312976837158
    5. '[self' → logprob: -7.945312976837158
    6. '   ' → logprob: -8.0703125
    7. '[size' → logprob: -9.8203125
    8. '[x' → logprob: -10.0703125
    9. '[item' → logprob: -10.0703125
    10. '[int' → logprob: -10.1953125

Token 575: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -9.794061770662665e-05
    2. ' space' → logprob: -9.25009822845459
    3. '(space' → logprob: -14.50009822845459
    4. 's' → logprob: -15.12509822845459
    5. '       ' → logprob: -15.25009822845459
    6. '   ' → logprob: -15.37509822845459
    7. '        ' → logprob: -15.87509822845459
    8. '           ' → logprob: -16.000097274780273
    9. '         ' → logprob: -17.125097274780273
    10. 'spaces' → logprob: -17.125097274780273

Token 576: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5598717927932739
    2. '(space' → logprob: -1.059871792793274
    3. 'for' → logprob: -2.6848716735839844
    4. 'space' → logprob: -5.309871673583984
    5. '(' → logprob: -5.934871673583984
    6. ' if' → logprob: -6.434871673583984
    7. '       ' → logprob: -6.434871673583984
    8. '(lambda' → logprob: -6.809871673583984
    9. ' space' → logprob: -8.184871673583984
    10. 'if' → logprob: -8.309871673583984

Token 577: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.020283063873648643
    2. ' space' → logprob: -4.145283222198486
    3. 'self' → logprob: -5.520283222198486
    4. ' self' → logprob: -9.020282745361328
    5. '(space' → logprob: -9.770282745361328
    6. 's' → logprob: -10.395282745361328
    7. 'lambda' → logprob: -11.395282745361328
    8. 'x' → logprob: -12.145282745361328
    9. ' s' → logprob: -12.895282745361328
    10. '
' → logprob: -13.270282745361328

Token 578: ' in' (ID: 306)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.050376877188682556
    2. ' in' → logprob: -3.4253768920898438
    3. 'if' → logprob: -4.425376892089844
    4. ' for' → logprob: -6.175376892089844
    5. ' ' → logprob: -7.425376892089844
    6. 'for' → logprob: -7.925376892089844
    7. 'space' → logprob: -7.925376892089844
    8. '        ' → logprob: -8.050376892089844
    9. '(space' → logprob: -8.550376892089844
    10. '
' → logprob: -8.675376892089844

Token 579: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3507917821407318
    2. 'space' → logprob: -1.2257918119430542
    3. ' self' → logprob: -6.350791931152344
    4. ' space' → logprob: -7.850791931152344
    5. 's' → logprob: -8.850791931152344
    6. '(space' → logprob: -10.850791931152344
    7. '(self' → logprob: -11.225791931152344
    8. '
' → logprob: -11.725791931152344
    9. 'spaces' → logprob: -12.225791931152344
    10. '   ' → logprob: -12.475791931152344

Token 580: '.sp' (ID: 16144)
  Prédit: '.sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.0003740694955922663
    2. 'spaces' → logprob: -8.125373840332031
    3. 'self' → logprob: -10.125373840332031
    4. 'sp' → logprob: -11.125373840332031
    5. '.s' → logprob: -12.375373840332031
    6. '   ' → logprob: -12.500373840332031
    7. '.' → logprob: -12.875373840332031
    8. '	sp' → logprob: -13.000373840332031
    9. '
' → logprob: -13.250373840332031
    10. '.space' → logprob: -13.625373840332031

Token 581: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -5.2524021157296374e-05
    2. 'ace' → logprob: -10.625052452087402
    3. 'paces' → logprob: -11.125052452087402
    4. 'spaces' → logprob: -12.250052452087402
    5. '   ' → logprob: -12.500052452087402
    6. '```' → logprob: -12.750052452087402
    7. '
' → logprob: -14.750052452087402
    8. '       ' → logprob: -15.000052452087402
    9. 'ac' → logprob: -15.625052452087402
    10. '#' → logprob: -15.750052452087402

Token 582: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06207243725657463
    2. 'if' → logprob: -2.812072515487671
    3. '           ' → logprob: -9.93707275390625
    4. '       ' → logprob: -10.56207275390625
    5. '
' → logprob: -10.93707275390625
    6. '        ' → logprob: -12.31207275390625
    7. '          ' → logprob: -13.06207275390625
    8. '            ' → logprob: -14.06207275390625
    9. '         ' → logprob: -14.18707275390625
    10. ' ' → logprob: -14.31207275390625

Token 583: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0715392455458641
    2. ' space' → logprob: -2.6965391635894775
    3. '(space' → logprob: -6.446539402008057
    4. '   ' → logprob: -11.696538925170898
    5. ' (' → logprob: -12.446538925170898
    6. '    ' → logprob: -14.446538925170898
    7. '        ' → logprob: -14.571538925170898
    8. '(' → logprob: -14.696538925170898
    9. '
' → logprob: -14.821538925170898
    10. ' ' → logprob: -14.821538925170898

Token 584: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.0019426802173256874
    2. '.' → logprob: -6.3769426345825195
    3. '.top' → logprob: -9.00194263458252
    4. '.has' → logprob: -10.00194263458252
    5. ' .' → logprob: -10.25194263458252
    6. 'bottom' → logprob: -10.62694263458252
    7. '.is' → logprob: -12.87694263458252
    8. '
' → logprob: -13.50194263458252
    9. '.Bottom' → logprob: -13.75194263458252
    10. '.
' → logprob: -13.87694263458252

Token 585: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3868919014930725
    2. ' is' → logprob: -1.1368918418884277
    3. 'and' → logprob: -12.136892318725586
    4. '   ' → logprob: -12.136892318725586
    5. 'not' → logprob: -12.886892318725586
    6. '
' → logprob: -13.761892318725586
    7. '       ' → logprob: -14.011892318725586
    8. '           ' → logprob: -14.011892318725586
    9. ' ' → logprob: -14.136892318725586
    10. ')' → logprob: -14.136892318725586

Token 586: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.026961607858538628
    2. ' not' → logprob: -3.6519615650177
    3. 'None' → logprob: -7.401961803436279
    4. ' None' → logprob: -10.401961326599121
    5. '   ' → logprob: -11.901961326599121
    6. '    ' → logprob: -12.651961326599121
    7. ' ' → logprob: -12.776961326599121
    8. 'none' → logprob: -13.151961326599121
    9. '
' → logprob: -13.276961326599121
    10. '```' → logprob: -14.151961326599121

Token 587: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.019652048125863075
    2. ' not' → logprob: -4.144651889801025
    3. 'None' → logprob: -5.644651889801025
    4. ' None' → logprob: -10.144652366638184
    5. '```' → logprob: -11.644652366638184
    6. 'none' → logprob: -11.769652366638184
    7. '   ' → logprob: -11.894652366638184
    8. '    ' → logprob: -12.894652366638184
    9. '
' → logprob: -13.144652366638184
    10. ' ' → logprob: -13.269652366638184

Token 588: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07260894030332565
    2. 'and' → logprob: -2.6976089477539062
    3. ']' → logprob: -5.947608947753906
    4. '       ' → logprob: -10.822608947753906
    5. '<|end|>' → logprob: -11.447608947753906
    6. ']
' → logprob: -11.697608947753906
    7. '   ' → logprob: -11.822608947753906
    8. ']

' → logprob: -12.447608947753906
    9. ' or' → logprob: -13.322608947753906
    10. ' ]' → logprob: -13.822608947753906

Token 589: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.04304064065217972
    2. ' space' → logprob: -3.1680407524108887
    3. '        ' → logprob: -10.66804027557373
    4. '       ' → logprob: -12.16804027557373
    5. '           ' → logprob: -12.79304027557373
    6. '         ' → logprob: -12.79304027557373
    7. '
' → logprob: -13.41804027557373
    8. '    ' → logprob: -13.54304027557373
    9. '(space' → logprob: -13.79304027557373
    10. '   ' → logprob: -13.91804027557373

Token 590: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -6.384836888173595e-05
    2. '.' → logprob: -10.1250638961792
    3. ' .' → logprob: -11.5000638961792
    4. 'top' → logprob: -11.8750638961792
    5. ' is' → logprob: -12.8750638961792
    6. ' top' → logprob: -13.1250638961792
    7. '.bottom' → logprob: -14.0000638961792
    8. '[top' → logprob: -14.7500638961792
    9. '.Top' → logprob: -14.8750638961792
    10. '	top' → logprob: -15.7500638961792

Token 591: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20142608880996704
    2. 'is' → logprob: -1.7014260292053223
    3. ')' → logprob: -12.45142650604248
    4. ' ' → logprob: -12.57642650604248
    5. '<|end|>' → logprob: -13.57642650604248
    6. '==' → logprob: -13.70142650604248
    7. '[' → logprob: -14.20142650604248
    8. '<|end|>' → logprob: -14.82642650604248
    9. 'Is' → logprob: -15.20142650604248
    10. '	is' → logprob: -15.20142650604248

Token 592: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0380479171872139
    2. ' None' → logprob: -3.288048028945923
    3. '   ' → logprob: -12.163047790527344
    4. ' ' → logprob: -14.163047790527344
    5. '    ' → logprob: -15.288047790527344
    6. '  ' → logprob: -15.663047790527344
    7. '_None' → logprob: -16.038047790527344
    8. '=None' → logprob: -17.038047790527344
    9. '(None' → logprob: -17.163047790527344
    10. 'none' → logprob: -18.163047790527344

Token 593: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004236435634084046
    2. '       ' → logprob: -8.625423431396484
    3. '   ' → logprob: -8.625423431396484
    4. ' ]' → logprob: -10.750423431396484
    5. '()]' → logprob: -10.875423431396484
    6. ']
' → logprob: -11.625423431396484
    7. ')]' → logprob: -11.875423431396484
    8. ')' → logprob: -12.125423431396484
    9. ']

' → logprob: -13.375423431396484
    10. '<|end|>' → logprob: -14.625423431396484

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45666205883026123
    2. '<|end|>' → logprob: -1.3316620588302612
    3. 'def' → logprob: -2.331662178039551
    4. '<|end|>' → logprob: -6.081662178039551
    5. '```' → logprob: -6.831662178039551
    6. '
' → logprob: -6.956662178039551
    7. ' def' → logprob: -7.581662178039551
    8. ')' → logprob: -7.956662178039551
    9. '#' → logprob: -10.20666217803955
    10. '	def' → logprob: -10.45666217803955

Token 595: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09222827851772308
    2. '   ' → logprob: -2.4672281742095947
    3. ' def' → logprob: -6.592228412628174
    4. '
' → logprob: -6.967228412628174
    5. '<|end|>' → logprob: -7.717228412628174
    6. '```' → logprob: -7.967228412628174
    7. '#' → logprob: -9.967227935791016
    8. '<|end|>' → logprob: -9.967227935791016
    9. '	def' → logprob: -10.842227935791016
    10. ' ' → logprob: -10.842227935791016

Token 596: ' _' (ID: 1175)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.21200060844421387
    2. ' _' → logprob: -1.7120006084442139
    3. '_' → logprob: -5.462000846862793
    4. ' def' → logprob: -5.837000846862793
    5. 'def' → logprob: -7.587000846862793
    6. '_add' → logprob: -7.587000846862793
    7. '_can' → logprob: -7.837000846862793
    8. '_def' → logprob: -8.212000846862793
    9. '_remove' → logprob: -8.587000846862793
    10. '_try' → logprob: -8.712000846862793

Token 597: 'assign' (ID: 14297)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0031724870204925537
    2. '_find' → logprob: -5.878172397613525
    3. 'def' → logprob: -8.253172874450684
    4. 'has' → logprob: -10.628172874450684
    5. 'can' → logprob: -11.628172874450684
    6. 'fill' → logprob: -11.878172874450684
    7. 'process' → logprob: -12.128172874450684
    8. ' find' → logprob: -12.503172874450684
    9. 'get' → logprob: -12.503172874450684
    10. 'park' → logprob: -12.628172874450684

Token 598: '_' (ID: 62)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.1597006469964981
    2. '_space' → logprob: -2.534700632095337
    3. '_' → logprob: -3.409700632095337
    4. '_par' → logprob: -3.784700632095337
    5. '_spaces' → logprob: -5.284700870513916
    6. '_to' → logprob: -6.284700870513916
    7. '(self' → logprob: -6.534700870513916
    8. '_next' → logprob: -6.534700870513916
    9. '_position' → logprob: -7.159700870513916
    10. '_new' → logprob: -7.909700870513916

Token 599: 'park' (ID: 11174)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.19550909101963043
    2. 'space' → logprob: -2.070509195327759
    3. 'bottom' → logprob: -4.82050895690918
    4. 'parking' → logprob: -5.07050895690918
    5. 'spaces' → logprob: -5.19550895690918
    6. 'park' → logprob: -5.19550895690918
    7. 'top' → logprob: -5.32050895690918
    8. 'position' → logprob: -5.44550895690918
    9. 'spot' → logprob: -5.44550895690918
    10. 'empty' → logprob: -5.44550895690918

Token 600: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.11750189960002899
    2. '(self' → logprob: -2.867501974105835
    3. '_space' → logprob: -3.867501974105835
    4. 'ing' → logprob: -4.242501735687256
    5. '_positions' → logprob: -4.242501735687256
    6. '_in' → logprob: -6.242501735687256
    7. 'space' → logprob: -6.617501735687256
    8. '_spaces' → logprob: -7.992501735687256
    9. 'position' → logprob: -8.742502212524414
    10. '   ' → logprob: -8.992502212524414

Token 601: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.383526149671525e-05
    2. '(' → logprob: -10.000053405761719
    3. 'self' → logprob: -12.250053405761719
    4. '(
' → logprob: -13.000053405761719
    5. ' (' → logprob: -14.625053405761719
    6. '   ' → logprob: -14.875053405761719
    7. '(s' → logprob: -16.25005340576172
    8. 'def' → logprob: -16.62505340576172
    9. '[self' → logprob: -16.75005340576172
    10. '(space' → logprob: -16.87505340576172

Token 602: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011916564544662833
    2. 'self' → logprob: -6.87619161605835
    3. '(' → logprob: -9.126192092895508
    4. '(
' → logprob: -10.751192092895508
    5. ' self' → logprob: -11.751192092895508
    6. '   ' → logprob: -12.376192092895508
    7. 'def' → logprob: -12.501192092895508
    8. '       ' → logprob: -12.626192092895508
    9. ',' → logprob: -13.126192092895508
    10. ',self' → logprob: -13.501192092895508

Token 603: ' car' (ID: 1669)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07562335580587387
    2. 'car' → logprob: -2.7006232738494873
    3. ' self' → logprob: -5.450623512268066
    4. 'space' → logprob: -7.325623512268066
    5. ' car' → logprob: -7.950623512268066
    6. '       ' → logprob: -8.200623512268066
    7. '   ' → logprob: -9.575623512268066
    8. '           ' → logprob: -12.700623512268066
    9. 'Car' → logprob: -12.825623512268066
    10. '(self' → logprob: -13.075623512268066

Token 604: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006553847808390856
    2. 'self' → logprob: -5.756553649902344
    3. '(self' → logprob: -6.006553649902344
    4. '       ' → logprob: -7.381553649902344
    5. ':' → logprob: -9.131553649902344
    6. '   ' → logprob: -10.006553649902344
    7. ')' → logprob: -10.381553649902344
    8. ' self' → logprob: -10.756553649902344
    9. '):
' → logprob: -11.006553649902344
    10. ' ,' → logprob: -11.006553649902344

Token 605: ' Car' (ID: 4004)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.025189261883497238
    2. 'car' → logprob: -4.025189399719238
    3. 'Car' → logprob: -5.150189399719238
    4. ' self' → logprob: -6.900189399719238
    5. ' car' → logprob: -9.025189399719238
    6. ')' → logprob: -11.025189399719238
    7. '_car' → logprob: -11.650189399719238
    8. 'Optional' → logprob: -11.900189399719238
    9. '
' → logprob: -12.025189399719238
    10. '.car' → logprob: -12.150189399719238

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5597102396423e-05
    2. '       ' → logprob: -11.125035285949707
    3. 'self' → logprob: -11.375035285949707
    4. ' ,' → logprob: -12.250035285949707
    5. '   ' → logprob: -13.250035285949707
    6. ',
' → logprob: -13.625035285949707
    7. ',self' → logprob: -14.500035285949707
    8. '):
' → logprob: -15.125035285949707
    9. ')' → logprob: -15.125035285949707
    10. ' self' → logprob: -16.125036239624023

Token 607: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.2767534852027893
    2. 'position' → logprob: -1.9017534255981445
    3. 'pos' → logprob: -3.5267534255981445
    4. 'level' → logprob: -3.7767534255981445
    5. ' space' → logprob: -4.0267534255981445
    6. ' position' → logprob: -4.2767534255981445
    7. 'index' → logprob: -6.2767534255981445
    8. 'bottom' → logprob: -6.6517534255981445
    9. 'park' → logprob: -7.0267534255981445
    10. ' pos' → logprob: -7.0267534255981445

Token 608: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18051591515541077
    2. ',' → logprob: -1.8055158853530884
    3. '   ' → logprob: -7.680515766143799
    4. '):
' → logprob: -9.430516242980957
    5. ')' → logprob: -9.930516242980957
    6. '       ' → logprob: -10.680516242980957
    7. 'car' → logprob: -10.930516242980957
    8. '):' → logprob: -10.930516242980957
    9. '```' → logprob: -11.055516242980957
    10. ' :' → logprob: -11.180516242980957

Token 609: ' Parking' (ID: 40497)
  Prédit: 'Parking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parking' → logprob: -0.13147348165512085
    2. 'space' → logprob: -2.5064735412597656
    3. ' Parking' → logprob: -3.7564735412597656
    4. ' space' → logprob: -4.881473541259766
    5. 'int' → logprob: -5.506473541259766
    6. 'Park' → logprob: -6.506473541259766
    7. 'index' → logprob: -7.256473541259766
    8. ' int' → logprob: -7.631473541259766
    9. 'Car' → logprob: -7.756473541259766
    10. ' parking' → logprob: -7.756473541259766

Token 610: 'Space' (ID: 13331)
  Prédit: 'Space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Space' → logprob: -0.0043771942146122456
    2. 'space' → logprob: -6.004377365112305
    3. '.space' → logprob: -7.629377365112305
    4. '_space' → logprob: -8.129377365112305
    5. '   ' → logprob: -8.754377365112305
    6. '.index' → logprob: -9.004377365112305
    7. ':' → logprob: -9.004377365112305
    8. ',' → logprob: -9.004377365112305
    9. 'index' → logprob: -9.254377365112305
    10. ' space' → logprob: -9.379377365112305

Token 611: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ' ,' → logprob: -10.125052452087402
    3. '   ' → logprob: -12.000052452087402
    4. ')' → logprob: -12.375052452087402
    5. ',
' → logprob: -14.500052452087402
    6. '):
' → logprob: -14.875052452087402
    7. '):' → logprob: -15.375052452087402
    8. '       ' → logprob: -15.375052452087402
    9. 'def' → logprob: -15.375052452087402
    10. ':' → logprob: -15.625052452087402

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028764382004737854
    2. '   ' → logprob: -5.877876281738281
    3. 'car' → logprob: -10.377876281738281
    4. '```' → logprob: -10.627876281738281
    5. 'if' → logprob: -13.127876281738281
    6. '(car' → logprob: -13.377876281738281
    7. '
' → logprob: -13.377876281738281
    8. '        
' → logprob: -13.377876281738281
    9. '	car' → logprob: -13.377876281738281
    10. ' car' → logprob: -13.502876281738281

Token 613: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0365697480738163
    2. '       ' → logprob: -3.411569833755493
    3. '#' → logprob: -6.411569595336914
    4. 'car' → logprob: -7.286569595336914
    5. '```' → logprob: -8.161569595336914
    6. 'empty' → logprob: -9.536569595336914
    7. ' if' → logprob: -9.536569595336914
    8. '   ' → logprob: -10.161569595336914
    9. 'bottom' → logprob: -10.286569595336914
    10. 'for' → logprob: -10.411569595336914

Token 614: ' space' (ID: 4918)
  Prédit: ' space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.4740830063819885
    2. 'space' → logprob: -0.9740830063819885
    3. '(space' → logprob: -12.224082946777344
    4. ' car' → logprob: -15.474082946777344
    5. 'sp' → logprob: -15.724082946777344
    6. 'Space' → logprob: -16.099082946777344
    7. 'car' → logprob: -16.099082946777344
    8. '_space' → logprob: -16.349082946777344
    9. '    ' → logprob: -16.599082946777344
    10. ' ' → logprob: -16.599082946777344

Token 615: '.is' (ID: 3109)
  Prédit: '.bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.0001544321421533823
    2. '.is' → logprob: -9.750154495239258
    3. '.top' → logprob: -9.875154495239258
    4. '.has' → logprob: -11.375154495239258
    5. 'bottom' → logprob: -11.500154495239258
    6. '.' → logprob: -11.750154495239258
    7. ' .' → logprob: -12.375154495239258
    8. '   ' → logprob: -12.875154495239258
    9. ').' → logprob: -13.250154495239258
    10. '.empty' → logprob: -13.250154495239258

Token 616: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.00029708960209973156
    2. 'empty' → logprob: -8.125297546386719
    3. '_EMPTY' → logprob: -15.000297546386719
    4. ' empty' → logprob: -15.500297546386719
    5. 'Empty' → logprob: -15.625297546386719
    6. '_' → logprob: -15.625297546386719
    7. 'space' → logprob: -16.87529754638672
    8. '-empty' → logprob: -17.00029754638672
    9. '_none' → logprob: -17.12529754638672
    10. 'e' → logprob: -18.00029754638672

Token 617: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.030352937057614326
    2. '():' → logprob: -3.780352830886841
    3. ':
' → logprob: -5.15535306930542
    4. ':' → logprob: -6.90535306930542
    5. '       ' → logprob: -8.530352592468262
    6. '()' → logprob: -9.280352592468262
    7. '():
' → logprob: -11.530352592468262
    8. '):
' → logprob: -12.530352592468262
    9. '           ' → logprob: -13.155352592468262
    10. '   ' → logprob: -13.530352592468262

Token 618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.148931622505188
    2. 'space' → logprob: -2.0239315032958984
    3. '       ' → logprob: -5.523931503295898
    4. ' space' → logprob: -6.648931503295898
    5. 'self' → logprob: -7.273931503295898
    6. 'car' → logprob: -8.523931503295898
    7. '   ' → logprob: -10.773931503295898
    8. '               ' → logprob: -11.523931503295898
    9. '            
' → logprob: -12.273931503295898
    10. '```' → logprob: -12.398931503295898

Token 619: ' #' (ID: 1069)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0001931696751853451
    2. ' space' → logprob: -8.87519359588623
    3. '           ' → logprob: -9.87519359588623
    4. 'car' → logprob: -13.50019359588623
    5. '       ' → logprob: -15.50019359588623
    6. '               ' → logprob: -16.000192642211914
    7. '   ' → logprob: -16.500192642211914
    8. 'self' → logprob: -18.125192642211914
    9. '(space' → logprob: -18.125192642211914
    10. '_space' → logprob: -18.375192642211914

Token 620: ' Simply' (ID: 31470)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0001394161517964676
    2. '           ' → logprob: -9.250139236450195
    3. ' space' → logprob: -10.125139236450195
    4. 'car' → logprob: -13.250139236450195
    5. '   ' → logprob: -14.500139236450195
    6. '       ' → logprob: -14.750139236450195
    7. 'self' → logprob: -15.625139236450195
    8. '               ' → logprob: -16.375139236450195
    9. 'position' → logprob: -16.625139236450195
    10. ' ' → logprob: -17.500139236450195

Token 621: ' park' (ID: 11796)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.7470496892929077
    2. 'assign' → logprob: -0.8720496892929077
    3. 'set' → logprob: -2.7470498085021973
    4. 'place' → logprob: -3.4970498085021973
    5. 'park' → logprob: -5.372049808502197
    6. '           ' → logprob: -5.497049808502197
    7. ' space' → logprob: -6.372049808502197
    8. ' assign' → logprob: -6.747049808502197
    9. 'car' → logprob: -7.622049808502197
    10. 'put' → logprob: -7.747049808502197

Token 622: ' bottom' (ID: 8725)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.06753765791654587
    2. 'car' → logprob: -3.067537546157837
    3. ' space' → logprob: -4.692537784576416
    4. '           ' → logprob: -5.067537784576416
    5. '               ' → logprob: -7.317537784576416
    6. '(space' → logprob: -7.317537784576416
    7. ' car' → logprob: -7.567537784576416
    8. 'the' → logprob: -7.692537784576416
    9. ' at' → logprob: -8.442537307739258
    10. ' the' → logprob: -8.942537307739258

Token 623: ' first' (ID: 1577)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8749088644981384
    2. '=' → logprob: -1.8749089241027832
    3. '           ' → logprob: -2.249908924102783
    4. ' =' → logprob: -2.624908924102783
    5. '       ' → logprob: -2.874908924102783
    6. ':
' → logprob: -3.124908924102783
    7. '_car' → logprob: -3.124908924102783
    8. ' car' → logprob: -3.499908924102783
    9. ':' → logprob: -3.999908924102783
    10. '            
' → logprob: -4.499908924102783

Token 624: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05165944620966911
    2. '
' → logprob: -3.676659345626831
    3. 'space' → logprob: -4.42665958404541
    4. '       ' → logprob: -5.42665958404541
    5. '            
' → logprob: -5.67665958404541
    6. 'car' → logprob: -6.80165958404541
    7. '               ' → logprob: -7.17665958404541
    8. '(space' → logprob: -7.17665958404541
    9. ',' → logprob: -7.42665958404541
    10. ' space' → logprob: -8.05165958404541

Token 625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0039388868026435375
    2. 'space' → logprob: -5.878938674926758
    3. 'car' → logprob: -7.003938674926758
    4. ' space' → logprob: -9.253938674926758
    5. '       ' → logprob: -9.753938674926758
    6. 'self' → logprob: -10.628938674926758
    7. '   ' → logprob: -10.753938674926758
    8. '               ' → logprob: -11.503938674926758
    9. ' car' → logprob: -11.878938674926758
    10. ',' → logprob: -13.378938674926758

Token 626: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.0018108409130945802
    2. 'car' → logprob: -6.7518110275268555
    3. ' space' → logprob: -8.001811027526855
    4. '           ' → logprob: -8.126811027526855
    5. '       ' → logprob: -12.251811027526855
    6. 'self' → logprob: -12.876811027526855
    7. '   ' → logprob: -13.751811027526855
    8. ' car' → logprob: -14.251811027526855
    9. '               ' → logprob: -15.501811027526855
    10. '         ' → logprob: -15.876811027526855

Token 627: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.12500286102295
    3. 'bottom' → logprob: -15.62500286102295
    4. ' .' → logprob: -16.625001907348633
    5. '.bot' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '.Bottom' → logprob: -18.250001907348633
    8. '.top' → logprob: -18.375001907348633
    9. '}.' → logprob: -18.750001907348633
    10. '           ' → logprob: -18.750001907348633

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519300878047943
    2. ' =' → logprob: -1.5019301176071167
    3. '=
' → logprob: -14.126930236816406
    4. ' =
' → logprob: -15.751930236816406
    5. '＝' → logprob: -16.876930236816406
    6. ' ' → logprob: -18.376930236816406
    7. '=

' → logprob: -18.376930236816406
    8. 'car' → logprob: -18.751930236816406
    9. '=self' → logprob: -19.126930236816406
    10. '=None' → logprob: -19.126930236816406

Token 629: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0024758970830589533
    2. ' car' → logprob: -6.002475738525391
    3. '	car' → logprob: -15.37747573852539
    4. '(car' → logprob: -16.75247573852539
    5. 'Car' → logprob: -17.00247573852539
    6. '_car' → logprob: -18.00247573852539
    7. 'c' → logprob: -18.50247573852539
    8. ' ' → logprob: -19.12747573852539
    9. 'cars' → logprob: -19.50247573852539
    10. '.car' → logprob: -19.50247573852539

Token 630: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01579901948571205
    2. 'car' → logprob: -4.265799045562744
    3. '       ' → logprob: -6.890799045562744
    4. '
' → logprob: -8.265798568725586
    5. '   ' → logprob: -8.515798568725586
    6. ' car' → logprob: -9.515798568725586
    7. '               ' → logprob: -9.765798568725586
    8. ',' → logprob: -11.765798568725586
    9. '	car' → logprob: -12.140798568725586
    10. '                   ' → logprob: -12.390798568725586

Token 631: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030551010742783546
    2. 'car' → logprob: -3.530550956726074
    3. '       ' → logprob: -7.655550956726074
    4. '   ' → logprob: -8.655550956726074
    5. ' car' → logprob: -9.155550956726074
    6. '               ' → logprob: -10.905550956726074
    7. '	car' → logprob: -11.030550956726074
    8. '	       ' → logprob: -12.780550956726074
    9. '                   ' → logprob: -13.280550956726074
    10. '
' → logprob: -13.655550956726074

Token 632: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -4.36574100604048e-06
    2. ' car' → logprob: -13.000004768371582
    3. '           ' → logprob: -13.125004768371582
    4. '   ' → logprob: -16.875003814697266
    5. ' ' → logprob: -17.125003814697266
    6. 'card' → logprob: -18.125003814697266
    7. '```' → logprob: -18.250003814697266
    8. '	car' → logprob: -18.375003814697266
    9. '       ' → logprob: -18.750003814697266
    10. '
' → logprob: -18.750003814697266

Token 633: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2233183042553719e-05
    2. ' .' → logprob: -12.250012397766113
    3. '.car' → logprob: -12.875012397766113
    4. '​.' → logprob: -13.625012397766113
    5. '.pet' → logprob: -14.125012397766113
    6. '\.' → logprob: -14.625012397766113
    7. '```' → logprob: -14.750012397766113
    8. '.par' → logprob: -15.250012397766113
    9. '}.' → logprob: -15.250012397766113
    10. '>.' → logprob: -15.375012397766113

Token 634: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -1.0445127372804563e-05
    2. 'car' → logprob: -11.75001049041748
    3. 'par' → logprob: -14.12501049041748
    4. 'parking' → logprob: -14.50001049041748
    5. ' park' → logprob: -15.25001049041748
    6. '```' → logprob: -15.75001049041748
    7. 'part' → logprob: -15.87501049041748
    8. 'port' → logprob: -16.375009536743164
    9. 'plant' → logprob: -16.625009536743164
    10. '
' → logprob: -17.125009536743164

Token 635: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: 0.0
    2. '_' → logprob: -16.75
    3. 'Position' → logprob: -17.0
    4. '_POSITION' → logprob: -17.75
    5. '_Position' → logprob: -17.75
    6. '_positions' → logprob: -18.25
    7. ' _' → logprob: -19.625
    8. 'position' → logprob: -19.625
    9. '_location' → logprob: -20.125
    10. '```' → logprob: -20.875

Token 636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164329506456852
    2. ' =' → logprob: -4.264164447784424
    3. '=
' → logprob: -14.639163970947266
    4. '=(' → logprob: -15.639163970947266
    5. ' =(' → logprob: -16.889163970947266
    6. '=('' → logprob: -17.139163970947266
    7. '＝' → logprob: -17.639163970947266
    8. '(' → logprob: -17.764163970947266
    9. ' (' → logprob: -18.014163970947266
    10. '=("' → logprob: -18.264163970947266

Token 637: ' (' (ID: 350)
  Prédit: '(space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -0.00015943869948387146
    2. '(' → logprob: -9.25015926361084
    3. ' (' → logprob: -10.00015926361084
    4. '(sp' → logprob: -11.00015926361084
    5. '(slot' → logprob: -15.12515926361084
    6. '(position' → logprob: -15.62515926361084
    7. '(span' → logprob: -15.87515926361084
    8. '(solution' → logprob: -16.000160217285156
    9. '(place' → logprob: -16.125160217285156
    10. '(site' → logprob: -16.500160217285156

Token 638: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0005538671393878758
    2. ' space' → logprob: -7.500554084777832
    3. '(space' → logprob: -14.125554084777832
    4. '1' → logprob: -17.000553131103516
    5. 'spaces' → logprob: -17.375553131103516
    6. 'spacing' → logprob: -18.375553131103516
    7. '0' → logprob: -18.750553131103516
    8. '
' → logprob: -19.125553131103516
    9. ' ' → logprob: -19.250553131103516
    10. '_space' → logprob: -20.375553131103516

Token 639: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -9.746380237629637e-05
    2. ' .' → logprob: -10.000097274780273
    3. '.' → logprob: -10.625097274780273
    4. 'index' → logprob: -10.750097274780273
    5. ',index' → logprob: -13.375097274780273
    6. ',' → logprob: -13.875097274780273
    7. ' ' → logprob: -14.250097274780273
    8. '.
' → logprob: -14.500097274780273
    9. '
' → logprob: -14.625097274780273
    10. ' index' → logprob: -14.750097274780273

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.692145012086257e-05
    2. ' ,' → logprob: -10.250046730041504
    3. ',
' → logprob: -11.875046730041504
    4. '0' → logprob: -12.375046730041504
    5. '1' → logprob: -17.00004768371582
    6. ' ' → logprob: -17.00004768371582
    7. '‌,' → logprob: -17.12504768371582
    8. '
' → logprob: -17.62504768371582
    9. '```' → logprob: -18.00004768371582
    10. ',

' → logprob: -18.50004768371582

Token 641: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.75
    4. '
' → logprob: -22.25
    5. '۰' → logprob: -22.25
    6. '```' → logprob: -23.5
    7. ')' → logprob: -23.5625
    8. '00' → logprob: -24.0625
    9. '  ' → logprob: -24.125
    10. '       ' → logprob: -24.1875

Token 642: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -19.0
    4. '۰' → logprob: -20.375
    5. ')' → logprob: -21.125
    6. '```' → logprob: -21.5
    7. '
' → logprob: -22.0
    8. '       ' → logprob: -22.125
    9. '０' → logprob: -22.5625
    10. '	' → logprob: -22.6875

Token 643: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00319042825140059
    2. ')
' → logprob: -5.753190517425537
    3. '       ' → logprob: -12.253190040588379
    4. '<|end|>' → logprob: -12.753190040588379
    5. ' )' → logprob: -13.378190040588379
    6. ')return' → logprob: -13.378190040588379
    7. '   ' → logprob: -14.753190040588379
    8. ')#' → logprob: -14.753190040588379
    9. ')
' → logprob: -15.378190040588379
    10. ')

' → logprob: -15.503190040588379

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024600066244602203
    2. '           ' → logprob: -3.774600028991699
    3. 'return' → logprob: -7.649600028991699
    4. 'elif' → logprob: -7.649600028991699
    5. 'else' → logprob: -7.899600028991699
    6. '
' → logprob: -11.3996000289917
    7. '   ' → logprob: -11.8996000289917
    8. '```' → logprob: -12.5246000289917
    9. ' else' → logprob: -12.6496000289917
    10. ' elif' → logprob: -13.2746000289917

Token 645: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20041267573833466
    2. 'else' (adapté à ' else') → logprob: -1.950412631034851
    3. 'elif' → logprob: -3.3254127502441406
    4. ' else' → logprob: -5.950412750244141
    5. '   ' → logprob: -7.825412750244141
    6. ' elif' → logprob: -7.950412750244141
    7. '
' → logprob: -9.95041275024414
    8. '           ' → logprob: -10.70041275024414
    9. '     ' → logprob: -13.82541275024414
    10. ' ' → logprob: -13.95041275024414

Token 646: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7222118973731995
    2. ' if' → logprob: -0.9722118973731995
    3. ':' → logprob: -2.4722118377685547
    4. '       ' → logprob: -3.2222118377685547
    5. 'if' → logprob: -4.597211837768555
    6. '           ' → logprob: -6.722211837768555
    7. '        ' → logprob: -8.722211837768555
    8. '   ' → logprob: -8.972211837768555
    9. ',' → logprob: -9.472211837768555
    10. ' :
' → logprob: -10.222211837768555

Token 647: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19487634301185608
    2. ' if' → logprob: -2.3198764324188232
    3. 'if' → logprob: -2.9448764324188232
    4. '           ' → logprob: -3.9448764324188232
    5. '   ' → logprob: -5.069876194000244
    6. '#' → logprob: -7.944876194000244
    7. ' ' → logprob: -10.444876670837402
    8. '	if' → logprob: -10.694876670837402
    9. ' #' → logprob: -10.944876670837402
    10. '```' → logprob: -11.069876670837402

Token 648: ' #' (ID: 1069)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.4134540259838104
    2. ' space' → logprob: -1.2884540557861328
    3. ' if' → logprob: -3.413454055786133
    4. '           ' → logprob: -4.413454055786133
    5. 'if' → logprob: -4.413454055786133
    6. '#' (adapté à ' #') → logprob: -5.538454055786133
    7. ' #' → logprob: -7.538454055786133
    8. 'assert' → logprob: -7.663454055786133
    9. '       ' → logprob: -8.163454055786133
    10. ' assert' → logprob: -8.538454055786133

Token 649: ' The' (ID: 623)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.29152819514274597
    2. ' space' → logprob: -1.5415282249450684
    3. '#' → logprob: -3.5415282249450684
    4. 'if' → logprob: -6.041528224945068
    5. ' if' → logprob: -6.041528224945068
    6. ' #' → logprob: -6.166528224945068
    7. '           ' → logprob: -6.541528224945068
    8. 'assert' → logprob: -6.916528224945068
    9. ' assert' → logprob: -8.04152774810791
    10. '       ' → logprob: -10.16652774810791

Token 650: ' rules' (ID: 9607)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.2458574771881104
    2. ' top' → logprob: -1.4958574771881104
    3. 'top' → logprob: -1.6208574771881104
    4. ' space' → logprob: -1.6208574771881104
    5. '#' → logprob: -3.2458574771881104
    6. ' car' → logprob: -4.120857238769531
    7. 'if' → logprob: -4.370857238769531
    8. ' if' → logprob: -5.245857238769531
    9. '
' → logprob: -5.745857238769531
    10. 'car' → logprob: -6.120857238769531

Token 651: ' says' (ID: 5003)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6921086311340332
    2. '               ' → logprob: -2.442108631134033
    3. ' require' → logprob: -3.192108631134033
    4. ':' → logprob: -3.317108631134033
    5. ' if' → logprob: -3.317108631134033
    6. 'if' → logprob: -3.317108631134033
    7. ' allow' → logprob: -3.567108631134033
    8. ' say' → logprob: -3.692108631134033
    9. ' are' → logprob: -3.692108631134033
    10. 'dict' → logprob: -3.942108631134033

Token 652: ' if' (ID: 538)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6712488532066345
    2. ' space' → logprob: -1.7962489128112793
    3. ' if' → logprob: -2.4212489128112793
    4. ' the' → logprob: -2.7962489128112793
    5. 'that' → logprob: -3.5462489128112793
    6. '           ' → logprob: -3.6712489128112793
    7. 'if' → logprob: -3.7962489128112793
    8. ' we' → logprob: -3.9212489128112793
    9. ' car' → logprob: -4.171248912811279
    10. 'space' → logprob: -4.171248912811279

Token 653: ' one' (ID: 1001)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.6366295218467712
    2. ' space' → logprob: -0.7616295218467712
    3. ' the' → logprob: -7.011629581451416
    4. '(space' → logprob: -7.386629581451416
    5. 'the' → logprob: -7.761629581451416
    6. ' car' → logprob: -7.886629581451416
    7. ' bottom' → logprob: -8.011629104614258
    8. 'car' → logprob: -8.261629104614258
    9. ' there' → logprob: -8.511629104614258
    10. 'bottom' → logprob: -8.636629104614258

Token 654: ' car' (ID: 1669)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2857449054718018
    2. ' space' → logprob: -1.6607449054718018
    3. 'space' → logprob: -1.9107449054718018
    4. '.space' → logprob: -2.2857449054718018
    5. 'car' → logprob: -3.4107449054718018
    6. 'is' → logprob: -3.6607449054718018
    7. ' has' → logprob: -3.9107449054718018
    8. ' .' → logprob: -3.9107449054718018
    9. ' car' → logprob: -3.9107449054718018
    10. ' if' → logprob: -4.035744667053223

Token 655: ',' (ID: 11)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.73301100730896
    2. ' is' → logprob: -0.98301100730896
    3. 'bottom' → logprob: -2.10801100730896
    4. ' bottom' → logprob: -5.358011245727539
    5. 'has' → logprob: -5.983011245727539
    6. ' in' → logprob: -6.233011245727539
    7. 'already' → logprob: -6.233011245727539
    8. 'in' → logprob: -6.358011245727539
    9. ' has' → logprob: -6.608011245727539
    10. '   ' → logprob: -6.733011245727539

Token 656: ' new' (ID: 620)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8064690232276917
    2. ' space' → logprob: -1.4314689636230469
    3. 'if' → logprob: -2.431468963623047
    4. '#' → logprob: -3.306468963623047
    5. ' if' → logprob: -3.431468963623047
    6. 'and' → logprob: -3.806468963623047
    7. 'car' → logprob: -3.806468963623047
    8. ' and' → logprob: -4.056468963623047
    9. ' it' → logprob: -4.181468963623047
    10. 'it' → logprob: -4.306468963623047

Token 657: ' one' (ID: 1001)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.03630400076508522
    2. 'car' → logprob: -3.661303997039795
    3. ' space' → logprob: -6.036303997039795
    4. ' is' → logprob: -6.036303997039795
    5. '_car' → logprob: -6.161303997039795
    6. ' can' → logprob: -7.536303997039795
    7. 'space' → logprob: -7.536303997039795
    8. ' position' → logprob: -8.036304473876953
    9. ' top' → logprob: -8.411304473876953
    10. ' has' → logprob: -8.786304473876953

Token 658: ' goes' (ID: 8805)
  Prédit: ' parks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parks' → logprob: -0.8049109578132629
    2. 'parks' → logprob: -2.054910898208618
    3. 'must' → logprob: -2.304910898208618
    4. ' must' → logprob: -2.554910898208618
    5. 'park' → logprob: -2.679910898208618
    6. ' goes' → logprob: -3.304910898208618
    7. 'should' → logprob: -3.554910898208618
    8. 'go' → logprob: -3.554910898208618
    9. ' can' → logprob: -4.179911136627197
    10. ' will' → logprob: -4.554911136627197

Token 659: ' up' (ID: 869)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.49128881096839905
    2. 'on' → logprob: -1.7412887811660767
    3. 'top' → logprob: -2.366288900375366
    4. ' to' → logprob: -2.866288900375366
    5. ' top' → logprob: -3.491288900375366
    6. 'to' → logprob: -3.491288900375366
    7. '(top' → logprob: -7.741288661956787
    8. '           ' → logprob: -9.116289138793945
    9. '[top' → logprob: -9.241289138793945
    10. ' at' → logprob: -9.241289138793945

Token 660: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015147916972637177
    2. ',' → logprob: -4.890147686004639
    3. '		' → logprob: -6.140147686004639
    4. '
' → logprob: -6.140147686004639
    5. '<|end|>' → logprob: -7.265147686004639
    6. '            
' → logprob: -8.140148162841797
    7. '   ' → logprob: -8.265148162841797
    8. ' ' → logprob: -8.265148162841797
    9. '(space' → logprob: -8.265148162841797
    10. '               ' → logprob: -8.640148162841797

Token 661: ' old' (ID: 2890)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1366133689880371
    2. ' car' → logprob: -2.511613368988037
    3. ' sets' → logprob: -3.886613368988037
    4. 'sets' → logprob: -4.886613368988037
    5. 'space' → logprob: -4.886613368988037
    6. 'top' → logprob: -5.886613368988037
    7. 'set' → logprob: -6.511613368988037
    8. ' space' → logprob: -6.886613368988037
    9. ' waits' → logprob: -7.011613368988037
    10. ' the' → logprob: -7.136613368988037

Token 662: ' moves' (ID: 19523)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7885830402374268
    2. 'bottom' → logprob: -0.9135830402374268
    3. '.bottom' → logprob: -2.1635830402374268
    4. '.car' → logprob: -4.288582801818848
    5. ' bottom' → logprob: -5.413582801818848
    6. ' car' → logprob: -6.163582801818848
    7. '_car' → logprob: -6.288582801818848
    8. 'space' → logprob: -6.538582801818848
    9. '```' → logprob: -6.538582801818848
    10. 'one' → logprob: -6.663582801818848

Token 663: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.07799451053142548
    2. 'bottom' → logprob: -3.4529945850372314
    3. ' down' → logprob: -3.8279945850372314
    4. 'to' → logprob: -4.202994346618652
    5. ' to' → logprob: -5.952994346618652
    6. ' bottom' → logprob: -6.827994346618652
    7. 'out' → logprob: -7.202994346618652
    8. 'own' → logprob: -7.827994346618652
    9. 'up' → logprob: -8.202994346618652
    10. 'top' → logprob: -8.452994346618652

Token 664: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33484071493148804
    2. '
' → logprob: -1.5848407745361328
    3. ',' → logprob: -4.084840774536133
    4. ' if' → logprob: -4.084840774536133
    5. '<|end|>' → logprob: -4.334840774536133
    6. '            
' → logprob: -4.959840774536133
    7. 'space' → logprob: -5.334840774536133
    8. '(space' → logprob: -5.709840774536133
    9. '            ' → logprob: -6.084840774536133
    10. ' space' → logprob: -6.334840774536133

Token 665: ' but' (ID: 889)
  Prédit: ' old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' old' → logprob: -0.697536289691925
    2. ' space' → logprob: -0.947536289691925
    3. 'old' → logprob: -3.4475362300872803
    4. 'space' → logprob: -3.8225362300872803
    5. ' bottom' → logprob: -3.9475362300872803
    6. ' if' → logprob: -4.322536468505859
    7. '           ' → logprob: -4.447536468505859
    8. ' temp' → logprob: -5.447536468505859
    9. ' existing' → logprob: -5.947536468505859
    10. ' top' → logprob: -6.447536468505859

Token 666: ' here' (ID: 2105)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.9554282426834106
    2. ' not' → logprob: -1.2054282426834106
    3. 'space' → logprob: -1.9554282426834106
    4. 'not' → logprob: -3.080428123474121
    5. ' car' → logprob: -3.455428123474121
    6. ' the' → logprob: -3.580428123474121
    7. '
' → logprob: -4.330428123474121
    8. ' in' → logprob: -4.705428123474121
    9. ' this' → logprob: -4.830428123474121
    10. 'the' → logprob: -4.955428123474121

Token 667: ' no' (ID: 860)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.2974566221237183
    2. 'the' → logprob: -1.4224566221237183
    3. ' we' → logprob: -2.047456741333008
    4. '           ' → logprob: -2.797456741333008
    5. ' the' → logprob: -2.922456741333008
    6. '#' → logprob: -3.047456741333008
    7. ',' → logprob: -3.672456741333008
    8. 'space' → logprob: -3.797456741333008
    9. 'only' → logprob: -4.172456741333008
    10. 'top' → logprob: -4.422456741333008

Token 668: ' movement' (ID: 12772)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.7404805421829224
    2. 'code' → logprob: -1.3654805421829224
    3. ' code' → logprob: -2.865480422973633
    4. '
' → logprob: -3.240480422973633
    5. 'space' → logprob: -3.365480422973633
    6. 'changes' → logprob: -3.365480422973633
    7. 'top' → logprob: -4.365480422973633
    8. 'need' → logprob: -4.490480422973633
    9. 'token' → logprob: -4.740480422973633
    10. ' change' → logprob: -5.240480422973633

Token 669: ' after' (ID: 1934)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09243567287921906
    2. ',' → logprob: -2.592435598373413
    3. '       ' → logprob: -5.717435836791992
    4. '               ' → logprob: -6.592435836791992
    5. '.' → logprob: -6.717435836791992
    6. '<|end|>' → logprob: -6.842435836791992
    7. '            
' → logprob: -6.842435836791992
    8. '
' → logprob: -6.967435836791992
    9. '   ' → logprob: -7.092435836791992
    10. ' ' → logprob: -7.217435836791992

Token 670: ' parked' (ID: 79911)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.6945288181304932
    2. 'all' → logprob: -1.8195288181304932
    3. 'the' → logprob: -1.9445288181304932
    4. ' all' → logprob: -2.444528818130493
    5. 'space' → logprob: -2.569528818130493
    6. ' the' → logprob: -2.694528818130493
    7. ' car' → logprob: -2.944528818130493
    8. 'new' → logprob: -2.944528818130493
    9. 'arrival' → logprob: -3.569528818130493
    10. 'existing' → logprob: -4.194528579711914

Token 671: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05554908514022827
    2. '
' → logprob: -3.805549144744873
    3. ',' → logprob: -4.305549144744873
    4. '<|end|>' → logprob: -4.930549144744873
    5. '            
' → logprob: -5.180549144744873
    6. '       ' → logprob: -6.680549144744873
    7. '```' → logprob: -6.930549144744873
    8. '.' → logprob: -7.680549144744873
    9. ',
' → logprob: -7.805549144744873
    10. '          ' → logprob: -8.055548667907715

Token 672: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011957057286053896
    2. '       ' → logprob: -8.501195907592773
    3. ',' → logprob: -8.626195907592773
    4. '               ' → logprob: -8.751195907592773
    5. '            ' → logprob: -8.876195907592773
    6. '   ' → logprob: -9.001195907592773
    7. '            
' → logprob: -9.001195907592773
    8. '          ' → logprob: -9.501195907592773
    9. '<|end|>' → logprob: -9.876195907592773
    10. ' ' → logprob: -10.376195907592773

Token 673: ' #' (ID: 1069)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.08051442354917526
    2. 'if' → logprob: -2.955514430999756
    3. ' space' → logprob: -4.455514430999756
    4. ' if' → logprob: -4.955514430999756
    5. '           ' → logprob: -5.455514430999756
    6. '#' (adapté à ' #') → logprob: -6.205514430999756
    7. 'assert' → logprob: -9.205513954162598
    8. 'position' → logprob: -9.455513954162598
    9. ' #' → logprob: -10.205513954162598
    10. 'pos' → logprob: -10.830513954162598

Token 674: ' Actually' (ID: 50557)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.19292807579040527
    2. 'if' → logprob: -1.9429280757904053
    3. '#' → logprob: -4.067928314208984
    4. '           ' → logprob: -4.942928314208984
    5. ' space' → logprob: -5.942928314208984
    6. 'assert' → logprob: -6.067928314208984
    7. ' if' → logprob: -6.317928314208984
    8. 'position' → logprob: -8.067928314208984
    9. 'pos' → logprob: -8.192928314208984
    10. 'car' → logprob: -8.692928314208984

Token 675: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5209513902664185
    2. '#' → logprob: -1.7709513902664185
    3. ' if' → logprob: -2.520951271057129
    4. 'the' → logprob: -2.895951271057129
    5. 'space' → logprob: -3.395951271057129
    6. '           ' → logprob: -3.895951271057129
    7. 'we' → logprob: -4.395951271057129
    8. 'new' → logprob: -4.895951271057129
    9. ' space' → logprob: -5.145951271057129
    10. ' the' → logprob: -5.145951271057129

Token 676: ' problem' (ID: 4792)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.3368502855300903
    2. 'existing' → logprob: -1.8368502855300903
    3. ' new' → logprob: -2.211850166320801
    4. 'code' → logprob: -2.336850166320801
    5. ' code' → logprob: -2.336850166320801
    6. 'next' → logprob: -2.461850166320801
    7. 'top' → logprob: -3.461850166320801
    8. ' next' → logprob: -3.461850166320801
    9. ' existing' → logprob: -3.586850166320801
    10. 'previous' → logprob: -4.336850166320801

Token 677: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -1.9005638360977173
    2. 'does' → logprob: -2.1505637168884277
    3. 'statement' → logprob: -2.4005637168884277
    4. 'description' → logprob: -2.5255637168884277
    5. ' does' → logprob: -2.6505637168884277
    6. ' statement' → logprob: -2.6505637168884277
    7. '<|end|>' → logprob: -2.6505637168884277
    8. ' is' → logprob: -3.0255637168884277
    9. '<|end|>' → logprob: -3.0255637168884277
    10. 'states' → logprob: -3.1505637168884277

Token 678: ':' (ID: 25)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6778740286827087
    2. 'that' → logprob: -1.5528740882873535
    3. 'the' → logprob: -2.0528740882873535
    4. ' the' → logprob: -2.1778740882873535
    5. 'top' → logprob: -4.4278740882873535
    6. 'new' → logprob: -5.1778740882873535
    7. ' new' → logprob: -5.3028740882873535
    8. 'if' → logprob: -5.9278740882873535
    9. ' if' → logprob: -6.0528740882873535
    10. ' top' → logprob: -6.0528740882873535

Token 679: ' when' (ID: 1261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15938276052474976
    2. 'space' → logprob: -2.9093828201293945
    3. '           ' → logprob: -3.0343828201293945
    4. ' space' → logprob: -3.7843828201293945
    5. 'pass' → logprob: -4.9093828201293945
    6. ' #' → logprob: -5.2843828201293945
    7. ' if' → logprob: -5.5343828201293945
    8. 'if' → logprob: -5.6593828201293945
    9. ' pass' → logprob: -7.1593828201293945
    10. '
' → logprob: -8.284382820129395

Token 680: ' parking' (ID: 14472)
  Prédit: 'parking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parking' → logprob: -1.3509937524795532
    2. 'one' → logprob: -1.6009937524795532
    3. 'space' → logprob: -2.4759936332702637
    4. 'there' → logprob: -2.4759936332702637
    5. 'a' → logprob: -2.7259936332702637
    6. 'bottom' → logprob: -2.8509936332702637
    7. 'both' → logprob: -3.2259936332702637
    8. 'two' → logprob: -3.4759936332702637
    9. 'the' → logprob: -3.6009936332702637
    10. 'new' → logprob: -4.225993633270264

Token 681: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8806251883506775
    2. 'top' → logprob: -1.2556252479553223
    3. ' top' → logprob: -2.5056252479553223
    4. 'on' → logprob: -2.6306252479553223
    5. ' a' → logprob: -2.8806252479553223
    6. ' the' → logprob: -3.8806252479553223
    7. 'a' → logprob: -4.005625247955322
    8. ' bottom' → logprob: -4.380625247955322
    9. 'bottom' → logprob: -4.505625247955322
    10. ',' → logprob: -5.005625247955322

Token 682: ' an' (ID: 448)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.13285887241363525
    2. 'bottom' → logprob: -2.5078587532043457
    3. ' top' → logprob: -3.3828587532043457
    4. 'the' → logprob: -5.257858753204346
    5. ' bottom' → logprob: -6.132858753204346
    6. ' the' → logprob: -8.132859230041504
    7. 'a' → logprob: -8.507859230041504
    8. '
' → logprob: -9.007859230041504
    9. 'one' → logprob: -9.132859230041504
    10. '   ' → logprob: -9.382859230041504

Token 683: ' occupied' (ID: 46186)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.4824960231781006
    2. 'existing' → logprob: -2.3574960231781006
    3. ' empty' → logprob: -2.4824960231781006
    4. 'space' → logprob: -2.9824960231781006
    5. 'occupied' → logprob: -3.1074960231781006
    6. 'top' → logprob: -3.3574960231781006
    7. 'already' → logprob: -3.9824960231781006
    8. ' existing' → logprob: -4.48249626159668
    9. '   ' → logprob: -4.98249626159668
    10. 'stack' → logprob: -5.35749626159668

Token 684: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.40743929147720337
    2. ' space' → logprob: -1.1574392318725586
    3. 'bottom' → logprob: -5.407439231872559
    4. ' spot' → logprob: -5.532439231872559
    5. ' bottom' → logprob: -5.657439231872559
    6. 'position' → logprob: -5.907439231872559
    7. ' position' → logprob: -6.032439231872559
    8. 'spot' → logprob: -6.282439231872559
    9. 'top' → logprob: -8.032439231872559
    10. ' top' → logprob: -8.907439231872559

Token 685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21343715488910675
    2. '           ' → logprob: -1.9634371995925903
    3. ' if' → logprob: -4.088437080383301
    4. ' with' → logprob: -4.213437080383301
    5. ' at' → logprob: -5.463437080383301
    6. ' (' → logprob: -5.713437080383301
    7. ' that' → logprob: -6.588437080383301
    8. ':' → logprob: -6.713437080383301
    9. ' ,' → logprob: -7.088437080383301
    10. ' and' → logprob: -7.338437080383301

Token 686: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7684275507926941
    2. ' if' → logprob: -1.6434276103973389
    3. 'if' → logprob: -2.018427610397339
    4. ' the' → logprob: -2.643427610397339
    5. 'the' → logprob: -3.393427610397339
    6. 'car' → logprob: -3.518427610397339
    7. 'space' → logprob: -3.643427610397339
    8. ' car' → logprob: -3.893427610397339
    9. ' space' → logprob: -4.89342737197876
    10. 'new' → logprob: -5.01842737197876

Token 687: ' existing' (ID: 9595)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8911699652671814
    2. 'old' → logprob: -1.8911700248718262
    3. 'top' → logprob: -2.141170024871826
    4. 'bottom' → logprob: -2.141170024871826
    5. 'existing' → logprob: -2.141170024871826
    6. ' new' → logprob: -3.641170024871826
    7. 'car' → logprob: -3.766170024871826
    8. ' existing' → logprob: -5.016170024871826
    9. 'lower' → logprob: -5.016170024871826
    10. ' bottom' → logprob: -5.516170024871826

Token 688: ' car' (ID: 1669)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.44656282663345337
    2. 'car' → logprob: -1.1965627670288086
    3. ' bottom' → logprob: -3.4465627670288086
    4. 'top' → logprob: -4.321562767028809
    5. ' car' → logprob: -4.696562767028809
    6. 'space' → logprob: -6.821562767028809
    7. ' top' → logprob: -7.196562767028809
    8. '#' → logprob: -7.571562767028809
    9. '```' → logprob: -8.446562767028809
    10. 'lower' → logprob: -8.946562767028809

Token 689: ' below' (ID: 4895)
  Prédit: ' stays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stays' → logprob: -1.0932114124298096
    2. 'rem' → logprob: -1.5932114124298096
    3. ' remains' → logprob: -1.8432114124298096
    4. 'must' → logprob: -2.8432114124298096
    5. 'st' → logprob: -3.3432114124298096
    6. 'bottom' → logprob: -3.3432114124298096
    7. 'moves' → logprob: -3.4682114124298096
    8. 'should' → logprob: -3.8432114124298096
    9. '#' → logprob: -4.0932111740112305
    10. 'is' → logprob: -4.3432111740112305

Token 690: ' moves' (ID: 19523)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5969069004058838
    2. 'must' → logprob: -1.7219069004058838
    3. 'rem' → logprob: -2.096906900405884
    4. 'moves' → logprob: -2.346906900405884
    5. ' remains' → logprob: -2.471906900405884
    6. ' is' → logprob: -2.846906900405884
    7. 'is' → logprob: -2.971906900405884
    8. '           ' → logprob: -3.471906900405884
    9. 'and' → logprob: -3.596906900405884
    10. ''s' → logprob: -3.721906900405884

Token 691: ' to' (ID: 316)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.21802540123462677
    2. ' down' → logprob: -2.8430254459381104
    3. 'up' → logprob: -2.9680254459381104
    4. 'to' → logprob: -3.2180254459381104
    5. ' to' → logprob: -3.3430254459381104
    6. ' up' → logprob: -5.343025207519531
    7. 'bottom' → logprob: -5.718025207519531
    8. 'top' → logprob: -7.093025207519531
    9. 'from' → logprob: -7.843025207519531
    10. ' one' → logprob: -8.093025207519531

Token 692: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.1334809511899948
    2. 'the' → logprob: -2.508481025695801
    3. '1' → logprob: -3.758481025695801
    4. ' top' → logprob: -4.383481025695801
    5. ' the' → logprob: -5.508481025695801
    6. 'bottom' → logprob: -6.633481025695801
    7. '(top' → logprob: -7.133481025695801
    8. 'space' → logprob: -7.758481025695801
    9. '(' → logprob: -8.0084810256958
    10. '0' → logprob: -8.2584810256958

Token 693: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055461227893829346
    2. '<|end|>' → logprob: -3.6804611682891846
    3. '
' → logprob: -4.180461406707764
    4. ',' → logprob: -4.930461406707764
    5. '<|end|>' → logprob: -6.680461406707764
    6. '            
' → logprob: -6.680461406707764
    7. ' and' → logprob: -7.305461406707764
    8. '            ' → logprob: -7.805461406707764
    9. '.' → logprob: -7.930461406707764
    10. 'space' → logprob: -8.430460929870605

Token 694: ' and' (ID: 326)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8073218464851379
    2. 'car' → logprob: -1.4323217868804932
    3. ' car' → logprob: -2.057321786880493
    4. ' space' → logprob: -2.307321786880493
    5. '           ' → logprob: -2.682321786880493
    6. ' and' → logprob: -5.307322025299072
    7. '#' → logprob: -5.307322025299072
    8. 'and' → logprob: -5.557322025299072
    9. ' but' → logprob: -7.182322025299072
    10. '            ' → logprob: -7.557322025299072

Token 695: ' new' (ID: 620)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7184023261070251
    2. 'car' → logprob: -1.09340238571167
    3. ' the' → logprob: -2.34340238571167
    4. ' car' → logprob: -3.46840238571167
    5. 'space' → logprob: -3.71840238571167
    6. 'new' → logprob: -4.34340238571167
    7. ' space' → logprob: -5.71840238571167
    8. 'existing' → logprob: -5.96840238571167
    9. ' new' → logprob: -6.21840238571167
    10. 'self' → logprob: -7.09340238571167

Token 696: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.18782690167427063
    2. ' car' → logprob: -2.0628268718719482
    3. 'one' → logprob: -3.9378268718719482
    4. 'token' → logprob: -4.812827110290527
    5. '_car' → logprob: -5.062827110290527
    6. ' one' → logprob: -5.312827110290527
    7. '_token' → logprob: -7.062827110290527
    8. '```' → logprob: -7.437827110290527
    9. 'bottom' → logprob: -7.687827110290527
    10. 'top' → logprob: -7.812827110290527

Token 697: ' is' (ID: 382)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.40911802649497986
    2. ' goes' → logprob: -1.4091180562973022
    3. ' parks' → logprob: -4.409118175506592
    4. 'park' → logprob: -4.534118175506592
    5. 'moves' → logprob: -4.534118175506592
    6. 'parks' → logprob: -4.659118175506592
    7. 'is' → logprob: -4.784118175506592
    8. 'bottom' → logprob: -5.034118175506592
    9. ' is' → logprob: -5.034118175506592
    10. 'takes' → logprob: -5.409118175506592

Token 698: ' on' (ID: 402)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.04998880252242088
    2. 'bottom' → logprob: -3.2999887466430664
    3. 'placed' → logprob: -4.799988746643066
    4. 'assigned' → logprob: -6.174988746643066
    5. ' parked' → logprob: -7.424988746643066
    6. ' bottom' → logprob: -8.174988746643066
    7. ' park' → logprob: -8.924988746643066
    8. 'at' → logprob: -9.424988746643066
    9. ' assigned' → logprob: -9.424988746643066
    10. '   ' → logprob: -10.049988746643066

Token 699: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.02260315977036953
    2. ' bottom' → logprob: -4.1476030349731445
    3. 'the' → logprob: -5.2726030349731445
    4. 'top' → logprob: -6.7726030349731445
    5. ' the' → logprob: -8.397603034973145
    6. ' top' → logprob: -11.147603034973145
    7. '```' → logprob: -11.397603034973145
    8. '(bottom' → logprob: -12.022603034973145
    9. '0' → logprob: -12.397603034973145
    10. ' ' → logprob: -12.522603034973145

Token 700: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5399301052093506
    2. '           ' → logprob: -0.9149301052093506
    3. '<|end|>' → logprob: -5.03993034362793
    4. '            
' → logprob: -5.66493034362793
    5. '       ' → logprob: -6.53993034362793
    6. ' 
' → logprob: -6.78993034362793
    7. ',' → logprob: -7.16493034362793
    8. '  
' → logprob: -7.91493034362793
    9. '<|end|>' → logprob: -8.03993034362793
    10. '
' → logprob: -8.28993034362793

Token 701: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005969968624413013
    2. 'space' → logprob: -7.87559700012207
    3. ' space' → logprob: -9.12559700012207
    4. '
' → logprob: -9.87559700012207
    5. '       ' → logprob: -10.87559700012207
    6. ',' → logprob: -11.87559700012207
    7. '            
' → logprob: -12.12559700012207
    8. '<|end|>' → logprob: -12.12559700012207
    9. '          ' → logprob: -12.50059700012207
    10. '#' → logprob: -13.00059700012207

Token 702: ' #' (ID: 1069)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.5818468928337097
    2. 'existing' → logprob: -1.3318469524383545
    3. ' old' → logprob: -3.4568469524383545
    4. ' existing' → logprob: -3.5818469524383545
    5. 'if' → logprob: -3.7068469524383545
    6. 'space' → logprob: -3.8318469524383545
    7. '#' (adapté à ' #') → logprob: -3.9568469524383545
    8. '           ' → logprob: -3.9568469524383545
    9. ' if' → logprob: -4.206846714019775
    10. 'top' → logprob: -5.331846714019775

Token 703: ' Or' (ID: 2604)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.6831862330436707
    2. 'existing' → logprob: -1.6831862926483154
    3. 'if' → logprob: -2.0581862926483154
    4. '#' → logprob: -3.0581862926483154
    5. '           ' → logprob: -3.1831862926483154
    6. ' if' → logprob: -3.3081862926483154
    7. ' old' → logprob: -4.058186054229736
    8. 'space' → logprob: -4.183186054229736
    9. ' existing' → logprob: -4.308186054229736
    10. 'prev' → logprob: -5.683186054229736

Token 704: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.536811113357544
    2. ' if' → logprob: -1.536811113357544
    3. '#' → logprob: -1.911811113357544
    4. '           ' → logprob: -1.911811113357544
    5. 'space' → logprob: -2.411811113357544
    6. '
' → logprob: -3.286811113357544
    7. 'the' → logprob: -3.786811113357544
    8. '       ' → logprob: -4.161810874938965
    9. ' the' → logprob: -4.286810874938965
    10. '...' → logprob: -4.536810874938965

Token 705: ' new' (ID: 620)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.5608363747596741
    2. '#' → logprob: -1.4358363151550293
    3. ' existing' → logprob: -2.6858363151550293
    4. 'old' → logprob: -2.8108363151550293
    5. 'else' → logprob: -4.685836315155029
    6. 'elif' → logprob: -5.185836315155029
    7. 'current' → logprob: -5.310836315155029
    8. 'bottom' → logprob: -5.435836315155029
    9. 'previous' → logprob: -5.435836315155029
    10. 'space' → logprob: -5.685836315155029

Token 706: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.10778812319040298
    2. ' one' → logprob: -3.3577880859375
    3. '_car' → logprob: -3.4827880859375
    4. 'car' → logprob: -3.7327880859375
    5. ' code' → logprob: -4.7327880859375
    6. '_' → logprob: -6.8577880859375
    7. ' space' → logprob: -7.4827880859375
    8. 'one' → logprob: -7.9827880859375
    9. '_code' → logprob: -8.3577880859375
    10. '_one' → logprob: -8.6077880859375

Token 707: ' goes' (ID: 8805)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.6696426868438721
    2. ' goes' → logprob: -1.669642686843872
    3. 'is' → logprob: -1.794642686843872
    4. ' is' → logprob: -2.419642686843872
    5. 's' → logprob: -4.419642448425293
    6. '```' → logprob: -5.169642448425293
    7. '_go' → logprob: -5.419642448425293
    8. 'should' → logprob: -5.669642448425293
    9. 'moves' → logprob: -6.544642448425293
    10. '#' → logprob: -6.669642448425293

Token 708: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.7577065825462341
    2. 'to' → logprob: -1.757706642150879
    3. ' on' → logprob: -2.007706642150879
    4. 'bottom' → logprob: -2.132706642150879
    5. ' to' → logprob: -2.382706642150879
    6. ' bottom' → logprob: -4.632706642150879
    7. 'down' → logprob: -6.507706642150879
    8. 'below' → logprob: -7.132706642150879
    9. ' at' → logprob: -7.257706642150879
    10. 'at' → logprob: -7.632706642150879

Token 709: ' top' (ID: 2344)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.13209204375743866
    2. 'top' → logprob: -2.757091999053955
    3. ' bottom' → logprob: -3.007091999053955
    4. 'the' → logprob: -5.007091999053955
    5. ' top' → logprob: -5.757091999053955
    6. ' the' → logprob: -7.132091999053955
    7. '0' → logprob: -9.507092475891113
    8. ' ' → logprob: -10.257092475891113
    9. '(bottom' → logprob: -11.632092475891113
    10. '```' → logprob: -11.757092475891113

Token 710: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23373471200466156
    2. '
' → logprob: -1.8587347269058228
    3. ' if' → logprob: -4.358734607696533
    4. '       ' → logprob: -4.733734607696533
    5. '            
' → logprob: -5.233734607696533
    6. ',' → logprob: -5.233734607696533
    7. '<|end|>' → logprob: -5.358734607696533
    8. ' 
' → logprob: -5.733734607696533
    9. '            ' → logprob: -6.733734607696533
    10. ' space' → logprob: -6.858734607696533

Token 711: ' and' (ID: 326)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.2102214097976685
    2. ' if' → logprob: -1.5852214097976685
    3. '           ' → logprob: -1.7102214097976685
    4. ' space' → logprob: -1.8352214097976685
    5. '       ' → logprob: -2.835221290588379
    6. '#' → logprob: -3.585221290588379
    7. 'if' → logprob: -3.960221290588379
    8. ' car' → logprob: -4.210221290588379
    9. ' but' → logprob: -4.710221290588379
    10. 'car' → logprob: -5.335221290588379

Token 712: ' existing' (ID: 9595)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5880653858184814
    2. 'existing' → logprob: -1.5880653858184814
    3. 'space' → logprob: -1.7130653858184814
    4. ' the' → logprob: -4.088065147399902
    5. 'old' → logprob: -4.588065147399902
    6. '#' → logprob: -4.838065147399902
    7. 'car' → logprob: -4.838065147399902
    8. 'self' → logprob: -4.963065147399902
    9. ' existing' → logprob: -5.088065147399902
    10. ' space' → logprob: -6.463065147399902

Token 713: ' is' (ID: 382)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.888477623462677
    2. ' car' → logprob: -1.1384775638580322
    3. '_car' → logprob: -1.5134775638580322
    4. 'bottom' → logprob: -3.6384775638580322
    5. ' bottom' → logprob: -4.138477802276611
    6. '.car' → logprob: -6.388477802276611
    7. '_bottom' → logprob: -7.388477802276611
    8. '	car' → logprob: -7.638477802276611
    9. '.bottom' → logprob: -7.888477802276611
    10. '```' → logprob: -8.013477325439453

Token 714: ' pushed' (ID: 31155)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18718460202217102
    2. 'bottom' → logprob: -2.3121845722198486
    3. 'on' → logprob: -3.4371845722198486
    4. ' moved' → logprob: -4.312184810638428
    5. 'p' → logprob: -5.312184810638428
    6. 'left' → logprob: -5.562184810638428
    7. ' on' → logprob: -5.687184810638428
    8. ' bottom' → logprob: -5.687184810638428
    9. 'down' → logprob: -5.937184810638428
    10. 'at' → logprob: -6.312184810638428

Token 715: ' bottom' (ID: 8725)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.23237194120883942
    2. ' down' → logprob: -1.6073719263076782
    3. 'bottom' → logprob: -5.482371807098389
    4. ' bottom' → logprob: -6.357371807098389
    5. ' to' → logprob: -7.482371807098389
    6. 'to' → logprob: -8.732372283935547
    7. '_down' → logprob: -8.982372283935547
    8. 'up' → logprob: -10.357372283935547
    9. ' up' → logprob: -10.607372283935547
    10. ' downward' → logprob: -11.107372283935547

Token 716: '?' (ID: 30)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6325639486312866
    2. '
' → logprob: -1.0075639486312866
    3. '<|end|>' → logprob: -3.757564067840576
    4. ',' → logprob: -4.007564067840576
    5. '<|end|>' → logprob: -4.382564067840576
    6. ':
' → logprob: -4.882564067840576
    7. '       ' → logprob: -5.132564067840576
    8. ':' → logprob: -5.257564067840576
    9. '.' → logprob: -5.382564067840576
    10. ' if' → logprob: -5.507564067840576

Token 717: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14644597470760345
    2. 'space' → logprob: -2.3964459896087646
    3. ' space' → logprob: -3.3964459896087646
    4. '#' → logprob: -4.6464457511901855
    5. ' #' → logprob: -7.8964457511901855
    6. 'Actually' → logprob: -7.8964457511901855
    7. '       ' → logprob: -8.646446228027344
    8. 'The' → logprob: -8.896446228027344
    9. 'top' → logprob: -8.896446228027344
    10. '(space' → logprob: -9.021446228027344

Token 718: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40061458945274353
    2. 'new' → logprob: -2.1506145000457764
    3. ' new' → logprob: -3.0256145000457764
    4. ' existing' → logprob: -3.2756145000457764
    5. 'existing' → logprob: -3.5256145000457764
    6. 'space' → logprob: -3.6506145000457764
    7. 'bottom' → logprob: -3.9006145000457764
    8. 'next' → logprob: -5.1506147384643555
    9. ' space' → logprob: -5.2756147384643555
    10. 'top' → logprob: -5.4006147384643555

Token 719: ' states' (ID: 9407)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0083625316619873
    2. 'states' → logprob: -1.8833625316619873
    3. ' states' → logprob: -2.3833625316619873
    4. ':' → logprob: -2.8833625316619873
    5. 'clar' → logprob: -3.5083625316619873
    6. 'contin' → logprob: -3.6333625316619873
    7. 'bottom' → logprob: -3.7583625316619873
    8. ' specifies' → logprob: -4.008362770080566
    9. '<|end|>' → logprob: -4.008362770080566
    10. 'is' → logprob: -4.133362770080566

Token 720: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.469495952129364
    2. 'new' → logprob: -2.094496011734009
    3. 'that' → logprob: -2.469496011734009
    4. ' the' → logprob: -2.844496011734009
    5. 'existing' → logprob: -3.344496011734009
    6. ' that' → logprob: -3.719496011734009
    7. '#' → logprob: -4.09449577331543
    8. ' new' → logprob: -4.46949577331543
    9. ':' → logprob: -4.96949577331543
    10. ' existing' → logprob: -5.21949577331543

Token 721: ' when' (ID: 1261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09574928879737854
    2. 'the' → logprob: -3.3457493782043457
    3. '           ' → logprob: -3.7207493782043457
    4. 'existing' → logprob: -4.720749378204346
    5. ' the' → logprob: -4.845749378204346
    6. 'new' → logprob: -5.220749378204346
    7. 'if' → logprob: -6.095749378204346
    8. ' existing' → logprob: -6.595749378204346
    9. 'space' → logprob: -6.720749378204346
    10. 'car' → logprob: -7.345749378204346

Token 722: ' we' (ID: 581)
  Prédit: 'parking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parking' → logprob: -0.20776577293872833
    2. 'a' → logprob: -3.457765817642212
    3. 'one' → logprob: -3.582765817642212
    4. 'park' → logprob: -3.707765817642212
    5. 'the' → logprob: -4.082765579223633
    6. ' parking' → logprob: -4.207765579223633
    7. 'stack' → logprob: -4.457765579223633
    8. 'car' → logprob: -4.582765579223633
    9. 'there' → logprob: -4.832765579223633
    10. 'two' → logprob: -4.832765579223633

Token 723: ' park' (ID: 11796)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.08180023729801178
    2. ' park' → logprob: -3.9568002223968506
    3. 'have' → logprob: -3.9568002223968506
    4. 'add' → logprob: -5.33180046081543
    5. '#' → logprob: -5.45680046081543
    6. 'want' → logprob: -5.70680046081543
    7. 'try' → logprob: -5.83180046081543
    8. 'put' → logprob: -5.95680046081543
    9. ' have' → logprob: -6.08180046081543
    10. 'push' → logprob: -6.08180046081543

Token 724: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.17811687290668488
    2. 'on' → logprob: -1.9281169176101685
    3. ' top' → logprob: -5.553116798400879
    4. ' a' → logprob: -6.053116798400879
    5. 'top' → logprob: -6.303116798400879
    6. ' the' → logprob: -6.303116798400879
    7. ' bottom' → logprob: -6.553116798400879
    8. 'ing' → logprob: -6.678116798400879
    9. ' in' → logprob: -6.803116798400879
    10. ' new' → logprob: -7.303116798400879

Token 725: ' a' (ID: 261)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6516388654708862
    2. ' an' → logprob: -1.5266388654708862
    3. 'top' → logprob: -2.276638984680176
    4. 'occupied' → logprob: -3.151638984680176
    5. ' the' → logprob: -3.276638984680176
    6. ' a' → logprob: -3.651638984680176
    7. ' occupied' → logprob: -4.026638984680176
    8. 'an' → logprob: -4.776638984680176
    9. ' one' → logprob: -5.151638984680176
    10. 'a' → logprob: -5.526638984680176

Token 726: ' spot' (ID: 10021)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.20921601355075836
    2. ' space' → logprob: -2.5842161178588867
    3. 'occupied' → logprob: -2.7092161178588867
    4. 'bottom' → logprob: -4.334216117858887
    5. 'empty' → logprob: -4.834216117858887
    6. 'stack' → logprob: -5.584216117858887
    7. ' empty' → logprob: -5.959216117858887
    8. ' occupied' → logprob: -6.084216117858887
    9. ' bottom' → logprob: -6.334216117858887
    10. 'parking' → logprob: -6.334216117858887

Token 727: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4378085434436798
    2. ' with' → logprob: -1.1878085136413574
    3. 'with' → logprob: -3.9378085136413574
    4. ' that' → logprob: -4.187808513641357
    5. ' where' → logprob: -5.187808513641357
    6. ' and' → logprob: -6.687808513641357
    7. 'that' → logprob: -6.937808513641357
    8. ' top' → logprob: -7.187808513641357
    9. 'top' → logprob: -7.312808513641357
    10. ' on' → logprob: -7.312808513641357

Token 728: ' ' (ID: 220)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.21948730945587158
    2. 'bottom' → logprob: -2.719487190246582
    3. ' one' → logprob: -2.844487190246582
    4. 'only' → logprob: -3.344487190246582
    5. 'a' → logprob: -4.094487190246582
    6. ' only' → logprob: -5.219487190246582
    7. ' bottom' → logprob: -6.094487190246582
    8. 'existing' → logprob: -6.094487190246582
    9. ' a' → logprob: -6.469487190246582
    10. 'space' → logprob: -6.844487190246582

Token 729: '1' (ID: 16)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.05890951305627823
    2. 'only' → logprob: -3.4339094161987305
    3. ' one' → logprob: -4.1839094161987305
    4. ' only' → logprob: -6.1839094161987305
    5. 'a' → logprob: -6.4339094161987305
    6. 'bottom' → logprob: -6.5589094161987305
    7. 'existing' → logprob: -7.3089094161987305
    8. 'exact' → logprob: -7.6839094161987305
    9. 'empty' → logprob: -7.9339094161987305
    10. '1' → logprob: -8.05890941619873

Token 730: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.18094713985919952
    2. 'car' → logprob: -1.805947184562683
    3. '_car' → logprob: -7.805947303771973
    4. ' ' → logprob: -8.305947303771973
    5. ' existing' → logprob: -8.430947303771973
    6. '   ' → logprob: -9.555947303771973
    7. 'existing' → logprob: -10.305947303771973
    8. 'space' → logprob: -10.555947303771973
    9. ' space' → logprob: -10.680947303771973
    10. '	car' → logprob: -10.680947303771973

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009617251344025135
    2. ':' → logprob: -4.759617328643799
    3. ',
' → logprob: -8.38461685180664
    4. ')' → logprob: -8.50961685180664
    5. ' ,' → logprob: -8.88461685180664
    6. ' and' → logprob: -9.25961685180664
    7. '.' → logprob: -9.75961685180664
    8. ' with' → logprob: -10.25961685180664
    9. '   ' → logprob: -10.50961685180664
    10. ' that' → logprob: -10.63461685180664

Token 732: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7695115208625793
    2. ' if' → logprob: -2.0195114612579346
    3. 'space' → logprob: -2.0195114612579346
    4. ' space' → logprob: -2.5195114612579346
    5. 'if' → logprob: -2.8945114612579346
    6. ' the' → logprob: -3.3945114612579346
    7. ' existing' → logprob: -3.7695114612579346
    8. ' #' → logprob: -4.019511699676514
    9. 'the' → logprob: -4.019511699676514
    10. 'existing' → logprob: -4.144511699676514

Token 733: ' existing' (ID: 9595)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7070846557617188
    2. 'existing' → logprob: -1.2070846557617188
    3. ' new' → logprob: -1.8320846557617188
    4. ' existing' → logprob: -3.2070846557617188
    5. 'top' → logprob: -6.082084655761719
    6. 'bottom' → logprob: -6.707084655761719
    7. 'old' → logprob: -7.207084655761719
    8. '#' → logprob: -7.457084655761719
    9. ' top' → logprob: -7.832084655761719
    10. ' bottom' → logprob: -8.207084655761719

Token 734: ' car' (ID: 1669)
  Prédit: ' car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.136421799659729
    2. 'car' → logprob: -2.2614216804504395
    3. '_car' → logprob: -4.2614216804504395
    4. ' bottom' → logprob: -5.7614216804504395
    5. ' is' → logprob: -6.1364216804504395
    6. 'bottom' → logprob: -6.7614216804504395
    7. '.car' → logprob: -7.7614216804504395
    8. '<|end|>' → logprob: -7.7614216804504395
    9. '	car' → logprob: -8.136422157287598
    10. ' existing' → logprob: -8.261422157287598

Token 735: ' is' (ID: 382)
  Prédit: ' goes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goes' → logprob: -0.9880803227424622
    2. 'moves' → logprob: -1.7380802631378174
    3. ' moves' → logprob: -1.9880802631378174
    4. ' is' → logprob: -1.9880802631378174
    5. 'go' → logprob: -2.9880802631378174
    6. ' at' → logprob: -3.8630802631378174
    7. ' stays' → logprob: -3.9880802631378174
    8. 'is' → logprob: -3.9880802631378174
    9. ' on' → logprob: -4.1130805015563965
    10. 'bottom' → logprob: -4.2380805015563965

Token 736: ' pushed' (ID: 31155)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7856495380401611
    2. 'p' → logprob: -1.0356495380401611
    3. ' moved' → logprob: -2.035649538040161
    4. ' pushed' → logprob: -2.910649538040161
    5. 'top' → logprob: -7.160649299621582
    6. 'bottom' → logprob: -7.910649299621582
    7. ' on' → logprob: -8.035649299621582
    8. 'on' → logprob: -8.160649299621582
    9. ' p' → logprob: -8.160649299621582
    10. '   ' → logprob: -8.535649299621582

Token 737: ' to' (ID: 316)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -1.3413288593292236
    2. ' bottom' → logprob: -1.4663288593292236
    3. 'down' → logprob: -1.7163288593292236
    4. ' to' → logprob: -1.8413288593292236
    5. ' down' → logprob: -2.2163288593292236
    6. 'top' → logprob: -3.5913288593292236
    7. ' top' → logprob: -4.2163286209106445
    8. 'to' → logprob: -4.5913286209106445
    9. ' up' → logprob: -5.7163286209106445
    10. ' on' → logprob: -6.8413286209106445

Token 738: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.38190972805023193
    2. ' top' → logprob: -1.381909728050232
    3. '1' → logprob: -3.2569098472595215
    4. ' the' → logprob: -4.6319098472595215
    5. ' ' → logprob: -5.1319098472595215
    6. 'the' → logprob: -5.1319098472595215
    7. 'bottom' → logprob: -5.8819098472595215
    8. '0' → logprob: -6.7569098472595215
    9. ' bottom' → logprob: -6.8819098472595215
    10. '(' → logprob: -7.1319098472595215

Token 739: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016726844012737274
    2. ',' → logprob: -4.891726970672607
    3. '
' → logprob: -5.266726970672607
    4. '            
' → logprob: -7.641726970672607
    5. 'space' → logprob: -7.766726970672607
    6. ' and' → logprob: -7.766726970672607
    7. ' if' → logprob: -8.01672649383545
    8. '       ' → logprob: -8.14172649383545
    9. '#' → logprob: -8.26672649383545
    10. ' space' → logprob: -8.64172649383545

Token 740: ' new' (ID: 620)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1933995485305786
    2. 'the' → logprob: -1.4433995485305786
    3. ' car' → logprob: -1.5683995485305786
    4. 'car' → logprob: -1.5683995485305786
    5. ' new' → logprob: -4.068399429321289
    6. 'new' → logprob: -4.318399429321289
    7. 'bottom' → logprob: -4.943399429321289
    8. ' bottom' → logprob: -5.443399429321289
    9. 'space' → logprob: -7.318399429321289
    10. ' space' → logprob: -7.943399429321289

Token 741: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.08004774153232574
    2. ' car' → logprob: -2.580047845840454
    3. ' one' → logprob: -8.080047607421875
    4. 'one' → logprob: -8.080047607421875
    5. '_car' → logprob: -8.455047607421875
    6. '(car' → logprob: -9.705047607421875
    7. '	car' → logprob: -9.705047607421875
    8. 'token' → logprob: -9.830047607421875
    9. '```' → logprob: -9.955047607421875
    10. 'bottom' → logprob: -9.955047607421875

Token 742: ' is' (ID: 382)
  Prédit: ' goes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goes' → logprob: -0.4521084725856781
    2. ' is' → logprob: -1.5771085023880005
    3. 'go' → logprob: -2.202108383178711
    4. 'is' → logprob: -3.327108383178711
    5. 'park' → logprob: -6.202108383178711
    6. 's' → logprob: -6.452108383178711
    7. ' parks' → logprob: -6.577108383178711
    8. ' sits' → logprob: -7.077108383178711
    9. ' occupies' → logprob: -7.327108383178711
    10. 'gets' → logprob: -7.577108383178711

Token 743: ' bottom' (ID: 8725)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.009804139845073223
    2. 'placed' → logprob: -5.5098042488098145
    3. ' parked' → logprob: -6.2598042488098145
    4. 'assigned' → logprob: -6.8848042488098145
    5. 'on' → logprob: -7.1348042488098145
    6. ' park' → logprob: -7.3848042488098145
    7. 'bottom' → logprob: -8.009803771972656
    8. 'put' → logprob: -8.384803771972656
    9. ' assigned' → logprob: -8.509803771972656
    10. ' on' → logprob: -8.634803771972656

Token 744: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05969737470149994
    2. '
' → logprob: -3.059697389602661
    3. 'space' → logprob: -5.934697151184082
    4. ',' → logprob: -5.934697151184082
    5. '       ' → logprob: -6.934697151184082
    6. ' space' → logprob: -7.434697151184082
    7. '            
' → logprob: -7.559697151184082
    8. ' if' → logprob: -7.559697151184082
    9. '.' → logprob: -7.809697151184082
    10. '<|end|>' → logprob: -7.809697151184082

Token 745: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01655755192041397
    2. '
' → logprob: -4.891557693481445
    3. '       ' → logprob: -5.016557693481445
    4. 'space' → logprob: -7.016557693481445
    5. '   ' → logprob: -8.016557693481445
    6. '            
' → logprob: -8.391557693481445
    7. ' if' → logprob: -8.516557693481445
    8. ' space' → logprob: -8.766557693481445
    9. '<|end|>' → logprob: -9.141557693481445
    10. 'if' → logprob: -9.391557693481445

Token 746: ' #' (ID: 1069)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.8393545150756836
    2. 'old' → logprob: -1.3393545150756836
    3. 'space' → logprob: -1.7143545150756836
    4. '#' (adapté à ' #') → logprob: -3.3393545150756836
    5. '           ' → logprob: -3.3393545150756836
    6. ' space' → logprob: -4.214354515075684
    7. ' existing' → logprob: -4.464354515075684
    8. 'if' → logprob: -4.714354515075684
    9. 'top' → logprob: -4.964354515075684
    10. 'prev' → logprob: -5.714354515075684

Token 747: ' Implement' (ID: 32889)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.4643338918685913
    2. 'if' → logprob: -1.4643338918685913
    3. 'old' → logprob: -2.464334011077881
    4. '#' → logprob: -3.214334011077881
    5. '           ' → logprob: -5.339334011077881
    6. 'space' → logprob: -6.214334011077881
    7. 'assert' → logprob: -6.714334011077881
    8. ' existing' → logprob: -6.839334011077881
    9. 'prev' → logprob: -6.839334011077881
    10. ' if' → logprob: -6.964334011077881

Token 748: ' that' (ID: 484)
  Prédit: ' existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' existing' → logprob: -1.4514012336730957
    2. '           ' → logprob: -1.5764012336730957
    3. ' if' → logprob: -1.5764012336730957
    4. 'existing' → logprob: -1.7014012336730957
    5. 'if' → logprob: -2.5764012336730957
    6. 'old' → logprob: -3.3264012336730957
    7. ' old' → logprob: -3.9514012336730957
    8. ' space' → logprob: -4.451401233673096
    9. 'space' → logprob: -4.951401233673096
    10. '#' → logprob: -5.326401233673096

Token 749: ' existing' (ID: 9595)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4204575717449188
    2. 'existing' → logprob: -1.6704576015472412
    3. 'old' → logprob: -3.045457601547241
    4. ' existing' → logprob: -3.295457601547241
    5. 'if' → logprob: -3.795457601547241
    6. ' if' → logprob: -4.420457363128662
    7. '
' → logprob: -4.670457363128662
    8. 'prev' → logprob: -4.795457363128662
    9. '#' → logprob: -5.420457363128662
    10. 'current' → logprob: -5.920457363128662

Token 750: ' car' (ID: 1669)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.054844144731760025
    2. '_bottom' → logprob: -3.5548441410064697
    3. 'car' → logprob: -4.304844379425049
    4. 'bottom' → logprob: -4.554844379425049
    5. '_c' → logprob: -8.67984390258789
    6. ' =' → logprob: -8.67984390258789
    7. '   ' → logprob: -9.55484390258789
    8. ' bottom' → logprob: -9.67984390258789
    9. '.bottom' → logprob: -9.92984390258789
    10. 'Car' → logprob: -10.42984390258789

Token 751: ' moves' (ID: 19523)
  Prédit: '_bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -1.2587074041366577
    2. 'bottom' → logprob: -1.6337074041366577
    3. ' =' → logprob: -1.7587074041366577
    4. '.bottom' → logprob: -1.7587074041366577
    5. '_car' → logprob: -3.0087075233459473
    6. '_existing' → logprob: -3.5087075233459473
    7. '=' → logprob: -3.6337075233459473
    8. '_old' → logprob: -4.508707523345947
    9. 'below' → logprob: -4.633707523345947
    10. '_ab' → logprob: -4.758707523345947

Token 752: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5296170115470886
    2. 'to' → logprob: -1.2796170711517334
    3. 'top' → logprob: -2.9046170711517334
    4. ' bottom' → logprob: -3.5296170711517334
    5. 'bottom' → logprob: -3.5296170711517334
    6. ' top' → logprob: -4.154616832733154
    7. 'down' → logprob: -6.279616832733154
    8. '           ' → logprob: -6.904616832733154
    9. ' down' → logprob: -7.779616832733154
    10. '   ' → logprob: -8.779617309570312

Token 753: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.658078670501709
    2. '1' → logprob: -0.783078670501709
    3. ' top' → logprob: -3.908078670501709
    4. 'the' → logprob: -6.033078670501709
    5. ' ' → logprob: -6.908078670501709
    6. '           ' → logprob: -7.783078670501709
    7. ' the' → logprob: -7.908078670501709
    8. '(top' → logprob: -8.033079147338867
    9. 'space' → logprob: -8.408079147338867
    10. '(' → logprob: -8.908079147338867

Token 754: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04656894505023956
    2. 'existing' → logprob: -3.7965688705444336
    3. '
' → logprob: -4.796568870544434
    4. ',' → logprob: -5.421568870544434
    5. ' existing' → logprob: -5.546568870544434
    6. 'space' → logprob: -6.046568870544434
    7. '_existing' → logprob: -7.046568870544434
    8. ' space' → logprob: -7.671568870544434
    9. '(existing' → logprob: -8.171568870544434
    10. '            
' → logprob: -8.171568870544434

Token 755: ' new' (ID: 620)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.7146226763725281
    2. '           ' → logprob: -1.5896227359771729
    3. 'space' → logprob: -1.7146227359771729
    4. 'old' → logprob: -2.464622735977173
    5. ' existing' → logprob: -3.964622735977173
    6. ' space' → logprob: -4.339622497558594
    7. 'car' → logprob: -5.464622497558594
    8. ' old' → logprob: -6.714622497558594
    9. 'prev' → logprob: -6.964622497558594
    10. 'if' → logprob: -6.964622497558594

Token 756: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6248973608016968
    2. ' car' → logprob: -0.8748973608016968
    3. '_car' → logprob: -3.2498974800109863
    4. '.car' → logprob: -4.874897480010986
    5. '	car' → logprob: -7.874897480010986
    6. '(car' → logprob: -8.249897003173828
    7. ' ' → logprob: -8.499897003173828
    8. '```' → logprob: -9.249897003173828
    9. '.' → logprob: -9.499897003173828
    10. 'bottom' → logprob: -9.874897003173828

Token 757: ' bottom' (ID: 8725)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.5804654359817505
    2. 'is' → logprob: -1.4554654359817505
    3. ' goes' → logprob: -2.080465316772461
    4. ' is' → logprob: -2.830465316772461
    5. '.' → logprob: -4.580465316772461
    6. 'be' → logprob: -6.205465316772461
    7. '.position' → logprob: -6.330465316772461
    8. ' becomes' → logprob: -6.580465316772461
    9. '.g' → logprob: -6.705465316772461
    10. '.bottom' → logprob: -7.080465316772461

Token 758: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013060812838375568
    2. '
' → logprob: -5.263061046600342
    3. ' existing' → logprob: -6.013061046600342
    4. 'existing' → logprob: -6.138061046600342
    5. ' space' → logprob: -6.888061046600342
    6. 'space' → logprob: -7.263061046600342
    7. ',' → logprob: -7.763061046600342
    8. '            
' → logprob: -8.013060569763184
    9. '       ' → logprob: -8.888060569763184
    10. '   ' → logprob: -9.138060569763184

Token 759: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03676649183034897
    2. ' existing' → logprob: -3.786766529083252
    3. 'existing' → logprob: -4.786766529083252
    4. ' space' → logprob: -5.911766529083252
    5. 'space' → logprob: -6.411766529083252
    6. '       ' → logprob: -8.161766052246094
    7. '```' → logprob: -9.286766052246094
    8. 'old' → logprob: -9.286766052246094
    9. ' old' → logprob: -9.911766052246094
    10. ' if' → logprob: -10.411766052246094

Token 760: ' if' (ID: 538)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.254667192697525
    2. 'old' → logprob: -2.504667282104492
    3. ' existing' → logprob: -2.629667282104492
    4. '           ' → logprob: -3.004667282104492
    5. ' old' → logprob: -4.754667282104492
    6. 'space' → logprob: -5.754667282104492
    7. 'prev' → logprob: -6.254667282104492
    8. 'top' → logprob: -6.504667282104492
    9. 'ex' → logprob: -6.629667282104492
    10. 'if' (adapté à ' if') → logprob: -6.629667282104492

Token 761: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.00029637437546625733
    2. ' space' → logprob: -8.125296592712402
    3. ' ' → logprob: -15.750296592712402
    4. '(space' → logprob: -15.750296592712402
    5. 'car' → logprob: -17.500295639038086
    6. '   ' → logprob: -17.875295639038086
    7. 'spaces' → logprob: -18.375295639038086
    8. '
' → logprob: -19.625295639038086
    9. '    ' → logprob: -19.750295639038086
    10. '  ' → logprob: -19.750295639038086

Token 762: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.00010711929644457996
    2. '.top' → logprob: -9.500106811523438
    3. '.' → logprob: -10.500106811523438
    4. '.has' → logprob: -13.250106811523438
    5. 'bottom' → logprob: -13.250106811523438
    6. ' .' → logprob: -15.125106811523438
    7. '.bot' → logprob: -15.750106811523438
    8. ' bottom' → logprob: -15.875106811523438
    9. '.Bottom' → logprob: -16.125106811523438
    10. '   ' → logprob: -16.625106811523438

Token 763: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3139272928237915
    2. 'is' → logprob: -1.3139272928237915
    3. 'and' → logprob: -7.938927173614502
    4. '.is' → logprob: -9.81392765045166
    5. ':' → logprob: -10.18892765045166
    6. '!==' → logprob: -10.18892765045166
    7. '!=' → logprob: -10.31392765045166
    8. ' ' → logprob: -10.56392765045166
    9. ' and' → logprob: -10.68892765045166
    10. '<|end|>' → logprob: -10.81392765045166

Token 764: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.031009500846266747
    2. 'None' → logprob: -3.6560094356536865
    3. ' not' → logprob: -5.406009674072266
    4. ' None' → logprob: -8.656009674072266
    5. 'none' → logprob: -10.656009674072266
    6. 'car' → logprob: -12.531009674072266
    7. '   ' → logprob: -13.531009674072266
    8. '=None' → logprob: -13.656009674072266
    9. 'Not' → logprob: -13.781009674072266
    10. '(None' → logprob: -14.156009674072266

Token 765: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.2166411478538066e-05
    2. ' None' → logprob: -9.875052452087402
    3. 'none' → logprob: -14.875052452087402
    4. '(None' → logprob: -16.000051498413086
    5. '   ' → logprob: -16.250051498413086
    6. '=None' → logprob: -16.750051498413086
    7. '_None' → logprob: -17.625051498413086
    8. 'not' → logprob: -17.875051498413086
    9. 'car' → logprob: -18.000051498413086
    10. '  ' → logprob: -18.500051498413086

Token 766: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16709493100643158
    2. ':' → logprob: -2.5420949459075928
    3. ' and' → logprob: -2.7920949459075928
    4. '               ' → logprob: -5.042094707489014
    5. 'and' → logprob: -5.292094707489014
    6. '           ' → logprob: -6.417094707489014
    7. '):
' → logprob: -8.667095184326172
    8. ',' → logprob: -9.042095184326172
    9. ' :
' → logprob: -9.167095184326172
    10. ':

' → logprob: -9.542095184326172

Token 767: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.014164801687002182
    2. ' space' → logprob: -4.264164924621582
    3. 'car' → logprob: -13.889164924621582
    4. '(space' → logprob: -15.639164924621582
    5. ' car' → logprob: -16.889163970947266
    6. ' ' → logprob: -16.889163970947266
    7. '_space' → logprob: -17.514163970947266
    8. '   ' → logprob: -17.639163970947266
    9. '  ' → logprob: -18.264163970947266
    10. '
' → logprob: -18.389163970947266

Token 768: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.0006728782900609076
    2. 'top' → logprob: -7.750672817230225
    3. '.bottom' → logprob: -8.625673294067383
    4. '.' → logprob: -10.375673294067383
    5. '	top' → logprob: -11.875673294067383
    6. ' .' → logprob: -12.125673294067383
    7. '[top' → logprob: -12.500673294067383
    8. ' top' → logprob: -13.375673294067383
    9. '.has' → logprob: -13.500673294067383
    10. 'and' → logprob: -13.625673294067383

Token 769: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.023255497217178345
    2. 'is' → logprob: -3.7732555866241455
    3. '<|end|>' → logprob: -12.773255348205566
    4. ' ' → logprob: -13.273255348205566
    5. ')' → logprob: -13.523255348205566
    6. 'None' → logprob: -13.648255348205566
    7. '==' → logprob: -14.023255348205566
    8. ' None' → logprob: -14.273255348205566
    9. '[' → logprob: -15.398255348205566
    10. ' ' → logprob: -15.523255348205566

Token 770: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001932205050252378
    2. ' None' → logprob: -6.251932144165039
    3. 'not' → logprob: -13.626932144165039
    4. 'none' → logprob: -13.876932144165039
    5. '   ' → logprob: -14.501932144165039
    6. '  ' → logprob: -15.001932144165039
    7. ' ' → logprob: -15.126932144165039
    8. '_None' → logprob: -15.751932144165039
    9. '    ' → logprob: -16.25193214416504
    10. '=None' → logprob: -16.75193214416504

Token 771: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3324100971221924
    2. ':
' → logprob: -1.3324100971221924
    3. '               ' → logprob: -4.207409858703613
    4. '           ' → logprob: -5.957409858703613
    5. ',' → logprob: -7.582409858703613
    6. ' and' → logprob: -8.332409858703613
    7. '       ' → logprob: -8.582409858703613
    8. '):
' → logprob: -8.957409858703613
    9. '<|end|>' → logprob: -9.082409858703613
    10. '):' → logprob: -10.457409858703613

Token 772: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003925349097698927
    2. '           ' → logprob: -5.628925323486328
    3. ' space' → logprob: -9.003925323486328
    4. '   ' → logprob: -9.378925323486328
    5. 'space' → logprob: -9.503925323486328
    6. '```' → logprob: -11.503925323486328
    7. '                   ' → logprob: -11.878925323486328
    8. '                
' → logprob: -11.878925323486328
    9. '       ' → logprob: -12.003925323486328
    10. '(space' → logprob: -13.253925323486328

Token 773: ' #' (ID: 1069)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.5822521448135376
    2. ' space' → logprob: -1.2072521448135376
    3. '               ' → logprob: -2.582252025604248
    4. 'existing' → logprob: -3.582252025604248
    5. 'old' → logprob: -3.832252025604248
    6. ' old' → logprob: -4.957252025604248
    7. ' existing' → logprob: -5.082252025604248
    8. '#' (adapté à ' #') → logprob: -6.457252025604248
    9. 'top' → logprob: -7.457252025604248
    10. 'prev' → logprob: -8.082252502441406

Token 774: ' push' (ID: 9349)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8791632056236267
    2. 'existing' → logprob: -1.1291632652282715
    3. 'old' → logprob: -2.1291632652282715
    4. ' space' → logprob: -2.6291632652282715
    5. '               ' → logprob: -3.7541632652282715
    6. '#' → logprob: -4.2541632652282715
    7. ' existing' → logprob: -4.2541632652282715
    8. ' old' → logprob: -5.0041632652282715
    9. 'top' → logprob: -5.2541632652282715
    10. '   ' → logprob: -6.3791632652282715

Token 775: ' bottom' (ID: 8725)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.3401685059070587
    2. 'existing' → logprob: -1.5901684761047363
    3. ' space' → logprob: -3.2151684761047363
    4. '               ' → logprob: -3.4651684761047363
    5. 'old' → logprob: -5.090168476104736
    6. ' existing' → logprob: -5.340168476104736
    7. 'bottom' → logprob: -7.465168476104736
    8. 'car' → logprob: -7.465168476104736
    9. '           ' → logprob: -8.215168952941895
    10. ' old' → logprob: -9.090168952941895

Token 776: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1762726753950119
    2. '_car' → logprob: -2.4262726306915283
    3. '               ' → logprob: -3.3012726306915283
    4. 'to' → logprob: -4.301272869110107
    5. ' car' → logprob: -4.301272869110107
    6. 'existing' → logprob: -6.176272869110107
    7. 'space' → logprob: -6.676272869110107
    8. ' to' → logprob: -6.676272869110107
    9. ' =' → logprob: -7.051272869110107
    10. '_to' → logprob: -7.051272869110107

Token 777: ' up' (ID: 869)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4680352807044983
    2. ' to' → logprob: -1.5930352210998535
    3. ' =' → logprob: -2.5930352210998535
    4. 'top' → logprob: -3.2180352210998535
    5. '=' → logprob: -3.7180352210998535
    6. '               ' → logprob: -3.9680352210998535
    7. ' up' → logprob: -5.7180352210998535
    8. ' top' → logprob: -5.7180352210998535
    9. 'up' → logprob: -6.2180352210998535
    10. 'space' → logprob: -6.4680352210998535

Token 778: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014421383384615183
    2. 'space' → logprob: -7.251441955566406
    3. 'car' → logprob: -7.751441955566406
    4. ' space' → logprob: -9.626441955566406
    5. 'existing' → logprob: -10.001441955566406
    6. ' car' → logprob: -10.126441955566406
    7. 'top' → logprob: -10.501441955566406
    8. '           ' → logprob: -10.626441955566406
    9. ',' → logprob: -10.751441955566406
    10. 'old' → logprob: -11.001441955566406

Token 779: ' new' (ID: 620)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.5571973323822021
    2. ' space' → logprob: -1.4321973323822021
    3. '               ' → logprob: -1.6821973323822021
    4. 'top' → logprob: -7.432197570800781
    5. 'old' → logprob: -7.557197570800781
    6. 'existing' → logprob: -8.182197570800781
    7. ' car' → logprob: -8.807197570800781
    8. 'temp' → logprob: -8.932197570800781
    9. ' old' → logprob: -8.932197570800781
    10. ' existing' → logprob: -9.432197570800781

Token 780: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.11760979145765305
    2. 'bottom' → logprob: -2.992609739303589
    3. '_car' → logprob: -2.992609739303589
    4. ' car' → logprob: -4.992609977722168
    5. '_bottom' → logprob: -6.492609977722168
    6. '.car' → logprob: -7.242609977722168
    7. ' bottom' → logprob: -7.367609977722168
    8. '.bottom' → logprob: -8.367609977722168
    9. 'space' → logprob: -8.617609977722168
    10. '```' → logprob: -8.992609977722168

Token 781: ' bottom' (ID: 8725)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -1.2817972898483276
    2. 'be' → logprob: -2.156797409057617
    3. 'bottom' → logprob: -2.406797409057617
    4. ' becomes' → logprob: -2.656797409057617
    5. ' goes' → logprob: -2.656797409057617
    6. 'at' → logprob: -3.156797409057617
    7. 'to' → logprob: -3.156797409057617
    8. ' at' → logprob: -3.156797409057617
    9. ' to' → logprob: -3.281797409057617
    10. 'is' → logprob: -3.406797409057617

Token 782: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01154912356287241
    2. ' =' → logprob: -5.63654899597168
    3. '                
' → logprob: -6.38654899597168
    4. ',' → logprob: -6.88654899597168
    5. 'space' → logprob: -7.01154899597168
    6. 'car' → logprob: -7.26154899597168
    7. 'top' → logprob: -7.26154899597168
    8. '=' → logprob: -7.51154899597168
    9. 'bottom' → logprob: -8.13654899597168
    10. ' car' → logprob: -8.13654899597168

Token 783: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014442270912695676
    2. 'space' → logprob: -10.125144004821777
    3. '                
' → logprob: -10.500144004821777
    4. ' space' → logprob: -11.000144004821777
    5. ',' → logprob: -11.625144004821777
    6. '```' → logprob: -11.750144004821777
    7. '                   ' → logprob: -12.250144004821777
    8. '           ' → logprob: -12.375144004821777
    9. ' car' → logprob: -12.500144004821777
    10. 'car' → logprob: -12.750144004821777

Token 784: ' #' (ID: 1069)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.24959120154380798
    2. 'old' → logprob: -2.499591112136841
    3. ' space' → logprob: -2.624591112136841
    4. 'existing' → logprob: -3.249591112136841
    5. 'top' → logprob: -4.49959135055542
    6. '               ' → logprob: -5.37459135055542
    7. 'temp' → logprob: -5.62459135055542
    8. ' old' → logprob: -5.87459135055542
    9. 'car' → logprob: -6.12459135055542
    10. ' existing' → logprob: -6.74959135055542

Token 785: ' But' (ID: 3072)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.3457619249820709
    2. 'old' → logprob: -2.220762014389038
    3. ' space' → logprob: -2.595762014389038
    4. 'existing' → logprob: -2.845762014389038
    5. 'top' → logprob: -3.720762014389038
    6. ' old' → logprob: -4.720761775970459
    7. '               ' → logprob: -4.970761775970459
    8. ' existing' → logprob: -5.470761775970459
    9. 'temp' → logprob: -6.470761775970459
    10. ' top' → logprob: -6.845761775970459

Token 786: ' problem' (ID: 4792)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.9744720458984375
    2. 'existing' → logprob: -1.0994720458984375
    3. 'space' → logprob: -2.5994720458984375
    4. ' old' → logprob: -2.5994720458984375
    5. ' existing' → logprob: -3.0994720458984375
    6. ' space' → logprob: -3.7244720458984375
    7. 'top' → logprob: -4.2244720458984375
    8. '#' → logprob: -4.3494720458984375
    9. 'the' → logprob: -4.8494720458984375
    10. 'bottom' → logprob: -5.0994720458984375

Token 787: ' says' (ID: 5003)
  Prédit: '.bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.023853162303566933
    2. 'bottom' → logprob: -4.273853302001953
    3. '.space' → logprob: -6.023853302001953
    4. '#' → logprob: -6.523853302001953
    5. '           ' → logprob: -6.523853302001953
    6. '               ' → logprob: -6.523853302001953
    7. '.top' → logprob: -6.648853302001953
    8. ' bottom' → logprob: -8.273853302001953
    9. ':' → logprob: -8.648853302001953
    10. '   ' → logprob: -8.648853302001953

Token 788: ' the' (ID: 290)
  Prédit: ' existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' existing' → logprob: -0.7393599152565002
    2. 'existing' → logprob: -1.6143598556518555
    3. ' the' → logprob: -2.2393598556518555
    4. ' space' → logprob: -2.8643598556518555
    5. 'space' → logprob: -3.3643598556518555
    6. ' that' → logprob: -3.3643598556518555
    7. 'the' → logprob: -3.4893598556518555
    8. ':' → logprob: -4.2393598556518555
    9. ' bottom' → logprob: -4.3643598556518555
    10. '#' → logprob: -5.3643598556518555

Token 789: ' existing' (ID: 9595)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.2908315360546112
    2. ' existing' → logprob: -2.0408315658569336
    3. 'new' → logprob: -2.5408315658569336
    4. ' new' → logprob: -4.415831565856934
    5. 'bottom' → logprob: -5.040831565856934
    6. '#' → logprob: -5.540831565856934
    7. 'space' → logprob: -5.540831565856934
    8. 'old' → logprob: -5.665831565856934
    9. 'code' → logprob: -6.415831565856934
    10. '```' → logprob: -6.915831565856934

Token 790: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.1824156045913696
    2. 'bottom' → logprob: -1.3074156045913696
    3. ' car' → logprob: -1.5574156045913696
    4. ' bottom' → logprob: -1.5574156045913696
    5. '_car' → logprob: -7.30741548538208
    6. '```' → logprob: -9.432415962219238
    7. ' is' → logprob: -9.557415962219238
    8. 'Car' → logprob: -9.682415962219238
    9. '   ' → logprob: -9.682415962219238
    10. 'top' → logprob: -9.682415962219238

Token 791: ' "' (ID: 392)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.1157912015914917
    2. ' is' → logprob: -1.6157912015914917
    3. ' goes' → logprob: -1.9907912015914917
    4. ' moves' → logprob: -2.2407913208007812
    5. 'bottom' → logprob: -2.6157913208007812
    6. 'go' → logprob: -3.2407913208007812
    7. 'is' → logprob: -3.3657913208007812
    8. ' bottom' → logprob: -3.8657913208007812
    9. 'top' → logprob: -4.115791320800781
    10. 'should' → logprob: -4.615791320800781

Token 792: 'が' (ID: 6632)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.39144065976142883
    2. 'go' → logprob: -2.3914406299591064
    3. 'bottom' → logprob: -2.6414406299591064
    4. 'is' → logprob: -3.0164406299591064
    5. ' moves' → logprob: -3.1414406299591064
    6. ' is' → logprob: -3.7664406299591064
    7. ' goes' → logprob: -4.1414408683776855
    8. 'should' → logprob: -4.7664408683776855
    9. ' bottom' → logprob: -5.7664408683776855
    10. 'm' → logprob: -5.7664408683776855

Token 793: '先' (ID: 12231)
  Prédit: '上'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '上' → logprob: -1.2339873313903809
    2. '下' → logprob: -1.8589873313903809
    3. 'bottom' → logprob: -1.8589873313903809
    4. 'space' → logprob: -2.108987331390381
    5. 'top' → logprob: -2.983987331390381
    6. ' bottom' → logprob: -3.983987331390381
    7. 'push' → logprob: -3.983987331390381
    8. 'す' → logprob: -4.171487331390381
    9. ' space' → logprob: -4.671487331390381
    10. '```' → logprob: -4.733987331390381

Token 794: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.007563321851193905
    2. 'ず' → logprob: -5.38256311416626
    3. 'push' → logprob: -7.00756311416626
    4. '行' → logprob: -7.88256311416626
    5. '頭' → logprob: -8.132563591003418
    6. '```' → logprob: -8.882563591003418
    7. '#' → logprob: -9.382563591003418
    8. 'move' → logprob: -9.382563591003418
    9. '送り' → logprob: -9.507563591003418
    10. 'ほど' → logprob: -9.507563591003418

Token 795: '�' (ID: 51268)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -1.373679757118225
    2. '下' → logprob: -1.498679757118225
    3. '上' → logprob: -1.748679757118225
    4. 'top' → logprob: -2.8736796379089355
    5. '移' → logprob: -2.8736796379089355
    6. 'park' → logprob: -3.4986796379089355
    7. '出' → logprob: -3.7486796379089355
    8. '入' → logprob: -3.9986796379089355
    9. '\xe9\xa7' → logprob: -4.4986796379089355
    10. 'space' → logprob: -4.6236796379089355

Token 796: '�' (ID: 238)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -2.7319846153259277
    2. '移' → logprob: -2.7319846153259277
    3. '押' → logprob: -2.8569846153259277
    4. '\xe9\xa7' → logprob: -2.9819846153259277
    5. '降' → logprob: -3.1069846153259277
    6. 'p' → logprob: -3.1069846153259277
    7. '下' → logprob: -3.4819846153259277
    8. '車' → logprob: -3.6069846153259277
    9. '上' → logprob: -3.7319846153259277
    10. 'push' → logprob: -3.7944846153259277

Token 797: '車' (ID: 35939)
  Prédit: '移'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '移' → logprob: -2.68782114982605
    2. '下' → logprob: -2.93782114982605
    3. 'に' → logprob: -3.31282114982605
    4. 'p' → logprob: -3.31282114982605
    5. 'っ' → logprob: -3.43782114982605
    6. 'る' → logprob: -3.43782114982605
    7. '押' → logprob: -3.43782114982605
    8. 'す' → logprob: -3.56282114982605
    9. 'push' → logprob: -3.56282114982605
    10. 'た' → logprob: -3.56282114982605

Token 798: 'して' (ID: 22440)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -1.5927432775497437
    2. 'が' → logprob: -1.8427432775497437
    3. '下' → logprob: -2.592743396759033
    4. 'は' → logprob: -2.967743396759033
    5. 'す' → logprob: -3.342743396759033
    6. '押' → logprob: -3.530243396759033
    7. 'の' → logprob: -3.592743396759033
    8. '上' → logprob: -3.842743396759033
    9. 'push' → logprob: -3.842743396759033
    10. 'か' → logprob: -3.967743396759033

Token 799: 'いた' (ID: 98451)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.895380973815918
    2. 'く' → logprob: -2.770380973815918
    3. 'ります' → logprob: -2.770380973815918
    4. 'ます' → logprob: -3.020380973815918
    5. 'き' → logprob: -3.145380973815918
    6. 'います' → logprob: -3.270380973815918
    7. 'top' → logprob: -3.270380973815918
    8. 'った' → logprob: -3.395380973815918
    9. 'る' → logprob: -3.395380973815918
    10. 'い' → logprob: -3.520380973815918

Token 800: '車' (ID: 35939)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.3768467903137207
    2. 'た' → logprob: -2.0018467903137207
    3. 'い' → logprob: -2.2518467903137207
    4. 'いた' → logprob: -3.1268467903137207
    5. '下' → logprob: -3.7518467903137207
    6. 'り' → logprob: -3.8768467903137207
    7. 'ます' → logprob: -3.8768467903137207
    8. 'く' → logprob: -3.8768467903137207
    9. 'か' → logprob: -4.001846790313721
    10. 'いる' → logprob: -4.001846790313721

Token 801: ' B' (ID: 418)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'が' → logprob: -2.073157787322998
    2. 'た' → logprob: -2.198157787322998
    3. 'いた' → logprob: -2.323157787322998
    4. 'ます' → logprob: -2.698157787322998
    5. 'bottom' → logprob: -2.948157787322998
    6. 'を' → logprob: -3.198157787322998
    7. 'い' → logprob: -3.198157787322998
    8. 'の' → logprob: -3.198157787322998
    9. '下' → logprob: -3.448157787322998
    10. 'いる' → logprob: -3.823157787322998

Token 802: ' は' (ID: 121587)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.385481834411621
    2. 'が' → logprob: -2.010481834411621
    3. 'は' → logprob: -2.135481834411621
    4. 'を' → logprob: -2.135481834411621
    5. 'い' → logprob: -3.510481834411621
    6. 'り' → logprob: -4.010481834411621
    7. 'か' → logprob: -4.260481834411621
    8. 'る' → logprob: -4.385481834411621
    9. 'ー' → logprob: -4.447981834411621
    10. 'け' → logprob: -4.447981834411621

Token 803: '上' (ID: 4286)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.2801678776741028
    2. 'top' → logprob: -2.405167818069458
    3. ' space' → logprob: -3.030167818069458
    4. 'bottom' → logprob: -3.780167818069458
    5. '上' → logprob: -4.030168056488037
    6. '下' → logprob: -4.405168056488037
    7. 'トップ' → logprob: -4.655168056488037
    8. ' top' → logprob: -4.905168056488037
    9. '#' → logprob: -5.030168056488037
    10. '空' → logprob: -5.155168056488037

Token 804: '段' (ID: 27561)
  Prédit: 'に'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.7002541422843933
    2. 'が' → logprob: -1.700254201889038
    3. 'の' → logprob: -2.825254201889038
    4. '位' → logprob: -3.075254201889038
    5. '```' → logprob: -3.575254201889038
    6. 'へ' → logprob: -4.325253963470459
    7. 'を' → logprob: -4.325253963470459
    8. 'です' → logprob: -4.450253963470459
    9. '部' → logprob: -4.700253963470459
    10. '(' → logprob: -4.700253963470459

Token 805: 'になります' (ID: 173276)
  Prédit: 'に'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'に' → logprob: -1.069938063621521
    2. 'を' → logprob: -1.569938063621521
    3. '"' → logprob: -1.944938063621521
    4. 'が' → logprob: -2.5699381828308105
    5. 'の' → logprob: -3.1949381828308105
    6. 'で' → logprob: -3.5699381828308105
    7. 'へ' → logprob: -4.1949381828308105
    8. 'す' → logprob: -4.4449381828308105
    9. '```' → logprob: -4.4449381828308105
    10. '車' → logprob: -4.5699381828308105

Token 806: '."' (ID: 3692)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.3931536674499512
    2. 'す' → logprob: -1.5181536674499512
    3. 'る' → logprob: -3.018153667449951
    4. 'た' → logprob: -3.143153667449951
    5. '"' → logprob: -3.268153667449951
    6. 'が' → logprob: -3.268153667449951
    7. 'て' → logprob: -3.393153667449951
    8. '。' → logprob: -3.393153667449951
    9. 'り' → logprob: -3.518153667449951
    10. 'self' → logprob: -3.768153667449951

Token 807: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02610659971833229
    2. ' space' → logprob: -5.401106834411621
    3. 'space' → logprob: -5.776106834411621
    4. 'す' → logprob: -6.026106834411621
    5. '           ' → logprob: -6.151106834411621
    6. '#' → logprob: -6.151106834411621
    7. '              ' → logprob: -7.463606834411621
    8. '       ' → logprob: -7.526106834411621
    9. 'の' → logprob: -7.901106834411621
    10. 'を' → logprob: -7.901106834411621

Token 808: ' example' (ID: 4994)
  Prédit: 'Japanese'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Japanese' → logprob: -0.7660180330276489
    2. '#' → logprob: -1.766018033027649
    3. 'the' → logprob: -1.891018033027649
    4. 'space' → logprob: -2.5160179138183594
    5. ' Japanese' → logprob: -3.7660179138183594
    6. 'this' → logprob: -4.141017913818359
    7. 'bottom' → logprob: -4.266017913818359
    8. 'English' → logprob: -4.516017913818359
    9. '日本' → logprob: -4.641017913818359
    10. 'この' → logprob: -4.766017913818359

Token 809: ' :' (ID: 712)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03699363023042679
    2. '           ' → logprob: -5.161993503570557
    3. 'space' → logprob: -5.161993503570557
    4. '#' → logprob: -6.161993503570557
    5. ' space' → logprob: -6.161993503570557
    6. 'す' → logprob: -6.286993503570557
    7. '              ' → logprob: -6.536993503570557
    8. 'の' → logprob: -6.536993503570557
    9. 'は' → logprob: -6.911993503570557
    10. 'を' → logprob: -6.974493503570557

Token 810: ' the' (ID: 290)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12751257419586182
    2. '#' → logprob: -3.1275124549865723
    3. 'space' → logprob: -4.252512454986572
    4. ' space' → logprob: -4.752512454986572
    5. 'existing' → logprob: -5.127512454986572
    6. '           ' → logprob: -5.377512454986572
    7. ' existing' → logprob: -5.377512454986572
    8. 'bottom' → logprob: -6.252512454986572
    9. 'その' → logprob: -6.252512454986572
    10. 'そう' → logprob: -6.252512454986572

Token 811: ' previous' (ID: 5880)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.4002160131931305
    2. '#' → logprob: -2.4002161026000977
    3. ' existing' → logprob: -2.5252161026000977
    4. 'new' → logprob: -2.5252161026000977
    5. 'old' → logprob: -3.1502161026000977
    6. ' new' → logprob: -4.775216102600098
    7. 'bottom' → logprob: -4.775216102600098
    8. 'space' → logprob: -5.150216102600098
    9. 'top' → logprob: -5.150216102600098
    10. ' bottom' → logprob: -6.775216102600098

Token 812: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.058127664029598236
    2. ' car' → logprob: -3.4331276416778564
    3. 'bottom' → logprob: -4.1831278800964355
    4. '_car' → logprob: -6.1831278800964355
    5. 'existing' → logprob: -6.3081278800964355
    6. '車' → logprob: -6.6831278800964355
    7. '```' → logprob: -7.0581278800964355
    8. ' bottom' → logprob: -7.3081278800964355
    9. ' existing' → logprob: -7.5581278800964355
    10. '.car' → logprob: -8.933127403259277

Token 813: ' moves' (ID: 19523)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.9712550044059753
    2. ' is' → logprob: -1.8462550640106201
    3. 'を' → logprob: -1.9712550640106201
    4. 'は' → logprob: -2.09625506401062
    5. ' goes' → logprob: -2.84625506401062
    6. 'bottom' → logprob: -3.84625506401062
    7. 'moves' → logprob: -3.97125506401062
    8. 'の' → logprob: -4.346254825592041
    9. '#' → logprob: -4.721254825592041
    10. ' moves' → logprob: -4.846254825592041

Token 814: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.494103342294693
    2. ' to' → logprob: -0.9941033124923706
    3. 'top' → logprob: -4.86910343170166
    4. 'up' → logprob: -5.61910343170166
    5. ' ' → logprob: -6.24410343170166
    6. '               ' → logprob: -6.36910343170166
    7. '   ' → logprob: -6.36910343170166
    8. '上' → logprob: -6.61910343170166
    9. ' top' → logprob: -7.74410343170166
    10. ' up' → logprob: -8.61910343170166

Token 815: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.14124652743339539
    2. ' top' → logprob: -2.2662465572357178
    3. '上' → logprob: -4.266246318817139
    4. '1' → logprob: -4.641246318817139
    5. '(' → logprob: -7.016246318817139
    6. '(top' → logprob: -7.141246318817139
    7. 'the' → logprob: -7.391246318817139
    8. 'トップ' → logprob: -7.516246318817139
    9. '0' → logprob: -7.891246318817139
    10. '	top' → logprob: -8.516246795654297

Token 816: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07094789296388626
    2. '
' → logprob: -3.0709478855133057
    3. '                
' → logprob: -5.695948123931885
    4. ',' → logprob: -5.945948123931885
    5. 'space' → logprob: -6.195948123931885
    6. '           ' → logprob: -6.945948123931885
    7. ' space' → logprob: -7.070948123931885
    8. '下' → logprob: -7.070948123931885
    9. ')
' → logprob: -7.570948123931885
    10. ':
' → logprob: -7.695948123931885

Token 817: ' new' (ID: 620)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1000038385391235
    2. 'the' → logprob: -1.2250038385391235
    3. 'new' → logprob: -2.350003719329834
    4. ' new' → logprob: -2.850003719329834
    5. 'bottom' → logprob: -2.850003719329834
    6. 'space' → logprob: -3.100003719329834
    7. ' space' → logprob: -3.350003719329834
    8. 'top' → logprob: -3.475003719329834
    9. ' bottom' → logprob: -3.975003719329834
    10. ' top' → logprob: -4.725003719329834

Token 818: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4414106607437134
    2. ' car' → logprob: -1.0664106607437134
    3. '_car' → logprob: -4.691410541534424
    4. '車' → logprob: -7.066410541534424
    5. '	car' → logprob: -7.191410541534424
    6. 'bottom' → logprob: -7.816410541534424
    7. '(car' → logprob: -8.316411018371582
    8. ' bottom' → logprob: -8.441411018371582
    9. '车' → logprob: -9.066411018371582
    10. ' ' → logprob: -9.066411018371582

Token 819: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.14001671969890594
    2. ' bottom' → logprob: -3.390016794204712
    3. 'is' → logprob: -3.515016794204712
    4. ' is' → logprob: -4.140016555786133
    5. 'go' → logprob: -4.265016555786133
    6. ' goes' → logprob: -4.390016555786133
    7. '```' → logprob: -5.765016555786133
    8. ' becomes' → logprob: -5.890016555786133
    9. 'be' → logprob: -5.890016555786133
    10. 'は' → logprob: -6.015016555786133

Token 820: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006781569216400385
    2. '
' → logprob: -5.631781578063965
    3. '                
' → logprob: -6.631781578063965
    4. ',' → logprob: -7.756781578063965
    5. ',
' → logprob: -8.506781578063965
    6. '           ' → logprob: -8.756781578063965
    7. 'space' → logprob: -8.756781578063965
    8. '       ' → logprob: -9.256781578063965
    9. '#' → logprob: -9.381781578063965
    10. ':
' → logprob: -9.506781578063965

Token 821: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012832103529945016
    2. '
' → logprob: -7.501283168792725
    3. '                
' → logprob: -8.001283645629883
    4. 'space' → logprob: -9.376283645629883
    5. '           ' → logprob: -10.438783645629883
    6. '              ' → logprob: -10.501283645629883
    7. '#' → logprob: -10.563783645629883
    8. ',' → logprob: -10.751283645629883
    9. '			' → logprob: -11.251283645629883
    10. '```' → logprob: -11.501283645629883

Token 822: ' #' (ID: 1069)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.9971855282783508
    2. 'existing' → logprob: -1.122185468673706
    3. '               ' → logprob: -2.247185468673706
    4. 'space' → logprob: -2.622185468673706
    5. '#' (adapté à ' #') → logprob: -3.622185468673706
    6. ' old' → logprob: -3.622185468673706
    7. ' existing' → logprob: -3.997185468673706
    8. 'prev' → logprob: -4.122185707092285
    9. 'top' → logprob: -4.122185707092285
    10. ' space' → logprob: -4.872185707092285

Token 823: ' But' (ID: 3072)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -1.0319080352783203
    2. 'old' → logprob: -1.6569080352783203
    3. 'space' → logprob: -2.2819080352783203
    4. '               ' → logprob: -2.4069080352783203
    5. '#' → logprob: -2.4069080352783203
    6. ' existing' → logprob: -3.1569080352783203
    7. ' old' → logprob: -3.6569080352783203
    8. ' space' → logprob: -3.6569080352783203
    9. ' #' → logprob: -3.7819080352783203
    10. 'prev' → logprob: -3.9069080352783203

Token 824: ' higher' (ID: 7266)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23414717614650726
    2. 'the' → logprob: -2.734147071838379
    3. 'space' → logprob: -3.234147071838379
    4. 'new' → logprob: -3.234147071838379
    5. '               ' → logprob: -3.859147071838379
    6. 'existing' → logprob: -4.859147071838379
    7. 'car' → logprob: -4.984147071838379
    8. 'here' → logprob: -5.609147071838379
    9. '           ' → logprob: -5.859147071838379
    10. ' the' → logprob: -5.984147071838379

Token 825: ' in' (ID: 306)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.737348198890686
    2. '               ' → logprob: -1.237348198890686
    3. 'car' → logprob: -2.4873480796813965
    4. '           ' → logprob: -3.4873480796813965
    5. ' space' → logprob: -3.7373480796813965
    6. '#' → logprob: -4.4873480796813965
    7. ' car' → logprob: -5.1123480796813965
    8. 'の' → logprob: -5.2373480796813965
    9. '_space' → logprob: -5.6123480796813965
    10. '車' → logprob: -5.7373480796813965

Token 826: ' description' (ID: 6496)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5568799376487732
    2. 'comment' → logprob: -1.306879997253418
    3. 'code' → logprob: -2.431879997253418
    4. 'comments' → logprob: -3.056879997253418
    5. '#' → logprob: -5.806879997253418
    6. '           ' → logprob: -5.931879997253418
    7. '       ' → logprob: -5.931879997253418
    8. 'コメント' → logprob: -6.181879997253418
    9. 'class' → logprob: -6.306879997253418
    10. 'def' → logprob: -6.556879997253418

Token 827: ' it' (ID: 480)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3028457164764404
    2. '
' → logprob: -1.5528457164764404
    3. '                ' → logprob: -2.5528457164764404
    4. '<|end|>' → logprob: -3.0528457164764404
    5. ' ' → logprob: -3.4278457164764404
    6. ':' → logprob: -3.4278457164764404
    7. '<|end|>' → logprob: -3.4278457164764404
    8. 'space' → logprob: -3.6778457164764404
    9. ' 
' → logprob: -3.6778457164764404
    10. '                
' → logprob: -4.1778459548950195

Token 828: ' says' (ID: 5003)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4856528043746948
    2. '               ' → logprob: -1.4856528043746948
    3. ' says' → logprob: -1.9856528043746948
    4. ' is' → logprob: -2.8606529235839844
    5. 'は' → logprob: -3.3606529235839844
    6. ':
' → logprob: -3.6106529235839844
    7. '           ' → logprob: -3.6106529235839844
    8. '
' → logprob: -3.8606529235839844
    9. ' seems' → logprob: -3.8606529235839844
    10. 'moves' → logprob: -3.9856529235839844

Token 829: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22497597336769104
    2. '                ' → logprob: -2.474976062774658
    3. ' space' → logprob: -3.599976062774658
    4. '(space' → logprob: -3.974976062774658
    5. ' ' → logprob: -4.349976062774658
    6. ' ' → logprob: -4.349976062774658
    7. 'space' → logprob: -4.474976062774658
    8. ' 
' → logprob: -5.599976062774658
    9. '                
' → logprob: -5.724976062774658
    10. '            ' → logprob: -5.974976062774658

Token 830: ' 上' (ID: 30555)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12776638567447662
    2. '#' → logprob: -2.8777663707733154
    3. ' space' → logprob: -3.8777663707733154
    4. 'space' → logprob: -4.0027666091918945
    5. ' car' → logprob: -5.5027666091918945
    6. 'new' → logprob: -5.5027666091918945
    7. 'car' → logprob: -5.7527666091918945
    8. ' new' → logprob: -6.0027666091918945
    9. ' #' → logprob: -6.0027666091918945
    10. ' if' → logprob: -6.7527666091918945

Token 831: '段' (ID: 27561)
  Prédit: '段'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '段' → logprob: -0.0061291721649467945
    2. '下' → logprob: -6.756129264831543
    3. 'の' → logprob: -6.881129264831543
    4. '\xe5\xb1' → logprob: -7.756129264831543
    5. '位' → logprob: -8.006129264831543
    6. '限' → logprob: -8.006129264831543
    7. 'に' → logprob: -8.131129264831543
    8. '端' → logprob: -8.131129264831543
    9. 'は' → logprob: -8.381129264831543
    10. '```' → logprob: -8.631129264831543

Token 832: 'の' (ID: 3385)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9410563707351685
    2. '=' → logprob: -1.1910563707351685
    3. '   ' → logprob: -2.441056251525879
    4. '               ' → logprob: -3.316056251525879
    5. 'は' → logprob: -3.816056251525879
    6. 'の' → logprob: -3.816056251525879
    7. ')' → logprob: -3.941056251525879
    8. 'に' → logprob: -4.441056251525879
    9. 'を' → logprob: -4.441056251525879
    10. '           ' → logprob: -4.566056251525879

Token 833: '車' (ID: 35939)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5697164535522461
    2. 'space' → logprob: -2.069716453552246
    3. '#' → logprob: -3.069716453552246
    4. 'existing' → logprob: -3.069716453552246
    5. ' car' → logprob: -4.069716453552246
    6. 'new' → logprob: -4.319716453552246
    7. '               ' → logprob: -4.382216453552246
    8. ' existing' → logprob: -4.507216453552246
    9. '車' → logprob: -4.507216453552246
    10. '```' → logprob: -4.694716453552246

Token 834: 'を' (ID: 7277)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'は' → logprob: -1.22597336769104
    2. ' is' → logprob: -1.72597336769104
    3. 'が' → logprob: -1.72597336769104
    4. ' =' → logprob: -2.10097336769104
    5. '=' → logprob: -2.47597336769104
    6. 'を' → logprob: -2.85097336769104
    7. '=None' → logprob: -4.725973129272461
    8. 'の' → logprob: -4.850973129272461
    9. 'bottom' → logprob: -5.225973129272461
    10. 'に' → logprob: -5.225973129272461

Token 835: '出' (ID: 6390)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -1.2994757890701294
    2. '下' → logprob: -1.4244757890701294
    3. 'space' → logprob: -2.79947566986084
    4. '#' → logprob: -3.17447566986084
    5. '先' → logprob: -3.29947566986084
    6. '押' → logprob: -3.29947566986084
    7. '待' → logprob: -3.29947566986084
    8. 'park' → logprob: -3.54947566986084
    9. 'push' → logprob: -3.79947566986084
    10. 'top' → logprob: -3.79947566986084

Token 836: 'す' (ID: 4868)
  Prédit: 'す'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.05680463835597038
    2. 'し' → logprob: -4.181804656982422
    3. '```' → logprob: -4.181804656982422
    4. 'します' → logprob: -5.556804656982422
    5. 'して' → logprob: -5.681804656982422
    6. 'る' → logprob: -5.681804656982422
    7. '庫' → logprob: -5.931804656982422
    8. '発' → logprob: -5.931804656982422
    9. 'そう' → logprob: -6.681804656982422
    10. 'ます' → logprob: -7.056804656982422

Token 837: '時' (ID: 12131)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018736153841018677
    2. '           ' → logprob: -6.018736362457275
    3. ' space' → logprob: -6.268736362457275
    4. 'space' → logprob: -6.393736362457275
    5. '
' → logprob: -7.018736362457275
    6. '#' → logprob: -7.018736362457275
    7. ',' → logprob: -7.268736362457275
    8. '   ' → logprob: -7.518736362457275
    9. '              ' → logprob: -7.518736362457275
    10. ' car' → logprob: -7.581236362457275

Token 838: '、' (ID: 1395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38123929500579834
    2. 'す' → logprob: -2.006239414215088
    3. '           ' → logprob: -3.631239414215088
    4. 'します' → logprob: -4.381239414215088
    5. 'space' → logprob: -4.631239414215088
    6. ' space' → logprob: -4.756239414215088
    7. 'は' → logprob: -5.006239414215088
    8. 'ます' → logprob: -5.006239414215088
    9. 'して' → logprob: -5.131239414215088
    10. 'が' → logprob: -5.131239414215088

Token 839: '下' (ID: 3771)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7282909750938416
    2. '               ' → logprob: -1.8532910346984863
    3. 'if' → logprob: -2.1032910346984863
    4. 'space' → logprob: -2.1032910346984863
    5. 'new' → logprob: -3.4782910346984863
    6. 'self' → logprob: -4.728291034698486
    7. 'existing' → logprob: -4.853291034698486
    8. 'car' → logprob: -4.853291034698486
    9. 'the' → logprob: -5.353291034698486
    10. 'bottom' → logprob: -5.478291034698486

Token 840: '段' (ID: 27561)
  Prédit: '段'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '段' → logprob: -0.03775305673480034
    2. 'の' → logprob: -3.412753105163574
    3. 'car' → logprob: -6.662753105163574
    4. 'に' → logprob: -7.662753105163574
    5. '```' → logprob: -7.787753105163574
    6. 'は' → logprob: -7.912753105163574
    7. '側' → logprob: -8.537753105163574
    8. '\xe5\xb1' → logprob: -8.662753105163574
    9. '車' → logprob: -8.787753105163574
    10. 'を' → logprob: -8.912753105163574

Token 841: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.4454642534255981
    2. 'を' → logprob: -1.4454642534255981
    3. 'が' → logprob: -1.8204642534255981
    4. 'は' → logprob: -1.9454642534255981
    5. 'に' → logprob: -2.0704641342163086
    6. 'car' → logprob: -4.320464134216309
    7. '   ' → logprob: -4.570464134216309
    8. 'から' → logprob: -4.570464134216309
    9. 'へ' → logprob: -4.945464134216309
    10. 'も' → logprob: -5.445464134216309

Token 842: '車' (ID: 35939)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.38787466287612915
    2. ' car' → logprob: -2.6378746032714844
    3. 'space' → logprob: -2.7628746032714844
    4. '               ' → logprob: -3.6378746032714844
    5. '   ' → logprob: -4.262874603271484
    6. '車' → logprob: -4.262874603271484
    7. '           ' → logprob: -4.387874603271484
    8. 'が' → logprob: -4.637874603271484
    9. '空' → logprob: -4.762874603271484
    10. '下' → logprob: -4.762874603271484

Token 843: 'が' (ID: 6632)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -1.054052472114563
    2. 'が' → logprob: -1.554052472114563
    3. 'は' → logprob: -1.554052472114563
    4. ' is' → logprob: -2.0540523529052734
    5. 'bottom' → logprob: -4.304052352905273
    6. '=' → logprob: -4.429052352905273
    7. ' =' → logprob: -4.679052352905273
    8. 'の' → logprob: -5.054052352905273
    9. ' を' → logprob: -5.054052352905273
    10. 'に' → logprob: -5.179052352905273

Token 844: '先' (ID: 12231)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8918949365615845
    2. '先' → logprob: -1.7668949365615845
    3. 'す' → logprob: -2.891894817352295
    4. '空' → logprob: -3.391894817352295
    5. '出' → logprob: -3.641894817352295
    6. 'departure' → logprob: -3.641894817352295
    7. '移' → logprob: -3.891894817352295
    8. 'いる' → logprob: -4.141894817352295
    9. '```' → logprob: -4.516894817352295
    10. 'その' → logprob: -4.516894817352295

Token 845: 'に' (ID: 5280)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14662006497383118
    2. '<|end|>' → logprob: -2.646620035171509
    3. ')' → logprob: -4.396620273590088
    4. '<|end|>' → logprob: -4.521620273590088
    5. '                ' → logprob: -5.271620273590088
    6. '              ' → logprob: -5.771620273590088
    7. '=' → logprob: -6.021620273590088
    8. ' ' → logprob: -6.209120273590088
    9. ' is' → logprob: -6.396620273590088
    10. ' =' → logprob: -6.584120273590088

Token 846: '出' (ID: 6390)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24765218794345856
    2. 'space' → logprob: -2.872652292251587
    3. '#' → logprob: -3.247652292251587
    4. '下' → logprob: -4.122652053833008
    5. 'car' → logprob: -4.247652053833008
    6. ' space' → logprob: -4.372652053833008
    7. '上' → logprob: -4.872652053833008
    8. '           ' → logprob: -5.372652053833008
    9. 'if' → logprob: -5.497652053833008
    10. ' car' → logprob: -5.497652053833008

Token 847: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.08396550267934799
    2. '```' → logprob: -3.583965539932251
    3. 'され' → logprob: -4.083965301513672
    4. 'す' → logprob: -4.583965301513672
    5. 'て' → logprob: -4.583965301513672
    6. 'ます' → logprob: -5.083965301513672
    7. 'ら' → logprob: -5.958965301513672
    8. '発' → logprob: -6.083965301513672
    9. 'な' → logprob: -7.083965301513672
    10. 'ない' → logprob: -7.458965301513672

Token 848: '必要' (ID: 125586)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048345692455768585
    2. '#' → logprob: -4.423345565795898
    3. '
' → logprob: -4.798345565795898
    4. 'space' → logprob: -5.173345565795898
    5. 'existing' → logprob: -6.048345565795898
    6. 'car' → logprob: -6.298345565795898
    7. ' space' → logprob: -6.423345565795898
    8. 'if' → logprob: -6.423345565795898
    9. ' existing' → logprob: -6.423345565795898
    10. ' if' → logprob: -6.548345565795898

Token 849: 'が' (ID: 6632)
  Prédit: 'します'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'します' → logprob: -0.5465362071990967
    2. 'され' → logprob: -2.9215362071990967
    3. 'する' → logprob: -3.0465362071990967
    4. 'す' → logprob: -3.2965362071990967
    5. 'ます' → logprob: -3.2965362071990967
    6. ' ' → logprob: -3.4215362071990967
    7. '_' → logprob: -3.6715362071990967
    8. 'し' → logprob: -4.046536445617676
    9. '```' → logprob: -4.046536445617676
    10. '   ' → logprob: -4.296536445617676

Token 850: 'ある' (ID: 73977)
  Prédit: 'あります'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'あります' → logprob: -0.13731035590171814
    2. 'あり' → logprob: -2.762310266494751
    3. 'ある' → logprob: -3.512310266494751
    4. 'ります' → logprob: -4.13731050491333
    5. 'があります' → logprob: -5.51231050491333
    6. 'ありません' → logprob: -5.63731050491333
    7. 'す' → logprob: -5.63731050491333
    8. 'ます' → logprob: -6.01231050491333
    9. 'る' → logprob: -6.76231050491333
    10. 'ございます' → logprob: -7.51231050491333

Token 851: 'ので' (ID: 69719)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0073155430145561695
    2. '
' → logprob: -6.132315635681152
    3. '                
' → logprob: -7.007315635681152
    4. '#' → logprob: -7.382315635681152
    5. ' if' → logprob: -7.507315635681152
    6. '           ' → logprob: -8.007315635681152
    7. '       ' → logprob: -8.132315635681152
    8. '   ' → logprob: -8.382315635681152
    9. 'space' → logprob: -8.632315635681152
    10. ' car' → logprob: -8.757315635681152

Token 852: '上' (ID: 4286)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06288491189479828
    2. '#' → logprob: -3.18788480758667
    3. 'return' → logprob: -5.43788480758667
    4. 'existing' → logprob: -5.56288480758667
    5. '           ' → logprob: -6.18788480758667
    6. 'new' → logprob: -6.43788480758667
    7. 'space' → logprob: -6.81288480758667
    8. 'car' → logprob: -7.06288480758667
    9. '   ' → logprob: -7.31288480758667
    10. 'if' → logprob: -7.56288480758667

Token 853: '段' (ID: 27561)
  Prédit: '段'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '段' → logprob: -0.7684831619262695
    2. '           ' → logprob: -0.8934831619262695
    3. 'space' → logprob: -3.5184831619262695
    4. '   ' → logprob: -3.5184831619262695
    5. '               ' → logprob: -4.1434831619262695
    6. '下' → logprob: -5.0184831619262695
    7. '```' → logprob: -5.2684831619262695
    8. '　' → logprob: -5.8934831619262695
    9. ' ' → logprob: -5.8934831619262695
    10. 'は' → logprob: -6.1434831619262695

Token 854: 'の' (ID: 3385)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1993666887283325
    2. '           ' → logprob: -1.6993666887283325
    3. 'car' → logprob: -1.6993666887283325
    4. 'の' → logprob: -2.824366569519043
    5. '       ' → logprob: -3.449366569519043
    6. 'を' → logprob: -3.449366569519043
    7. ' car' → logprob: -3.574366569519043
    8. 'に' → logprob: -3.699366569519043
    9. 'は' → logprob: -3.824366569519043
    10. ' is' → logprob: -4.074366569519043

Token 855: '車' (ID: 35939)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.46423670649528503
    2. 'space' → logprob: -2.5892367362976074
    3. ' car' → logprob: -2.7142367362976074
    4. 'bottom' → logprob: -3.4642367362976074
    5. 'existing' → logprob: -3.5892367362976074
    6. '#' → logprob: -3.7142367362976074
    7. ' ' → logprob: -3.9642367362976074
    8. ' existing' → logprob: -4.089236736297607
    9. '空' → logprob: -4.214236736297607
    10. '下' → logprob: -4.589236736297607

Token 856: 'の' (ID: 3385)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03954727575182915
    2. '           ' → logprob: -5.789547443389893
    3. 'は' → logprob: -5.789547443389893
    4. 'を' → logprob: -5.789547443389893
    5. 'の' → logprob: -6.164547443389893
    6. 'す' → logprob: -6.289547443389893
    7. 'が' → logprob: -6.289547443389893
    8. '              ' → logprob: -6.414547443389893
    9. 'で' → logprob: -6.414547443389893
    10. '#' → logprob: -6.539547443389893

Token 857: '�' (ID: 51268)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -1.3040063381195068
    2. 'existing' → logprob: -1.4290063381195068
    3. 'space' → logprob: -2.054006338119507
    4. '#' → logprob: -2.179006338119507
    5. ' existing' → logprob: -2.679006338119507
    6. 'car' → logprob: -3.679006338119507
    7. '下' → logprob: -3.804006338119507
    8. ')' → logprob: -4.616506576538086
    9. ' bottom' → logprob: -4.804006576538086
    10. ' space' → logprob: -4.929006576538086

Token 858: '�' (ID: 238)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.6146934628486633
    2. 'bottom' → logprob: -2.7396934032440186
    3. 'existing' → logprob: -3.1146934032440186
    4. 'car' → logprob: -3.1146934032440186
    5. '#' → logprob: -3.4896934032440186
    6. 's' → logprob: -3.4896934032440186
    7. 'す' → logprob: -3.8646934032440186
    8. '下' → logprob: -4.239693641662598
    9. 'top' → logprob: -4.427193641662598
    10. 'def' → logprob: -4.614693641662598

Token 859: '車' (ID: 35939)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.131220817565918
    2. '#' → logprob: -2.256220817565918
    3. 'す' → logprob: -2.881220817565918
    4. 'existing' → logprob: -2.881220817565918
    5. 'car' → logprob: -3.631220817565918
    6. 'position' → logprob: -3.693720817565918
    7. 'departure' → logprob: -3.943720817565918
    8. 'park' → logprob: -3.943720817565918
    9. 'が' → logprob: -4.256220817565918
    10. '```' → logprob: -4.318720817565918

Token 860: '時間' (ID: 31402)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -1.1245152950286865
    2. 'は' → logprob: -1.2495152950286865
    3. 'が' → logprob: -1.3745152950286865
    4. '=' → logprob: -3.4995152950286865
    5. 'の' → logprob: -4.374515533447266
    6. 'is' → logprob: -4.374515533447266
    7. '```' → logprob: -4.749515533447266
    8. ' is' → logprob: -4.874515533447266
    9. 's' → logprob: -4.999515533447266
    10. 'す' → logprob: -5.249515533447266

Token 861: 'が' (ID: 6632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29228976368904114
    2. 'を' → logprob: -2.9172897338867188
    3. 'は' → logprob: -3.5422897338867188
    4. 'が' → logprob: -3.6672897338867188
    5. ' is' → logprob: -3.9172897338867188
    6. '=' → logprob: -4.292289733886719
    7. 'の' → logprob: -4.417289733886719
    8. ')' → logprob: -4.667289733886719
    9. '              ' → logprob: -5.167289733886719
    10. ' =' → logprob: -5.167289733886719

Token 862: '過' (ID: 49872)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.5705271363258362
    2. 'car' → logprob: -0.9455271363258362
    3. 'max' → logprob: -4.695527076721191
    4. 'departure' → logprob: -5.320527076721191
    5. '...' → logprob: -5.695527076721191
    6. '#' → logprob: -5.820527076721191
    7. ' car' → logprob: -6.070527076721191
    8. ' space' → logprob: -6.320527076721191
    9. '           ' → logprob: -6.695527076721191
    10. '       ' → logprob: -6.945527076721191

Token 863: 'ぎ' (ID: 81971)
  Prédit: 'ぎ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ぎ' → logprob: -0.0115394601598382
    2. 'ります' → logprob: -6.761539459228516
    3. 'る' → logprob: -6.886539459228516
    4. 'ん' → logprob: -7.011539459228516
    5. 'd' → logprob: -7.386539459228516
    6. '```' → logprob: -7.386539459228516
    7. '期' → logprob: -7.636539459228516
    8. 'car' → logprob: -7.886539459228516
    9. '#' → logprob: -8.011539459228516
    10. 'self' → logprob: -8.011539459228516

Token 864: 'ても' (ID: 193702)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'る' → logprob: -2.093770742416382
    2. 'space' → logprob: -2.218770742416382
    3. 'た' → logprob: -2.718770742416382
    4. 'て' → logprob: -2.718770742416382
    5. 'ら' → logprob: -2.843770742416382
    6. 'd' → logprob: -2.843770742416382
    7. 'す' → logprob: -2.968770742416382
    8. 'っ' → logprob: -2.968770742416382
    9. 'り' → logprob: -3.093770742416382
    10. '空' → logprob: -3.968770742416382

Token 865: '下' (ID: 3771)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11168806254863739
    2. '#' → logprob: -3.8616881370544434
    3. 'space' → logprob: -3.8616881370544434
    4. 'car' → logprob: -4.111688137054443
    5. ' car' → logprob: -4.486688137054443
    6. ' space' → logprob: -4.736688137054443
    7. 'new' → logprob: -5.986688137054443
    8. '           ' → logprob: -6.236688137054443
    9. 'None' → logprob: -6.861688137054443
    10. '                ' → logprob: -6.861688137054443

Token 866: '段' (ID: 27561)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.43569034337997437
    2. '段' → logprob: -1.8106904029846191
    3. '```' → logprob: -2.935690402984619
    4. '#' → logprob: -3.560690402984619
    5. 'None' → logprob: -4.185690402984619
    6. 'if' → logprob: -4.685690402984619
    7. '車' → logprob: -4.810690402984619
    8. 'は' → logprob: -4.810690402984619
    9. '程' → logprob: -5.185690402984619
    10. '   ' → logprob: -5.560690402984619

Token 867: 'の' (ID: 3385)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0718296766281128
    2. 'が' → logprob: -2.3218297958374023
    3. 'は' → logprob: -2.4468297958374023
    4. '               ' → logprob: -2.8218297958374023
    5. '           ' → logprob: -2.9468297958374023
    6. 'の' → logprob: -2.9468297958374023
    7. '先' → logprob: -3.3218297958374023
    8. 'に' → logprob: -3.4468297958374023
    9. '#' → logprob: -3.5718297958374023
    10. '```' → logprob: -3.8218297958374023

Token 868: '車' (ID: 35939)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.29265475273132324
    2. 'space' → logprob: -1.9176547527313232
    3. 'existing' → logprob: -3.5426547527313232
    4. 'departure' → logprob: -3.6676547527313232
    5. '#' → logprob: -4.042654991149902
    6. '車' → logprob: -5.417654991149902
    7. '```' → logprob: -5.917654991149902
    8. 'time' → logprob: -6.042654991149902
    9. 'arrival' → logprob: -6.230154991149902
    10. '先' → logprob: -6.292654991149902

Token 869: 'の' (ID: 3385)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5894989967346191
    2. 'が' → logprob: -1.5894989967346191
    3. 'は' → logprob: -1.8394989967346191
    4. 'を' → logprob: -2.214498996734619
    5. ' is' → logprob: -2.339498996734619
    6. '           ' → logprob: -3.839498996734619
    7. 'の' → logprob: -3.964498996734619
    8. 'と' → logprob: -3.964498996734619
    9. 'で' → logprob: -4.089498996734619
    10. 'に' → logprob: -4.089498996734619

Token 870: '持' (ID: 17592)
  Prédit: 'departure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'departure' → logprob: -0.43546703457832336
    2. 'park' → logprob: -2.310467004776001
    3. 'bottom' → logprob: -2.310467004776001
    4. 'car' → logprob: -3.310467004776001
    5. 'space' → logprob: -4.18546724319458
    6. 'arrival' → logprob: -4.31046724319458
    7. '出' → logprob: -4.56046724319458
    8. ' departure' → logprob: -4.93546724319458
    9. '下' → logprob: -5.18546724319458
    10. 'top' → logprob: -5.31046724319458

Token 871: 'ち' (ID: 15376)
  Prédit: 'つ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'つ' → logprob: -1.5507153272628784
    2. '車' → logprob: -1.5507153272628784
    3. '続' → logprob: -2.175715446472168
    4. 'た' → logprob: -2.925715446472168
    5. '発' → logprob: -3.175715446472168
    6. 'ち' → logprob: -3.550715446472168
    7. 'car' → logprob: -3.800715446472168
    8. 'departure' → logprob: -3.800715446472168
    9. '存' → logprob: -3.925715446472168
    10. '離' → logprob: -4.363215446472168

Token 872: '主' (ID: 7115)
  Prédit: 'ち'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ち' → logprob: -2.1278891563415527
    2. '車' → logprob: -2.1278891563415527
    3. 'departure' → logprob: -2.2528891563415527
    4. '離' → logprob: -2.5028891563415527
    5. 'つ' → logprob: -2.8778891563415527
    6. '続' → logprob: -3.1278891563415527
    7. '発' → logprob: -3.3778891563415527
    8. 'car' → logprob: -3.7528891563415527
    9. '\xe9\xa7' → logprob: -3.9403891563415527
    10. '在' → logprob: -4.190389156341553

Token 873: 'が' (ID: 6632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0787312984466553
    2. ' is' → logprob: -1.8287312984466553
    3. ')' → logprob: -2.0787312984466553
    4. '=' → logprob: -2.9537312984466553
    5. ' =' → logprob: -3.0787312984466553
    6. ' ' → logprob: -3.3287312984466553
    7. 'は' → logprob: -3.5787312984466553
    8. '           ' → logprob: -3.9537312984466553
    9. ' ' → logprob: -3.9537312984466553
    10. ' space' → logprob: -4.078731536865234

Token 874: '戻' (ID: 175677)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8646172285079956
    2. 'car' → logprob: -1.7396172285079956
    3. 'departure' → logprob: -2.364617347717285
    4. '#' → logprob: -3.739617347717285
    5. 'す' → logprob: -3.989617347717285
    6. '先' → logprob: -4.052117347717285
    7. 'います' → logprob: -4.239617347717285
    8. '```' → logprob: -4.239617347717285
    9. 'None' → logprob: -4.427117347717285
    10. '車' → logprob: -4.489617347717285

Token 875: 'って' (ID: 30677)
  Prédit: 'ら'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -1.0920662879943848
    2. 'って' → logprob: -1.4670662879943848
    3. 'る' → logprob: -1.7170662879943848
    4. 'っ' → logprob: -2.7170662879943848
    5. '車' → logprob: -3.2170662879943848
    6. 'れ' → logprob: -3.3420662879943848
    7. 'り' → logprob: -3.7170662879943848
    8. 'され' → logprob: -4.717066287994385
    9. '```' → logprob: -4.842066287994385
    10. 'return' → logprob: -4.842066287994385

Token 876: 'い' (ID: 3826)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'る' → logprob: -1.763994812965393
    2. 'ら' → logprob: -1.888994812965393
    3. 'bottom' → logprob: -2.1389946937561035
    4. 'car' → logprob: -2.2639946937561035
    5. 'り' → logprob: -3.0139946937561035
    6. '車' → logprob: -3.6389946937561035
    7. '#' → logprob: -3.6389946937561035
    8. '```' → logprob: -3.7639946937561035
    9. 'き' → logprob: -3.8889946937561035
    10. 'space' → logprob: -3.8889946937561035

Token 877: 'ない' (ID: 47592)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -1.6697285175323486
    2. 'ら' → logprob: -1.7947285175323486
    3. 'ない' → logprob: -2.1697285175323486
    4. 'い' → logprob: -2.5447285175323486
    5. 'て' → logprob: -2.9197285175323486
    6. 'いる' → logprob: -3.1697285175323486
    7. '```' → logprob: -3.7947285175323486
    8. 'って' → logprob: -3.9197285175323486
    9. 'た' → logprob: -3.9197285175323486
    10. '#' → logprob: -3.9197285175323486

Token 878: 'と' (ID: 5330)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03652365878224373
    2. 'space' → logprob: -4.536523818969727
    3. '#' → logprob: -4.786523818969727
    4. ' space' → logprob: -5.536523818969727
    5. 'existing' → logprob: -6.036523818969727
    6. 'car' → logprob: -6.036523818969727
    7. ' car' → logprob: -6.161523818969727
    8. ' existing' → logprob: -6.786523818969727
    9. ' #' → logprob: -7.411523818969727
    10. '           ' → logprob: -7.661523818969727

Token 879: '出' (ID: 6390)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45671069622039795
    2. '#' → logprob: -2.2067108154296875
    3. 'space' → logprob: -2.4567108154296875
    4. 'car' → logprob: -2.5817108154296875
    5. ' car' → logprob: -3.9567108154296875
    6. ' space' → logprob: -4.4567108154296875
    7. ' raise' → logprob: -4.5817108154296875
    8. 'raise' → logprob: -4.8317108154296875
    9. ' #' → logprob: -5.2067108154296875
    10. 'new' → logprob: -5.3317108154296875

Token 880: 'せ' (ID: 19280)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.3206374943256378
    2. 'せ' → logprob: -2.9456374645233154
    3. 'す' → logprob: -3.6956374645233154
    4. '#' → logprob: -3.9456374645233154
    5. ' space' → logprob: -4.1956377029418945
    6. 'る' → logprob: -4.4456377029418945
    7. 'ない' → logprob: -4.5706377029418945
    8. 'bottom' → logprob: -4.5706377029418945
    9. '```' → logprob: -4.6956377029418945
    10. '空' → logprob: -4.9456377029418945

Token 881: 'ない' (ID: 47592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08478580415248871
    2. '           ' → logprob: -3.9597856998443604
    3. 'す' → logprob: -5.4597859382629395
    4. 'され' → logprob: -5.8347859382629395
    5. '下' → logprob: -6.0847859382629395
    6. '上' → logprob: -6.0847859382629395
    7. '#' → logprob: -6.2097859382629395
    8. 'して' → logprob: -6.3347859382629395
    9. 'ら' → logprob: -6.3347859382629395
    10. '              ' → logprob: -6.4597859382629395

Token 882: '。
' (ID: 3414)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01965169608592987
    2. 'space' → logprob: -5.019651889801025
    3. 'existing' → logprob: -5.894651889801025
    4. 'car' → logprob: -6.019651889801025
    5. ' space' → logprob: -6.144651889801025
    6. '#' → logprob: -6.644651889801025
    7. ' existing' → logprob: -6.769651889801025
    8. ' car' → logprob: -7.144651889801025
    9. 'old' → logprob: -7.644651889801025
    10. 'new' → logprob: -7.769651889801025

Token 883: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017497921362519264
    2. 'space' → logprob: -7.3767499923706055
    3. 'car' → logprob: -7.7517499923706055
    4. '#' → logprob: -9.126749992370605
    5. '
' → logprob: -9.126749992370605
    6. '                
' → logprob: -9.251749992370605
    7. ' car' → logprob: -9.376749992370605
    8. ' space' → logprob: -9.626749992370605
    9. '           ' → logprob: -10.001749992370605
    10. 'self' → logprob: -10.751749992370605

Token 884: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27199026942253113
    2. ' space' → logprob: -3.0219902992248535
    3. 'space' → logprob: -3.2719902992248535
    4. '#' (adapté à ' #') → logprob: -3.3969902992248535
    5. ' existing' → logprob: -3.5219902992248535
    6. 'existing' → logprob: -3.8969902992248535
    7. ' #' → logprob: -4.1469902992248535
    8. ' old' → logprob: -4.3969902992248535
    9. 'old' → logprob: -4.5219902992248535
    10. ' car' → logprob: -4.8969902992248535

Token 885: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.940009355545044
    2. 'space' → logprob: -1.190009355545044
    3. 'existing' → logprob: -2.315009355545044
    4. '#' → logprob: -2.565009355545044
    5. ' space' → logprob: -2.940009355545044
    6. '           ' → logprob: -3.815009355545044
    7. 'old' → logprob: -4.065009117126465
    8. ' existing' → logprob: -4.440009117126465
    9. '       ' → logprob: -5.065009117126465
    10. ' #' → logprob: -5.565009117126465

Token 886: ' bottom' (ID: 8725)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7156020402908325
    2. 'space' → logprob: -1.3406020402908325
    3. '#' → logprob: -2.090601921081543
    4. ' space' → logprob: -3.215601921081543
    5. 'existing' → logprob: -3.215601921081543
    6. 'old' → logprob: -4.090601921081543
    7. '           ' → logprob: -5.465601921081543
    8. 'top' → logprob: -5.465601921081543
    9. ' existing' → logprob: -5.715601921081543
    10. ' #' → logprob: -5.715601921081543

Token 887: ' and' (ID: 326)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.6448866128921509
    2. '.' → logprob: -2.0198864936828613
    3. '_car' → logprob: -2.0198864936828613
    4. ' =' → logprob: -2.5198864936828613
    5. '.car' → logprob: -2.5198864936828613
    6. 'space' → logprob: -2.6448864936828613
    7. '=' → logprob: -3.0198864936828613
    8. '.bottom' → logprob: -3.0198864936828613
    9. '.space' → logprob: -3.0198864936828613
    10. 'bottom' → logprob: -3.1448864936828613

Token 888: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.27585747838020325
    2. ' top' → logprob: -2.025857448577881
    3. 'space' → logprob: -2.650857448577881
    4. ' space' → logprob: -4.275857448577881
    5. 'self' → logprob: -5.400857448577881
    6. 'return' → logprob: -5.525857448577881
    7. '
' → logprob: -6.025857448577881
    8. 'car' → logprob: -6.150857448577881
    9. ' the' → logprob: -6.650857448577881
    10. 'new' → logprob: -6.775857448577881

Token 889: ' clause' (ID: 45470)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024354271590709686
    2. '#' → logprob: -5.024354457855225
    3. ' existing' → logprob: -6.274354457855225
    4. '           ' → logprob: -6.399354457855225
    5. '   ' → logprob: -6.399354457855225
    6. '
' → logprob: -6.524354457855225
    7. 'space' → logprob: -6.524354457855225
    8. 'existing' → logprob: -6.524354457855225
    9. ' space' → logprob: -6.649354457855225
    10. 'top' → logprob: -7.274354457855225

Token 890: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28988519310951233
    2. 'existing' → logprob: -2.5398852825164795
    3. 'space' → logprob: -3.1648852825164795
    4. '#' → logprob: -3.4148852825164795
    5. ' existing' → logprob: -3.9148852825164795
    6. 'old' → logprob: -4.0398850440979
    7. ' space' → logprob: -4.2898850440979
    8. '   ' → logprob: -5.0398850440979
    9. '           ' → logprob: -5.1648850440979
    10. 'top' → logprob: -5.1648850440979

Token 891: ' as' (ID: 472)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02069089375436306
    2. '                   ' → logprob: -4.64569091796875
    3. '           ' → logprob: -6.14569091796875
    4. '                ' → logprob: -6.27069091796875
    5. '   ' → logprob: -6.64569091796875
    6. 'car' → logprob: -7.52069091796875
    7. 'space' → logprob: -7.64569091796875
    8. '       ' → logprob: -7.77069091796875
    9. ' car' → logprob: -7.89569091796875
    10. ' space' → logprob: -8.02069091796875

Token 892: ' described' (ID: 13394)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.676038920879364
    2. ' follows' → logprob: -0.926038920879364
    3. '           ' → logprob: -4.17603874206543
    4. '       ' → logprob: -4.30103874206543
    5. 'expected' → logprob: -4.42603874206543
    6. 'des' → logprob: -4.55103874206543
    7. 'follow' → logprob: -4.80103874206543
    8. 'space' → logprob: -4.92603874206543
    9. 'planned' → logprob: -5.05103874206543
    10. '```' → logprob: -5.17603874206543

Token 893: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008666796493344009
    2. '
' → logprob: -9.000866889953613
    3. '#' → logprob: -9.125866889953613
    4. ',' → logprob: -9.250866889953613
    5. '                
' → logprob: -9.250866889953613
    6. '           ' → logprob: -9.375866889953613
    7. '       ' → logprob: -9.625866889953613
    8. 'space' → logprob: -9.875866889953613
    9. '```' → logprob: -10.875866889953613
    10. '   ' → logprob: -11.000866889953613

Token 894: ' existing' (ID: 9595)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4413931369781494
    2. 'existing' → logprob: -2.1913931369781494
    3. ' existing' → logprob: -2.5663931369781494
    4. 'old' → logprob: -3.0663931369781494
    5. ' old' → logprob: -3.3163931369781494
    6. ' space' → logprob: -3.9413931369781494
    7. 'space' → logprob: -4.06639289855957
    8. '#' → logprob: -4.44139289855957
    9. 'top' → logprob: -4.69139289855957
    10. '           ' → logprob: -5.19139289855957

Token 895: ' bottom' (ID: 8725)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7251695394515991
    2. '.car' → logprob: -1.9751695394515991
    3. '.bottom' → logprob: -2.1001696586608887
    4. '_car' → logprob: -2.3501696586608887
    5. ' car' → logprob: -2.6001696586608887
    6. 'bottom' → logprob: -2.7251696586608887
    7. ' bottom' → logprob: -4.475169658660889
    8. '_bottom' → logprob: -6.475169658660889
    9. '車' → logprob: -7.225169658660889
    10. '
' → logprob: -7.350169658660889

Token 896: ' is' (ID: 382)
  Prédit: '.car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.3191521167755127
    2. '_car' → logprob: -2.6941521167755127
    3. '.' → logprob: -3.1941521167755127
    4. 'car' → logprob: -3.4441521167755127
    5. ' .' → logprob: -3.8191521167755127
    6. ' car' → logprob: -3.9441521167755127
    7. ' =' → logprob: -3.9441521167755127
    8. '.bottom' → logprob: -4.069151878356934
    9. ' is' → logprob: -5.194151878356934
    10. '車' → logprob: -5.194151878356934

Token 897: ' pushed' (ID: 31155)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5972952842712402
    2. 'p' → logprob: -1.5972952842712402
    3. ' moved' → logprob: -2.4722952842712402
    4. 'top' → logprob: -2.5972952842712402
    5. ' pushed' → logprob: -2.7222952842712402
    6. ' top' → logprob: -4.72229528427124
    7. 'space' → logprob: -4.72229528427124
    8. 'car' → logprob: -6.84729528427124
    9. ' space' → logprob: -7.47229528427124
    10. ' car' → logprob: -7.72229528427124

Token 898: ' up' (ID: 869)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1165950298309326
    2. ' up' → logprob: -1.4915950298309326
    3. 'to' → logprob: -1.6165950298309326
    4. 'up' → logprob: -1.8665950298309326
    5. '               ' → logprob: -3.2415950298309326
    6. 'down' → logprob: -4.116595268249512
    7. '           ' → logprob: -4.741595268249512
    8. '   ' → logprob: -5.116595268249512
    9. ' down' → logprob: -5.241595268249512
    10. 'top' → logprob: -5.491595268249512

Token 899: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017033906187862158
    2. '
' → logprob: -7.876703262329102
    3. ',' → logprob: -8.126703262329102
    4. 'space' → logprob: -8.751703262329102
    5. '                
' → logprob: -9.001703262329102
    6. '.' → logprob: -9.126703262329102
    7. '           ' → logprob: -9.501703262329102
    8. '#' → logprob: -9.501703262329102
    9. '                   ' → logprob: -9.626703262329102
    10. '			' → logprob: -10.001703262329102

Token 900: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9160394072532654
    2. 'car' → logprob: -1.6660394668579102
    3. 'space' → logprob: -2.04103946685791
    4. 'new' → logprob: -2.16603946685791
    5. ' space' → logprob: -2.91603946685791
    6. ' new' → logprob: -2.91603946685791
    7. ' car' → logprob: -3.16603946685791
    8. 'existing' → logprob: -5.16603946685791
    9. ' existing' → logprob: -5.54103946685791
    10. 'self' → logprob: -6.04103946685791

Token 901: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.18979564309120178
    2. ' car' → logprob: -1.8147956132888794
    3. '_car' → logprob: -5.06479549407959
    4. '```' → logprob: -6.68979549407959
    5. 'bottom' → logprob: -7.31479549407959
    6. '	car' → logprob: -7.31479549407959
    7. '車' → logprob: -8.31479549407959
    8. ' bottom' → logprob: -8.68979549407959
    9. ' ' → logprob: -9.18979549407959
    10. '车' → logprob: -9.18979549407959

Token 902: ' is' (ID: 382)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.6300938129425049
    2. '.bottom' → logprob: -1.5050938129425049
    3. 'bottom' → logprob: -1.5050938129425049
    4. ' is' → logprob: -4.255093574523926
    5. ' goes' → logprob: -5.505093574523926
    6. ' at' → logprob: -6.755093574523926
    7. ' becomes' → logprob: -7.255093574523926
    8. '_bottom' → logprob: -7.380093574523926
    9. '(bottom' → logprob: -8.130093574523926
    10. ' sits' → logprob: -8.255093574523926

Token 903: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.055636025965213776
    2. ' bottom' → logprob: -2.930635929107666
    3. '0' → logprob: -9.305636405944824
    4. ' ' → logprob: -9.430636405944824
    5. 'space' → logprob: -9.555636405944824
    6. '_bottom' → logprob: -9.805636405944824
    7. 'car' → logprob: -9.805636405944824
    8. ' at' → logprob: -9.930636405944824
    9. 'placed' → logprob: -10.055636405944824
    10. '```' → logprob: -10.180636405944824

Token 904: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012251086300238967
    2. '                
' → logprob: -7.126224994659424
    3. '
' → logprob: -9.001225471496582
    4. ',' → logprob: -10.376225471496582
    5. '           ' → logprob: -10.626225471496582
    6. '.' → logprob: -10.876225471496582
    7. '```' → logprob: -10.876225471496582
    8. '			' → logprob: -11.126225471496582
    9. '       ' → logprob: -11.126225471496582
    10. '    
' → logprob: -11.251225471496582

Token 905: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005530327325686812
    2. 'space' → logprob: -9.000553131103516
    3. '                
' → logprob: -9.375553131103516
    4. 'existing' → logprob: -9.500553131103516
    5. ' space' → logprob: -10.125553131103516
    6. ' existing' → logprob: -10.125553131103516
    7. '
' → logprob: -10.500553131103516
    8. 'old' → logprob: -10.625553131103516
    9. '			' → logprob: -10.875553131103516
    10. '           ' → logprob: -11.125553131103516

Token 906: ' old' (ID: 2890)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.8590998649597168
    2. 'old' (adapté à ' old') → logprob: -1.6090998649597168
    3. 'existing' → logprob: -1.7340998649597168
    4. ' top' → logprob: -2.859099864959717
    5. ' old' → logprob: -3.359099864959717
    6. '               ' → logprob: -3.359099864959717
    7. 'space' → logprob: -3.859099864959717
    8. ' existing' → logprob: -3.859099864959717
    9. 'prev' → logprob: -5.109099864959717
    10. ' space' → logprob: -5.234099864959717

Token 907: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.004951712675392628
    2. 'car' → logprob: -5.879951477050781
    3. ' =' → logprob: -6.629951477050781
    4. '_bottom' → logprob: -7.629951477050781
    5. '=' → logprob: -8.254951477050781
    6. 'bottom' → logprob: -10.504951477050781
    7. '_c' → logprob: -10.504951477050781
    8. 'Car' → logprob: -11.129951477050781
    9. '	car' → logprob: -13.504951477050781
    10. ' car' → logprob: -13.754951477050781

Token 908: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871435225009918
    2. '=' → logprob: -1.1371434926986694
    3. ',' → logprob: -8.3871431350708
    4. '   ' → logprob: -11.8871431350708
    5. '.space' → logprob: -11.8871431350708
    6. '    ' → logprob: -12.2621431350708
    7. '.top' → logprob: -12.5121431350708
    8. '.bottom' → logprob: -12.6371431350708
    9. '        ' → logprob: -13.2621431350708
    10. '_space' → logprob: -13.3871431350708

Token 909: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.001327499165199697
    2. ' space' → logprob: -6.6263275146484375
    3. 'car' → logprob: -15.126327514648438
    4. '           ' → logprob: -15.126327514648438
    5. '   ' → logprob: -15.251327514648438
    6. '(space' → logprob: -15.751327514648438
    7. '               ' → logprob: -15.876327514648438
    8. '                   ' → logprob: -16.376327514648438
    9. 'spacing' → logprob: -17.001327514648438
    10. ' ' → logprob: -17.126327514648438

Token 910: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -4.008129963040119e-06
    2. 'bottom' → logprob: -12.750003814697266
    3. '.' → logprob: -14.875003814697266
    4. ' .' → logprob: -15.625003814697266
    5. ' bottom' → logprob: -16.250003814697266
    6. '.Bottom' → logprob: -16.250003814697266
    7. '.top' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.750003814697266
    9. '           ' → logprob: -16.750003814697266
    10. '```' → logprob: -17.250003814697266

Token 911: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00418761745095253
    2. 'space' → logprob: -5.75418758392334
    3. '                
' → logprob: -8.00418758392334
    4. 'old' → logprob: -8.12918758392334
    5. ' space' → logprob: -8.62918758392334
    6. '
' → logprob: -9.87918758392334
    7. ',' → logprob: -10.37918758392334
    8. '			' → logprob: -11.00418758392334
    9. ' old' → logprob: -11.25418758392334
    10. '           ' → logprob: -11.50418758392334

Token 912: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016563729150220752
    2. 'space' → logprob: -8.875165939331055
    3. ' space' → logprob: -11.125165939331055
    4. '                
' → logprob: -12.875165939331055
    5. '           ' → logprob: -13.000165939331055
    6. '                   ' → logprob: -13.750165939331055
    7. '			' → logprob: -14.125165939331055
    8. 'old' → logprob: -14.375165939331055
    9. '              ' → logprob: -14.375165939331055
    10. '                ' → logprob: -14.625165939331055

Token 913: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.011692166328430176
    2. ' space' → logprob: -5.011692047119141
    3. '               ' → logprob: -5.886692047119141
    4. 'old' → logprob: -6.136692047119141
    5. ' old' → logprob: -11.13669204711914
    6. '                ' → logprob: -13.38669204711914
    7. 'self' → logprob: -13.51169204711914
    8. '                   ' → logprob: -13.51169204711914
    9. '```' → logprob: -13.51169204711914
    10. '(space' → logprob: -14.01169204711914

Token 914: '.top' (ID: 16801)
  Prédit: '.bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -4.9186317482963204e-05
    2. '.top' → logprob: -10.375049591064453
    3. 'bottom' → logprob: -11.500049591064453
    4. '.' → logprob: -12.125049591064453
    5. ' .' → logprob: -13.875049591064453
    6. ' bottom' → logprob: -14.000049591064453
    7. '```' → logprob: -15.625049591064453
    8. '.Bottom' → logprob: -16.750049591064453
    9. '   ' → logprob: -17.000049591064453
    10. '.empty' → logprob: -17.250049591064453

Token 915: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889033854007721
    2. ' =' → logprob: -2.578890323638916
    3. '＝' → logprob: -14.703890800476074
    4. '=None' → logprob: -15.953890800476074
    5. '=
' → logprob: -17.203889846801758
    6. '.' → logprob: -17.953889846801758
    7. ' ' → logprob: -18.328889846801758
    8. ',' → logprob: -18.828889846801758
    9. '=end' → logprob: -19.203889846801758
    10. '.=' → logprob: -19.453889846801758

Token 916: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -3.547789674485102e-05
    2. ' old' → logprob: -10.250035285949707
    3. '	old' → logprob: -18.250036239624023
    4. 'space' → logprob: -19.000036239624023
    5. '(old' → logprob: -19.750036239624023
    6. '_old' → logprob: -19.875036239624023
    7. 'older' → logprob: -20.125036239624023
    8. '               ' → logprob: -21.125036239624023
    9. '.old' → logprob: -21.500036239624023
    10. '           ' → logprob: -21.750036239624023

Token 917: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -7.584239938296378e-06
    2. 'car' → logprob: -12.000007629394531
    3. '_c' → logprob: -13.750007629394531
    4. 'Car' → logprob: -16.25000762939453
    5. '	car' → logprob: -16.25000762939453
    6. '_' → logprob: -17.25000762939453
    7. 'ocar' → logprob: -17.75000762939453
    8. '.car' → logprob: -18.50000762939453
    9. '(car' → logprob: -19.00000762939453
    10. '_cart' → logprob: -19.00000762939453

Token 918: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008481022086925805
    2. '<|end|>' → logprob: -7.875848293304443
    3. 'space' → logprob: -8.125847816467285
    4. '           ' → logprob: -10.125847816467285
    5. '                
' → logprob: -10.625847816467285
    6. ' space' → logprob: -10.750847816467285
    7. '
' → logprob: -10.875847816467285
    8. '                ' → logprob: -11.125847816467285
    9. '       ' → logprob: -11.500847816467285
    10. '(space' → logprob: -11.875847816467285

Token 919: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03616442531347275
    2. 'space' → logprob: -3.9111645221710205
    3. '                
' → logprob: -4.661164283752441
    4. '<|end|>' → logprob: -6.286164283752441
    5. '
' → logprob: -7.286164283752441
    6. '(space' → logprob: -7.411164283752441
    7. '  
' → logprob: -7.661164283752441
    8. ' space' → logprob: -7.661164283752441
    9. ' 
' → logprob: -7.661164283752441
    10. '                ' → logprob: -7.786164283752441

Token 920: ' old' (ID: 2890)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.03858667612075806
    2. '               ' → logprob: -3.4135866165161133
    3. ' space' → logprob: -5.413586616516113
    4. 'old' (adapté à ' old') → logprob: -7.788586616516113
    5. 'car' → logprob: -10.038586616516113
    6. '                ' → logprob: -12.663586616516113
    7. '```' → logprob: -13.163586616516113
    8. ' old' → logprob: -13.288586616516113
    9. ' car' → logprob: -13.413586616516113
    10. '           ' → logprob: -13.663586616516113

Token 921: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -4.5252596464706585e-05
    2. 'car' → logprob: -10.375044822692871
    3. 'Car' → logprob: -12.125044822692871
    4. '_' → logprob: -12.625044822692871
    5. '_c' → logprob: -12.750044822692871
    6. '_space' → logprob: -14.250044822692871
    7. '.car' → logprob: -14.625044822692871
    8. '	car' → logprob: -14.750044822692871
    9. '._' → logprob: -15.500044822692871
    10. '```' → logprob: -16.000045776367188

Token 922: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0028759613633155823
    2. '.wait' → logprob: -5.877875804901123
    3. '}.' → logprob: -11.002876281738281
    4. ',' → logprob: -11.752876281738281
    5. '.car' → logprob: -11.752876281738281
    6. ' .' → logprob: -12.002876281738281
    7. '```' → logprob: -12.377876281738281
    8. 'wait' → logprob: -12.377876281738281
    9. ').' → logprob: -12.502876281738281
    10. '\.' → logprob: -13.002876281738281

Token 923: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.0010331686353310943
    2. 'wait' → logprob: -7.001033306121826
    3. 'waiting' → logprob: -9.126032829284668
    4. 'parking' → logprob: -11.626032829284668
    5. '```' → logprob: -14.001032829284668
    6. 'pack' → logprob: -14.126032829284668
    7. 'car' → logprob: -14.876032829284668
    8. 'par' → logprob: -15.376032829284668
    9. '_wait' → logprob: -15.626032829284668
    10. 'departure' → logprob: -15.751032829284668

Token 924: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -3.7697225252486533e-06
    2. 'Position' → logprob: -12.625003814697266
    3. 'position' → logprob: -15.500003814697266
    4. '           ' → logprob: -17.000003814697266
    5. '               ' → logprob: -17.750003814697266
    6. '_POSITION' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.250003814697266
    8. 'osition' → logprob: -18.250003814697266
    9. '                   ' → logprob: -18.375003814697266
    10. '       ' → logprob: -18.750003814697266

Token 925: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048590321093797684
    2. ' =' → logprob: -3.0485904216766357
    3. '=(' → logprob: -13.173590660095215
    4. '=None' → logprob: -14.298590660095215
    5. '[' → logprob: -16.9235897064209
    6. ' =(' → logprob: -16.9235897064209
    7. ',' → logprob: -16.9235897064209
    8. ')' → logprob: -17.0485897064209
    9. '＝' → logprob: -17.0485897064209
    10. '(' → logprob: -17.2985897064209

Token 926: ' (' (ID: 350)
  Prédit: '(space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -1.747814349073451e-05
    2. ' (' → logprob: -11.000017166137695
    3. '(' → logprob: -14.250017166137695
    4. '(slot' → logprob: -18.500017166137695
    5. '(sp' → logprob: -18.750017166137695
    6. '(span' → logprob: -19.000017166137695
    7. '(position' → logprob: -19.125017166137695
    8. '   ' → logprob: -19.125017166137695
    9. '(time' → logprob: -19.500017166137695
    10. '(solution' → logprob: -19.500017166137695

Token 927: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -7.97024549683556e-05
    2. '(space' → logprob: -9.500080108642578
    3. ' space' → logprob: -12.250080108642578
    4. 'spaces' → logprob: -20.000080108642578
    5. 'sp' → logprob: -21.875080108642578
    6. '(' → logprob: -22.000080108642578
    7. 'spacing' → logprob: -22.250080108642578
    8. ' (' → logprob: -22.750080108642578
    9. '_space' → logprob: -23.000080108642578
    10. 'self' → logprob: -23.125080108642578

Token 928: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0004125575942452997
    2. 'index' → logprob: -8.125412940979004
    3. '.space' → logprob: -9.750412940979004
    4. '.' → logprob: -10.500412940979004
    5. ' .' → logprob: -11.250412940979004
    6. '.top' → logprob: -12.125412940979004
    7. '.bottom' → logprob: -12.125412940979004
    8. '.position' → logprob: -12.750412940979004
    9. ' index' → logprob: -14.000412940979004
    10. '1' → logprob: -14.750412940979004

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ',
' → logprob: -13.500001907348633
    3. ' ,' → logprob: -15.250001907348633
    4. '1' → logprob: -15.375001907348633
    5. '‌,' → logprob: -16.250001907348633
    6. '`,' → logprob: -16.750001907348633
    7. '',' → logprob: -17.500001907348633
    8. '2' → logprob: -18.375001907348633
    9. '",' → logprob: -19.125001907348633
    10. ',\
' → logprob: -19.125001907348633

Token 930: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '```' → logprob: -19.375
    5. '       ' → logprob: -20.25
    6. '  ' → logprob: -21.125
    7. '`' → logprob: -21.75
    8. '           ' → logprob: -21.875
    9. '۱' → logprob: -22.0
    10. '0' → logprob: -22.0625

Token 931: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '   ' → logprob: -20.25
    4. '0' → logprob: -20.5
    5. '```' → logprob: -21.875
    6. '۱' → logprob: -22.5
    7. 'top' → logprob: -23.5625
    8. '`' → logprob: -23.8125
    9. '１' → logprob: -23.875
    10. '[' → logprob: -24.0

Token 932: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3872109353542328
    2. ')
' → logprob: -1.1372109651565552
    3. '               ' → logprob: -8.137210845947266
    4. '       ' → logprob: -11.137210845947266
    5. ')
' → logprob: -11.387210845947266
    6. '           ' → logprob: -11.762210845947266
    7. ')

' → logprob: -11.762210845947266
    8. '   ' → logprob: -13.637210845947266
    9. ')set' → logprob: -14.762210845947266
    10. '                   ' → logprob: -14.762210845947266

Token 933: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032521432149223983
    2. '                
' → logprob: -9.375325202941895
    3. '<|end|>' → logprob: -9.500325202941895
    4. '```' → logprob: -10.125325202941895
    5. 'space' → logprob: -10.250325202941895
    6. '                ' → logprob: -10.250325202941895
    7. '           ' → logprob: -11.375325202941895
    8. ' space' → logprob: -11.750325202941895
    9. '(space' → logprob: -11.750325202941895
    10. '              ' → logprob: -12.000325202941895

Token 934: ' space' (ID: 4918)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021380649879574776
    2. 'space' (adapté à ' space') → logprob: -3.896380662918091
    3. ' space' → logprob: -7.396380424499512
    4. '                ' → logprob: -9.396380424499512
    5. '                
' → logprob: -9.896380424499512
    6. '```' → logprob: -10.521380424499512
    7. '              ' → logprob: -11.021380424499512
    8. '			' → logprob: -11.646380424499512
    9. '(space' → logprob: -11.771380424499512
    10. '       ' → logprob: -11.771380424499512

Token 935: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.00014859484508633614
    2. 'bottom' → logprob: -9.00014877319336
    3. '.' → logprob: -11.25014877319336
    4. ' bottom' → logprob: -12.25014877319336
    5. '```' → logprob: -12.50014877319336
    6. '           ' → logprob: -13.87514877319336
    7. ' .' → logprob: -14.12514877319336
    8. '底' → logprob: -15.00014877319336
    9. '       ' → logprob: -15.25014877319336
    10. '_bottom' → logprob: -15.25014877319336

Token 936: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687169551849365
    2. ' =' → logprob: -1.1368716955184937
    3. '＝' → logprob: -15.261871337890625
    4. '=None' → logprob: -16.011871337890625
    5. '=
' → logprob: -16.386871337890625
    6. ' ' → logprob: -17.136871337890625
    7. ')' → logprob: -17.136871337890625
    8. '=cut' → logprob: -17.136871337890625
    9. '.' → logprob: -17.386871337890625
    10. ' =
' → logprob: -17.761871337890625

Token 937: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: 0.0
    2. ' car' → logprob: -17.5
    3. '   ' → logprob: -22.75
    4. 'card' → logprob: -23.25
    5. 'ca' → logprob: -23.625
    6. '	car' → logprob: -23.625
    7. 'c' → logprob: -24.625
    8. 'Car' → logprob: -25.0
    9. 'cart' → logprob: -25.25
    10. 'cat' → logprob: -26.0

Token 938: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006596001796424389
    2. '           ' → logprob: -5.381596088409424
    3. '<|end|>' → logprob: -7.256596088409424
    4. '
' → logprob: -7.756596088409424
    5. 'car' → logprob: -8.256595611572266
    6. '       ' → logprob: -8.756595611572266
    7. '                
' → logprob: -9.631595611572266
    8. '                   ' → logprob: -9.756595611572266
    9. '              ' → logprob: -9.756595611572266
    10. '                ' → logprob: -9.756595611572266

Token 939: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01659330725669861
    2. 'car' → logprob: -4.1415934562683105
    3. '       ' → logprob: -8.141592979431152
    4. '           ' → logprob: -8.641592979431152
    5. ' car' → logprob: -9.641592979431152
    6. '	car' → logprob: -12.016592979431152
    7. '   ' → logprob: -12.141592979431152
    8. '<|end|>' → logprob: -12.266592979431152
    9. '```' → logprob: -12.641592979431152
    10. '
' → logprob: -13.016592979431152

Token 940: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -1.8624639324116288e-06
    2. ' car' → logprob: -13.250001907348633
    3. '               ' → logprob: -17.875001907348633
    4. '	car' → logprob: -18.750001907348633
    5. '(car' → logprob: -19.500001907348633
    6. '```' → logprob: -22.000001907348633
    7. 'card' → logprob: -22.125001907348633
    8. 'Car' → logprob: -22.125001907348633
    9. '_car' → logprob: -22.250001907348633
    10. '.car' → logprob: -22.500001907348633

Token 941: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.127333340875339e-06
    2. ' .' → logprob: -12.625003814697266
    3. '```' → logprob: -15.250003814697266
    4. '.car' → logprob: -16.250003814697266
    5. '`.' → logprob: -16.250003814697266
    6. '​.' → logprob: -16.500003814697266
    7. '\.' → logprob: -16.500003814697266
    8. '   ' → logprob: -17.250003814697266
    9. '.par' → logprob: -17.500003814697266
    10. ').' → logprob: -17.625003814697266

Token 942: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: 0.0
    2. ' park' → logprob: -17.5
    3. 'par' → logprob: -17.75
    4. 'car' → logprob: -18.0
    5. 'Park' → logprob: -18.75
    6. 'parking' → logprob: -19.0
    7. '   ' → logprob: -19.125
    8. 'pack' → logprob: -19.125
    9. '```' → logprob: -20.25
    10. 'plant' → logprob: -20.25

Token 943: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -1.1472419600977446e-06
    2. 'Position' → logprob: -14.375000953674316
    3. '_' → logprob: -16.375001907348633
    4. ' _' → logprob: -16.625001907348633
    5. '_POSITION' → logprob: -16.625001907348633
    6. 'position' → logprob: -17.125001907348633
    7. '```' → logprob: -17.375001907348633
    8. '_positions' → logprob: -17.625001907348633
    9. '_Position' → logprob: -17.625001907348633
    10. 'osition' → logprob: -18.750001907348633

Token 944: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740777611732483
    2. ' =' → logprob: -0.9740777611732483
    3. '=(' → logprob: -14.599078178405762
    4. '(space' → logprob: -15.724078178405762
    5. ' =(' → logprob: -15.974078178405762
    6. '(' → logprob: -18.224077224731445
    7. '＝' → logprob: -18.474077224731445
    8. ' (' → logprob: -18.474077224731445
    9. ' ' → logprob: -18.724077224731445
    10. ')' → logprob: -19.849077224731445

Token 945: ' (' (ID: 350)
  Prédit: '(space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -0.048587486147880554
    2. ' (' → logprob: -3.0485875606536865
    3. '(' → logprob: -16.548587799072266
    4. '(scope' → logprob: -17.548587799072266
    5. '(slot' → logprob: -18.423587799072266
    6. '(S' → logprob: -18.423587799072266
    7. ' ' → logprob: -18.548587799072266
    8. '(room' → logprob: -18.798587799072266
    9. '(sp' → logprob: -18.923587799072266
    10. '(f' → logprob: -18.923587799072266

Token 946: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0004474732850212604
    2. '(space' → logprob: -7.7504472732543945
    3. ' space' → logprob: -11.000447273254395
    4. ' (' → logprob: -18.87544822692871
    5. 'spaces' → logprob: -18.87544822692871
    6. 'pace' → logprob: -19.87544822692871
    7. '.space' → logprob: -20.12544822692871
    8. 'Space' → logprob: -20.12544822692871
    9. '_space' → logprob: -20.37544822692871
    10. 'SPACE' → logprob: -21.25044822692871

Token 947: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -3.4121114822482923e-06
    2. '(index' → logprob: -13.500003814697266
    3. ' .' → logprob: -14.125003814697266
    4. '.' → logprob: -15.000003814697266
    5. 'index' → logprob: -15.000003814697266
    6. '/index' → logprob: -16.000003814697266
    7. ''.' → logprob: -16.000003814697266
    8. ',index' → logprob: -16.500003814697266
    9. '#index' → logprob: -16.875003814697266
    10. '".' → logprob: -17.000003814697266

Token 948: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.182190554682165e-05
    2. ' ,' → logprob: -9.750061988830566
    3. '0' → logprob: -13.000061988830566
    4. ',
' → logprob: -14.625061988830566
    5. ' ' → logprob: -15.125061988830566
    6. '',' → logprob: -15.250061988830566
    7. '`,' → logprob: -15.875061988830566
    8. '",' → logprob: -17.25006103515625
    9. '1' → logprob: -17.25006103515625
    10. '‌,' → logprob: -18.00006103515625

Token 949: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -15.886048316955566
    4. '1' → logprob: -16.63604736328125
    5. '```' → logprob: -17.63604736328125
    6. ')' → logprob: -18.51104736328125
    7. ' ' → logprob: -18.69854736328125
    8. ' 
' → logprob: -18.88604736328125
    9. '`' → logprob: -18.88604736328125
    10. '2' → logprob: -18.94854736328125

Token 950: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '1' → logprob: -18.812501907348633
    5. '```' → logprob: -19.312501907348633
    6. '۰' → logprob: -20.125001907348633
    7. ',' → logprob: -20.187501907348633
    8. ')' → logprob: -20.250001907348633
    9. 'def' → logprob: -20.437501907348633
    10. '[' → logprob: -20.812501907348633

Token 951: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019330393988639116
    2. ')
' → logprob: -6.2519330978393555
    3. ')return' → logprob: -13.501933097839355
    4. '<|end|>' → logprob: -13.626933097839355
    5. '       ' → logprob: -14.001933097839355
    6. ' )' → logprob: -14.876933097839355
    7. ')

' → logprob: -15.376933097839355
    8. ')
' → logprob: -16.62693214416504
    9. ')#' → logprob: -16.75193214416504
    10. '),' → logprob: -16.75193214416504

Token 952: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 953: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 954: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0485982745885849
    2. ' space' → logprob: -3.048598289489746
    3. '(space' → logprob: -11.673598289489746
    4. '           ' → logprob: -14.173598289489746
    5. '        ' → logprob: -15.048598289489746
    6. 'self' → logprob: -15.298598289489746
    7. ' ' → logprob: -15.423598289489746
    8. '   ' → logprob: -15.548598289489746
    9. '    ' → logprob: -15.548598289489746
    10. '            ' → logprob: -16.29859733581543

Token 955: '.top' (ID: 16801)
  Prédit: '.bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.42887046933174133
    2. '.top' → logprob: -1.053870439529419
    3. '.is' → logprob: -9.80387020111084
    4. '.' → logprob: -10.05387020111084
    5. 'bottom' → logprob: -10.30387020111084
    6. '.has' → logprob: -11.42887020111084
    7. 'top' → logprob: -12.17887020111084
    8. '   ' → logprob: -12.17887020111084
    9. '```' → logprob: -13.42887020111084
    10. ' bottom' → logprob: -13.55387020111084

Token 956: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07889441400766373
    2. 'is' → logprob: -2.5788943767547607
    3. '==' → logprob: -13.70389461517334
    4. 'None' → logprob: -14.45389461517334
    5. '=None' → logprob: -14.57889461517334
    6. '[' → logprob: -14.95389461517334
    7. '
' → logprob: -15.07889461517334
    8. '```' → logprob: -15.07889461517334
    9. ' ' → logprob: -15.45389461517334
    10. ' None' → logprob: -15.57889461517334

Token 957: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000645360560156405
    2. ' None' → logprob: -7.875645160675049
    3. 'not' → logprob: -8.250645637512207
    4. ' not' → logprob: -13.375645637512207
    5. 'Not' → logprob: -14.125645637512207
    6. 'none' → logprob: -14.250645637512207
    7. '   ' → logprob: -14.500645637512207
    8. '(None' → logprob: -15.375645637512207
    9. '_None' → logprob: -15.750645637512207
    10. '0' → logprob: -15.750645637512207

Token 958: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002614550176076591
    2. ' None' → logprob: -8.250261306762695
    3. 'none' → logprob: -16.500261306762695
    4. 'not' → logprob: -16.875261306762695
    5. '_None' → logprob: -16.875261306762695
    6. '=None' → logprob: -16.875261306762695
    7. '(None' → logprob: -17.500261306762695
    8. '0' → logprob: -18.500261306762695
    9. '   ' → logprob: -18.500261306762695
    10. '_none' → logprob: -19.000261306762695

Token 959: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16278360784053802
    2. 'and' → logprob: -1.9127836227416992
    3. '           ' → logprob: -6.787783622741699
    4. ':
' → logprob: -7.037783622741699
    5. '               ' → logprob: -7.912783622741699
    6. ':' → logprob: -9.1627836227417
    7. '            ' → logprob: -10.4127836227417
    8. ' is' → logprob: -11.1627836227417
    9. '<|end|>' → logprob: -11.7877836227417
    10. ',' → logprob: -11.9127836227417

Token 960: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.024355895817279816
    2. 'False' → logprob: -4.274355888366699
    3. ' space' → logprob: -4.649355888366699
    4. ' False' → logprob: -7.524355888366699
    5. '           ' → logprob: -10.7743558883667
    6. 'car' → logprob: -13.0243558883667
    7. 'None' → logprob: -13.1493558883667
    8. '       ' → logprob: -13.3993558883667
    9. '   ' → logprob: -13.7743558883667
    10. '         ' → logprob: -14.1493558883667

Token 961: '.bottom' (ID: 35613)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.16028475761413574
    2. ' is' → logprob: -1.9102847576141357
    3. '.is' → logprob: -10.785284996032715
    4. ' ' → logprob: -11.410284996032715
    5. '	is' → logprob: -12.160284996032715
    6. '.' → logprob: -12.285284996032715
    7. 'None' → logprob: -12.285284996032715
    8. '[' → logprob: -13.160284996032715
    9. '_is' → logprob: -13.535284996032715
    10. '#' → logprob: -13.535284996032715

Token 962: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.023278210312128067
    2. 'is' → logprob: -3.77327823638916
    3. '==' → logprob: -11.64827823638916
    4. '=None' → logprob: -12.02327823638916
    5. 'None' → logprob: -12.52327823638916
    6. '<|end|>' → logprob: -12.52327823638916
    7. '<|end|>' → logprob: -12.89827823638916
    8. '	is' → logprob: -13.77327823638916
    9. ' ' → logprob: -13.89827823638916
    10. ')' → logprob: -13.89827823638916

Token 963: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0035555274225771427
    2. ' None' → logprob: -6.1285552978515625
    3. 'not' → logprob: -6.6285552978515625
    4. ' not' → logprob: -10.128555297851562
    5. 'Not' → logprob: -12.628555297851562
    6. 'none' → logprob: -12.878555297851562
    7. '_None' → logprob: -14.503555297851562
    8. '(None' → logprob: -14.753555297851562
    9. '=None' → logprob: -15.253555297851562
    10. '   ' → logprob: -15.253555297851562

Token 964: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09801085293292999
    2. '               ' → logprob: -2.598010778427124
    3. ':' → logprob: -3.973010778427124
    4. '):
' → logprob: -9.723011016845703
    5. '           ' → logprob: -10.598011016845703
    6. ' :
' → logprob: -11.098011016845703
    7. '():
' → logprob: -12.348011016845703
    8. ':

' → logprob: -12.473011016845703
    9. ',' → logprob: -12.473011016845703
    10. ' and' → logprob: -12.848011016845703

Token 965: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016084164381027222
    2. '			' → logprob: -7.626608371734619
    3. ' ' → logprob: -8.501608848571777
    4. '	           ' → logprob: -8.501608848571777
    5. '(space' → logprob: -8.751608848571777
    6. '                
' → logprob: -9.126608848571777
    7. ' space' → logprob: -9.501608848571777
    8. '                ' → logprob: -9.751608848571777
    9. '		       ' → logprob: -9.751608848571777
    10. 'space' → logprob: -10.376608848571777

Token 966: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25237950682640076
    2. 'space' → logprob: -1.5023795366287231
    3. ' space' → logprob: -8.127379417419434
    4. '           ' → logprob: -9.627379417419434
    5. '   ' → logprob: -10.002379417419434
    6. '#' (adapté à ' #') → logprob: -10.877379417419434
    7. '```' → logprob: -11.377379417419434
    8. '                   ' → logprob: -12.627379417419434
    9. '              ' → logprob: -12.627379417419434
    10. '       ' → logprob: -13.377379417419434

Token 967: ' Should' (ID: 18057)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.1368352472782135
    2. '               ' → logprob: -2.1368353366851807
    3. 'old' → logprob: -5.511835098266602
    4. '#' → logprob: -5.511835098266602
    5. ' space' → logprob: -6.386835098266602
    6. '           ' → logprob: -10.011835098266602
    7. '   ' → logprob: -11.511835098266602
    8. ' old' → logprob: -11.511835098266602
    9. ' #' → logprob: -11.761835098266602
    10. 'new' → logprob: -12.386835098266602

Token 968: ' not' (ID: 625)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.7752291560173035
    2. 'not' → logprob: -0.9002291560173035
    3. ' not' → logprob: -2.4002292156219482
    4. ' space' → logprob: -3.6502292156219482
    5. 'raise' → logprob: -4.900228977203369
    6. '#' → logprob: -5.650228977203369
    7. ' raise' → logprob: -6.150228977203369
    8. '               ' → logprob: -7.275228977203369
    9. 'be' → logprob: -7.525228977203369
    10. 'push' → logprob: -7.900228977203369

Token 969: ' happen' (ID: 5659)
  Prédit: ' happen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' happen' → logprob: -0.03661709278821945
    2. ' occur' → logprob: -3.7866170406341553
    3. 'occur' → logprob: -4.411617279052734
    4. 'h' → logprob: -7.911617279052734
    5. ' be' → logprob: -8.036617279052734
    6. 'occ' → logprob: -9.911617279052734
    7. 'be' → logprob: -10.161617279052734
    8. ' have' → logprob: -10.411617279052734
    9. 'raise' → logprob: -10.411617279052734
    10. ' raise' → logprob: -10.411617279052734

Token 970: ' based' (ID: 4122)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004479135386645794
    2. ':' → logprob: -6.754478931427002
    3. '           ' → logprob: -6.879478931427002
    4. ':
' → logprob: -7.504478931427002
    5. '                
' → logprob: -8.25447940826416
    6. '
' → logprob: -8.37947940826416
    7. '                   ' → logprob: -8.62947940826416
    8. ' raise' → logprob: -8.62947940826416
    9. '.' → logprob: -8.75447940826416
    10. ',' → logprob: -8.87947940826416

Token 971: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.008319996297359467
    2. 'to' → logprob: -5.508319854736328
    3. ' on' → logprob: -5.508319854736328
    4. ' to' → logprob: -9.508319854736328
    5. 'else' → logprob: -10.008319854736328
    6. 'elif' → logprob: -10.883319854736328
    7. 'None' → logprob: -11.883319854736328
    8. 'space' → logprob: -12.133319854736328
    9. '...' → logprob: -12.508319854736328
    10. '#' → logprob: -12.633319854736328

Token 972: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6265212297439575
    2. 'previous' → logprob: -1.1265212297439575
    3. 'current' → logprob: -2.751521110534668
    4. 'problem' → logprob: -3.751521110534668
    5. 'your' → logprob: -4.376521110534668
    6. ' previous' → logprob: -4.376521110534668
    7. 'code' → logprob: -5.126521110534668
    8. 'context' → logprob: -5.876521110534668
    9. 'existing' → logprob: -5.876521110534668
    10. 'comment' → logprob: -6.001521110534668

Token 973: ' statement' (ID: 9710)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2888752818107605
    2. '           ' → logprob: -3.2888753414154053
    3. '<|end|>' → logprob: -3.2888753414154053
    4. ' else' → logprob: -3.9138753414154053
    5. '                ' → logprob: -4.038875102996826
    6. ')' → logprob: -4.038875102996826
    7. ':' → logprob: -4.413875102996826
    8. 'None' → logprob: -4.538875102996826
    9. ':
' → logprob: -4.538875102996826
    10. '                
' → logprob: -4.788875102996826

Token 974: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003991611767560244
    2. '<|end|>' → logprob: -6.003991603851318
    3. '           ' → logprob: -7.753991603851318
    4. '.' → logprob: -8.878992080688477
    5. '
' → logprob: -8.878992080688477
    6. ',' → logprob: -9.003992080688477
    7. '                   ' → logprob: -9.378992080688477
    8. ':
' → logprob: -9.503992080688477
    9. '                
' → logprob: -9.628992080688477
    10. '<|end|>' → logprob: -9.628992080688477

Token 975: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013010689290240407
    2. '           ' → logprob: -8.376300811767578
    3. ' but' → logprob: -8.501300811767578
    4. '                   ' → logprob: -8.751300811767578
    5. '                ' → logprob: -8.751300811767578
    6. '#' → logprob: -9.126300811767578
    7. '                
' → logprob: -9.501300811767578
    8. 'return' → logprob: -9.626300811767578
    9. ' return' → logprob: -9.626300811767578
    10. ' raise' → logprob: -10.001300811767578

Token 976: ' just' (ID: 1327)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09217207878828049
    2. '#' → logprob: -3.092172145843506
    3. 'pass' → logprob: -4.092172145843506
    4. 'space' → logprob: -4.842172145843506
    5. '                   ' → logprob: -5.217172145843506
    6. '                ' → logprob: -5.592172145843506
    7. ' space' → logprob: -6.092172145843506
    8. ' car' → logprob: -6.217172145843506
    9. 'car' → logprob: -6.467172145843506
    10. '
' → logprob: -7.592172145843506

Token 977: ' handle' (ID: 5318)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.42056986689567566
    2. 'pass' → logprob: -2.045569896697998
    3. 'in' → logprob: -2.545569896697998
    4. '#' → logprob: -2.670569896697998
    5. 'assign' → logprob: -4.045569896697998
    6. '               ' → logprob: -4.295569896697998
    7. 'park' → logprob: -5.170569896697998
    8. ' handle' → logprob: -5.545569896697998
    9. 'space' → logprob: -5.795569896697998
    10. 'for' → logprob: -5.920569896697998

Token 978: ' anyway' (ID: 22332)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22664643824100494
    2. ' space' → logprob: -2.4766464233398438
    3. 'space' → logprob: -2.6016464233398438
    4. '(space' → logprob: -3.8516464233398438
    5. '                   ' → logprob: -4.601646423339844
    6. '```' → logprob: -5.601646423339844
    7. '   ' → logprob: -6.226646423339844
    8. '
' → logprob: -6.351646423339844
    9. '           ' → logprob: -6.476646423339844
    10. ' the' → logprob: -6.601646423339844

Token 979: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00037967207026667893
    2. '                   ' → logprob: -9.00037956237793
    3. '
' → logprob: -9.25037956237793
    4. ':
' → logprob: -9.87537956237793
    5. '                
' → logprob: -10.12537956237793
    6. '```' → logprob: -10.87537956237793
    7. '(space' → logprob: -11.62537956237793
    8. '           ' → logprob: -11.87537956237793
    9. ':' → logprob: -11.87537956237793
    10. '   ' → logprob: -12.12537956237793

Token 980: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0060496702790260315
    2. '                   ' → logprob: -5.381049633026123
    3. '                ' → logprob: -7.506049633026123
    4. '                
' → logprob: -8.131050109863281
    5. '(space' → logprob: -8.756050109863281
    6. '```' → logprob: -9.381050109863281
    7. '           ' → logprob: -9.631050109863281
    8. 'space' → logprob: -9.756050109863281
    9. ' space' → logprob: -10.131050109863281
    10. '                    
' → logprob: -10.631050109863281

Token 981: ' old' (ID: 2890)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0493965782225132
    2. '               ' → logprob: -3.049396514892578
    3. ' space' → logprob: -7.174396514892578
    4. '                   ' → logprob: -11.049396514892578
    5. '```' → logprob: -11.549396514892578
    6. '           ' → logprob: -12.049396514892578
    7. '   ' → logprob: -12.174396514892578
    8. '                ' → logprob: -13.549396514892578
    9. '``' → logprob: -13.674396514892578
    10. '              ' → logprob: -14.049396514892578

Token 982: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.046054061502218246
    2. 'car' → logprob: -3.4210541248321533
    3. '_space' → logprob: -5.796053886413574
    4. '_top' → logprob: -6.046053886413574
    5. 'space' → logprob: -6.046053886413574
    6. 'Car' → logprob: -6.921053886413574
    7. ' =' → logprob: -7.171053886413574
    8. '=' → logprob: -7.171053886413574
    9. 'top' → logprob: -7.546053886413574
    10. '.car' → logprob: -7.796053886413574

Token 983: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740825295448303
    2. '=' → logprob: -0.9740825295448303
    3. ' ' → logprob: -12.849082946777344
    4. 'space' → logprob: -13.974082946777344
    5. 'top' → logprob: -14.224082946777344
    6. ',' → logprob: -14.849082946777344
    7. ' top' → logprob: -15.724082946777344
    8. ' space' → logprob: -16.099082946777344
    9. '(space' → logprob: -16.099082946777344
    10. ' =
' → logprob: -16.224082946777344

Token 984: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -7.941850526549388e-06
    2. ' space' → logprob: -11.750007629394531
    3. 'sp' → logprob: -18.37500762939453
    4. 'self' → logprob: -19.37500762939453
    5. ' ' → logprob: -21.00000762939453
    6. '(space' → logprob: -21.50000762939453
    7. 'spaces' → logprob: -21.75000762939453
    8. 'pace' → logprob: -21.75000762939453
    9. 'spacing' → logprob: -21.87500762939453
    10. '   ' → logprob: -22.37500762939453

Token 985: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -6.098748053773306e-05
    2. 'top' → logprob: -9.75006103515625
    3. '.bottom' → logprob: -13.62506103515625
    4. '.' → logprob: -14.25006103515625
    5. '	top' → logprob: -15.00006103515625
    6. ' .' → logprob: -15.62506103515625
    7. ' top' → logprob: -15.87506103515625
    8. '   ' → logprob: -16.75006103515625
    9. '[top' → logprob: -17.12506103515625
    10. '.Top' → logprob: -18.25006103515625

Token 986: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00272831367328763
    2. 'space' → logprob: -6.002728462219238
    3. '           ' → logprob: -9.627728462219238
    4. ' space' → logprob: -9.752728462219238
    5. '                ' → logprob: -10.252728462219238
    6. '              ' → logprob: -10.377728462219238
    7. '                   ' → logprob: -11.127728462219238
    8. '<|end|>' → logprob: -11.502728462219238
    9. '             ' → logprob: -12.127728462219238
    10. '                
' → logprob: -12.377728462219238

Token 987: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004430627159308642
    2. 'space' → logprob: -8.625443458557129
    3. '			' → logprob: -9.250443458557129
    4. '                ' → logprob: -10.000443458557129
    5. '```' → logprob: -10.500443458557129
    6. ' space' → logprob: -10.875443458557129
    7. '                
' → logprob: -11.500443458557129
    8. '                               ' → logprob: -11.500443458557129
    9. '              ' → logprob: -11.875443458557129
    10. '[' → logprob: -11.875443458557129

Token 988: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.0005942588322795928
    2. ' space' → logprob: -7.750594139099121
    3. '               ' → logprob: -8.750594139099121
    4. '           ' → logprob: -12.750594139099121
    5. '                   ' → logprob: -14.500594139099121
    6. '   ' → logprob: -14.750594139099121
    7. '                ' → logprob: -15.875594139099121
    8. '(space' → logprob: -16.000595092773438
    9. '              ' → logprob: -16.250595092773438
    10. ' ' → logprob: -16.250595092773438

Token 989: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.01690877228975296
    2. 'bottom' → logprob: -4.141908645629883
    3. '.top' → logprob: -7.141908645629883
    4. '.' → logprob: -10.141908645629883
    5. '   ' → logprob: -10.516908645629883
    6. ' bottom' → logprob: -11.891908645629883
    7. 'top' → logprob: -12.766908645629883
    8. '```' → logprob: -13.641908645629883
    9. '       ' → logprob: -14.016908645629883
    10. ' ' → logprob: -14.391908645629883

Token 990: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020741820335388
    2. ' =' → logprob: -2.3502073287963867
    3. '=None' → logprob: -14.725207328796387
    4. '=
' → logprob: -16.225208282470703
    5. ',' → logprob: -16.600208282470703
    6. ')' → logprob: -17.225208282470703
    7. ' ' → logprob: -17.475208282470703
    8. '=True' → logprob: -17.725208282470703
    9. '=end' → logprob: -17.850208282470703
    10. '＝' → logprob: -18.100208282470703

Token 991: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.005812656134366989
    2. 'old' → logprob: -5.255812644958496
    3. ' car' → logprob: -7.505812644958496
    4. ' old' → logprob: -11.505812644958496
    5. 'space' → logprob: -12.005812644958496
    6. '	car' → logprob: -13.380812644958496
    7. 'card' → logprob: -13.505812644958496
    8. '   ' → logprob: -13.630812644958496
    9. ' ' → logprob: -13.755812644958496
    10. 'cars' → logprob: -13.880812644958496

Token 992: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 993: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003961185284424573
    2. '<|end|>' → logprob: -8.500395774841309
    3. '                ' → logprob: -9.625395774841309
    4. 'space' → logprob: -10.375395774841309
    5. '			' → logprob: -11.125395774841309
    6. '                   ' → logprob: -11.125395774841309
    7. '              ' → logprob: -11.250395774841309
    8. '           ' → logprob: -11.500395774841309
    9. '<|end|>' → logprob: -12.125395774841309
    10. 'tokens' → logprob: -12.250395774841309

Token 994: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -0.016718285158276558
    2. 'old' → logprob: -4.51671838760376
    3. 'space' → logprob: -5.51671838760376
    4. ' car' → logprob: -6.51671838760376
    5. ' space' → logprob: -9.891717910766602
    6. ' old' → logprob: -10.016717910766602
    7. '               ' → logprob: -10.516717910766602
    8. '	car' → logprob: -11.766717910766602
    9. '           ' → logprob: -12.766717910766602
    10. '   ' → logprob: -12.766717910766602

Token 995: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.531315314830863e-06
    2. '.wait' → logprob: -13.750003814697266
    3. '.car' → logprob: -13.750003814697266
    4. 'park' → logprob: -14.625003814697266
    5. ' .' → logprob: -15.125003814697266
    6. ',' → logprob: -16.125003814697266
    7. '._' → logprob: -16.500003814697266
    8. '```' → logprob: -16.625003814697266
    9. '
' → logprob: -16.875003814697266
    10. '.depart' → logprob: -16.875003814697266

Token 996: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -2.339278580620885e-06
    2. ' park' → logprob: -15.000001907348633
    3. 'par' → logprob: -15.125001907348633
    4. '```' → logprob: -15.250001907348633
    5. 'pack' → logprob: -15.625001907348633
    6. '   ' → logprob: -15.750001907348633
    7. 'parking' → logprob: -15.750001907348633
    8. '``' → logprob: -16.125001907348633
    9. 'part' → logprob: -16.750001907348633
    10. 'car' → logprob: -16.875001907348633

Token 997: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -3.054500666621607e-06
    2. 'position' → logprob: -13.25000286102295
    3. 'Position' → logprob: -13.87500286102295
    4. '_' → logprob: -16.750003814697266
    5. '.position' → logprob: -16.875003814697266
    6. '_POSITION' → logprob: -17.250003814697266
    7. '_positions' → logprob: -17.750003814697266
    8. 'osition' → logprob: -18.125003814697266
    9. '\' → logprob: -18.125003814697266
    10. '_id' → logprob: -18.500003814697266

Token 998: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '=(' → logprob: -16.97520637512207
    4. '(' → logprob: -17.97520637512207
    5. ' (' → logprob: -18.35020637512207
    6. ')' → logprob: -18.72520637512207
    7. '(space' → logprob: -19.22520637512207
    8. ' =(' → logprob: -19.72520637512207
    9. ' ' → logprob: -19.97520637512207
    10. '＝' → logprob: -20.22520637512207

Token 999: ' (' (ID: 350)
  Prédit: '(space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -5.2166411478538066e-05
    2. ' (' → logprob: -9.875052452087402
    3. '(' → logprob: -14.500052452087402
    4. '(scope' → logprob: -17.375051498413086
    5. '(slot' → logprob: -18.375051498413086
    6. '(place' → logprob: -18.500051498413086
    7. '(solution' → logprob: -19.000051498413086
    8. '(room' → logprob: -19.000051498413086
    9. '(site' → logprob: -19.250051498413086
    10. '(S' → logprob: -19.375051498413086

Token 1000: 'space' (ID: 8775)
  Prédit: '(space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -0.1002521812915802
    2. 'space' → logprob: -2.350252151489258
    3. ' space' → logprob: -10.100252151489258
    4. ' (' → logprob: -12.975252151489258
    5. 'pace' → logprob: -14.850252151489258
    6. '_space' → logprob: -15.100252151489258
    7. '.space' → logprob: -15.100252151489258
    8. '(' → logprob: -15.350252151489258
    9. '(scope' → logprob: -15.725252151489258
    10. 'spaces' → logprob: -15.850252151489258

Token 1001: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -8.983476436696947e-05
    2. 'index' → logprob: -9.375089645385742
    3. '.' → logprob: -12.500089645385742
    4. ' .' → logprob: -13.875089645385742
    5. ' index' → logprob: -16.250089645385742
    6. '	index' → logprob: -16.875089645385742
    7. '=index' → logprob: -16.875089645385742
    8. '   ' → logprob: -17.500089645385742
    9. '```' → logprob: -17.875089645385742
    10. '(index' → logprob: -18.000089645385742

Token 1002: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.375017166137695
    3. ',
' → logprob: -13.250017166137695
    4. '               ' → logprob: -13.875017166137695
    5. '',' → logprob: -13.875017166137695
    6. '`,' → logprob: -14.125017166137695
    7. '0' → logprob: -14.375017166137695
    8. '",' → logprob: -15.625017166137695
    9. '),' → logprob: -16.000017166137695
    10. '‌,' → logprob: -16.250017166137695

Token 1003: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '1' → logprob: -17.125036239624023
    4. '   ' → logprob: -17.500036239624023
    5. '[' → logprob: -18.750036239624023
    6. '۰' → logprob: -19.375036239624023
    7. '       ' → logprob: -19.750036239624023
    8. '  ' → logprob: -20.125036239624023
    9. '           ' → logprob: -20.312536239624023
    10. 'def' → logprob: -20.875036239624023

Token 1004: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '1' → logprob: -20.125
    4. '۰' → logprob: -21.0
    5. '   ' → logprob: -21.375
    6. '[' → logprob: -22.4375
    7. ' ' → logprob: -22.875
    8. '０' → logprob: -23.25
    9. '```' → logprob: -23.375
    10. '  ' → logprob: -23.4375

Token 1005: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0068039484322071075
    2. ')
' → logprob: -5.0068039894104
    3. '               ' → logprob: -9.756803512573242
    4. '           ' → logprob: -11.006803512573242
    5. '       ' → logprob: -11.256803512573242
    6. ' )' → logprob: -15.006803512573242
    7. '   ' → logprob: -15.631803512573242
    8. '<|end|>' → logprob: -15.631803512573242
    9. ')
' → logprob: -15.756803512573242
    10. '),' → logprob: -16.131803512573242

Token 1006: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.493430894101039e-05
    2. '<|end|>' → logprob: -10.000075340270996
    3. '           ' → logprob: -11.750075340270996
    4. '              ' → logprob: -12.375075340270996
    5. 'return' → logprob: -12.625075340270996
    6. '       ' → logprob: -12.750075340270996
    7. '                ' → logprob: -13.000075340270996
    8. '                
' → logprob: -13.000075340270996
    9. '```' → logprob: -13.250075340270996
    10. '                   ' → logprob: -14.000075340270996

Token 1007: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.2522214651107788
    2. '               ' → logprob: -1.5022214651107788
    3. ' space' → logprob: -8.25222110748291
    4. '           ' → logprob: -11.00222110748291
    5. '                ' → logprob: -12.25222110748291
    6. '              ' → logprob: -12.87722110748291
    7. '       ' → logprob: -13.62722110748291
    8. '
' → logprob: -13.87722110748291
    9. '                   ' → logprob: -13.87722110748291
    10. '                
' → logprob: -14.00222110748291

Token 1008: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -1.6047699318733066e-05
    2. 'top' → logprob: -11.125016212463379
    3. '.' → logprob: -13.875016212463379
    4. '	top' → logprob: -15.875016212463379
    5. '[top' → logprob: -15.875016212463379
    6. ' .' → logprob: -17.500015258789062
    7. ' top' → logprob: -18.125015258789062
    8. '```' → logprob: -18.500015258789062
    9. '_top' → logprob: -18.875015258789062
    10. '
' → logprob: -19.250015258789062

Token 1009: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10051105171442032
    2. ' =' → logprob: -2.350511074066162
    3. '=None' → logprob: -8.100510597229004
    4. ' is' → logprob: -14.725510597229004
    5. ')' → logprob: -15.725510597229004
    6. 'None' → logprob: -16.22551155090332
    7. '<|end|>' → logprob: -16.35051155090332
    8. ' None' → logprob: -17.35051155090332
    9. '(None' → logprob: -17.47551155090332
    10. '=
' → logprob: -17.72551155090332

Token 1010: ' old' (ID: 2890)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12699666619300842
    2. 'old' → logprob: -2.1269967555999756
    3. ' None' → logprob: -10.001996994018555
    4. 'none' → logprob: -11.001996994018555
    5. ' old' → logprob: -13.001996994018555
    6. '   ' → logprob: -13.751996994018555
    7. 'Old' → logprob: -14.251996994018555
    8. '(None' → logprob: -14.501996994018555
    9. 'older' → logprob: -15.001996994018555
    10. '	old' → logprob: -15.126996994018555

Token 1011: '_car' (ID: 62991)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011603808030486107
    2. 'Car' → logprob: -5.636603832244873
    3. '=None' → logprob: -6.261603832244873
    4. '_car' → logprob: -6.386603832244873
    5. '(None' → logprob: -6.511603832244873
    6. '.None' → logprob: -6.886603832244873
    7. ' None' → logprob: -7.011603832244873
    8. '_None' → logprob: -7.261603832244873
    9. ',None' → logprob: -9.011603355407715
    10. '_none' → logprob: -9.636603355407715

Token 1012: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26967135071754456
    2. '<|end|>' → logprob: -1.5196713209152222
    3. '           ' → logprob: -4.644671440124512
    4. '<|end|>' → logprob: -5.019671440124512
    5. '
' → logprob: -8.019671440124512
    6. 'return' → logprob: -8.144671440124512
    7. '       ' → logprob: -8.894671440124512
    8. '			' → logprob: -9.019671440124512
    9. '...' → logprob: -9.144671440124512
    10. ')' → logprob: -10.019671440124512

Token 1013: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15734322369098663
    2. '<|end|>' → logprob: -2.1573431491851807
    3. '           ' → logprob: -3.9073431491851807
    4. '<|end|>' → logprob: -4.78234338760376
    5. 'return' → logprob: -7.53234338760376
    6. '       ' → logprob: -7.78234338760376
    7. '...' → logprob: -9.032342910766602
    8. '			' → logprob: -9.532342910766602
    9. '		       ' → logprob: -10.282342910766602
    10. '```' → logprob: -10.532342910766602

Token 1014: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' (adapté à ' old') → logprob: -5.991464786347933e-05
    2. 'car' → logprob: -10.250060081481934
    3. ' old' → logprob: -10.875060081481934
    4. '_old' → logprob: -13.500060081481934
    5. '(old' → logprob: -14.000060081481934
    6. '	old' → logprob: -14.250060081481934
    7. '
' → logprob: -14.750060081481934
    8. 'pass' → logprob: -14.875060081481934
    9. '               ' → logprob: -15.000060081481934
    10. 'None' → logprob: -15.000060081481934

Token 1015: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.00011737081513274461
    2. 'Car' → logprob: -9.375117301940918
    3. '_c' → logprob: -11.625117301940918
    4. 'car' → logprob: -11.750117301940918
    5. '._' → logprob: -11.875117301940918
    6. '.car' → logprob: -12.875117301940918
    7. '```' → logprob: -12.875117301940918
    8. '	car' → logprob: -13.875117301940918
    9. '_' → logprob: -14.500117301940918
    10. '<Car' → logprob: -14.750117301940918

Token 1016: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008276138687506318
    2. '.wait' → logprob: -7.625827789306641
    3. '=' → logprob: -8.62582778930664
    4. '.car' → logprob: -9.87582778930664
    5. ' =' → logprob: -10.12582778930664
    6. ',' → logprob: -10.50082778930664
    7. '
' → logprob: -11.37582778930664
    8. '<|end|>' → logprob: -11.50082778930664
    9. 'wait' → logprob: -12.62582778930664
    10. ' .' → logprob: -13.00082778930664

Token 1017: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -3.4121114822482923e-06
    2. 'car' → logprob: -13.625003814697266
    3. 'wait' → logprob: -13.750003814697266
    4. 'pack' → logprob: -14.750003814697266
    5. '__' → logprob: -16.000003814697266
    6. '
' → logprob: -16.125003814697266
    7. 'parking' → logprob: -16.750003814697266
    8. 'par' → logprob: -16.875003814697266
    9. '```' → logprob: -16.875003814697266
    10. '#' → logprob: -16.875003814697266

Token 1018: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -2.5822400857578032e-05
    2. 'position' → logprob: -10.875025749206543
    3. 'osition' → logprob: -12.625025749206543
    4. 'Position' → logprob: -12.750025749206543
    5. '_' → logprob: -15.875025749206543
    6. '.position' → logprob: -15.875025749206543
    7. '_POSITION' → logprob: -16.50002670288086
    8. '```' → logprob: -17.25002670288086
    9. '	position' → logprob: -17.62502670288086
    10. '=' → logprob: -18.00002670288086

Token 1019: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023053228855133
    2. ' =' → logprob: -1.9102305173873901
    3. '               ' → logprob: -12.91023063659668
    4. '=(' → logprob: -13.53523063659668
    5. '=None' → logprob: -14.66023063659668
    6. '                ' → logprob: -14.66023063659668
    7. '                   ' → logprob: -15.03523063659668
    8. ',' → logprob: -15.41023063659668
    9. ')' → logprob: -15.41023063659668
    10. '(' → logprob: -15.78523063659668

Token 1020: ' (' (ID: 350)
  Prédit: '(space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -0.004078997299075127
    2. ' (' → logprob: -5.5040788650512695
    3. '(' → logprob: -15.25407886505127
    4. '(scope' → logprob: -16.879079818725586
    5. '(place' → logprob: -17.504079818725586
    6. '(slot' → logprob: -17.629079818725586
    7. '(None' → logprob: -18.129079818725586
    8. '(solution' → logprob: -18.504079818725586
    9. '(S' → logprob: -18.504079818725586
    10. '(storage' → logprob: -18.629079818725586

Token 1021: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.20144645869731903
    2. '(space' → logprob: -1.7014464139938354
    3. ' space' → logprob: -10.326446533203125
    4. ' (' → logprob: -16.201446533203125
    5. 'pace' → logprob: -16.451446533203125
    6. 'spaces' → logprob: -16.826446533203125
    7. '.space' → logprob: -17.201446533203125
    8. '_space' → logprob: -17.326446533203125
    9. 'Space' → logprob: -17.701446533203125
    10. '-space' → logprob: -17.826446533203125

Token 1022: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.004367697983980179
    2. '.space' → logprob: -6.379367828369141
    3. 'index' → logprob: -7.004367828369141
    4. '(space' → logprob: -7.129367828369141
    5. '(index' → logprob: -7.504367828369141
    6. 'space' → logprob: -8.00436782836914
    7. '(' → logprob: -11.25436782836914
    8. '/index' → logprob: -11.37936782836914
    9. ' .' → logprob: -11.75436782836914
    10. '.' → logprob: -11.87936782836914

Token 1023: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.436450636712834e-05
    2. '1' → logprob: -9.500094413757324
    3. ' ,' → logprob: -11.750094413757324
    4. '',' → logprob: -11.875094413757324
    5. '`,' → logprob: -13.625094413757324
    6. '0' → logprob: -13.750094413757324
    7. '",' → logprob: -14.250094413757324
    8. ',
' → logprob: -14.625094413757324
    9. '               ' → logprob: -15.125094413757324
    10. '                   ' → logprob: -16.000093460083008

Token 1024: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '(' → logprob: -15.625003814697266
    4. '0' → logprob: -15.875003814697266
    5. '   ' → logprob: -16.000003814697266
    6. '```' → logprob: -17.250003814697266
    7. '[' → logprob: -18.000003814697266
    8. ',' → logprob: -18.687503814697266
    9. '#' → logprob: -18.750003814697266
    10. '۱' → logprob: -18.875003814697266

Token 1025: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.750015258789062
    4. '0' → logprob: -14.625015258789062
    5. '(' → logprob: -14.750015258789062
    6. ',' → logprob: -17.000015258789062
    7. '```' → logprob: -17.187515258789062
    8. '  ' → logprob: -17.250015258789062
    9. '       ' → logprob: -17.625015258789062
    10. '#' → logprob: -17.937515258789062

Token 1026: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022050936240702868
    2. ')
' → logprob: -6.127204895019531
    3. '           ' → logprob: -11.752204895019531
    4. '               ' → logprob: -12.002204895019531
    5. '       ' → logprob: -12.752204895019531
    6. ' )' → logprob: -13.752204895019531
    7. '<|end|>' → logprob: -14.502204895019531
    8. ')

' → logprob: -14.752204895019531
    9. ')return' → logprob: -15.377204895019531
    10. ')
' → logprob: -15.627204895019531

Token 1027: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1028: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1029: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3147658109664917
    2. ':' → logprob: -1.9397658109664917
    3. '           ' → logprob: -2.1897659301757812
    4. '       ' → logprob: -4.689765930175781
    5. '               ' → logprob: -5.814765930175781
    6. '<|end|>' → logprob: -6.564765930175781
    7. '<|end|>' → logprob: -8.939765930175781
    8. '```' → logprob: -9.189765930175781
    9. '   ' → logprob: -9.439765930175781
    10. ' :
' → logprob: -9.814765930175781

Token 1030: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004994167247787118
    2. '               ' → logprob: -8.375499725341797
    3. '       ' → logprob: -8.750499725341797
    4. '            
' → logprob: -10.500499725341797
    5. '   ' → logprob: -11.250499725341797
    6. 'return' → logprob: -11.375499725341797
    7. ' raise' → logprob: -11.625499725341797
    8. '            ' → logprob: -11.750499725341797
    9. ' return' → logprob: -12.125499725341797
    10. 'raise' → logprob: -12.125499725341797

Token 1031: ' #' (ID: 1069)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.46849367022514343
    2. 'raise' → logprob: -1.2184937000274658
    3. '#' (adapté à ' #') → logprob: -2.718493700027466
    4. 'return' → logprob: -4.968493461608887
    5. '               ' → logprob: -5.468493461608887
    6. ' pass' → logprob: -7.593493461608887
    7. ' raise' → logprob: -7.968493461608887
    8. '                   ' → logprob: -8.093493461608887
    9. '
' → logprob: -10.593493461608887
    10. '```' → logprob: -10.968493461608887

Token 1032: ' Both' (ID: 17659)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.31263360381126404
    2. 'pass' → logprob: -2.062633514404297
    3. '#' → logprob: -2.312633514404297
    4. ' raise' → logprob: -3.562633514404297
    5. 'return' → logprob: -5.187633514404297
    6. ' pass' → logprob: -5.437633514404297
    7. '               ' → logprob: -5.687633514404297
    8. '       ' → logprob: -8.312633514404297
    9. ' #' → logprob: -9.187633514404297
    10. '           ' → logprob: -9.187633514404297

Token 1033: ' occupied' (ID: 46186)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.03707036375999451
    2. ' bottom' → logprob: -3.6620702743530273
    3. '.bottom' → logprob: -5.412070274353027
    4. 'None' → logprob: -5.787070274353027
    5. ' is' → logprob: -6.287070274353027
    6. 'space' → logprob: -7.912070274353027
    7. ' None' → logprob: -7.912070274353027
    8. ' are' → logprob: -9.162070274353027
    9. '=None' → logprob: -9.537070274353027
    10. 'is' → logprob: -9.662070274353027

Token 1034: ' cannot' (ID: 6284)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9480240941047668
    2. ':
' → logprob: -1.573024034500122
    3. ':' → logprob: -1.698024034500122
    4. ':return' → logprob: -2.448024034500122
    5. '                   ' → logprob: -2.948024034500122
    6. 'return' → logprob: -3.323024034500122
    7. '           ' → logprob: -3.698024034500122
    8. ' return' → logprob: -5.073024272918701
    9. ' and' → logprob: -5.573024272918701
    10. '.' → logprob: -6.323024272918701

Token 1035: ' assign' (ID: 14975)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08750908821821213
    2. 'occur' → logprob: -2.5875091552734375
    3. 'raise' → logprob: -5.8375091552734375
    4. 'be' → logprob: -5.8375091552734375
    5. ' happen' → logprob: -6.4625091552734375
    6. 'park' → logprob: -8.087509155273438
    7. 'continue' → logprob: -8.212509155273438
    8. 'pass' → logprob: -9.212509155273438
    9. '#' → logprob: -9.212509155273438
    10. 'accept' → logprob: -9.712509155273438

Token 1036: ' here' (ID: 2105)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8478344678878784
    2. '       ' → logprob: -1.2228344678878784
    3. '           ' → logprob: -1.9728344678878784
    4. '
' → logprob: -2.972834587097168
    5. ':
' → logprob: -4.347834587097168
    6. '                   ' → logprob: -4.347834587097168
    7. '   ' → logprob: -4.347834587097168
    8. ':' → logprob: -4.847834587097168
    9. 'raise' → logprob: -4.847834587097168
    10. ' raise' → logprob: -5.597834587097168

Token 1037: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16425788402557373
    2. '           ' → logprob: -2.0392580032348633
    3. ' raise' → logprob: -4.789258003234863
    4. '       ' → logprob: -5.039258003234863
    5. 'raise' → logprob: -6.414258003234863
    6. '.' → logprob: -7.414258003234863
    7. ':
' → logprob: -7.539258003234863
    8. ' return' → logprob: -7.664258003234863
    9. '                ' → logprob: -8.039258003234863
    10. ':' → logprob: -8.039258003234863

Token 1038: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0049416315741837025
    2. '           ' → logprob: -6.379941463470459
    3. ' raise' → logprob: -6.504941463470459
    4. '       ' → logprob: -7.004941463470459
    5. '                   ' → logprob: -8.504941940307617
    6. 'raise' → logprob: -8.879941940307617
    7. '   ' → logprob: -9.004941940307617
    8. ' return' → logprob: -9.129941940307617
    9. 'return' → logprob: -9.879941940307617
    10. '                ' → logprob: -10.004941940307617

Token 1039: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30872976779937744
    2. 'raise' (adapté à ' raise') → logprob: -1.5587297677993774
    3. '                   ' → logprob: -3.558729648590088
    4. ' raise' → logprob: -4.433729648590088
    5. ' return' → logprob: -4.558729648590088
    6. '               ' → logprob: -5.558729648590088
    7. '           ' → logprob: -8.058730125427246
    8. '   ' → logprob: -9.183730125427246
    9. '
' → logprob: -9.683730125427246
    10. '	raise' → logprob: -11.058730125427246

Token 1040: ' Runtime' (ID: 17606)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.15537488460540771
    2. ' Value' → logprob: -2.4053750038146973
    3. ' Exception' → logprob: -3.9053750038146973
    4. 'Exception' → logprob: -3.9053750038146973
    5. ' Runtime' → logprob: -5.155375003814697
    6. 'Runtime' → logprob: -5.405375003814697
    7. 'Assertion' → logprob: -6.405375003814697
    8. ' Assertion' → logprob: -6.530375003814697
    9. 'value' → logprob: -11.530374526977539
    10. '(Value' → logprob: -12.030374526977539

Token 1041: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.320199877838604e-07
    2. 'Warning' → logprob: -15.0
    3. 'rror' → logprob: -17.5
    4. '
' → logprob: -17.625
    5. 'ERROR' → logprob: -19.875
    6. 'error' → logprob: -20.25
    7. '_error' → logprob: -21.125
    8. '	Error' → logprob: -22.0
    9. 'Exception' → logprob: -22.125
    10. ' Error' → logprob: -22.625

Token 1042: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3877861797809601
    2. '(' → logprob: -1.3877861499786377
    3. '('' → logprob: -2.7627861499786377
    4. '(
' → logprob: -5.637786388397217
    5. '"' → logprob: -5.887786388397217
    6. '       ' → logprob: -7.012786388397217
    7. '           ' → logprob: -7.887786388397217
    8. '               ' → logprob: -8.137785911560059
    9. ''' → logprob: -9.012785911560059
    10. ':' → logprob: -9.262785911560059

Token 1043: 'Trying' (ID: 107151)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6555622816085815
    2. 'Value' → logprob: -1.2805622816085815
    3. 'Exception' → logprob: -1.9055622816085815
    4. 'space' → logprob: -4.280562400817871
    5. ' Exception' → logprob: -4.280562400817871
    6. ''' → logprob: -4.405562400817871
    7. '"value' → logprob: -5.155562400817871
    8. 'Runtime' → logprob: -6.030562400817871
    9. ' Value' → logprob: -6.405562400817871
    10. 'Cannot' → logprob: -6.905562400817871

Token 1044: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1269393414258957
    2. 'to' → logprob: -2.126939296722412
    3. '_to' → logprob: -12.37693977355957
    4. '   ' → logprob: -13.00193977355957
    5. '
' → logprob: -13.37693977355957
    6. '           ' → logprob: -14.00193977355957
    7. '               ' → logprob: -14.12693977355957
    8. 'To' → logprob: -14.37693977355957
    9. '	to' → logprob: -15.25193977355957
    10. '       ' → logprob: -15.25193977355957

Token 1045: ' park' (ID: 11796)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.013724193908274174
    2. 'park' → logprob: -4.388724327087402
    3. '_assign' → logprob: -7.013724327087402
    4. ' assign' → logprob: -8.138724327087402
    5. ' park' → logprob: -11.638724327087402
    6. 'add' → logprob: -12.013724327087402
    7. 'place' → logprob: -12.513724327087402
    8. 'Assign' → logprob: -14.388724327087402
    9. 'allocate' → logprob: -14.638724327087402
    10. '_ass' → logprob: -15.013724327087402

Token 1046: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.3796427249908447
    2. ' in' → logprob: -1.6296427249908447
    3. ' a' → logprob: -1.7546427249908447
    4. ' car' → logprob: -2.1296427249908447
    5. 'a' → logprob: -2.2546427249908447
    6. 'car' → logprob: -2.8796427249908447
    7. 'on' → logprob: -3.0046427249908447
    8. 'in' → logprob: -3.5046427249908447
    9. ' more' → logprob: -5.379642486572266
    10. ' another' → logprob: -5.879642486572266

Token 1047: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2907729744911194
    2. 'full' → logprob: -2.4157729148864746
    3. ' a' → logprob: -2.5407729148864746
    4. ' full' → logprob: -3.2907729148864746
    5. 'occupied' → logprob: -3.9157729148864746
    6. 'an' → logprob: -4.540772914886475
    7. ' an' → logprob: -4.665772914886475
    8. 'both' → logprob: -6.040772914886475
    9. 'fully' → logprob: -6.540772914886475
    10. ' both' → logprob: -6.790772914886475

Token 1048: ' full' (ID: 3149)
  Prédit: ' full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.44189247488975525
    2. 'full' → logprob: -1.8168925046920776
    3. ' space' → logprob: -2.316892385482788
    4. 'space' → logprob: -2.566892385482788
    5. 'occupied' → logprob: -4.566892623901367
    6. ' occupied' → logprob: -5.816892623901367
    7. ' fully' → logprob: -6.066892623901367
    8. 'fully' → logprob: -6.941892623901367
    9. ' spot' → logprob: -7.191892623901367
    10. ' filled' → logprob: -7.691892623901367

Token 1049: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.047325313091278076
    2. ' space' → logprob: -3.297325372695923
    3. 'spot' → logprob: -5.672325134277344
    4. ' parking' → logprob: -6.047325134277344
    5. 'parking' → logprob: -6.047325134277344
    6. ' spot' → logprob: -7.172325134277344
    7. '```' → logprob: -9.047325134277344
    8. ' ' → logprob: -10.047325134277344
    9. 'position' → logprob: -10.422325134277344
    10. 'slot' → logprob: -10.672325134277344

Token 1050: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0484103187918663
    2. ')")' → logprob: -3.923410415649414
    3. '")
' → logprob: -4.673410415649414
    4. ')")
' → logprob: -4.798410415649414
    5. ')' → logprob: -5.173410415649414
    6. '       ' → logprob: -7.048410415649414
    7. '.")' → logprob: -7.173410415649414
    8. '}")' → logprob: -7.173410415649414
    9. '')")
' → logprob: -7.548410415649414
    10. '')' → logprob: -8.048410415649414

Token 1051: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06017720326781273
    2. 'def' → logprob: -3.5601770877838135
    3. '<|end|>' → logprob: -4.060177326202393
    4. '```' → logprob: -4.685177326202393
    5. '<|end|>' → logprob: -6.185177326202393
    6. '
' → logprob: -7.935177326202393
    7. ')' → logprob: -8.060176849365234
    8. '       ' → logprob: -8.310176849365234
    9. ' def' → logprob: -8.435176849365234
    10. '    
' → logprob: -9.435176849365234

Token 1052: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26005858182907104
    2. 'def' (adapté à ' def') → logprob: -1.5100586414337158
    3. ' def' → logprob: -5.260058403015137
    4. '
' → logprob: -6.385058403015137
    5. '```' → logprob: -7.510058403015137
    6. '    
' → logprob: -8.135058403015137
    7. '	def' → logprob: -9.510058403015137
    8. '<|end|>' → logprob: -9.885058403015137
    9. ' ' → logprob: -10.510058403015137
    10. ')' → logprob: -10.635058403015137

Token 1053: ' _' (ID: 1175)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.812376856803894
    2. ' process' → logprob: -1.687376856803894
    3. '_process' → logprob: -2.1873769760131836
    4. '_' → logprob: -2.3123769760131836
    5. 'advance' → logprob: -3.5623769760131836
    6. 'park' → logprob: -3.8123769760131836
    7. ' try' → logprob: -3.9373769760131836
    8. 'def' → logprob: -4.187376976013184
    9. ' _' → logprob: -4.187376976013184
    10. 'try' → logprob: -4.312376976013184

Token 1054: 'remaining' (ID: 83570)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.21164539456367493
    2. 'try' → logprob: -2.2116453647613525
    3. 'park' → logprob: -4.086645603179932
    4. 'assign' → logprob: -4.336645603179932
    5. 'remove' → logprob: -4.461645603179932
    6. 'can' → logprob: -4.711645603179932
    7. 'find' → logprob: -5.086645603179932
    8. 'handle' → logprob: -5.211645603179932
    9. 'release' → logprob: -5.711645603179932
    10. 'car' → logprob: -6.086645603179932

Token 1055: '_' (ID: 62)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.005159870255738497
    2. '_token' → logprob: -6.755159854888916
    3. '_car' → logprob: -7.005159854888916
    4. '_tokens' → logprob: -7.005159854888916
    5. '_' → logprob: -7.505159854888916
    6. '_duration' → logprob: -7.505159854888916
    7. '_par' → logprob: -7.880159854888916
    8. '_capacity' → logprob: -8.255160331726074
    9. '_times' → logprob: -9.630160331726074
    10. 'Time' → logprob: -9.880160331726074

Token 1056: 'park' (ID: 11174)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.009643107652664185
    2. '_time' → logprob: -5.509643077850342
    3. 'car' → logprob: -5.884643077850342
    4. 'duration' → logprob: -6.759643077850342
    5. 'departure' → logprob: -7.884643077850342
    6. 'parking' → logprob: -8.3846435546875
    7. 'capacity' → logprob: -8.6346435546875
    8. 'park' → logprob: -8.8846435546875
    9. 'times' → logprob: -8.8846435546875
    10. 'cars' → logprob: -8.8846435546875

Token 1057: '_time' (ID: 6425)
  Prédit: '_duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -0.10056279599666595
    2. '_time' → logprob: -3.100562810897827
    3. '   ' → logprob: -3.600562810897827
    4. 'ing' → logprob: -4.975562572479248
    5. '_position' → logprob: -5.225562572479248
    6. 'ed' → logprob: -5.725562572479248
    7. '       ' → logprob: -6.350562572479248
    8. 'uration' → logprob: -6.475562572479248
    9. 'def' → logprob: -6.850562572479248
    10. '_positions' → logprob: -7.100562572479248

Token 1058: '_in' (ID: 2267)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014251544780563563
    2. '(' → logprob: -9.125142097473145
    3. 'self' → logprob: -10.625142097473145
    4. '   ' → logprob: -12.250142097473145
    5. '(car' → logprob: -13.375142097473145
    6. ' (' → logprob: -14.000142097473145
    7. '(
' → logprob: -14.250142097473145
    8. '       ' → logprob: -14.750142097473145
    9. 'def' → logprob: -14.875142097473145
    10. '[self' → logprob: -15.875142097473145

Token 1059: '_space' (ID: 36700)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.35529065132141113
    2. '_space' → logprob: -1.8552906513214111
    3. 'car' → logprob: -2.605290651321411
    4. 'self' → logprob: -4.230290412902832
    5. 'current' → logprob: -4.480290412902832
    6. '_car' → logprob: -4.980290412902832
    7. 'def' → logprob: -5.105290412902832
    8. 'spot' → logprob: -5.105290412902832
    9. '_current' → logprob: -6.230290412902832
    10. 'top' → logprob: -6.230290412902832

Token 1060: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009748285519890487
    2. '(' → logprob: -7.000974655151367
    3. 'self' → logprob: -9.875974655151367
    4. 's' → logprob: -12.875974655151367
    5. '(
' → logprob: -13.000974655151367
    6. '   ' → logprob: -13.125974655151367
    7. '(s' → logprob: -13.250974655151367
    8. ' (' → logprob: -13.625974655151367
    9. ' self' → logprob: -14.625974655151367
    10. '       ' → logprob: -15.250974655151367

Token 1061: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003229494614060968
    2. '(' → logprob: -8.375323295593262
    3. 'self' → logprob: -9.875323295593262
    4. '   ' → logprob: -10.625323295593262
    5. 'def' → logprob: -11.750323295593262
    6. '       ' → logprob: -12.750323295593262
    7. '(
' → logprob: -13.125323295593262
    8. ' (' → logprob: -14.375323295593262
    9. ')' → logprob: -14.500323295593262
    10. 's' → logprob: -14.750323295593262

Token 1062: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.3409368693828583
    2. 'self' → logprob: -1.4659368991851807
    3. 'car' → logprob: -2.9659368991851807
    4. ' space' → logprob: -5.840936660766602
    5. ' self' → logprob: -6.090936660766602
    6. ' car' → logprob: -7.340936660766602
    7. '       ' → logprob: -7.840936660766602
    8. '   ' → logprob: -8.965936660766602
    9. 'spaces' → logprob: -9.840936660766602
    10. 'cars' → logprob: -10.590936660766602

Token 1063: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018659278750419617
    2. '   ' → logprob: -4.3936591148376465
    3. ')' → logprob: -6.7686591148376465
    4. '       ' → logprob: -7.1436591148376465
    5. ',' → logprob: -7.1436591148376465
    6. '(car' → logprob: -7.1436591148376465
    7. 'self' → logprob: -7.3936591148376465
    8. 'def' → logprob: -7.7686591148376465
    9. '(' → logprob: -8.393659591674805
    10. ':' → logprob: -8.393659591674805

Token 1064: ' Parking' (ID: 40497)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.7759621143341064
    2. 'self' → logprob: -1.4009621143341064
    3. 'Parking' → logprob: -2.6509621143341064
    4. 'Car' → logprob: -2.7759621143341064
    5. 'int' → logprob: -2.9009621143341064
    6. 'space' → logprob: -3.1509621143341064
    7. ')' → logprob: -4.025961875915527
    8. 'Space' → logprob: -4.400961875915527
    9. 'def' → logprob: -4.650961875915527
    10. 'List' → logprob: -5.650961875915527

Token 1065: 'Space' (ID: 13331)
  Prédit: 'Space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Space' → logprob: -0.0022432736586779356
    2. 'Spaces' → logprob: -6.8772430419921875
    3. ')' → logprob: -8.127243041992188
    4. 'Car' → logprob: -8.502243041992188
    5. 'space' → logprob: -8.877243041992188
    6. 'None' → logprob: -9.002243041992188
    7. '   ' → logprob: -9.502243041992188
    8. ' ' → logprob: -9.752243041992188
    9. '_space' → logprob: -9.877243041992188
    10. 'int' → logprob: -10.252243041992188

Token 1066: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7079591155052185
    2. '(self' → logprob: -1.4579591751098633
    3. '):
' → logprob: -2.2079591751098633
    4. 'self' → logprob: -2.7079591751098633
    5. '):' → logprob: -2.7079591751098633
    6. '       ' → logprob: -4.207959175109863
    7. '   ' → logprob: -4.457959175109863
    8. ',' → logprob: -5.582959175109863
    9. ')->' → logprob: -7.832959175109863
    10. '
' → logprob: -8.582959175109863

Token 1067: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.010710806585848331
    2. ' now' → logprob: -4.885710716247559
    3. 'current' → logprob: -6.385710716247559
    4. '   ' → logprob: -7.135710716247559
    5. ')' → logprob: -8.135710716247559
    6. ' current' → logprob: -9.385710716247559
    7. 'car' → logprob: -9.385710716247559
    8. '       ' → logprob: -9.885710716247559
    9. '):' → logprob: -10.635710716247559
    10. '	now' → logprob: -11.510710716247559

Token 1068: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4948732852935791
    2. '):' → logprob: -1.494873285293579
    3. '):
' → logprob: -1.869873285293579
    4. ':' → logprob: -4.494873046875
    5. '   ' → logprob: -7.494873046875
    6. '):

' → logprob: -9.744873046875
    7. '       ' → logprob: -10.119873046875
    8. '):
' → logprob: -10.369873046875
    9. ' )' → logprob: -11.119873046875
    10. ')->' → logprob: -11.619873046875

Token 1069: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.4378848391061183e-05
    2. ' int' → logprob: -11.500014305114746
    3. '   ' → logprob: -12.625014305114746
    4. ')' → logprob: -15.125014305114746
    5. 'self' → logprob: -15.875014305114746
    6. '[int' → logprob: -16.000015258789062
    7. '       ' → logprob: -16.250015258789062
    8. 'Optional' → logprob: -16.375015258789062
    9. '
' → logprob: -16.875015258789062
    10. '  ' → logprob: -17.125015258789062

Token 1070: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004522450268268585
    2. '):
' → logprob: -5.754522323608398
    3. '):' → logprob: -6.629522323608398
    4. '   ' → logprob: -11.004522323608398
    5. ')->' → logprob: -13.004522323608398
    6. '       ' → logprob: -13.254522323608398
    7. ' )' → logprob: -14.129522323608398
    8. '):

' → logprob: -14.379522323608398
    9. ')
' → logprob: -15.004522323608398
    10. '):
' → logprob: -15.129522323608398

Token 1071: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6540470123291016
    2. ':' → logprob: -1.1540470123291016
    3. ':
' → logprob: -2.5290470123291016
    4. '->' → logprob: -3.2790470123291016
    5. 'def' → logprob: -3.2790470123291016
    6. ':def' → logprob: -6.154047012329102
    7. '   ' → logprob: -6.279047012329102
    8. '=' → logprob: -6.779047012329102
    9. ':return' → logprob: -6.904047012329102
    10. '):
' → logprob: -7.279047012329102

Token 1072: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008751180954277515
    2. 'Optional' → logprob: -4.758751392364502
    3. ' int' → logprob: -10.008750915527344
    4. 'max' → logprob: -10.383750915527344
    5. '   ' → logprob: -10.633750915527344
    6. 'min' → logprob: -11.383750915527344
    7. 'float' → logprob: -12.008750915527344
    8. '[int' → logprob: -12.008750915527344
    9. 'def' → logprob: -12.758750915527344
    10. '(int' → logprob: -13.008750915527344

Token 1073: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0648970827460289
    2. '[' → logprob: -2.939897060394287
    3. 'int' → logprob: -5.314897060394287
    4. '[
' → logprob: -5.439897060394287
    5. ':
' → logprob: -8.439897537231445
    6. '[List' → logprob: -8.564897537231445
    7. '   ' → logprob: -9.189897537231445
    8. '       ' → logprob: -9.939897537231445
    9. '=' → logprob: -10.564897537231445
    10. '=[
' → logprob: -10.689897537231445

Token 1074: ']:
' (ID: 22152)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9145418405532837
    2. '(self' → logprob: -1.2895418405532837
    3. '):
' → logprob: -1.5395418405532837
    4. '():
' → logprob: -3.039541721343994
    5. '   ' → logprob: -3.414541721343994
    6. ']:
' → logprob: -4.164541721343994
    7. '):' → logprob: -5.664541721343994
    8. ':
' → logprob: -5.914541721343994
    9. ':' → logprob: -6.289541721343994
    10. ',' → logprob: -6.664541721343994

Token 1075: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.36574100604048e-06
    2. 'return' → logprob: -13.125004768371582
    3. '```' → logprob: -13.500004768371582
    4. '[' → logprob: -14.375004768371582
    5. 'result' → logprob: -16.000003814697266
    6. '[
' → logprob: -17.375003814697266
    7. '	' → logprob: -17.625003814697266
    8. '[]' → logprob: -17.750003814697266
    9. 'times' → logprob: -18.125003814697266
    10. '`' → logprob: -18.250003814697266

Token 1076: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011782010551542044
    2. 'return' → logprob: -6.87617826461792
    3. '[' → logprob: -9.626177787780762
    4. 'times' → logprob: -10.001177787780762
    5. '[
' → logprob: -10.876177787780762
    6. 'result' → logprob: -11.876177787780762
    7. 'r' → logprob: -12.876177787780762
    8. 'car' → logprob: -14.126177787780762
    9. 'ret' → logprob: -14.501177787780762
    10. '```' → logprob: -14.626177787780762

Token 1077: ' returns' (ID: 7377)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.5080024003982544
    2. '       ' → logprob: -1.6330024003982544
    3. 'return' → logprob: -1.6330024003982544
    4. 'result' → logprob: -6.133002281188965
    5. 'ret' → logprob: -6.883002281188965
    6. 'car' → logprob: -7.133002281188965
    7. 'rem' → logprob: -7.258002281188965
    8. '[' → logprob: -7.383002281188965
    9. 'res' → logprob: -7.383002281188965
    10. 'remaining' → logprob: -7.633002281188965

Token 1078: ' remaining' (ID: 15448)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.3124036192893982
    2. '[' → logprob: -2.062403678894043
    3. '[t' → logprob: -2.687403678894043
    4. '[]' → logprob: -3.062403678894043
    5. '[]
' → logprob: -4.812403678894043
    6. 'times' → logprob: -4.937403678894043
    7. '[(' → logprob: -5.812403678894043
    8. '[i' → logprob: -6.437403678894043
    9. '[r' → logprob: -6.687403678894043
    10. '[x' → logprob: -7.062403678894043

Token 1079: ' time' (ID: 1058)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.4800929129123688
    2. '[' → logprob: -1.1050928831100464
    3. 'times' → logprob: -3.355093002319336
    4. '[t' → logprob: -5.480093002319336
    5. 'time' → logprob: -5.605093002319336
    6. 'car' → logprob: -5.855093002319336
    7. '[r' → logprob: -6.730093002319336
    8. 't' → logprob: -7.105093002319336
    9. '[(' → logprob: -7.230093002319336
    10. '_times' → logprob: -8.105093002319336

Token 1080: ' of' (ID: 328)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.472664475440979
    2. '[' → logprob: -1.472664475440979
    3. '([' → logprob: -2.8476643562316895
    4. '       ' → logprob: -3.4726643562316895
    5. 'for' → logprob: -4.0976643562316895
    6. '([
' → logprob: -4.3476643562316895
    7. 'car' → logprob: -4.5976643562316895
    8. '(
' → logprob: -5.2226643562316895
    9. '(car' → logprob: -5.3476643562316895
    10. '   ' → logprob: -5.7226643562316895

Token 1081: ' cars' (ID: 13653)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8532133102416992
    2. '[
' → logprob: -1.2282133102416992
    3. '[' → logprob: -1.3532133102416992
    4. '[c' → logprob: -4.103213310241699
    5. 'c' → logprob: -6.103213310241699
    6. 'cars' → logprob: -6.353213310241699
    7. '[x' → logprob: -8.1032133102417
    8. '[(' → logprob: -8.1032133102417
    9. '[p' → logprob: -8.2282133102417
    10. '[i' → logprob: -8.3532133102417

Token 1082: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.410980761051178
    2. ' =' → logprob: -1.6609807014465332
    3. '=' → logprob: -3.660980701446533
    4. 'in' → logprob: -3.785980701446533
    5. '[' → logprob: -3.910980701446533
    6. '=[' → logprob: -4.035980701446533
    7. '([' → logprob: -4.660980701446533
    8. 'return' → logprob: -4.910980701446533
    9. ' in' → logprob: -4.910980701446533
    10. 'result' → logprob: -5.285980701446533

Token 1083: ' that' (ID: 484)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.011779473163187504
    2. '[' → logprob: -4.761779308319092
    3. '[
' → logprob: -6.261779308319092
    4. 'cars' → logprob: -7.386779308319092
    5. 'the' → logprob: -8.13677978515625
    6. '
' → logprob: -9.13677978515625
    7. ' space' → logprob: -9.88677978515625
    8. '[c' → logprob: -10.01177978515625
    9. 'car' → logprob: -10.13677978515625
    10. '[s' → logprob: -10.38677978515625

Token 1084: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.00020890454470645636
    2. ' space' → logprob: -8.500208854675293
    3. '[' → logprob: -13.375208854675293
    4. '
' → logprob: -13.500208854675293
    5. 'car' → logprob: -13.875208854675293
    6. '   ' → logprob: -14.875208854675293
    7. '(space' → logprob: -15.125208854675293
    8. ' ' → logprob: -15.875208854675293
    9. '.space' → logprob: -16.00020980834961
    10. '`' → logprob: -16.37520980834961

Token 1085: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006800267728976905
    2. 'return' → logprob: -7.375679969787598
    3. '[' → logprob: -10.625679969787598
    4. '[
' → logprob: -11.375679969787598
    5. 'result' → logprob: -11.875679969787598
    6. '```' → logprob: -12.375679969787598
    7. ' return' → logprob: -13.250679969787598
    8. '
' → logprob: -13.750679969787598
    9. '   ' → logprob: -13.875679969787598
    10. '           ' → logprob: -14.875679969787598

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012880940921604633
    2. '[' → logprob: -7.626287937164307
    3. 'return' → logprob: -7.876287937164307
    4. '
' → logprob: -8.626288414001465
    5. '[
' → logprob: -9.626288414001465
    6. ' return' → logprob: -10.376288414001465
    7. '```' → logprob: -10.376288414001465
    8. '[]' → logprob: -10.876288414001465
    9. ' =' → logprob: -11.251288414001465
    10. ',' → logprob: -11.251288414001465

Token 1087: ' times' (ID: 4238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5559777617454529
    2. 'times' (adapté à ' times') → logprob: -1.1809778213500977
    3. 'return' → logprob: -2.6809778213500977
    4. '[' → logprob: -4.055977821350098
    5. 'result' → logprob: -4.180977821350098
    6. 'res' → logprob: -5.305977821350098
    7. 'rem' → logprob: -5.430977821350098
    8. 'ret' → logprob: -5.930977821350098
    9. '[
' → logprob: -6.055977821350098
    10. 'rt' → logprob: -6.805977821350098

Token 1088: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010480545461177826
    2. ' =' → logprob: -6.8760480880737305
    3. '=[]' → logprob: -11.75104808807373
    4. '=[]
' → logprob: -12.50104808807373
    5. '=[' → logprob: -14.25104808807373
    6. '       ' → logprob: -14.37604808807373
    7. '=
' → logprob: -14.37604808807373
    8. '   ' → logprob: -14.50104808807373
    9. '[' → logprob: -14.62604808807373
    10. '[]' → logprob: -15.25104808807373

Token 1089: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.06776627898216248
    2. '[' → logprob: -3.5677661895751953
    3. '[
' → logprob: -4.067766189575195
    4. '[self' → logprob: -4.317766189575195
    5. '[]' → logprob: -5.067766189575195
    6. '[c' → logprob: -7.942766189575195
    7. '[(' → logprob: -9.442766189575195
    8. '[]

' → logprob: -9.692766189575195
    9. 'car' → logprob: -11.692766189575195
    10. '[s' → logprob: -11.942766189575195

Token 1090: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031963277608156204
    2. 'for' → logprob: -3.531963348388672
    3. 'if' → logprob: -6.156963348388672
    4. ' for' → logprob: -9.656963348388672
    5. ' if' → logprob: -11.031963348388672
    6. '   ' → logprob: -11.656963348388672
    7. '[' → logprob: -14.531963348388672
    8. '
' → logprob: -14.906963348388672
    9. ' ' → logprob: -15.281963348388672
    10. '```' → logprob: -15.281963348388672

Token 1091: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014222618192434311
    2. '       ' → logprob: -4.514222621917725
    3. 'if' (adapté à ' if') → logprob: -5.764222621917725
    4. ' for' → logprob: -10.389222145080566
    5. '	for' → logprob: -14.514222145080566
    6. ' if' → logprob: -15.014222145080566
    7. '   ' → logprob: -15.514222145080566
    8. '```' → logprob: -16.639223098754883
    9. '
' → logprob: -17.139223098754883
    10. ' ' → logprob: -17.264223098754883

Token 1092: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0007101670489646494
    2. ' space' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.125709533691406
    4. '(space' → logprob: -16.875709533691406
    5. ' ' → logprob: -17.625709533691406
    6. '    ' → logprob: -18.875709533691406
    7. '       ' → logprob: -19.000709533691406
    8. 'self' → logprob: -19.375709533691406
    9. '  ' → logprob: -19.875709533691406
    10. '           ' → logprob: -20.250709533691406

Token 1093: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -3.380904672667384e-05
    2. '.' → logprob: -10.750033378601074
    3. '.top' → logprob: -11.625033378601074
    4. 'bottom' → logprob: -13.625033378601074
    5. '   ' → logprob: -13.875033378601074
    6. '.bot' → logprob: -15.000033378601074
    7. ' .' → logprob: -15.375033378601074
    8. '.has' → logprob: -16.12503433227539
    9. '.is' → logprob: -16.37503433227539
    10. '.Bottom' → logprob: -16.50003433227539

Token 1094: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.16028200089931488
    2. ' is' → logprob: -1.910282015800476
    3. '   ' → logprob: -11.035282135009766
    4. ':' → logprob: -11.285282135009766
    5. ':
' → logprob: -11.410282135009766
    6. 'and' → logprob: -11.660282135009766
    7. ' ' → logprob: -12.285282135009766
    8. '	is' → logprob: -13.910282135009766
    9. ')' → logprob: -14.535282135009766
    10. '!=' → logprob: -14.660282135009766

Token 1095: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01457583624869585
    2. ' not' → logprob: -4.264575958251953
    3. 'None' → logprob: -7.889575958251953
    4. '   ' → logprob: -11.514575958251953
    5. '```' → logprob: -12.514575958251953
    6. 'Not' → logprob: -12.639575958251953
    7. '
' → logprob: -12.889575958251953
    8. ' ' → logprob: -13.514575958251953
    9. 'none' → logprob: -13.639575958251953
    10. ' ' → logprob: -13.764575958251953

Token 1096: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.895480277715251e-06
    2. ' None' → logprob: -11.750008583068848
    3. '(None' → logprob: -13.875008583068848
    4. '_None' → logprob: -17.125009536743164
    5. 'none' → logprob: -17.250009536743164
    6. '_none' → logprob: -18.500009536743164
    7. '=None' → logprob: -18.500009536743164
    8. '.None' → logprob: -19.750009536743164
    9. '   ' → logprob: -19.750009536743164
    10. ',None' → logprob: -20.375009536743164

Token 1097: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16779732704162598
    2. ':
' → logprob: -2.292797327041626
    3. ':' → logprob: -3.042797327041626
    4. 'times' → logprob: -6.042797088623047
    5. '(times' → logprob: -7.042797088623047
    6. ' and' → logprob: -7.292797088623047
    7. '       ' → logprob: -7.542797088623047
    8. ' times' → logprob: -7.667797088623047
    9. 'and' → logprob: -7.917797088623047
    10. ',' → logprob: -9.417797088623047

Token 1098: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014227792620658875
    2. 'times' → logprob: -4.639227867126465
    3. ' times' → logprob: -5.514227867126465
    4. '(times' → logprob: -9.139227867126465
    5. 'tokens' → logprob: -9.264227867126465
    6. '	       ' → logprob: -9.639227867126465
    7. '       ' → logprob: -10.014227867126465
    8. '
' → logprob: -10.514227867126465
    9. '		' → logprob: -11.139227867126465
    10. '               ' → logprob: -11.389227867126465

Token 1099: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.0006260605878196657
    2. ' times' → logprob: -7.750626087188721
    3. '           ' → logprob: -8.875625610351562
    4. '       ' → logprob: -10.250625610351562
    5. '               ' → logprob: -10.875625610351562
    6. '   ' → logprob: -14.625625610351562
    7. '(times' → logprob: -15.250625610351562
    8. '```' → logprob: -15.500625610351562
    9. 'tokens' → logprob: -15.625625610351562
    10. ' ' → logprob: -16.000625610351562

Token 1100: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003091254911851138
    2. '.' → logprob: -8.250308990478516
    3. 'append' → logprob: -10.000308990478516
    4. '.extend' → logprob: -13.250308990478516
    5. '.app' → logprob: -15.250308990478516
    6. ' .' → logprob: -15.250308990478516
    7. '_append' → logprob: -16.750308990478516
    8. ' append' → logprob: -17.250308990478516
    9. '	append' → logprob: -17.250308990478516
    10. '.
' → logprob: -17.375308990478516

Token 1101: '(space' (ID: 133023)
  Prédit: '(space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -0.5997284054756165
    2. 'space' → logprob: -0.8497284054756165
    3. 'self' → logprob: -4.224728584289551
    4. '(self' → logprob: -4.849728584289551
    5. 'max' → logprob: -7.599728584289551
    6. ' space' → logprob: -8.09972858428955
    7. '(max' → logprob: -9.09972858428955
    8. ' self' → logprob: -9.22472858428955
    9. '(' → logprob: -11.22472858428955
    10. '(
' → logprob: -11.59972858428955

Token 1102: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.0033824380952864885
    2. '.depart' → logprob: -5.753382205963135
    3. '.' → logprob: -9.378382682800293
    4. 'bottom' → logprob: -9.878382682800293
    5. ' .' → logprob: -11.128382682800293
    6. '
' → logprob: -11.628382682800293
    7. ').' → logprob: -11.753382682800293
    8. 'departure' → logprob: -12.003382682800293
    9. '.top' → logprob: -12.753382682800293
    10. '   ' → logprob: -12.753382682800293

Token 1103: '.depart' (ID: 192809)
  Prédit: '.depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depart' → logprob: -0.0018264309037476778
    2. 'departure' → logprob: -6.376826286315918
    3. '.' → logprob: -10.001826286315918
    4. ').' → logprob: -10.251826286315918
    5. ')' → logprob: -11.251826286315918
    6. '.car' → logprob: -12.376826286315918
    7. ' .' → logprob: -12.376826286315918
    8. '_depart' → logprob: -12.626826286315918
    9. '.remaining' → logprob: -12.751826286315918
    10. ' departure' → logprob: -12.751826286315918

Token 1104: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.00011522514978423715
    2. '_time' → logprob: -9.250115394592285
    3. 'time' → logprob: -12.250115394592285
    4. '   ' → logprob: -12.375115394592285
    5. '       ' → logprob: -12.750115394592285
    6. '```' → logprob: -13.375115394592285
    7. 'sure' → logprob: -13.500115394592285
    8. 'ature' → logprob: -14.250115394592285
    9. 'ue' → logprob: -14.625115394592285
    10. '__' → logprob: -14.875115394592285

Token 1105: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.36574100604048e-06
    2. 'time' → logprob: -12.625004768371582
    3. ' -' → logprob: -15.250004768371582
    4. '```' → logprob: -15.625004768371582
    5. '-' → logprob: -15.875004768371582
    6. '   ' → logprob: -16.500003814697266
    7. ')' → logprob: -16.500003814697266
    8. 'Time' → logprob: -16.625003814697266
    9. '_TIME' → logprob: -16.875003814697266
    10. '_t' → logprob: -17.125003814697266

Token 1106: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0046235607005655766
    2. '-' → logprob: -5.3796234130859375
    3. ' ' → logprob: -13.754623413085938
    4. ' ' → logprob: -14.004623413085938
    5. '           ' → logprob: -14.254623413085938
    6. '   ' → logprob: -15.129623413085938
    7. ')' → logprob: -16.379623413085938
    8. '[' → logprob: -16.629623413085938
    9. '               ' → logprob: -17.129623413085938
    10. '  ' → logprob: -17.129623413085938

Token 1107: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0011706985533237457
    2. ' now' → logprob: -6.751170635223389
    3. '	now' → logprob: -15.126171112060547
    4. 'self' → logprob: -16.626171112060547
    5. '   ' → logprob: -16.751171112060547
    6. 'max' → logprob: -18.251171112060547
    7. '[now' → logprob: -18.251171112060547
    8. '           ' → logprob: -18.376171112060547
    9. 'nown' → logprob: -18.376171112060547
    10. '(now' → logprob: -18.501171112060547

Token 1108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032907098066061735
    2. '<|end|>' → logprob: -6.62829065322876
    3. ')
' → logprob: -6.75329065322876
    4. ' )' → logprob: -7.87829065322876
    5. ' if' → logprob: -8.378291130065918
    6. '<|end|>' → logprob: -9.128291130065918
    7. '       ' → logprob: -10.503291130065918
    8. 'if' → logprob: -11.378291130065918
    9. '[' → logprob: -11.503291130065918
    10. ')>' → logprob: -12.378291130065918

Token 1109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010720593854784966
    2. '<|end|>' → logprob: -5.510720729827881
    3. ' if' → logprob: -5.635720729827881
    4. 'if' → logprob: -6.760720729827881
    5. '           ' → logprob: -6.885720729827881
    6. '[' → logprob: -8.385720252990723
    7. '```' → logprob: -8.385720252990723
    8. ')' → logprob: -8.385720252990723
    9. '<|end|>' → logprob: -9.385720252990723
    10. '   ' → logprob: -10.885720252990723

Token 1110: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04456634819507599
    2. '       ' → logprob: -3.2945663928985596
    3. ' if' → logprob: -5.0445661544799805
    4. '   ' → logprob: -10.16956615447998
    5. '	if' → logprob: -11.04456615447998
    6. '
' → logprob: -12.79456615447998
    7. '	' → logprob: -13.66956615447998
    8. '```' → logprob: -14.54456615447998
    9. ' ' → logprob: -15.79456615447998
    10. 'return' → logprob: -15.91956615447998

Token 1111: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.01416398212313652
    2. ' space' → logprob: -4.264163970947266
    3. '(space' → logprob: -15.139163970947266
    4. '   ' → logprob: -16.514163970947266
    5. 'spaces' → logprob: -17.514163970947266
    6. '        ' → logprob: -17.889163970947266
    7. '       ' → logprob: -18.139163970947266
    8. ' ' → logprob: -18.139163970947266
    9. '    ' → logprob: -18.264163970947266
    10. '           ' → logprob: -18.264163970947266

Token 1112: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -2.935296834039036e-06
    2. '.bottom' → logprob: -13.25000286102295
    3. 'top' → logprob: -14.25000286102295
    4. '.' → logprob: -14.87500286102295
    5. ' .' → logprob: -15.75000286102295
    6. '   ' → logprob: -17.750003814697266
    7. '[top' → logprob: -17.875003814697266
    8. '	top' → logprob: -18.250003814697266
    9. '.Top' → logprob: -18.500003814697266
    10. '           ' → logprob: -18.750003814697266

Token 1113: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08895092457532883
    2. 'is' → logprob: -2.4639508724212646
    3. ')' → logprob: -12.088951110839844
    4. '```' → logprob: -13.963951110839844
    5. '<|end|>' → logprob: -14.213951110839844
    6. '[' → logprob: -14.463951110839844
    7. ' ' → logprob: -14.588951110839844
    8. '           ' → logprob: -14.588951110839844
    9. '        ' → logprob: -14.588951110839844
    10. '	is' → logprob: -14.713951110839844

Token 1114: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07890873402357101
    2. ' not' → logprob: -2.578908681869507
    3. 'None' → logprob: -10.953908920288086
    4. '   ' → logprob: -14.578908920288086
    5. ' None' → logprob: -14.953908920288086
    6. ' ' → logprob: -15.953908920288086
    7. 'Not' → logprob: -16.078908920288086
    8. '	not' → logprob: -16.453908920288086
    9. ' ' → logprob: -16.703908920288086
    10. 'none' → logprob: -16.703908920288086

Token 1115: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00027134892297908664
    2. ' None' → logprob: -8.250271797180176
    3. 'not' → logprob: -12.125271797180176
    4. 'none' → logprob: -12.750271797180176
    5. '_None' → logprob: -14.500271797180176
    6. '(None' → logprob: -14.625271797180176
    7. '=None' → logprob: -15.125271797180176
    8. '   ' → logprob: -15.625271797180176
    9. 'Not' → logprob: -16.37527084350586
    10. '_none' → logprob: -16.62527084350586

Token 1116: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6106728315353394
    2. ':' → logprob: -0.8606728315353394
    3. ':
' → logprob: -4.610672950744629
    4. '>' → logprob: -4.610672950744629
    5. ' >' → logprob: -4.985672950744629
    6. '       ' → logprob: -5.985672950744629
    7. '          ' → logprob: -6.110672950744629
    8. '[' → logprob: -7.860672950744629
    9. '        ' → logprob: -8.485672950744629
    10. ' >=' → logprob: -8.610672950744629

Token 1117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001433920580893755
    2. 'times' → logprob: -8.126434326171875
    3. ' times' → logprob: -8.126434326171875
    4. ':' → logprob: -8.501434326171875
    5. '	       ' → logprob: -9.126434326171875
    6. '[' → logprob: -9.251434326171875
    7. '       ' → logprob: -9.376434326171875
    8. '(times' → logprob: -9.626434326171875
    9. '    	   ' → logprob: -9.876434326171875
    10. ':
' → logprob: -10.126434326171875

Token 1118: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.31374114751815796
    2. 'times' (adapté à ' times') → logprob: -1.3137412071228027
    3. '           ' → logprob: -7.688741207122803
    4. '       ' → logprob: -11.563740730285645
    5. '            
' → logprob: -13.563740730285645
    6. '(times' → logprob: -13.688740730285645
    7. '
' → logprob: -13.813740730285645
    8. ' ' → logprob: -13.813740730285645
    9. '            ' → logprob: -13.938740730285645
    10. '               ' → logprob: -14.063740730285645

Token 1119: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06115245074033737
    2. '-' → logprob: -2.936152458190918
    3. '           ' → logprob: -5.561152458190918
    4. ' -' → logprob: -7.061152458190918
    5. 'append' → logprob: -7.686152458190918
    6. '          ' → logprob: -8.186152458190918
    7. '.' → logprob: -8.311152458190918
    8. ' -=' → logprob: -8.811152458190918
    9. ' .' → logprob: -9.686152458190918
    10. '       ' → logprob: -9.936152458190918

Token 1120: '(space' (ID: 133023)
  Prédit: '(space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -0.003179259831085801
    2. 'space' → logprob: -5.75317907333374
    3. ' space' → logprob: -13.628179550170898
    4. ' (' → logprob: -15.003179550170898
    5. '(' → logprob: -17.2531795501709
    6. '   ' → logprob: -19.5031795501709
    7. '.space' → logprob: -19.5031795501709
    8. 'pace' → logprob: -20.1281795501709
    9. '[' → logprob: -20.2531795501709
    10. '(max' → logprob: -20.5031795501709

Token 1121: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.00041577612864784896
    2. '.bottom' → logprob: -8.000415802001953
    3. 'top' → logprob: -10.125415802001953
    4. '.' → logprob: -11.250415802001953
    5. ' .' → logprob: -11.625415802001953
    6. '[top' → logprob: -12.125415802001953
    7. '.depart' → logprob: -12.500415802001953
    8. '.space' → logprob: -13.500415802001953
    9. '(top' → logprob: -14.250415802001953
    10. '.return' → logprob: -14.250415802001953

Token 1122: '.depart' (ID: 192809)
  Prédit: '.depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depart' → logprob: -0.00011605957115534693
    2. ' -' → logprob: -10.000116348266602
    3. '.' → logprob: -10.375116348266602
    4. ' .' → logprob: -11.125116348266602
    5. 'depart' → logprob: -11.500116348266602
    6. '-' → logprob: -12.000116348266602
    7. 'departure' → logprob: -13.375116348266602
    8. ' ' → logprob: -13.500116348266602
    9. '   ' → logprob: -13.750116348266602
    10. '_depart' → logprob: -14.125116348266602

Token 1123: 'ure' (ID: 627)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.01947692781686783
    2. 'art' → logprob: -4.394476890563965
    3. 'ure' → logprob: -5.019476890563965
    4. 'time' → logprob: -8.394476890563965
    5. 'ut' → logprob: -9.769476890563965
    6. 'ature' → logprob: -10.894476890563965
    7. '   ' → logprob: -11.894476890563965
    8. 'urt' → logprob: -12.644476890563965
    9. '       ' → logprob: -12.894476890563965
    10. '_type' → logprob: -13.019476890563965

Token 1124: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0002453662164043635
    2. 'time' → logprob: -8.500245094299316
    3. '-' → logprob: -11.500245094299316
    4. '   ' → logprob: -12.000245094299316
    5. '-time' → logprob: -12.250245094299316
    6. 'Time' → logprob: -12.250245094299316
    7. ' -' → logprob: -12.750245094299316
    8. '       ' → logprob: -12.875245094299316
    9. ' time' → logprob: -13.500245094299316
    10. ')' → logprob: -13.750245094299316

Token 1125: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0028060602489858866
    2. '-' → logprob: -5.877806186676025
    3. ' ' → logprob: -13.877805709838867
    4. ' ' → logprob: -15.752805709838867
    5. '   ' → logprob: -16.502805709838867
    6. '       ' → logprob: -16.627805709838867
    7. '  ' → logprob: -18.127805709838867
    8. '           ' → logprob: -18.627805709838867
    9. '        ' → logprob: -18.752805709838867
    10. '-now' → logprob: -19.127805709838867

Token 1126: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.1269284337759018
    2. ' now' → logprob: -2.1269283294677734
    3. '(now' → logprob: -16.001928329467773
    4. '[now' → logprob: -16.126928329467773
    5. '	now' → logprob: -16.126928329467773
    6. 'Now' → logprob: -17.501928329467773
    7. ' ' → logprob: -18.001928329467773
    8. '
' → logprob: -18.626928329467773
    9. '0' → logprob: -18.751928329467773
    10. '_now' → logprob: -18.751928329467773

Token 1127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2694879174232483
    2. ')
' → logprob: -2.0194878578186035
    3. '       ' → logprob: -2.2694878578186035
    4. '>' → logprob: -10.519488334655762
    5. ' )' → logprob: -10.519488334655762
    6. ')return' → logprob: -11.019488334655762
    7. '<|end|>' → logprob: -11.269488334655762
    8. ')

' → logprob: -11.394488334655762
    9. ' )
' → logprob: -11.894488334655762
    10. '[' → logprob: -12.019488334655762

Token 1128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004713066737167537
    2. '<|end|>' → logprob: -8.375471115112305
    3. 'return' → logprob: -9.375471115112305
    4. '<|end|>' → logprob: -10.125471115112305
    5. ')' → logprob: -10.500471115112305
    6. '	' → logprob: -10.625471115112305
    7. ' return' → logprob: -11.125471115112305
    8. '[' → logprob: -11.625471115112305
    9. '      ' → logprob: -12.250471115112305
    10. '   ' → logprob: -12.500471115112305

Token 1129: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03434903174638748
    2. 'return' (adapté à ' return') → logprob: -3.409348964691162
    3. ' return' → logprob: -7.409348964691162
    4. '   ' → logprob: -9.90934944152832
    5. '
' → logprob: -11.65934944152832
    6. '	return' → logprob: -11.65934944152832
    7. 'times' → logprob: -11.78434944152832
    8. ' times' → logprob: -11.90934944152832
    9. ' ' → logprob: -12.78434944152832
    10. ')return' → logprob: -13.03434944152832

Token 1130: ' times' (ID: 4238)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.5824697613716125
    2. 'times' → logprob: -0.8324697613716125
    3. '[' → logprob: -5.082469940185547
    4. '[i' → logprob: -9.457469940185547
    5. '[s' → logprob: -10.332469940185547
    6. '(times' → logprob: -10.457469940185547
    7. ' times' → logprob: -10.582469940185547
    8. ' [' → logprob: -10.582469940185547
    9. '[x' → logprob: -10.832469940185547
    10. '[(' → logprob: -11.707469940185547

Token 1131: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04086828604340553
    2. '
' → logprob: -3.6658682823181152
    3. 'def' → logprob: -4.290868282318115
    4. '<|end|>' → logprob: -7.790868282318115
    5. '    
' → logprob: -8.915868759155273
    6. '```' → logprob: -9.415868759155273
    7. ' def' → logprob: -9.790868759155273
    8. '<|end|>' → logprob: -10.165868759155273
    9. ')' → logprob: -11.290868759155273
    10. '

' → logprob: -11.415868759155273

Token 1132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7303783297538757
    2. '
' → logprob: -1.3553783893585205
    3. 'def' → logprob: -1.3553783893585205
    4. ' def' → logprob: -6.980378150939941
    5. '

' → logprob: -7.230378150939941
    6. '```' → logprob: -7.855378150939941
    7. '    
' → logprob: -8.105378150939941
    8. '        
' → logprob: -10.355378150939941
    9. '<|end|>' → logprob: -10.855378150939941
    10. '	def' → logprob: -10.855378150939941

Token 1133: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005345940124243498
    2. '   ' → logprob: -5.255345821380615
    3. ' def' → logprob: -9.130346298217773
    4. '
' → logprob: -13.130346298217773
    5. '```' → logprob: -13.380346298217773
    6. '@' → logprob: -16.005346298217773
    7. '	def' → logprob: -16.255346298217773
    8. '    
' → logprob: -16.880346298217773
    9. 'async' → logprob: -16.880346298217773
    10. '  ' → logprob: -18.255346298217773

Token 1134: ' _' (ID: 1175)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.6988166570663452
    2. '_process' → logprob: -0.9488166570663452
    3. 'advance' → logprob: -3.0738167762756348
    4. '_' → logprob: -3.8238167762756348
    5. ' process' → logprob: -4.573816776275635
    6. '_depart' → logprob: -5.198816776275635
    7. '_next' → logprob: -5.698816776275635
    8. 'park' → logprob: -5.823816776275635
    9. 'simulate' → logprob: -6.198816776275635
    10. '_find' → logprob: -6.573816776275635

Token 1135: 'min' (ID: 1493)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.6926916837692261
    2. 'find' → logprob: -1.317691683769226
    3. 'remove' → logprob: -3.0676918029785156
    4. 'handle' → logprob: -3.5676918029785156
    5. 'try' → logprob: -3.8176918029785156
    6. 'can' → logprob: -3.8176918029785156
    7. 'advance' → logprob: -3.8176918029785156
    8. 'park' → logprob: -3.9426918029785156
    9. 'depart' → logprob: -4.567691802978516
    10. 'next' → logprob: -4.567691802978516

Token 1136: '_diff' (ID: 41047)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.05980415269732475
    2. '_' → logprob: -3.1848042011260986
    3. '_depart' → logprob: -4.9348039627075195
    4. '_time' → logprob: -5.0598039627075195
    5. '_times' → logprob: -6.6848039627075195
    6. '_arr' → logprob: -7.1848039627075195
    7. '_rem' → logprob: -8.80980396270752
    8. '_car' → logprob: -8.93480396270752
    9. '_complete' → logprob: -9.68480396270752
    10. '_completion' → logprob: -9.80980396270752

Token 1137: '_space' (ID: 36700)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16934272646903992
    2. '_' → logprob: -2.9193427562713623
    3. '_time' → logprob: -3.0443427562713623
    4. '   ' → logprob: -4.044342517852783
    5. '_remaining' → logprob: -4.169342517852783
    6. '_depart' → logprob: -4.919342517852783
    7. '(' → logprob: -5.794342517852783
    8. '_car' → logprob: -7.044342517852783
    9. 'self' → logprob: -7.294342517852783
    10. '       ' → logprob: -7.294342517852783

Token 1138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001606747624464333
    2. '_time' → logprob: -7.5016069412231445
    3. '(' → logprob: -8.376606941223145
    4. '   ' → logprob: -8.626606941223145
    5. '_remaining' → logprob: -9.001606941223145
    6. 'self' → logprob: -9.126606941223145
    7. 's' → logprob: -9.501606941223145
    8. '_' → logprob: -9.626606941223145
    9. '_in' → logprob: -9.751606941223145
    10. '_times' → logprob: -10.001606941223145

Token 1139: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0033412138000130653
    2. '(' → logprob: -6.003341197967529
    3. ',' → logprob: -8.753341674804688
    4. '   ' → logprob: -9.003341674804688
    5. ')' → logprob: -9.128341674804688
    6. '_' → logprob: -9.128341674804688
    7. 'self' → logprob: -9.378341674804688
    8. '(space' → logprob: -10.003341674804688
    9. '(
' → logprob: -10.128341674804688
    10. '(s' → logprob: -10.628341674804688

Token 1140: ' car' (ID: 1669)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6470738649368286
    2. 'space' → logprob: -1.8970738649368286
    3. 'car' → logprob: -2.647073745727539
    4. ')' → logprob: -2.772073745727539
    5. ' self' → logprob: -3.022073745727539
    6. 'now' → logprob: -3.397073745727539
    7. ' car' → logprob: -3.397073745727539
    8. 'spaces' → logprob: -3.397073745727539
    9. 'lambda' → logprob: -4.772073745727539
    10. ' now' → logprob: -4.897073745727539

Token 1141: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10382100194692612
    2. ':' → logprob: -2.978821039199829
    3. ')' → logprob: -4.22882080078125
    4. '.' → logprob: -4.72882080078125
    5. '):' → logprob: -4.85382080078125
    6. ' ,' → logprob: -5.60382080078125
    7. '):
' → logprob: -6.10382080078125
    8. '=' → logprob: -6.72882080078125
    9. 's' → logprob: -6.72882080078125
    10. '[' → logprob: -6.97882080078125

Token 1142: ' Car' (ID: 4004)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.005503272172063589
    2. ' Car' → logprob: -5.880503177642822
    3. 'Optional' → logprob: -6.005503177642822
    4. 'int' → logprob: -9.50550365447998
    5. 'Parking' → logprob: -9.75550365447998
    6. 'car' → logprob: -10.50550365447998
    7. 'Park' → logprob: -11.13050365447998
    8. ')' → logprob: -11.50550365447998
    9. '<Car' → logprob: -11.50550365447998
    10. ' Optional' → logprob: -11.88050365447998

Token 1143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001186299603432417
    2. 'self' → logprob: -7.876186370849609
    3. '       ' → logprob: -8.12618637084961
    4. '(self' → logprob: -8.62618637084961
    5. '   ' → logprob: -9.00118637084961
    6. ' ,' → logprob: -9.50118637084961
    7. ',
' → logprob: -10.37618637084961
    8. ')' → logprob: -10.50118637084961
    9. ',self' → logprob: -10.87618637084961
    10. '):
' → logprob: -11.25118637084961

Token 1144: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.6830236315727234
    2. ' now' → logprob: -1.0580236911773682
    3. 'self' → logprob: -2.558023691177368
    4. 'car' → logprob: -4.058023452758789
    5. ' self' → logprob: -4.183023452758789
    6. ' car' → logprob: -4.683023452758789
    7. 'space' → logprob: -4.808023452758789
    8. 'spaces' → logprob: -5.183023452758789
    9. ')' → logprob: -5.558023452758789
    10. 'lambda' → logprob: -5.808023452758789

Token 1145: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7496035695075989
    2. ')' → logprob: -1.374603509902954
    3. '):
' → logprob: -1.999603509902954
    4. '):' → logprob: -2.624603509902954
    5. ':' → logprob: -2.874603509902954
    6. '   ' → logprob: -4.749603748321533
    7. '       ' → logprob: -8.124603271484375
    8. ',
' → logprob: -8.874603271484375
    9. ' ,' → logprob: -8.999603271484375
    10. '):
' → logprob: -9.124603271484375

Token 1146: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.553032628493384e-05
    2. ')' → logprob: -10.000075340270996
    3. ' int' → logprob: -11.125075340270996
    4. '   ' → logprob: -11.375075340270996
    5. '[int' → logprob: -14.125075340270996
    6. '       ' → logprob: -14.375075340270996
    7. 'self' → logprob: -14.500075340270996
    8. '```' → logprob: -15.125075340270996
    9. '):
' → logprob: -15.250075340270996
    10. '(int' → logprob: -15.500075340270996

Token 1147: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9198907613754272
    2. '):
' → logprob: -1.1698907613754272
    3. ')' → logprob: -1.2948907613754272
    4. ',' → logprob: -4.294890880584717
    5. '   ' → logprob: -5.919890880584717
    6. '       ' → logprob: -8.544890403747559
    7. '):
' → logprob: -9.669890403747559
    8. '):

' → logprob: -9.794890403747559
    9. ')->' → logprob: -9.794890403747559
    10. ' ):' → logprob: -9.794890403747559

Token 1148: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7969609498977661
    2. '(self' → logprob: -1.0469609498977661
    3. ':' → logprob: -2.0469608306884766
    4. '   ' → logprob: -3.2969608306884766
    5. 'def' → logprob: -4.546960830688477
    6. ':
' → logprob: -4.796960830688477
    7. '(
' → logprob: -5.921960830688477
    8. '[' → logprob: -6.046960830688477
    9. ' def' → logprob: -6.421960830688477
    10. '(' → logprob: -6.921960830688477

Token 1149: ' Optional' (ID: 19351)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005643993616104126
    2. 'Optional' → logprob: -5.255643844604492
    3. 'Tuple' → logprob: -8.755643844604492
    4. 'float' → logprob: -8.880643844604492
    5. ' int' → logprob: -10.130643844604492
    6. 'List' → logprob: -10.255643844604492
    7. '[int' → logprob: -11.130643844604492
    8. '(int' → logprob: -12.005643844604492
    9. ' Optional' → logprob: -12.505643844604492
    10. '   ' → logprob: -12.505643844604492

Token 1150: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.008094403892755508
    2. '[' → logprob: -4.883094310760498
    3. 'int' → logprob: -7.883094310760498
    4. '[List' → logprob: -9.883094787597656
    5. '[
' → logprob: -10.758094787597656
    6. '(int' → logprob: -11.383094787597656
    7. '[Int' → logprob: -11.508094787597656
    8. 'def' → logprob: -12.258094787597656
    9. ':int' → logprob: -12.508094787597656
    10. ':' → logprob: -12.883094787597656

Token 1151: 'Parking' (ID: 57723)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.6643173694610596
    2. 'int' → logprob: -1.1643173694610596
    3. 'Parking' → logprob: -1.7893173694610596
    4. 'tuple' → logprob: -6.1643171310424805
    5. 'float' → logprob: -6.1643171310424805
    6. 'Space' → logprob: -7.1643171310424805
    7. 'Car' → logprob: -7.6643171310424805
    8. '[int' → logprob: -8.53931713104248
    9. 'space' → logprob: -9.03931713104248
    10. 'parking' → logprob: -9.66431713104248

Token 1152: 'Space' (ID: 13331)
  Prédit: 'Space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Space' → logprob: -1.1994775377388578e-05
    2. 'Spaces' → logprob: -12.250012397766113
    3. '_space' → logprob: -12.625012397766113
    4. 'space' → logprob: -13.750012397766113
    5. 'Spot' → logprob: -14.500012397766113
    6. '_SPACE' → logprob: -14.750012397766113
    7. 'Position' → logprob: -14.875012397766113
    8. '[' → logprob: -15.750012397766113
    9. '   ' → logprob: -15.750012397766113
    10. ' space' → logprob: -16.250011444091797

Token 1153: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0400491952896118
    2. ':
' → logprob: -1.4150491952896118
    3. ':' → logprob: -1.7900491952896118
    4. '):' → logprob: -2.2900490760803223
    5. '   ' → logprob: -3.0400490760803223
    6. '       ' → logprob: -3.2900490760803223
    7. ')' → logprob: -3.9150490760803223
    8. '():
' → logprob: -4.040049076080322
    9. ',' → logprob: -5.790049076080322
    10. '=' → logprob: -6.165049076080322

Token 1154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020389800192788243
    2. ')' → logprob: -9.625204086303711
    3. '(' → logprob: -10.875204086303711
    4. ',' → logprob: -11.000204086303711
    5. '```' → logprob: -11.125204086303711
    6. ':' → logprob: -11.375204086303711
    7. '        
' → logprob: -11.500204086303711
    8. '[' → logprob: -12.000204086303711
    9. 'tokens' → logprob: -12.250204086303711
    10. '(space' → logprob: -12.500204086303711

Token 1155: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09201595187187195
    2. 'min' → logprob: -2.7170159816741943
    3. 'best' → logprob: -4.342015743255615
    4. 'space' → logprob: -5.592015743255615
    5. ' min' → logprob: -6.592015743255615
    6. 'spaces' → logprob: -7.342015743255615
    7. 'candidate' → logprob: -7.967015743255615
    8. 'tokens' → logprob: -8.092016220092773
    9. 'm' → logprob: -8.217016220092773
    10. 'None' → logprob: -8.342016220092773

Token 1156: ' Implements' (ID: 123308)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01683855801820755
    2. 'min' → logprob: -4.641838550567627
    3. 'best' → logprob: -5.016838550567627
    4. 'space' → logprob: -9.266839027404785
    5. 'def' → logprob: -9.516839027404785
    6. 'available' → logprob: -9.516839027404785
    7. 'possible' → logprob: -10.391839027404785
    8. 'c' → logprob: -10.391839027404785
    9. ' best' → logprob: -10.641839027404785
    10. 'candidate' → logprob: -10.766839027404785

Token 1157: ' the' (ID: 290)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.9971809983253479
    2. 'def' → logprob: -1.2471809387207031
    3. 'min' → logprob: -1.2471809387207031
    4. 'best' → logprob: -3.622180938720703
    5. '```' → logprob: -4.497180938720703
    6. '       ' → logprob: -5.122180938720703
    7. 'next' → logprob: -5.872180938720703
    8. 'space' → logprob: -6.872180938720703
    9. 'available' → logprob: -7.122180938720703
    10. '#' → logprob: -7.122180938720703

Token 1158: ' rules' (ID: 9607)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.19593545794487
    2. 'best' → logprob: -1.9459354877471924
    3. 'def' → logprob: -3.9459354877471924
    4. 'None' → logprob: -4.570935249328613
    5. 'next' → logprob: -5.820935249328613
    6. 'minimum' → logprob: -6.695935249328613
    7. '```' → logprob: -7.945935249328613
    8. 'minimal' → logprob: -8.195935249328613
    9. ' min' → logprob: -8.820935249328613
    10. 'closest' → logprob: -9.695935249328613

Token 1159: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002314303710591048
    2. ':' → logprob: -9.500231742858887
    3. ',' → logprob: -9.875231742858887
    4. '<|end|>' → logprob: -11.250231742858887
    5. 'def' → logprob: -11.500231742858887
    6. '   ' → logprob: -11.500231742858887
    7. '```' → logprob: -11.625231742858887
    8. 'space' → logprob: -12.000231742858887
    9. '        
' → logprob: -12.375231742858887
    10. ' for' → logprob: -12.375231742858887

Token 1160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.751746746478602e-05
    2. '```' → logprob: -10.25004768371582
    3. 'for' → logprob: -12.87504768371582
    4. 'space' → logprob: -13.12504768371582
    5. 'def' → logprob: -13.37504768371582
    6. '           ' → logprob: -14.37504768371582
    7. ' for' → logprob: -14.50004768371582
    8. 'next' → logprob: -14.50004768371582
    9. 'min' → logprob: -14.62504768371582
    10. '   ' → logprob: -14.75004768371582

Token 1161: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032797870226204395
    2. 'min' → logprob: -6.253279685974121
    3. 'best' → logprob: -7.878279685974121
    4. 'for' → logprob: -8.253279685974121
    5. 'space' → logprob: -9.003279685974121
    6. 'possible' → logprob: -9.253279685974121
    7. 'available' → logprob: -9.503279685974121
    8. 'm' → logprob: -9.628279685974121
    9. '```' → logprob: -9.878279685974121
    10. ' min' → logprob: -9.878279685974121

Token 1162: ' 「' (ID: 36702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2868502140045166
    2. 'empty' → logprob: -1.6618502140045166
    3. 'best' → logprob: -2.5368502140045166
    4. 'spaces' → logprob: -2.5368502140045166
    5. 'if' → logprob: -2.6618502140045166
    6. '#' → logprob: -2.6618502140045166
    7. 'c' → logprob: -2.7868502140045166
    8. 'available' → logprob: -2.7868502140045166
    9. 'min' → logprob: -2.9118502140045166
    10. 'for' → logprob: -3.9118502140045166

Token 1163: '�' (ID: 51268)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.116729736328125
    2. 'space' → logprob: -2.366729736328125
    3. '」' → logprob: -2.491729736328125
    4. ' car' → logprob: -2.616729736328125
    5. '空' → logprob: -2.616729736328125
    6. ')' → logprob: -3.241729736328125
    7. '車' → logprob: -3.241729736328125
    8. 'def' → logprob: -3.866729736328125
    9. '(car' → logprob: -3.866729736328125
    10. ' space' → logprob: -3.991729736328125

Token 1164: '�' (ID: 238)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.2111682891845703
    2. 'def' → logprob: -2.3361682891845703
    3. '空' → logprob: -2.9611682891845703
    4. 'e' → logprob: -3.4611682891845703
    5. ' def' → logprob: -3.4611682891845703
    6. '   ' → logprob: -3.4611682891845703
    7. ' space' → logprob: -3.5861682891845703
    8. 'self' → logprob: -3.7736682891845703
    9. '       ' → logprob: -3.8361682891845703
    10. ' ' → logprob: -3.8986682891845703

Token 1165: '車' (ID: 35939)
  Prédit: '空'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '空' → logprob: -1.3082016706466675
    2. '車' → logprob: -1.9332016706466675
    3. 'を' → logprob: -3.495701789855957
    4. 'park' → logprob: -3.558201789855957
    5. '段' → logprob: -3.558201789855957
    6. 'す' → logprob: -3.620701789855957
    7. 'が' → logprob: -3.745701789855957
    8. 'の' → logprob: -3.745701789855957
    9. 'は' → logprob: -4.183201789855957
    10. '下' → logprob: -4.245701789855957

Token 1166: 'して' (ID: 22440)
  Prédit: '時間'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '時間' → logprob: -2.202077865600586
    2. 'する' → logprob: -2.452077865600586
    3. 'の' → logprob: -2.577077865600586
    4. '_time' → logprob: -2.702077865600586
    5. 'を' → logprob: -2.952077865600586
    6. '可能' → logprob: -2.952077865600586
    7. 'でき' → logprob: -2.952077865600586
    8. '時' → logprob: -3.452077865600586
    9. '_' → logprob: -3.577077865600586
    10. 'が' → logprob: -3.702077865600586

Token 1167: 'ある' (ID: 73977)
  Prédit: 'いた'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'いた' → logprob: -0.21769540011882782
    2. 'い' → logprob: -2.092695474624634
    3. 'いる' → logprob: -2.842695474624634
    4. 'いただ' → logprob: -4.967695236206055
    5. 'いて' → logprob: -6.717695236206055
    6. 'いました' → logprob: -6.717695236206055
    7. 'から' → logprob: -7.592695236206055
    8. 'き' → logprob: -7.592695236206055
    9. '```' → logprob: -7.842695236206055
    10. 'た' → logprob: -7.967695236206055

Token 1168: '車' (ID: 35939)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.3809662461280823
    2. 'car' → logprob: -1.6309661865234375
    3. '車' → logprob: -3.2559661865234375
    4. 'スペ' → logprob: -4.0059661865234375
    5. '場所' → logprob: -4.0059661865234375
    6. '空' → logprob: -4.5059661865234375
    7. ' space' → logprob: -4.8809661865234375
    8. 'spaces' → logprob: -5.7559661865234375
    9. 'の' → logprob: -6.2559661865234375
    10. '```' → logprob: -6.6309661865234375

Token 1169: 'の' (ID: 3385)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.6346471905708313
    2. 'の' → logprob: -1.3846471309661865
    3. 'を' → logprob: -2.6346471309661865
    4. 'は' → logprob: -3.7596471309661865
    5. ' in' → logprob: -3.8846471309661865
    6. ' is' → logprob: -4.009647369384766
    7. ' が' → logprob: -4.634647369384766
    8. 'と' → logprob: -4.759647369384766
    9. 'in' → logprob: -4.884647369384766
    10. ' の' → logprob: -5.134647369384766

Token 1170: '残' (ID: 65394)
  Prédit: 'departure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'departure' → logprob: -0.8776417970657349
    2. 'park' → logprob: -1.6276417970657349
    3. 'arrival' → logprob: -2.1276416778564453
    4. '\xe9\xa7' → logprob: -2.3776416778564453
    5. 'car' → logprob: -3.6276416778564453
    6. 'parking' → logprob: -3.6276416778564453
    7. 'remaining' → logprob: -4.627641677856445
    8. '時間' → logprob: -4.752641677856445
    9. '残' → logprob: -4.877641677856445
    10. '車' → logprob: -5.002641677856445

Token 1171: 'り' (ID: 7297)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1756551265716553
    2. '       ' → logprob: -1.3006551265716553
    3. 'り' → logprob: -1.5506551265716553
    4. '車' → logprob: -2.9256551265716553
    5. '時間' → logprob: -3.0506551265716553
    6. 'departure' → logprob: -3.8006551265716553
    7. '   ' → logprob: -4.175655364990234
    8. 'time' → logprob: -4.425655364990234
    9. '```' → logprob: -4.675655364990234
    10. '存' → logprob: -4.925655364990234

Token 1172: '�' (ID: 51268)
  Prédit: '時間'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '時間' → logprob: -0.043407220393419266
    2. 'time' → logprob: -3.9184072017669678
    3. '\xe9\xa7' → logprob: -5.043407440185547
    4. '車' → logprob: -5.668407440185547
    5. '_time' → logprob: -5.918407440185547
    6. 'の' → logprob: -6.168407440185547
    7. '時' → logprob: -6.293407440185547
    8. 'り' → logprob: -7.043407440185547
    9. '寿' → logprob: -7.168407440185547
    10. 'park' → logprob: -7.793407440185547

Token 1173: '�' (ID: 238)
  Prédit: '寿'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '寿' → logprob: -1.4330278635025024
    2. '時間' → logprob: -1.6830278635025024
    3. '存' → logprob: -1.8080278635025024
    4. '車' → logprob: -1.9330278635025024
    5. '\xe9\xa7' → logprob: -3.183027744293213
    6. '時' → logprob: -3.808027744293213
    7. '数' → logprob: -3.933027744293213
    8. '離' → logprob: -4.058027744293213
    9. '限' → logprob: -4.683027744293213
    10. 'park' → logprob: -4.683027744293213

Token 1174: '車' (ID: 35939)
  Prédit: '時間'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '時間' → logprob: -0.5259460806846619
    2. '_time' → logprob: -1.9009461402893066
    3. 'time' → logprob: -2.1509461402893066
    4. '車' → logprob: -2.7759461402893066
    5. '時' → logprob: -4.025946140289307
    6. 'park' → logprob: -4.150946140289307
    7. 'り' → logprob: -5.025946140289307
    8. 'Time' → logprob: -5.525946140289307
    9. '寿' → logprob: -6.025946140289307
    10. '離' → logprob: -6.275946140289307

Token 1175: '時間' (ID: 31402)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.09399635344743729
    2. '時間' → logprob: -2.718996286392212
    3. 'time' → logprob: -4.468996524810791
    4. '_duration' → logprob: -5.218996524810791
    5. '   ' → logprob: -6.718996524810791
    6. '_' → logprob: -6.843996524810791
    7. '```' → logprob: -6.843996524810791
    8. 'の' → logprob: -7.218996524810791
    9. 'duration' → logprob: -7.343996524810791
    10. '       ' → logprob: -8.093996047973633

Token 1176: 'が' (ID: 6632)
  Prédit: 'が'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.6932624578475952
    2. '       ' → logprob: -1.6932624578475952
    3. 'を' → logprob: -2.5682625770568848
    4. 'の' → logprob: -2.9432625770568848
    5. '   ' → logprob: -3.1932625770568848
    6. '()' → logprob: -3.3182625770568848
    7. '>' → logprob: -3.9432625770568848
    8. ')' → logprob: -4.443262577056885
    9. 'は' → logprob: -5.068262577056885
    10. ' >' → logprob: -5.068262577056885

Token 1177: '�' (ID: 51268)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5138229131698608
    2. '0' → logprob: -2.0138230323791504
    3. ' car' → logprob: -3.5138230323791504
    4. '車' → logprob: -3.5138230323791504
    5. 'now' → logprob: -3.7638230323791504
    6. 'self' → logprob: -3.7638230323791504
    7. '<=' → logprob: -4.01382303237915
    8. 'max' → logprob: -4.13882303237915
    9. '>=' → logprob: -4.26382303237915
    10. 'min' → logprob: -4.51382303237915

Token 1178: '�' (ID: 238)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.36187171936035156
    2. 'car' → logprob: -2.4868717193603516
    3. ' None' → logprob: -3.1118717193603516
    4. '0' → logprob: -3.3618717193603516
    5. ' car' → logprob: -3.7368717193603516
    6. '1' → logprob: -3.8618717193603516
    7. '車' → logprob: -3.9868717193603516
    8. 'space' → logprob: -4.236871719360352
    9. 'max' → logprob: -4.736871719360352
    10. '   ' → logprob: -4.861871719360352

Token 1179: '車' (ID: 35939)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26174497604370117
    2. 'car' → logprob: -2.511744976043701
    3. 'now' → logprob: -2.886744976043701
    4. '1' → logprob: -3.886744976043701
    5. 'min' → logprob: -4.761744976043701
    6. 'None' → logprob: -4.886744976043701
    7. '車' → logprob: -5.011744976043701
    8. ' car' → logprob: -5.136744976043701
    9. 'max' → logprob: -5.261744976043701
    10. ' ' → logprob: -5.261744976043701

Token 1180: 'し' (ID: 3829)
  Prédit: 'して'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'して' → logprob: -1.314408302307129
    2. '時間' → logprob: -2.064408302307129
    3. '   ' → logprob: -2.189408302307129
    4. 'する' → logprob: -2.814408302307129
    5. '終了' → logprob: -2.814408302307129
    6. '中' → logprob: -3.439408302307129
    7. 'し' → logprob: -3.564408302307129
    8. '済' → logprob: -3.564408302307129
    9. 'まで' → logprob: -3.564408302307129
    10. 'time' → logprob: -3.564408302307129

Token 1181: 'よう' (ID: 72683)
  Prédit: 'ない'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ない' → logprob: -1.3625110387802124
    2. 'て' → logprob: -2.112511157989502
    3. 'る' → logprob: -2.362511157989502
    4. '   ' → logprob: -2.987511157989502
    5. 'い' → logprob: -2.987511157989502
    6. 'た' → logprob: -3.362511157989502
    7. '```' → logprob: -3.487511157989502
    8. '       ' → logprob: -3.612511157989502
    9. '-' → logprob: -3.612511157989502
    10. '0' → logprob: -3.987511157989502

Token 1182: 'として' (ID: 176315)
  Prédit: 'ない'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ない' → logprob: -1.5089439153671265
    2. '       ' → logprob: -2.008944034576416
    3. 'て' → logprob: -2.258944034576416
    4. 'る' → logprob: -2.508944034576416
    5. '   ' → logprob: -2.633944034576416
    6. 'く' → logprob: -3.633944034576416
    7. 'か' → logprob: -3.633944034576416
    8. '```' → logprob: -3.633944034576416
    9. 'い' → logprob: -3.758944034576416
    10. 'の' → logprob: -3.758944034576416

Token 1183: 'いる' (ID: 86169)
  Prédit: 'いる'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'いる' → logprob: -0.07141638547182083
    2. 'car' → logprob: -3.3214163780212402
    3. 'る' → logprob: -4.69641637802124
    4. 'い' → logprob: -4.94641637802124
    5. 'いた' → logprob: -5.32141637802124
    6. 'いて' → logprob: -6.44641637802124
    7. '       ' → logprob: -6.57141637802124
    8. 'なる' → logprob: -6.57141637802124
    9. 'います' → logprob: -6.94641637802124
    10. 'く' → logprob: -7.19641637802124

Token 1184: '車' (ID: 35939)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.02204381488263607
    2. '車' → logprob: -4.897043704986572
    3. ' car' → logprob: -5.272043704986572
    4. 'space' → logprob: -5.272043704986572
    5. 'の' → logprob: -7.272043704986572
    6. '   ' → logprob: -7.397043704986572
    7. ' ' → logprob: -8.14704418182373
    8. ' space' → logprob: -8.39704418182373
    9. 'か' → logprob: -8.52204418182373
    10. ',' → logprob: -8.52204418182373

Token 1185: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.12105009704828262
    2. 'と' → logprob: -2.9960501194000244
    3. 'より' → logprob: -3.8710501194000244
    4. 'との' → logprob: -4.996049880981445
    5. '.depart' → logprob: -5.246049880981445
    6. '.car' → logprob: -5.496049880981445
    7. '-' → logprob: -5.871049880981445
    8. 'から' → logprob: -5.996049880981445
    9. '   ' → logprob: -6.121049880981445
    10. 'が' → logprob: -6.246049880981445

Token 1186: '�' (ID: 51268)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.04105628281831741
    2. 'departure' → logprob: -3.7910563945770264
    3. 'arrival' → logprob: -5.166056156158447
    4. '到' → logprob: -6.041056156158447
    5. 'depart' → logprob: -6.166056156158447
    6. '\xe9\xa7' → logprob: -6.541056156158447
    7. 'parking' → logprob: -6.791056156158447
    8. '出' → logprob: -7.291056156158447
    9. '車' → logprob: -7.541056156158447
    10. '#' → logprob: -7.791056156158447

Token 1187: '�' (ID: 238)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.7801640629768372
    2. 'departure' → logprob: -1.4051640033721924
    3. 'arrival' → logprob: -2.4051640033721924
    4. '\xe9\xa7' → logprob: -3.7801640033721924
    5. 'き' → logprob: -3.7801640033721924
    6. '       ' → logprob: -4.0301642417907715
    7. 'ん' → logprob: -4.2801642417907715
    8. 'parking' → logprob: -4.5301642417907715
    9. '車' → logprob: -4.6551642417907715
    10. '   ' → logprob: -4.7801642417907715

Token 1188: '車' (ID: 35939)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -1.1448783874511719
    2. '車' → logprob: -1.8948783874511719
    3. '時間' → logprob: -1.8948783874511719
    4. 'departure' → logprob: -2.394878387451172
    5. '       ' → logprob: -2.519878387451172
    6. 'duration' → logprob: -3.769878387451172
    7. '   ' → logprob: -3.769878387451172
    8. 'き' → logprob: -4.269878387451172
    9. 'arrival' → logprob: -4.394878387451172
    10. '\xe9\xa7' → logprob: -5.019878387451172

Token 1189: '時間' (ID: 31402)
  Prédit: '時間'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '時間' → logprob: -0.11504656076431274
    2. 'time' → logprob: -3.115046501159668
    3. 'duration' → logprob: -3.365046501159668
    4. '_time' → logprob: -4.615046501159668
    5. '       ' → logprob: -4.865046501159668
    6. '   ' → logprob: -5.740046501159668
    7. '_duration' → logprob: -6.240046501159668
    8. '```' → logprob: -6.865046501159668
    9. 'の' → logprob: -6.990046501159668
    10. '車' → logprob: -7.865046501159668

Token 1190: '以上' (ID: 27177)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39920422434806824
    2. 'より' → logprob: -2.0242042541503906
    3. ' -' → logprob: -2.3992042541503906
    4. 'と' → logprob: -3.5242042541503906
    5. 'の' → logprob: -4.149204254150391
    6. 'との差' → logprob: -4.649204254150391
    7. 'を' → logprob: -4.774204254150391
    8. '以下' → logprob: -4.899204254150391
    9. '以上' → logprob: -5.524204254150391
    10. '   ' → logprob: -5.524204254150391

Token 1191: 'の' (ID: 3385)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1626942157745361
    2. '>=' → logprob: -1.7876942157745361
    3. 'の' → logprob: -2.412694215774536
    4. '   ' → logprob: -3.287694215774536
    5. ' >=' → logprob: -3.287694215774536
    6. ')' → logprob: -3.287694215774536
    7. '>' → logprob: -3.412694215774536
    8. '-' → logprob: -3.662694215774536
    9. 'を' → logprob: -3.662694215774536
    10. 'def' → logprob: -3.912694215774536

Token 1192: 'もの' (ID: 122636)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3923916220664978
    2. '差' → logprob: -2.7673916816711426
    3. '車' → logprob: -3.2673916816711426
    4. 'か' → logprob: -3.5173916816711426
    5. 'space' → logprob: -3.5173916816711426
    6. ' car' → logprob: -3.6423916816711426
    7. '場合' → logprob: -4.642391681671143
    8. '```' → logprob: -5.017391681671143
    9. 'の' → logprob: -5.142391681671143
    10. ')' → logprob: -5.142391681671143

Token 1193: 'が' (ID: 6632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24296525120735168
    2. ' if' → logprob: -3.1179652214050293
    3. '   ' → logprob: -3.3679652214050293
    4. 'の' → logprob: -3.9929652214050293
    5. ':' → logprob: -4.117965221405029
    6. 'を' → logprob: -4.492965221405029
    7. 'def' → logprob: -4.742965221405029
    8. ':
' → logprob: -4.742965221405029
    9. 'if' → logprob: -4.867965221405029
    10. ' in' → logprob: -4.867965221405029

Token 1194: 'ある' (ID: 73977)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.573550820350647
    2. '       ' → logprob: -2.6985507011413574
    3. '[]
' → logprob: -2.9485507011413574
    4. 'car' → logprob: -3.0735507011413574
    5. '[
' → logprob: -3.1985507011413574
    6. '[' → logprob: -3.1985507011413574
    7. '[]' → logprob: -3.3235507011413574
    8. 'space' → logprob: -3.4485507011413574
    9. '空' → logprob: -3.4485507011413574
    10. ' None' → logprob: -3.8235507011413574

Token 1195: '場合' (ID: 72486)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -2.0172152519226074
    2. '       ' → logprob: -2.3922152519226074
    3. 'が' → logprob: -2.3922152519226074
    4. ' and' → logprob: -2.5172152519226074
    5. 'を' → logprob: -2.7672152519226074
    6. 'and' → logprob: -3.2672152519226074
    7. 'の' → logprob: -3.2672152519226074
    8. ' or' → logprob: -3.2672152519226074
    9. '):
' → logprob: -3.3922152519226074
    10. '   ' → logprob: -3.3922152519226074

Token 1196: '、その' (ID: 148386)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8778544664382935
    2. '       ' → logprob: -2.252854347229004
    3. '[' → logprob: -2.502854347229004
    4. '(' → logprob: -3.002854347229004
    5. '(space' → logprob: -3.002854347229004
    6. '   ' → logprob: -3.252854347229004
    7. 'def' → logprob: -3.627854347229004
    8. '):' → logprob: -3.752854347229004
    9. ':
' → logprob: -3.877854347229004
    10. ')' → logprob: -3.877854347229004

Token 1197: '差' (ID: 35142)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8976901769638062
    2. 'for' → logprob: -2.8976902961730957
    3. 'space' → logprob: -3.0226902961730957
    4. ' for' → logprob: -3.1476902961730957
    5. ' car' → logprob: -3.1476902961730957
    6. ' spaces' → logprob: -3.2726902961730957
    7. 'def' → logprob: -3.2726902961730957
    8. 'spaces' → logprob: -3.3976902961730957
    9. '車' → logprob: -3.5226902961730957
    10. '空' → logprob: -3.7726902961730957

Token 1198: 'が' (ID: 6632)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1858587265014648
    2. ')' → logprob: -1.3108587265014648
    3. '       ' → logprob: -2.560858726501465
    4. '   ' → logprob: -2.935858726501465
    5. '_' → logprob: -3.435858726501465
    6. ' =' → logprob: -3.435858726501465
    7. 'def' → logprob: -3.810858726501465
    8. ' ' → logprob: -3.810858726501465
    9. ':' → logprob: -3.935858726501465
    10. '>' → logprob: -4.560858726501465

Token 1199: '一' (ID: 2432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.579400658607483
    2. ')' → logprob: -2.3294005393981934
    3. '>' → logprob: -2.4544005393981934
    4. '=' → logprob: -2.7044005393981934
    5. 'space' → logprob: -2.8294005393981934
    6. '0' → logprob: -3.0794005393981934
    7. '<=' → logprob: -3.2044005393981934
    8. 'car' → logprob: -3.2044005393981934
    9. 'min' → logprob: -3.4544005393981934
    10. ' ' → logprob: -3.4544005393981934

Token 1200: '番' (ID: 30357)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5704942941665649
    2. '=' → logprob: -1.695494294166565
    3. '<=' → logprob: -2.0704941749572754
    4. '1' → logprob: -4.320494174957275
    5. 'space' → logprob: -4.445494174957275
    6. '==' → logprob: -4.695494174957275
    7. '>=' → logprob: -4.820494174957275
    8. 'None' → logprob: -5.070494174957275
    9. '       ' → logprob: -5.320494174957275
    10. 'def' → logprob: -5.445494174957275

Token 1201: '小' (ID: 5820)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1514890342950821
    2. '<
' → logprob: -3.276489019393921
    3. '-' → logprob: -3.776489019393921
    4. ')' → logprob: -3.901489019393921
    5. ' <' → logprob: -4.5264892578125
    6. '=' → logprob: -4.5264892578125
    7. '<=' → logprob: -4.6514892578125
    8. '>' → logprob: -5.4014892578125
    9. '少' → logprob: -6.0264892578125
    10. ',' → logprob: -6.4014892578125

Token 1202: 'さい' (ID: 36201)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.12836450338363647
    2. 'さい' → logprob: -2.3783645629882812
    3. 'る' → logprob: -4.753364562988281
    4. 'な' → logprob: -5.128364562988281
    5. 'き' → logprob: -5.503364562988281
    6. 'り' → logprob: -6.503364562988281
    7. '   ' → logprob: -6.628364562988281
    8. 'の' → logprob: -6.628364562988281
    9. 'かった' → logprob: -7.503364562988281
    10. 'さ' → logprob: -7.628364562988281

Token 1203: '�' (ID: 51268)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.7945555448532104
    2. 'で' → logprob: -2.2945556640625
    3. '(space' → logprob: -2.2945556640625
    4. 'を' → logprob: -2.7945556640625
    5. 'space' → logprob: -3.2945556640625
    6. ':' → logprob: -3.2945556640625
    7. 'def' → logprob: -3.5445556640625
    8. 'が' → logprob: -3.6695556640625
    9. '以上' → logprob: -3.7945556640625
    10. '(' → logprob: -3.7945556640625

Token 1204: '�' (ID: 238)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.8885679841041565
    2. 'space' → logprob: -1.2635679244995117
    3. 'の' → logprob: -2.0135679244995117
    4. 'な' → logprob: -3.8885679244995117
    5. '空' → logprob: -4.013567924499512
    6. 'かった' → logprob: -4.013567924499512
    7. '(space' → logprob: -4.513567924499512
    8. '```' → logprob: -4.513567924499512
    9. 'る' → logprob: -4.888567924499512
    10. '車' → logprob: -5.388567924499512

Token 1205: '車' (ID: 35939)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8772636651992798
    2. 'space' → logprob: -2.0022635459899902
    3. 'の' → logprob: -2.2522635459899902
    4. '   ' → logprob: -2.7522635459899902
    5. '_space' → logprob: -4.00226354598999
    6. '```' → logprob: -4.00226354598999
    7. 'で' → logprob: -4.12726354598999
    8. '           ' → logprob: -4.25226354598999
    9. '空' → logprob: -4.62726354598999
    10. 'を' → logprob: -4.75226354598999

Token 1206: 'スペ' (ID: 192474)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8360975384712219
    2. '_space' → logprob: -1.9610974788665771
    3. 'space' → logprob: -2.086097478866577
    4. '_time' → logprob: -2.711097478866577
    5. '   ' → logprob: -2.711097478866577
    6. '時間' → logprob: -3.336097478866577
    7. 'の' → logprob: -4.336097717285156
    8. ')' → logprob: -4.461097717285156
    9. ' space' → logprob: -4.586097717285156
    10. 'time' → logprob: -5.086097717285156

Token 1207: 'ース' (ID: 25439)
  Prédit: 'ース'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ース' → logprob: -0.003644495503976941
    2. '```' → logprob: -6.2536444664001465
    3. 'ー' → logprob: -6.5036444664001465
    4. 'ace' → logprob: -9.128644943237305
    5. 'ス' → logprob: -10.003644943237305
    6. '   ' → logprob: -11.253644943237305
    7. '       ' → logprob: -11.878644943237305
    8. '#' → logprob: -12.003644943237305
    9. '``' → logprob: -12.003644943237305
    10. '―' → logprob: -12.503644943237305

Token 1208: 'に' (ID: 5280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5032253861427307
    2. ':' → logprob: -1.628225326538086
    3. '   ' → logprob: -2.503225326538086
    4. '(' → logprob: -3.503225326538086
    5. 'def' → logprob: -3.878225326538086
    6. ')' → logprob: -4.253225326538086
    7. '[' → logprob: -4.753225326538086
    8. ']' → logprob: -5.503225326538086
    9. ':
' → logprob: -5.628225326538086
    10. '):' → logprob: -5.753225326538086

Token 1209: '�' (ID: 51268)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.03726861625909805
    2. 'return' → logprob: -4.78726863861084
    3. '       ' → logprob: -4.91226863861084
    4. 'space' → logprob: -5.28726863861084
    5. 'c' → logprob: -5.53726863861084
    6. '   ' → logprob: -5.91226863861084
    7. 'for' → logprob: -6.41226863861084
    8. ' car' → logprob: -7.16226863861084
    9. 'def' → logprob: -7.28726863861084
    10. '車' → logprob: -7.28726863861084

Token 1210: '�' (ID: 238)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.9786151051521301
    2. '       ' → logprob: -2.1036150455474854
    3. '空' → logprob: -2.7286150455474854
    4. 'car' → logprob: -2.8536150455474854
    5. 'None' → logprob: -2.9786150455474854
    6. 's' → logprob: -3.2286150455474854
    7. '   ' → logprob: -3.6036150455474854
    8. 'く' → logprob: -3.8536150455474854
    9. '```' → logprob: -3.8536150455474854
    10. 'す' → logprob: -4.2286152839660645

Token 1211: '車' (ID: 35939)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ー' → logprob: -1.1843034029006958
    2. 'ーク' → logprob: -1.4343034029006958
    3. 'く' → logprob: -1.5593034029006958
    4. '車' → logprob: -3.0593032836914062
    5. '空' → logprob: -3.3093032836914062
    6. 'park' → logprob: -3.5593032836914062
    7. 'か' → logprob: -4.184303283691406
    8. 'space' → logprob: -4.309303283691406
    9. '```' → logprob: -4.684303283691406
    10. 'を' → logprob: -5.059303283691406

Token 1212: 'します' (ID: 38720)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5520927906036377
    2. ':' → logprob: -1.6770927906036377
    3. '[' → logprob: -1.8020927906036377
    4. ')' → logprob: -1.8020927906036377
    5. '(
' → logprob: -2.9270927906036377
    6. '   ' → logprob: -3.9270927906036377
    7. '):' → logprob: -4.052092552185059
    8. '       ' → logprob: -4.302092552185059
    9. '.' → logprob: -4.427092552185059
    10. 'if' → logprob: -4.427092552185059

Token 1213: '。」
' (ID: 195880)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014714105054736137
    2. ':' → logprob: -6.139714241027832
    3. ':
' → logprob: -6.139714241027832
    4. ')' → logprob: -6.264714241027832
    5. '(' → logprob: -6.389714241027832
    6. '
' → logprob: -6.889714241027832
    7. '   ' → logprob: -7.139714241027832
    8. 'def' → logprob: -7.264714241027832
    9. '(self' → logprob: -7.764714241027832
    10. '):
' → logprob: -7.889714241027832

Token 1214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028993739397265017
    2. ')' → logprob: -10.125289916992188
    3. '```' → logprob: -10.125289916992188
    4. ',' → logprob: -10.250289916992188
    5. '(' → logprob: -10.500289916992188
    6. 'def' → logprob: -10.625289916992188
    7. 'tokens' → logprob: -10.875289916992188
    8. '        
' → logprob: -11.000289916992188
    9. '
' → logprob: -11.125289916992188
    10. 'space' → logprob: -11.375289916992188

Token 1215: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007461408386006951
    2. 'def' → logprob: -8.75074577331543
    3. 'min' → logprob: -9.00074577331543
    4. ')' → logprob: -9.12574577331543
    5. 'space' → logprob: -9.37574577331543
    6. 'diff' → logprob: -9.75074577331543
    7. 'next' → logprob: -10.37574577331543
    8. '```' → logprob: -10.50074577331543
    9. ',' → logprob: -10.75074577331543
    10. '(' → logprob: -10.75074577331543

Token 1216: ' 「' (ID: 36702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040676239877939224
    2. 'min' → logprob: -3.6656763553619385
    3. 'best' → logprob: -4.665676116943359
    4. 'candidate' → logprob: -7.040676116943359
    5. 'm' → logprob: -7.415676116943359
    6. 'space' → logprob: -7.540676116943359
    7. 'possible' → logprob: -7.665676116943359
    8. 'available' → logprob: -7.790676116943359
    9. 'diff' → logprob: -7.915676116943359
    10. '```' → logprob: -8.29067611694336

Token 1217: '�' (ID: 51268)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.80035400390625
    2. 'space' → logprob: -1.30035400390625
    3. 'def' → logprob: -2.80035400390625
    4. 'diff' → logprob: -3.92535400390625
    5. 'remaining' → logprob: -3.92535400390625
    6. '   ' → logprob: -4.17535400390625
    7. '#' → logprob: -4.42535400390625
    8. 'bottom' → logprob: -4.55035400390625
    9. ' car' → logprob: -4.80035400390625
    10. 'c' → logprob: -4.80035400390625

Token 1218: '�' (ID: 238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3938665390014648
    2. '車' → logprob: -1.7688665390014648
    3. '   ' → logprob: -1.8938665390014648
    4. 'park' → logprob: -2.518866539001465
    5. 'def' → logprob: -2.768866539001465
    6. '       ' → logprob: -2.768866539001465
    7. '#' → logprob: -3.768866539001465
    8. '空' → logprob: -4.018866539001465
    9. '
' → logprob: -4.268866539001465
    10. ' ' → logprob: -4.643866539001465

Token 1219: '車' (ID: 35939)
  Prédit: '車'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '車' → logprob: -0.5996505618095398
    2. 'park' → logprob: -1.5996506214141846
    3. 'def' → logprob: -2.3496506214141846
    4. 'car' → logprob: -2.7246506214141846
    5. 'departure' → logprob: -3.2246506214141846
    6. '   ' → logprob: -4.4746503829956055
    7. 'space' → logprob: -5.0996503829956055
    8. 'depart' → logprob: -5.3496503829956055
    9. '       ' → logprob: -5.4746503829956055
    10. 'top' → logprob: -5.7246503829956055

Token 1220: 'して' (ID: 22440)
  Prédit: 'し'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'し' → logprob: -0.3706657886505127
    2. 'して' → logprob: -1.6206657886505127
    3. 'for' → logprob: -2.7456657886505127
    4. '   ' → logprob: -5.245665550231934
    5. 'する' → logprob: -5.245665550231934
    6. 'with' → logprob: -5.370665550231934
    7. 'in' → logprob: -5.620665550231934
    8. '_time' → logprob: -5.620665550231934
    9. '       ' → logprob: -5.870665550231934
    10. 'def' → logprob: -5.995665550231934

Token 1221: 'ある' (ID: 73977)
  Prédit: 'ある'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ある' → logprob: -0.25359484553337097
    2. 'よう' → logprob: -2.7535948753356934
    3. 'あ' → logprob: -3.5035948753356934
    4. 'いる' → logprob: -3.7535948753356934
    5. 'して' → logprob: -3.8785948753356934
    6. 'し' → logprob: -4.128594875335693
    7. 'て' → logprob: -4.253594875335693
    8. 'いて' → logprob: -4.628594875335693
    9. '```' → logprob: -5.128594875335693
    10. 'あり' → logprob: -5.128594875335693

Token 1222: 'ど' (ID: 18524)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.07588626444339752
    2. '車' → logprob: -2.9508862495422363
    3. 'cars' → logprob: -4.700886249542236
    4. 'space' → logprob: -4.825886249542236
    5. ' car' → logprob: -6.450886249542236
    6. 'spaces' → logprob: -7.450886249542236
    7. ' cars' → logprob: -8.200886726379395
    8. '_car' → logprob: -8.700886726379395
    9. 'スペ' → logprob: -8.825886726379395
    10. '```' → logprob: -9.325886726379395

Token 1223: 'の' (ID: 3385)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.16342373192310333
    2. ' space' → logprob: -3.163423776626587
    3. 'こ' → logprob: -3.788423776626587
    4. 'く' → logprob: -3.913423776626587
    5. 'の' → logprob: -4.038423538208008
    6. 'car' → logprob: -5.163423538208008
    7. 'る' → logprob: -5.288423538208008
    8. 'う' → logprob: -5.413423538208008
    9. '空' → logprob: -5.538423538208008
    10. 'す' → logprob: -5.663423538208008

Token 1224: '車' (ID: 35939)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.6187841892242432
    2. 'car' → logprob: -0.8687841892242432
    3. '車' → logprob: -3.493784189224243
    4. ' space' → logprob: -6.243783950805664
    5. 'spaces' → logprob: -6.618783950805664
    6. 'スペ' → logprob: -6.618783950805664
    7. '空' → logprob: -6.993783950805664
    8. 'か' → logprob: -6.993783950805664
    9. 'こ' → logprob: -7.118783950805664
    10. ' car' → logprob: -7.868783950805664

Token 1225: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.016295114532113075
    2. 'が' → logprob: -5.641294956207275
    3. '   ' → logprob: -5.891294956207275
    4. '.remaining' → logprob: -5.891294956207275
    5. ' の' → logprob: -6.016294956207275
    6. '.' → logprob: -7.016294956207275
    7. 'に' → logprob: -8.016295433044434
    8. 'か' → logprob: -8.016295433044434
    9. 'で' → logprob: -8.266295433044434
    10. 'も' → logprob: -8.391295433044434

Token 1226: '残' (ID: 65394)
  Prédit: '残'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '残' → logprob: -0.323021799325943
    2. 'remaining' → logprob: -1.5730217695236206
    3. 'park' → logprob: -3.44802188873291
    4. 'departure' → logprob: -3.82302188873291
    5. 'depart' → logprob: -5.32302188873291
    6. ' remaining' → logprob: -6.07302188873291
    7. 'remain' → logprob: -6.69802188873291
    8. 'rem' → logprob: -6.94802188873291
    9. '\xe9\xa7' → logprob: -7.07302188873291
    10. 'parking' → logprob: -8.07302188873291

Token 1227: 'り' (ID: 7297)
  Prédit: 'り'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.004244366195052862
    2. '車' → logprob: -5.879244327545166
    3. 'bottom' → logprob: -8.879244804382324
    4. 'る' → logprob: -9.254244804382324
    5. 'て' → logprob: -9.254244804382324
    6. 'って' → logprob: -9.629244804382324
    7. '量' → logprob: -9.879244804382324
    8. '   ' → logprob: -9.879244804382324
    9. 'return' → logprob: -10.004244804382324
    10. '#' → logprob: -10.129244804382324

Token 1228: '�' (ID: 51268)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8517554998397827
    2. '時間' → logprob: -1.4767554998397827
    3. 'park' → logprob: -1.9767554998397827
    4. '_time' → logprob: -2.8517556190490723
    5. 'departure' → logprob: -3.4767556190490723
    6. '_' → logprob: -3.9767556190490723
    7. '```' → logprob: -3.9767556190490723
    8. ' ' → logprob: -4.226755619049072
    9. '車' → logprob: -4.476755619049072
    10. 'の' → logprob: -4.976755619049072

Token 1229: '�' (ID: 238)
  Prédit: '車'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '車' → logprob: -0.018842967227101326
    2. '時間' → logprob: -5.143843173980713
    3. 'park' → logprob: -5.643843173980713
    4. '\xe9\xa7' → logprob: -5.768843173980713
    5. 'ー' → logprob: -6.018843173980713
    6. '车' → logprob: -7.643843173980713
    7. 'parking' → logprob: -7.893843173980713
    8. 'time' → logprob: -8.268842697143555
    9. 'く' → logprob: -8.643842697143555
    10. '園' → logprob: -8.643842697143555

Token 1230: '車' (ID: 35939)
  Prédit: '車'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '車' → logprob: -0.22441361844539642
    2. '時間' → logprob: -2.2244136333465576
    3. 'park' → logprob: -2.9744136333465576
    4. 'time' → logprob: -3.7244136333465576
    5. '_time' → logprob: -5.2244133949279785
    6. 'car' → logprob: -5.9744133949279785
    7. '\xe9\xa7' → logprob: -6.0994133949279785
    8. '   ' → logprob: -6.0994133949279785
    9. 'parking' → logprob: -6.8494133949279785
    10. ' ' → logprob: -7.0994133949279785

Token 1231: '時間' (ID: 31402)
  Prédit: '時間'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '時間' → logprob: -0.015034139156341553
    2. 'time' → logprob: -4.265034198760986
    3. 'duration' → logprob: -7.640034198760986
    4. '_time' → logprob: -9.265033721923828
    5. '时间' → logprob: -9.390033721923828
    6. '   ' → logprob: -10.265033721923828
    7. 'times' → logprob: -10.515033721923828
    8. '```' → logprob: -10.890033721923828
    9. '期間' → logprob: -11.265033721923828
    10. '時' → logprob: -11.390033721923828

Token 1232: 'も' (ID: 8446)
  Prédit: 'が'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'が' → logprob: -0.08107422292232513
    2. 'も' → logprob: -3.0810742378234863
    3. '以上' → logprob: -4.956074237823486
    4. '       ' → logprob: -5.331074237823486
    5. 'の' → logprob: -5.331074237823486
    6. '   ' → logprob: -5.456074237823486
    7. 'より' → logprob: -6.206074237823486
    8. 'を' → logprob: -6.331074237823486
    9. 'でも' → logprob: -7.081074237823486
    10. ' が' → logprob: -7.331074237823486

Token 1233: '�' (ID: 51268)
  Prédit: '車'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '車' → logprob: -1.3976058959960938
    2. '��' → logprob: -1.5226058959960938
    3. '\xe9\xa7' → logprob: -1.8976058959960938
    4. '短' → logprob: -3.0226058959960938
    5. 'す' → logprob: -3.2726058959960938
    6. 'ない' → logprob: -3.6476058959960938
    7. '新' → logprob: -3.7726058959960938
    8. '到' → logprob: -3.8976058959960938
    9. '出' → logprob: -4.147605895996094
    10. 'その' → logprob: -4.272605895996094

Token 1234: '�' (ID: 238)
  Prédit: 'く'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'く' → logprob: -1.2364065647125244
    2. '車' → logprob: -1.4864065647125244
    3. 'う' → logprob: -2.1114065647125244
    4. 'い' → logprob: -2.6114065647125244
    5. 'None' → logprob: -2.7364065647125244
    6. '0' → logprob: -2.7364065647125244
    7. 'な' → logprob: -3.9864065647125244
    8. '\xe9\xa7' → logprob: -4.486406326293945
    9. 'ゃ' → logprob: -4.736406326293945
    10. 'ん' → logprob: -4.986406326293945

Token 1235: '車' (ID: 35939)
  Prédit: '車'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '車' → logprob: -0.004863938316702843
    2. 'park' → logprob: -6.004863739013672
    3. '车' → logprob: -7.254863739013672
    4. 'car' → logprob: -8.254863739013672
    5. 'か' → logprob: -8.254863739013672
    6. '\xe9\xa7' → logprob: -8.879863739013672
    7. '   ' → logprob: -9.129863739013672
    8. '園' → logprob: -9.254863739013672
    9. 'ー' → logprob: -9.504863739013672
    10. '
' → logprob: -9.754863739013672

Token 1236: 'し' (ID: 3829)
  Prédit: 'し'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'し' → logprob: -0.08053894340991974
    2. '時間' → logprob: -3.2055389881134033
    3. 'time' → logprob: -4.705538749694824
    4. '   ' → logprob: -4.955538749694824
    5. 'して' → logprob: -5.080538749694824
    6. 'する' → logprob: -5.330538749694824
    7. 'の' → logprob: -6.705538749694824
    8. 'duration' → logprob: -6.705538749694824
    9. 'を' → logprob: -6.955538749694824
    10. 'try' → logprob: -7.080538749694824

Token 1237: 'よう' (ID: 72683)
  Prédit: 'よう'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'よう' → logprob: -0.21108482778072357
    2. 'う' → logprob: -2.0860848426818848
    3. 'て' → logprob: -3.0860848426818848
    4. 'ょう' → logprob: -4.086084842681885
    5. 'よ' → logprob: -6.836084842681885
    6. '```' → logprob: -8.086084365844727
    7. 'し' → logprob: -8.711084365844727
    8. '
' → logprob: -8.836084365844727
    9. 'して' → logprob: -8.836084365844727
    10. 'ない' → logprob: -8.836084365844727

Token 1238: 'として' (ID: 176315)
  Prédit: 'て'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -0.6195085048675537
    2. 'よう' → logprob: -0.8695085048675537
    3. 'して' → logprob: -3.4945085048675537
    4. '   ' → logprob: -5.369508743286133
    5. 'ない' → logprob: -6.619508743286133
    6. 'として' → logprob: -6.744508743286133
    7. '```' → logprob: -6.744508743286133
    8. '       ' → logprob: -6.994508743286133
    9. 'し' → logprob: -7.494508743286133
    10. 'いて' → logprob: -7.494508743286133

Token 1239: 'いる' (ID: 86169)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.6951274275779724
    2. 'いる' → logprob: -0.6951274275779724
    3. 'いて' → logprob: -7.445127487182617
    4. 'る' → logprob: -7.695127487182617
    5. 'して' → logprob: -8.820127487182617
    6. 'ない' → logprob: -8.945127487182617
    7. '   ' → logprob: -9.070127487182617
    8. 'はい' → logprob: -9.570127487182617
    9. 'て' → logprob: -9.820127487182617
    10. '#' → logprob: -9.820127487182617

Token 1240: '車' (ID: 35939)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.019635330885648727
    2. '車' → logprob: -4.019635200500488
    3. 'いる' → logprob: -7.144635200500488
    4. 'して' → logprob: -8.519635200500488
    5. 'の' → logprob: -9.269635200500488
    6. ' car' → logprob: -9.394635200500488
    7. 'いて' → logprob: -10.144635200500488
    8. 'て' → logprob: -10.269635200500488
    9. 'る' → logprob: -10.644635200500488
    10. '(car' → logprob: -10.644635200500488

Token 1241: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.6401450037956238
    2. '.' → logprob: -0.7651450037956238
    3. '.depart' → logprob: -5.3901448249816895
    4. 'より' → logprob: -6.5151448249816895
    5. '.car' → logprob: -7.3901448249816895
    6. ' の' → logprob: -8.765145301818848
    7. '.par' → logprob: -8.890145301818848
    8. '   ' → logprob: -8.890145301818848
    9. 'が' → logprob: -9.640145301818848
    10. 'を' → logprob: -10.265145301818848

Token 1242: '�' (ID: 51268)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.032536830753088
    2. 'depart' → logprob: -4.40753698348999
    3. 'departure' → logprob: -4.78253698348999
    4. 'arrival' → logprob: -6.40753698348999
    5. '```' → logprob: -6.65753698348999
    6. 'car' → logprob: -6.90753698348999
    7. '.' → logprob: -7.03253698348999
    8. '車' → logprob: -7.15753698348999
    9. ' ' → logprob: -7.28253698348999
    10. '.depart' → logprob: -7.28253698348999

Token 1243: '�' (ID: 238)
  Prédit: '車'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '車' → logprob: -0.693686842918396
    2. 'park' → logprob: -1.318686842918396
    3. 'ー' → logprob: -2.5686869621276855
    4. '\xe9\xa7' → logprob: -2.8186869621276855
    5. '�' → logprob: -3.9436869621276855
    6. '��' → logprob: -4.6936869621276855
    7. '園' → logprob: -4.6936869621276855
    8. 'ゃ' → logprob: -4.8186869621276855
    9. 'ャ' → logprob: -4.9436869621276855
    10. '```' → logprob: -5.5686869621276855

Token 1244: '車' (ID: 35939)
  Prédit: '車'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '車' → logprob: -0.2926005721092224
    2. 'park' → logprob: -1.5426006317138672
    3. '時間' → logprob: -3.417600631713867
    4. '\xe9\xa7' → logprob: -6.292600631713867
    5. '園' → logprob: -7.292600631713867
    6. '车' → logprob: -7.417600631713867
    7. '```' → logprob: -7.417600631713867
    8. '_' → logprob: -8.292600631713867
    9. '駅' → logprob: -8.292600631713867
    10. 'duration' → logprob: -8.292600631713867

Token 1245: '時間' (ID: 31402)
  Prédit: '時間'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '時間' → logprob: -0.0053924149833619595
    2. 'duration' → logprob: -5.755392551422119
    3. 'time' → logprob: -6.255392551422119
    4. '_time' → logprob: -9.755392074584961
    5. '期間' → logprob: -9.880392074584961
    6. '   ' → logprob: -10.005392074584961
    7. '_duration' → logprob: -10.505392074584961
    8. '时间' → logprob: -10.755392074584961
    9. 'の' → logprob: -10.880392074584961
    10. '以上' → logprob: -11.005392074584961

Token 1246: '未' (ID: 16392)
  Prédit: '以上'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '以上' → logprob: -0.10988135635852814
    2. 'より' → logprob: -2.7348814010620117
    3. '以下' → logprob: -4.109881401062012
    4. '   ' → logprob: -4.734881401062012
    5. 'を' → logprob: -5.234881401062012
    6. '未' → logprob: -5.359881401062012
    7. '       ' → logprob: -6.984881401062012
    8. '-' → logprob: -7.359881401062012
    9. ' ' → logprob: -7.359881401062012
    10. '```' → logprob: -8.484881401062012

Token 1247: '満' (ID: 103646)
  Prédit: '満'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '満' → logprob: -8.97155623533763e-05
    2. 'def' → logprob: -10.750089645385742
    3. '```' → logprob: -11.875089645385742
    4. 'い' → logprob: -12.000089645385742
    5. '_' → logprob: -12.375089645385742
    6. 's' → logprob: -12.750089645385742
    7. 'み' → logprob: -12.750089645385742
    8. '上' → logprob: -12.875089645385742
    9. '以下' → logprob: -12.875089645385742
    10. '到' → logprob: -13.000089645385742

Token 1248: 'で' (ID: 4344)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8130135536193848
    2. '):
' → logprob: -2.0630135536193848
    3. ':
' → logprob: -2.4380135536193848
    4. '以下' → logprob: -2.4380135536193848
    5. 'の' → logprob: -2.9380135536193848
    6. 'より' → logprob: -3.5630135536193848
    7. 'で' → logprob: -3.8130135536193848
    8. ':' → logprob: -3.8130135536193848
    9. '           ' → logprob: -4.313013553619385
    10. 'の場合' → logprob: -4.313013553619385

Token 1249: 'ある' (ID: 73977)
  Prédit: 'ある'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ある' → logprob: -0.31326842308044434
    2. 'car' → logprob: -2.9382684230804443
    3. 'す' → logprob: -3.3132684230804443
    4. 'ない' → logprob: -3.4382684230804443
    5. 'あ' → logprob: -3.4382684230804443
    6. 'return' → logprob: -3.6882684230804443
    7. 'いる' → logprob: -4.313268661499023
    8. 'ありません' → logprob: -4.563268661499023
    9. 'る' → logprob: -5.188268661499023
    10. '```' → logprob: -5.188268661499023

Token 1250: '場合' (ID: 72486)
  Prédit: '場合'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '場合' → logprob: -0.017612356692552567
    2. 'と' → logprob: -4.517612457275391
    3. 'なら' → logprob: -6.392612457275391
    4. 'の場合' → logprob: -6.642612457275391
    5. '):
' → logprob: -7.517612457275391
    6. 'ら' → logprob: -7.892612457275391
    7. '   ' → logprob: -8.39261245727539
    8. '       ' → logprob: -8.76761245727539
    9. 'です' → logprob: -8.89261245727539
    10. 'の' → logprob: -9.01761245727539

Token 1251: '、その' (ID: 148386)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7625260353088379
    2. ':' → logprob: -1.137526035308838
    3. ':
' → logprob: -1.887526035308838
    4. '):
' → logprob: -3.887526035308838
    5. ',' → logprob: -4.012526035308838
    6. '):' → logprob: -4.762526035308838
    7. '<|end|>' → logprob: -5.262526035308838
    8. ')' → logprob: -6.637526035308838
    9. '           ' → logprob: -7.262526035308838
    10. '        
' → logprob: -7.262526035308838

Token 1252: '差' (ID: 35142)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9108986854553223
    2. '#' → logprob: -1.2858986854553223
    3. 'spaces' → logprob: -2.5358986854553223
    4. 'def' → logprob: -2.6608986854553223
    5. 'car' → logprob: -2.9108986854553223
    6. 'return' → logprob: -3.9108986854553223
    7. 'remaining' → logprob: -3.9108986854553223
    8. 'diff' → logprob: -4.535898685455322
    9. '_min' → logprob: -4.660898685455322
    10. 'best' → logprob: -5.160898685455322

Token 1253: 'が' (ID: 6632)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.541559636592865
    2. ' =' → logprob: -1.6665596961975098
    3. 'が' → logprob: -2.2915596961975098
    4. 'は' → logprob: -3.2915596961975098
    5. ' is' → logprob: -3.4165596961975098
    6. 'is' → logprob: -4.16655969619751
    7. ')' → logprob: -5.04155969619751
    8. '           ' → logprob: -5.16655969619751
    9. 'の' → logprob: -5.66655969619751
    10. '       ' → logprob: -5.66655969619751

Token 1254: '一' (ID: 2432)
  Prédit: '一'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '一' → logprob: -0.25270092487335205
    2. '最' → logprob: -1.877700924873352
    3. '最大' → logprob: -3.3777008056640625
    4. 'す' → logprob: -4.1277008056640625
    5. '1' → logprob: -5.6277008056640625
    6. 'もっと' → logprob: -6.1277008056640625
    7. 'car' → logprob: -6.2527008056640625
    8. '   ' → logprob: -6.5027008056640625
    9. '全' → logprob: -6.5027008056640625
    10. 'max' → logprob: -6.6277008056640625

Token 1255: '番' (ID: 30357)
  Prédit: '番'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '番' → logprob: -0.10808347910642624
    2. 'small' → logprob: -2.483083486557007
    3. '一' → logprob: -5.608083248138428
    4. '小' → logprob: -5.733083248138428
    5. '   ' → logprob: -6.108083248138428
    6. '       ' → logprob: -6.108083248138428
    7. '最' → logprob: -6.233083248138428
    8. '           ' → logprob: -6.358083248138428
    9. 'min' → logprob: -7.733083248138428
    10. 'best' → logprob: -7.983083248138428

Token 1256: '小' (ID: 5820)
  Prédit: '大'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '大' → logprob: -0.0649532750248909
    2. '小' → logprob: -3.314953327178955
    3. 'large' → logprob: -3.814953327178955
    4. 'small' → logprob: -5.814953327178955
    5. '
' → logprob: -6.814953327178955
    6. '       ' → logprob: -9.439952850341797
    7. '#' → logprob: -9.939952850341797
    8. '```' → logprob: -10.189952850341797
    9. '_large' → logprob: -10.189952850341797
    10. 'big' → logprob: -10.689952850341797

Token 1257: 'さい' (ID: 36201)
  Prédit: 'さい'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'さい' → logprob: -0.005558401811867952
    2. 'ない' → logprob: -6.005558490753174
    3. 'さ' → logprob: -6.130558490753174
    4. '
' → logprob: -8.755558013916016
    5. 'い' → logprob: -9.005558013916016
    6. 'しい' → logprob: -9.130558013916016
    7. '#' → logprob: -9.505558013916016
    8. '   ' → logprob: -9.630558013916016
    9. '```' → logprob: -9.755558013916016
    10. 'な' → logprob: -10.255558013916016

Token 1258: '�' (ID: 51268)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.141719102859497
    2. 'spaces' → logprob: -1.516719102859497
    3. 'None' → logprob: -1.641719102859497
    4. '空' → logprob: -1.766719102859497
    5. 'car' → logprob: -4.641718864440918
    6. '_spaces' → logprob: -4.766718864440918
    7. 'self' → logprob: -4.891718864440918
    8. '��' → logprob: -5.266718864440918
    9. '```' → logprob: -5.266718864440918
    10. 'parking' → logprob: -5.391718864440918

Token 1259: '�' (ID: 238)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.022996900603175163
    2. 's' → logprob: -4.77299690246582
    3. '空' → logprob: -5.77299690246582
    4. 'e' → logprob: -6.77299690246582
    5. ' space' → logprob: -6.77299690246582
    6. '(space' → logprob: -6.77299690246582
    7. '```' → logprob: -7.52299690246582
    8. 'スペ' → logprob: -7.58549690246582
    9. '
' → logprob: -7.64799690246582
    10. 'の' → logprob: -7.77299690246582

Token 1260: '車' (ID: 35939)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.03759715333580971
    2. 'スペ' → logprob: -4.037597179412842
    3. '車' → logprob: -4.662597179412842
    4. 'car' → logprob: -5.412597179412842
    5. '空' → logprob: -6.787597179412842
    6. '_space' → logprob: -6.787597179412842
    7. '
' → logprob: -7.287597179412842
    8. '```' → logprob: -7.537597179412842
    9. 'spaces' → logprob: -7.912597179412842
    10. 'park' → logprob: -8.287596702575684

Token 1261: 'スペ' (ID: 192474)
  Prédit: 'スペ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スペ' → logprob: -0.1662987768650055
    2. 'space' → logprob: -1.916298747062683
    3. '_space' → logprob: -6.166298866271973
    4. '       ' → logprob: -7.166298866271973
    5. '```' → logprob: -7.416298866271973
    6. '   ' → logprob: -8.291298866271973
    7. 'の' → logprob: -8.416298866271973
    8. ' space' → logprob: -8.416298866271973
    9. 'spaces' → logprob: -8.541298866271973
    10. 'する' → logprob: -8.666298866271973

Token 1262: 'ース' (ID: 25439)
  Prédit: 'ース'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ース' → logprob: -0.024446990340948105
    2. '```' → logprob: -3.899446964263916
    3. 'ー' → logprob: -6.399446964263916
    4. 'ス' → logprob: -7.149446964263916
    5. '   ' → logprob: -7.774446964263916
    6. 'ace' → logprob: -7.899446964263916
    7. '       ' → logprob: -8.399447441101074
    8. '#' → logprob: -9.649447441101074
    9. '    
' → logprob: -10.149447441101074
    10. '``' → logprob: -10.399447441101074

Token 1263: 'に' (ID: 5280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.886239230632782
    2. 'の' → logprob: -1.8862392902374268
    3. 'を' → logprob: -2.0112392902374268
    4. ')' → logprob: -3.0112392902374268
    5. ':' → logprob: -3.5112392902374268
    6. 'が' → logprob: -3.6362392902374268
    7. 'で' → logprob: -4.011239051818848
    8. '):
' → logprob: -4.011239051818848
    9. 'with' → logprob: -4.011239051818848
    10. 'に' → logprob: -4.136239051818848

Token 1264: '�' (ID: 51268)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.024166464805603027
    2. 'park' → logprob: -3.8991665840148926
    3. '   ' → logprob: -7.274166584014893
    4. 'return' → logprob: -7.524166584014893
    5. '車' → logprob: -7.524166584014893
    6. 'parking' → logprob: -8.024166107177734
    7. '       ' → logprob: -8.024166107177734
    8. '\xe9\xa7' → logprob: -8.524166107177734
    9. '
' → logprob: -8.899166107177734
    10. '```' → logprob: -9.274166107177734

Token 1265: '�' (ID: 238)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.370578408241272
    2. 'ん' → logprob: -2.4955782890319824
    3. '車' → logprob: -3.1205782890319824
    4. 'car' → logprob: -3.1205782890319824
    5. 'し' → logprob: -3.6205782890319824
    6. '=' → logprob: -4.620578289031982
    7. 'こ' → logprob: -4.870578289031982
    8. 'ー' → logprob: -5.120578289031982
    9. 'を' → logprob: -5.495578289031982
    10. 'か' → logprob: -5.495578289031982

Token 1266: '車' (ID: 35939)
  Prédit: '車'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '車' → logprob: -0.3186204731464386
    2. 'park' → logprob: -2.318620443344116
    3. 'car' → logprob: -2.443620443344116
    4. 'します' → logprob: -2.943620443344116
    5. 'し' → logprob: -4.693620681762695
    6. '```' → logprob: -4.818620681762695
    7. 'か' → logprob: -5.443620681762695
    8. '车' → logprob: -6.193620681762695
    9. 'ます' → logprob: -6.443620681762695
    10. 'ります' → logprob: -6.818620681762695

Token 1267: 'します' (ID: 38720)
  Prédit: 'します'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'します' → logprob: -0.17078223824501038
    2. '       ' → logprob: -2.7957823276519775
    3. 'し' → logprob: -3.6707823276519775
    4. 'を' → logprob: -4.420782089233398
    5. ')' → logprob: -4.545782089233398
    6. 'する' → logprob: -4.545782089233398
    7. 'しま' → logprob: -4.795782089233398
    8. '   ' → logprob: -5.420782089233398
    9. '```' → logprob: -5.545782089233398
    10. 'が' → logprob: -6.295782089233398

Token 1268: '。」
' (ID: 195880)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007086641620844603
    2. '
' → logprob: -6.507086753845215
    3. ')' → logprob: -7.007086753845215
    4. ':' → logprob: -7.382086753845215
    5. '(car' → logprob: -7.507086753845215
    6. '   ' → logprob: -7.632086753845215
    7. '):
' → logprob: -7.757086753845215
    8. ',' → logprob: -7.757086753845215
    9. '(' → logprob: -7.757086753845215
    10. '):' → logprob: -8.507086753845215

Token 1269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004724987084046006
    2. '```' → logprob: -7.875472545623779
    3. '[' → logprob: -10.250472068786621
    4. '        
' → logprob: -11.375472068786621
    5. '(' → logprob: -11.500472068786621
    6. ')' → logprob: -11.875472068786621
    7. '`' → logprob: -12.375472068786621
    8. 'space' → logprob: -12.625472068786621
    9. '   ' → logprob: -12.625472068786621
    10. '
' → logprob: -13.250472068786621

Token 1270: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030376052018254995
    2. 'min' → logprob: -6.128037452697754
    3. 'best' → logprob: -7.503037452697754
    4. 'diff' → logprob: -8.753037452697754
    5. 'm' → logprob: -10.378037452697754
    6. 'candidate' → logprob: -10.753037452697754
    7. 'space' → logprob: -10.878037452697754
    8. 'car' → logprob: -11.628037452697754
    9. 'remaining' → logprob: -11.878037452697754
    10. 'def' → logprob: -12.128037452697754

Token 1271: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23407164216041565
    2. 'min' → logprob: -2.359071731567383
    3. 'best' → logprob: -2.609071731567383
    4. 'c' → logprob: -4.359071731567383
    5. 'diff' → logprob: -4.359071731567383
    6. 'candidate' → logprob: -4.734071731567383
    7. 'available' → logprob: -6.609071731567383
    8. 'remaining' → logprob: -6.984071731567383
    9. 'def' → logprob: -7.609071731567383
    10. 'spaces' → logprob: -7.859071731567383

Token 1272: 'か' (ID: 7128)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6909170150756836
    2. 'c' → logprob: -1.4409170150756836
    3. 'min' → logprob: -2.4409170150756836
    4. 'best' → logprob: -2.9409170150756836
    5. 'spaces' → logprob: -3.1909170150756836
    6. 'candidate' → logprob: -3.3159170150756836
    7. '#' → logprob: -4.565917015075684
    8. 'available' → logprob: -4.690917015075684
    9. 'diff' → logprob: -4.815917015075684
    10. 'def' → logprob: -5.940917015075684

Token 1273: 'つ' (ID: 18290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07275980710983276
    2. '#' → logprob: -4.572759628295898
    3. 'if' → logprob: -4.822759628295898
    4. 'best' → logprob: -4.947759628295898
    5. 'spaces' → logprob: -5.072759628295898
    6. 'def' → logprob: -5.447759628295898
    7. 'f' → logprob: -5.447759628295898
    8. 'for' → logprob: -5.447759628295898
    9. 'min' → logprob: -5.822759628295898
    10. '=' → logprob: -5.822759628295898

Token 1274: '条件' (ID: 59062)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.1149234771728516
    2. '       ' → logprob: -1.7399234771728516
    3. 'space' → logprob: -2.2399234771728516
    4. 'diff' → logprob: -2.4899234771728516
    5. '#' → logprob: -2.8649234771728516
    6. 'now' → logprob: -3.1149234771728516
    7. 'min' → logprob: -3.8649234771728516
    8. 'self' → logprob: -3.9899234771728516
    9. 'len' → logprob: -4.239923477172852
    10. ' car' → logprob: -4.364923477172852

Token 1275: 'に' (ID: 5280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13080936670303345
    2. '=' → logprob: -3.1308093070983887
    3. ' =' → logprob: -4.255809307098389
    4. 'def' → logprob: -4.630809307098389
    5. '   ' → logprob: -4.755809307098389
    6. '_' → logprob: -4.880809307098389
    7. ')' → logprob: -5.130809307098389
    8. ':' → logprob: -5.505809307098389
    9. '(self' → logprob: -5.755809307098389
    10. '        
' → logprob: -6.130809307098389

Token 1276: '合' (ID: 4377)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1315668225288391
    2. '   ' → logprob: -4.006567001342773
    3. 'for' → logprob: -4.131567001342773
    4. 'つ' → logprob: -5.006567001342773
    5. 'ありません' → logprob: -5.131567001342773
    6. '#' → logprob: -5.131567001342773
    7. 'is' → logprob: -5.256567001342773
    8. 'は' → logprob: -5.256567001342773
    9. '```' → logprob: -5.506567001342773
    10. 'まだ' → logprob: -5.631567001342773

Token 1277: 'う' (ID: 8574)
  Prédit: 'う'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.19120705127716064
    2. 'わせ' → logprob: -1.9412070512771606
    3. '致' → logprob: -4.191206932067871
    4. '```' → logprob: -5.191206932067871
    5. 'った' → logprob: -5.691206932067871
    6. 'わ' → logprob: -5.816206932067871
    7. 'えば' → logprob: -6.816206932067871
    8. 'い' → logprob: -8.191206932067871
    9. 'って' → logprob: -8.191206932067871
    10. 'います' → logprob: -8.191206932067871

Token 1278: 'もの' (ID: 122636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03400871902704239
    2. 'min' → logprob: -4.909008502960205
    3. 'best' → logprob: -5.034008502960205
    4. 'diff' → logprob: -5.159008502960205
    5. 'def' → logprob: -5.659008502960205
    6. 'car' → logprob: -6.159008502960205
    7. 'spaces' → logprob: -6.534008502960205
    8. 'available' → logprob: -6.909008502960205
    9. 'remaining' → logprob: -7.159008502960205
    10. 'space' → logprob: -7.284008502960205

Token 1279: '�' (ID: 98172)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000966487976256758
    2. 'min' → logprob: -8.12596607208252
    3. 'best' → logprob: -8.62596607208252
    4. 'def' → logprob: -9.50096607208252
    5. 'space' → logprob: -9.50096607208252
    6. 'diff' → logprob: -9.62596607208252
    7. 'candidate' → logprob: -9.87596607208252
    8. 'remaining' → logprob: -10.75096607208252
    9. 'available' → logprob: -10.87596607208252
    10. 'm' → logprob: -10.87596607208252

Token 1280: '�' (ID: 229)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8295083045959473
    2. ':' → logprob: -1.8295083045959473
    3. '   ' → logprob: -2.2045083045959473
    4. 'space' → logprob: -3.0795083045959473
    5. 'は' → logprob: -3.8295083045959473
    6. '       ' → logprob: -4.204508304595947
    7. ' =' → logprob: -4.204508304595947
    8. 'spaces' → logprob: -4.204508304595947
    9. ' ' → logprob: -4.329508304595947
    10. '    ' → logprob: -4.579508304595947

Token 1281: '数' (ID: 7135)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3540709316730499
    2. 'available' → logprob: -2.7290709018707275
    3. 'for' → logprob: -2.8540709018707275
    4. 'spaces' → logprob: -2.8540709018707275
    5. '空' → logprob: -3.9790709018707275
    6. '           ' → logprob: -4.354071140289307
    7. ':' → logprob: -4.854071140289307
    8. 'の' → logprob: -4.854071140289307
    9. '=' → logprob: -4.979071140289307
    10. '   ' → logprob: -5.729071140289307

Token 1282: 'あ' (ID: 10294)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055373008362948895
    2. ':' → logprob: -6.130537509918213
    3. '
' → logprob: -8.005537033081055
    4. 'min' → logprob: -8.255537033081055
    5. ':
' → logprob: -8.255537033081055
    6. '=' → logprob: -8.380537033081055
    7. 'def' → logprob: -8.505537033081055
    8. 'diff' → logprob: -8.630537033081055
    9. 'available' → logprob: -8.755537033081055
    10. 'best' → logprob: -8.755537033081055

Token 1283: 'れば' (ID: 139693)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.33094003796577454
    2. 'り' → logprob: -1.5809400081634521
    3. 'ります' → logprob: -3.080940008163452
    4. 'ら' → logprob: -4.580940246582031
    5. 'た' → logprob: -5.080940246582031
    6. '       ' → logprob: -5.705940246582031
    7. 'たり' → logprob: -5.955940246582031
    8. 'れば' → logprob: -6.080940246582031
    9. '   ' → logprob: -6.580940246582031
    10. '           ' → logprob: -7.455940246582031

Token 1284: '番号' (ID: 86656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08242695033550262
    2. 'min' → logprob: -3.3324270248413086
    3. 'best' → logprob: -3.5824270248413086
    4. 'available' → logprob: -5.832427024841309
    5. 'spaces' → logprob: -6.457427024841309
    6. 'diff' → logprob: -6.582427024841309
    7. 'candidate' → logprob: -6.707427024841309
    8. 'remaining' → logprob: -6.707427024841309
    9. 'car' → logprob: -6.957427024841309
    10. 'def' → logprob: -7.207427024841309

Token 1285: '小' (ID: 5820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.84214848279953
    2. '=' → logprob: -1.7171485424041748
    3. 'def' → logprob: -1.9671485424041748
    4. '   ' → logprob: -2.467148542404175
    5. ' =' → logprob: -2.842148542404175
    6. ')' → logprob: -4.092148303985596
    7. ':' → logprob: -4.217148303985596
    8. '_' → logprob: -4.217148303985596
    9. 'space' → logprob: -4.467148303985596
    10. '[' → logprob: -5.842148303985596

Token 1286: 'さい' (ID: 36201)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024625305086374283
    2. '=' → logprob: -5.524625301361084
    3. 'available' → logprob: -5.524625301361084
    4. ':' → logprob: -6.149625301361084
    5. 'best' → logprob: -6.149625301361084
    6. 'def' → logprob: -6.149625301361084
    7. 'min' → logprob: -6.774625301361084
    8. '(' → logprob: -6.774625301361084
    9. 'space' → logprob: -7.149625301361084
    10. ' =' → logprob: -7.274625301361084

Token 1287: '方' (ID: 4983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035512709291651845
    2. 'min' → logprob: -9.250354766845703
    3. 'm' → logprob: -9.500354766845703
    4. 'diff' → logprob: -10.000354766845703
    5. 'best' → logprob: -10.125354766845703
    6. 'space' → logprob: -10.250354766845703
    7. 'remaining' → logprob: -12.375354766845703
    8. '        
' → logprob: -12.375354766845703
    9. '
' → logprob: -12.625354766845703
    10. 'available' → logprob: -12.625354766845703

Token 1288: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001851058448664844
    2. ':' → logprob: -6.6268510818481445
    3. '=' → logprob: -9.501851081848145
    4. '(' → logprob: -9.626851081848145
    5. ' =' → logprob: -10.126851081848145
    6. ',' → logprob: -10.126851081848145
    7. '```' → logprob: -10.126851081848145
    8. 'space' → logprob: -10.376851081848145
    9. '        
' → logprob: -10.501851081848145
    10. ')' → logprob: -10.626851081848145

Token 1289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.7292167184641585e-05
    2. '```' → logprob: -11.500057220458984
    3. 'space' → logprob: -11.750057220458984
    4. '
' → logprob: -12.000057220458984
    5. '        
' → logprob: -12.250057220458984
    6. 'tokens' → logprob: -12.875057220458984
    7. ':' → logprob: -13.125057220458984
    8. 'best' → logprob: -13.125057220458984
    9. '=' → logprob: -13.250057220458984
    10. 'm' → logprob: -13.500057220458984

Token 1290: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034595211036503315
    2. 'space' → logprob: -8.625346183776855
    3. 'diff' → logprob: -10.125346183776855
    4. 'best' → logprob: -10.125346183776855
    5. 'min' → logprob: -10.750346183776855
    6. 'now' → logprob: -11.750346183776855
    7. 'remaining' → logprob: -11.750346183776855
    8. 'car' → logprob: -11.875346183776855
    9. 'm' → logprob: -12.000346183776855
    10. '```' → logprob: -12.250346183776855

Token 1291: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30579066276550293
    2. 'c' → logprob: -2.055790662765503
    3. 'best' → logprob: -3.180790662765503
    4. 'candidate' → logprob: -3.430790662765503
    5. 'spaces' → logprob: -3.555790662765503
    6. 'min' → logprob: -3.930790662765503
    7. 'diff' → logprob: -5.680790901184082
    8. '#' → logprob: -6.180790901184082
    9. 'available' → logprob: -6.430790901184082
    10. 'space' → logprob: -7.055790901184082

Token 1292: ' consider' (ID: 3331)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37210774421691895
    2. 'def' → logprob: -2.372107744216919
    3. '   ' → logprob: -2.622107744216919
    4. 'for' → logprob: -4.37210750579834
    5. 'min' → logprob: -4.37210750579834
    6. '
' → logprob: -4.62210750579834
    7. '=' → logprob: -4.74710750579834
    8. 'return' → logprob: -4.99710750579834
    9. 'spaces' → logprob: -4.99710750579834
    10. 's' → logprob: -5.24710750579834

Token 1293: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.028172492980957
    2. 'min' → logprob: -1.903172492980957
    3. 'available' → logprob: -2.528172492980957
    4. 'c' → logprob: -2.653172492980957
    5. 'spaces' → logprob: -2.778172492980957
    6. 'empty' → logprob: -2.778172492980957
    7. 'car' → logprob: -2.903172492980957
    8. 'candidate' → logprob: -2.903172492980957
    9. 'remaining' → logprob: -3.528172492980957
    10. 'best' → logprob: -4.153172492980957

Token 1294: ' spaces' (ID: 18608)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.8452271819114685
    2. 'space' → logprob: -1.3452272415161133
    3. 'c' → logprob: -2.3452272415161133
    4. 'empty' → logprob: -2.9702272415161133
    5. 'car' → logprob: -3.0952272415161133
    6. 'available' → logprob: -3.5952272415161133
    7. ' spaces' → logprob: -3.8452272415161133
    8. 'candidate' → logprob: -3.9702272415161133
    9. 'cars' → logprob: -4.470227241516113
    10. '       ' → logprob: -5.345227241516113

Token 1295: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02197360247373581
    2. 'diff' → logprob: -5.396973609924316
    3. 'min' → logprob: -5.396973609924316
    4. 'm' → logprob: -6.146973609924316
    5. 'best' → logprob: -6.646973609924316
    6. 'car' → logprob: -6.896973609924316
    7. ',' → logprob: -7.021973609924316
    8. 'def' → logprob: -7.021973609924316
    9. 'available' → logprob: -7.396973609924316
    10. ')' → logprob: -7.646973609924316

Token 1296: ' ' (ID: 220)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.027751153334975243
    2. 'car' → logprob: -4.4027509689331055
    3. 'bottom' → logprob: -5.2777509689331055
    4. ' one' → logprob: -5.4027509689331055
    5. 'cars' → logprob: -6.7777509689331055
    6. 'at' → logprob: -7.1527509689331055
    7. '(' → logprob: -7.4027509689331055
    8. 'a' → logprob: -7.9027509689331055
    9. 'space' → logprob: -7.9027509689331055
    10. '(car' → logprob: -8.152750968933105

Token 1297: '1' (ID: 16)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.05380117893219
    2. 'one' → logprob: -1.42880117893219
    3. 'space' → logprob: -1.80380117893219
    4. '(space' → logprob: -2.6788010597229004
    5. 'self' → logprob: -2.8038010597229004
    6. '(car' → logprob: -3.0538010597229004
    7. 'any' → logprob: -4.4288010597229
    8. '(self' → logprob: -4.4288010597229
    9. '(' → logprob: -4.4288010597229
    10. 'len' → logprob: -5.3038010597229

Token 1298: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3861275017261505
    2. '_car' → logprob: -1.3861274719238281
    3. ')' → logprob: -4.136127471923828
    4. ' car' → logprob: -4.636127471923828
    5. '.car' → logprob: -4.886127471923828
    6. '   ' → logprob: -5.261127471923828
    7. ':' → logprob: -5.386127471923828
    8. '       ' → logprob: -5.386127471923828
    9. '車' → logprob: -5.761127471923828
    10. '_' → logprob: -6.011127471923828

Token 1299: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008817244321107864
    2. 'spaces' → logprob: -5.883817195892334
    3. '   ' → logprob: -7.133817195892334
    4. 'def' → logprob: -7.633817195892334
    5. ' spaces' → logprob: -7.633817195892334
    6. '```' → logprob: -7.758817195892334
    7. '(self' → logprob: -8.008817672729492
    8. 'self' → logprob: -8.133817672729492
    9. '(' → logprob: -8.133817672729492
    10. ':' → logprob: -8.383817672729492

Token 1300: 'because' (ID: 53081)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3696238994598389
    2. '       ' → logprob: -1.6196238994598389
    3. 'spaces' → logprob: -1.6196238994598389
    4. 'one' → logprob: -2.244623899459839
    5. ' spaces' → logprob: -3.494623899459839
    6. 'self' → logprob: -3.744623899459839
    7. 'space' → logprob: -3.869623899459839
    8. ' one' → logprob: -4.119624137878418
    9. 'car' → logprob: -4.244624137878418
    10. ']' → logprob: -4.244624137878418

Token 1301: ' if' (ID: 538)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.39853230118751526
    2. 'the' → logprob: -1.8985322713851929
    3. 'self' → logprob: -2.2735323905944824
    4. 'we' → logprob: -4.148532390594482
    5. ' self' → logprob: -4.273532390594482
    6. ' the' → logprob: -4.398532390594482
    7. ' car' → logprob: -5.023532390594482
    8. 'space' → logprob: -5.898532390594482
    9. 'that' → logprob: -6.023532390594482
    10. 'spaces' → logprob: -6.023532390594482

Token 1302: ' no' (ID: 860)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4063931107521057
    2. 'space' → logprob: -1.531393051147461
    3. 'we' → logprob: -3.531393051147461
    4. 'the' → logprob: -3.656393051147461
    5. 'len' → logprob: -4.406393051147461
    6. ' space' → logprob: -4.906393051147461
    7. 'self' → logprob: -5.156393051147461
    8. 'a' → logprob: -5.281393051147461
    9. 'there' → logprob: -5.406393051147461
    10. ' car' → logprob: -5.531393051147461

Token 1303: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.24086527526378632
    2. ' car' → logprob: -1.9908652305603027
    3. 'cars' → logprob: -3.6158652305603027
    4. ' cars' → logprob: -3.7408652305603027
    5. '_car' → logprob: -4.865865230560303
    6. '車' → logprob: -5.115865230560303
    7. 'space' → logprob: -5.740865230560303
    8. ' space' → logprob: -6.490865230560303
    9. '空' → logprob: -7.115865230560303
    10. 's' → logprob: -7.115865230560303

Token 1304: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5402454137802124
    2. ' is' → logprob: -1.9152454137802124
    3. 'が' → logprob: -3.040245532989502
    4. '）' → logprob: -3.665245532989502
    5. 'は' → logprob: -3.665245532989502
    6. ' in' → logprob: -3.665245532989502
    7. '):' → logprob: -4.290245532989502
    8. '),' → logprob: -4.290245532989502
    9. 'in' → logprob: -4.540245532989502
    10. 'の' → logprob: -4.790245532989502

Token 1305: ' will' (ID: 738)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.4776742458343506
    2. 'we' → logprob: -1.7276742458343506
    3. '       ' → logprob: -1.9776742458343506
    4. '           ' → logprob: -2.4776742458343506
    5. ' we' → logprob: -2.9776742458343506
    6. 'they' → logprob: -2.9776742458343506
    7. ')' → logprob: -3.1026742458343506
    8. 'car' → logprob: -3.3526742458343506
    9. 'the' → logprob: -3.7276742458343506
    10. 'there' → logprob: -3.9776742458343506

Token 1306: ' park' (ID: 11796)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.49739885330200195
    2. 'consider' → logprob: -2.247398853302002
    3. 'continue' → logprob: -2.497398853302002
    4. 'return' → logprob: -2.997398853302002
    5. 'choose' → logprob: -3.622398853302002
    6. 'check' → logprob: -3.872398853302002
    7. 'try' → logprob: -4.372398853302002
    8. 'go' → logprob: -4.372398853302002
    9. 'park' → logprob: -4.622398853302002
    10. ' be' → logprob: -4.747398853302002

Token 1307: ' first' (ID: 1577)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.44393453001976013
    2. ' in' → logprob: -1.8189345598220825
    3. ')' → logprob: -2.568934440612793
    4. '       ' → logprob: -3.568934440612793
    5. 'on' → logprob: -3.943934440612793
    6. '_in' → logprob: -3.943934440612793
    7. '           ' → logprob: -4.818934440612793
    8. ' on' → logprob: -5.193934440612793
    9. '   ' → logprob: -5.193934440612793
    10. 'only' → logprob: -5.818934440612793

Token 1308: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36552077531814575
    2. '       ' → logprob: -1.615520715713501
    3. '   ' → logprob: -3.115520715713501
    4. '):' → logprob: -3.865520715713501
    5. ']' → logprob: -4.86552095413208
    6. ':' → logprob: -5.24052095413208
    7. ' and' → logprob: -5.61552095413208
    8. ')
' → logprob: -5.61552095413208
    9. '),' → logprob: -6.24052095413208
    10. '.' → logprob: -6.24052095413208

Token 1309: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.7361197471618652
    2. 'self' → logprob: -1.6111197471618652
    3. 'spaces' → logprob: -1.9861197471618652
    4. '_spaces' → logprob: -2.6111197471618652
    5. '_empty' → logprob: -3.4861197471618652
    6. 'the' → logprob: -3.7361197471618652
    7. '_no' → logprob: -4.236119747161865
    8. 'no' → logprob: -4.361119747161865
    9. 'space' → logprob: -4.736119747161865
    10. '```' → logprob: -5.361119747161865

Token 1310: ' spaces' (ID: 18608)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0432372093200684
    2. '_spaces' → logprob: -1.4182372093200684
    3. ')' → logprob: -1.6682372093200684
    4. ')]' → logprob: -1.9182372093200684
    5. 'spaces' → logprob: -3.1682372093200684
    6. '])' → logprob: -4.168237209320068
    7. 's' → logprob: -5.293237209320068
    8. ')])' → logprob: -6.668237209320068
    9. ' spaces' → logprob: -6.918237209320068
    10. ']_' → logprob: -7.168237209320068

Token 1311: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058194372802972794
    2. ')' → logprob: -3.433194398880005
    3. '):' → logprob: -5.433194160461426
    4. ')
' → logprob: -5.558194160461426
    5. '):
' → logprob: -5.683194160461426
    6. '   ' → logprob: -5.933194160461426
    7. ':' → logprob: -6.808194160461426
    8. 's' → logprob: -6.933194160461426
    9. 'def' → logprob: -7.183194160461426
    10. '[' → logprob: -7.308194160461426

Token 1312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.125210297293961e-05
    2. 'space' → logprob: -10.750081062316895
    3. 'def' → logprob: -11.125081062316895
    4. 'm' → logprob: -11.500081062316895
    5. '```' → logprob: -11.500081062316895
    6. 'spaces' → logprob: -11.625081062316895
    7. '
' → logprob: -12.250081062316895
    8. '        
' → logprob: -12.750081062316895
    9. '   ' → logprob: -14.125081062316895
    10. '           ' → logprob: -14.500081062316895

Token 1313: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03349757939577103
    2. 'c' → logprob: -3.6584975719451904
    3. 'spaces' → logprob: -5.4084978103637695
    4. 'candidate' → logprob: -6.9084978103637695
    5. 'best' → logprob: -7.2834978103637695
    6. 'min' → logprob: -8.53349781036377
    7. 'available' → logprob: -8.90849781036377
    8. 'possible' → logprob: -9.40849781036377
    9. 'def' → logprob: -9.65849781036377
    10. 'car' → logprob: -9.78349781036377

Token 1314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048682406544685364
    2. '=' → logprob: -3.048682451248169
    3. ':' → logprob: -9.54868221282959
    4. '=[]' → logprob: -11.17368221282959
    5. ')' → logprob: -13.04868221282959
    6. ',' → logprob: -13.54868221282959
    7. '=[]
' → logprob: -13.92368221282959
    8. '       ' → logprob: -14.04868221282959
    9. '   ' → logprob: -14.29868221282959
    10. 'space' → logprob: -14.67368221282959

Token 1315: ' []
' (ID: 8911)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4239814877510071
    2. '[self' → logprob: -1.5489814281463623
    3. '[]
' → logprob: -2.0489814281463623
    4. '[]' → logprob: -6.548981666564941
    5. '[(' → logprob: -6.673981666564941
    6. '[]

' → logprob: -7.173981666564941
    7. '[
' → logprob: -7.923981666564941
    8. '   ' → logprob: -9.048981666564941
    9. '       ' → logprob: -9.798981666564941
    10. '(self' → logprob: -9.798981666564941

Token 1316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009050711058080196
    2. 'for' → logprob: -4.7590508460998535
    3. ' for' → logprob: -7.7590508460998535
    4. '```' → logprob: -12.759050369262695
    5. '   ' → logprob: -13.884050369262695
    6. 'm' → logprob: -13.884050369262695
    7. '        
' → logprob: -14.009050369262695
    8. 'space' → logprob: -14.634050369262695
    9. '           ' → logprob: -14.759050369262695
    10. 'with' → logprob: -15.009050369262695

Token 1317: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.047051381319761276
    2. '       ' → logprob: -3.422051429748535
    3. 'spaces' → logprob: -5.172051429748535
    4. 'car' → logprob: -5.547051429748535
    5. 'one' → logprob: -6.422051429748535
    6. 'now' → logprob: -6.922051429748535
    7. 'target' → logprob: -8.297051429748535
    8. 'min' → logprob: -8.922051429748535
    9. 'cars' → logprob: -9.422051429748535
    10. 'diff' → logprob: -9.672051429748535

Token 1318: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0002981624274980277
    2. ' space' → logprob: -8.125298500061035
    3. 'car' → logprob: -14.500298500061035
    4. '   ' → logprob: -14.625298500061035
    5. '(space' → logprob: -14.875298500061035
    6. 's' → logprob: -15.500298500061035
    7. 'idx' → logprob: -16.12529754638672
    8. 'sp' → logprob: -16.25029754638672
    9. '       ' → logprob: -16.50029754638672
    10. 'spaces' → logprob: -16.62529754638672

Token 1319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005950483493506908
    2. 'in' → logprob: -5.130950450897217
    3. '	in' → logprob: -11.880950927734375
    4. '       ' → logprob: -12.630950927734375
    5. '   ' → logprob: -12.755950927734375
    6. ' ' → logprob: -12.880950927734375
    7. 'space' → logprob: -13.380950927734375
    8. '    ' → logprob: -14.380950927734375
    9. '        ' → logprob: -14.380950927734375
    10. '  ' → logprob: -14.630950927734375

Token 1320: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014370749704539776
    2. ' self' → logprob: -9.000144004821777
    3. '[self' → logprob: -11.000144004821777
    4. '   ' → logprob: -13.500144004821777
    5. '(self' → logprob: -13.750144004821777
    6. '       ' → logprob: -14.125144004821777
    7. '           ' → logprob: -16.25014305114746
    8. '[' → logprob: -16.50014305114746
    9. 'filter' → logprob: -17.25014305114746
    10. '	self' → logprob: -18.12514305114746

Token 1321: '._' (ID: 2697)
  Prédit: '.sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.026386914774775505
    2. 'self' → logprob: -3.9013869762420654
    3. '._' → logprob: -5.401386737823486
    4. 'sp' → logprob: -7.401386737823486
    5. '_sp' → logprob: -8.276387214660645
    6. 'spaces' → logprob: -8.526387214660645
    7. '.self' → logprob: -9.401387214660645
    8. '.s' → logprob: -10.276387214660645
    9. '.space' → logprob: -10.276387214660645
    10. '_spaces' → logprob: -10.526387214660645

Token 1322: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.7432603272027336e-06
    2. ' find' → logprob: -14.500001907348633
    3. '_find' → logprob: -14.625001907348633
    4. 'spaces' → logprob: -15.375001907348633
    5. '(find' → logprob: -15.750001907348633
    6. '
' → logprob: -16.125001907348633
    7. '.find' → logprob: -16.500001907348633
    8. '	find' → logprob: -17.500001907348633
    9. 'finding' → logprob: -17.750001907348633
    10. 'filter' → logprob: -18.000001907348633

Token 1323: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -3.531315314830863e-06
    2. 'spaces' → logprob: -13.000003814697266
    3. '_sp' → logprob: -15.000003814697266
    4. '_with' → logprob: -15.125003814697266
    5. '_space' → logprob: -15.625003814697266
    6. '_s' → logprob: -16.625003814697266
    7. '_places' → logprob: -16.875003814697266
    8. '```' → logprob: -17.000003814697266
    9. 'with' → logprob: -17.000003814697266
    10. '_one' → logprob: -17.250003814697266

Token 1324: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0013327404158189893
    2. 'with' → logprob: -6.626332759857178
    3. '_bottom' → logprob: -12.87633228302002
    4. '_one' → logprob: -13.25133228302002
    5. '   ' → logprob: -14.37633228302002
    6. ' with' → logprob: -15.00133228302002
    7. '
' → logprob: -15.37633228302002
    8. 'def' → logprob: -15.37633228302002
    9. 'bottom' → logprob: -15.62633228302002
    10. 'With' → logprob: -16.001333236694336

Token 1325: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.0007355354027822614
    2. '1' → logprob: -8.00073528289795
    3. 'one' → logprob: -8.50073528289795
    4. '_car' → logprob: -9.37573528289795
    5. '
' → logprob: -11.00073528289795
    6. '_no' → logprob: -11.12573528289795
    7. '_c' → logprob: -11.25073528289795
    8. 'One' → logprob: -11.25073528289795
    9. '_' → logprob: -11.25073528289795
    10. '```' → logprob: -11.75073528289795

Token 1326: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0008229722734540701
    2. '_c' → logprob: -7.875823020935059
    3. 'car' → logprob: -8.250823020935059
    4. '(car' → logprob: -10.125823020935059
    5. '_space' → logprob: -10.250823020935059
    6. '(_' → logprob: -10.500823020935059
    7. 'space' → logprob: -10.750823020935059
    8. '(space' → logprob: -11.375823020935059
    9. '```' → logprob: -11.875823020935059
    10. '(' → logprob: -12.000823020935059

Token 1327: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.062396056950092316
    2. '():' → logprob: -2.8123960494995117
    3. '       ' → logprob: -8.812396049499512
    4. '()' → logprob: -8.812396049499512
    5. ':' → logprob: -10.187396049499512
    6. ':
' → logprob: -10.187396049499512
    7. '():
' → logprob: -10.812396049499512
    8. '()):
' → logprob: -11.062396049499512
    9. '):
' → logprob: -11.937396049499512
    10. '():

' → logprob: -12.562396049499512

Token 1328: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023688094690442085
    2. '           ' → logprob: -3.7736880779266357
    3. '```' → logprob: -8.273688316345215
    4. '   ' → logprob: -9.148688316345215
    5. ' if' → logprob: -10.523688316345215
    6. 'tokens' → logprob: -11.273688316345215
    7. '	   ' → logprob: -11.523688316345215
    8. 'token' → logprob: -12.023688316345215
    9. ' tokens' → logprob: -12.148688316345215
    10. ' token' → logprob: -13.023688316345215

Token 1329: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2860296666622162
    2. 'existing' → logprob: -2.411029577255249
    3. 'times' → logprob: -2.661029577255249
    4. 'car' → logprob: -3.536029577255249
    5. 'for' → logprob: -4.536029815673828
    6. 'diff' → logprob: -4.786029815673828
    7. 'pos' → logprob: -4.911029815673828
    8. 'remaining' → logprob: -5.036029815673828
    9. 'if' → logprob: -5.286029815673828
    10. 'space' → logprob: -5.661029815673828

Token 1330: ' Calculate' (ID: 38942)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4116876125335693
    2. 'existing' → logprob: -1.5366876125335693
    3. 'diff' → logprob: -1.6616876125335693
    4. 'times' → logprob: -2.4116876125335693
    5. 'car' → logprob: -2.6616876125335693
    6. 'min' → logprob: -3.0366876125335693
    7. 'remaining' → logprob: -3.5366876125335693
    8. 'max' → logprob: -3.7866876125335693
    9. 'if' → logprob: -3.9116876125335693
    10. 'for' → logprob: -4.036687850952148

Token 1331: ' minimum' (ID: 11085)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -0.6751042008399963
    2. 'diff' → logprob: -2.0501041412353516
    3. 'car' → logprob: -2.3001041412353516
    4. 'remaining' → logprob: -2.6751041412353516
    5. 'times' → logprob: -2.9251041412353516
    6. '           ' → logprob: -3.1751041412353516
    7. 'min' → logprob: -3.9251041412353516
    8. 'time' → logprob: -4.675104141235352
    9. 'space' → logprob: -4.800104141235352
    10. 'park' → logprob: -4.925104141235352

Token 1332: ' remaining' (ID: 15448)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2202030420303345
    2. '_time' → logprob: -2.345202922821045
    3. 'remaining' → logprob: -2.470202922821045
    4. '_remaining' → logprob: -2.595202922821045
    5. 'time' → logprob: -2.970202922821045
    6. 'diff' → logprob: -3.220202922821045
    7. 'car' → logprob: -3.470202922821045
    8. '   ' → logprob: -3.470202922821045
    9. ' remaining' → logprob: -3.595202922821045
    10. 'remain' → logprob: -3.720202922821045

Token 1333: ' parking' (ID: 14472)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03637642040848732
    2. 'time' → logprob: -3.661376476287842
    3. '_times' → logprob: -5.661376476287842
    4. '_' → logprob: -6.161376476287842
    5. 'times' → logprob: -6.161376476287842
    6. '   ' → logprob: -7.411376476287842
    7. '_car' → logprob: -7.911376476287842
    8. '           ' → logprob: -8.161375999450684
    9. ' time' → logprob: -8.411375999450684
    10. 'car' → logprob: -9.036375999450684

Token 1334: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.2945789396762848
    2. 'time' → logprob: -1.4195789098739624
    3. 'times' → logprob: -4.919579029083252
    4. '_times' → logprob: -6.044579029083252
    5. '       ' → logprob: -6.544579029083252
    6. '           ' → logprob: -7.169579029083252
    7. '_duration' → logprob: -7.419579029083252
    8. 'duration' → logprob: -8.544578552246094
    9. ' time' → logprob: -8.544578552246094
    10. '   ' → logprob: -8.669578552246094

Token 1335: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012457496486604214
    2. ' for' → logprob: -5.637457370758057
    3. 'for' → logprob: -5.762457370758057
    4. 'times' → logprob: -6.887457370758057
    5. 'existing' → logprob: -7.262457370758057
    6. ' times' → logprob: -7.637457370758057
    7. '(car' → logprob: -7.887457370758057
    8. ' in' → logprob: -8.012457847595215
    9. 'car' → logprob: -8.137457847595215
    10. 'time' → logprob: -8.137457847595215

Token 1336: ' cars' (ID: 13653)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.4363326132297516
    2. 'car' → logprob: -1.5613325834274292
    3. 'cars' → logprob: -2.9363327026367188
    4. 'self' → logprob: -3.3113327026367188
    5. 'c' → logprob: -3.9363327026367188
    6. '(space' → logprob: -4.186332702636719
    7. '[c' → logprob: -5.561332702636719
    8. '[' → logprob: -5.811332702636719
    9. '[s' → logprob: -6.186332702636719
    10. '(car' → logprob: -6.436332702636719

Token 1337: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07549657672643661
    2. ' in' → logprob: -3.0754966735839844
    3. 'in' → logprob: -3.8254966735839844
    4. '```' → logprob: -7.200496673583984
    5. 'for' → logprob: -7.325496673583984
    6. ' for' → logprob: -7.325496673583984
    7. '_in' → logprob: -7.825496673583984
    8. ' =' → logprob: -8.075496673583984
    9. 's' → logprob: -8.325496673583984
    10. '=' → logprob: -8.325496673583984

Token 1338: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0017559797270223498
    2. ' space' → logprob: -6.376756191253662
    3. 'the' → logprob: -10.001755714416504
    4. '           ' → logprob: -13.251755714416504
    5. 'that' → logprob: -13.251755714416504
    6. '```' → logprob: -13.501755714416504
    7. 'spaces' → logprob: -13.751755714416504
    8. '   ' → logprob: -14.376755714416504
    9. ' the' → logprob: -14.751755714416504
    10. '(space' → logprob: -14.876755714416504

Token 1339: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005268976557999849
    2. 'times' → logprob: -5.6302690505981445
    3. ' times' → logprob: -7.6302690505981445
    4. 'for' → logprob: -8.755269050598145
    5. '```' → logprob: -8.755269050598145
    6. 'time' → logprob: -8.880269050598145
    7. 'remaining' → logprob: -8.880269050598145
    8. 'existing' → logprob: -9.255269050598145
    9. 'diff' → logprob: -9.755269050598145
    10. 'car' → logprob: -9.880269050598145

Token 1340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001963128335773945
    2. ' for' → logprob: -7.251963138580322
    3. ',' → logprob: -8.251962661743164
    4. ' times' → logprob: -8.876962661743164
    5. '```' → logprob: -8.876962661743164
    6. '
' → logprob: -9.376962661743164
    7. 'times' → logprob: -9.501962661743164
    8. 'for' → logprob: -9.626962661743164
    9. ' and' → logprob: -9.876962661743164
    10. '       ' → logprob: -10.126962661743164

Token 1341: ' remaining' (ID: 15448)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9223504662513733
    2. 'min' → logprob: -1.2973504066467285
    3. 'times' → logprob: -1.5473504066467285
    4. 'car' → logprob: -3.4223504066467285
    5. 'existing' → logprob: -3.5473504066467285
    6. 'rem' → logprob: -4.4223504066467285
    7. 'remaining' (adapté à ' remaining') → logprob: -4.5473504066467285
    8. 'for' → logprob: -5.4223504066467285
    9. 'cur' → logprob: -5.4223504066467285
    10. 'curr' → logprob: -5.6723504066467285

Token 1342: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.17686797678470612
    2. 's' → logprob: -2.551867961883545
    3. ' =' → logprob: -2.926867961883545
    4. 'times' → logprob: -4.551867961883545
    5. '_list' → logprob: -4.676867961883545
    6. '=' → logprob: -4.926867961883545
    7. '_time' → logprob: -6.176867961883545
    8. '   ' → logprob: -7.801867961883545
    9. '_in' → logprob: -8.176868438720703
    10. '_car' → logprob: -9.551868438720703

Token 1343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2532365024089813
    2. '=' → logprob: -1.5032365322113037
    3. '           ' → logprob: -6.753236293792725
    4. '=[' → logprob: -10.253236770629883
    5. '		' → logprob: -10.753236770629883
    6. '=[]' → logprob: -11.003236770629883
    7. '=[]
' → logprob: -11.753236770629883
    8. '               ' → logprob: -12.003236770629883
    9. '            ' → logprob: -12.003236770629883
    10. '=[
' → logprob: -12.128236770629883

Token 1344: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25280842185020447
    2. '[self' → logprob: -1.5028084516525269
    3. '[' → logprob: -7.752808570861816
    4. ' self' → logprob: -8.627808570861816
    5. 'space' → logprob: -9.627808570861816
    6. '           ' → logprob: -10.002808570861816
    7. '   ' → logprob: -10.252808570861816
    8. '(self' → logprob: -10.252808570861816
    9. '[
' → logprob: -10.627808570861816
    10. ' [' → logprob: -11.252808570861816

Token 1345: '._' (ID: 2697)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.2531028091907501
    2. '._' → logprob: -1.5031027793884277
    3. '.remaining' → logprob: -7.378102779388428
    4. '_min' → logprob: -7.628102779388428
    5. '.' → logprob: -11.628103256225586
    6. '[' → logprob: -11.878103256225586
    7. '.min' → logprob: -12.128103256225586
    8. '   ' → logprob: -12.378103256225586
    9. ' _' → logprob: -12.628103256225586
    10. '_existing' → logprob: -12.628103256225586

Token 1346: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.07709600031375885
    2. '_remaining' → logprob: -2.9520959854125977
    3. 'min' → logprob: -3.8270959854125977
    4. '_min' → logprob: -8.702095985412598
    5. 'minimum' → logprob: -11.327095985412598
    6. ' remaining' → logprob: -12.702095985412598
    7. '.remaining' → logprob: -12.827095985412598
    8. 'Remaining' → logprob: -13.077095985412598
    9. 'minimal' → logprob: -13.202095985412598
    10. 'find' → logprob: -13.327095985412598

Token 1347: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0020003693643957376
    2. 'park' → logprob: -6.877000331878662
    3. '_time' → logprob: -7.377000331878662
    4. 'time' → logprob: -8.87700080871582
    5. '_times' → logprob: -9.62700080871582
    6. '```' → logprob: -9.87700080871582
    7. 'times' → logprob: -10.62700080871582
    8. '   ' → logprob: -11.12700080871582
    9. '[' → logprob: -11.87700080871582
    10. '_space' → logprob: -12.50200080871582

Token 1348: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.0019625357817858458
    2. '_' → logprob: -6.251962661743164
    3. 'space' → logprob: -10.876962661743164
    4. 'time' → logprob: -11.751962661743164
    5. 'parking' → logprob: -13.251962661743164
    6. ' park' → logprob: -13.876962661743164
    7. '_time' → logprob: -14.001962661743164
    8. 'pace' → logprob: -14.376962661743164
    9. '```' → logprob: -14.501962661743164
    10. 'Park' → logprob: -15.001962661743164

Token 1349: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.762356209335849e-05
    2. 'time' → logprob: -11.00003719329834
    3. '_times' → logprob: -11.75003719329834
    4. '       ' → logprob: -11.87503719329834
    5. '   ' → logprob: -12.50003719329834
    6. '_space' → logprob: -14.37503719329834
    7. '           ' → logprob: -14.75003719329834
    8. 'times' → logprob: -14.87503719329834
    9. ' time' → logprob: -15.62503719329834
    10. '_' → logprob: -15.87503719329834

Token 1350: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.002781100571155548
    2. '(space' → logprob: -6.252780914306641
    3. 'in' → logprob: -7.752780914306641
    4. '   ' → logprob: -8.25278091430664
    5. 'In' → logprob: -9.37778091430664
    6. '_space' → logprob: -10.62778091430664
    7. 'space' → logprob: -11.00278091430664
    8. '```' → logprob: -11.75278091430664
    9. '       ' → logprob: -12.25278091430664
    10. '(' → logprob: -12.25278091430664

Token 1351: '_space' (ID: 36700)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0012134487042203546
    2. '_space' → logprob: -6.751213550567627
    3. 'car' → logprob: -11.251213073730469
    4. ' space' → logprob: -11.376213073730469
    5. '(space' → logprob: -12.126213073730469
    6. '
' → logprob: -13.376213073730469
    7. 'time' → logprob: -13.376213073730469
    8. '   ' → logprob: -13.501213073730469
    9. 'the' → logprob: -13.626213073730469
    10. 'spaces' → logprob: -14.001213073730469

Token 1352: '(space' (ID: 133023)
  Prédit: '(space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -2.696889623621246e-06
    2. 'space' → logprob: -13.12500286102295
    3. '(' → logprob: -14.75000286102295
    4. '(
' → logprob: -16.250001907348633
    5. ' space' → logprob: -16.625001907348633
    6. ' (' → logprob: -17.750001907348633
    7. '(car' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. '(sp' → logprob: -19.000001907348633
    10. '(square' → logprob: -19.375001907348633

Token 1353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005088301841169596
    2. '           ' → logprob: -8.000509262084961
    3. ' ,' → logprob: -9.375509262084961
    4. ',self' → logprob: -10.375509262084961
    5. 'self' → logprob: -10.500509262084961
    6. '               ' → logprob: -11.125509262084961
    7. ')' → logprob: -12.750509262084961
    8. '(space' → logprob: -13.000509262084961
    9. ',
' → logprob: -13.250509262084961
    10. '```' → logprob: -13.250509262084961

Token 1354: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0205561351031065
    2. ' now' → logprob: -3.8955562114715576
    3. '           ' → logprob: -12.020556449890137
    4. '               ' → logprob: -12.520556449890137
    5. '   ' → logprob: -13.645556449890137
    6. '
' → logprob: -14.020556449890137
    7. '	now' → logprob: -14.645556449890137
    8. '[now' → logprob: -14.645556449890137
    9. '(now' → logprob: -15.145556449890137
    10. '       ' → logprob: -15.645556449890137

Token 1355: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4749162495136261
    2. ')' → logprob: -0.9749162197113037
    3. '           ' → logprob: -7.099916458129883
    4. ')
' → logprob: -11.724916458129883
    5. '):
' → logprob: -13.349916458129883
    6. '               ' → logprob: -14.099916458129883
    7. ')

' → logprob: -14.224916458129883
    8. ')`
' → logprob: -14.599916458129883
    9. '       ' → logprob: -14.724916458129883
    10. ')[' → logprob: -14.974916458129883

Token 1356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011749001714633778
    2. '```' → logprob: -9.250117301940918
    3. ' if' → logprob: -12.375117301940918
    4. ' for' → logprob: -12.500117301940918
    5. 'for' → logprob: -12.875117301940918
    6. ',' → logprob: -13.125117301940918
    7. 'tokens' → logprob: -13.375117301940918
    8. 'token' → logprob: -13.625117301940918
    9. 'if' → logprob: -13.750117301940918
    10. '		' → logprob: -14.250117301940918

Token 1357: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4554637670516968
    2. '           ' → logprob: -1.8304637670516968
    3. 'diff' → logprob: -1.8304637670516968
    4. 'car' → logprob: -4.205463886260986
    5. ' min' → logprob: -4.580463886260986
    6. 'for' → logprob: -4.830463886260986
    7. 'dif' → logprob: -6.080463886260986
    8. 'max' → logprob: -6.580463886260986
    9. 'candidate' → logprob: -6.580463886260986
    10. 'best' → logprob: -6.955463886260986

Token 1358: ' not' (ID: 625)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6551803350448608
    2. 'all' → logprob: -1.2801803350448608
    3. 'max' → logprob: -2.0301804542541504
    4. 'min' → logprob: -3.0301804542541504
    5. 'car' → logprob: -4.65518045425415
    6. 'len' → logprob: -4.90518045425415
    7. '(any' → logprob: -6.78018045425415
    8. ' any' → logprob: -6.90518045425415
    9. 'not' → logprob: -7.15518045425415
    10. ' all' → logprob: -7.53018045425415

Token 1359: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.0001329791557509452
    2. ' remaining' → logprob: -9.00013256072998
    3. 'any' → logprob: -12.37513256072998
    4. 'all' → logprob: -12.37513256072998
    5. 'len' → logprob: -14.62513256072998
    6. 'car' → logprob: -14.87513256072998
    7. 'space' → logprob: -16.500133514404297
    8. 'Remaining' → logprob: -17.000133514404297
    9. '_remaining' → logprob: -17.250133514404297
    10. 'remain' → logprob: -17.375133514404297

Token 1360: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.05577177554368973
    2. 'times' → logprob: -3.305771827697754
    3. 'remaining' → logprob: -4.680771827697754
    4. '_remaining' → logprob: -5.430771827697754
    5. ' times' → logprob: -6.430771827697754
    6. '   ' → logprob: -7.805771827697754
    7. 'car' → logprob: -8.305771827697754
    8. '_' → logprob: -8.305771827697754
    9. '(car' → logprob: -8.930771827697754
    10. ')' → logprob: -8.930771827697754

Token 1361: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.057281382381916046
    2. ':
' → logprob: -2.932281494140625
    3. 'continue' → logprob: -6.432281494140625
    4. '           ' → logprob: -8.057281494140625
    5. ':return' → logprob: -8.932281494140625
    6. ' continue' → logprob: -9.182281494140625
    7. '[' → logprob: -10.057281494140625
    8. ' or' → logprob: -10.182281494140625
    9. ')' → logprob: -10.557281494140625
    10. '       ' → logprob: -10.932281494140625

Token 1362: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003366050310432911
    2. ' continue' → logprob: -5.753365993499756
    3. 'continue' → logprob: -8.878366470336914
    4. ' continues' → logprob: -11.128366470336914
    5. '                
' → logprob: -12.253366470336914
    6. ',' → logprob: -12.753366470336914
    7. '           ' → logprob: -12.753366470336914
    8. ' tokens' → logprob: -13.253366470336914
    9. '_continue' → logprob: -13.253366470336914
    10. ':' → logprob: -13.378366470336914

Token 1363: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6354030966758728
    2. '               ' → logprob: -0.8854030966758728
    3. ' continue' → logprob: -3.1354031562805176
    4. '                   ' → logprob: -4.260403156280518
    5. '   ' → logprob: -10.13540267944336
    6. '           ' → logprob: -10.26040267944336
    7. '```' → logprob: -11.01040267944336
    8. '                       ' → logprob: -11.76040267944336
    9. '_continue' → logprob: -12.13540267944336
    10. '       ' → logprob: -12.13540267944336

Token 1364: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002098633674904704
    2. '            
' → logprob: -7.252098560333252
    3. '
' → logprob: -8.12709903717041
    4. '<|end|>' → logprob: -8.37709903717041
    5. 'token' → logprob: -8.50209903717041
    6. 'tokens' → logprob: -8.62709903717041
    7. 'continue' → logprob: -9.00209903717041
    8. '<|end|>' → logprob: -9.25209903717041
    9. ',' → logprob: -10.12709903717041
    10. '  
' → logprob: -10.75209903717041

Token 1365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001769616355886683
    2. '```' → logprob: -9.125177383422852
    3. 'token' → logprob: -11.375177383422852
    4. '            
' → logprob: -11.625177383422852
    5. 'tokens' → logprob: -11.625177383422852
    6. '               ' → logprob: -11.625177383422852
    7. 'continue' → logprob: -11.875177383422852
    8. ' token' → logprob: -12.375177383422852
    9. '
' → logprob: -13.000177383422852
    10. ' continue' → logprob: -13.125177383422852

Token 1366: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.9999726414680481
    2. 'diff' → logprob: -1.2499725818634033
    3. 'car' → logprob: -1.8749725818634033
    4. '           ' → logprob: -1.8749725818634033
    5. 'park' → logprob: -4.624972820281982
    6. 'for' → logprob: -4.749972820281982
    7. 'target' → logprob: -5.624972820281982
    8. 'max' → logprob: -5.999972820281982
    9. 'candidate' → logprob: -6.249972820281982
    10. 'parking' → logprob: -6.374972820281982

Token 1367: '_remaining' (ID: 102167)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.38140591979026794
    2. '_diff' → logprob: -2.006405830383301
    3. '_remaining' → logprob: -2.006405830383301
    4. '_rem' → logprob: -3.256405830383301
    5. '_car' → logprob: -5.756405830383301
    6. '_times' → logprob: -7.006405830383301
    7. 'diff' → logprob: -7.006405830383301
    8. '_t' → logprob: -7.006405830383301
    9. '_r' → logprob: -7.631405830383301
    10. '_dt' → logprob: -7.881405830383301

Token 1368: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.23444567620754242
    2. ' =' → logprob: -2.109445571899414
    3. '=' → logprob: -2.484445571899414
    4. '_times' → logprob: -6.109445571899414
    5. 'time' → logprob: -6.734445571899414
    6. '           ' → logprob: -8.234445571899414
    7. 'times' → logprob: -8.734445571899414
    8. '=time' → logprob: -9.484445571899414
    9. '=_' → logprob: -9.859445571899414
    10. 'Time' → logprob: -9.984445571899414

Token 1369: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.65101717156358e-05
    2. ' min' → logprob: -9.250096321105957
    3. 'max' → logprob: -15.000096321105957
    4. 'remaining' → logprob: -17.500097274780273
    5. '	min' → logprob: -17.875097274780273
    6. '(min' → logprob: -18.000097274780273
    7. 'minimum' → logprob: -18.125097274780273
    8. '   ' → logprob: -19.750097274780273
    9. '
' → logprob: -20.000097274780273
    10. 'float' → logprob: -20.125097274780273

Token 1370: '(' (ID: 7)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.7437607645988464
    2. '(' → logprob: -0.8687607645988464
    3. '([' → logprob: -2.993760824203491
    4. 'rt' → logprob: -4.618760585784912
    5. 't' → logprob: -4.618760585784912
    6. '(rt' → logprob: -4.993760585784912
    7. 'time' → logprob: -5.118760585784912
    8. 'car' → logprob: -5.118760585784912
    9. '(
' → logprob: -5.743760585784912
    10. '[' → logprob: -6.118760585784912

Token 1371: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.000418040988733992
    2. 'rt' → logprob: -9.125417709350586
    3. '[' → logprob: -9.250417709350586
    4. ' remaining' → logprob: -9.875417709350586
    5. 't' → logprob: -10.000417709350586
    6. 'r' → logprob: -10.250417709350586
    7. 'car' → logprob: -11.000417709350586
    8. '[(' → logprob: -11.750417709350586
    9. 'time' → logprob: -11.750417709350586
    10. '(' → logprob: -11.750417709350586

Token 1372: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.013419617898762226
    2. 'remaining' → logprob: -5.5134196281433105
    3. '_remaining' → logprob: -5.6384196281433105
    4. 'times' → logprob: -6.0134196281433105
    5. 'time' → logprob: -6.6384196281433105
    6. '_time' → logprob: -7.7634196281433105
    7. 'space' → logprob: -8.013419151306152
    8. '[' → logprob: -8.513419151306152
    9. '(space' → logprob: -8.638419151306152
    10. 'car' → logprob: -8.763419151306152

Token 1373: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.026645803824067116
    2. ')' → logprob: -4.276645660400391
    3. '           ' → logprob: -4.401645660400391
    4. ',' → logprob: -9.27664566040039
    5. ' )
' → logprob: -10.65164566040039
    6. ')
' → logprob: -12.02664566040039
    7. ')

' → logprob: -12.02664566040039
    8. '               ' → logprob: -12.27664566040039
    9. ' -' → logprob: -12.40164566040039
    10. '```' → logprob: -14.02664566040039

Token 1374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002158146962756291
    2. ' if' → logprob: -9.125215530395508
    3. ',' → logprob: -10.125215530395508
    4. '```' → logprob: -10.125215530395508
    5. 'if' → logprob: -12.250215530395508
    6. '            
' → logprob: -12.500215530395508
    7. 'diff' → logprob: -12.875215530395508
    8. '
' → logprob: -12.875215530395508
    9. '               ' → logprob: -13.250215530395508
    10. '+' → logprob: -13.500215530395508

Token 1375: ' if' (ID: 538)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.19031552970409393
    2. '           ' → logprob: -2.4403154850006104
    3. 'if' (adapté à ' if') → logprob: -3.5653154850006104
    4. 'car' → logprob: -4.3153157234191895
    5. ' diff' → logprob: -4.3153157234191895
    6. 'difference' → logprob: -5.3153157234191895
    7. 'desired' → logprob: -5.3153157234191895
    8. ' if' → logprob: -5.4403157234191895
    9. 'park' → logprob: -5.5653157234191895
    10. 'delta' → logprob: -5.6903157234191895

Token 1376: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0545562244951725
    2. 'car' → logprob: -3.429556131362915
    3. ' min' → logprob: -4.054556369781494
    4. ' car' → logprob: -6.179556369781494
    5. '(min' → logprob: -6.929556369781494
    6. '(car' → logprob: -9.054555892944336
    7. ' (' → logprob: -9.804555892944336
    8. '   ' → logprob: -9.804555892944336
    9. 'abs' → logprob: -11.179555892944336
    10. '(' → logprob: -11.554555892944336

Token 1377: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.001544022699818015
    2. '.remaining' → logprob: -7.251543998718262
    3. '(min' → logprob: -9.001543998718262
    4. '(car' → logprob: -9.126543998718262
    5. 'car' → logprob: -9.126543998718262
    6. '.' → logprob: -9.501543998718262
    7. 'Remaining' → logprob: -9.626543998718262
    8. '_car' → logprob: -9.876543998718262
    9. 'remaining' → logprob: -10.001543998718262
    10. '.car' → logprob: -10.126543998718262

Token 1378: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5788610577583313
    2. '>=' → logprob: -0.8288610577583313
    3. '<=' → logprob: -6.578861236572266
    4. ' <=' → logprob: -6.953861236572266
    5. '==' → logprob: -8.953861236572266
    6. ' -' → logprob: -9.078861236572266
    7. '-' → logprob: -9.203861236572266
    8. ')' → logprob: -9.953861236572266
    9. '>' → logprob: -9.953861236572266
    10. ' ==' → logprob: -10.328861236572266

Token 1379: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00103352265432477
    2. ' car' → logprob: -6.876033306121826
    3. '(car' → logprob: -15.126033782958984
    4. '           ' → logprob: -15.626033782958984
    5. '   ' → logprob: -16.126033782958984
    6. '	car' → logprob: -16.251033782958984
    7. 'Car' → logprob: -17.501033782958984
    8. '               ' → logprob: -18.376033782958984
    9. '       ' → logprob: -18.626033782958984
    10. '
' → logprob: -18.751033782958984

Token 1380: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018762122839689255
    2. '.depart' → logprob: -4.018762111663818
    3. '.par' → logprob: -8.018762588500977
    4. ' .' → logprob: -8.768762588500977
    5. '   ' → logprob: -10.018762588500977
    6. '.arr' → logprob: -11.393762588500977
    7. '```' → logprob: -11.518762588500977
    8. '           ' → logprob: -11.893762588500977
    9. 'departure' → logprob: -12.018762588500977
    10. '       ' → logprob: -12.268762588500977

Token 1381: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -9.865583706414327e-05
    2. 'departure' → logprob: -9.62509822845459
    3. 'depart' → logprob: -10.62509822845459
    4. ' park' → logprob: -13.12509822845459
    5. '   ' → logprob: -13.50009822845459
    6. 'parking' → logprob: -13.62509822845459
    7. ' ' → logprob: -14.37509822845459
    8. '```' → logprob: -14.50009822845459
    9. '`' → logprob: -15.00009822845459
    10. '_depart' → logprob: -15.37509822845459

Token 1382: '_duration' (ID: 59503)
  Prédit: '_duration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -1.306760805164231e-05
    2. 'duration' → logprob: -11.50001335144043
    3. '           ' → logprob: -13.75001335144043
    4. 'Duration' → logprob: -14.37501335144043
    5. '_DURATION' → logprob: -14.75001335144043
    6. '   ' → logprob: -16.00001335144043
    7. '_time' → logprob: -16.12501335144043
    8. '_d' → logprob: -16.50001335144043
    9. '```' → logprob: -16.62501335144043
    10. '       ' → logprob: -16.62501335144043

Token 1383: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1650753617286682
    2. ':' → logprob: -2.6650753021240234
    3. '               ' → logprob: -2.7900753021240234
    4. ' and' → logprob: -4.540075302124023
    5. '           ' → logprob: -5.415075302124023
    6. ' -' → logprob: -5.540075302124023
    7. '-' → logprob: -6.790075302124023
    8. 'and' → logprob: -7.790075302124023
    9. '):
' → logprob: -8.415075302124023
    10. ' :
' → logprob: -9.540075302124023

Token 1384: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018189321272075176
    2. 'tokens' → logprob: -7.126819133758545
    3. ' candidates' → logprob: -7.751819133758545
    4. ' tokens' → logprob: -8.126818656921387
    5. 'c' → logprob: -9.126818656921387
    6. ',' → logprob: -10.751818656921387
    7. '<|end|>' → logprob: -10.876818656921387
    8. '<|end|>' → logprob: -11.126818656921387
    9. '_candidates' → logprob: -11.251818656921387
    10. '```' → logprob: -11.501818656921387

Token 1385: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.558078944683075
    2. '               ' → logprob: -0.933078944683075
    3. 'diff' → logprob: -3.6830790042877197
    4. ' candidates' → logprob: -5.683078765869141
    5. 'difference' → logprob: -6.308078765869141
    6. ' c' → logprob: -7.308078765869141
    7. 'd' → logprob: -7.558078765869141
    8. '           ' → logprob: -7.683078765869141
    9. 'tokens' → logprob: -8.18307876586914
    10. ' diff' → logprob: -8.18307876586914

Token 1386: ' difference' (ID: 9809)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21875432133674622
    2. '               ' → logprob: -1.9687542915344238
    3. ' candidates' → logprob: -3.218754291534424
    4. 'diff' → logprob: -4.843754291534424
    5. '           ' → logprob: -5.718754291534424
    6. 'difference' → logprob: -6.718754291534424
    7. ' c' → logprob: -6.843754291534424
    8. ' diff' → logprob: -7.718754291534424
    9. 'tokens' → logprob: -7.843754291534424
    10. '   ' → logprob: -7.843754291534424

Token 1387: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027336902916431427
    2. '=' → logprob: -3.652336835861206
    3. 'diff' → logprob: -7.277337074279785
    4. '               ' → logprob: -8.777337074279785
    5. '                   ' → logprob: -9.402337074279785
    6. '_diff' → logprob: -10.027337074279785
    7. '           ' → logprob: -10.027337074279785
    8. ':' → logprob: -12.902337074279785
    9. 's' → logprob: -13.152337074279785
    10. 'd' → logprob: -13.402337074279785

Token 1388: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2877109944820404
    2. '(min' → logprob: -1.5377110242843628
    3. ' min' → logprob: -3.5377109050750732
    4. 'car' → logprob: -6.037711143493652
    5. '0' → logprob: -6.287711143493652
    6. ' (' → logprob: -7.537711143493652
    7. '(' → logprob: -7.537711143493652
    8. '(car' → logprob: -7.662711143493652
    9. ' car' → logprob: -9.287711143493652
    10. '=min' → logprob: -9.662711143493652

Token 1389: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3053494393825531
    2. '(min' → logprob: -1.4303494691848755
    3. 'car' → logprob: -4.180349349975586
    4. '0' → logprob: -5.680349349975586
    5. '(car' → logprob: -5.805349349975586
    6. '(' → logprob: -6.555349349975586
    7. ' min' → logprob: -7.430349349975586
    8. ' (' → logprob: -9.930349349975586
    9. '=min' → logprob: -10.305349349975586
    10. 'abs' → logprob: -11.055349349975586

Token 1390: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1273997575044632
    2. ':' → logprob: -2.7523996829986572
    3. ':
' → logprob: -4.002399921417236
    4. ' and' → logprob: -4.877399921417236
    5. '                   ' → logprob: -5.252399921417236
    6. ' =' → logprob: -5.377399921417236
    7. ',' → logprob: -5.377399921417236
    8. ' if' → logprob: -6.127399921417236
    9. 'diff' → logprob: -6.627399921417236
    10. ')' → logprob: -7.127399921417236

Token 1391: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01284064631909132
    2. ':' → logprob: -5.262840747833252
    3. '                   ' → logprob: -5.512840747833252
    4. ':
' → logprob: -7.012840747833252
    5. ',' → logprob: -7.262840747833252
    6. ' and' → logprob: -7.387840747833252
    7. ' =' → logprob: -8.012840270996094
    8. ')' → logprob: -9.012840270996094
    9. '                       ' → logprob: -9.012840270996094
    10. '
' → logprob: -9.262840270996094

Token 1392: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.015370632521808147
    2. '               ' → logprob: -4.890370845794678
    3. ' diff' → logprob: -5.390370845794678
    4. 'difference' → logprob: -5.890370845794678
    5. 'c' → logprob: -8.39037036895752
    6. '                   ' → logprob: -9.51537036895752
    7. 'd' → logprob: -10.26537036895752
    8. 'dif' → logprob: -10.76537036895752
    9. '	diff' → logprob: -11.26537036895752
    10. ' difference' → logprob: -11.76537036895752

Token 1393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742676913738251
    2. '=' → logprob: -0.9742677211761475
    3. '               ' → logprob: -9.224267959594727
    4. '           ' → logprob: -9.849267959594727
    5. '                   ' → logprob: -10.349267959594727
    6. '                ' → logprob: -12.974267959594727
    7. '            ' → logprob: -13.849267959594727
    8. '   ' → logprob: -14.474267959594727
    9. ' ' → logprob: -14.849267959594727
    10. '                       ' → logprob: -14.849267959594727

Token 1394: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0002198676229454577
    2. ' min' → logprob: -8.50022029876709
    3. '(min' → logprob: -11.37522029876709
    4. '           ' → logprob: -13.12522029876709
    5. '               ' → logprob: -13.87522029876709
    6. 'abs' → logprob: -14.50022029876709
    7. '                   ' → logprob: -14.87522029876709
    8. '[min' → logprob: -14.87522029876709
    9. '	min' → logprob: -15.25022029876709
    10. '   ' → logprob: -15.75022029876709

Token 1395: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.002782531315460801
    2. '(min' → logprob: -6.002782344818115
    3. '(' → logprob: -8.502782821655273
    4. 'Remaining' → logprob: -10.002782821655273
    5. '([' → logprob: -10.752782821655273
    6. 'min' → logprob: -11.502782821655273
    7. 'remaining' → logprob: -11.627782821655273
    8. '_min' → logprob: -12.127782821655273
    9. '[min' → logprob: -13.002782821655273
    10. '([(' → logprob: -13.627782821655273

Token 1396: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17977459728717804
    2. '-' → logprob: -1.8047746419906616
    3. ' ' → logprob: -11.929774284362793
    4. '   ' → logprob: -12.179774284362793
    5. '-
' → logprob: -12.554774284362793
    6. '               ' → logprob: -12.554774284362793
    7. ' -
' → logprob: -13.054774284362793
    8. '           ' → logprob: -13.429774284362793
    9. '                   ' → logprob: -13.804774284362793
    10. ' ' → logprob: -13.804774284362793

Token 1397: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -5.836499985889532e-05
    2. ' car' → logprob: -9.7500581741333
    3. '	car' → logprob: -17.625059127807617
    4. '(car' → logprob: -17.875059127807617
    5. '           ' → logprob: -18.000059127807617
    6. '               ' → logprob: -18.000059127807617
    7. '   ' → logprob: -18.125059127807617
    8. 'Car' → logprob: -19.500059127807617
    9. ' ' → logprob: -20.125059127807617
    10. '.car' → logprob: -20.250059127807617

Token 1398: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.076218025758862e-05
    2. ' .' → logprob: -10.000070571899414
    3. '.
' → logprob: -12.375070571899414
    4. '.car' → logprob: -12.375070571899414
    5. '._' → logprob: -12.500070571899414
    6. '.par' → logprob: -12.625070571899414
    7. '.depart' → logprob: -13.750070571899414
    8. '`.' → logprob: -14.000070571899414
    9. '`.`' → logprob: -14.250070571899414
    10. '```' → logprob: -14.375070571899414

Token 1399: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -1.5690089639974758e-05
    2. '_' → logprob: -11.750015258789062
    3. ' park' → logprob: -13.250015258789062
    4. 'parking' → logprob: -13.875015258789062
    5. '```' → logprob: -14.250015258789062
    6. 'par' → logprob: -14.250015258789062
    7. 'pack' → logprob: -14.500015258789062
    8. '
' → logprob: -14.750015258789062
    9. '.' → logprob: -15.125015258789062
    10. '`' → logprob: -15.250015258789062

Token 1400: '_duration' (ID: 59503)
  Prédit: '_duration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -0.0006298751104623079
    2. '.duration' → logprob: -7.875629901885986
    3. 'duration' → logprob: -8.375629425048828
    4. 'Duration' → logprob: -11.750629425048828
    5. '_DURATION' → logprob: -12.000629425048828
    6. '.Duration' → logprob: -13.875629425048828
    7. '   ' → logprob: -14.125629425048828
    8. '.' → logprob: -14.500629425048828
    9. '._' → logprob: -14.625629425048828
    10. '           ' → logprob: -14.750629425048828

Token 1401: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018697108316700906
    2. '           ' → logprob: -9.125186920166016
    3. '                   ' → logprob: -10.875186920166016
    4. ')' → logprob: -11.500186920166016
    5. ',' → logprob: -11.875186920166016
    6. '<|end|>' → logprob: -11.875186920166016
    7. '
' → logprob: -12.125186920166016
    8. 'candidate' → logprob: -12.125186920166016
    9. 'c' → logprob: -12.125186920166016
    10. ' candidates' → logprob: -12.375186920166016

Token 1402: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010521204239921644
    2. '                   ' → logprob: -10.000104904174805
    3. '           ' → logprob: -10.375104904174805
    4. '<|end|>' → logprob: -11.125104904174805
    5. ')' → logprob: -12.500104904174805
    6. '              ' → logprob: -12.875104904174805
    7. '                
' → logprob: -13.250104904174805
    8. ',' → logprob: -13.500104904174805
    9. '                ' → logprob: -14.000104904174805
    10. '                       ' → logprob: -14.250104904174805

Token 1403: ' candidates' (ID: 18116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07947845757007599
    2. 'c' → logprob: -2.5794785022735596
    3. '           ' → logprob: -8.20447826385498
    4. ' candidates' → logprob: -8.32947826385498
    5. '                   ' → logprob: -10.57947826385498
    6. ' c' → logprob: -11.45447826385498
    7. '   ' → logprob: -11.70447826385498
    8. 'car' → logprob: -11.70447826385498
    9. 'cand' → logprob: -12.20447826385498
    10. 'candidate' → logprob: -12.70447826385498

Token 1404: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008164160535670817
    2. '.' → logprob: -7.125816345214844
    3. ' .' → logprob: -11.875816345214844
    4. '.app' → logprob: -13.000816345214844
    5. '.sort' → logprob: -13.875816345214844
    6. 'append' → logprob: -14.625816345214844
    7. '.extend' → logprob: -15.250816345214844
    8. '           ' → logprob: -15.375816345214844
    9. '.setdefault' → logprob: -15.375816345214844
    10. '.push' → logprob: -15.625816345214844

Token 1405: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14948736131191254
    2. '((' → logprob: -2.149487257003784
    3. ' (' → logprob: -4.149487495422363
    4. '(space' → logprob: -5.524487495422363
    5. '               ' → logprob: -6.274487495422363
    6. '                   ' → logprob: -7.649487495422363
    7. '           ' → logprob: -9.524487495422363
    8. '(sp' → logprob: -9.899487495422363
    9. '   ' → logprob: -10.274487495422363
    10. '(s' → logprob: -12.649487495422363

Token 1406: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.7120533811976202e-05
    2. ' diff' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.875017166137695
    4. '(diff' → logprob: -16.250017166137695
    5. '	diff' → logprob: -16.375017166137695
    6. 'space' → logprob: -18.000017166137695
    7. '
' → logprob: -18.000017166137695
    8. '  ' → logprob: -18.125017166137695
    9. 'dif' → logprob: -18.125017166137695
    10. ' ' → logprob: -18.500017166137695

Token 1407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045164540642872453
    2. ' ,' → logprob: -7.750451564788818
    3. ',
' → logprob: -11.375452041625977
    4. '(space' → logprob: -13.000452041625977
    5. '[' → logprob: -13.500452041625977
    6. '           ' → logprob: -14.000452041625977
    7. ',index' → logprob: -14.500452041625977
    8. ')' → logprob: -14.625452041625977
    9. '<|end|>' → logprob: -14.875452041625977
    10. '   ' → logprob: -15.250452041625977

Token 1408: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.005236956290900707
    2. ' space' → logprob: -5.255237102508545
    3. '(space' → logprob: -13.130236625671387
    4. 'car' → logprob: -15.005236625671387
    5. 'spaces' → logprob: -15.255236625671387
    6. '.space' → logprob: -16.505237579345703
    7. ' ' → logprob: -16.505237579345703
    8. 'pace' → logprob: -16.630237579345703
    9. '_space' → logprob: -16.880237579345703
    10. 'self' → logprob: -17.130237579345703

Token 1409: '.index' (ID: 9736)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.034656066447496414
    2. '.index' → logprob: -3.409656047821045
    3. '))
' → logprob: -7.159656047821045
    4. ',index' → logprob: -9.409656524658203
    5. ')' → logprob: -9.909656524658203
    6. ' ))' → logprob: -10.034656524658203
    7. ',' → logprob: -10.284656524658203
    8. 'index' → logprob: -12.159656524658203
    9. '))
' → logprob: -12.534656524658203
    10. '))

' → logprob: -12.784656524658203

Token 1410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12866443395614624
    2. ')' → logprob: -2.753664493560791
    3. '))' → logprob: -2.878664493560791
    4. '<|end|>' → logprob: -7.878664493560791
    5. ',
' → logprob: -8.753664016723633
    6. ',)' → logprob: -9.628664016723633
    7. '           ' → logprob: -10.003664016723633
    8. '))
' → logprob: -10.878664016723633
    9. ')]' → logprob: -11.378664016723633
    10. '<|end|>' → logprob: -11.378664016723633

Token 1411: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.008614808320999146
    2. ' space' → logprob: -4.758615016937256
    3. 'car' → logprob: -16.008615493774414
    4. '(space' → logprob: -16.258615493774414
    5. 'spaces' → logprob: -17.633615493774414
    6. ' ' → logprob: -17.758615493774414
    7. '                ' → logprob: -18.258615493774414
    8. '               ' → logprob: -18.508615493774414
    9. '```' → logprob: -18.633615493774414
    10. '.space' → logprob: -18.758615493774414

Token 1412: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0022452964913100004
    2. '))
' → logprob: -6.1272454261779785
    3. ' ))' → logprob: -10.25224494934082
    4. ',' → logprob: -11.12724494934082
    5. ')' → logprob: -12.12724494934082
    6. ' ' → logprob: -14.37724494934082
    7. '));' → logprob: -14.62724494934082
    8. '       ' → logprob: -14.75224494934082
    9. ')))' → logprob: -14.75224494934082
    10. '))

' → logprob: -14.87724494934082

Token 1413: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8138362765312195
    2. '           ' → logprob: -1.4388363361358643
    3. ',' → logprob: -1.9388363361358643
    4. '       ' → logprob: -2.5638363361358643
    5. '               ' → logprob: -3.0638363361358643
    6. '<|end|>' → logprob: -4.438836097717285
    7. '```' → logprob: -4.563836097717285
    8. '   ' → logprob: -4.563836097717285
    9. '[' → logprob: -5.313836097717285
    10. '                   ' → logprob: -6.063836097717285

Token 1414: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06834929436445236
    2. 'c' → logprob: -3.9433493614196777
    3. ' if' → logprob: -4.193349361419678
    4. ')' → logprob: -4.568349361419678
    5. '```' → logprob: -4.818349361419678
    6. 'if' (adapté à ' if') → logprob: -5.068349361419678
    7. '   ' → logprob: -6.568349361419678
    8. '           ' → logprob: -6.943349361419678
    9. 'tokens' → logprob: -7.193349361419678
    10. '+' → logprob: -7.443349361419678

Token 1415: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007252465467900038
    2. 'not' → logprob: -5.3822526931762695
    3. ' candidates' → logprob: -6.6322526931762695
    4. ' not' → logprob: -7.0072526931762695
    5. 'len' → logprob: -8.25725269317627
    6. '   ' → logprob: -9.00725269317627
    7. '       ' → logprob: -12.25725269317627
    8. ' len' → logprob: -12.50725269317627
    9. ' c' → logprob: -12.75725269317627
    10. '     ' → logprob: -13.50725269317627

Token 1416: ':
' (ID: 734)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.5332478142227046e-05
    2. '=' → logprob: -12.125015258789062
    3. 'sort' → logprob: -12.125015258789062
    4. '.' → logprob: -13.375015258789062
    5. ':' → logprob: -13.750015258789062
    6. '	sort' → logprob: -14.125015258789062
    7. '.Sort' → logprob: -15.750015258789062
    8. ' sort' → logprob: -15.750015258789062
    9. '<|end|>' → logprob: -15.750015258789062
    10. '.append' → logprob: -16.000015258789062

Token 1417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026442641392350197
    2. 'c' → logprob: -6.252644062042236
    3. '       ' → logprob: -7.377644062042236
    4. '```' → logprob: -10.002644538879395
    5. '   ' → logprob: -11.627644538879395
    6. '               ' → logprob: -12.002644538879395
    7. 'return' → logprob: -12.002644538879395
    8. ' candidates' → logprob: -12.377644538879395
    9. 'tokens' → logprob: -12.502644538879395
    10. ' c' → logprob: -12.627644538879395

Token 1418: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0066072531044483185
    2. '           ' → logprob: -5.2566070556640625
    3. 'return' → logprob: -7.0066070556640625
    4. ' candidates' → logprob: -8.631607055664062
    5. 'cand' → logprob: -8.631607055664062
    6. '
' → logprob: -10.131607055664062
    7. '       ' → logprob: -10.756607055664062
    8. 'candidate' → logprob: -11.131607055664062
    9. '_candidates' → logprob: -11.256607055664062
    10. '```' → logprob: -12.006607055664062

Token 1419: ' Take' (ID: 14166)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.133198283147067e-05
    2. 'return' → logprob: -11.000051498413086
    3. '           ' → logprob: -11.500051498413086
    4. '
' → logprob: -11.500051498413086
    5. ' candidates' → logprob: -11.625051498413086
    6. 'cand' → logprob: -13.375051498413086
    7. '       ' → logprob: -13.750051498413086
    8. 'sorted' → logprob: -13.750051498413086
    9. '```' → logprob: -14.000051498413086
    10. 'candidate' → logprob: -14.625051498413086

Token 1420: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0024799390230327845
    2. ' min' → logprob: -6.0024800300598145
    3. '   ' → logprob: -12.877479553222656
    4. 'sorted' → logprob: -14.002479553222656
    5. '(min' → logprob: -14.752479553222656
    6. '
' → logprob: -15.752479553222656
    7. '           ' → logprob: -16.252479553222656
    8. '	min' → logprob: -16.752479553222656
    9. '=min' → logprob: -17.252479553222656
    10. '```' → logprob: -17.252479553222656

Token 1421: ' diff' (ID: 8868)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.0849449634552002
    2. 'diff' → logprob: -1.4599449634552002
    3. 'min' → logprob: -1.8349449634552002
    4. '(min' → logprob: -1.9599449634552002
    5. '(' → logprob: -3.4599449634552
    6. 'token' → logprob: -4.084944725036621
    7. 'candidate' → logprob: -4.084944725036621
    8. '(diff' → logprob: -4.209944725036621
    9. 'c' → logprob: -4.459944725036621
    10. 'sorted' → logprob: -4.584944725036621

Token 1422: ' and' (ID: 326)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.11637946218252182
    2. 'sorted' → logprob: -3.366379499435425
    3. '           ' → logprob: -3.741379499435425
    4. '=' → logprob: -4.116379261016846
    5. ' =' → logprob: -5.241379261016846
    6. 'tokens' → logprob: -5.616379261016846
    7. 'c' → logprob: -5.616379261016846
    8. '[' → logprob: -5.866379261016846
    9. 'sort' → logprob: -5.866379261016846
    10. 'token' → logprob: -5.991379261016846

Token 1423: ' smallest' (ID: 42173)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.18257036805152893
    2. ' sorted' → logprob: -1.9325703382492065
    3. 'min' → logprob: -3.932570457458496
    4. ' min' → logprob: -6.432570457458496
    5. 'c' → logprob: -7.807570457458496
    6. ' candidates' → logprob: -8.557570457458496
    7. 'sort' → logprob: -8.557570457458496
    8. 'car' → logprob: -10.432570457458496
    9. 'space' → logprob: -10.932570457458496
    10. 'key' → logprob: -10.932570457458496

Token 1424: ' index' (ID: 3472)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.4475318491458893
    2. 'index' → logprob: -1.197531819343567
    3. '(space' → logprob: -3.4475319385528564
    4. ' space' → logprob: -4.822531700134277
    5. ' index' → logprob: -5.072531700134277
    6. '_index' → logprob: -5.322531700134277
    7. '(' → logprob: -5.822531700134277
    8. '(
' → logprob: -6.697531700134277
    9. 'idx' → logprob: -7.447531700134277
    10. '_space' → logprob: -7.572531700134277

Token 1425: '
' (ID: 198)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.3903833329677582
    2. '           ' → logprob: -1.7653833627700806
    3. ' sorted' → logprob: -3.515383243560791
    4. '```' → logprob: -3.515383243560791
    5. '(sorted' → logprob: -3.640383243560791
    6. '       ' → logprob: -4.390383243560791
    7. '=' → logprob: -4.640383243560791
    8. ',' → logprob: -5.015383243560791
    9. 'return' → logprob: -5.390383243560791
    10. '
' → logprob: -5.515383243560791

Token 1426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014861159026622772
    2. 'sorted' → logprob: -5.014861106872559
    3. 'c' → logprob: -6.264861106872559
    4. 'return' → logprob: -6.639861106872559
    5. '```' → logprob: -6.639861106872559
    6. ',' → logprob: -6.889861106872559
    7. ' sorted' → logprob: -7.389861106872559
    8. '.sort' → logprob: -8.014861106872559
    9. 'tokens' → logprob: -8.389861106872559
    10. ',c' → logprob: -8.639861106872559

Token 1427: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9166791439056396
    2. 'sorted' → logprob: -0.9166791439056396
    3. '           ' → logprob: -2.2916791439056396
    4. 'return' → logprob: -2.4166791439056396
    5. 'min' → logprob: -6.041679382324219
    6. '```' → logprob: -6.291679382324219
    7. '
' → logprob: -6.666679382324219
    8. '`' → logprob: -7.416679382324219
    9. 'cand' → logprob: -7.541679382324219
    10. '       ' → logprob: -7.666679382324219

Token 1428: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -2.5776860184123507e-06
    2. 'sort' → logprob: -13.00000286102295
    3. '.' → logprob: -15.25000286102295
    4. ' .' → logprob: -17.375001907348633
    5. ' sort' → logprob: -17.750001907348633
    6. '=' → logprob: -18.000001907348633
    7. '.append' → logprob: -18.125001907348633
    8. '	sort' → logprob: -19.875001907348633
    9. ').' → logprob: -20.250001907348633
    10. '].' → logprob: -20.875001907348633

Token 1429: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5009154677391052
    2. '()[' → logprob: -1.37591552734375
    3. '[' → logprob: -2.50091552734375
    4. '()
' → logprob: -3.00091552734375
    5. '(key' → logprob: -5.25091552734375
    6. '           ' → logprob: -7.00091552734375
    7. 'key' → logprob: -7.50091552734375
    8. '[key' → logprob: -7.50091552734375
    9. '();' → logprob: -7.62591552734375
    10. '[
' → logprob: -7.75091552734375

Token 1430: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.016643023118376732
    2. 'lambda' → logprob: -4.266643047332764
    3. '(lambda' → logprob: -6.016643047332764
    4. ' lambda' → logprob: -10.766642570495605
    5. '=' → logprob: -11.141642570495605
    6. '   ' → logprob: -13.141642570495605
    7. '_lambda' → logprob: -14.516642570495605
    8. '```' → logprob: -14.766642570495605
    9. '=None' → logprob: -16.016643524169922
    10. ')' → logprob: -17.266643524169922

Token 1431: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00874292477965355
    2. ' x' → logprob: -4.758742809295654
    3. 't' → logprob: -9.508743286132812
    4. 'lambda' → logprob: -9.883743286132812
    5. ' lambda' → logprob: -14.008743286132812
    6. 'c' → logprob: -14.508743286132812
    7. '(x' → logprob: -14.633743286132812
    8. 'token' → logprob: -14.758743286132812
    9. ' t' → logprob: -15.133743286132812
    10. '   ' → logprob: -15.633743286132812

Token 1432: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020056033972650766
    2. ':x' → logprob: -6.877005577087402
    3. ':(' → logprob: -7.377005577087402
    4. '(x' → logprob: -8.127005577087402
    5. 'x' → logprob: -10.627005577087402
    6. ' (' → logprob: -11.627005577087402
    7. '(' → logprob: -12.127005577087402
    8. ' :' → logprob: -12.127005577087402
    9. ' x' → logprob: -13.127005577087402
    10. ' :(' → logprob: -13.502005577087402

Token 1433: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006074831471778452
    2. ' (' → logprob: -7.500607490539551
    3. '(lambda' → logprob: -10.62560749053955
    4. 'x' → logprob: -11.12560749053955
    5. '(' → logprob: -11.12560749053955
    6. ' x' → logprob: -15.00060749053955
    7. '(
' → logprob: -16.125606536865234
    8. '   ' → logprob: -16.375606536865234
    9. 'lambda' → logprob: -16.375606536865234
    10. '(int' → logprob: -16.625606536865234

Token 1434: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012356207298580557
    2. ' x' → logprob: -9.000123977661133
    3. '(x' → logprob: -16.875123977661133
    4. '   ' → logprob: -17.875123977661133
    5. '	x' → logprob: -19.125123977661133
    6. ')x' → logprob: -19.750123977661133
    7. '
' → logprob: -20.125123977661133
    8. '0' → logprob: -20.375123977661133
    9. '    ' → logprob: -21.000123977661133
    10. '           ' → logprob: -21.250123977661133

Token 1435: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164221473038197
    2. '[' → logprob: -4.264164447784424
    3. 'x' → logprob: -15.014163970947266
    4. ' ' → logprob: -15.264163970947266
    5. '
' → logprob: -16.389163970947266
    6. '   ' → logprob: -16.889163970947266
    7. '[
' → logprob: -18.014163970947266
    8. '.' → logprob: -18.139163970947266
    9. '#' → logprob: -18.639163970947266
    10. '```' → logprob: -18.764163970947266

Token 1436: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. 'x' → logprob: -14.875000953674316
    3. '[' → logprob: -14.875000953674316
    4. ' ' → logprob: -15.375000953674316
    5. '   ' → logprob: -16.875001907348633
    6. '
' → logprob: -19.000001907348633
    7. '00' → logprob: -19.250001907348633
    8. '000' → logprob: -19.312501907348633
    9. '۰' → logprob: -19.687501907348633
    10. '```' → logprob: -19.687501907348633

Token 1437: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00818426813930273
    2. ',x' → logprob: -4.883184432983398
    3. '[' → logprob: -8.008184432983398
    4. ' ,' → logprob: -8.633184432983398
    5. '
' → logprob: -10.633184432983398
    6. '))' → logprob: -10.883184432983398
    7. ',
' → logprob: -11.508184432983398
    8. 'x' → logprob: -12.383184432983398
    9. ' x' → logprob: -13.633184432983398
    10. ')' → logprob: -13.883184432983398

Token 1438: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019289902411401272
    2. ' x' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.75192928314209
    4. '1' → logprob: -16.376928329467773
    5. ' ' → logprob: -17.501928329467773
    6. '    ' → logprob: -18.126928329467773
    7. '	x' → logprob: -18.126928329467773
    8. ')x' → logprob: -18.126928329467773
    9. '     ' → logprob: -18.626928329467773
    10. '0' → logprob: -18.626928329467773

Token 1439: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04859089106321335
    2. '1' → logprob: -3.048590898513794
    3. ',' → logprob: -13.673590660095215
    4. '   ' → logprob: -14.173590660095215
    5. '[
' → logprob: -14.673590660095215
    6. ' ' → logprob: -15.048590660095215
    7. '#' → logprob: -15.298590660095215
    8. '
' → logprob: -15.548590660095215
    9. '```' → logprob: -16.04859161376953
    10. 'x' → logprob: -16.29859161376953

Token 1440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.0
    4. '[' → logprob: -17.25
    5. '
' → logprob: -18.0
    6. '2' → logprob: -18.25
    7. '`' → logprob: -18.625
    8. '' → logprob: -19.375
    9. '```' → logprob: -19.625
    10. '۱' → logprob: -19.8125

Token 1441: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1803441196680069
    2. '))
' → logprob: -1.8053441047668457
    3. '))[' → logprob: -7.930344104766846
    4. ',' → logprob: -9.305344581604004
    5. '[' → logprob: -9.805344581604004
    6. ')' → logprob: -10.430344581604004
    7. '));' → logprob: -10.930344581604004
    8. ')[' → logprob: -11.430344581604004
    9. ',))
' → logprob: -12.180344581604004
    10. '))

' → logprob: -12.180344581604004

Token 1442: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008905034512281418
    2. 'return' → logprob: -5.258904933929443
    3. '
' → logprob: -5.758904933929443
    4. ' return' → logprob: -7.633904933929443
    5. '            
' → logprob: -12.258905410766602
    6. '               ' → logprob: -12.508905410766602
    7. '       ' → logprob: -12.508905410766602
    8. ',' → logprob: -12.633905410766602
    9. '```' → logprob: -12.883905410766602
    10. '{return' → logprob: -13.258905410766602

Token 1443: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03874220326542854
    2. '           ' → logprob: -3.2887423038482666
    3. ' return' → logprob: -7.2887420654296875
    4. '
' → logprob: -11.038742065429688
    5. '	return' → logprob: -15.038742065429688
    6. '#' → logprob: -15.538742065429688
    7. '       ' → logprob: -15.663742065429688
    8. '		' → logprob: -16.288742065429688
    9. '   ' → logprob: -16.663742065429688
    10. '{return' → logprob: -17.038742065429688

Token 1444: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5048530030981055e-06
    2. ' candidates' → logprob: -13.500001907348633
    3. 'cand' → logprob: -20.625001907348633
    4. '   ' → logprob: -22.875001907348633
    5. '           ' → logprob: -23.750001907348633
    6. ' c' → logprob: -23.750001907348633
    7. 'candidate' → logprob: -24.000001907348633
    8. '_candidates' → logprob: -24.250001907348633
    9. 'clients' → logprob: -25.125001907348633
    10. ')c' → logprob: -25.250001907348633

Token 1445: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4987974029500037e-05
    2. '[-' → logprob: -10.625024795532227
    3. '```' → logprob: -15.625024795532227
    4. '[
' → logprob: -15.750024795532227
    5. '
' → logprob: -16.000024795532227
    6. '_candidates' → logprob: -17.250024795532227
    7. '   ' → logprob: -18.250024795532227
    8. ' [' → logprob: -18.750024795532227
    9. ')[' → logprob: -19.000024795532227
    10. '\[' → logprob: -19.250024795532227

Token 1446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019781860464718193
    2. '[' → logprob: -8.750197410583496
    3. '-' → logprob: -10.625197410583496
    4. '1' → logprob: -12.125197410583496
    5. ' ' → logprob: -12.625197410583496
    6. '.' → logprob: -12.750197410583496
    7. ':' → logprob: -14.000197410583496
    8. '][' → logprob: -14.500197410583496
    9. '
' → logprob: -15.000197410583496
    10. 'c' → logprob: -15.500197410583496

Token 1447: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0076483916491270065
    2. '[' → logprob: -4.882648468017578
    3. '2' → logprob: -10.257648468017578
    4. ']' → logprob: -13.882648468017578
    5. ' ][' → logprob: -13.882648468017578
    6. '][-' → logprob: -14.007648468017578
    7. '1' → logprob: -14.132648468017578
    8. '   ' → logprob: -14.382648468017578
    9. '
' → logprob: -14.507648468017578
    10. '-' → logprob: -14.632648468017578

Token 1448: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -15.875000953674316
    4. '-' → logprob: -15.875000953674316
    5. '3' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '```' → logprob: -17.000001907348633
    8. '۲' → logprob: -18.000001907348633
    9. '２' → logprob: -18.125001907348633
    10. '२' → logprob: -18.500001907348633

Token 1449: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004283415153622627
    2. '<|end|>' → logprob: -6.254283428192139
    3. '       ' → logprob: -6.629283428192139
    4. ')
' → logprob: -7.504283428192139
    5. ']' → logprob: -8.37928295135498
    6. '
' → logprob: -9.50428295135498
    7. ')return' → logprob: -10.00428295135498
    8. '<|end|>' → logprob: -10.12928295135498
    9. '           ' → logprob: -10.75428295135498
    10. ' )' → logprob: -10.87928295135498

Token 1450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03667409345507622
    2. 'else' → logprob: -4.4116740226745605
    3. 'return' → logprob: -4.4116740226745605
    4. '
' → logprob: -5.0366740226745605
    5. '   ' → logprob: -5.7866740226745605
    6. '        
' → logprob: -6.7866740226745605
    7. '           ' → logprob: -8.286674499511719
    8. '```' → logprob: -8.786674499511719
    9. 'if' → logprob: -9.161674499511719
    10. '    
' → logprob: -9.536674499511719

Token 1451: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047050245106220245
    2. 'return' → logprob: -3.4220502376556396
    3. 'else' (adapté à ' else') → logprob: -4.922050476074219
    4. '
' → logprob: -5.797050476074219
    5. '   ' → logprob: -6.172050476074219
    6. 'if' → logprob: -7.422050476074219
    7. '        
' → logprob: -9.547050476074219
    8. 'for' → logprob: -9.547050476074219
    9. '```' → logprob: -9.797050476074219
    10. '           ' → logprob: -10.422050476074219

Token 1452: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.656452476978302
    2. '       ' → logprob: -1.0314524173736572
    3. ':' → logprob: -2.7814524173736572
    4. '           ' → logprob: -2.7814524173736572
    5. ',' → logprob: -8.406452178955078
    6. 'return' → logprob: -8.656452178955078
    7. '   ' → logprob: -9.156452178955078
    8. '        ' → logprob: -10.156452178955078
    9. ':return' → logprob: -10.156452178955078
    10. ' =' → logprob: -10.281452178955078

Token 1453: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018677101470530033
    2. 'return' → logprob: -7.126867771148682
    3. '#' → logprob: -7.376867771148682
    4. '           ' → logprob: -8.251867294311523
    5. '   ' → logprob: -10.251867294311523
    6. 'spaces' → logprob: -10.376867294311523
    7. 'c' → logprob: -10.751867294311523
    8. 'all' → logprob: -11.001867294311523
    9. 'empty' → logprob: -11.251867294311523
    10. '
' → logprob: -11.376867294311523

Token 1454: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.63511723279953
    2. 'c' → logprob: -1.3851172924041748
    3. '       ' → logprob: -2.135117292404175
    4. 'min' → logprob: -3.760117292404175
    5. 'return' → logprob: -3.885117292404175
    6. 'spaces' → logprob: -4.260117053985596
    7. 'empty' → logprob: -4.385117053985596
    8. 'all' → logprob: -4.510117053985596
    9. 'for' → logprob: -5.510117053985596
    10. 'no' → logprob: -5.885117053985596

Token 1455: ' no' (ID: 860)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.9204484224319458
    2. '#' → logprob: -1.0454484224319458
    3. 'c' → logprob: -1.7954484224319458
    4. 'empty' → logprob: -3.6704483032226562
    5. 'no' → logprob: -4.045448303222656
    6. '           ' → logprob: -4.545448303222656
    7. '       ' → logprob: -4.920448303222656
    8. 'min' → logprob: -5.420448303222656
    9. 'all' → logprob: -5.670448303222656
    10. 'return' → logprob: -6.045448303222656

Token 1456: ' spaces' (ID: 18608)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.583257794380188
    2. ' candidates' → logprob: -1.708257794380188
    3. 'car' → logprob: -2.7082576751708984
    4. 'space' → logprob: -2.8332576751708984
    5. '_candidates' → logprob: -3.0832576751708984
    6. '_c' → logprob: -3.8332576751708984
    7. 'candidate' → logprob: -3.9582576751708984
    8. '[' → logprob: -4.833257675170898
    9. 'one' → logprob: -4.958257675170898
    10. 'spaces' → logprob: -5.333257675170898

Token 1457: ' with' (ID: 483)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.48924893140792847
    2. 'with' → logprob: -1.2392489910125732
    3. ' =' → logprob: -2.6142489910125732
    4. ' with' → logprob: -4.864248752593994
    5. '           ' → logprob: -5.364248752593994
    6. '_no' → logprob: -5.489248752593994
    7. '=' → logprob: -5.489248752593994
    8. '_candidates' → logprob: -6.989248752593994
    9. 'return' → logprob: -7.489248752593994
    10. ',' → logprob: -8.239249229431152

Token 1458: ' car' (ID: 1669)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.012323977425694466
    2. 'no' → logprob: -4.76232385635376
    3. 'cars' → logprob: -6.26232385635376
    4. 'car' → logprob: -7.26232385635376
    5. ' one' → logprob: -7.88732385635376
    6. '1' → logprob: -7.88732385635376
    7. '_one' → logprob: -9.512324333190918
    8. '```' → logprob: -9.637324333190918
    9. ' no' → logprob: -10.262324333190918
    10. 'zero' → logprob: -10.887324333190918

Token 1459: ' whose' (ID: 12119)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2397637367248535
    2. 'return' → logprob: -1.6147637367248535
    3. ' with' → logprob: -1.8647637367248535
    4. 's' → logprob: -2.7397637367248535
    5. 'with' → logprob: -2.7397637367248535
    6. '=' → logprob: -3.1147637367248535
    7. '       ' → logprob: -3.2397637367248535
    8. ' return' → logprob: -3.3647637367248535
    9. '           ' → logprob: -3.6147637367248535
    10. ':' → logprob: -3.9897637367248535

Token 1460: ' remain' (ID: 12760)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.10400291532278061
    2. ' remaining' → logprob: -2.4790029525756836
    3. '_remaining' → logprob: -4.854002952575684
    4. 'park' → logprob: -6.104002952575684
    5. 'min' → logprob: -6.979002952575684
    6. '残' → logprob: -7.104002952575684
    7. 'departure' → logprob: -7.229002952575684
    8. '.remaining' → logprob: -7.479002952575684
    9. 'remain' → logprob: -7.604002952575684
    10. 'minimum' → logprob: -8.354002952575684

Token 1461: ' time' (ID: 1058)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.2048378884792328
    2. 'time' → logprob: -1.8298379182815552
    3. '_time' → logprob: -3.8298377990722656
    4. 'car' → logprob: -7.829837799072266
    5. 'parking' → logprob: -7.829837799072266
    6. 'times' → logprob: -8.079837799072266
    7. '_' → logprob: -8.079837799072266
    8. 'ng' → logprob: -8.329837799072266
    9. 'g' → logprob: -8.329837799072266
    10. 'ning' → logprob: -8.579837799072266

Token 1462: ' >=' (ID: 5064)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9801197052001953
    2. 'is' → logprob: -1.3551197052001953
    3. '<' → logprob: -1.6051197052001953
    4. ' <' → logprob: -2.2301197052001953
    5. 'も' → logprob: -3.4801197052001953
    6. ' less' → logprob: -4.855119705200195
    7. 's' → logprob: -4.980119705200195
    8. 'が' → logprob: -5.105119705200195
    9. 'は' → logprob: -6.355119705200195
    10. 'min' → logprob: -6.980119705200195

Token 1463: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0008066523587331176
    2. ' car' → logprob: -7.12580680847168
    3. 'park' → logprob: -13.62580680847168
    4. '	car' → logprob: -15.12580680847168
    5. '(car' → logprob: -16.37580680847168
    6. '0' → logprob: -16.50080680847168
    7. '
' → logprob: -16.50080680847168
    8. '车' → logprob: -16.62580680847168
    9. '車' → logprob: -16.75080680847168
    10. 'card' → logprob: -17.00080680847168

Token 1464: ''s' (ID: 885)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018065694894175977
    2. 'park' → logprob: -9.0001802444458
    3. '.par' → logprob: -11.2501802444458
    4. '```' → logprob: -11.3751802444458
    5. ''s' → logprob: -12.1251802444458
    6. ' .' → logprob: -12.5001802444458
    7. 'def' → logprob: -12.6251802444458
    8. '._' → logprob: -12.7501802444458
    9. '_' → logprob: -12.7501802444458
    10. '.depart' → logprob: -12.8751802444458

Token 1465: ' parking' (ID: 14472)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.0040083532221615314
    2. '.' → logprob: -6.2540082931518555
    3. 'parking' → logprob: -7.0040082931518555
    4. ' park' → logprob: -7.1290082931518555
    5. 'duration' → logprob: -8.754008293151855
    6. '_' → logprob: -9.629008293151855
    7. 'departure' → logprob: -10.379008293151855
    8. '_duration' → logprob: -10.629008293151855
    9. '```' → logprob: -10.754008293151855
    10. ' parking' → logprob: -12.316508293151855

Token 1466: ' time' (ID: 1058)
  Prédit: 'duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duration' → logprob: -0.4504018723964691
    2. 'time' → logprob: -1.2004019021987915
    3. '_duration' → logprob: -2.825401782989502
    4. '_time' → logprob: -6.450401782989502
    5. '時間' → logprob: -7.825401782989502
    6. ' duration' → logprob: -8.32540225982666
    7. ' time' → logprob: -10.95040225982666
    8. '时间' → logprob: -11.32540225982666
    9. 'period' → logprob: -12.70040225982666
    10. '	duration' → logprob: -12.70040225982666

Token 1467: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8426967263221741
    2. '
' → logprob: -0.9676967263221741
    3. 'return' → logprob: -2.3426966667175293
    4. '       ' → logprob: -2.7176966667175293
    5. ',' → logprob: -4.342696666717529
    6. ' return' → logprob: -4.592696666717529
    7. '        
' → logprob: -6.467696666717529
    8. '
' → logprob: -7.717696666717529
    9. '            
' → logprob: -7.967696666717529
    10. ',
' → logprob: -7.967696666717529

Token 1468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45505833625793457
    2. '       ' → logprob: -1.0800583362579346
    3. 'return' → logprob: -3.8300583362579346
    4. ' return' → logprob: -5.5800580978393555
    5. '   ' → logprob: -8.455058097839355
    6. '
' → logprob: -9.330058097839355
    7. ',' → logprob: -9.580058097839355
    8. '#' → logprob: -10.205058097839355
    9. ' for' → logprob: -10.330058097839355
    10. 'for' → logprob: -10.955058097839355

Token 1469: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17368027567863464
    2. '       ' → logprob: -2.798680305480957
    3. '           ' → logprob: -3.298680305480957
    4. 'min' → logprob: -3.798680305480957
    5. 'small' → logprob: -4.798680305480957
    6. 'all' → logprob: -5.048680305480957
    7. 'diff' → logprob: -5.048680305480957
    8. '#' (adapté à ' #') → logprob: -5.173680305480957
    9. 'lowest' → logprob: -6.423680305480957
    10. 'less' → logprob: -6.548680305480957

Token 1470: ' use' (ID: 1199)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06329610198736191
    2. '#' → logprob: -4.063296318054199
    3. '           ' → logprob: -4.313296318054199
    4. 'for' → logprob: -4.438296318054199
    5. '       ' → logprob: -5.688296318054199
    6. 'all' → logprob: -5.813296318054199
    7. 'spaces' → logprob: -6.188296318054199
    8. '   ' → logprob: -6.688296318054199
    9. 'diff' → logprob: -6.688296318054199
    10. 'min' → logprob: -6.813296318054199

Token 1471: ' smaller' (ID: 13679)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3992287516593933
    2. '[
' → logprob: -1.774228811264038
    3. '[(' → logprob: -3.399228811264038
    4. '[' → logprob: -3.399228811264038
    5. '           ' → logprob: -3.524228811264038
    6. '       ' → logprob: -3.774228811264038
    7. 'self' → logprob: -5.024228572845459
    8. '_candidates' → logprob: -5.024228572845459
    9. '#' → logprob: -5.524228572845459
    10. '[self' → logprob: -5.649228572845459

Token 1472: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.38847464323043823
    2. 's' → logprob: -2.638474702835083
    3. 'def' → logprob: -2.763474702835083
    4. 'spaces' → logprob: -3.388474702835083
    5. 'car' → logprob: -3.513474702835083
    6. '_diff' → logprob: -3.763474702835083
    7. 'dif' → logprob: -4.013474464416504
    8. '_candidates' → logprob: -4.263474464416504
    9. 'cars' → logprob: -5.263474464416504
    10. '[' → logprob: -5.263474464416504

Token 1473: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34069451689720154
    2. '           ' → logprob: -1.340694546699524
    3. ' candidates' → logprob: -4.590694427490234
    4. '_candidates' → logprob: -4.965694427490234
    5. '
' → logprob: -5.840694427490234
    6. ' for' → logprob: -6.215694427490234
    7. '   ' → logprob: -7.090694427490234
    8. 'for' → logprob: -7.465694427490234
    9. ',' → logprob: -7.465694427490234
    10. 'def' → logprob: -7.590694427490234

Token 1474: ' now' (ID: 1954)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.9337174892425537
    2. ' all' → logprob: -2.1837174892425537
    3. '           ' → logprob: -2.5587174892425537
    4. 'for' → logprob: -2.5587174892425537
    5. '#' → logprob: -2.8087174892425537
    6. ' for' → logprob: -2.9337174892425537
    7. 'consider' → logprob: -2.9337174892425537
    8. 'find' → logprob: -3.4337174892425537
    9. '
' → logprob: -3.6837174892425537
    10. ' find' → logprob: -3.8087174892425537

Token 1475: ' car' (ID: 1669)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8878834843635559
    2. '           ' → logprob: -0.8878834843635559
    3. ' for' → logprob: -2.637883424758911
    4. 'for' → logprob: -3.137883424758911
    5. '       ' → logprob: -3.637883424758911
    6. 'return' → logprob: -5.63788366317749
    7. '=' → logprob: -5.88788366317749
    8. '_candidates' → logprob: -6.01288366317749
    9. '<|end|>' → logprob: -6.13788366317749
    10. '            
' → logprob: -6.13788366317749

Token 1476: ''s' (ID: 885)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.233150914311409
    2. 's' → logprob: -3.2331509590148926
    3. '       ' → logprob: -3.3581509590148926
    4. '.bottom' → logprob: -4.233150959014893
    5. 'bottom' → logprob: -4.483150959014893
    6. '   ' → logprob: -4.608150959014893
    7. ')' → logprob: -4.608150959014893
    8. '=' → logprob: -4.608150959014893
    9. '               ' → logprob: -4.608150959014893
    10. '_candidates' → logprob: -4.733150959014893

Token 1477: ' parking' (ID: 14472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05750053748488426
    2. 'park' → logprob: -2.9325006008148193
    3. 'parking' → logprob: -6.93250036239624
    4. '.par' → logprob: -7.93250036239624
    5. '_' → logprob: -8.182500839233398
    6. ' park' → logprob: -8.557500839233398
    7. '```' → logprob: -8.557500839233398
    8. '.depart' → logprob: -9.182500839233398
    9. 'departure' → logprob: -9.307500839233398
    10. 'par' → logprob: -10.057500839233398

Token 1478: ' time' (ID: 1058)
  Prédit: '_duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -0.6099124550819397
    2. 'duration' → logprob: -1.609912395477295
    3. 'time' → logprob: -2.234912395477295
    4. '_time' → logprob: -2.609912395477295
    5. '時間' → logprob: -2.609912395477295
    6. ' duration' → logprob: -6.359912395477295
    7. ' time' → logprob: -7.984912395477295
    8. '   ' → logprob: -8.859912872314453
    9. '期間' → logprob: -8.859912872314453
    10. 'Duration' → logprob: -9.984912872314453

Token 1479: ' larger' (ID: 12384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17095425724983215
    2. '           ' → logprob: -2.1709542274475098
    3. ' candidates' → logprob: -4.04595422744751
    4. 'for' → logprob: -5.54595422744751
    5. ' for' → logprob: -5.54595422744751
    6. '_candidates' → logprob: -5.67095422744751
    7. 'c' → logprob: -6.42095422744751
    8. 'car' → logprob: -6.54595422744751
    9. 'def' → logprob: -6.54595422744751
    10. '[
' → logprob: -6.67095422744751

Token 1480: ' than' (ID: 1572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6088562607765198
    2. '           ' → logprob: -0.9838562607765198
    3. 'for' → logprob: -4.233856201171875
    4. ',' → logprob: -4.608856201171875
    5. ' for' → logprob: -4.733856201171875
    6. '_candidates' → logprob: -4.858856201171875
    7. '=' → logprob: -5.108856201171875
    8. 'c' → logprob: -5.233856201171875
    9. '[' → logprob: -5.483856201171875
    10. ' candidates' → logprob: -5.733856201171875

Token 1481: ' remaining' (ID: 15448)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05778186023235321
    2. ' min' → logprob: -4.05778169631958
    3. 'remaining' → logprob: -4.30778169631958
    4. 'all' → logprob: -5.30778169631958
    5. 'car' → logprob: -5.43278169631958
    6. 'any' → logprob: -5.43278169631958
    7. 'space' → logprob: -5.55778169631958
    8. 'the' → logprob: -6.05778169631958
    9. 'spaces' → logprob: -6.93278169631958
    10. 'rem' → logprob: -7.80778169631958

Token 1482: ' times' (ID: 4238)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.18295793235301971
    2. 'times' → logprob: -1.8079578876495361
    3. '   ' → logprob: -7.307958126068115
    4. 'diff' → logprob: -7.557958126068115
    5. '[' → logprob: -7.682958126068115
    6. 's' → logprob: -8.182957649230957
    7. '[
' → logprob: -8.432957649230957
    8. ' times' → logprob: -8.807957649230957
    9. 'time' → logprob: -8.807957649230957
    10. '_time' → logprob: -9.057957649230957

Token 1483: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38844481110572815
    2. '       ' → logprob: -1.1384447813034058
    3. ' candidates' → logprob: -7.138444900512695
    4. '   ' → logprob: -8.013444900512695
    5. ' for' → logprob: -9.263444900512695
    6. 'for' → logprob: -9.263444900512695
    7. 'c' → logprob: -9.888444900512695
    8. ',' → logprob: -10.263444900512695
    9. '```' → logprob: -10.513444900512695
    10. '
' → logprob: -10.513444900512695

Token 1484: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050479914993047714
    2. '           ' → logprob: -3.0504798889160156
    3. '   ' → logprob: -6.425479888916016
    4. 'for' → logprob: -9.800479888916016
    5. 'c' → logprob: -10.175479888916016
    6. ' for' → logprob: -10.175479888916016
    7. '```' → logprob: -10.425479888916016
    8. 'return' → logprob: -10.675479888916016
    9. ',' → logprob: -11.175479888916016
    10. '#' → logprob: -11.300479888916016

Token 1485: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2749403119087219
    2. 'c' → logprob: -1.6499402523040771
    3. '           ' → logprob: -3.274940252304077
    4. '   ' → logprob: -6.024940490722656
    5. 'car' → logprob: -6.399940490722656
    6. 'diff' → logprob: -6.524940490722656
    7. 'for' → logprob: -7.024940490722656
    8. 'small' → logprob: -7.649940490722656
    9. 'lower' → logprob: -7.899940490722656
    10. '
' → logprob: -7.899940490722656

Token 1486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061807893216609955
    2. '=' → logprob: -2.936807870864868
    3. '.append' → logprob: -5.936808109283447
    4. '=[]' → logprob: -6.186808109283447
    5. '=[]
' → logprob: -6.686808109283447
    6. '.extend' → logprob: -7.686808109283447
    7. '           ' → logprob: -8.436807632446289
    8. '.clear' → logprob: -8.561807632446289
    9. '[:]' → logprob: -10.686807632446289
    10. '       ' → logprob: -11.311807632446289

Token 1487: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.007432223297655582
    2. '[]' → logprob: -5.257432460784912
    3. '[(' → logprob: -6.257432460784912
    4. '[
' → logprob: -8.257431983947754
    5. ' []
' → logprob: -11.007431983947754
    6. '[]

' → logprob: -13.007431983947754
    7. '[' → logprob: -14.007431983947754
    8. '           ' → logprob: -15.257431983947754
    9. ' []' → logprob: -15.632431983947754
    10. '       ' → logprob: -15.632431983947754

Token 1488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060358352959156036
    2. 'for' → logprob: -2.9353582859039307
    3. '       ' → logprob: -5.81035852432251
    4. ' for' → logprob: -6.06035852432251
    5. '   ' → logprob: -9.810358047485352
    6. '```' → logprob: -9.935358047485352
    7. '               ' → logprob: -10.935358047485352
    8. ',' → logprob: -13.560358047485352
    9. '                   ' → logprob: -13.810358047485352
    10. ' ' → logprob: -13.935358047485352

Token 1489: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011128582991659641
    2. 'car' → logprob: -4.7611284255981445
    3. '           ' → logprob: -6.6361284255981445
    4. ' for' → logprob: -6.8861284255981445
    5. 'now' → logprob: -9.011128425598145
    6. '```' → logprob: -10.886128425598145
    7. '       ' → logprob: -11.886128425598145
    8. 'current' → logprob: -12.386128425598145
    9. ' car' → logprob: -13.011128425598145
    10. '               ' → logprob: -13.261128425598145

Token 1490: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.012511413544416428
    2. ' space' → logprob: -4.387511253356934
    3. '(space' → logprob: -14.762511253356934
    4. 'car' → logprob: -14.887511253356934
    5. '           ' → logprob: -15.137511253356934
    6. '   ' → logprob: -15.262511253356934
    7. '        ' → logprob: -16.01251220703125
    8. '       ' → logprob: -16.38751220703125
    9. '               ' → logprob: -16.51251220703125
    10. ' ' → logprob: -16.63751220703125

Token 1491: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031983929220587015
    2. 'in' → logprob: -5.753198623657227
    3. 'space' → logprob: -11.753198623657227
    4. ' ' → logprob: -12.253198623657227
    5. ',' → logprob: -13.628198623657227
    6. '
' → logprob: -14.503198623657227
    7. '   ' → logprob: -14.503198623657227
    8. '        ' → logprob: -14.628198623657227
    9. '           ' → logprob: -14.753198623657227
    10. 'import' → logprob: -14.878198623657227

Token 1492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002682541264221072
    2. 'space' → logprob: -6.127682685852051
    3. ' self' → logprob: -7.627682685852051
    4. '   ' → logprob: -12.87768268585205
    5. '
' → logprob: -13.25268268585205
    6. ' space' → logprob: -13.75268268585205
    7. 's' → logprob: -13.87768268585205
    8. ' ' → logprob: -14.00268268585205
    9. '(self' → logprob: -14.12768268585205
    10. '[self' → logprob: -14.87768268585205

Token 1493: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.17980030179023743
    2. '.sp' → logprob: -1.804800271987915
    3. '_sp' → logprob: -10.179800033569336
    4. '_spaces' → logprob: -11.804800033569336
    5. '.' → logprob: -12.804800033569336
    6. '.s' → logprob: -13.429800033569336
    7. 'spaces' → logprob: -13.429800033569336
    8. ' .' → logprob: -13.804800033569336
    9. '(sp' → logprob: -14.804800033569336
    10. '..' → logprob: -14.804800033569336

Token 1494: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.009898101910948753
    2. '_find' → logprob: -4.6348981857299805
    3. '.find' → logprob: -10.13489818572998
    4. 'spaces' → logprob: -10.38489818572998
    5. '_spaces' → logprob: -11.50989818572998
    6. 'sp' → logprob: -11.63489818572998
    7. '
' → logprob: -11.75989818572998
    8. '_sp' → logprob: -11.88489818572998
    9. '_f' → logprob: -12.13489818572998
    10. '(find' → logprob: -12.13489818572998

Token 1495: '_spaces' (ID: 180762)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.21791554987430573
    2. 'find' → logprob: -2.3429155349731445
    3. '_spaces' → logprob: -2.3429155349731445
    4. 'spaces' → logprob: -5.8429155349731445
    5. 'self' → logprob: -7.8429155349731445
    6. '_found' → logprob: -8.967915534973145
    7. 'space' → logprob: -9.217915534973145
    8. '[' → logprob: -9.842915534973145
    9. '
' → logprob: -10.967915534973145
    10. 'car' → logprob: -10.967915534973145

Token 1496: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0024620986077934504
    2. 'with' → logprob: -6.127461910247803
    3. 'self' → logprob: -9.127462387084961
    4. '[self' → logprob: -9.877462387084961
    5. 'if' → logprob: -10.377462387084961
    6. '(self' → logprob: -11.252462387084961
    7. '   ' → logprob: -11.252462387084961
    8. '[' → logprob: -11.752462387084961
    9. 'With' → logprob: -11.877462387084961
    10. ' with' → logprob: -12.002462387084961

Token 1497: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.012904660776257515
    2. 'one' → logprob: -4.387904644012451
    3. 'One' → logprob: -9.01290512084961
    4. '
' → logprob: -9.01290512084961
    5. '1' → logprob: -9.63790512084961
    6. '```' → logprob: -10.63790512084961
    7. '[' → logprob: -10.76290512084961
    8. ' one' → logprob: -12.38790512084961
    9. 'car' → logprob: -12.51290512084961
    10. '...' → logprob: -12.63790512084961

Token 1498: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0003001888981088996
    2. '_c' → logprob: -8.750300407409668
    3. 'car' → logprob: -9.375300407409668
    4. '_space' → logprob: -10.250300407409668
    5. '(car' → logprob: -12.125300407409668
    6. '```' → logprob: -12.125300407409668
    7. 'Car' → logprob: -13.375300407409668
    8. '-car' → logprob: -14.000300407409668
    9. '_' → logprob: -14.125300407409668
    10. 'space' → logprob: -14.125300407409668

Token 1499: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.14572854340076447
    2. ':
' → logprob: -2.145728588104248
    3. ':' → logprob: -4.770728588104248
    4. '():' → logprob: -5.020728588104248
    5. '           ' → logprob: -6.520728588104248
    6. '):
' → logprob: -7.270728588104248
    7. '()' → logprob: -7.395728588104248
    8. '       ' → logprob: -7.895728588104248
    9. '():
' → logprob: -9.02072811126709
    10. '               ' → logprob: -9.64572811126709

Token 1500: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5782312154769897
    2. '           ' → logprob: -0.8282312154769897
    3. '       ' → logprob: -7.203231334686279
    4. '```' → logprob: -7.453231334686279
    5. '   ' → logprob: -8.703230857849121
    6. '                   ' → logprob: -9.203230857849121
    7. '	       ' → logprob: -9.203230857849121
    8. '	           ' → logprob: -9.453230857849121
    9. '[' → logprob: -9.578230857849121
    10. '            ' → logprob: -9.828230857849121

Token 1501: ' remaining' (ID: 15448)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.585732638835907
    2. '                   ' → logprob: -1.4607326984405518
    3. 'car' → logprob: -2.4607326984405518
    4. 'remaining' (adapté à ' remaining') → logprob: -2.9607326984405518
    5. 'diff' → logprob: -3.7107326984405518
    6. '           ' → logprob: -4.085732460021973
    7. 'min' → logprob: -5.085732460021973
    8. 'time' → logprob: -5.460732460021973
    9. '   ' → logprob: -5.585732460021973
    10. '```' → logprob: -5.960732460021973

Token 1502: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.0010491237044334412
    2. 's' → logprob: -7.751049041748047
    3. '_time' → logprob: -8.251049041748047
    4. 'times' → logprob: -8.876049041748047
    5. '```' → logprob: -9.751049041748047
    6. '           ' → logprob: -10.126049041748047
    7. '[' → logprob: -10.876049041748047
    8. '_' → logprob: -11.126049041748047
    9. '_tokens' → logprob: -11.376049041748047
    10. '
' → logprob: -11.376049041748047

Token 1503: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.05254243686795235
    2. ' =' → logprob: -3.3025424480438232
    3. '=' → logprob: -4.677542209625244
    4. '.sort' → logprob: -6.302542209625244
    5. 'append' → logprob: -6.677542209625244
    6. 'import' → logprob: -8.302542686462402
    7. '           ' → logprob: -8.302542686462402
    8. '               ' → logprob: -8.552542686462402
    9. '.' → logprob: -8.677542686462402
    10. ':' → logprob: -9.052542686462402

Token 1504: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5908030271530151
    2. '[self' → logprob: -0.8408030271530151
    3. '[' → logprob: -5.215803146362305
    4. ' self' → logprob: -5.340803146362305
    5. '[
' → logprob: -6.715803146362305
    6. 'space' → logprob: -6.965803146362305
    7. ' [' → logprob: -7.215803146362305
    8. '(self' → logprob: -8.090803146362305
    9. '[s' → logprob: -8.215803146362305
    10. '[(' → logprob: -8.590803146362305

Token 1505: '._' (ID: 2697)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.666702926158905
    2. '._' → logprob: -0.791702926158905
    3. '_' → logprob: -3.91670298576355
    4. '_min' → logprob: -5.541702747344971
    5. '[' → logprob: -5.916702747344971
    6. ' _' → logprob: -6.791702747344971
    7. '[_' → logprob: -6.916702747344971
    8. '_[' → logprob: -7.041702747344971
    9. '_.' → logprob: -7.666702747344971
    10. '_rem' → logprob: -7.916702747344971

Token 1506: 'remaining' (ID: 83570)
  Prédit: '_remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.005984609015285969
    2. 'remaining' → logprob: -5.130984783172607
    3. '.remaining' → logprob: -11.38098430633545
    4. '_min' → logprob: -11.63098430633545
    5. 'def' → logprob: -12.00598430633545
    6. 'Remaining' → logprob: -12.25598430633545
    7. 'min' → logprob: -12.88098430633545
    8. ' remaining' → logprob: -13.13098430633545
    9. '_re' → logprob: -13.38098430633545
    10. '#' → logprob: -13.50598430633545

Token 1507: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0077973101288080215
    2. '_space' → logprob: -5.2577972412109375
    3. 'park' → logprob: -6.5077972412109375
    4. '_time' → logprob: -7.3827972412109375
    5. 'space' → logprob: -8.007797241210938
    6. '_par' → logprob: -10.257797241210938
    7. 'pace' → logprob: -10.757797241210938
    8. '```' → logprob: -11.257797241210938
    9. '(space' → logprob: -11.757797241210938
    10. '_p' → logprob: -11.882797241210938

Token 1508: 'park' (ID: 11174)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.004660334438085556
    2. 'park' → logprob: -5.879660129547119
    3. '_space' → logprob: -6.379660129547119
    4. '_' → logprob: -10.504660606384277
    5. 'now' → logprob: -10.504660606384277
    6. 'pace' → logprob: -10.754660606384277
    7. 'time' → logprob: -10.879660606384277
    8. 'parking' → logprob: -10.879660606384277
    9. 'car' → logprob: -11.004660606384277
    10. '(space' → logprob: -11.879660606384277

Token 1509: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03315535932779312
    2. '_space' → logprob: -3.5331554412841797
    3. 'space' → logprob: -5.78315544128418
    4. 'time' → logprob: -8.40815544128418
    5. '_in' → logprob: -10.40815544128418
    6. '時間' → logprob: -11.28315544128418
    7. 'in' → logprob: -11.78315544128418
    8. '(space' → logprob: -11.90815544128418
    9. '_' → logprob: -12.40815544128418
    10. '_times' → logprob: -12.53315544128418

Token 1510: '_in' (ID: 2267)
  Prédit: '(space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -0.03053460642695427
    2. '_in' → logprob: -3.530534505844116
    3. 'space' → logprob: -7.905534744262695
    4. 'in' → logprob: -8.780534744262695
    5. '_space' → logprob: -8.780534744262695
    6. 'In' → logprob: -9.530534744262695
    7. '```' → logprob: -11.030534744262695
    8. ' space' → logprob: -12.280534744262695
    9. '.space' → logprob: -12.530534744262695
    10. '[' → logprob: -12.655534744262695

Token 1511: '_space' (ID: 36700)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.0007457832107320428
    2. '_space' → logprob: -7.75074577331543
    3. '(space' → logprob: -8.25074577331543
    4. ' space' → logprob: -9.87574577331543
    5. '
' → logprob: -14.12574577331543
    6. 'self' → logprob: -14.62574577331543
    7. '```' → logprob: -15.12574577331543
    8. 'the' → logprob: -16.00074577331543
    9. '.space' → logprob: -16.25074577331543
    10. '   ' → logprob: -16.37574577331543

Token 1512: '(space' (ID: 133023)
  Prédit: '(space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -9.088346359931165e-07
    2. 'space' → logprob: -14.250000953674316
    3. '```' → logprob: -16.0
    4. ' space' → logprob: -17.75
    5. '(
' → logprob: -18.875
    6. '(scope' → logprob: -19.0
    7. '(span' → logprob: -19.5
    8. '(surface' → logprob: -19.5
    9. '`' → logprob: -19.625
    10. ' (' → logprob: -19.875

Token 1513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010020858608186245
    2. '(space' → logprob: -7.376002311706543
    3. '               ' → logprob: -8.251002311706543
    4. 'space' → logprob: -10.126002311706543
    5. '                   ' → logprob: -11.126002311706543
    6. '[' → logprob: -11.376002311706543
    7. 'def' → logprob: -11.751002311706543
    8. ',
' → logprob: -12.001002311706543
    9. ' ,' → logprob: -12.251002311706543
    10. '           ' → logprob: -12.501002311706543

Token 1514: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.0017095671501010656
    2. ' now' → logprob: -6.376709461212158
    3. 'car' → logprob: -12.251709938049316
    4. '[now' → logprob: -13.501709938049316
    5. 'Now' → logprob: -14.876709938049316
    6. '0' → logprob: -15.626709938049316
    7. '(now' → logprob: -15.751709938049316
    8. '_now' → logprob: -16.376708984375
    9. '```' → logprob: -16.501708984375
    10. '	now' → logprob: -16.501708984375

Token 1515: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21046870946884155
    2. ')
' → logprob: -2.2104687690734863
    3. ')' → logprob: -2.7104687690734863
    4. '           ' → logprob: -4.585468769073486
    5. '):
' → logprob: -7.210468769073486
    6. ')[' → logprob: -7.210468769073486
    7. ',' → logprob: -7.585468769073486
    8. '[' → logprob: -7.835468769073486
    9. '       ' → logprob: -8.585468292236328
    10. 'if' → logprob: -8.710468292236328

Token 1516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019126241386402398
    2. '```' → logprob: -9.125191688537598
    3. '                   ' → logprob: -10.750191688537598
    4. ' for' → logprob: -11.000191688537598
    5. '           ' → logprob: -11.125191688537598
    6. ' if' → logprob: -11.750191688537598
    7. '[' → logprob: -12.250191688537598
    8. '       ' → logprob: -12.375191688537598
    9. 'for' → logprob: -13.250191688537598
    10. '                ' → logprob: -13.250191688537598

Token 1517: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08559854328632355
    2. '               ' → logprob: -3.2105984687805176
    3. 'if' (adapté à ' if') → logprob: -3.8355984687805176
    4. '           ' → logprob: -5.335598468780518
    5. 'min' → logprob: -5.460598468780518
    6. ' for' → logprob: -5.710598468780518
    7. 'car' → logprob: -5.960598468780518
    8. 'diff' → logprob: -5.960598468780518
    9. 'c' → logprob: -6.210598468780518
    10. 'dif' → logprob: -8.710598945617676

Token 1518: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.13203144073486328
    2. 'all' → logprob: -2.5070314407348633
    3. 'any' → logprob: -4.132031440734863
    4. 'remaining' → logprob: -4.507031440734863
    5. 'len' → logprob: -4.757031440734863
    6. ' not' → logprob: -5.382031440734863
    7. 'space' → logprob: -6.882031440734863
    8. 'min' → logprob: -8.382031440734863
    9. ' all' → logprob: -8.757031440734863
    10. '               ' → logprob: -9.007031440734863

Token 1519: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.0005287261446937919
    2. ' remaining' → logprob: -7.625528812408447
    3. 'all' → logprob: -11.125528335571289
    4. 'len' → logprob: -11.375528335571289
    5. 'space' → logprob: -12.250528335571289
    6. 'any' → logprob: -12.625528335571289
    7. '[' → logprob: -13.000528335571289
    8. '   ' → logprob: -14.500528335571289
    9. '           ' → logprob: -14.750528335571289
    10. '.remaining' → logprob: -15.125528335571289

Token 1520: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.08947045356035233
    2. 'times' → logprob: -2.464470386505127
    3. '           ' → logprob: -8.339470863342285
    4. '               ' → logprob: -9.464470863342285
    5. '[' → logprob: -9.714470863342285
    6. '   ' → logprob: -10.339470863342285
    7. ':' → logprob: -10.839470863342285
    8. 'Times' → logprob: -10.964470863342285
    9. 'return' → logprob: -11.089470863342285
    10. '       ' → logprob: -11.714470863342285

Token 1521: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.514595627784729
    2. ':' → logprob: -1.139595627784729
    3. '               ' → logprob: -2.7645955085754395
    4. '                   ' → logprob: -4.1395955085754395
    5. '           ' → logprob: -6.8895955085754395
    6. '[' → logprob: -6.8895955085754395
    7. 'and' → logprob: -7.5145955085754395
    8. ' and' → logprob: -7.6395955085754395
    9. ',' → logprob: -9.139595985412598
    10. '):
' → logprob: -9.889595985412598

Token 1522: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.641867458820343
    2. '                   ' → logprob: -0.766867458820343
    3. '```' → logprob: -5.016867637634277
    4. '                       ' → logprob: -7.141867637634277
    5. '           ' → logprob: -7.391867637634277
    6. '                ' → logprob: -8.641867637634277
    7. '<|end|>' → logprob: -8.891867637634277
    8. '   ' → logprob: -9.141867637634277
    9. ' for' → logprob: -9.266867637634277
    10. '...' → logprob: -9.516867637634277

Token 1523: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22034351527690887
    2. 'continue' (adapté à ' continue') → logprob: -1.9703434705734253
    3. 'car' → logprob: -3.720343589782715
    4. '               ' → logprob: -4.220343589782715
    5. 'min' → logprob: -5.345343589782715
    6. ' continue' → logprob: -5.720343589782715
    7. 'c' → logprob: -5.720343589782715
    8. 'diff' → logprob: -6.095343589782715
    9. 'for' → logprob: -6.220343589782715
    10. '   ' → logprob: -7.095343589782715

Token 1524: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003595376620069146
    2. ' for' → logprob: -8.875359535217285
    3. '```' → logprob: -9.250359535217285
    4. 'for' → logprob: -10.125359535217285
    5. '                   ' → logprob: -10.375359535217285
    6. 'tokens' → logprob: -11.125359535217285
    7. 'token' → logprob: -11.250359535217285
    8. '           ' → logprob: -12.125359535217285
    9. ',' → logprob: -12.500359535217285
    10. '       ' → logprob: -13.125359535217285

Token 1525: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027468299958854914
    2. 'for' → logprob: -9.000274658203125
    3. '```' → logprob: -9.500274658203125
    4. ' for' → logprob: -10.125274658203125
    5. 'tokens' → logprob: -11.250274658203125
    6. 'token' → logprob: -11.250274658203125
    7. '                   ' → logprob: -13.125274658203125
    8. '           ' → logprob: -13.250274658203125
    9. 'import' → logprob: -13.500274658203125
    10. ' tokens' → logprob: -14.125274658203125

Token 1526: ' min' (ID: 1349)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8248815536499023
    2. 'for' → logprob: -1.3248815536499023
    3. 'min' (adapté à ' min') → logprob: -1.5748815536499023
    4. 'car' → logprob: -2.8248815536499023
    5. '               ' → logprob: -3.6998815536499023
    6. ' for' → logprob: -6.449881553649902
    7. ' min' → logprob: -6.949881553649902
    8. '           ' → logprob: -7.949881553649902
    9. 'dif' → logprob: -7.949881553649902
    10. ' diff' → logprob: -8.074881553649902

Token 1527: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.0027020431589335203
    2. '_diff' → logprob: -6.502702236175537
    3. '_time' → logprob: -8.002701759338379
    4. '_rem' → logprob: -8.252701759338379
    5. '_times' → logprob: -8.752701759338379
    6. 'diff' → logprob: -9.002701759338379
    7. '_car' → logprob: -9.252701759338379
    8. 'remaining' → logprob: -9.377701759338379
    9. '               ' → logprob: -9.502701759338379
    10. '           ' → logprob: -11.627701759338379

Token 1528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3185044825077057
    2. '=' → logprob: -1.6935044527053833
    3. ' <' → logprob: -3.943504571914673
    4. '.append' → logprob: -4.568504333496094
    5. ',' → logprob: -4.693504333496094
    6. '-' → logprob: -4.943504333496094
    7. ' -' → logprob: -5.068504333496094
    8. ')' → logprob: -5.068504333496094
    9. '_times' → logprob: -5.068504333496094
    10. '_space' → logprob: -5.318504333496094

Token 1529: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4525131583213806
    2. 'car' → logprob: -1.2025132179260254
    3. ' min' → logprob: -2.9525132179260254
    4. ' car' → logprob: -4.952513217926025
    5. 'max' → logprob: -6.077513217926025
    6. 'space' → logprob: -6.452513217926025
    7. 'abs' → logprob: -9.077512741088867
    8. ' max' → logprob: -9.577512741088867
    9. ' space' → logprob: -9.577512741088867
    10. '(min' → logprob: -10.327512741088867

Token 1530: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16141560673713684
    2. '(min' → logprob: -2.0364155769348145
    3. 'remaining' → logprob: -4.5364155769348145
    4. '_remaining' → logprob: -6.4114155769348145
    5. 'min' → logprob: -6.5364155769348145
    6. '[' → logprob: -6.5364155769348145
    7. '(
' → logprob: -6.6614155769348145
    8. '([' → logprob: -6.9114155769348145
    9. '[min' → logprob: -8.161416053771973
    10. 'Remaining' → logprob: -8.536416053771973

Token 1531: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.020734336227178574
    2. 'car' → logprob: -4.5207343101501465
    3. '(' → logprob: -5.1457343101501465
    4. 'min' → logprob: -6.7707343101501465
    5. '_remaining' → logprob: -6.7707343101501465
    6. '(car' → logprob: -7.5207343101501465
    7. '[' → logprob: -8.020734786987305
    8. '(min' → logprob: -8.520734786987305
    9. ' remaining' → logprob: -8.770734786987305
    10. 'space' → logprob: -9.645734786987305

Token 1532: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.00662608165293932
    2. '_remaining' → logprob: -6.256626129150391
    3. '_' → logprob: -6.506626129150391
    4. '[' → logprob: -7.006626129150391
    5. '_time' → logprob: -7.631626129150391
    6. 'remaining' → logprob: -7.756626129150391
    7. 'times' → logprob: -8.25662612915039
    8. '[-' → logprob: -8.38162612915039
    9. '(' → logprob: -9.25662612915039
    10. '   ' → logprob: -9.63162612915039

Token 1533: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39647844433784485
    2. '               ' → logprob: -1.3964784145355225
    3. ')' → logprob: -3.5214784145355225
    4. ' <' → logprob: -3.8964784145355225
    5. '           ' → logprob: -4.271478652954102
    6. '<' → logprob: -5.521478652954102
    7. ')
' → logprob: -5.771478652954102
    8. ' ,' → logprob: -6.271478652954102
    9. '),' → logprob: -6.521478652954102
    10. ')<' → logprob: -6.896478652954102

Token 1534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002908910100813955
    2. '```' → logprob: -8.375290870666504
    3. 'diff' → logprob: -11.000290870666504
    4. '                   ' → logprob: -11.125290870666504
    5. '           ' → logprob: -11.625290870666504
    6. ' if' → logprob: -11.875290870666504
    7. 'if' → logprob: -12.250290870666504
    8. '                ' → logprob: -13.625290870666504
    9. '              ' → logprob: -14.125290870666504
    10. '``' → logprob: -14.250290870666504

Token 1535: ' #' (ID: 1069)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.07380471378564835
    2. ' diff' → logprob: -3.0738046169281006
    3. '               ' → logprob: -3.6988046169281006
    4. '	diff' → logprob: -9.69880485534668
    5. '                   ' → logprob: -10.57380485534668
    6. 'for' → logprob: -11.07380485534668
    7. 'dif' → logprob: -11.69880485534668
    8. '           ' → logprob: -12.19880485534668
    9. ' for' → logprob: -12.32380485534668
    10. '   ' → logprob: -12.44880485534668

Token 1536: ' all' (ID: 722)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1347915083169937
    2. 'if' → logprob: -2.134791612625122
    3. ' diff' → logprob: -5.759791374206543
    4. '               ' → logprob: -5.884791374206543
    5. ' if' → logprob: -6.384791374206543
    6. '                   ' → logprob: -9.509791374206543
    7. '           ' → logprob: -10.259791374206543
    8. 'difference' → logprob: -10.384791374206543
    9. 'for' → logprob: -10.759791374206543
    10. 'dif' → logprob: -11.259791374206543

Token 1537: ' less' (ID: 3760)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.39615947008132935
    2. ' min' → logprob: -2.1461594104766846
    3. 'car' → logprob: -2.5211594104766846
    4. 'diff' → logprob: -2.6461594104766846
    5. '               ' → logprob: -4.396159648895264
    6. '[min' → logprob: -4.521159648895264
    7. '(min' → logprob: -5.021159648895264
    8. ' car' → logprob: -5.021159648895264
    9. ' diff' → logprob: -5.271159648895264
    10. 'remaining' → logprob: -5.521159648895264

Token 1538: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.5867970585823059
    2. '_than' → logprob: -1.0867969989776611
    3. '               ' → logprob: -2.961796998977661
    4. 'than' → logprob: -3.586796998977661
    5. '           ' → logprob: -4.83679723739624
    6. '_THAN' → logprob: -5.96179723739624
    7. 'er' → logprob: -5.96179723739624
    8. '                   ' → logprob: -6.21179723739624
    9. '<th' → logprob: -6.21179723739624
    10. ' <' → logprob: -6.46179723739624

Token 1539: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.03805583342909813
    2. ' car' → logprob: -3.288055896759033
    3. '               ' → logprob: -11.913055419921875
    4. '           ' → logprob: -12.913055419921875
    5. '	car' → logprob: -12.913055419921875
    6. '(car' → logprob: -13.788055419921875
    7. '   ' → logprob: -14.663055419921875
    8. '                   ' → logprob: -15.038055419921875
    9. '_car' → logprob: -15.538055419921875
    10. '```' → logprob: -15.788055419921875

Token 1540: ''s' (ID: 885)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005441978108137846
    2. '               ' → logprob: -5.505442142486572
    3. '           ' → logprob: -7.880442142486572
    4. '   ' → logprob: -8.255441665649414
    5. '                   ' → logprob: -8.630441665649414
    6. 'if' → logprob: -9.505441665649414
    7. ' ' → logprob: -10.005441665649414
    8. ' if' → logprob: -10.005441665649414
    9. '>' → logprob: -10.255441665649414
    10. '       ' → logprob: -10.880441665649414

Token 1541: ' time' (ID: 1058)
  Prédit: 'park'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.08082079887390137
    2. '.' → logprob: -2.5808207988739014
    3. ' park' → logprob: -6.9558210372924805
    4. 'parking' → logprob: -7.9558210372924805
    5. '```' → logprob: -8.45582103729248
    6. '_' → logprob: -9.20582103729248
    7. '   ' → logprob: -9.33082103729248
    8. 'par' → logprob: -10.20582103729248
    9. ' ' → logprob: -10.58082103729248
    10. '``' → logprob: -10.70582103729248

Token 1542: ' here' (ID: 2105)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04432746767997742
    2. ' if' → logprob: -3.1693274974823
    3. '           ' → logprob: -7.419327259063721
    4. 'if' → logprob: -7.544327259063721
    5. ',' → logprob: -9.419327735900879
    6. ' for' → logprob: -10.544327735900879
    7. '                   ' → logprob: -11.419327735900879
    8. '
' → logprob: -11.544327735900879
    9. '<|end|>' → logprob: -11.794327735900879
    10. ' ' → logprob: -12.169327735900879

Token 1543: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028789376374334097
    2. 'diff' → logprob: -6.0028791427612305
    3. ' if' → logprob: -8.87787914276123
    4. 'if' → logprob: -9.62787914276123
    5. ' diff' → logprob: -9.62787914276123
    6. ' for' → logprob: -10.37787914276123
    7. 'for' → logprob: -10.50287914276123
    8. '
' → logprob: -10.75287914276123
    9. '                   ' → logprob: -11.12787914276123
    10. '           ' → logprob: -11.12787914276123

Token 1544: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.656383680412546e-05
    2. ' if' → logprob: -10.875046730041504
    3. 'if' → logprob: -11.000046730041504
    4. '           ' → logprob: -13.000046730041504
    5. '```' → logprob: -13.000046730041504
    6. '                   ' → logprob: -13.500046730041504
    7. 'diff' → logprob: -13.625046730041504
    8. '
' → logprob: -13.875046730041504
    9. 'for' → logprob: -14.375046730041504
    10. 'def' → logprob: -14.625046730041504

Token 1545: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.06967418640851974
    2. '               ' → logprob: -3.569674253463745
    3. ' diff' → logprob: -3.569674253463745
    4. 'if' → logprob: -4.819674015045166
    5. ' if' → logprob: -5.944674015045166
    6. '	diff' → logprob: -9.819674491882324
    7. 'for' → logprob: -9.944674491882324
    8. '                   ' → logprob: -10.069674491882324
    9. 'c' → logprob: -10.194674491882324
    10. 'difference' → logprob: -10.694674491882324

Token 1546: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6331665515899658
    2. '=' → logprob: -0.7581665515899658
    3. '               ' → logprob: -8.133166313171387
    4. '           ' → logprob: -8.383166313171387
    5. '                   ' → logprob: -10.508166313171387
    6. 's' → logprob: -12.633166313171387
    7. ',' → logprob: -12.883166313171387
    8. '                ' → logprob: -13.133166313171387
    9. '   ' → logprob: -13.633166313171387
    10. '       ' → logprob: -13.758166313171387

Token 1547: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.002702162368223071
    2. ' car' → logprob: -6.252702236175537
    3. 'abs' → logprob: -7.252702236175537
    4. '(car' → logprob: -11.127701759338379
    5. '               ' → logprob: -11.252701759338379
    6. ' abs' → logprob: -11.502701759338379
    7. 'min' → logprob: -12.002701759338379
    8. '-car' → logprob: -12.502701759338379
    9. '   ' → logprob: -12.502701759338379
    10. '	car' → logprob: -12.877701759338379

Token 1548: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0014269021339714527
    2. '._' → logprob: -6.626426696777344
    3. ' .' → logprob: -10.376426696777344
    4. '-' → logprob: -11.751426696777344
    5. '.par' → logprob: -11.876426696777344
    6. '```' → logprob: -12.001426696777344
    7. '_' → logprob: -12.251426696777344
    8. '.car' → logprob: -12.376426696777344
    9. '_.' → logprob: -12.376426696777344
    10. '   ' → logprob: -13.001426696777344

Token 1549: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -4.513339445111342e-05
    2. '-' → logprob: -10.500044822692871
    3. 'parking' → logprob: -12.250044822692871
    4. '```' → logprob: -12.250044822692871
    5. ' park' → logprob: -13.000044822692871
    6. 'par' → logprob: -13.750044822692871
    7. 'pack' → logprob: -14.250044822692871
    8. '.' → logprob: -14.500044822692871
    9. '_' → logprob: -14.750044822692871
    10. '
' → logprob: -15.125044822692871

Token 1550: '_duration' (ID: 59503)
  Prédit: '_duration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_duration' → logprob: -2.5941604690160602e-05
    2. 'duration' → logprob: -10.875025749206543
    3. 'Duration' → logprob: -13.250025749206543
    4. '_' → logprob: -13.375025749206543
    5. '_DURATION' → logprob: -13.375025749206543
    6. '
' → logprob: -15.500025749206543
    7. '-duration' → logprob: -15.500025749206543
    8. '_time' → logprob: -15.625025749206543
    9. 'd' → logprob: -15.750025749206543
    10. '-' → logprob: -15.750025749206543

Token 1551: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021453350782394
    2. '-' → logprob: -2.3502144813537598
    3. '-min' → logprob: -12.600214958190918
    4. ' ' → logprob: -13.600214958190918
    5. '[' → logprob: -13.975214958190918
    6. ' ' → logprob: -14.725214958190918
    7. ' -
' → logprob: -14.850214958190918
    8. ',' → logprob: -15.100214958190918
    9. '   ' → logprob: -15.100214958190918
    10. '<|end|>' → logprob: -15.475214958190918

Token 1552: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001584850688232109
    2. ' min' → logprob: -8.750158309936523
    3. '(min' → logprob: -17.250158309936523
    4. '	min' → logprob: -19.000158309936523
    5. '_min' → logprob: -19.375158309936523
    6. '[min' → logprob: -19.375158309936523
    7. 'max' → logprob: -20.500158309936523
    8. ' ' → logprob: -20.875158309936523
    9. '   ' → logprob: -21.000158309936523
    10. '=min' → logprob: -21.125158309936523

Token 1553: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -4.723352049040841e-06
    2. 'remaining' → logprob: -12.625004768371582
    3. 'Remaining' → logprob: -13.625004768371582
    4. 'min' → logprob: -15.750004768371582
    5. '_existing' → logprob: -17.125003814697266
    6. '(min' → logprob: -17.875003814697266
    7. '_min' → logprob: -18.375003814697266
    8. '.remaining' → logprob: -18.750003814697266
    9. '[' → logprob: -19.500003814697266
    10. '```' → logprob: -19.500003814697266

Token 1554: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006002386566251516
    2. ',' → logprob: -6.131002426147461
    3. '<|end|>' → logprob: -6.381002426147461
    4. '                   ' → logprob: -7.756002426147461
    5. '<|end|>' → logprob: -7.881002426147461
    6. ')' → logprob: -8.006002426147461
    7. ' candidates' → logprob: -8.006002426147461
    8. '_candidates' → logprob: -8.631002426147461
    9. '           ' → logprob: -8.881002426147461
    10. ',c' → logprob: -9.131002426147461

Token 1555: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033542821183800697
    2. ',' → logprob: -6.628354072570801
    3. ' candidates' → logprob: -7.128354072570801
    4. ')' → logprob: -8.0033540725708
    5. '           ' → logprob: -8.0033540725708
    6. '                   ' → logprob: -8.6283540725708
    7. ',c' → logprob: -9.2533540725708
    8. '<|end|>' → logprob: -9.5033540725708
    9. ' for' → logprob: -9.6283540725708
    10. ' if' → logprob: -10.8783540725708

Token 1556: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14221221208572388
    2. '               ' → logprob: -2.517212152481079
    3. ' candidates' → logprob: -3.017212152481079
    4. '           ' → logprob: -5.892212390899658
    5. ' c' → logprob: -9.3922119140625
    6. '                   ' → logprob: -10.0172119140625
    7. '   ' → logprob: -11.1422119140625
    8. '_candidates' → logprob: -11.6422119140625
    9. '       ' → logprob: -12.0172119140625
    10. '```' → logprob: -12.3922119140625

Token 1557: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.374227425316349e-05
    2. '.' → logprob: -9.750073432922363
    3. '.app' → logprob: -12.625073432922363
    4. '           ' → logprob: -12.625073432922363
    5. 'append' → logprob: -12.875073432922363
    6. ' .' → logprob: -12.875073432922363
    7. ',' → logprob: -13.125073432922363
    8. '.sort' → logprob: -14.375073432922363
    9. 'Append' → logprob: -15.125073432922363
    10. '<|end|>' → logprob: -16.12507438659668

Token 1558: '((' (ID: 2054)
  Prédit: '(diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.00198656739667058
    2. '(' → logprob: -6.251986503601074
    3. ' (' → logprob: -10.001986503601074
    4. '(
' → logprob: -11.751986503601074
    5. '(car' → logprob: -13.751986503601074
    6. '((' → logprob: -14.251986503601074
    7. '(c' → logprob: -14.376986503601074
    8. '(dist' → logprob: -14.626986503601074
    9. '   ' → logprob: -15.251986503601074
    10. '(d' → logprob: -15.376986503601074

Token 1559: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -3.650518920039758e-06
    2. ' diff' → logprob: -12.750003814697266
    3. '(diff' → logprob: -14.125003814697266
    4. '	diff' → logprob: -16.875003814697266
    5. 'dif' → logprob: -19.500003814697266
    6. '   ' → logprob: -19.750003814697266
    7. '.diff' → logprob: -19.875003814697266
    8. '_diff' → logprob: -20.250003814697266
    9. 'Diff' → logprob: -21.000003814697266
    10. '
' → logprob: -21.125003814697266

Token 1560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2723104848410003e-05
    2. ' ,' → logprob: -11.000022888183594
    3. ',
' → logprob: -12.625022888183594
    4. '<|end|>' → logprob: -14.500022888183594
    5. '           ' → logprob: -14.750022888183594
    6. '[' → logprob: -15.375022888183594
    7. '‌,' → logprob: -15.750022888183594
    8. '   ' → logprob: -15.875022888183594
    9. ')' → logprob: -16.125022888183594
    10. '       ' → logprob: -16.250022888183594

Token 1561: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.03804344683885574
    2. ' space' → logprob: -3.28804349899292
    3. '(space' → logprob: -13.538043022155762
    4. '_space' → logprob: -16.038043975830078
    5. '.space' → logprob: -16.163043975830078
    6. 'spaces' → logprob: -16.163043975830078
    7. 'x' → logprob: -16.538043975830078
    8. ' espacio' → logprob: -16.538043975830078
    9. '<|end|>' → logprob: -16.913043975830078
    10. ' espace' → logprob: -18.038043975830078

Token 1562: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.08704730868339539
    2. '[' → logprob: -2.7120473384857178
    3. '.' → logprob: -4.087047100067139
    4. 'index' → logprob: -9.212047576904297
    5. ',' → logprob: -11.087047576904297
    6. '   ' → logprob: -11.837047576904297
    7. ' .' → logprob: -12.087047576904297
    8. '#index' → logprob: -12.087047576904297
    9. ',index' → logprob: -12.462047576904297
    10. '.indices' → logprob: -12.462047576904297

Token 1563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ' ,' → logprob: -12.000012397766113
    3. '[' → logprob: -12.750012397766113
    4. '<|end|>' → logprob: -13.625012397766113
    5. ',
' → logprob: -14.500012397766113
    6. '           ' → logprob: -15.625012397766113
    7. '<|end|>' → logprob: -15.750012397766113
    8. '       ' → logprob: -16.125011444091797
    9. '...,' → logprob: -16.125011444091797
    10. '...' → logprob: -16.375011444091797

Token 1564: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.020544573664665222
    2. ' space' → logprob: -3.8955445289611816
    3. '(space' → logprob: -13.02054500579834
    4. '.space' → logprob: -15.77054500579834
    5. 'spaces' → logprob: -16.145544052124023
    6. '```' → logprob: -17.395544052124023
    7. '_space' → logprob: -17.395544052124023
    8. 'spacing' → logprob: -17.895544052124023
    9. ' espacio' → logprob: -17.895544052124023
    10. ' ' → logprob: -18.145544052124023

Token 1565: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06323780864477158
    2. '[' → logprob: -3.0632379055023193
    3. '))
' → logprob: -4.93823766708374
    4. ')' → logprob: -5.18823766708374
    5. ')[' → logprob: -6.81323766708374
    6. ',' → logprob: -8.688238143920898
    7. ')]' → logprob: -8.813238143920898
    8. '])' → logprob: -8.813238143920898
    9. '))[' → logprob: -9.563238143920898
    10. ' ))' → logprob: -10.188238143920898

Token 1566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08274929970502853
    2. '       ' → logprob: -3.707749366760254
    3. ')' → logprob: -3.957749366760254
    4. '```' → logprob: -4.332749366760254
    5. '<|end|>' → logprob: -4.707749366760254
    6. '.sort' → logprob: -4.957749366760254
    7. '               ' → logprob: -6.082749366760254
    8. '   ' → logprob: -6.207749366760254
    9. '[' → logprob: -7.332749366760254
    10. 'sorted' → logprob: -8.582749366760254

Token 1567: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.719146192073822
    2. '           ' → logprob: -1.0941462516784668
    3. 'if' (adapté à ' if') → logprob: -1.8441462516784668
    4. ' if' → logprob: -4.094146251678467
    5. ' candidates' → logprob: -6.469146251678467
    6. '       ' → logprob: -7.094146251678467
    7. '_candidates' → logprob: -8.344145774841309
    8. '   ' → logprob: -8.969145774841309
    9. '
' → logprob: -9.344145774841309
    10. '```' → logprob: -9.344145774841309

Token 1568: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002146216109395027
    2. 'not' → logprob: -6.377146244049072
    3. ' candidates' → logprob: -8.252145767211914
    4. ' not' → logprob: -8.627145767211914
    5. 'len' → logprob: -13.377145767211914
    6. '           ' → logprob: -14.127145767211914
    7. '   ' → logprob: -14.127145767211914
    8. '       ' → logprob: -15.252145767211914
    9. '_candidates' → logprob: -15.377145767211914
    10. ' c' → logprob: -15.752145767211914

Token 1569: ':
' (ID: 734)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.004386794753372669
    2. '           ' → logprob: -5.629386901855469
    3. 'sort' → logprob: -8.629386901855469
    4. '       ' → logprob: -8.754386901855469
    5. ':' → logprob: -8.879386901855469
    6. ':
' → logprob: -9.129386901855469
    7. '.' → logprob: -9.879386901855469
    8. '               ' → logprob: -10.129386901855469
    9. '```' → logprob: -10.129386901855469
    10. '.append' → logprob: -11.504386901855469

Token 1570: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08112433552742004
    2. 'c' → logprob: -2.5811243057250977
    3. '               ' → logprob: -6.706124305725098
    4. '```' → logprob: -7.456124305725098
    5. ' candidates' → logprob: -8.331124305725098
    6. '_candidates' → logprob: -9.206124305725098
    7. ' c' → logprob: -11.081124305725098
    8. '#' → logprob: -11.581124305725098
    9. ')c' → logprob: -11.831124305725098
    10. '
' → logprob: -12.081124305725098

Token 1571: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07905943691730499
    2. '           ' → logprob: -2.579059362411499
    3. ' candidates' → logprob: -9.329059600830078
    4. '               ' → logprob: -10.204059600830078
    5. '#' → logprob: -10.829059600830078
    6. 'candidate' → logprob: -11.579059600830078
    7. '_candidates' → logprob: -12.204059600830078
    8. 'cand' → logprob: -12.704059600830078
    9. '   ' → logprob: -12.954059600830078
    10. 'return' → logprob: -13.329059600830078

Token 1572: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.3306015716807451e-05
    2. '.append' → logprob: -12.50001335144043
    3. ' .' → logprob: -12.62501335144043
    4. '.' → logprob: -12.62501335144043
    5. 'sort' → logprob: -13.12501335144043
    6. '           ' → logprob: -14.37501335144043
    7. '.c' → logprob: -16.25001335144043
    8. '=' → logprob: -17.12501335144043
    9. '       ' → logprob: -17.25001335144043
    10. ').' → logprob: -17.87501335144043

Token 1573: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.006803121417760849
    2. 'key' → logprob: -5.006803035736084
    3. ',key' → logprob: -9.881803512573242
    4. '[key' → logprob: -10.756803512573242
    5. '           ' → logprob: -12.131803512573242
    6. ' key' → logprob: -12.506803512573242
    7. '(lambda' → logprob: -13.256803512573242
    8. '               ' → logprob: -13.381803512573242
    9. '```' → logprob: -13.881803512573242
    10. '       ' → logprob: -14.506803512573242

Token 1574: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.055673908442258835
    2. 'lambda' → logprob: -3.180673837661743
    3. '(lambda' → logprob: -4.680674076080322
    4. 'key' → logprob: -6.055674076080322
    5. '(key' → logprob: -7.305674076080322
    6. ',key' → logprob: -8.930673599243164
    7. '=' → logprob: -10.055673599243164
    8. '               ' → logprob: -10.555673599243164
    9. '                   ' → logprob: -10.930673599243164
    10. '[key' → logprob: -11.055673599243164

Token 1575: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3249317407608032
    2. 'x' → logprob: -1.3249317407608032
    3. '(lambda' → logprob: -4.824931621551514
    4. ' lambda' → logprob: -5.949931621551514
    5. ' x' → logprob: -7.324931621551514
    6. '(x' → logprob: -8.699932098388672
    7. '=lambda' → logprob: -9.074932098388672
    8. '   ' → logprob: -11.324932098388672
    9. '               ' → logprob: -12.324932098388672
    10. ' (' → logprob: -12.699932098388672

Token 1576: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007371169049292803
    2. 'x' → logprob: -5.882370948791504
    3. '=lambda' → logprob: -5.882370948791504
    4. '(x' → logprob: -7.882370948791504
    5. ' x' → logprob: -8.382370948791504
    6. '=' → logprob: -8.632370948791504
    7. ':x' → logprob: -8.632370948791504
    8. '[' → logprob: -8.757370948791504
    9. '   ' → logprob: -8.882370948791504
    10. ' :' → logprob: -9.632370948791504

Token 1577: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00899718888103962
    2. ' (' → logprob: -4.758996963500977
    3. '(lambda' → logprob: -8.508996963500977
    4. 'x' → logprob: -8.883996963500977
    5. ' x' → logprob: -10.258996963500977
    6. 'lambda' → logprob: -12.008996963500977
    7. '(' → logprob: -14.258996963500977
    8. ' lambda' → logprob: -15.758996963500977
    9. '   ' → logprob: -16.008996963500977
    10. '0' → logprob: -16.258996963500977

Token 1578: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9504606825648807e-05
    2. '0' → logprob: -11.375019073486328
    3. ' x' → logprob: -11.750019073486328
    4. '(x' → logprob: -16.125019073486328
    5. '   ' → logprob: -17.125019073486328
    6. '1' → logprob: -17.875019073486328
    7. '[' → logprob: -18.875019073486328
    8. '	x' → logprob: -19.375019073486328
    9. '           ' → logprob: -19.625019073486328
    10. '
' → logprob: -19.875019073486328

Token 1579: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31326910853385925
    2. '0' → logprob: -1.3132691383361816
    3. '   ' → logprob: -13.188268661499023
    4. '1' → logprob: -13.688268661499023
    5. ' ' → logprob: -14.063268661499023
    6. '#' → logprob: -14.188268661499023
    7. '           ' → logprob: -14.438268661499023
    8. '       ' → logprob: -14.813268661499023
    9. '.' → logprob: -15.063268661499023
    10. 'x' → logprob: -15.188268661499023

Token 1580: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.125006675720215
    3. ' ' → logprob: -14.625006675720215
    4. '   ' → logprob: -14.875006675720215
    5. '1' → logprob: -15.125006675720215
    6. '#' → logprob: -16.43750762939453
    7. '```' → logprob: -16.50000762939453
    8. 'x' → logprob: -17.00000762939453
    9. '       ' → logprob: -17.56250762939453
    10. '2' → logprob: -17.56250762939453

Token 1581: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ',x' → logprob: -10.125066757202148
    3. ' ,' → logprob: -11.250066757202148
    4. '[' → logprob: -11.750066757202148
    5. ',
' → logprob: -12.875066757202148
    6. 'x' → logprob: -13.875066757202148
    7. '<|end|>' → logprob: -14.250066757202148
    8. '<|end|>' → logprob: -15.125066757202148
    9. ' x' → logprob: -15.250066757202148
    10. ')' → logprob: -15.875066757202148

Token 1582: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02325817570090294
    2. ' x' → logprob: -3.7732582092285156
    3. '0' → logprob: -11.398258209228516
    4. '(x' → logprob: -15.648258209228516
    5. '                                ' → logprob: -15.898258209228516
    6. '                               ' → logprob: -16.023258209228516
    7. '                                   ' → logprob: -16.148258209228516
    8. '1' → logprob: -16.148258209228516
    9. '               ' → logprob: -16.273258209228516
    10. '                   ' → logprob: -16.523258209228516

Token 1583: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014631287194788456
    2. ',' → logprob: -4.264631271362305
    3. '1' → logprob: -7.764631271362305
    4. ',[' → logprob: -10.389631271362305
    5. '][' → logprob: -12.514631271362305
    6. '   ' → logprob: -13.389631271362305
    7. ',
' → logprob: -13.514631271362305
    8. '```' → logprob: -14.139631271362305
    9. ')[' → logprob: -14.389631271362305
    10. '#' → logprob: -14.764631271362305

Token 1584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '0' → logprob: -13.125004768371582
    3. '[' → logprob: -14.000004768371582
    4. '
' → logprob: -14.250004768371582
    5. '   ' → logprob: -14.750004768371582
    6. '```' → logprob: -15.250004768371582
    7. '2' → logprob: -15.625004768371582
    8. ' ' → logprob: -15.750004768371582
    9. '
' → logprob: -16.687503814697266
    10. '-' → logprob: -16.687503814697266

Token 1585: ']))
' (ID: 24801)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5343043804168701
    2. '))' → logprob: -0.9093043804168701
    3. ',' → logprob: -5.909304618835449
    4. ']))' → logprob: -6.159304618835449
    5. ']))
' → logprob: -6.659304618835449
    6. '))[' → logprob: -6.659304618835449
    7. '])
' → logprob: -6.909304618835449
    8. '[' → logprob: -7.159304618835449
    9. '])' → logprob: -7.409304618835449
    10. ')):
' → logprob: -7.534304618835449

Token 1586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06057154759764671
    2. 'return' → logprob: -2.9355714321136475
    3. ' return' → logprob: -5.435571670532227
    4. '                   ' → logprob: -7.560571670532227
    5. '           ' → logprob: -8.185571670532227
    6. '{return' → logprob: -8.435571670532227
    7. '       ' → logprob: -9.810571670532227
    8. '	return' → logprob: -9.810571670532227
    9. ':return' → logprob: -10.060571670532227
    10. '```' → logprob: -10.185571670532227

Token 1587: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001976215047761798
    2. '               ' → logprob: -6.876976013183594
    3. ' return' → logprob: -7.001976013183594
    4. '                   ' → logprob: -10.876976013183594
    5. '	return' → logprob: -12.001976013183594
    6. ':return' → logprob: -12.626976013183594
    7. '{return' → logprob: -12.876976013183594
    8. ')return' → logprob: -14.376976013183594
    9. '@return' → logprob: -14.751976013183594
    10. '           ' → logprob: -14.751976013183594

Token 1588: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.935296834039036e-06
    2. ' candidates' → logprob: -12.75000286102295
    3. 'cand' → logprob: -20.125003814697266
    4. 'candidate' → logprob: -20.250003814697266
    5. '[c' → logprob: -20.625003814697266
    6. '(c' → logprob: -20.875003814697266
    7. '_candidates' → logprob: -21.000003814697266
    8. ')c' → logprob: -21.625003814697266
    9. '$c' → logprob: -22.000003814697266
    10. 'andidates' → logprob: -22.750003814697266

Token 1589: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '[-' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.500001907348633
    4. ')[' → logprob: -17.000001907348633
    5. ' [' → logprob: -17.125001907348633
    6. '```' → logprob: -17.375001907348633
    7. '_candidates' → logprob: -17.750001907348633
    8. '#' → logprob: -18.000001907348633
    9. 'def' → logprob: -18.250001907348633
    10. '[
' → logprob: -18.250001907348633

Token 1590: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001691846176981926
    2. 'c' → logprob: -7.251691818237305
    3. '2' → logprob: -7.251691818237305
    4. '[' → logprob: -8.376691818237305
    5. '1' → logprob: -10.626691818237305
    6. 'candidate' → logprob: -11.501691818237305
    7. '-' → logprob: -13.251691818237305
    8. ' candidates' → logprob: -13.626691818237305
    9. '(' → logprob: -13.751691818237305
    10. ' ' → logprob: -13.876691818237305

Token 1591: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10021787881851196
    2. '[' → logprob: -2.350217819213867
    3. ')[' → logprob: -12.225217819213867
    4. '>[' → logprob: -13.475217819213867
    5. '   ' → logprob: -13.600217819213867
    6. ' ][' → logprob: -13.725217819213867
    7. '}[' → logprob: -14.475217819213867
    8. '"][' → logprob: -15.100217819213867
    9. '       ' → logprob: -15.350217819213867
    10. '#' → logprob: -15.475217819213867

Token 1592: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -13.000007629394531
    3. '   ' → logprob: -13.250007629394531
    4. '(' → logprob: -13.875007629394531
    5. '[' → logprob: -14.250007629394531
    6. '1' → logprob: -14.250007629394531
    7. '```' → logprob: -15.000007629394531
    8. '
' → logprob: -15.062507629394531
    9. '  ' → logprob: -15.750007629394531
    10. '``' → logprob: -16.00000762939453

Token 1593: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021778598427772522
    2. '           ' → logprob: -4.271778583526611
    3. 'return' → logprob: -4.896778583526611
    4. 'None' → logprob: -10.14677906036377
    5. '```' → logprob: -10.77177906036377
    6. '
' → logprob: -11.14677906036377
    7. '   ' → logprob: -11.77177906036377
    8. 'else' → logprob: -12.02177906036377
    9. '	' → logprob: -12.39677906036377
    10. ' return' → logprob: -12.52177906036377

Token 1595: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07174552977085114
    2. 'return' (adapté à ' return') → logprob: -2.6967456340789795
    3. '   ' → logprob: -6.9467453956604
    4. '           ' → logprob: -8.321745872497559
    5. ' return' → logprob: -8.446745872497559
    6. '```' → logprob: -8.946745872497559
    7. '	return' → logprob: -9.071745872497559
    8. '	' → logprob: -10.321745872497559
    9. '
' → logprob: -10.446745872497559
    10. 'None' → logprob: -10.821745872497559

Token 1596: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001584850688232109
    2. ' None' → logprob: -8.750158309936523
    3. '(None' → logprob: -20.000158309936523
    4. '_None' → logprob: -21.125158309936523
    5. 'none' → logprob: -22.000158309936523
    6. '=None' → logprob: -23.750158309936523
    7. ',None' → logprob: -23.750158309936523
    8. '_none' → logprob: -24.000158309936523
    9. '
' → logprob: -24.125158309936523
    10. '   ' → logprob: -24.250158309936523

Token 1597: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5378648042678833
    2. 'def' → logprob: -0.9128648042678833
    3. '<|end|>' → logprob: -4.412864685058594
    4. ' def' → logprob: -6.787864685058594
    5. '```' → logprob: -7.162864685058594
    6. '<|end|>' → logprob: -8.537864685058594
    7. '	def' → logprob: -9.037864685058594
    8. ')' → logprob: -9.412864685058594
    9. '    
' → logprob: -10.162864685058594
    10. '#' → logprob: -10.412864685058594

Token 1598: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00671016238629818
    2. '   ' → logprob: -5.131710052490234
    3. ' def' → logprob: -7.506710052490234
    4. '```' → logprob: -8.381710052490234
    5. '@' → logprob: -13.881710052490234
    6. '	def' → logprob: -14.256710052490234
    7. '`' → logprob: -14.881710052490234
    8. 'async' → logprob: -15.381710052490234
    9. '
' → logprob: -16.006710052490234
    10. '``' → logprob: -16.256710052490234

Token 1599: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.763666947837919e-05
    2. '   ' → logprob: -10.50004768371582
    3. ' def' → logprob: -10.87504768371582
    4. '```' → logprob: -13.87504768371582
    5. '	def' → logprob: -16.25004768371582
    6. 'async' → logprob: -17.75004768371582
    7. 'de' → logprob: -19.12504768371582
    8. '@' → logprob: -19.25004768371582
    9. '``' → logprob: -20.25004768371582
    10. '
' → logprob: -20.50004768371582

Token 1600: ' park' (ID: 11796)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46187180280685425
    2. ' def' → logprob: -1.711871862411499
    3. 'park' → logprob: -2.461871862411499
    4. ' park' → logprob: -3.711871862411499
    5. 'process' → logprob: -3.836871862411499
    6. 'try' → logprob: -3.961871862411499
    7. ' try' → logprob: -4.58687162399292
    8. 'can' → logprob: -4.96187162399292
    9. ' process' → logprob: -5.33687162399292
    10. 'assign' → logprob: -6.08687162399292

Token 1601: '_car' (ID: 62991)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2281297892332077
    2. '_car' → logprob: -1.7281297445297241
    3. '_in' → logprob: -3.9781298637390137
    4. '(' → logprob: -5.603129863739014
    5. '_' → logprob: -6.478129863739014
    6. '   ' → logprob: -6.853129863739014
    7. '_at' → logprob: -7.728129863739014
    8. 'self' → logprob: -7.978129863739014
    9. '_next' → logprob: -8.853129386901855
    10. 'car' → logprob: -9.728129386901855

Token 1602: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.840432565193623e-05
    2. '(' → logprob: -9.375088691711426
    3. '   ' → logprob: -13.500088691711426
    4. '       ' → logprob: -14.125088691711426
    5. 'self' → logprob: -14.125088691711426
    6. '(
' → logprob: -14.625088691711426
    7. ' (' → logprob: -16.12508773803711
    8. 'def' → logprob: -17.50008773803711
    9. '	self' → logprob: -18.12508773803711
    10. '_(' → logprob: -18.12508773803711

Token 1603: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19035525619983673
    2. ',' → logprob: -1.9403553009033203
    3. 'self' → logprob: -3.9403553009033203
    4. '       ' → logprob: -4.69035530090332
    5. ',self' → logprob: -7.44035530090332
    6. '   ' → logprob: -7.94035530090332
    7. ' self' → logprob: -9.56535530090332
    8. '           ' → logprob: -11.44035530090332
    9. ')' → logprob: -11.81535530090332
    10. '(' → logprob: -11.94035530090332

Token 1604: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0037317839451134205
    2. ' car' → logprob: -6.128731727600098
    3. 'self' → logprob: -6.503731727600098
    4. ' self' → logprob: -10.253731727600098
    5. '   ' → logprob: -11.628731727600098
    6. '       ' → logprob: -12.753731727600098
    7. '           ' → logprob: -15.628731727600098
    8. ' ' → logprob: -15.878731727600098
    9. 'Car' → logprob: -16.128732681274414
    10. 'new' → logprob: -16.253732681274414

Token 1605: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.419396311044693
    2. '(self' → logprob: -1.2943962812423706
    3. '(' → logprob: -2.91939640045166
    4. ')' → logprob: -5.66939640045166
    5. '(
' → logprob: -6.04439640045166
    6. 'self' → logprob: -6.16939640045166
    7. '       ' → logprob: -6.41939640045166
    8. '   ' → logprob: -6.66939640045166
    9. '(car' → logprob: -6.66939640045166
    10. '):' → logprob: -6.91939640045166

Token 1606: ' Car' (ID: 4004)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05736343935132027
    2. 'Car' → logprob: -3.432363510131836
    3. ' self' → logprob: -3.807363510131836
    4. 'car' → logprob: -7.182363510131836
    5. ' Car' → logprob: -8.432363510131836
    6. ' car' → logprob: -8.557363510131836
    7. '   ' → logprob: -10.182363510131836
    8. '       ' → logprob: -11.432363510131836
    9. '(self' → logprob: -12.557363510131836
    10. ')' → logprob: -12.557363510131836

Token 1607: '):
' (ID: 1883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6553752422332764
    2. '):
' → logprob: -1.4053752422332764
    3. '):' → logprob: -2.6553752422332764
    4. ',' → logprob: -2.7803752422332764
    5. 'self' → logprob: -3.1553752422332764
    6. '   ' → logprob: -3.2803752422332764
    7. ')' → logprob: -4.0303754806518555
    8. '(self' → logprob: -5.4053754806518555
    9. ' self' → logprob: -7.9053754806518555
    10. ':' → logprob: -8.905375480651855

Token 1608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007154120248742402
    2. '```' → logprob: -8.000715255737305
    3. 'if' → logprob: -8.500715255737305
    4. '#' → logprob: -10.000715255737305
    5. 'space' → logprob: -10.000715255737305
    6. '   ' → logprob: -10.250715255737305
    7. 'now' → logprob: -10.625715255737305
    8. 'for' → logprob: -11.125715255737305
    9. 'spaces' → logprob: -13.125715255737305
    10. 'empty' → logprob: -13.125715255737305

Token 1609: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38783371448516846
    2. '#' (adapté à ' #') → logprob: -1.8878337144851685
    3. 'if' → logprob: -2.637833595275879
    4. 'empty' → logprob: -3.012833595275879
    5. 'spaces' → logprob: -3.762833595275879
    6. 'def' → logprob: -4.387833595275879
    7. 'now' → logprob: -5.262833595275879
    8. 'self' → logprob: -6.012833595275879
    9. 'space' → logprob: -6.137833595275879
    10. 'available' → logprob: -6.637833595275879

Token 1610: ' Step' (ID: 22291)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9091076254844666
    2. 'now' → logprob: -1.5341076850891113
    3. '       ' → logprob: -1.7841076850891113
    4. 'self' → logprob: -2.5341076850891113
    5. '#' → logprob: -3.0341076850891113
    6. 'def' → logprob: -3.2841076850891113
    7. 'car' → logprob: -3.9091076850891113
    8. 'space' → logprob: -4.534107685089111
    9. 'm' → logprob: -5.034107685089111
    10. 'empty' → logprob: -5.159107685089111

Token 1611: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035760728642344475
    2. '1' → logprob: -6.628576278686523
    3. 's' → logprob: -7.503576278686523
    4. '   ' → logprob: -7.753576278686523
    5. '#' → logprob: -7.878576278686523
    6. ':' → logprob: -8.003576278686523
    7. '=' → logprob: -8.628576278686523
    8. ' =' → logprob: -9.003576278686523
    9. 'def' → logprob: -9.253576278686523
    10. '        
' → logprob: -10.878576278686523

Token 1612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043472214019857347
    2. '0' → logprob: -8.375434875488281
    3. '   ' → logprob: -9.125434875488281
    4. '       ' → logprob: -10.375434875488281
    5. '#' → logprob: -10.500434875488281
    6. '=' → logprob: -10.750434875488281
    7. ' ' → logprob: -11.875434875488281
    8. 'def' → logprob: -13.125434875488281
    9. ':' → logprob: -13.750434875488281
    10. '_' → logprob: -14.000434875488281

Token 1613: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4581669569015503
    2. 'empty' → logprob: -1.2081669569015503
    3. 'if' → logprob: -3.45816707611084
    4. '#' → logprob: -3.95816707611084
    5. 'spaces' → logprob: -4.95816707611084
    6. ' empty' → logprob: -5.83316707611084
    7. 'for' → logprob: -6.33316707611084
    8. '   ' → logprob: -6.45816707611084
    9. 'no' → logprob: -6.70816707611084
    10. ' if' → logprob: -6.70816707611084

Token 1614: ' if' (ID: 538)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.05779299512505531
    2. 'no' → logprob: -3.807792901992798
    3. 'spaces' → logprob: -3.932792901992798
    4. '#' → logprob: -4.432793140411377
    5. '   ' → logprob: -7.432793140411377
    6. '       ' → logprob: -8.057792663574219
    7. 'c' → logprob: -8.182792663574219
    8. 'empt' → logprob: -8.307792663574219
    9. 'self' → logprob: -8.557792663574219
    10. 'free' → logprob: -8.682792663574219

Token 1615: ' any' (ID: 1062)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1385013461112976
    2. 'car' → logprob: -2.8885014057159424
    3. 'any' → logprob: -3.1385014057159424
    4. 'not' → logprob: -4.263501167297363
    5. 'len' → logprob: -4.888501167297363
    6. 'space' → logprob: -5.263501167297363
    7. ' self' → logprob: -7.138501167297363
    8. 'spaces' → logprob: -7.388501167297363
    9. 'True' → logprob: -7.638501167297363
    10. '(self' → logprob: -7.638501167297363

Token 1616: ' empty' (ID: 8213)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.6026831865310669
    2. ' self' → logprob: -2.1026830673217773
    3. 'self' → logprob: -2.1026830673217773
    4. ' space' → logprob: -2.3526830673217773
    5. 'spaces' → logprob: -3.3526830673217773
    6. ' spaces' → logprob: -3.6026830673217773
    7. ' empty' → logprob: -4.102683067321777
    8. 'empty' → logprob: -4.227683067321777
    9. 'pos' → logprob: -5.477683067321777
    10. 'car' → logprob: -5.727683067321777

Token 1617: ' space' (ID: 4918)
  Prédit: '_spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.1786704808473587
    2. 'space' → logprob: -2.3036704063415527
    3. 'spaces' → logprob: -3.5536704063415527
    4. '_space' → logprob: -3.6786704063415527
    5. '_' → logprob: -5.678670406341553
    6. '(self' → logprob: -6.053670406341553
    7. '_positions' → logprob: -6.678670406341553
    8. '()' → logprob: -7.053670406341553
    9. 'self' → logprob: -7.678670406341553
    10. '       ' → logprob: -8.178670883178711

Token 1618: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1613504886627197
    2. ' =' → logprob: -1.1613504886627197
    3. '_no' → logprob: -2.1613504886627197
    4. ':
' → logprob: -2.4113504886627197
    5. ' in' → logprob: -2.6613504886627197
    6. '_spaces' → logprob: -3.9113504886627197
    7. 'in' → logprob: -4.161350250244141
    8. 'spaces' → logprob: -4.411350250244141
    9. '       ' → logprob: -4.661350250244141
    10. '=' → logprob: -4.911350250244141

Token 1619: ' park' (ID: 11796)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.09321463108062744
    2. '       ' → logprob: -2.718214511871338
    3. 'for' → logprob: -4.218214511871338
    4. ' empty' → logprob: -5.593214511871338
    5. 'spaces' → logprob: -6.093214511871338
    6. 'space' → logprob: -6.718214511871338
    7. ' for' → logprob: -7.843214511871338
    8. 'no' → logprob: -8.218214988708496
    9. '```' → logprob: -8.468214988708496
    10. ' spaces' → logprob: -10.093214988708496

Token 1620: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9543793797492981
    2. '=' → logprob: -1.0793793201446533
    3. '_in' → logprob: -2.2043793201446533
    4. 'in' → logprob: -2.7043793201446533
    5. 'space' → logprob: -4.079379558563232
    6. ' in' → logprob: -4.329379558563232
    7. '_space' → logprob: -4.454379558563232
    8. '(self' → logprob: -4.829379558563232
    9. '(space' → logprob: -5.204379558563232
    10. '_next' → logprob: -5.329379558563232

Token 1621: ' minimal' (ID: 19957)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03422658517956734
    2. 'next' → logprob: -3.534226655960083
    3. 'space' → logprob: -6.034226417541504
    4. '[self' → logprob: -7.034226417541504
    5. ' self' → logprob: -7.659226417541504
    6. ' next' → logprob: -8.159226417541504
    7. 'any' → logprob: -9.159226417541504
    8. 'the' → logprob: -10.034226417541504
    9. 'car' → logprob: -10.159226417541504
    10. '(self' → logprob: -10.159226417541504

Token 1622: ' number' (ID: 2086)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.34441888332366943
    2. '(space' → logprob: -2.219419002532959
    3. 'index' → logprob: -2.469419002532959
    4. ' space' → logprob: -3.594419002532959
    5. '_index' → logprob: -4.344419002532959
    6. '(' → logprob: -4.594419002532959
    7. ' (' → logprob: -5.094419002532959
    8. '_space' → logprob: -5.219419002532959
    9. 'self' → logprob: -5.594419002532959
    10. '(self' → logprob: -5.719419002532959

Token 1623: ' empty' (ID: 8213)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.6626923084259033
    2. '       ' → logprob: -1.2876923084259033
    3. '[' → logprob: -2.9126923084259033
    4. '_space' → logprob: -3.0376923084259033
    5. 'if' → logprob: -3.9126923084259033
    6. '```' → logprob: -4.412692070007324
    7. '           ' → logprob: -4.537692070007324
    8. '_' → logprob: -5.037692070007324
    9. '(space' → logprob: -5.037692070007324
    10. 'ed' → logprob: -5.162692070007324

Token 1624: ' space' (ID: 4918)
  Prédit: '_space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_space' → logprob: -0.6286399364471436
    2. 'space' → logprob: -1.3786399364471436
    3. '       ' → logprob: -1.8786399364471436
    4. ' space' → logprob: -4.253640174865723
    5. '_position' → logprob: -5.128640174865723
    6. '_' → logprob: -5.128640174865723
    7. '(space' → logprob: -5.253640174865723
    8. '   ' → logprob: -5.503640174865723
    9. '_spaces' → logprob: -5.503640174865723
    10. '()' → logprob: -5.753640174865723

Token 1625: ' bottom' (ID: 8725)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25708839297294617
    2. 'empty' → logprob: -1.7570884227752686
    3. ' empty' → logprob: -4.1320881843566895
    4. '_empty' → logprob: -4.2570881843566895
    5. '(empty' → logprob: -4.7570881843566895
    6. ' =' → logprob: -5.7570881843566895
    7. '```' → logprob: -5.8820881843566895
    8. 'spaces' → logprob: -6.2570881843566895
    9. '_spaces' → logprob: -6.7570881843566895
    10. ' spaces' → logprob: -6.8820881843566895

Token 1626: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6989964246749878
    2. '()' → logprob: -0.9489964246749878
    3. ' =' → logprob: -3.4489965438842773
    4. '()
' → logprob: -3.9489965438842773
    5. '_space' → logprob: -4.323996543884277
    6. '_' → logprob: -4.948996543884277
    7. ':' → logprob: -5.073996543884277
    8. ',' → logprob: -5.323996543884277
    9. '():
' → logprob: -5.448996543884277
    10. '(space' → logprob: -5.573996543884277

Token 1627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24487905204296112
    2. 'empty' → logprob: -1.6198790073394775
    3. ' empty' → logprob: -4.744879245758057
    4. '(empty' → logprob: -5.244879245758057
    5. '```' → logprob: -6.494879245758057
    6. 'spaces' → logprob: -6.744879245758057
    7. 'space' → logprob: -7.494879245758057
    8. '_empty' → logprob: -7.744879245758057
    9. 'for' → logprob: -7.994879245758057
    10. ' spaces' → logprob: -8.744878768920898

Token 1628: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' (adapté à ' empty') → logprob: -0.007081083487719297
    2. '       ' → logprob: -5.007081031799316
    3. ' empty' → logprob: -9.132081031799316
    4. 'empt' → logprob: -9.132081031799316
    5. 'spaces' → logprob: -9.257081031799316
    6. 'for' → logprob: -10.382081031799316
    7. '   ' → logprob: -12.257081031799316
    8. '```' → logprob: -12.507081031799316
    9. '空' → logprob: -12.632081031799316
    10. 'available' → logprob: -12.757081031799316

Token 1629: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.00022475497098639607
    2. 's' → logprob: -9.375225067138672
    3. 'spaces' → logprob: -9.500225067138672
    4. '_space' → logprob: -10.625225067138672
    5. ' =' → logprob: -11.125225067138672
    6. '_positions' → logprob: -11.250225067138672
    7. '_sp' → logprob: -12.750225067138672
    8. '_indexes' → logprob: -12.875225067138672
    9. '_indices' → logprob: -12.875225067138672
    10. '_list' → logprob: -13.500225067138672

Token 1630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695415318012238
    2. '=' → logprob: -2.1269540786743164
    3. '       ' → logprob: -11.251954078674316
    4. '()' → logprob: -12.751954078674316
    5. '=self' → logprob: -13.251954078674316
    6. ':' → logprob: -13.376954078674316
    7. 's' → logprob: -13.751954078674316
    8. '=[]' → logprob: -13.876954078674316
    9. '   ' → logprob: -14.251954078674316
    10. '_space' → logprob: -14.376954078674316

Token 1631: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048631083220243454
    2. '[self' → logprob: -3.048631191253662
    3. ' self' → logprob: -10.798630714416504
    4. 'sorted' → logprob: -11.048630714416504
    5. '[' → logprob: -12.798630714416504
    6. '(self' → logprob: -13.173630714416504
    7. '[i' → logprob: -14.048630714416504
    8. ' [' → logprob: -14.048630714416504
    9. '   ' → logprob: -14.923630714416504
    10. '[x' → logprob: -15.298630714416504

Token 1632: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.03350771963596344
    2. '_find' → logprob: -4.158507823944092
    3. 'self' → logprob: -4.533507823944092
    4. ' =' → logprob: -6.158507823944092
    5. '[self' → logprob: -6.908507823944092
    6. '.find' → logprob: -7.408507823944092
    7. '_self' → logprob: -7.658507823944092
    8. '=self' → logprob: -7.783507823944092
    9. '.' → logprob: -8.408507347106934
    10. '(self' → logprob: -8.408507347106934

Token 1633: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.4617256056226324e-05
    2. '_find' → logprob: -11.250014305114746
    3. '(find' → logprob: -14.000014305114746
    4. ' find' → logprob: -15.125014305114746
    5. '.find' → logprob: -15.375014305114746
    6. '   ' → logprob: -16.625015258789062
    7. 'filter' → logprob: -17.500015258789062
    8. '```' → logprob: -17.625015258789062
    9. '	find' → logprob: -18.000015258789062
    10. 'def' → logprob: -18.125015258789062

Token 1634: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.0013461847556754947
    2. 'spaces' → logprob: -7.001346111297607
    3. '_no' → logprob: -8.251346588134766
    4. 'space' → logprob: -9.501346588134766
    5. 'no' → logprob: -10.501346588134766
    6. 'self' → logprob: -11.626346588134766
    7. 's' → logprob: -11.751346588134766
    8. '_space' → logprob: -12.126346588134766
    9. '_' → logprob: -12.126346588134766
    10. 'def' → logprob: -12.251346588134766

Token 1635: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -2.546478935983032e-05
    2. 'no' → logprob: -10.625025749206543
    3. '_empty' → logprob: -15.000025749206543
    4. 'def' → logprob: -15.500025749206543
    5. 'No' → logprob: -16.125024795532227
    6. '```' → logprob: -16.250024795532227
    7. ' no' → logprob: -17.000024795532227
    8. '(no' → logprob: -17.000024795532227
    9. '_n' → logprob: -17.125024795532227
    10. '   ' → logprob: -17.125024795532227

Token 1636: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.610702363715973e-06
    2. '_spaces' → logprob: -12.625009536743164
    3. '_car' → logprob: -13.000009536743164
    4. '_' → logprob: -13.500009536743164
    5. 'cars' → logprob: -14.375009536743164
    6. '```' → logprob: -14.875009536743164
    7. 'car' → logprob: -15.750009536743164
    8. 'space' → logprob: -16.250009536743164
    9. 'spaces' → logprob: -16.250009536743164
    10. '__' → logprob: -16.250009536743164

Token 1637: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.016007384285330772
    2. 'ar' → logprob: -4.891007423400879
    3. '_c' → logprob: -5.016007423400879
    4. 'cars' → logprob: -6.516007423400879
    5. '_' → logprob: -9.266007423400879
    6. '()' → logprob: -11.016007423400879
    7. '[' → logprob: -11.016007423400879
    8. '_ar' → logprob: -11.141007423400879
    9. 'rs' → logprob: -11.516007423400879
    10. '(' → logprob: -11.766007423400879

Token 1638: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.8128284215927124
    2. '       ' → logprob: -0.9378284215927124
    3. '()' → logprob: -1.8128284215927124
    4. 'if' → logprob: -6.812828540802002
    5. '()[' → logprob: -8.687828063964844
    6. 'empty' → logprob: -8.937828063964844
    7. 'def' → logprob: -8.937828063964844
    8. ' if' → logprob: -10.437828063964844
    9. ':' → logprob: -10.437828063964844
    10. '
' → logprob: -11.062828063964844

Token 1639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34213343262672424
    2. '.sort' → logprob: -1.8421334028244019
    3. ' if' → logprob: -2.5921335220336914
    4. 'if' → logprob: -3.0921335220336914
    5. 'empty' → logprob: -5.342133522033691
    6. '[' → logprob: -6.092133522033691
    7. 'sorted' → logprob: -7.467133522033691
    8. ':
' → logprob: -7.842133522033691
    9. ':' → logprob: -8.092133522033691
    10. 'sort' → logprob: -8.092133522033691

Token 1640: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.025144966319203377
    2. ' if' → logprob: -3.7751450538635254
    3. 'empty' → logprob: -6.525145053863525
    4. '       ' → logprob: -7.775145053863525
    5. ' empty' → logprob: -12.650144577026367
    6. '```' → logprob: -12.650144577026367
    7. '        
' → logprob: -13.150144577026367
    8. '
' → logprob: -13.775144577026367
    9. 'for' → logprob: -14.150144577026367
    10. 'self' → logprob: -14.650144577026367

Token 1641: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.0004156568902544677
    2. ' empty' → logprob: -8.000415802001953
    3. 'len' → logprob: -9.750415802001953
    4. 'not' → logprob: -11.250415802001953
    5. '       ' → logprob: -11.875415802001953
    6. '   ' → logprob: -13.375415802001953
    7. ' not' → logprob: -15.375415802001953
    8. ' len' → logprob: -15.875415802001953
    9. '           ' → logprob: -16.375415802001953
    10. '(empty' → logprob: -17.000415802001953

Token 1642: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -7.636475493200123e-05
    2. '>' → logprob: -10.625076293945312
    3. 'spaces' → logprob: -11.375076293945312
    4. '_' → logprob: -11.625076293945312
    5. '   ' → logprob: -12.125076293945312
    6. 's' → logprob: -12.750076293945312
    7. '```' → logprob: -13.125076293945312
    8. 'Spaces' → logprob: -13.250076293945312
    9. ' >' → logprob: -13.500076293945312
    10. '<' → logprob: -13.625076293945312

Token 1643: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3486889898777008
    2. ':' → logprob: -1.2236889600753784
    3. '[' → logprob: -8.598689079284668
    4. '.sort' → logprob: -10.473689079284668
    5. '):
' → logprob: -11.723689079284668
    6. '       ' → logprob: -12.098689079284668
    7. 'sorted' → logprob: -12.473689079284668
    8. '_sorted' → logprob: -12.723689079284668
    9. '=' → logprob: -12.973689079284668
    10. ':

' → logprob: -13.348689079284668

Token 1644: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006552424747496843
    2. 'empty' → logprob: -5.256552219390869
    3. ' empty' → logprob: -8.006552696228027
    4. 'space' → logprob: -8.381552696228027
    5. '```' → logprob: -8.381552696228027
    6. '       ' → logprob: -8.631552696228027
    7. ':
' → logprob: -8.631552696228027
    8. ' space' → logprob: -10.631552696228027
    9. '#' → logprob: -10.756552696228027
    10. ':' → logprob: -11.131552696228027

Token 1645: ' empty' (ID: 8213)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8184806704521179
    2. 'space' → logprob: -1.3184807300567627
    3. '           ' → logprob: -1.4434807300567627
    4. 'empty' (adapté à ' empty') → logprob: -3.0684807300567627
    5. ' self' → logprob: -5.068480491638184
    6. ' space' → logprob: -6.443480491638184
    7. ' empty' → logprob: -7.318480491638184
    8. '               ' → logprob: -9.568480491638184
    9. '       ' → logprob: -10.193480491638184
    10. '   ' → logprob: -10.568480491638184

Token 1646: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -3.130576806142926e-05
    2. '_space' → logprob: -11.000031471252441
    3. 'spaces' → logprob: -11.625031471252441
    4. '[' → logprob: -13.375031471252441
    5. 'space' → logprob: -14.000031471252441
    6. '_' → logprob: -14.500031471252441
    7. ' =' → logprob: -14.875031471252441
    8. '```' → logprob: -15.125031471252441
    9. 'Spaces' → logprob: -15.250031471252441
    10. '[_' → logprob: -15.250031471252441

Token 1647: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00794125534594059
    2. '=' → logprob: -5.507941246032715
    3. 'sort' → logprob: -6.132941246032715
    4. '[' → logprob: -6.507941246032715
    5. ' =' → logprob: -9.007941246032715
    6. '_sorted' → logprob: -10.007941246032715
    7. '_sort' → logprob: -11.757941246032715
    8. 'sorted' → logprob: -11.882941246032715
    9. ' sort' → logprob: -12.632941246032715
    10. '.pop' → logprob: -12.882941246032715

Token 1648: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.014174911193549633
    2. 'key' → logprob: -4.264174938201904
    3. '()
' → logprob: -12.639174461364746
    4. '   ' → logprob: -12.889174461364746
    5. ',key' → logprob: -13.764174461364746
    6. '()' → logprob: -13.889174461364746
    7. '       ' → logprob: -14.139174461364746
    8. '[key' → logprob: -14.264174461364746
    9. '(lambda' → logprob: -14.389174461364746
    10. ' key' → logprob: -14.639174461364746

Token 1649: '=lambda' (ID: 64865)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3995540142059326
    2. '=lambda' → logprob: -1.1495540142059326
    3. '(lambda' → logprob: -4.399554252624512
    4. ' lambda' → logprob: -8.149554252624512
    5. '_lambda' → logprob: -11.024554252624512
    6. 'attr' → logprob: -11.524554252624512
    7. 'Lambda' → logprob: -13.649554252624512
    8. '```' → logprob: -13.649554252624512
    9. 'ambda' → logprob: -14.274554252624512
    10. '   ' → logprob: -14.774554252624512

Token 1650: ' s' (ID: 265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8068431615829468
    2. 'space' → logprob: -0.8068431615829468
    3. 'lambda' → logprob: -2.5568432807922363
    4. ' lambda' → logprob: -4.306843280792236
    5. 's' → logprob: -5.056843280792236
    6. ' space' → logprob: -5.306843280792236
    7. ' x' → logprob: -5.306843280792236
    8. ' s' → logprob: -9.306842803955078
    9. 'sp' → logprob: -10.181842803955078
    10. 'l' → logprob: -11.556842803955078

Token 1651: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.577157199382782
    2. ':' → logprob: -0.827157199382782
    3. ' s' → logprob: -6.952157020568848
    4. ':s' → logprob: -8.327157020568848
    5. ' :' → logprob: -12.077157020568848
    6. '.s' → logprob: -12.202157020568848
    7. 'space' → logprob: -12.577157020568848
    8. 'x' → logprob: -13.952157020568848
    9. '   ' → logprob: -14.202157020568848
    10. '	s' → logprob: -14.827157020568848

Token 1652: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002108118060277775
    2. ' s' → logprob: -8.500210762023926
    3. 'lambda' → logprob: -11.875210762023926
    4. 'space' → logprob: -15.875210762023926
    5. ' lambda' → logprob: -16.000211715698242
    6. '(s' → logprob: -16.250211715698242
    7. '(lambda' → logprob: -18.750211715698242
    8. '   ' → logprob: -19.625211715698242
    9. 'ambda' → logprob: -19.875211715698242
    10. 'x' → logprob: -20.125211715698242

Token 1653: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0006440493743866682
    2. '.s' → logprob: -8.375643730163574
    3. ':index' → logprob: -8.750643730163574
    4. ':' → logprob: -9.000643730163574
    5. '.' → logprob: -9.875643730163574
    6. 'index' → logprob: -10.125643730163574
    7. '.space' → logprob: -10.875643730163574
    8. ' .' → logprob: -11.625643730163574
    9. '.indices' → logprob: -12.750643730163574
    10. 's' → logprob: -13.250643730163574

Token 1654: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023827670142054558
    2. ')' → logprob: -4.14882755279541
    3. '[' → logprob: -4.89882755279541
    4. '           ' → logprob: -9.52382755279541
    5. ')[' → logprob: -9.52382755279541
    6. ');' → logprob: -9.64882755279541
    7. ')
' → logprob: -10.52382755279541
    8. ' )
' → logprob: -11.52382755279541
    9. '               ' → logprob: -11.52382755279541
    10. '       ' → logprob: -11.52382755279541

Token 1655: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04684266820549965
    2. 'self' → logprob: -3.671842575073242
    3. 'space' → logprob: -4.171842575073242
    4. '
' → logprob: -5.671842575073242
    5. '```' → logprob: -7.171842575073242
    6. ' self' → logprob: -7.796842575073242
    7. ' space' → logprob: -9.171842575073242
    8. 'car' → logprob: -9.921842575073242
    9. 'selected' → logprob: -10.546842575073242
    10. 'for' → logprob: -10.671842575073242

Token 1656: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04913466423749924
    2. 'space' → logprob: -3.0491347312927246
    3. ' self' → logprob: -7.549134731292725
    4. ' space' → logprob: -11.549134254455566
    5. '           ' → logprob: -12.174134254455566
    6. 'selected' → logprob: -13.174134254455566
    7. 'empty' → logprob: -13.799134254455566
    8. '       ' → logprob: -14.174134254455566
    9. 'chosen' → logprob: -14.174134254455566
    10. '               ' → logprob: -14.924134254455566

Token 1657: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00018458699923940003
    2. '_assign' → logprob: -9.375185012817383
    3. '.' → logprob: -9.500185012817383
    4. '_' → logprob: -11.375185012817383
    5. '_ass' → logprob: -13.125185012817383
    6. '   ' → logprob: -13.250185012817383
    7. '_sp' → logprob: -13.375185012817383
    8. '.assign' → logprob: -13.875185012817383
    9. '.sp' → logprob: -14.125185012817383
    10. '_code' → logprob: -14.375185012817383

Token 1658: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -4.320199877838604e-07
    2. '_assign' → logprob: -14.75
    3. '.assign' → logprob: -18.875
    4. 'ass' → logprob: -19.125
    5. 'assing' → logprob: -19.125
    6. 'Assign' → logprob: -19.25
    7. 'assigned' → logprob: -19.375
    8. ' assign' → logprob: -19.375
    9. '(assign' → logprob: -19.375
    10. 'assignment' → logprob: -19.75

Token 1659: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00025776340044103563
    2. '(empty' → logprob: -9.37525749206543
    3. '(car' → logprob: -9.62525749206543
    4. 'empty' → logprob: -10.00025749206543
    5. 'park' → logprob: -10.75025749206543
    6. '(' → logprob: -10.87525749206543
    7. 'car' → logprob: -11.25025749206543
    8. '(space' → logprob: -13.50025749206543
    9. '_car' → logprob: -13.87525749206543
    10. '(s' → logprob: -14.12525749206543

Token 1660: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.0001438266917830333
    2. 'car' → logprob: -8.875144004821777
    3. '_' → logprob: -13.750144004821777
    4. 'parking' → logprob: -13.750144004821777
    5. 'Park' → logprob: -14.375144004821777
    6. 'space' → logprob: -14.500144004821777
    7. ' park' → logprob: -15.250144004821777
    8. '_car' → logprob: -16.12514305114746
    9. 'empty' → logprob: -16.25014305114746
    10. 'par' → logprob: -16.50014305114746

Token 1661: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -1.3856492842023727e-06
    2. 'position' → logprob: -14.750000953674316
    3. '_' → logprob: -15.125000953674316
    4. 'Position' → logprob: -15.125000953674316
    5. '       ' → logprob: -15.250000953674316
    6. '   ' → logprob: -16.000001907348633
    7. '_positions' → logprob: -16.750001907348633
    8. 'osition' → logprob: -17.000001907348633
    9. '_POSITION' → logprob: -17.250001907348633
    10. '           ' → logprob: -17.250001907348633

Token 1662: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.0011810619616881013
    2. '(empty' → logprob: -6.751181125640869
    3. '(' → logprob: -11.626180648803711
    4. 'empty' → logprob: -14.001180648803711
    5. 'car' → logprob: -14.126180648803711
    6. '(Car' → logprob: -16.00118064880371
    7. '(
' → logprob: -16.37618064880371
    8. '(c' → logprob: -16.62618064880371
    9. '	car' → logprob: -16.87618064880371
    10. ' (' → logprob: -17.12618064880371

Token 1663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2384910136461258
    2. '(empty' → logprob: -1.6134910583496094
    3. 'empty' → logprob: -4.363491058349609
    4. '(car' → logprob: -8.73849105834961
    5. ' empty' → logprob: -9.98849105834961
    6. ' ,' → logprob: -10.61349105834961
    7. ')' → logprob: -11.61349105834961
    8. '(' → logprob: -11.86349105834961
    9. 'car' → logprob: -12.11349105834961
    10. '           ' → logprob: -13.98849105834961

Token 1664: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.00033546582562848926
    2. ' empty' → logprob: -8.000335693359375
    3. '(empty' → logprob: -19.000335693359375
    4. '           ' → logprob: -20.625335693359375
    5. '.empty' → logprob: -22.125335693359375
    6. '空' → logprob: -22.500335693359375
    7. '_empty' → logprob: -22.625335693359375
    8. 'Empty' → logprob: -23.625335693359375
    9. '       ' → logprob: -23.625335693359375
    10. 'empt' → logprob: -24.125335693359375

Token 1665: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -2.339278580620885e-06
    2. 'spaces' → logprob: -13.000001907348633
    3. 'Spaces' → logprob: -17.875001907348633
    4. 'space' → logprob: -18.000001907348633
    5. '_space' → logprob: -19.125001907348633
    6. 's' → logprob: -19.875001907348633
    7. '_places' → logprob: -20.625001907348633
    8. '```' → logprob: -21.250001907348633
    9. '_states' → logprob: -21.375001907348633
    10. '_sp' → logprob: -21.625001907348633

Token 1666: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010435284348204732
    2. '0' → logprob: -6.876043319702148
    3. '[
' → logprob: -12.626043319702148
    4. 's' → logprob: -13.001043319702148
    5. '[-' → logprob: -13.751043319702148
    6. '
' → logprob: -14.501043319702148
    7. '(' → logprob: -14.501043319702148
    8. ')[' → logprob: -14.626043319702148
    9. '][' → logprob: -14.751043319702148
    10. '()[' → logprob: -14.876043319702148

Token 1667: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -12.000011444091797
    3. '[' → logprob: -13.125011444091797
    4. ')' → logprob: -14.125011444091797
    5. '   ' → logprob: -14.250011444091797
    6. '
' → logprob: -14.750011444091797
    7. 's' → logprob: -15.125011444091797
    8. ':' → logprob: -15.750011444091797
    9. '(' → logprob: -15.875011444091797
    10. 'empty' → logprob: -15.875011444091797

Token 1668: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16237172484397888
    2. ')' → logprob: -1.9123717546463013
    3. ')
' → logprob: -6.912371635437012
    4. '])
' → logprob: -7.412371635437012
    5. '))' → logprob: -8.162371635437012
    6. ']' → logprob: -9.037371635437012
    7. ')]' → logprob: -9.662371635437012
    8. ')])' → logprob: -10.787371635437012
    9. ' ])' → logprob: -11.162371635437012
    10. ' )' → logprob: -11.287371635437012

Token 1669: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06517210602760315
    2. '       ' → logprob: -3.1901721954345703
    3. 'return' → logprob: -4.19017219543457
    4. '```' → logprob: -5.31517219543457
    5. '<|end|>' → logprob: -7.44017219543457
    6. ' return' → logprob: -8.19017219543457
    7. '
' → logprob: -8.56517219543457
    8. 'else' → logprob: -8.56517219543457
    9. '               ' → logprob: -9.31517219543457
    10. '[' → logprob: -9.31517219543457

Token 1670: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.062149401754140854
    2. '           ' → logprob: -2.8121492862701416
    3. ' return' → logprob: -9.062149047851562
    4. 'self' → logprob: -9.937149047851562
    5. '
' → logprob: -11.687149047851562
    6. '       ' → logprob: -12.687149047851562
    7. 'else' → logprob: -13.187149047851562
    8. '               ' → logprob: -13.312149047851562
    9. '   ' → logprob: -14.687149047851562
    10. '{return' → logprob: -14.687149047851562

Token 1671: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023227771744132042
    2. '
' → logprob: -4.023227691650391
    3. '#' → logprob: -5.648227691650391
    4. 'empty' → logprob: -6.648227691650391
    5. '        
' → logprob: -8.77322769165039
    6. '```' → logprob: -9.89822769165039
    7. 'space' → logprob: -11.52322769165039
    8. ' empty' → logprob: -12.52322769165039
    9. 'else' → logprob: -12.52322769165039
    10. '   ' → logprob: -12.77322769165039

Token 1672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23473352193832397
    2. '
' → logprob: -1.6097335815429688
    3. '#' → logprob: -5.234733581542969
    4. 'empty' → logprob: -6.609733581542969
    5. 'spaces' → logprob: -6.984733581542969
    6. '        
' → logprob: -7.234733581542969
    7. '```' → logprob: -7.984733581542969
    8. 'self' → logprob: -8.734733581542969
    9. 'space' → logprob: -8.734733581542969
    10. 'else' → logprob: -9.109733581542969

Token 1673: ' #' (ID: 1069)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.6591275334358215
    2. 'one' → logprob: -0.9091275334358215
    3. '       ' → logprob: -3.0341274738311768
    4. '#' (adapté à ' #') → logprob: -3.9091274738311768
    5. 'single' → logprob: -5.409127712249756
    6. '   ' → logprob: -6.159127712249756
    7. 'space' → logprob: -6.534127712249756
    8. 'candidate' → logprob: -6.784127712249756
    9. 'spots' → logprob: -7.034127712249756
    10. 'occupied' → logprob: -8.284127235412598

Token 1674: ' Step' (ID: 22291)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.5587030053138733
    2. 'one' → logprob: -1.3087029457092285
    3. 'space' → logprob: -2.5587029457092285
    4. '#' → logprob: -3.4337029457092285
    5. 'candidate' → logprob: -3.4337029457092285
    6. 'c' → logprob: -5.1837029457092285
    7. 'min' → logprob: -5.3087029457092285
    8. 'single' → logprob: -6.4337029457092285
    9. 'chosen' → logprob: -6.8087029457092285
    10. 'spots' → logprob: -8.058703422546387

Token 1675: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1306868940591812
    2. ' ' → logprob: -2.1306869983673096
    3. '2' → logprob: -6.0056867599487305
    4. '_' → logprob: -6.8806867599487305
    5. '   ' → logprob: -8.88068675994873
    6. '       ' → logprob: -9.50568675994873
    7. '0' → logprob: -11.00568675994873
    8. ':' → logprob: -11.38068675994873
    9. '  ' → logprob: -12.75568675994873
    10. '3' → logprob: -13.00568675994873

Token 1676: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062135737389326096
    2. '2' → logprob: -2.812135696411133
    3. '   ' → logprob: -9.562135696411133
    4. '3' → logprob: -9.812135696411133
    5. 'find' → logprob: -11.062135696411133
    6. 'def' → logprob: -11.687135696411133
    7. '```' → logprob: -11.937135696411133
    8. 'self' → logprob: -12.812135696411133
    9. ':' → logprob: -12.937135696411133
    10. '       ' → logprob: -13.187135696411133

Token 1677: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3573315143585205
    2. '       ' → logprob: -1.2323315143585205
    3. 'spaces' → logprob: -5.982331275939941
    4. '_spaces' → logprob: -6.357331275939941
    5. '
' → logprob: -6.732331275939941
    6. ':
' → logprob: -6.857331275939941
    7. 'empty' → logprob: -6.857331275939941
    8. ' spaces' → logprob: -7.857331275939941
    9. '   ' → logprob: -8.357331275939941
    10. '#' → logprob: -8.607331275939941

Token 1678: ' try' (ID: 2075)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.2839913070201874
    2. 'min' → logprob: -1.9089913368225098
    3. 'spaces' → logprob: -2.9089913368225098
    4. 'candidate' → logprob: -3.6589913368225098
    5. 'one' → logprob: -5.03399133682251
    6. 'c' → logprob: -5.78399133682251
    7. 'chosen' → logprob: -6.03399133682251
    8. '#' → logprob: -6.65899133682251
    9. 'best' → logprob: -6.90899133682251
    10. '   ' → logprob: -7.53399133682251

Token 1679: ' to' (ID: 316)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.25181370973587036
    2. '_min' → logprob: -2.3768136501312256
    3. 'spaces' → logprob: -2.7518136501312256
    4. '       ' → logprob: -4.126813888549805
    5. 'self' → logprob: -4.251813888549805
    6. ':
' → logprob: -5.001813888549805
    7. ':' → logprob: -5.251813888549805
    8. '_spaces' → logprob: -5.251813888549805
    9. 'can' → logprob: -5.501813888549805
    10. ':min' → logprob: -6.126813888549805

Token 1680: ' park' (ID: 11796)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5990989208221436
    2. '_min' → logprob: -1.2240989208221436
    3. 'find' → logprob: -2.3490989208221436
    4. '_find' → logprob: -4.099099159240723
    5. 'park' → logprob: -4.224099159240723
    6. 'assign' → logprob: -4.724099159240723
    7. '_' → logprob: -4.724099159240723
    8. 'self' → logprob: -5.974099159240723
    9. '_assign' → logprob: -6.349099159240723
    10. '   ' → logprob: -7.349099159240723

Token 1681: ' in' (ID: 306)
  Prédit: '_spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.8532216548919678
    2. '       ' → logprob: -0.9782216548919678
    3. '_in' → logprob: -2.7282216548919678
    4. 'in' → logprob: -2.7282216548919678
    5. 'spaces' → logprob: -2.9782216548919678
    6. '   ' → logprob: -5.103221893310547
    7. 'car' → logprob: -5.853221893310547
    8. ' in' → logprob: -6.728221893310547
    9. 'space' → logprob: -7.103221893310547
    10. '_space' → logprob: -7.228221893310547

Token 1682: ' space' (ID: 4918)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16246213018894196
    2. 'min' → logprob: -3.5374622344970703
    3. 'spaces' → logprob: -3.5374622344970703
    4. 'space' → logprob: -3.7874622344970703
    5. '_spaces' → logprob: -3.7874622344970703
    6. ' self' → logprob: -4.16246223449707
    7. 'one' → logprob: -4.28746223449707
    8. 'the' → logprob: -5.03746223449707
    9. 'minimal' → logprob: -6.16246223449707
    10. '_min' → logprob: -6.28746223449707

Token 1683: ' following' (ID: 3992)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.6551586389541626
    2. 's' → logprob: -0.7801586389541626
    3. 'with' → logprob: -3.905158519744873
    4. ' =' → logprob: -6.780158519744873
    5. '   ' → logprob: -7.905158519744873
    6. '=' → logprob: -8.905158996582031
    7. '       ' → logprob: -9.030158996582031
    8. '_s' → logprob: -9.030158996582031
    9. ' with' → logprob: -9.280158996582031
    10. '_bottom' → logprob: -9.530158996582031

Token 1684: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3114592134952545
    2. 'the' → logprob: -1.5614591836929321
    3. '_min' → logprob: -3.0614593029022217
    4. 'min' → logprob: -5.186459064483643
    5. '       ' → logprob: -6.936459064483643
    6. 'minimal' → logprob: -7.186459064483643
    7. ' the' → logprob: -7.561459064483643
    8. 'def' → logprob: -7.936459064483643
    9. ' self' → logprob: -7.936459064483643
    10. '_the' → logprob: -8.0614595413208

Token 1685: ' difference' (ID: 9809)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.00016635251813568175
    2. '_remaining' → logprob: -9.500165939331055
    3. 'min' → logprob: -9.875165939331055
    4. 'self' → logprob: -11.375165939331055
    5. '_m' → logprob: -11.750165939331055
    6. 'rules' → logprob: -12.250165939331055
    7. '._' → logprob: -13.375165939331055
    8. '_same' → logprob: -13.625165939331055
    9. '_rules' → logprob: -13.625165939331055
    10. '   ' → logprob: -13.750165939331055

Token 1686: ' rule' (ID: 10652)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7178410887718201
    2. '_space' → logprob: -0.8428410887718201
    3. '_in' → logprob: -3.717841148376465
    4. '_step' → logprob: -4.217841148376465
    5. '_time' → logprob: -4.467841148376465
    6. 'in' → logprob: -5.342841148376465
    7. 'min' → logprob: -5.342841148376465
    8. '>=' → logprob: -5.592841148376465
    9. '       ' → logprob: -6.092841148376465
    10. '   ' → logprob: -6.217841148376465

Token 1687: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012231077067553997
    2. 'space' → logprob: -4.51223087310791
    3. '
' → logprob: -7.63723087310791
    4. 'min' → logprob: -7.76223087310791
    5. 'possible' → logprob: -10.01223087310791
    6. 'candidate' → logprob: -10.01223087310791
    7. 'spaces' → logprob: -10.51223087310791
    8. 'best' → logprob: -10.76223087310791
    9. ' space' → logprob: -10.88723087310791
    10. '```' → logprob: -11.13723087310791

Token 1688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05171786993741989
    2. 'space' → logprob: -3.176717758178711
    3. 'min' → logprob: -4.926717758178711
    4. 'c' → logprob: -7.551717758178711
    5. ' min' → logprob: -8.426717758178711
    6. ' space' → logprob: -8.426717758178711
    7. 'spaces' → logprob: -9.176717758178711
    8. 'candidate' → logprob: -9.176717758178711
    9. 'car' → logprob: -10.051717758178711
    10. '```' → logprob: -10.301717758178711

Token 1689: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.015116573311388493
    2. 'candidate' → logprob: -4.8901166915893555
    3. 'min' → logprob: -5.5151166915893555
    4. 'target' → logprob: -6.2651166915893555
    5. ' space' → logprob: -7.2651166915893555
    6. 'chosen' → logprob: -8.140116691589355
    7. 'best' → logprob: -8.640116691589355
    8. 'choice' → logprob: -10.015116691589355
    9. ' candidate' → logprob: -10.015116691589355
    10. 'next' → logprob: -10.140116691589355

Token 1690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38707828521728516
    2. ' =' → logprob: -1.1370782852172852
    3. '=self' → logprob: -8.512078285217285
    4. '=_' → logprob: -13.887078285217285
    5. 's' → logprob: -14.012078285217285
    6. ':' → logprob: -14.012078285217285
    7. '=None' → logprob: -14.137078285217285
    8. '_space' → logprob: -14.137078285217285
    9. '       ' → logprob: -14.637078285217285
    10. '_next' → logprob: -14.887078285217285

Token 1691: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804275393486023
    2. ' self' → logprob: -3.2880427837371826
    3. '       ' → logprob: -13.663043022155762
    4. '(self' → logprob: -17.413042068481445
    5. '	self' → logprob: -17.538042068481445
    6. '   ' → logprob: -19.538042068481445
    7. ' ' → logprob: -20.538042068481445
    8. '[self' → logprob: -21.038042068481445
    9. '           ' → logprob: -21.288042068481445
    10. '        ' → logprob: -21.288042068481445

Token 1692: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00010318557906430215
    2. '_min' → logprob: -9.250102996826172
    3. '.min' → logprob: -11.875102996826172
    4. '   ' → logprob: -16.250102996826172
    5. '_can' → logprob: -17.875102996826172
    6. '.' → logprob: -18.375102996826172
    7. '       ' → logprob: -19.375102996826172
    8. '.can' → logprob: -19.375102996826172
    9. '.MIN' → logprob: -19.875102996826172
    10. '.__' → logprob: -20.250102996826172

Token 1693: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.704273118884885e-07
    2. 'find' → logprob: -14.500000953674316
    3. '_min' → logprob: -16.125
    4. 'minimum' → logprob: -16.625
    5. ' min' → logprob: -17.0
    6. 'minimal' → logprob: -18.75
    7. '
' → logprob: -18.875
    8. 'remaining' → logprob: -19.0
    9. 'max' → logprob: -19.625
    10. '(min' → logprob: -20.25

Token 1694: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -2.935296834039036e-06
    2. 'diff' → logprob: -13.25000286102295
    3. 'Diff' → logprob: -15.00000286102295
    4. '_min' → logprob: -15.00000286102295
    5. '_DIFF' → logprob: -16.000003814697266
    6. '_difference' → logprob: -16.375003814697266
    7. '_' → logprob: -16.500003814697266
    8. '```' → logprob: -17.000003814697266
    9. '_def' → logprob: -17.125003814697266
    10. '_d' → logprob: -17.125003814697266

Token 1695: '_space' (ID: 36700)
  Prédit: '_space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_space' → logprob: -9.729906196298543e-06
    2. 'space' → logprob: -11.750009536743164
    3. '_spaces' → logprob: -14.625009536743164
    4. '_car' → logprob: -15.125009536743164
    5. '_' → logprob: -15.250009536743164
    6. '```' → logprob: -15.625009536743164
    7. '(space' → logprob: -16.125009536743164
    8. 'Space' → logprob: -16.375009536743164
    9. '_min' → logprob: -16.500009536743164
    10. '_SPACE' → logprob: -16.625009536743164

Token 1696: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.0002258277963846922
    2. '(' → logprob: -9.125226020812988
    3. '(space' → logprob: -9.125226020812988
    4. ' (' → logprob: -12.625226020812988
    5. '(
' → logprob: -13.500226020812988
    6. '       ' → logprob: -14.375226020812988
    7. '(Car' → logprob: -14.750226020812988
    8. 'car' → logprob: -14.875226020812988
    9. '```' → logprob: -15.000226020812988
    10. '(card' → logprob: -15.125226020812988

Token 1697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08831238001585007
    2. ')' → logprob: -2.5883123874664307
    3. '(space' → logprob: -4.838312149047852
    4. '(car' → logprob: -7.588312149047852
    5. '       ' → logprob: -7.963312149047852
    6. ' ,' → logprob: -8.463312149047852
    7. ',
' → logprob: -8.588312149047852
    8. ')
' → logprob: -9.213312149047852
    9. 'space' → logprob: -10.338312149047852
    10. '(' → logprob: -11.088312149047852

Token 1698: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00047988566802814603
    2. ' self' → logprob: -8.000479698181152
    3. '
' → logprob: -9.375479698181152
    4. 'car' → logprob: -9.875479698181152
    5. '           ' → logprob: -12.375479698181152
    6. '       ' → logprob: -13.750479698181152
    7. '               ' → logprob: -14.625479698181152
    8. '0' → logprob: -15.000479698181152
    9. '(self' → logprob: -15.000479698181152
    10. ')' → logprob: -15.125479698181152

Token 1699: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.048614393919706345
    2. 'current' → logprob: -3.048614501953125
    3. ' current' → logprob: -10.923614501953125
    4. '.' → logprob: -12.423614501953125
    5. '   ' → logprob: -13.298614501953125
    6. '_current' → logprob: -14.298614501953125
    7. '
' → logprob: -14.423614501953125
    8. '	current' → logprob: -14.673614501953125
    9. '       ' → logprob: -14.923614501953125
    10. ' .' → logprob: -15.173614501953125

Token 1700: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.968312951968983e-06
    2. 'time' → logprob: -12.250009536743164
    3. '_' → logprob: -12.750009536743164
    4. ' time' → logprob: -14.000009536743164
    5. 'Time' → logprob: -15.375009536743164
    6. ')' → logprob: -15.375009536743164
    7. '   ' → logprob: -15.500009536743164
    8. ' _' → logprob: -15.500009536743164
    9. '_
' → logprob: -15.875009536743164
    10. '```' → logprob: -15.875009536743164

Token 1701: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2019280046224594
    2. ')' → logprob: -1.7019280195236206
    3. '       ' → logprob: -7.57692813873291
    4. ')
' → logprob: -13.57692813873291
    5. ')

' → logprob: -14.82692813873291
    6. '   ' → logprob: -15.95192813873291
    7. ' )
' → logprob: -16.076927185058594
    8. ')`
' → logprob: -16.076927185058594
    9. '):
' → logprob: -16.201927185058594
    10. '),' → logprob: -16.576927185058594

Token 1702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0075959800742566586
    2. ' if' → logprob: -5.257596015930176
    3. '<|end|>' → logprob: -7.007596015930176
    4. 'if' → logprob: -7.507596015930176
    5. ':
' → logprob: -8.382596015930176
    6. ':' → logprob: -9.257596015930176
    7. ')' → logprob: -9.257596015930176
    8. '   ' → logprob: -9.632596015930176
    9. '<|end|>' → logprob: -9.757596015930176
    10. '        
' → logprob: -10.007596015930176

Token 1703: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017189204692840576
    2. ' if' → logprob: -4.767189025878906
    3. '       ' → logprob: -4.767189025878906
    4. ';if' → logprob: -11.142189025878906
    5. '	if' → logprob: -11.767189025878906
    6. 'If' → logprob: -12.267189025878906
    7. '```' → logprob: -13.142189025878906
    8. '        
' → logprob: -13.767189025878906
    9. '
' → logprob: -14.267189025878906
    10. '<|end|>' → logprob: -14.517189025878906

Token 1704: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.023246292024850845
    2. ' space' → logprob: -3.7732462882995605
    3. '(space' → logprob: -14.273246765136719
    4. 'spaces' → logprob: -17.02324676513672
    5. '       ' → logprob: -17.52324676513672
    6. 'not' → logprob: -17.64824676513672
    7. '_space' → logprob: -17.77324676513672
    8. '        ' → logprob: -18.02324676513672
    9. ' not' → logprob: -18.77324676513672
    10. '   ' → logprob: -18.89824676513672

Token 1705: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03039734438061714
    2. 'is' → logprob: -3.530397415161133
    3. ':' → logprob: -7.405397415161133
    4. ':
' → logprob: -10.530397415161133
    5. ')' → logprob: -12.530397415161133
    6. '	is' → logprob: -12.780397415161133
    7. '       ' → logprob: -13.905397415161133
    8. '=' → logprob: -14.030397415161133
    9. ')is' → logprob: -14.405397415161133
    10. 'not' → logprob: -14.405397415161133

Token 1706: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.25694143772125244
    2. 'None' → logprob: -1.5069414377212524
    3. ' not' → logprob: -5.506941318511963
    4. ' None' → logprob: -7.006941318511963
    5. '   ' → logprob: -10.381941795349121
    6. 'none' → logprob: -12.506941795349121
    7. 'Not' → logprob: -14.506941795349121
    8. '(None' → logprob: -16.006940841674805
    9. '       ' → logprob: -16.256940841674805
    10. '
' → logprob: -16.381940841674805

Token 1707: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00014776040916331112
    2. 'not' → logprob: -9.000147819519043
    3. ' None' → logprob: -10.750147819519043
    4. 'none' → logprob: -12.875147819519043
    5. '(None' → logprob: -16.125146865844727
    6. '_none' → logprob: -17.000146865844727
    7. ' not' → logprob: -17.625146865844727
    8. '_None' → logprob: -17.625146865844727
    9. '
' → logprob: -18.000146865844727
    10. '   ' → logprob: -18.750146865844727

Token 1708: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5770205855369568
    2. ':' → logprob: -0.8270205855369568
    3. '           ' → logprob: -7.077020645141602
    4. '       ' → logprob: -8.702020645141602
    5. '):
' → logprob: -10.702020645141602
    6. '   ' → logprob: -12.077020645141602
    7. ':self' → logprob: -12.077020645141602
    8. ':

' → logprob: -12.202020645141602
    9. '():
' → logprob: -12.202020645141602
    10. ':
' → logprob: -12.577020645141602

Token 1709: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13269257545471191
    2. '       ' → logprob: -2.132692575454712
    3. 'self' → logprob: -5.757692337036133
    4. '   ' → logprob: -7.257692337036133
    5. ' self' → logprob: -7.257692337036133
    6. '```' → logprob: -7.257692337036133
    7. '(self' → logprob: -8.632692337036133
    8. ':
' → logprob: -9.257692337036133
    9. ':self' → logprob: -10.007692337036133
    10. ':' → logprob: -10.132692337036133

Token 1710: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017898976802825928
    2. ' self' → logprob: -7.0017900466918945
    3. '       ' → logprob: -7.1267900466918945
    4. '```' → logprob: -10.751790046691895
    5. '           ' → logprob: -10.876790046691895
    6. '(self' → logprob: -11.251790046691895
    7. '	self' → logprob: -11.501790046691895
    8. '   ' → logprob: -11.751790046691895
    9. '_self' → logprob: -13.876790046691895
    10. '[self' → logprob: -14.126790046691895

Token 1711: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.618001053633634e-05
    2. '_assign' → logprob: -10.875025749206543
    3. '.' → logprob: -12.500025749206543
    4. '_ass' → logprob: -13.875025749206543
    5. '   ' → logprob: -14.000025749206543
    6. '_can' → logprob: -14.625025749206543
    7. '_' → logprob: -15.000025749206543
    8. '```' → logprob: -15.750025749206543
    9. '.assign' → logprob: -16.37502670288086
    10. '_code' → logprob: -16.37502670288086

Token 1712: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -7.493430894101039e-05
    2. '_assign' → logprob: -9.500075340270996
    3. '.assign' → logprob: -18.87507438659668
    4. ' assign' → logprob: -19.75007438659668
    5. '(assign' → logprob: -19.87507438659668
    6. 'Assign' → logprob: -21.25007438659668
    7. 'ass' → logprob: -21.37507438659668
    8. '_ass' → logprob: -21.62507438659668
    9. '	assign' → logprob: -21.62507438659668
    10. 'assigned' → logprob: -21.87507438659668

Token 1713: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.250003814697266
    3. 'park' → logprob: -13.625003814697266
    4. '```' → logprob: -16.250003814697266
    5. '_par' → logprob: -17.125003814697266
    6. '[' → logprob: -17.125003814697266
    7. 'Park' → logprob: -17.375003814697266
    8. 'car' → logprob: -17.625003814697266
    9. '   ' → logprob: -17.625003814697266
    10. '(car' → logprob: -17.750003814697266

Token 1714: 'park' (ID: 11174)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12820680439472198
    2. 'park' → logprob: -2.128206729888916
    3. 'space' → logprob: -6.753206729888916
    4. 'car' → logprob: -9.628207206726074
    5. '_assign' → logprob: -11.128207206726074
    6. 'Park' → logprob: -11.378207206726074
    7. '```' → logprob: -12.253207206726074
    8. '_space' → logprob: -12.628207206726074
    9. '(space' → logprob: -12.753207206726074
    10. '_car' → logprob: -13.253207206726074

Token 1715: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.03807339444756508
    2. '_' → logprob: -3.2880733013153076
    3. 'position' → logprob: -10.913073539733887
    4. '_positions' → logprob: -12.413073539733887
    5. 'Position' → logprob: -12.788073539733887
    6. '(car' → logprob: -13.413073539733887
    7. 'car' → logprob: -13.913073539733887
    8. 'park' → logprob: -13.913073539733887
    9. '_pos' → logprob: -14.538073539733887
    10. '_car' → logprob: -14.663073539733887

Token 1716: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.000001907348633
    3. 'car' → logprob: -14.375001907348633
    4. '(
' → logprob: -17.375001907348633
    5. '(card' → logprob: -18.875001907348633
    6. '	car' → logprob: -19.125001907348633
    7. '(Car' → logprob: -19.375001907348633
    8. ' car' → logprob: -19.875001907348633
    9. ' (' → logprob: -20.000001907348633
    10. '(c' → logprob: -20.500001907348633

Token 1717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017342021455988288
    2. '(car' → logprob: -6.376734256744385
    3. ' ,' → logprob: -10.751733779907227
    4. '(space' → logprob: -12.376733779907227
    5. ' car' → logprob: -13.001733779907227
    6. 'car' → logprob: -13.251733779907227
    7. ')' → logprob: -14.376733779907227
    8. ',
' → logprob: -14.501733779907227
    9. '(' → logprob: -15.001733779907227
    10. '           ' → logprob: -15.501733779907227

Token 1718: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.03941205143928528
    2. 'car' → logprob: -3.289412021636963
    3. ' space' → logprob: -6.664412021636963
    4. ' car' → logprob: -9.289412498474121
    5. 'spaces' → logprob: -14.039412498474121
    6. '(space' → logprob: -14.414412498474121
    7. '
' → logprob: -16.164411544799805
    8. '(car' → logprob: -16.664411544799805
    9. '_space' → logprob: -17.039411544799805
    10. 'spacing' → logprob: -17.164411544799805

Token 1719: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04388901963829994
    2. '           ' → logprob: -3.918889045715332
    3. '<|end|>' → logprob: -4.043889045715332
    4. ')return' → logprob: -6.043889045715332
    5. ')
' → logprob: -6.293889045715332
    6. '<|end|>' → logprob: -6.793889045715332
    7. '       ' → logprob: -9.668889045715332
    8. '
' → logprob: -11.168889045715332
    9. '               ' → logprob: -11.293889045715332
    10. '   ' → logprob: -11.418889045715332

Token 1720: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011522965505719185
    2. '       ' → logprob: -4.5115227699279785
    3. 'return' → logprob: -8.386523246765137
    4. 'else' → logprob: -8.761523246765137
    5. '```' → logprob: -10.011523246765137
    6. '               ' → logprob: -10.636523246765137
    7. '		' → logprob: -12.136523246765137
    8. '	       ' → logprob: -12.761523246765137
    9. '<|end|>' → logprob: -12.886523246765137
    10. '   ' → logprob: -12.886523246765137

Token 1721: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3138195872306824
    2. '           ' → logprob: -1.3138196468353271
    3. ' return' → logprob: -7.813819408416748
    4. '
' → logprob: -9.063819885253906
    5. '       ' → logprob: -10.938819885253906
    6. '               ' → logprob: -11.313819885253906
    7. '	return' → logprob: -13.313819885253906
    8. '{return' → logprob: -13.438819885253906
    9. '                   ' → logprob: -13.563819885253906
    10. '   ' → logprob: -14.188819885253906

Token 1722: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20429691672325134
    2. '
' → logprob: -1.8292969465255737
    3. '#' → logprob: -4.704297065734863
    4. 'self' → logprob: -4.829297065734863
    5. '        
' → logprob: -5.079297065734863
    6. 'else' → logprob: -7.454297065734863
    7. '```' → logprob: -9.079297065734863
    8. '    
' → logprob: -9.704297065734863
    9. '#
' → logprob: -10.079297065734863
    10. 'raise' → logprob: -10.329297065734863

Token 1723: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12022298574447632
    2. '#' → logprob: -2.745223045349121
    3. 'self' → logprob: -3.120223045349121
    4. '
' → logprob: -5.370223045349121
    5. '        
' → logprob: -8.995223045349121
    6. '   ' → logprob: -10.120223045349121
    7. '```' → logprob: -10.245223045349121
    8. 'else' → logprob: -10.870223045349121
    9. 'raise' → logprob: -11.120223045349121
    10. '    
' → logprob: -13.620223045349121

Token 1724: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021915410179644823
    2. '#' (adapté à ' #') → logprob: -6.252191543579102
    3. '       ' → logprob: -8.252191543579102
    4. '
' → logprob: -13.877191543579102
    5. 'else' → logprob: -14.002191543579102
    6. ' self' → logprob: -15.502191543579102
    7. '        
' → logprob: -16.5021915435791
    8. '   ' → logprob: -16.7521915435791
    9. '```' → logprob: -18.0021915435791
    10. '	self' → logprob: -19.0021915435791

Token 1725: ' Step' (ID: 22291)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12775367498397827
    2. '#' → logprob: -2.127753734588623
    3. '       ' → logprob: -7.127753734588623
    4. ' self' → logprob: -11.127753257751465
    5. '   ' → logprob: -12.752753257751465
    6. ' #' → logprob: -13.502753257751465
    7. '
' → logprob: -13.877753257751465
    8. 'Self' → logprob: -14.377753257751465
    9. '        
' → logprob: -14.877753257751465
    10. 'If' → logprob: -15.127753257751465

Token 1726: ' ' (ID: 220)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.8544033765792847
    2. '3' → logprob: -1.8544033765792847
    3. ' ' → logprob: -2.104403495788574
    4. '2' → logprob: -2.229403495788574
    5. '1' → logprob: -2.229403495788574
    6. '_' → logprob: -3.229403495788574
    7. '   ' → logprob: -4.104403495788574
    8. '       ' → logprob: -4.229403495788574
    9. ':' → logprob: -5.729403495788574
    10. 'queue' → logprob: -6.354403495788574

Token 1727: '3' (ID: 18)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.3575465679168701
    2. 'queue' → logprob: -1.3575465679168701
    3. '1' → logprob: -1.7325465679168701
    4. '3' → logprob: -1.9825465679168701
    5. 'self' → logprob: -2.60754656791687
    6. '2' → logprob: -3.23254656791687
    7. '_queue' → logprob: -3.23254656791687
    8. '   ' → logprob: -5.232546806335449
    9. '       ' → logprob: -5.607546806335449
    10. 'wait' → logprob: -5.732546806335449

Token 1728: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2353590875864029
    2. '       ' → logprob: -1.6103590726852417
    3. ':
' → logprob: -4.735359191894531
    4. 'self' → logprob: -7.485359191894531
    5. ':self' → logprob: -7.860359191894531
    6. '   ' → logprob: -9.485359191894531
    7. '#' → logprob: -10.360359191894531
    8. ' :' → logprob: -10.985359191894531
    9. '```' → logprob: -11.110359191894531
    10. ' self' → logprob: -11.860359191894531

Token 1729: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012208210537210107
    2. '#' → logprob: -6.751220703125
    3. '       ' → logprob: -10.126220703125
    4. ' self' → logprob: -11.501220703125
    5. '```' → logprob: -15.501220703125
    6. '
' → logprob: -15.751220703125
    7. '   ' → logprob: -16.376220703125
    8. 'car' → logprob: -17.626220703125
    9. '[self' → logprob: -17.626220703125
    10. 'Self' → logprob: -17.626220703125

Token 1730: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.7717702388763428
    2. ' space' → logprob: -1.3967702388763428
    3. ' car' → logprob: -2.6467702388763428
    4. 'car' → logprob: -2.6467702388763428
    5. '_space' → logprob: -2.7717702388763428
    6. 'self' → logprob: -4.146770477294922
    7. '_queue' → logprob: -4.146770477294922
    8. '_spaces' → logprob: -4.271770477294922
    9. '_car' → logprob: -5.271770477294922
    10. 'queue' → logprob: -5.521770477294922

Token 1731: ' available' (ID: 2839)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08178573101758957
    2. 'self' → logprob: -2.5817856788635254
    3. ':' → logprob: -7.206785678863525
    4. ' self' → logprob: -7.331785678863525
    5. ':
' → logprob: -7.456785678863525
    6. '(self' → logprob: -8.456786155700684
    7. ',' → logprob: -8.831786155700684
    8. '
' → logprob: -8.956786155700684
    9. 'else' → logprob: -9.331786155700684
    10. '           ' → logprob: -9.581786155700684

Token 1732: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10217830538749695
    2. 'self' → logprob: -2.3521783351898193
    3. ' self' → logprob: -7.47717809677124
    4. ',' → logprob: -7.60217809677124
    5. '
' → logprob: -7.60217809677124
    6. '```' → logprob: -8.977178573608398
    7. '(self' → logprob: -9.852178573608398
    8. '   ' → logprob: -9.977178573608398
    9. ':
' → logprob: -10.352178573608398
    10. ':' → logprob: -10.477178573608398

Token 1733: ' wait' (ID: 5238)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005383637733757496
    2. '#' → logprob: -5.505383491516113
    3. '       ' → logprob: -6.755383491516113
    4. ' self' → logprob: -8.880383491516113
    5. ' #' → logprob: -15.255383491516113
    6. '   ' → logprob: -15.380383491516113
    7. '
' → logprob: -16.63038444519043
    8. ' ' → logprob: -16.88038444519043
    9. '	self' → logprob: -17.75538444519043
    10. '[self' → logprob: -17.88038444519043

Token 1734: ' queue' (ID: 13661)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4083736538887024
    2. '       ' → logprob: -1.1583735942840576
    3. ' self' → logprob: -4.533373832702637
    4. 'car' → logprob: -5.533373832702637
    5. '_queue' → logprob: -5.658373832702637
    6. '_car' → logprob: -6.158373832702637
    7. '(self' → logprob: -8.033373832702637
    8. ' car' → logprob: -8.658373832702637
    9. '   ' → logprob: -9.158373832702637
    10. '.car' → logprob: -9.533373832702637

Token 1735: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13962583243846893
    2. '.' → logprob: -3.1396257877349854
    3. '.append' → logprob: -3.1396257877349854
    4. 'self' → logprob: -3.7646257877349854
    5. '.
' → logprob: -5.2646260261535645
    6. '.enqueue' → logprob: -5.3896260261535645
    7. '.queue' → logprob: -6.2646260261535645
    8. '.add' → logprob: -6.5146260261535645
    9. '.push' → logprob: -6.5146260261535645
    10. ',' → logprob: -6.8896260261535645

Token 1736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10040636360645294
    2. 'self' → logprob: -2.3504064083099365
    3. ' self' → logprob: -9.225406646728516
    4. '
' → logprob: -9.725406646728516
    5. '```' → logprob: -10.475406646728516
    6. 'car' → logprob: -12.475406646728516
    7. '   ' → logprob: -12.600406646728516
    8. '(self' → logprob: -13.100406646728516
    9. '        
' → logprob: -13.225406646728516
    10. 'else' → logprob: -14.850406646728516

Token 1737: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003534582501742989
    2. '       ' → logprob: -8.000353813171387
    3. ' self' → logprob: -11.125353813171387
    4. '```' → logprob: -12.875353813171387
    5. 'car' → logprob: -14.750353813171387
    6. '
' → logprob: -15.875353813171387
    7. '	self' → logprob: -16.37535285949707
    8. '        
' → logprob: -17.12535285949707
    9. '(self' → logprob: -17.50035285949707
    10. '``' → logprob: -18.00035285949707

Token 1738: '.wait' (ID: 29833)
  Prédit: '.wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wait' → logprob: -4.8351892473874614e-05
    2. '.' → logprob: -10.250048637390137
    3. '.queue' → logprob: -12.375048637390137
    4. ' .' → logprob: -12.750048637390137
    5. '._' → logprob: -13.125048637390137
    6. 'wait' → logprob: -14.125048637390137
    7. '.write' → logprob: -14.625048637390137
    8. '.await' → logprob: -14.625048637390137
    9. '.enqueue' → logprob: -15.500048637390137
    10. '.fail' → logprob: -15.500048637390137

Token 1739: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.625001907348633
    3. '_wait' → logprob: -15.000001907348633
    4. '_QUEUE' → logprob: -16.875001907348633
    5. 'queue' → logprob: -17.000001907348633
    6. 's' → logprob: -17.000001907348633
    7. 'e' → logprob: -17.500001907348633
    8. '_enqueue' → logprob: -18.250001907348633
    9. '_q' → logprob: -18.625001907348633
    10. '._' → logprob: -18.875001907348633

Token 1740: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0206720617134124e-05
    2. '.' → logprob: -12.00001049041748
    3. '.enqueue' → logprob: -13.00001049041748
    4. '.put' → logprob: -14.62501049041748
    5. '.extend' → logprob: -14.87501049041748
    6. '.add' → logprob: -14.87501049041748
    7. '.app' → logprob: -15.37501049041748
    8. 'append' → logprob: -16.000009536743164
    9. '.Append' → logprob: -16.250009536743164
    10. ').' → logprob: -16.375009536743164

Token 1741: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -1.0206720617134124e-05
    2. 'car' → logprob: -11.50001049041748
    3. '(' → logprob: -17.750009536743164
    4. '	car' → logprob: -20.250009536743164
    5. '(card' → logprob: -20.375009536743164
    6. '(Car' → logprob: -20.500009536743164
    7. ' car' → logprob: -21.750009536743164
    8. '(
' → logprob: -22.375009536743164
    9. '/car' → logprob: -22.750009536743164
    10. '```' → logprob: -23.000009536743164

Token 1742: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.836499985889532e-05
    2. ')
' → logprob: -9.8750581741333
    3. '<|end|>' → logprob: -13.3750581741333
    4. '[' → logprob: -13.5000581741333
    5. '       ' → logprob: -13.6250581741333
    6. '())' → logprob: -14.5000581741333
    7. ' )' → logprob: -14.6250581741333
    8. '<|end|>' → logprob: -14.7500581741333
    9. ')return' → logprob: -15.0000581741333
    10. '   ' → logprob: -15.1250581741333

Token 1743: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07934830337762833
    2. '   ' → logprob: -2.57934832572937
    3. ' def' → logprob: -7.829348087310791
    4. '```' → logprob: -10.57934856414795
    5. '
' → logprob: -11.07934856414795
    6. '	def' → logprob: -11.45434856414795
    7. '    
' → logprob: -12.82934856414795
    8. '<|end|>' → logprob: -13.95434856414795
    9. 'async' → logprob: -14.07934856414795
    10. '       ' → logprob: -14.32934856414795

Token 1744: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00036894375807605684
    2. '   ' → logprob: -8.00036907196045
    3. ' def' → logprob: -10.37536907196045
    4. '```' → logprob: -13.00036907196045
    5. '	def' → logprob: -16.750368118286133
    6. '       ' → logprob: -18.625368118286133
    7. 'The' → logprob: -18.750368118286133
    8. '`' → logprob: -19.250368118286133
    9. '    
' → logprob: -19.375368118286133
    10. ')' → logprob: -19.750368118286133

Token 1745: ' _' (ID: 1175)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.12497615069150925
    2. 'process' → logprob: -2.24997615814209
    3. 'depart' → logprob: -5.62497615814209
    4. 'leave' → logprob: -6.49997615814209
    5. 'update' → logprob: -6.62497615814209
    6. 'car' → logprob: -6.74997615814209
    7. 'release' → logprob: -6.87497615814209
    8. 'simulate' → logprob: -7.24997615814209
    9. '_process' → logprob: -7.62497615814209
    10. '_' → logprob: -7.62497615814209

Token 1746: 'remove' (ID: 4942)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.48885223269462585
    2. 'process' → logprob: -1.2388522624969482
    3. 'try' → logprob: -3.4888522624969482
    4. 'can' → logprob: -4.238852024078369
    5. 'remove' → logprob: -4.238852024078369
    6. 'release' → logprob: -4.613852024078369
    7. 'update' → logprob: -4.738852024078369
    8. 'depart' → logprob: -5.863852024078369
    9. 'move' → logprob: -6.113852024078369
    10. 'car' → logprob: -6.113852024078369

Token 1747: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0044174171052873135
    2. '_' → logprob: -5.629417419433594
    3. 'car' → logprob: -8.254417419433594
    4. '_par' → logprob: -8.504417419433594
    5. '_depart' → logprob: -9.379417419433594
    6. '_bottom' → logprob: -9.504417419433594
    7. '_space' → logprob: -10.004417419433594
    8. '_top' → logprob: -10.629417419433594
    9. '_spaces' → logprob: -10.754417419433594
    10. '_c' → logprob: -10.754417419433594

Token 1748: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011756622232496738
    2. '_from' → logprob: -4.636756420135498
    3. '(' → logprob: -6.636756420135498
    4. '_at' → logprob: -8.011756896972656
    5. '_in' → logprob: -9.261756896972656
    6. 'self' → logprob: -9.761756896972656
    7. '   ' → logprob: -9.886756896972656
    8. 'from' → logprob: -10.011756896972656
    9. '_(' → logprob: -10.136756896972656
    10. '_' → logprob: -10.886756896972656

Token 1749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.866689145565033
    2. '(self' → logprob: -1.3666892051696777
    3. 'self' → logprob: -1.3666892051696777
    4. '_from' → logprob: -3.3666892051696777
    5. '_at' → logprob: -3.9916892051696777
    6. 'from' → logprob: -5.491689205169678
    7. '   ' → logprob: -5.866689205169678
    8. '       ' → logprob: -6.241689205169678
    9. '_self' → logprob: -6.866689205169678
    10. ')' → logprob: -6.991689205169678

Token 1750: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.03459629788994789
    2. 'self' → logprob: -3.9095962047576904
    3. ' car' → logprob: -4.5345964431762695
    4. ' self' → logprob: -6.4095964431762695
    5. 'space' → logprob: -6.6595964431762695
    6. 'park' → logprob: -8.78459644317627
    7. '       ' → logprob: -10.78459644317627
    8. ' space' → logprob: -10.78459644317627
    9. '   ' → logprob: -10.90959644317627
    10. 'parking' → logprob: -10.90959644317627

Token 1751: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5413964986801147
    2. '):
' → logprob: -1.6663964986801147
    3. 'self' → logprob: -2.6663966178894043
    4. '       ' → logprob: -2.9163966178894043
    5. '):' → logprob: -3.0413966178894043
    6. '   ' → logprob: -3.1663966178894043
    7. ')' → logprob: -4.916396617889404
    8. ':' → logprob: -5.291396617889404
    9. '(self' → logprob: -7.041396617889404
    10. ' self' → logprob: -7.416396617889404

Token 1752: ' Car' (ID: 4004)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4788004159927368
    2. ')' → logprob: -1.8538004159927368
    3. 'space' → logprob: -2.3538002967834473
    4. '.car' → logprob: -3.3538002967834473
    5. 'park' → logprob: -3.9788002967834473
    6. 'self' → logprob: -3.9788002967834473
    7. ' car' → logprob: -4.478800296783447
    8. 'None' → logprob: -4.603800296783447
    9. '.space' → logprob: -4.603800296783447
    10. 'Car' → logprob: -5.103800296783447

Token 1753: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03477155789732933
    2. '       ' → logprob: -3.78477144241333
    3. '):' → logprob: -4.90977144241333
    4. ',' → logprob: -6.53477144241333
    5. '   ' → logprob: -7.03477144241333
    6. 'self' → logprob: -7.28477144241333
    7. '):
' → logprob: -7.53477144241333
    8. ')' → logprob: -7.78477144241333
    9. '):

' → logprob: -10.284771919250488
    10. '(self' → logprob: -10.909771919250488

Token 1754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011778056621551514
    2. 'space' → logprob: -4.511777877807617
    3. 'if' → logprob: -7.886777877807617
    4. '```' → logprob: -8.386777877807617
    5. '   ' → logprob: -10.136777877807617
    6. ' if' → logprob: -10.511777877807617
    7. 'position' → logprob: -10.636777877807617
    8. '
' → logprob: -10.886777877807617
    9. ' space' → logprob: -11.761777877807617
    10. 'def' → logprob: -12.636777877807617

Token 1755: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.0404159352183342
    2. 'pos' → logprob: -4.0404157638549805
    3. '       ' → logprob: -4.4154157638549805
    4. 'if' → logprob: -4.7904157638549805
    5. 'position' → logprob: -6.6654157638549805
    6. 'car' → logprob: -8.79041576385498
    7. '```' → logprob: -9.29041576385498
    8. 'for' → logprob: -10.16541576385498
    9. ' space' → logprob: -11.29041576385498
    10. '``' → logprob: -11.54041576385498

Token 1756: '_idx' (ID: 15257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14360205829143524
    2. '=' → logprob: -2.018602132797241
    3. '_index' → logprob: -7.768601894378662
    4. '_idx' → logprob: -8.14360237121582
    5. 'idx' → logprob: -9.01860237121582
    6. 'index' → logprob: -9.89360237121582
    7. '   ' → logprob: -11.89360237121582
    8. ' ' → logprob: -12.01860237121582
    9. '```' → logprob: -12.01860237121582
    10. ':' → logprob: -12.26860237121582

Token 1757: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012961626052856445
    2. '=' → logprob: -4.637961387634277
    3. ',' → logprob: -5.762961387634277
    4. '   ' → logprob: -10.387961387634277
    5. 'x' → logprob: -11.137961387634277
    6. ' ,' → logprob: -12.887961387634277
    7. '       ' → logprob: -12.887961387634277
    8. ')' → logprob: -14.012961387634277
    9. ' ' → logprob: -14.012961387634277
    10. '    ' → logprob: -14.012961387634277

Token 1758: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.017497213557362556
    2. 'pos' → logprob: -4.1424970626831055
    3. 'position' → logprob: -7.2674970626831055
    4. 'lvl' → logprob: -7.8924970626831055
    5. 'layer' → logprob: -8.142497062683105
    6. ' level' → logprob: -9.767497062683105
    7. 'car' → logprob: -10.892497062683105
    8. '_level' → logprob: -12.017497062683105
    9. 'floor' → logprob: -12.267497062683105
    10. ' pos' → logprob: -12.267497062683105

Token 1759: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. ')' → logprob: -15.673587799072266
    4. ')=' → logprob: -16.423587799072266
    5. '   ' → logprob: -16.923587799072266
    6. ' ' → logprob: -17.298587799072266
    7. '=user' → logprob: -17.548587799072266
    8. '```' → logprob: -17.673587799072266
    9. '＝' → logprob: -17.798587799072266
    10. 'token' → logprob: -18.298587799072266

Token 1760: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00017982252757064998
    2. ' car' → logprob: -8.6251802444458
    3. '	car' → logprob: -15.6251802444458
    4. '(car' → logprob: -17.750179290771484
    5. '   ' → logprob: -18.500179290771484
    6. '_car' → logprob: -19.000179290771484
    7. 'cars' → logprob: -19.750179290771484
    8. '.car' → logprob: -20.125179290771484
    9. 'Car' → logprob: -20.250179290771484
    10. '       ' → logprob: -20.625179290771484

Token 1761: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014084660506341606
    2. ' .' → logprob: -9.125141143798828
    3. '.car' → logprob: -11.375141143798828
    4. '=' → logprob: -12.375141143798828
    5. '._' → logprob: -12.750141143798828
    6. '   ' → logprob: -13.000141143798828
    7. '
' → logprob: -13.375141143798828
    8. ' =' → logprob: -13.375141143798828
    9. '.space' → logprob: -13.625141143798828
    10. '\.' → logprob: -14.000141143798828

Token 1762: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.00013250234769657254
    2. '.' → logprob: -9.00013256072998
    3. ' park' → logprob: -12.87513256072998
    4. ' ' → logprob: -13.87513256072998
    5. '```' → logprob: -14.00013256072998
    6. '_' → logprob: -14.25013256072998
    7. 'par' → logprob: -14.37513256072998
    8. 'pack' → logprob: -14.37513256072998
    9. '__' → logprob: -14.62513256072998
    10. '   ' → logprob: -15.00013256072998

Token 1763: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -1.8074162653647363e-05
    2. '   ' → logprob: -12.250018119812012
    3. '_POSITION' → logprob: -13.000018119812012
    4. 'Position' → logprob: -13.000018119812012
    5. 'osition' → logprob: -13.625018119812012
    6. '       ' → logprob: -13.750018119812012
    7. 'ed' → logprob: -13.750018119812012
    8. 'position' → logprob: -13.750018119812012
    9. '_' → logprob: -14.250018119812012
    10. '```' → logprob: -14.625018119812012

Token 1764: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5411098003387451
    2. ' =' → logprob: -1.2911098003387451
    3. '=' → logprob: -2.291109800338745
    4. '       ' → logprob: -3.666109800338745
    5. '
' → logprob: -4.666110038757324
    6. '<|end|>' → logprob: -5.541110038757324
    7. ')' → logprob: -7.541110038757324
    8. '   ' → logprob: -7.541110038757324
    9. '```' → logprob: -7.541110038757324
    10. '[self' → logprob: -8.541110038757324

Token 1765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9118032455444336
    2. '=' → logprob: -1.1618032455444336
    3. ' =' → logprob: -1.4118032455444336
    4. 'space' → logprob: -3.4118032455444336
    5. '
' → logprob: -5.661803245544434
    6. '        
' → logprob: -6.536803245544434
    7. 'self' → logprob: -7.411803245544434
    8. '```' → logprob: -7.411803245544434
    9. '[' → logprob: -7.536803245544434
    10. '   ' → logprob: -7.536803245544434

Token 1766: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.00033284336677752435
    2. ' space' → logprob: -8.125332832336426
    3. '       ' → logprob: -10.250332832336426
    4. 'if' → logprob: -14.375332832336426
    5. '(space' → logprob: -14.875332832336426
    6. '```' → logprob: -15.375332832336426
    7. 'self' → logprob: -16.250333786010742
    8. ' if' → logprob: -16.625333786010742
    9. '
' → logprob: -16.875333786010742
    10. '        
' → logprob: -16.875333786010742

Token 1767: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023021936416626
    2. '=' → logprob: -1.9102301597595215
    3. '   ' → logprob: -13.41023063659668
    4. '.' → logprob: -13.78523063659668
    5. ':' → logprob: -14.16023063659668
    6. '```' → logprob: -14.41023063659668
    7. 'space' → logprob: -14.53523063659668
    8. '       ' → logprob: -15.03523063659668
    9. ')' → logprob: -15.66023063659668
    10. ' ' → logprob: -15.78523063659668

Token 1768: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000553151941858232
    2. ' self' → logprob: -7.500553131103516
    3. '       ' → logprob: -15.875553131103516
    4. '[self' → logprob: -17.500553131103516
    5. 'next' → logprob: -18.250553131103516
    6. '(self' → logprob: -19.000553131103516
    7. '	self' → logprob: -19.250553131103516
    8. '           ' → logprob: -21.250553131103516
    9. '=self' → logprob: -21.375553131103516
    10. '
' → logprob: -21.875553131103516

Token 1769: '.sp' (ID: 16144)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014478564262390137
    2. '.sp' → logprob: -6.751447677612305
    3. ' self' → logprob: -8.626447677612305
    4. 'spaces' → logprob: -9.876447677612305
    5. '.self' → logprob: -10.876447677612305
    6. 'sp' → logprob: -11.751447677612305
    7. '       ' → logprob: -12.126447677612305
    8. '[self' → logprob: -12.126447677612305
    9. '   ' → logprob: -12.751447677612305
    10. '	self' → logprob: -13.376447677612305

Token 1770: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -6.704273118884885e-07
    2. 'spaces' → logprob: -15.500000953674316
    3. 'paces' → logprob: -16.125
    4. 'ac' → logprob: -16.5
    5. 'laces' → logprob: -16.5
    6. 'ces' → logprob: -16.75
    7. '```' → logprob: -16.875
    8. 'acies' → logprob: -17.125
    9. 'ACES' → logprob: -17.375
    10. 'ace' → logprob: -17.875

Token 1771: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.656383680412546e-05
    2. 'space' → logprob: -10.000046730041504
    3. '       ' → logprob: -14.125046730041504
    4. '(space' → logprob: -15.750046730041504
    5. '```' → logprob: -16.375045776367188
    6. '[
' → logprob: -16.625045776367188
    7. ' [' → logprob: -17.250045776367188
    8. '           ' → logprob: -18.375045776367188
    9. '   ' → logprob: -18.625045776367188
    10. '[self' → logprob: -19.125045776367188

Token 1772: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.2664456789934775e-06
    2. ' space' → logprob: -13.750000953674316
    3. '(space' → logprob: -16.375001907348633
    4. '
' → logprob: -18.250001907348633
    5. '[' → logprob: -20.375001907348633
    6. 'pace' → logprob: -20.750001907348633
    7. '
' → logprob: -22.250001907348633
    8. '```' → logprob: -22.625001907348633
    9. 'spaces' → logprob: -22.750001907348633
    10. '_space' → logprob: -22.875001907348633

Token 1773: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.14827382564544678
    2. '[' → logprob: -2.1482739448547363
    3. 'space' → logprob: -3.8982739448547363
    4. '[
' → logprob: -8.523273468017578
    5. '```' → logprob: -9.023273468017578
    6. '(space' → logprob: -9.148273468017578
    7. 'idx' → logprob: -9.273273468017578
    8. '_[' → logprob: -10.023273468017578
    9. '-' → logprob: -10.148273468017578
    10. '   ' → logprob: -10.273273468017578

Token 1774: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.061967797577381134
    2. ' -' → logprob: -2.8119678497314453
    3. '-token' → logprob: -16.561967849731445
    4. '[' → logprob: -17.186967849731445
    5. '-space' → logprob: -17.186967849731445
    6. '```' → logprob: -17.311967849731445
    7. ' ' → logprob: -18.186967849731445
    8. '1' → logprob: -18.311967849731445
    9. '-
' → logprob: -18.561967849731445
    10. 'space' → logprob: -18.561967849731445

Token 1775: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -19.625
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -20.875
    6. '۱' → logprob: -22.875
    7. '       ' → logprob: -22.875
    8. ')' → logprob: -23.125
    9. '
' → logprob: -23.125
    10. '0' → logprob: -23.25

Token 1776: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.000001907348633
    4. 'space' → logprob: -20.375001907348633
    5. '```' → logprob: -20.625001907348633
    6. '       ' → logprob: -20.750001907348633
    7. '<|end|>' → logprob: -21.125001907348633
    8. 'self' → logprob: -21.125001907348633
    9. '１' → logprob: -21.375001907348633
    10. '0' → logprob: -21.375001907348633

Token 1777: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8257666826248169
    2. ')
' → logprob: -1.575766682624817
    3. ']
' → logprob: -1.825766682624817
    4. ']' → logprob: -2.0757665634155273
    5. ')' → logprob: -2.7007665634155273
    6. '<|end|>' → logprob: -7.950766563415527
    7. '][' → logprob: -8.200766563415527
    8. '
' → logprob: -8.450766563415527
    9. '        
' → logprob: -8.575766563415527
    10. '	' → logprob: -9.450766563415527

Token 1778: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4081297516822815
    2. '       ' → logprob: -1.1581296920776367
    3. ' if' → logprob: -3.9081296920776367
    4. '
' → logprob: -7.283129692077637
    5. '        
' → logprob: -8.783129692077637
    6. '```' → logprob: -9.908129692077637
    7. '   ' → logprob: -10.158129692077637
    8. '	if' → logprob: -11.658129692077637
    9. '[' → logprob: -12.408129692077637
    10. '           ' → logprob: -12.908129692077637

Token 1779: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000429596402682364
    2. '       ' → logprob: -8.000429153442383
    3. ' if' → logprob: -9.750429153442383
    4. '```' → logprob: -10.250429153442383
    5. '``' → logprob: -15.125429153442383
    6. '   ' → logprob: -16.250429153442383
    7. '
' → logprob: -16.375429153442383
    8. '	if' → logprob: -16.625429153442383
    9. '`' → logprob: -19.625429153442383
    10. '        
' → logprob: -20.000429153442383

Token 1780: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.0002465582510922104
    2. ' level' → logprob: -8.37524700164795
    3. '   ' → logprob: -11.37524700164795
    4. '           ' → logprob: -12.75024700164795
    5. '       ' → logprob: -14.75024700164795
    6. '	level' → logprob: -14.75024700164795
    7. '(level' → logprob: -14.75024700164795
    8. '     ' → logprob: -16.125246047973633
    9. '    ' → logprob: -16.250246047973633
    10. '  ' → logprob: -16.375246047973633

Token 1781: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2257617712020874
    2. ' ==' → logprob: -1.6007617712020874
    3. '=' → logprob: -8.225761413574219
    4. '==
' → logprob: -9.725761413574219
    5. '===' → logprob: -11.975761413574219
    6. ']==' → logprob: -12.725761413574219
    7. ')==' → logprob: -12.975761413574219
    8. '[' → logprob: -12.975761413574219
    9. ' =' → logprob: -13.100761413574219
    10. ')' → logprob: -13.850761413574219

Token 1782: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.125009536743164
    4. '       ' → logprob: -18.125009536743164
    5. '1' → logprob: -18.500009536743164
    6. '```' → logprob: -19.750009536743164
    7. '۰' → logprob: -20.375009536743164
    8. '           ' → logprob: -20.500009536743164
    9. '=' → logprob: -21.375009536743164
    10. ' ' → logprob: -21.500009536743164

Token 1783: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '
' → logprob: -20.125001907348633
    6. '۰' → logprob: -20.375001907348633
    7. '       ' → logprob: -20.750001907348633
    8. '```' → logprob: -21.250001907348633
    9. '=' → logprob: -21.687501907348633
    10. ' ' → logprob: -21.750001907348633

Token 1784: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4757387042045593
    2. ':' → logprob: -0.9757387042045593
    3. ' and' → logprob: -7.225738525390625
    4. '           ' → logprob: -7.475738525390625
    5. '       ' → logprob: -8.725738525390625
    6. '.' → logprob: -9.725738525390625
    7. ':

' → logprob: -10.725738525390625
    8. 'and' → logprob: -10.975738525390625
    9. ' :
' → logprob: -10.975738525390625
    10. '<|end|>' → logprob: -11.350738525390625

Token 1785: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10134062170982361
    2. 'space' → logprob: -2.3513405323028564
    3. ' space' → logprob: -7.1013407707214355
    4. '   ' → logprob: -8.226340293884277
    5. '```' → logprob: -10.976340293884277
    6. '       ' → logprob: -11.351340293884277
    7. '               ' → logprob: -11.851340293884277
    8. '          ' → logprob: -14.101340293884277
    9. '        ' → logprob: -14.101340293884277
    10. ' ' → logprob: -14.601340293884277

Token 1786: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.0021590644028037786
    2. ' space' → logprob: -6.252159118652344
    3. '           ' → logprob: -8.502159118652344
    4. '```' → logprob: -10.627159118652344
    5. '       ' → logprob: -13.752159118652344
    6. '   ' → logprob: -14.127159118652344
    7. '``' → logprob: -14.377159118652344
    8. '               ' → logprob: -14.627159118652344
    9. 'if' → logprob: -16.627159118652344
    10. '`' → logprob: -16.877159118652344

Token 1787: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -3.368984107510187e-05
    2. 'bottom' → logprob: -10.375033378601074
    3. '.' → logprob: -13.750033378601074
    4. '```' → logprob: -15.000033378601074
    5. '底' → logprob: -15.875033378601074
    6. '   ' → logprob: -16.00003433227539
    7. '
' → logprob: -16.12503433227539
    8. ' bottom' → logprob: -16.12503433227539
    9. '           ' → logprob: -16.12503433227539
    10. '       ' → logprob: -16.25003433227539

Token 1788: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07898078113794327
    2. ' =' → logprob: -2.5789806842803955
    3. '=None' → logprob: -9.328980445861816
    4. '=
' → logprob: -13.328980445861816
    5. '=False' → logprob: -15.828980445861816
    6. '```' → logprob: -15.828980445861816
    7. '=True' → logprob: -16.953981399536133
    8. '＝' → logprob: -16.953981399536133
    9. ' =
' → logprob: -16.953981399536133
    10. 'None' → logprob: -17.078981399536133

Token 1789: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.5048530030981055e-06
    2. ' None' → logprob: -13.500001907348633
    3. 'none' → logprob: -19.250001907348633
    4. '(None' → logprob: -20.125001907348633
    5. '=None' → logprob: -21.000001907348633
    6. 'null' → logprob: -21.625001907348633
    7. '_None' → logprob: -21.875001907348633
    8. '_none' → logprob: -22.875001907348633
    9. '   ' → logprob: -22.875001907348633
    10. '           ' → logprob: -24.250001907348633

Token 1790: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1791: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1792: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2585621476173401
    2. 'else' (adapté à ' else') → logprob: -1.5085620880126953
    3. 'elif' → logprob: -5.258562088012695
    4. ' else' → logprob: -6.633562088012695
    5. ' elif' → logprob: -9.758562088012695
    6. '```' → logprob: -10.383562088012695
    7. '   ' → logprob: -13.008562088012695
    8. '           ' → logprob: -14.633562088012695
    9. 'if' → logprob: -14.758562088012695
    10. '
' → logprob: -15.133562088012695

Token 1793: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2898114323616028
    2. ':' → logprob: -1.664811372756958
    3. '           ' → logprob: -2.789811372756958
    4. '       ' → logprob: -7.789811611175537
    5. '          ' → logprob: -8.789811134338379
    6. '            ' → logprob: -9.164811134338379
    7. '        ' → logprob: -9.289811134338379
    8. '         ' → logprob: -10.414811134338379
    9. '```' → logprob: -10.539811134338379
    10. '   ' → logprob: -10.664811134338379

Token 1794: '           ' (ID: 352)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.023285893723368645
    2. 'space' → logprob: -3.7732858657836914
    3. '           ' → logprob: -11.273285865783691
    4. '            ' → logprob: -11.773285865783691
    5. '        ' → logprob: -11.898285865783691
    6. ' ' → logprob: -12.398285865783691
    7. '(space' → logprob: -12.398285865783691
    8. '```' → logprob: -13.398285865783691
    9. '               ' → logprob: -13.898285865783691
    10. ' espacio' → logprob: -14.523285865783691

Token 1795: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.018157554790377617
    2. ' space' → logprob: -4.018157482147217
    3. '           ' → logprob: -12.143157958984375
    4. '            ' → logprob: -13.643157958984375
    5. '(space' → logprob: -14.518157958984375
    6. '        ' → logprob: -15.393157958984375
    7. '               ' → logprob: -15.393157958984375
    8. '       ' → logprob: -16.768157958984375
    9. '```' → logprob: -17.393157958984375
    10. 'None' → logprob: -17.518157958984375

Token 1796: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.008639862760901451
    2. '.bottom' → logprob: -4.758639812469482
    3. '.' → logprob: -10.75864028930664
    4. 'top' → logprob: -13.63364028930664
    5. '[top' → logprob: -13.63364028930664
    6. '           ' → logprob: -14.25864028930664
    7. '	top' → logprob: -15.50864028930664
    8. 'bottom' → logprob: -16.00864028930664
    9. ' .' → logprob: -16.00864028930664
    10. '.Top' → logprob: -16.13364028930664

Token 1797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859600216150284
    2. ' =' → logprob: -3.048595905303955
    3. '=None' → logprob: -11.673596382141113
    4. 'space' → logprob: -17.298595428466797
    5. '＝' → logprob: -17.548595428466797
    6. 'None' → logprob: -17.673595428466797
    7. '.=' → logprob: -18.048595428466797
    8. ')' → logprob: -18.173595428466797
    9. '=
' → logprob: -18.298595428466797
    10. ' is' → logprob: -18.423595428466797

Token 1798: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.306760805164231e-05
    2. ' None' → logprob: -11.25001335144043
    3. '(None' → logprob: -19.62501335144043
    4. '_None' → logprob: -21.12501335144043
    5. '=None' → logprob: -22.00001335144043
    6. 'none' → logprob: -22.12501335144043
    7. 'No' → logprob: -22.12501335144043
    8. '   ' → logprob: -22.25001335144043
    9. ',None' → logprob: -23.25001335144043
    10. '0' → logprob: -23.37501335144043

Token 1799: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004267985001206398
    2. '<|end|>' → logprob: -5.504268169403076
    3. '
' → logprob: -9.379267692565918
    4. '   ' → logprob: -9.629267692565918
    5. '<|end|>' → logprob: -11.379267692565918
    6. '```' → logprob: -12.004267692565918
    7. '           ' → logprob: -12.004267692565918
    8. ',' → logprob: -12.504267692565918
    9. '        
' → logprob: -13.254267692565918
    10. ' car' → logprob: -13.629267692565918

Token 1800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030153801199048758
    2. '<|end|>' → logprob: -5.878015518188477
    3. '```' → logprob: -8.878015518188477
    4. '   ' → logprob: -10.378015518188477
    5. 'car' → logprob: -11.753015518188477
    6. '
' → logprob: -12.003015518188477
    7. ' car' → logprob: -12.128015518188477
    8. '           ' → logprob: -12.253015518188477
    9. '        
' → logprob: -12.503015518188477
    10. '<|end|>' → logprob: -12.628015518188477

Token 1801: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -0.0009811243508011103
    2. '       ' → logprob: -7.000981330871582
    3. '```' → logprob: -10.250981330871582
    4. ' car' → logprob: -10.750981330871582
    5. 'del' → logprob: -12.250981330871582
    6. '   ' → logprob: -12.625981330871582
    7. 'def' → logprob: -13.750981330871582
    8. 'if' → logprob: -13.750981330871582
    9. '	car' → logprob: -13.875981330871582
    10. '_car' → logprob: -14.000981330871582

Token 1802: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.15310683415737e-05
    2. '.car' → logprob: -11.250021934509277
    3. ' .' → logprob: -12.375021934509277
    4. '       ' → logprob: -13.875021934509277
    5. '.pet' → logprob: -13.875021934509277
    6. '```' → logprob: -14.375021934509277
    7. '   ' → logprob: -15.625021934509277
    8. '​.' → logprob: -16.00002098083496
    9. '`.' → logprob: -16.12502098083496
    10. '\.' → logprob: -16.25002098083496

Token 1803: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.0
    3. '.' → logprob: -18.125
    4. '__' → logprob: -18.625
    5. 'parking' → logprob: -18.625
    6. 'plant' → logprob: -18.75
    7. 'car' → logprob: -18.75
    8. '```' → logprob: -18.875
    9. 'wait' → logprob: -19.25
    10. 'departure' → logprob: -19.25

Token 1804: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -3.1782583391759545e-05
    2. 'Position' → logprob: -10.375031471252441
    3. 'position' → logprob: -15.750031471252441
    4. 'osition' → logprob: -15.875031471252441
    5. '_POSITION' → logprob: -16.000032424926758
    6. '_time' → logprob: -17.250032424926758
    7. '_positions' → logprob: -17.250032424926758
    8. '_Position' → logprob: -17.375032424926758
    9. '_' → logprob: -17.500032424926758
    10. '_location' → logprob: -17.875032424926758

Token 1805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.758300438988954e-05
    2. ' =' → logprob: -9.250097274780273
    3. '=None' → logprob: -13.625097274780273
    4. '=
' → logprob: -15.625097274780273
    5. '<|end|>' → logprob: -19.875097274780273
    6. '＝' → logprob: -20.875097274780273
    7. '=

' → logprob: -20.875097274780273
    8. 'None' → logprob: -21.125097274780273
    9. ')=' → logprob: -21.875097274780273
    10. '=}' → logprob: -22.000097274780273

Token 1806: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.547789674485102e-05
    2. ' None' → logprob: -10.250035285949707
    3. '(None' → logprob: -18.250036239624023
    4. '_None' → logprob: -21.125036239624023
    5. '=None' → logprob: -22.250036239624023
    6. '   ' → logprob: -22.500036239624023
    7. ',None' → logprob: -25.500036239624023
    8. 'none' → logprob: -25.500036239624023
    9. '       ' → logprob: -25.750036239624023
    10. '```' → logprob: -26.000036239624023

Token 1807: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4244235157966614
    2. '   ' → logprob: -1.1744234561920166
    3. '<|end|>' → logprob: -3.5494234561920166
    4. ' def' → logprob: -5.549423694610596
    5. '```' → logprob: -6.424423694610596
    6. '
' → logprob: -6.424423694610596
    7. '    
' → logprob: -7.549423694610596
    8. '<|end|>' → logprob: -8.799423217773438
    9. '	def' → logprob: -9.549423217773438
    10. '       ' → logprob: -9.924423217773438

Token 1808: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5298721790313721
    2. 'def' → logprob: -0.9048721790313721
    3. '
' → logprob: -5.779871940612793
    4. ' def' → logprob: -5.904871940612793
    5. '```' → logprob: -7.154871940612793
    6. '    
' → logprob: -10.529871940612793
    7. '`' → logprob: -10.779871940612793
    8. '	def' → logprob: -11.154871940612793
    9. '       ' → logprob: -11.154871940612793
    10. '<|end|>' → logprob: -11.654871940612793

Token 1809: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005168173927813768
    2. '   ' → logprob: -5.3801679611206055
    3. ' def' → logprob: -7.6301679611206055
    4. '```' → logprob: -10.005167961120605
    5. '
' → logprob: -11.755167961120605
    6. '	def' → logprob: -12.005167961120605
    7. '    
' → logprob: -14.005167961120605
    8. '<|end|>' → logprob: -14.755167961120605
    9. '`' → logprob: -15.255167961120605
    10. 'class' → logprob: -15.505167961120605

Token 1810: ' _' (ID: 1175)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.44419410824775696
    2. 'advance' → logprob: -1.5691940784454346
    3. 'def' → logprob: -2.4441940784454346
    4. 'remove' → logprob: -4.319194316864014
    5. '_process' → logprob: -4.444194316864014
    6. ' process' → logprob: -4.444194316864014
    7. 'depart' → logprob: -4.819194316864014
    8. '_depart' → logprob: -5.444194316864014
    9. 'simulate' → logprob: -5.944194316864014
    10. 'release' → logprob: -6.319194316864014

Token 1811: 'find' (ID: 6555)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.6738103032112122
    2. 'advance' → logprob: -1.1738102436065674
    3. 'remove' → logprob: -2.4238102436065674
    4. 'try' → logprob: -3.2988102436065674
    5. 'handle' → logprob: -4.2988104820251465
    6. 'check' → logprob: -4.6738104820251465
    7. 'depart' → logprob: -5.0488104820251465
    8. 'can' → logprob: -5.2988104820251465
    9. 'update' → logprob: -5.4238104820251465
    10. 'release' → logprob: -5.6738104820251465

Token 1812: '_depart' (ID: 172061)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.17686639726161957
    2. '_car' → logprob: -2.426866292953491
    3. '_c' → logprob: -2.926866292953491
    4. 'next' → logprob: -5.05186653137207
    5. 'car' → logprob: -5.67686653137207
    6. '_ready' → logprob: -5.92686653137207
    7. '_depart' → logprob: -6.30186653137207
    8. '_' → logprob: -6.42686653137207
    9. '_space' → logprob: -6.42686653137207
    10. '_first' → logprob: -7.42686653137207

Token 1813: 'ing' (ID: 289)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.07300407439470291
    2. '_car' → logprob: -2.6980040073394775
    3. 'car' → logprob: -6.823004245758057
    4. 'ing' → logprob: -6.948004245758057
    5. 'ures' → logprob: -8.323003768920898
    6. 'uring' → logprob: -8.448003768920898
    7. '_time' → logprob: -8.573003768920898
    8. 'ur' → logprob: -9.823003768920898
    9. 'e' → logprob: -9.823003768920898
    10. '_c' → logprob: -10.198003768920898

Token 1814: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7010265588760376
    2. '_car' → logprob: -0.7010265588760376
    3. 'car' → logprob: -5.076026439666748
    4. '_time' → logprob: -7.201026439666748
    5. 'cars' → logprob: -8.076026916503906
    6. '_space' → logprob: -8.326026916503906
    7. '_spaces' → logprob: -9.326026916503906
    8. '_' → logprob: -10.076026916503906
    9. '```' → logprob: -10.451026916503906
    10. '_next' → logprob: -10.576026916503906

Token 1815: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.47412219643592834
    2. 'ar' → logprob: -0.974122166633606
    3. 'def' → logprob: -11.474122047424316
    4. '_' → logprob: -12.099122047424316
    5. '_ar' → logprob: -12.349122047424316
    6. 'cars' → logprob: -12.349122047424316
    7. '```' → logprob: -12.599122047424316
    8. 'a' → logprob: -13.849122047424316
    9. 'arse' → logprob: -13.849122047424316
    10. 'arl' → logprob: -14.036622047424316

Token 1816: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013596400385722518
    2. '(' → logprob: -6.626359462738037
    3. 'self' → logprob: -11.251359939575195
    4. '   ' → logprob: -11.501359939575195
    5. '       ' → logprob: -12.001359939575195
    6. 'def' → logprob: -13.501359939575195
    7. ' (' → logprob: -13.876359939575195
    8. '```' → logprob: -14.626359939575195
    9. '()' → logprob: -14.751359939575195
    10. '(
' → logprob: -14.876359939575195

Token 1817: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009402852156199515
    2. '(' → logprob: -7.625940322875977
    3. 'self' → logprob: -8.625940322875977
    4. '_at' → logprob: -8.625940322875977
    5. ' (' → logprob: -10.375940322875977
    6. ')' → logprob: -11.250940322875977
    7. 'at' → logprob: -11.750940322875977
    8. '       ' → logprob: -11.750940322875977
    9. '```' → logprob: -11.750940322875977
    10. '   ' → logprob: -12.125940322875977

Token 1818: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026011597365140915
    2. '```' → logprob: -3.9010117053985596
    3. '[]' → logprob: -6.1510114669799805
    4. 'result' → logprob: -6.7760114669799805
    5. 'depart' → logprob: -7.4010114669799805
    6. 'return' → logprob: -8.02601146697998
    7. '[' → logprob: -8.27601146697998
    8. 'results' → logprob: -8.77601146697998
    9. 'def' → logprob: -8.77601146697998
    10. '``' → logprob: -8.90101146697998

Token 1819: ' #' (ID: 1069)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.1884240359067917
    2. 'result' → logprob: -2.4384241104125977
    3. 'return' → logprob: -2.6884241104125977
    4. '       ' → logprob: -4.563424110412598
    5. 'cars' → logprob: -5.563424110412598
    6. 'results' → logprob: -7.688424110412598
    7. ' departing' → logprob: -7.938424110412598
    8. 'def' → logprob: -8.063424110412598
    9. 'departure' → logprob: -8.438424110412598
    10. '[' → logprob: -8.938424110412598

Token 1820: ' find' (ID: 1646)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.017449766397476196
    2. '       ' → logprob: -5.142449855804443
    3. 'result' → logprob: -5.392449855804443
    4. 'def' → logprob: -5.767449855804443
    5. 'cars' → logprob: -6.517449855804443
    6. 'return' → logprob: -6.892449855804443
    7. 'le' → logprob: -7.642449855804443
    8. 'departure' → logprob: -8.517449378967285
    9. 'results' → logprob: -9.142449378967285
    10. 'de' → logprob: -9.267449378967285

Token 1821: ' cars' (ID: 13653)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3963685631752014
    2. '[c' → logprob: -1.5213685035705566
    3. 'cars' → logprob: -2.7713685035705566
    4. '[
' → logprob: -3.5213685035705566
    5. 'depart' → logprob: -4.646368503570557
    6. '[i' → logprob: -5.521368503570557
    7. 'car' → logprob: -7.271368503570557
    8. '[idx' → logprob: -7.896368503570557
    9. 'c' → logprob: -8.021368980407715
    10. '       ' → logprob: -8.146368980407715

Token 1822: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6263397932052612
    2. 'depart' → logprob: -1.6263397932052612
    3. '       ' → logprob: -2.376339912414551
    4. '=' → logprob: -2.501339912414551
    5. 'that' → logprob: -3.626339912414551
    6. '=[' → logprob: -4.251339912414551
    7. '[
' → logprob: -4.751339912414551
    8. '[' → logprob: -4.751339912414551
    9. '=[]
' → logprob: -5.001339912414551
    10. 'at' → logprob: -5.751339912414551

Token 1823: ' must' (ID: 2804)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.23201753199100494
    2. 'c' → logprob: -2.4820175170898438
    3. 'return' → logprob: -2.8570175170898438
    4. 'd' → logprob: -4.607017517089844
    5. 'dep' → logprob: -4.607017517089844
    6. 'depart' → logprob: -4.607017517089844
    7. 'time' → logprob: -5.232017517089844
    8. 't' → logprob: -5.357017517089844
    9. 'dp' → logprob: -5.732017517089844
    10. 'departure' → logprob: -5.857017517089844

Token 1824: ' depart' (ID: 14182)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.1617191880941391
    2. 'leave' → logprob: -1.9117192029953003
    3. '_depart' → logprob: -7.28671932220459
    4. 'departure' → logprob: -7.41171932220459
    5. '```' → logprob: -9.28671932220459
    6. 'be' → logprob: -10.03671932220459
    7. '   ' → logprob: -10.66171932220459
    8. ' depart' → logprob: -11.16171932220459
    9. '       ' → logprob: -11.78671932220459
    10. '_leave' → logprob: -12.16171932220459

Token 1825: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6630577445030212
    2. 'depart' → logprob: -1.038057804107666
    3. 'result' → logprob: -2.788057804107666
    4. 'return' → logprob: -3.038057804107666
    5. 'cars' → logprob: -5.538057804107666
    6. '[]' → logprob: -5.538057804107666
    7. ' departing' → logprob: -5.663057804107666
    8. '```' → logprob: -5.663057804107666
    9. '[' → logprob: -6.663057804107666
    10. '=' → logprob: -6.788057804107666

Token 1826: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05024673789739609
    2. 'current' → logprob: -4.050246715545654
    3. '[self' → logprob: -4.300246715545654
    4. 'time' → logprob: -4.300246715545654
    5. 't' → logprob: -6.550246715545654
    6. 'the' → logprob: -7.425246715545654
    7. '
' → logprob: -7.425246715545654
    8. ' self' → logprob: -8.175247192382812
    9. '[
' → logprob: -8.175247192382812
    10. '=self' → logprob: -8.425247192382812

Token 1827: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.019646083936095238
    2. 'time' → logprob: -4.019646167755127
    3. 'self' → logprob: -6.769646167755127
    4. '```' → logprob: -8.644645690917969
    5. '   ' → logprob: -9.769645690917969
    6. '       ' → logprob: -9.894645690917969
    7. '
' → logprob: -10.894645690917969
    8. 'def' → logprob: -11.019645690917969
    9. ' time' → logprob: -11.144645690917969
    10. '_' → logprob: -12.394645690917969

Token 1828: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46775537729263306
    2. 'return' → logprob: -1.4677553176879883
    3. 'result' → logprob: -2.4677553176879883
    4. 'depart' → logprob: -3.7177553176879883
    5. ' =' → logprob: -4.967755317687988
    6. '[]' → logprob: -4.967755317687988
    7. 'def' → logprob: -5.467755317687988
    8. '[' → logprob: -5.592755317687988
    9. '[]
' → logprob: -5.592755317687988
    10. '=' → logprob: -5.717755317687988

Token 1829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026686664670705795
    2. 'return' → logprob: -4.151686668395996
    3. 'def' → logprob: -4.651686668395996
    4. '[]' → logprob: -8.401686668395996
    5. '```' → logprob: -8.401686668395996
    6. '[]
' → logprob: -8.526686668395996
    7. 'result' → logprob: -9.026686668395996
    8. 'self' → logprob: -9.401686668395996
    9. '[' → logprob: -9.776686668395996
    10. '   ' → logprob: -9.901686668395996

Token 1830: ' #' (ID: 1069)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.20246285200119019
    2. 'result' → logprob: -1.952462911605835
    3. '       ' → logprob: -4.077462673187256
    4. 'return' → logprob: -4.077462673187256
    5. 'cars' → logprob: -5.327462673187256
    6. 'def' → logprob: -7.452462673187256
    7. ' departing' → logprob: -7.452462673187256
    8. '```' → logprob: -7.702462673187256
    9. 'results' → logprob: -8.077463150024414
    10. 'departure' → logprob: -8.452463150024414

Token 1831: ' must' (ID: 2804)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.047053202986717224
    2. 'result' → logprob: -3.672053098678589
    3. 'return' → logprob: -4.047053337097168
    4. '       ' → logprob: -6.297053337097168
    5. 'def' → logprob: -7.672053337097168
    6. 'cars' → logprob: -7.922053337097168
    7. 'res' → logprob: -9.297053337097168
    8. '   ' → logprob: -9.547053337097168
    9. ' departing' → logprob: -10.047053337097168
    10. 'results' → logprob: -10.172053337097168

Token 1832: ' handle' (ID: 5318)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.10900623351335526
    2. 'return' → logprob: -3.10900616645813
    3. '       ' → logprob: -3.60900616645813
    4. '_depart' → logprob: -4.609006404876709
    5. 'be' → logprob: -5.234006404876709
    6. 'def' → logprob: -5.359006404876709
    7. 'result' → logprob: -5.734006404876709
    8. '[]' → logprob: -6.359006404876709
    9. '=' → logprob: -6.984006404876709
    10. 'leave' → logprob: -7.109006404876709

Token 1833: ':
' (ID: 734)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.03678613901138306
    2. 'result' → logprob: -3.9117860794067383
    3. 'cars' → logprob: -5.536786079406738
    4. 'for' → logprob: -6.161786079406738
    5. ' departing' → logprob: -6.411786079406738
    6. '[]' → logprob: -6.786786079406738
    7. '   ' → logprob: -6.911786079406738
    8. '#' → logprob: -7.161786079406738
    9. 'departure' → logprob: -7.161786079406738
    10. 'deps' → logprob: -7.661786079406738

Token 1834: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024908799678087234
    2. '```' → logprob: -6.752490997314453
    3. 'return' → logprob: -8.002490997314453
    4. 'cars' → logprob: -8.752490997314453
    5. 'for' → logprob: -9.127490997314453
    6. 'result' → logprob: -9.127490997314453
    7. '[]' → logprob: -9.252490997314453
    8. '        
' → logprob: -9.502490997314453
    9. ' cars' → logprob: -10.002490997314453
    10. ' for' → logprob: -10.127490997314453

Token 1835: ' #' (ID: 1069)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.37076035141944885
    2. '       ' → logprob: -1.8707603216171265
    3. 'result' → logprob: -2.370760440826416
    4. 'cars' → logprob: -3.745760440826416
    5. '```' → logprob: -4.620760440826416
    6. 'for' → logprob: -5.370760440826416
    7. '#' (adapté à ' #') → logprob: -5.495760440826416
    8. 'results' → logprob: -5.620760440826416
    9. ' departing' → logprob: -5.620760440826416
    10. 'res' → logprob: -6.120760440826416

Token 1836: ' -' (ID: 533)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.46180763840675354
    2. '       ' → logprob: -1.7118076086044312
    3. 'result' → logprob: -2.3368077278137207
    4. '#' → logprob: -3.4618077278137207
    5. 'cars' → logprob: -3.5868077278137207
    6. 'results' → logprob: -4.836807727813721
    7. 'for' → logprob: -4.961807727813721
    8. '```' → logprob: -5.961807727813721
    9. 'res' → logprob: -6.211807727813721
    10. '``' → logprob: -6.336807727813721

Token 1837: ' lower' (ID: 6931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5683388710021973
    2. 'cars' → logprob: -1.5683388710021973
    3. 'all' → logprob: -2.4433388710021973
    4. ' for' → logprob: -2.6933388710021973
    5. 'car' → logprob: -2.8183388710021973
    6. '#' → logprob: -2.8183388710021973
    7. ' all' → logprob: -3.0683388710021973
    8. 'bottom' → logprob: -3.0683388710021973
    9. 'depart' → logprob: -3.4433388710021973
    10. ' cars' → logprob: -3.8183388710021973

Token 1838: ' cars' (ID: 13653)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -1.0767807960510254
    2. 'cars' → logprob: -1.0767807960510254
    3. '_c' → logprob: -2.0767807960510254
    4. '_level' → logprob: -2.8267807960510254
    5. 'def' → logprob: -2.9517807960510254
    6. '
' → logprob: -3.9517807960510254
    7. 'car' → logprob: -3.9517807960510254
    8. ' cars' → logprob: -5.201780796051025
    9. '_' → logprob: -5.326780796051025
    10. ' =' → logprob: -5.576780796051025

Token 1839: ' depart' (ID: 14182)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7958595752716064
    2. 'def' → logprob: -0.9208595752716064
    3. '   ' → logprob: -2.6708595752716064
    4. '```' → logprob: -3.4208595752716064
    5. ' def' → logprob: -4.170859336853027
    6. ':' → logprob: -5.545859336853027
    7. '(self' → logprob: -5.545859336853027
    8. ' at' → logprob: -5.920859336853027
    9. '()' → logprob: -5.920859336853027
    10. ' =' → logprob: -6.045859336853027

Token 1840: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01966993324458599
    2. '(self' → logprob: -5.144670009613037
    3. 'def' → logprob: -5.394670009613037
    4. '   ' → logprob: -5.519670009613037
    5. ' at' → logprob: -6.269670009613037
    6. 'at' → logprob: -7.269670009613037
    7. '```' → logprob: -7.769670009613037
    8. '           ' → logprob: -8.269669532775879
    9. 'self' → logprob: -8.269669532775879
    10. ':' → logprob: -8.394669532775879

Token 1841: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22743216156959534
    2. '       ' → logprob: -1.602432131767273
    3. '   ' → logprob: -6.7274322509765625
    4. ' def' → logprob: -8.352432250976562
    5. 'self' → logprob: -8.352432250976562
    6. '
' → logprob: -8.727432250976562
    7. 'return' → logprob: -9.727432250976562
    8. '```' → logprob: -9.727432250976562
    9. '(self' → logprob: -10.602432250976562
    10. 'for' → logprob: -11.852432250976562

Token 1842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006846757605671883
    2. 'def' → logprob: -7.75068473815918
    3. '   ' → logprob: -9.37568473815918
    4. '
' → logprob: -9.50068473815918
    5. '#' → logprob: -10.25068473815918
    6. '```' → logprob: -10.25068473815918
    7. 'and' → logprob: -12.00068473815918
    8. ',' → logprob: -13.00068473815918
    9. 'for' → logprob: -13.12568473815918
    10. 'car' → logprob: -13.25068473815918

Token 1843: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0322471484541893
    2. 'depart' → logprob: -4.032247066497803
    3. 'def' → logprob: -5.032247066497803
    4. 'result' → logprob: -5.782247066497803
    5. 'cars' → logprob: -6.407247066497803
    6. 'departure' → logprob: -7.032247066497803
    7. '   ' → logprob: -7.657247066497803
    8. '
' → logprob: -8.032247543334961
    9. ' departing' → logprob: -8.157247543334961
    10. '```' → logprob: -8.907247543334961

Token 1844: ' -' (ID: 533)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.6142211556434631
    2. 'def' → logprob: -1.2392210960388184
    3. '       ' → logprob: -1.8642210960388184
    4. 'result' → logprob: -4.864221096038818
    5. 'cars' → logprob: -5.489221096038818
    6. '   ' → logprob: -6.739221096038818
    7. 'departure' → logprob: -7.614221096038818
    8. 'results' → logprob: -8.739221572875977
    9. ' departing' → logprob: -8.864221572875977
    10. 'de' → logprob: -9.489221572875977

Token 1845: ' top' (ID: 2344)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8546107411384583
    2. 'top' → logprob: -1.1046106815338135
    3. 'upper' → logprob: -2.3546106815338135
    4. '       ' → logprob: -2.4796106815338135
    5. 'for' → logprob: -3.3546106815338135
    6. 'def' → logprob: -4.604610919952393
    7. 'waiting' → logprob: -4.979610919952393
    8. 'higher' → logprob: -6.104610919952393
    9. 'all' → logprob: -6.729610919952393
    10. '
' → logprob: -6.854610919952393

Token 1846: ' cars' (ID: 13653)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.14554603397846222
    2. 'def' → logprob: -2.1455459594726562
    3. '   ' → logprob: -5.395545959472656
    4. 'cars' → logprob: -5.520545959472656
    5. '_car' → logprob: -5.770545959472656
    6. '       ' → logprob: -6.520545959472656
    7. '
' → logprob: -6.770545959472656
    8. '_depart' → logprob: -7.395545959472656
    9. '_positions' → logprob: -7.520545959472656
    10. '```' → logprob: -7.770545959472656

Token 1847: ' must' (ID: 2804)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6153420805931091
    2. '       ' → logprob: -1.490342140197754
    3. 'def' → logprob: -1.490342140197754
    4. '   ' → logprob: -5.490342140197754
    5. ' def' → logprob: -5.740342140197754
    6. 'self' → logprob: -7.865342140197754
    7. '(' → logprob: -8.365342140197754
    8. '```' → logprob: -8.490342140197754
    9. 'return' → logprob: -8.865342140197754
    10. '
' → logprob: -8.865342140197754

Token 1848: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.1615062952041626
    2. 'have' → logprob: -2.786506175994873
    3. 'be' → logprob: -2.911506175994873
    4. 'check' → logprob: -3.911506175994873
    5. ' wait' → logprob: -5.536506175994873
    6. 'not' → logprob: -6.286506175994873
    7. ' be' → logprob: -6.661506175994873
    8. ' have' → logprob: -6.786506175994873
    9. 'also' → logprob: -7.036506175994873
    10. 'depart' → logprob: -7.161506175994873

Token 1849: ' their' (ID: 1043)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.532774806022644
    2. '       ' → logprob: -0.907774806022644
    3. 'for' → logprob: -5.657774925231934
    4. 'self' → logprob: -6.657774925231934
    5. '   ' → logprob: -6.907774925231934
    6. '```' → logprob: -6.907774925231934
    7. '
' → logprob: -7.032774925231934
    8. '(self' → logprob: -7.032774925231934
    9. 'return' → logprob: -8.032774925231934
    10. 'cars' → logprob: -8.157774925231934

Token 1850: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.3180866837501526
    2. 'bottom' → logprob: -1.3180866241455078
    3. 'turn' → logprob: -5.568086624145508
    4. 'waiting' → logprob: -8.443086624145508
    5. '```' → logprob: -9.068086624145508
    6. '底' → logprob: -9.193086624145508
    7. 'below' → logprob: -9.318086624145508
    8. 'cor' → logprob: -9.568086624145508
    9. 'own' → logprob: -9.568086624145508
    10. '下' → logprob: -9.818086624145508

Token 1851: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0043284893035889
    2. '       ' → logprob: -1.1293284893035889
    3. '   ' → logprob: -1.2543284893035889
    4. ' def' → logprob: -4.629328727722168
    5. '```' → logprob: -5.754328727722168
    6. '
' → logprob: -6.004328727722168
    7. 'cars' → logprob: -6.254328727722168
    8. ' cars' → logprob: -6.629328727722168
    9. 'if' → logprob: -7.504328727722168
    10. '(self' → logprob: -7.629328727722168

Token 1852: ' depart' (ID: 14182)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.0049333274364471436
    2. 'leave' → logprob: -5.6299333572387695
    3. 'be' → logprob: -7.6299333572387695
    4. '<|end|>' → logprob: -8.25493335723877
    5. 'departure' → logprob: -8.62993335723877
    6. '_depart' → logprob: -9.25493335723877
    7. 'have' → logprob: -9.62993335723877
    8. 'complete' → logprob: -9.75493335723877
    9. 'finish' → logprob: -10.00493335723877
    10. 'go' → logprob: -10.25493335723877

Token 1853: ' first' (ID: 1577)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08366874605417252
    2. '   ' → logprob: -2.9586687088012695
    3. '       ' → logprob: -3.5836687088012695
    4. '```' → logprob: -8.33366870880127
    5. ' def' → logprob: -8.83366870880127
    6. '
' → logprob: -9.08366870880127
    7. 'self' → logprob: -10.08366870880127
    8. '(self' → logprob: -10.33366870880127
    9. '(' → logprob: -12.20866870880127
    10. 'for' → logprob: -12.33366870880127

Token 1854: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5372185707092285
    2. '       ' → logprob: -0.9122185707092285
    3. '   ' → logprob: -4.7872185707092285
    4. '```' → logprob: -5.4122185707092285
    5. ' def' → logprob: -7.5372185707092285
    6. '
' → logprob: -8.28721809387207
    7. 'self' → logprob: -8.66221809387207
    8. '(self' → logprob: -9.66221809387207
    9. '``' → logprob: -10.16221809387207
    10. '(' → logprob: -10.16221809387207

Token 1855: ' in' (ID: 306)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.1920490264892578
    2. 'top' → logprob: -1.3170490264892578
    3. 'car' → logprob: -1.5670490264892578
    4. ' not' → logprob: -2.192049026489258
    5. 'they' → logprob: -3.317049026489258
    6. 'space' → logprob: -3.567049026489258
    7. 'their' → logprob: -4.817049026489258
    8. 'the' → logprob: -4.817049026489258
    9. 'self' → logprob: -5.192049026489258
    10. ' top' → logprob: -5.442049026489258

Token 1856: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5482230186462402
    2. 'space' → logprob: -1.7982230186462402
    3. 'same' → logprob: -1.9232230186462402
    4. 'place' → logprob: -2.5482230186462402
    5. 'bottom' → logprob: -4.79822301864624
    6. 'parking' → logprob: -4.79822301864624
    7. 'position' → logprob: -4.92322301864624
    8. '0' → logprob: -6.67322301864624
    9. 'front' → logprob: -6.92322301864624
    10. '```' → logprob: -7.29822301864624

Token 1857: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.006363385356962681
    2. ' space' → logprob: -5.131363391876221
    3. 'time' → logprob: -8.881362915039062
    4. 'level' → logprob: -9.131362915039062
    5. 'position' → logprob: -10.381362915039062
    6. 'spot' → logprob: -10.631362915039062
    7. '_space' → logprob: -10.756362915039062
    8. 'car' → logprob: -11.131362915039062
    9. '```' → logprob: -11.256362915039062
    10. '
' → logprob: -11.381362915039062

Token 1858: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1171635240316391
    2. 'def' → logprob: -2.3671634197235107
    3. '   ' → logprob: -4.11716365814209
    4. '```' → logprob: -7.86716365814209
    5. '
' → logprob: -9.49216365814209
    6. ' def' → logprob: -10.74216365814209
    7. '        
' → logprob: -11.49216365814209
    8. '``' → logprob: -11.99216365814209
    9. '           ' → logprob: -12.61716365814209
    10. '     ' → logprob: -12.61716365814209

Token 1859: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05111987143754959
    2. 'def' → logprob: -3.801119804382324
    3. 'depart' → logprob: -3.926119804382324
    4. 'cars' → logprob: -5.551119804382324
    5. '```' → logprob: -5.926119804382324
    6. 'result' → logprob: -7.676119804382324
    7. ' departing' → logprob: -8.676119804382324
    8. '   ' → logprob: -8.801119804382324
    9. 'departure' → logprob: -9.176119804382324
    10. '``' → logprob: -9.176119804382324

Token 1860: ' #' (ID: 1069)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.04836682230234146
    2. '       ' → logprob: -3.6733667850494385
    3. 'result' → logprob: -4.173367023468018
    4. 'cars' → logprob: -5.798367023468018
    5. 'def' → logprob: -7.048367023468018
    6. 'le' → logprob: -7.298367023468018
    7. 'departure' → logprob: -7.423367023468018
    8. 'res' → logprob: -7.923367023468018
    9. 'results' → logprob: -8.92336654663086
    10. '```' → logprob: -8.92336654663086

Token 1861: ' Return' (ID: 6318)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.38900598883628845
    2. 'def' → logprob: -1.6390060186386108
    3. '       ' → logprob: -2.3890058994293213
    4. 'result' → logprob: -3.8890058994293213
    5. 'cars' → logprob: -4.3890061378479
    6. 'departure' → logprob: -7.1390061378479
    7. '```' → logprob: -7.6390061378479
    8. 'le' → logprob: -7.6390061378479
    9. 'res' → logprob: -7.8890061378479
    10. 'results' → logprob: -8.014005661010742

Token 1862: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.675164520740509
    2. '[(' → logprob: -2.0501644611358643
    3. '[c' → logprob: -2.3001644611358643
    4. 'cars' → logprob: -2.3001644611358643
    5. '[List' → logprob: -2.5501644611358643
    6. ' [' → logprob: -4.550164699554443
    7. '[
' → logprob: -4.550164699554443
    8. '[pos' → logprob: -4.675164699554443
    9. '[]' → logprob: -4.800164699554443
    10. 'a' → logprob: -5.550164699554443

Token 1863: ' of' (ID: 328)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.6304547786712646
    2. 'car' → logprob: -2.2554547786712646
    3. '[]' → logprob: -2.3804547786712646
    4. 'of' → logprob: -2.6304547786712646
    5. ' =' → logprob: -3.1304547786712646
    6. '_of' → logprob: -3.6304547786712646
    7. 'result' → logprob: -3.6304547786712646
    8. 'depart' → logprob: -3.6304547786712646
    9. '[' → logprob: -3.7554547786712646
    10. ' of' → logprob: -4.380455017089844

Token 1864: ' cars' (ID: 13653)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.14279711246490479
    2. 'cars' → logprob: -2.6427969932556152
    3. 'List' → logprob: -3.3927969932556152
    4. 'depart' → logprob: -4.517796993255615
    5. 'car' → logprob: -4.767796993255615
    6. '[' → logprob: -5.142796993255615
    7. '[(' → logprob: -6.892796993255615
    8. 'Cars' → logprob: -8.017797470092773
    9. 'Tuple' → logprob: -8.267797470092773
    10. ' cars' → logprob: -8.517797470092773

Token 1865: ' that' (ID: 484)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13592420518398285
    2. '       ' → logprob: -2.8859241008758545
    3. '[]
' → logprob: -3.5109241008758545
    4. 'def' → logprob: -4.760924339294434
    5. ' =' → logprob: -4.885924339294434
    6. '[' → logprob: -5.385924339294434
    7. '```' → logprob: -5.385924339294434
    8. ':' → logprob: -5.510924339294434
    9. '=[]' → logprob: -5.760924339294434
    10. '=' → logprob: -5.885924339294434

Token 1866: ' can' (ID: 665)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -1.3489322662353516
    2. 'can' → logprob: -1.9739322662353516
    3. '[]' → logprob: -2.4739322662353516
    4. ' can' → logprob: -2.4739322662353516
    5. '[]
' → logprob: -2.5989322662353516
    6. ' are' → logprob: -2.5989322662353516
    7. 'are' → logprob: -2.8489322662353516
    8. 'must' → logprob: -3.2239322662353516
    9. '_depart' → logprob: -3.2239322662353516
    10. ' must' → logprob: -3.2239322662353516

Token 1867: ' depart' (ID: 14182)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.21277044713497162
    2. '_depart' → logprob: -1.7127704620361328
    3. ' depart' → logprob: -4.587770462036133
    4. 'leave' → logprob: -8.337770462036133
    5. 'be' → logprob: -8.462770462036133
    6. ' be' → logprob: -8.837770462036133
    7. '```' → logprob: -8.837770462036133
    8. '_leave' → logprob: -9.087770462036133
    9. '[]' → logprob: -9.587770462036133
    10. 'departure' → logprob: -9.962770462036133

Token 1868: ' now' (ID: 1954)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.405376672744751
    2. 'def' → logprob: -1.155376672744751
    3. '[]' → logprob: -5.530376434326172
    4. '```' → logprob: -5.530376434326172
    5. 'self' → logprob: -5.780376434326172
    6. '(self' → logprob: -6.530376434326172
    7. '[]
' → logprob: -6.655376434326172
    8. 'result' → logprob: -7.030376434326172
    9. '[' → logprob: -7.030376434326172
    10. '   ' → logprob: -7.155376434326172

Token 1869: ' ordered' (ID: 17889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08173850923776627
    2. 'depart' → logprob: -3.0817384719848633
    3. '```' → logprob: -3.9567384719848633
    4. 'result' → logprob: -4.956738471984863
    5. 'cars' → logprob: -5.956738471984863
    6. 'def' → logprob: -6.456738471984863
    7. '``' → logprob: -7.331738471984863
    8. 'available' → logprob: -8.081738471984863
    9. 'results' → logprob: -8.206738471984863
    10. ' departing' → logprob: -8.456738471984863

Token 1870: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.8348879814147949
    2. ' by' → logprob: -1.459887981414795
    3. '       ' → logprob: -1.709887981414795
    4. '=' → logprob: -2.834887981414795
    5. 'of' → logprob: -4.209887981414795
    6. '```' → logprob: -4.334887981414795
    7. 'def' → logprob: -4.459887981414795
    8. 'sorted' → logprob: -4.584887981414795
    9. '(self' → logprob: -4.584887981414795
    10. ' =' → logprob: -4.834887981414795

Token 1871: ' space' (ID: 4918)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.17340749502182007
    2. 'lambda' → logprob: -2.173407554626465
    3. '(lambda' → logprob: -3.673407554626465
    4. '(level' → logprob: -4.923407554626465
    5. 'bottom' → logprob: -6.048407554626465
    6. '0' → logprob: -6.298407554626465
    7. 'car' → logprob: -6.548407554626465
    8. 'space' → logprob: -6.673407554626465
    9. '[level' → logprob: -6.673407554626465
    10. 'departure' → logprob: -6.923407554626465

Token 1872: ' index' (ID: 3472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4310891032218933
    2. '       ' → logprob: -1.181089162826538
    3. '```' → logprob: -3.681089162826538
    4. '   ' → logprob: -4.431088924407959
    5. '(self' → logprob: -5.806088924407959
    6. 'self' → logprob: -6.306088924407959
    7. ' def' → logprob: -7.556088924407959
    8. '``' → logprob: -8.181089401245117
    9. '
' → logprob: -8.431089401245117
    10. '(' → logprob: -8.931089401245117

Token 1873: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.678188681602478
    2. 'def' → logprob: -1.303188681602478
    3. '```' → logprob: -1.678188681602478
    4. '(self' → logprob: -4.303188800811768
    5. '   ' → logprob: -4.303188800811768
    6. '``' → logprob: -6.303188800811768
    7. 'self' → logprob: -6.428188800811768
    8. '[' → logprob: -7.053188800811768
    9. '        
' → logprob: -7.553188800811768
    10. '[
' → logprob: -7.928188800811768

Token 1874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07042718678712845
    2. '```' → logprob: -2.695427179336548
    3. '``' → logprob: -8.070426940917969
    4. '
' → logprob: -9.820426940917969
    5. 'def' → logprob: -10.570426940917969
    6. 'cars' → logprob: -10.945426940917969
    7. '        
' → logprob: -11.070426940917969
    8. 'tokens' → logprob: -11.945426940917969
    9. 'self' → logprob: -12.070426940917969
    10. '`' → logprob: -12.195426940917969

Token 1875: ' departing' (ID: 126080)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.010201065801084042
    2. '       ' → logprob: -4.7602009773254395
    3. 'result' → logprob: -7.0102009773254395
    4. 'cars' → logprob: -7.7602009773254395
    5. 'le' → logprob: -9.385201454162598
    6. ' departing' → logprob: -10.135201454162598
    7. '```' → logprob: -10.260201454162598
    8. 'departure' → logprob: -10.385201454162598
    9. 'de' → logprob: -10.760201454162598
    10. 'ready' → logprob: -11.760201454162598

Token 1876: '_bottom' (ID: 59652)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5790240168571472
    2. ' =' → logprob: -1.079024076461792
    3. '_c' → logprob: -2.329024076461792
    4. 's' → logprob: -6.829023838043213
    5. '=[]' → logprob: -7.204023838043213
    6. '[]' → logprob: -9.454024314880371
    7. '=[]
' → logprob: -9.579024314880371
    8. '_' → logprob: -9.829024314880371
    9. '_list' → logprob: -10.454024314880371
    10. '_car' → logprob: -10.454024314880371

Token 1877: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2457071840763092
    2. '=' → logprob: -1.6207071542739868
    3. '_c' → logprob: -4.370707035064697
    4. 's' → logprob: -5.245707035064697
    5. '=[]' → logprob: -6.620707035064697
    6. '=[]
' → logprob: -8.245707511901855
    7. '   ' → logprob: -8.995707511901855
    8. ',' → logprob: -9.245707511901855
    9. '()' → logprob: -9.495707511901855
    10. 'cars' → logprob: -9.995707511901855

Token 1878: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.15921138226985931
    2. '[' → logprob: -2.6592113971710205
    3. '[
' → logprob: -3.4092113971710205
    4. '[s' → logprob: -3.6592113971710205
    5. '[i' → logprob: -4.534211158752441
    6. '[x' → logprob: -6.284211158752441
    7. '[]' → logprob: -6.534211158752441
    8. '[self' → logprob: -6.784211158752441
    9. 'sorted' → logprob: -7.409211158752441
    10. '[k' → logprob: -8.034211158752441

Token 1879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011514607816934586
    2. 'for' → logprob: -4.511514663696289
    3. ' for' → logprob: -8.886514663696289
    4. 'depart' → logprob: -8.886514663696289
    5. '```' → logprob: -9.011514663696289
    6. '   ' → logprob: -11.386514663696289
    7. ' departing' → logprob: -11.511514663696289
    8. 'and' → logprob: -11.636514663696289
    9. ',' → logprob: -12.261514663696289
    10. '        
' → logprob: -12.386514663696289

Token 1880: ' departing' (ID: 126080)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5763869881629944
    2. 'depart' → logprob: -0.8263869881629944
    3. '       ' → logprob: -7.95138692855835
    4. '#' → logprob: -10.951387405395508
    5. ' departing' → logprob: -10.951387405395508
    6. 'departure' → logprob: -11.201387405395508
    7. ' for' → logprob: -11.701387405395508
    8. '   ' → logprob: -11.826387405395508
    9. '           ' → logprob: -12.576387405395508
    10. 'dep' → logprob: -12.576387405395508

Token 1881: '_top' (ID: 23394)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023965835571289062
    2. ' =' → logprob: -4.773965835571289
    3. '=[]' → logprob: -4.898965835571289
    4. '_bottom' → logprob: -5.773965835571289
    5. 'bottom' → logprob: -6.773965835571289
    6. '=[]
' → logprob: -6.773965835571289
    7. '_spaces' → logprob: -7.023965835571289
    8. '_top' → logprob: -7.773965835571289
    9. '_c' → logprob: -8.773965835571289
    10. 'cars' → logprob: -9.023965835571289

Token 1882: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10052075982093811
    2. ' =' → logprob: -2.3505208492279053
    3. '=[]' → logprob: -8.725521087646484
    4. '=[]
' → logprob: -8.850521087646484
    5. '   ' → logprob: -12.725521087646484
    6. '       ' → logprob: -13.475521087646484
    7. ':' → logprob: -13.725521087646484
    8. '=[' → logprob: -13.850521087646484
    9. '=
' → logprob: -14.350521087646484
    10. '[]' → logprob: -14.850521087646484

Token 1883: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4747432768344879
    2. '[]
' → logprob: -0.9747432470321655
    3. '[]

' → logprob: -7.474743366241455
    4. '[' → logprob: -10.099742889404297
    5. '[
' → logprob: -10.849742889404297
    6. '[(' → logprob: -11.599742889404297
    7. ' []' → logprob: -11.599742889404297
    8. ' []
' → logprob: -12.349742889404297
    9. '[]}' → logprob: -12.724742889404297
    10. '[self' → logprob: -12.849742889404297

Token 1884: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034155857283622026
    2. 'for' → logprob: -5.753415584564209
    3. ' for' → logprob: -8.878416061401367
    4. '```' → logprob: -9.253416061401367
    5. '``' → logprob: -14.003416061401367
    6. '   ' → logprob: -14.128416061401367
    7. '        
' → logprob: -14.753416061401367
    8. '`' → logprob: -15.753416061401367
    9. '           ' → logprob: -16.003416061401367
    10. '
' → logprob: -16.128416061401367

Token 1885: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.2127087504486553e-05
    2. '       ' → logprob: -10.750021934509277
    3. ' for' → logprob: -14.250021934509277
    4. '	for' → logprob: -17.875022888183594
    5. '   ' → logprob: -18.375022888183594
    6. '
' → logprob: -18.750022888183594
    7. '```' → logprob: -19.000022888183594
    8. '#' → logprob: -20.000022888183594
    9. '``' → logprob: -21.250022888183594
    10. '        
' → logprob: -21.250022888183594

Token 1886: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -8.661626634420827e-05
    2. ' space' → logprob: -9.375086784362793
    3. 'i' → logprob: -14.375086784362793
    4. 'idx' → logprob: -15.125086784362793
    5. '   ' → logprob: -15.625086784362793
    6. 'self' → logprob: -15.750086784362793
    7. 's' → logprob: -15.750086784362793
    8. '(space' → logprob: -15.875086784362793
    9. 'sp' → logprob: -16.375085830688477
    10. '       ' → logprob: -17.000085830688477

Token 1887: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03368327394127846
    2. 'in' → logprob: -3.4086833000183105
    3. 'space' → logprob: -10.658682823181152
    4. '   ' → logprob: -12.408682823181152
    5. 'self' → logprob: -13.283682823181152
    6. ' ' → logprob: -13.408682823181152
    7. 'i' → logprob: -13.783682823181152
    8. 's' → logprob: -14.283682823181152
    9. '```' → logprob: -14.408682823181152
    10. '[' → logprob: -14.783682823181152

Token 1888: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014120421838015318
    2. ' self' → logprob: -8.875141143798828
    3. '[self' → logprob: -14.625141143798828
    4. '   ' → logprob: -15.375141143798828
    5. '(self' → logprob: -15.500141143798828
    6. '       ' → logprob: -15.750141143798828
    7. '[' → logprob: -15.750141143798828
    8. '
' → logprob: -16.625141143798828
    9. '           ' → logprob: -17.250141143798828
    10. '	self' → logprob: -17.750141143798828

Token 1889: '.sp' (ID: 16144)
  Prédit: '.sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.0014246409991756082
    2. 'self' → logprob: -6.626424789428711
    3. 'spaces' → logprob: -9.876424789428711
    4. '.self' → logprob: -10.876424789428711
    5. '   ' → logprob: -11.626424789428711
    6. 'sp' → logprob: -11.751424789428711
    7. '       ' → logprob: -12.751424789428711
    8. '.s' → logprob: -13.251424789428711
    9. ' .' → logprob: -13.376424789428711
    10. '	sp' → logprob: -13.626424789428711

Token 1890: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -4.5252596464706585e-05
    2. 'spaces' → logprob: -10.250044822692871
    3. 'paces' → logprob: -12.125044822692871
    4. 'self' → logprob: -13.625044822692871
    5. '```' → logprob: -13.625044822692871
    6. 'laces' → logprob: -14.625044822692871
    7. 'elf' → logprob: -15.125044822692871
    8. 'ace' → logprob: -15.125044822692871
    9. '   ' → logprob: -15.375044822692871
    10. 'ac' → logprob: -16.125045776367188

Token 1891: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5457918047904968
    2. ':
' → logprob: -1.2957918643951416
    3. '       ' → logprob: -2.5457918643951416
    4. '           ' → logprob: -3.2957918643951416
    5. ' in' → logprob: -3.5457918643951416
    6. 'in' → logprob: -6.4207916259765625
    7. ' if' → logprob: -8.170791625976562
    8. '[' → logprob: -8.420791625976562
    9. ',' → logprob: -9.170791625976562
    10. 'if' → logprob: -10.170791625976562

Token 1892: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017016702622640878
    2. '```' → logprob: -9.12516975402832
    3. '       ' → logprob: -10.12516975402832
    4. '   ' → logprob: -11.50016975402832
    5. 'if' → logprob: -12.37516975402832
    6. 'for' → logprob: -12.62516975402832
    7. ' if' → logprob: -13.87516975402832
    8. '`' → logprob: -14.12516975402832
    9. '               ' → logprob: -14.37516975402832
    10. '``' → logprob: -15.00016975402832

Token 1893: ' b' (ID: 287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3135271370410919
    2. '           ' → logprob: -1.5635271072387695
    3. 'for' → logprob: -3.4385271072387695
    4. '       ' → logprob: -4.3135271072387695
    5. 'bottom' → logprob: -5.3135271072387695
    6. ' if' → logprob: -5.4385271072387695
    7. '   ' → logprob: -6.0635271072387695
    8. 'cars' → logprob: -6.6885271072387695
    9. 'car' → logprob: -7.4385271072387695
    10. '```' → logprob: -7.9385271072387695

Token 1894: ' =' (ID: 314)
  Prédit: 'ottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ottom' → logprob: -0.06791889667510986
    2. '=' → logprob: -3.5679187774658203
    3. 'if' → logprob: -4.19291877746582
    4. ' =' → logprob: -5.19291877746582
    5. 'ot' → logprob: -5.19291877746582
    6. 'car' → logprob: -5.31791877746582
    7. 'bottom' → logprob: -5.56791877746582
    8. ' if' → logprob: -7.31791877746582
    9. '```' → logprob: -8.31791877746582
    10. '_car' → logprob: -8.44291877746582

Token 1895: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.00012356207298580557
    2. ' space' → logprob: -9.000123977661133
    3. '(space' → logprob: -17.250123977661133
    4. '           ' → logprob: -19.125123977661133
    5. '`' → logprob: -21.500123977661133
    6. '   ' → logprob: -21.750123977661133
    7. '```' → logprob: -22.000123977661133
    8. 'spaces' → logprob: -22.125123977661133
    9. '.space' → logprob: -22.250123977661133
    10. 'b' → logprob: -22.500123977661133

Token 1896: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.00599823659285903
    2. 'ottom' → logprob: -5.130998134613037
    3. 'bottom' → logprob: -10.005998611450195
    4. '           ' → logprob: -12.005998611450195
    5. '       ' → logprob: -12.380998611450195
    6. '   ' → logprob: -12.630998611450195
    7. 'if' → logprob: -13.255998611450195
    8. '=' → logprob: -13.630998611450195
    9. 'OTTOM' → logprob: -13.755998611450195
    10. '```' → logprob: -13.755998611450195

Token 1897: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14756666123867035
    2. '           ' → logprob: -2.647566556930542
    3. 'and' → logprob: -3.022566556930542
    4. ' if' → logprob: -4.522566795349121
    5. ' and' → logprob: -5.522566795349121
    6. '=' → logprob: -6.897566795349121
    7. '
' → logprob: -7.897566795349121
    8. ' =' → logprob: -8.022566795349121
    9. '            
' → logprob: -8.272566795349121
    10. ',' → logprob: -8.397566795349121

Token 1898: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001963485963642597
    2. 'if' → logprob: -6.3769636154174805
    3. '       ' → logprob: -8.50196361541748
    4. ' if' → logprob: -9.87696361541748
    5. 'and' → logprob: -13.12696361541748
    6. '```' → logprob: -13.50196361541748
    7. '   ' → logprob: -13.62696361541748
    8. ',' → logprob: -14.50196361541748
    9. '
' → logprob: -15.12696361541748
    10. ':' → logprob: -15.25196361541748

Token 1899: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02382347732782364
    2. '           ' → logprob: -4.023823261260986
    3. 't' (adapté à ' t') → logprob: -5.273823261260986
    4. 'd' → logprob: -7.648823261260986
    5. ' if' → logprob: -10.648823738098145
    6. '       ' → logprob: -10.773823738098145
    7. '   ' → logprob: -11.898823738098145
    8. '```' → logprob: -13.273823738098145
    9. '               ' → logprob: -13.648823738098145
    10. '`t' → logprob: -14.523823738098145

Token 1900: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520478665828705
    2. ' =' → logprob: -1.5020478963851929
    3. 'if' → logprob: -9.877047538757324
    4. '=None' → logprob: -10.127047538757324
    5. '           ' → logprob: -11.252047538757324
    6. ' ' → logprob: -13.377047538757324
    7. '   ' → logprob: -13.627047538757324
    8. '       ' → logprob: -13.627047538757324
    9. ' if' → logprob: -13.627047538757324
    10. '```' → logprob: -13.627047538757324

Token 1901: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.00033558503491804004
    2. ' space' → logprob: -8.000335693359375
    3. '(space' → logprob: -17.250335693359375
    4. 't' → logprob: -18.500335693359375
    5. '   ' → logprob: -18.500335693359375
    6. ' ' → logprob: -19.000335693359375
    7. '       ' → logprob: -19.000335693359375
    8. '           ' → logprob: -19.500335693359375
    9. '         ' → logprob: -19.625335693359375
    10. '        ' → logprob: -19.750335693359375

Token 1902: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.0005276533775031567
    2. '.bottom' → logprob: -7.875527858734131
    3. 'top' → logprob: -8.875527381896973
    4. '[top' → logprob: -13.250527381896973
    5. '           ' → logprob: -13.625527381896973
    6. '   ' → logprob: -14.000527381896973
    7. '	top' → logprob: -14.250527381896973
    8. 'bottom' → logprob: -14.750527381896973
    9. '       ' → logprob: -14.875527381896973
    10. '(top' → logprob: -14.875527381896973

Token 1903: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.758300438988954e-05
    2. '
' → logprob: -10.375097274780273
    3. ' =' → logprob: -10.875097274780273
    4. '=' → logprob: -11.000097274780273
    5. ',' → logprob: -11.500097274780273
    6. 'if' → logprob: -12.125097274780273
    7. ' if' → logprob: -12.625097274780273
    8. ':' → logprob: -12.625097274780273
    9. '            
' → logprob: -12.625097274780273
    10. '       ' → logprob: -14.000097274780273

Token 1904: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.978233846486546e-05
    2. '       ' → logprob: -10.250049591064453
    3. 'if' → logprob: -11.750049591064453
    4. '   ' → logprob: -12.625049591064453
    5. '```' → logprob: -13.125049591064453
    6. ' if' → logprob: -14.250049591064453
    7. '               ' → logprob: -15.875049591064453
    8. '	       ' → logprob: -17.000049591064453
    9. 'for' → logprob: -17.125049591064453
    10. ',' → logprob: -17.125049591064453

Token 1905: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10179896652698517
    2. '           ' → logprob: -2.3517990112304688
    3. '```' → logprob: -7.351799011230469
    4. '       ' → logprob: -7.601799011230469
    5. ' if' → logprob: -7.726799011230469
    6. '   ' → logprob: -12.601799011230469
    7. 'for' → logprob: -12.726799011230469
    8. '``' → logprob: -13.351799011230469
    9. '#' → logprob: -15.101799011230469
    10. '
' → logprob: -15.476799011230469

Token 1906: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000443420372903347
    2. ' b' → logprob: -7.875443458557129
    3. '           ' → logprob: -9.750443458557129
    4. '(b' → logprob: -12.750443458557129
    5. '   ' → logprob: -13.625443458557129
    6. '       ' → logprob: -14.250443458557129
    7. '	b' → logprob: -16.250442504882812
    8. ' (' → logprob: -16.750442504882812
    9. ' ' → logprob: -17.125442504882812
    10. '         ' → logprob: -17.375442504882812

Token 1907: ' and' (ID: 326)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.28675058484077454
    2. ' is' → logprob: -1.5367505550384521
    3. 'and' → logprob: -3.536750555038452
    4. ' and' → logprob: -5.286750793457031
    5. '   ' → logprob: -10.536750793457031
    6. '           ' → logprob: -11.036750793457031
    7. '       ' → logprob: -12.161750793457031
    8. ' ' → logprob: -13.036750793457031
    9. 'if' → logprob: -13.661750793457031
    10. '               ' → logprob: -14.286750793457031

Token 1908: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010020548506872728
    2. ' b' → logprob: -9.875100135803223
    3. 'self' → logprob: -10.125100135803223
    4. '   ' → logprob: -12.250100135803223
    5. '           ' → logprob: -13.250100135803223
    6. '       ' → logprob: -13.625100135803223
    7. ' self' → logprob: -15.875100135803223
    8. '               ' → logprob: -16.25010108947754
    9. '     ' → logprob: -16.37510108947754
    10. '  ' → logprob: -16.37510108947754

Token 1909: '.depart' (ID: 192809)
  Prédit: '.depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depart' → logprob: -0.00012928384239785373
    2. 'departure' → logprob: -9.625129699707031
    3. ' and' → logprob: -10.250129699707031
    4. '.arr' → logprob: -11.500129699707031
    5. 'and' → logprob: -11.625129699707031
    6. '.car' → logprob: -13.000129699707031
    7. ' is' → logprob: -13.250129699707031
    8. ' .' → logprob: -14.125129699707031
    9. '.' → logprob: -14.250129699707031
    10. 'Departure' → logprob: -14.375129699707031

Token 1910: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -2.546478935983032e-05
    2. 'ature' → logprob: -11.500025749206543
    3. '_time' → logprob: -11.625025749206543
    4. 'art' → logprob: -13.375025749206543
    5. 't' → logprob: -13.625025749206543
    6. '   ' → logprob: -14.625025749206543
    7. 'departure' → logprob: -14.625025749206543
    8. 'time' → logprob: -14.750025749206543
    9. 'sure' → logprob: -15.125025749206543
    10. 'are' → logprob: -15.250025749206543

Token 1911: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.8828707804204896e-05
    2. '==' → logprob: -10.500048637390137
    3. 'time' → logprob: -11.000048637390137
    4. '   ' → logprob: -13.375048637390137
    5. ' ==' → logprob: -13.500048637390137
    6. '```' → logprob: -14.875048637390137
    7. 'Time' → logprob: -15.375048637390137
    8. ' time' → logprob: -15.875048637390137
    9. '<=' → logprob: -16.000049591064453
    10. '_TIME' → logprob: -16.125049591064453

Token 1912: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03870745003223419
    2. ' ==' → logprob: -3.9137074947357178
    3. '<=' → logprob: -4.038707256317139
    4. ' <=' → logprob: -8.038707733154297
    5. '==
' → logprob: -9.788707733154297
    6. '>=' → logprob: -14.913707733154297
    7. '()==' → logprob: -15.038707733154297
    8. '===' → logprob: -15.038707733154297
    9. '```' → logprob: -15.163707733154297
    10. '=' → logprob: -15.288707733154297

Token 1913: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026169343618676066
    2. ' self' → logprob: -8.250261306762695
    3. '
' → logprob: -16.000261306762695
    4. '           ' → logprob: -16.250261306762695
    5. '(self' → logprob: -16.625261306762695
    6. '       ' → logprob: -17.625261306762695
    7. '	self' → logprob: -17.750261306762695
    8. '=self' → logprob: -17.875261306762695
    9. '[self' → logprob: -19.000261306762695
    10. '   ' → logprob: -19.625261306762695

Token 1914: '.current' (ID: 8357)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.008819960057735443
    2. '.current' → logprob: -4.758820056915283
    3. ' current' → logprob: -8.508819580078125
    4. '_current' → logprob: -13.383819580078125
    5. '	current' → logprob: -14.508819580078125
    6. '   ' → logprob: -15.258819580078125
    7. 'urrent' → logprob: -15.258819580078125
    8. '
' → logprob: -15.383819580078125
    9. '.' → logprob: -15.383819580078125
    10. '[current' → logprob: -15.758819580078125

Token 1915: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.008291979320347309
    2. 'self' → logprob: -5.008292198181152
    3. 'time' → logprob: -6.633292198181152
    4. ' self' → logprob: -9.383292198181152
    5. '   ' → logprob: -9.508292198181152
    6. '       ' → logprob: -10.633292198181152
    7. ' time' → logprob: -10.758292198181152
    8. '           ' → logprob: -10.883292198181152
    9. 'and' → logprob: -12.258292198181152
    10. '.time' → logprob: -12.383292198181152

Token 1916: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5123212933540344
    2. 'and' → logprob: -1.0123212337493896
    3. ':
' → logprob: -3.6373212337493896
    4. '           ' → logprob: -4.762321472167969
    5. '               ' → logprob: -6.387321472167969
    6. ':' → logprob: -7.137321472167969
    7. '       ' → logprob: -9.137321472167969
    8. '          ' → logprob: -10.512321472167969
    9. '              ' → logprob: -11.512321472167969
    10. '            ' → logprob: -12.262321472167969

Token 1917: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.898723561083898e-05
    2. '           ' → logprob: -10.875079154968262
    3. ' and' → logprob: -11.000079154968262
    4. '```' → logprob: -11.000079154968262
    5. ' if' → logprob: -11.125079154968262
    6. 'and' → logprob: -12.625079154968262
    7. 'if' → logprob: -12.750079154968262
    8. ',' → logprob: -13.500079154968262
    9. ' ' → logprob: -13.750079154968262
    10. '                   ' → logprob: -14.375079154968262

Token 1918: ' departing' (ID: 126080)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04911139979958534
    2. 'depart' → logprob: -3.0491113662719727
    3. ' departing' → logprob: -8.049111366271973
    4. '           ' → logprob: -9.049111366271973
    5. '   ' → logprob: -10.299111366271973
    6. '                   ' → logprob: -10.424111366271973
    7. 'departure' → logprob: -11.549111366271973
    8. 'de' → logprob: -12.424111366271973
    9. 'dep' → logprob: -13.174111366271973
    10. '       ' → logprob: -13.299111366271973

Token 1919: '_bottom' (ID: 59652)
  Prédit: '_bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.0006684751133434474
    2. 'bottom' → logprob: -7.500668525695801
    3. '           ' → logprob: -10.0006685256958
    4. '.append' → logprob: -10.3756685256958
    5. '       ' → logprob: -11.7506685256958
    6. '_space' → logprob: -12.6256685256958
    7. '   ' → logprob: -13.0006685256958
    8. '_top' → logprob: -13.0006685256958
    9. '_BOTTOM' → logprob: -13.0006685256958
    10. '         ' → logprob: -13.0006685256958

Token 1920: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.625000953674316
    3. 'append' → logprob: -15.875000953674316
    4. '.app' → logprob: -18.125
    5. ' .' → logprob: -18.375
    6. '.Append' → logprob: -20.25
    7. '.ap' → logprob: -20.75
    8. '.add' → logprob: -21.0
    9. '           ' → logprob: -21.5
    10. 'Append' → logprob: -21.5

Token 1921: '((' (ID: 2054)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11361727118492126
    2. '(b' → logprob: -2.238617181777954
    3. ' (' → logprob: -7.988617420196533
    4. '(' → logprob: -8.613616943359375
    5. ' b' → logprob: -8.988616943359375
    6. '(space' → logprob: -9.238616943359375
    7. 'space' → logprob: -10.238616943359375
    8. '   ' → logprob: -11.988616943359375
    9. '((' → logprob: -12.113616943359375
    10. ' ' → logprob: -14.363616943359375

Token 1922: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.00024335073248948902
    2. 'b' → logprob: -8.625243186950684
    3. ' space' → logprob: -9.875243186950684
    4. '(space' → logprob: -11.500243186950684
    5. ' b' → logprob: -13.875243186950684
    6. '   ' → logprob: -14.750243186950684
    7. 'self' → logprob: -15.125243186950684
    8. '(' → logprob: -15.625243186950684
    9. 'spaces' → logprob: -15.625243186950684
    10. ' ' → logprob: -16.500244140625

Token 1923: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00015920029545668513
    2. 'index' → logprob: -9.00015926361084
    3. '.' → logprob: -11.25015926361084
    4. ',index' → logprob: -12.12515926361084
    5. '
' → logprob: -12.37515926361084
    6. '#index' → logprob: -12.62515926361084
    7. ' .' → logprob: -12.87515926361084
    8. '.id' → logprob: -13.87515926361084
    9. '@index' → logprob: -14.00015926361084
    10. '.
' → logprob: -14.25015926361084

Token 1924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005289257969707251
    2. ',b' → logprob: -5.255289077758789
    3. ' ,' → logprob: -9.880289077758789
    4. ',
' → logprob: -13.380289077758789
    5. 'b' → logprob: -13.880289077758789
    6. '               ' → logprob: -14.755289077758789
    7. '   ' → logprob: -14.880289077758789
    8. '-' → logprob: -15.505289077758789
    9. '           ' → logprob: -16.00528907775879
    10. '                   ' → logprob: -16.13028907775879

Token 1925: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000263481488218531
    2. ' b' → logprob: -8.250263214111328
    3. '0' → logprob: -13.500263214111328
    4. '   ' → logprob: -15.125263214111328
    5. 'space' → logprob: -16.375263214111328
    6. ' ' → logprob: -16.500263214111328
    7. '
' → logprob: -16.625263214111328
    8. 'self' → logprob: -17.000263214111328
    9. ''b' → logprob: -17.312763214111328
    10. '    ' → logprob: -17.625263214111328

Token 1926: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.19992360472679138
    2. '))
' → logprob: -2.199923515319824
    3. '.car' → logprob: -3.199923515319824
    4. ',' → logprob: -3.699923515319824
    5. ',b' → logprob: -6.449923515319824
    6. '.depart' → logprob: -7.199923515319824
    7. '.b' → logprob: -7.449923515319824
    8. ')' → logprob: -7.574923515319824
    9. '))

' → logprob: -8.324923515319824
    10. 'car' → logprob: -8.574923515319824

Token 1927: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001847062085289508
    2. '
' → logprob: -8.875185012817383
    3. '```' → logprob: -10.250185012817383
    4. '               ' → logprob: -12.750185012817383
    5. '            
' → logprob: -13.125185012817383
    6. '       ' → logprob: -13.625185012817383
    7. 'if' → logprob: -14.500185012817383
    8. ' if' → logprob: -15.000185012817383
    9. ',' → logprob: -15.000185012817383
    10. '`' → logprob: -15.125185012817383

Token 1928: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027206414961256087
    2. '
' → logprob: -8.625271797180176
    3. 'if' (adapté à ' if') → logprob: -9.625271797180176
    4. ' if' → logprob: -11.125271797180176
    5. '       ' → logprob: -12.250271797180176
    6. '            
' → logprob: -13.125271797180176
    7. 't' → logprob: -13.625271797180176
    8. '```' → logprob: -14.000271797180176
    9. '   ' → logprob: -14.500271797180176
    10. 'elif' → logprob: -14.625271797180176

Token 1929: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012534845620393753
    2. ' t' → logprob: -4.3875346183776855
    3. '   ' → logprob: -11.637535095214844
    4. 'b' → logprob: -11.887535095214844
    5. '(t' → logprob: -12.262535095214844
    6. '           ' → logprob: -13.637535095214844
    7. '	t' → logprob: -13.887535095214844
    8. ' ' → logprob: -14.762535095214844
    9. '`t' → logprob: -14.887535095214844
    10. ' b' → logprob: -15.137535095214844

Token 1930: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47414982318878174
    2. 'and' → logprob: -0.9741498231887817
    3. ' is' → logprob: -9.724149703979492
    4. 'is' → logprob: -12.099149703979492
    5. '           ' → logprob: -12.974149703979492
    6. '            ' → logprob: -13.724149703979492
    7. ' ' → logprob: -14.099149703979492
    8. 'if' → logprob: -14.349149703979492
    9. '        ' → logprob: -14.974149703979492
    10. '   ' → logprob: -14.974149703979492

Token 1931: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0017502688569948077
    2. ' t' → logprob: -6.376750469207764
    3. '(t' → logprob: -10.001749992370605
    4. '	t' → logprob: -14.126749992370605
    5. '`t' → logprob: -14.501749992370605
    6. '   ' → logprob: -14.626749992370605
    7. ' (' → logprob: -14.876749992370605
    8. ' ' → logprob: -15.751749992370605
    9. '(' → logprob: -16.501750946044922
    10. '           ' → logprob: -16.751750946044922

Token 1932: '.depart' (ID: 192809)
  Prédit: '.t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.3745158910751343
    2. 't' → logprob: -2.249516010284424
    3. '.depart' → logprob: -2.249516010284424
    4. 'and' → logprob: -2.499516010284424
    5. ' and' → logprob: -4.499516010284424
    6. ' t' → logprob: -5.124516010284424
    7. '[t' → logprob: -6.999516010284424
    8. '`t' → logprob: -7.749516010284424
    9. 'depart' → logprob: -7.999516010284424
    10. '(t' → logprob: -9.249515533447266

Token 1933: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.0059726424515247345
    2. '_time' → logprob: -5.130972862243652
    3. 'e' → logprob: -11.005972862243652
    4. '__' → logprob: -12.380972862243652
    5. 'URE' → logprob: -12.630972862243652
    6. '```' → logprob: -12.880972862243652
    7. 'ue' → logprob: -13.005972862243652
    8. '   ' → logprob: -13.130972862243652
    9. 'time' → logprob: -13.380972862243652
    10. 'u' → logprob: -13.380972862243652

Token 1934: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0005577972042374313
    2. '.time' → logprob: -8.375557899475098
    3. '<=' → logprob: -9.000557899475098
    4. 'time' → logprob: -9.125557899475098
    5. '   ' → logprob: -11.000557899475098
    6. ' <=' → logprob: -11.125557899475098
    7. '_index' → logprob: -11.125557899475098
    8. 't' → logprob: -11.500557899475098
    9. '.index' → logprob: -11.625557899475098
    10. '._' → logprob: -11.750557899475098

Token 1935: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6932249665260315
    2. '<=' → logprob: -0.6932249665260315
    3. '==' → logprob: -9.818224906921387
    4. ' ==' → logprob: -11.693224906921387
    5. '   ' → logprob: -12.443224906921387
    6. '```' → logprob: -12.943224906921387
    7. '           ' → logprob: -13.443224906921387
    8. ' ' → logprob: -13.443224906921387
    9. '()' → logprob: -14.193224906921387
    10. '          ' → logprob: -14.318224906921387

Token 1936: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018161057960242033
    2. ' self' → logprob: -8.625181198120117
    3. '           ' → logprob: -13.625181198120117
    4. '(self' → logprob: -15.250181198120117
    5. '               ' → logprob: -15.750181198120117
    6. '[self' → logprob: -16.125181198120117
    7. '   ' → logprob: -16.375181198120117
    8. '                   ' → logprob: -16.875181198120117
    9. '	self' → logprob: -16.875181198120117
    10. '=self' → logprob: -17.000181198120117

Token 1937: '.current' (ID: 8357)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003907543432433158
    2. 'current' → logprob: -8.000391006469727
    3. ' self' → logprob: -9.875391006469727
    4. '=self' → logprob: -14.250391006469727
    5. '[self' → logprob: -14.375391006469727
    6. '.current' → logprob: -14.500391006469727
    7. '(self' → logprob: -14.625391006469727
    8. '           ' → logprob: -15.125391006469727
    9. ' current' → logprob: -15.125391006469727
    10. '
' → logprob: -15.625391006469727

Token 1938: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.43713223934173584
    2. 'time' → logprob: -1.0621322393417358
    3. 'self' → logprob: -4.812132358551025
    4. 'car' → logprob: -8.812131881713867
    5. '_car' → logprob: -10.187131881713867
    6. ' time' → logprob: -11.187131881713867
    7. 'bottom' → logprob: -11.562131881713867
    8. 'current' → logprob: -11.687131881713867
    9. 'space' → logprob: -12.062131881713867
    10. 'Time' → logprob: -12.187131881713867

Token 1939: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12695802748203278
    2. ':' → logprob: -2.376958131790161
    3. '               ' → logprob: -4.251957893371582
    4. '           ' → logprob: -5.626957893371582
    5. ' and' → logprob: -5.751957893371582
    6. ',' → logprob: -5.751957893371582
    7. 'and' → logprob: -6.876957893371582
    8. '```' → logprob: -7.376957893371582
    9. '              ' → logprob: -8.876957893371582
    10. '          ' → logprob: -9.126957893371582

Token 1940: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14848050475120544
    2. '           ' → logprob: -2.5234804153442383
    3. 'and' → logprob: -4.023480415344238
    4. ' and' → logprob: -4.023480415344238
    5. '```' → logprob: -4.898480415344238
    6. ':
' → logprob: -5.023480415344238
    7. ':' → logprob: -6.023480415344238
    8. ' (' → logprob: -6.523480415344238
    9. ',' → logprob: -6.773480415344238
    10. '(' → logprob: -7.148480415344238

Token 1941: ' departing' (ID: 126080)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08562392741441727
    2. ' if' → logprob: -3.5856239795684814
    3. 'depart' → logprob: -3.8356239795684814
    4. '           ' → logprob: -3.9606239795684814
    5. 'if' → logprob: -5.710623741149902
    6. ' departing' → logprob: -5.710623741149902
    7. ' dep' → logprob: -5.835623741149902
    8. '                   ' → logprob: -5.960623741149902
    9. 't' → logprob: -8.460623741149902
    10. ' ' → logprob: -8.585623741149902

Token 1942: '_top' (ID: 23394)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.020949630066752434
    2. '_top' → logprob: -4.270949840545654
    3. 'append' → logprob: -5.270949840545654
    4. 'top' → logprob: -6.520949840545654
    5. 'Top' → logprob: -9.770949363708496
    6. '           ' → logprob: -10.395949363708496
    7. '
' → logprob: -11.395949363708496
    8. '          ' → logprob: -11.770949363708496
    9. '   ' → logprob: -11.770949363708496
    10. 'appear' → logprob: -12.145949363708496

Token 1943: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.396757089532912e-05
    2. 'append' → logprob: -9.7500638961792
    3. '.' → logprob: -12.5000638961792
    4. ' .' → logprob: -14.6250638961792
    5. '_append' → logprob: -14.6250638961792
    6. 'Append' → logprob: -15.1250638961792
    7. '.
' → logprob: -15.3750638961792
    8. '.app' → logprob: -15.3750638961792
    9. ' append' → logprob: -16.500064849853516
    10. 'app' → logprob: -16.875064849853516

Token 1944: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0016498296754434705
    2. '(space' → logprob: -6.501649856567383
    3. '(' → logprob: -9.876649856567383
    4. ' (' → logprob: -10.126649856567383
    5. '   ' → logprob: -11.001649856567383
    6. '[(' → logprob: -11.376649856567383
    7. ' ' → logprob: -11.876649856567383
    8. '  ' → logprob: -11.876649856567383
    9. '(True' → logprob: -12.376649856567383
    10. '    ' → logprob: -13.126649856567383

Token 1945: 'space' (ID: 8775)
  Prédit: '(space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(space' → logprob: -0.3487287759780884
    2. 'space' → logprob: -1.2237287759780884
    3. ' (' → logprob: -8.848729133605957
    4. ' space' → logprob: -9.223729133605957
    5. '(' → logprob: -10.223729133605957
    6. 'spaces' → logprob: -13.723729133605957
    7. '   ' → logprob: -14.348729133605957
    8. '(sp' → logprob: -14.598729133605957
    9. ')' → logprob: -15.098729133605957
    10. '.space' → logprob: -15.348729133605957

Token 1946: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -8.256334695033729e-05
    2. 'index' → logprob: -10.250082969665527
    3. ' .' → logprob: -10.625082969665527
    4. '.' → logprob: -11.625082969665527
    5. '           ' → logprob: -13.375082969665527
    6. 'None' → logprob: -13.625082969665527
    7. ').' → logprob: -14.000082969665527
    8. '   ' → logprob: -14.125082969665527
    9. ' ' → logprob: -14.250082969665527
    10. '               ' → logprob: -14.250082969665527

Token 1947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.383526149671525e-05
    2. ',t' → logprob: -10.000053405761719
    3. ' ,' → logprob: -11.875053405761719
    4. ',
' → logprob: -13.625053405761719
    5. '),' → logprob: -16.25005340576172
    6. 't' → logprob: -17.37505340576172
    7. '‌,' → logprob: -17.50005340576172
    8. ',p' → logprob: -17.62505340576172
    9. ',),' → logprob: -18.12505340576172
    10. ')' → logprob: -18.62505340576172

Token 1948: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009762698784470558
    2. ' t' → logprob: -4.634762763977051
    3. '(t' → logprob: -12.50976276397705
    4. '   ' → logprob: -14.38476276397705
    5. '	t' → logprob: -14.50976276397705
    6. ' ' → logprob: -15.19726276397705
    7. '`t' → logprob: -15.32226276397705
    8. ')t' → logprob: -15.94726276397705
    9. ' (' → logprob: -16.009761810302734
    10. 'space' → logprob: -16.009761810302734

Token 1949: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03490164875984192
    2. ')
' → logprob: -3.4099016189575195
    3. '))' → logprob: -7.5349016189575195
    4. ')

' → logprob: -7.9099016189575195
    5. '))
' → logprob: -8.53490161895752
    6. '       ' → logprob: -9.53490161895752
    7. ',' → logprob: -11.28490161895752
    8. '           ' → logprob: -11.53490161895752
    9. ')}' → logprob: -11.53490161895752
    10. ')`' → logprob: -11.65990161895752

Token 1950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008837451227009296
    2. '
' → logprob: -4.7588372230529785
    3. '        
' → logprob: -9.133837699890137
    4. '```' → logprob: -9.258837699890137
    5. 'for' → logprob: -11.758837699890137
    6. '           ' → logprob: -12.633837699890137
    7. '#' → logprob: -13.758837699890137
    8. ' for' → logprob: -14.258837699890137
    9. '``' → logprob: -14.258837699890137
    10. '

' → logprob: -14.383837699890137

Token 1951: ' departing' (ID: 126080)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013568278402090073
    2. '#' → logprob: -4.51356840133667
    3. '
' → logprob: -7.26356840133667
    4. 'for' → logprob: -7.26356840133667
    5. 'depart' → logprob: -7.38856840133667
    6. '```' → logprob: -9.638567924499512
    7. 'remaining' → logprob: -9.763567924499512
    8. '   ' → logprob: -9.888567924499512
    9. '        
' → logprob: -9.888567924499512
    10. 'if' → logprob: -10.138567924499512

Token 1952: '_bottom' (ID: 59652)
  Prédit: '_bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.0003874166286550462
    2. 'bottom' → logprob: -9.000387191772461
    3. '_sorted' → logprob: -9.625387191772461
    4. ' =' → logprob: -9.875387191772461
    5. '=' → logprob: -10.625387191772461
    6. '_depart' → logprob: -10.750387191772461
    7. '_top' → logprob: -11.000387191772461
    8. '_order' → logprob: -11.250387191772461
    9. '_indices' → logprob: -11.500387191772461
    10. '.sort' → logprob: -11.625387191772461

Token 1953: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.771655115589965e-05
    2. 'sort' → logprob: -11.250018119812012
    3. '=' → logprob: -13.750018119812012
    4. ',' → logprob: -13.875018119812012
    5. ' =' → logprob: -13.875018119812012
    6. '_sorted' → logprob: -14.125018119812012
    7. '	sort' → logprob: -15.625018119812012
    8. '.extend' → logprob: -15.625018119812012
    9. '.append' → logprob: -16.000017166137695
    10. '.' → logprob: -16.250017166137695

Token 1954: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.022181063890457153
    2. 'key' → logprob: -4.022181034088135
    3. '()
' → logprob: -5.772181034088135
    4. '()' → logprob: -7.022181034088135
    5. ',key' → logprob: -11.397181510925293
    6. '(reverse' → logprob: -12.522181510925293
    7. ' key' → logprob: -13.272181510925293
    8. '(lambda' → logprob: -14.647181510925293
    9. '(
' → logprob: -15.272181510925293
    10. '```' → logprob: -15.272181510925293

Token 1955: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -6.396757089532912e-05
    2. 'lambda' → logprob: -9.7500638961792
    3. '=' → logprob: -12.6250638961792
    4. '(lambda' → logprob: -13.0000638961792
    5. ' lambda' → logprob: -18.000064849853516
    6. '```' → logprob: -19.000064849853516
    7. '=None' → logprob: -19.500064849853516
    8. '   ' → logprob: -20.500064849853516
    9. ' =' → logprob: -20.750064849853516
    10. '_lambda' → logprob: -21.000064849853516

Token 1956: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00024727347772568464
    2. ' lambda' → logprob: -8.50024700164795
    3. 'x' → logprob: -10.25024700164795
    4. '(lambda' → logprob: -12.37524700164795
    5. '=lambda' → logprob: -13.12524700164795
    6. '   ' → logprob: -13.75024700164795
    7. '0' → logprob: -14.00024700164795
    8. 'lam' → logprob: -15.87524700164795
    9. '```' → logprob: -16.625247955322266
    10. '1' → logprob: -16.625247955322266

Token 1957: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12365400046110153
    2. '=lambda' → logprob: -2.9986538887023926
    3. 'lambda' → logprob: -3.1236538887023926
    4. 'x' → logprob: -4.248653888702393
    5. ':x' → logprob: -5.748653888702393
    6. ' x' → logprob: -6.248653888702393
    7. '[' → logprob: -6.873653888702393
    8. '0' → logprob: -6.998653888702393
    9. '(lambda' → logprob: -8.12365436553955
    10. ' :' → logprob: -8.24865436553955

Token 1958: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04878992959856987
    2. 'lambda' → logprob: -3.0487899780273438
    3. ' x' → logprob: -8.923789978027344
    4. ' lambda' → logprob: -9.673789978027344
    5. '0' → logprob: -12.548789978027344
    6. '(lambda' → logprob: -12.798789978027344
    7. '(x' → logprob: -15.923789978027344
    8. '1' → logprob: -16.923789978027344
    9. '=lambda' → logprob: -17.798789978027344
    10. '_lambda' → logprob: -18.423789978027344

Token 1959: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2935987412929535
    2. '0' → logprob: -1.4185987710952759
    3. ':' → logprob: -5.043598651885986
    4. 'x' → logprob: -5.168598651885986
    5. ':x' → logprob: -9.168599128723145
    6. '(' → logprob: -9.418599128723145
    7. '1' → logprob: -11.668599128723145
    8. ' ' → logprob: -11.793599128723145
    9. ' x' → logprob: -12.043599128723145
    10. '(x' → logprob: -12.918599128723145

Token 1960: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. '[' → logprob: -10.2500581741333
    3. 'x' → logprob: -11.2500581741333
    4. 'lambda' → logprob: -11.6250581741333
    5. ' ' → logprob: -14.2500581741333
    6. ':' → logprob: -16.375059127807617
    7. ' x' → logprob: -17.125059127807617
    8. ' lambda' → logprob: -17.375059127807617
    9. '   ' → logprob: -17.500059127807617
    10. 'ambda' → logprob: -18.625059127807617

Token 1961: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16025561094284058
    2. ')' → logprob: -1.9102556705474854
    3. '       ' → logprob: -11.785255432128906
    4. ')

' → logprob: -11.785255432128906
    5. ')
' → logprob: -12.410255432128906
    6. ')`
' → logprob: -12.535255432128906
    7. ')return' → logprob: -13.035255432128906
    8. ',' → logprob: -13.785255432128906
    9. ' )
' → logprob: -13.910255432128906
    10. ')#' → logprob: -14.160255432128906

Token 1962: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5498251914978027
    2. 'for' → logprob: -1.0498251914978027
    3. 'depart' → logprob: -3.1748251914978027
    4. ' for' → logprob: -4.299825191497803
    5. '```' → logprob: -4.424825191497803
    6. ' departing' → logprob: -6.049825191497803
    7. '[' → logprob: -7.049825191497803
    8. '``' → logprob: -7.299825191497803
    9. 'if' → logprob: -7.799825191497803
    10. '[]' → logprob: -8.674825668334961

Token 1963: ' departing' (ID: 126080)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.00032867121626622975
    2. 'for' → logprob: -8.50032901763916
    3. ' departing' → logprob: -9.75032901763916
    4. '       ' → logprob: -10.12532901763916
    5. 'return' → logprob: -11.00032901763916
    6. '_depart' → logprob: -12.50032901763916
    7. '           ' → logprob: -12.87532901763916
    8. '#' → logprob: -14.00032901763916
    9. '```' → logprob: -14.37532901763916
    10. '   ' → logprob: -14.87532901763916

Token 1964: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.002621789462864399
    2. '_bottom' → logprob: -6.502621650695801
    3. '.sort' → logprob: -7.002621650695801
    4. '.append' → logprob: -9.1276216506958
    5. 'sort' → logprob: -10.2526216506958
    6. 'Top' → logprob: -10.3776216506958
    7. 'top' → logprob: -10.6276216506958
    8. '_sort' → logprob: -13.5026216506958
    9. '```' → logprob: -13.7526216506958
    10. '_TOP' → logprob: -13.8776216506958

Token 1965: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -7.226628895296017e-06
    2. 'sort' → logprob: -12.000007629394531
    3. '.' → logprob: -15.125007629394531
    4. ' .' → logprob: -15.125007629394531
    5. '.extend' → logprob: -15.500007629394531
    6. '=' → logprob: -15.875007629394531
    7. ' =' → logprob: -17.25000762939453
    8. ',' → logprob: -17.37500762939453
    9. '.append' → logprob: -17.50000762939453
    10. '	sort' → logprob: -17.50000762939453

Token 1966: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0002574057725723833
    2. 'key' → logprob: -8.50025749206543
    3. '(lambda' → logprob: -9.87525749206543
    4. 'lambda' → logprob: -13.37525749206543
    5. '```' → logprob: -14.75025749206543
    6. ',key' → logprob: -15.12525749206543
    7. '=lambda' → logprob: -16.25025749206543
    8. ' key' → logprob: -16.50025749206543
    9. '[key' → logprob: -16.75025749206543
    10. '(' → logprob: -17.25025749206543

Token 1967: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.024535512551665306
    2. 'lambda' → logprob: -4.524535655975342
    3. '(lambda' → logprob: -5.399535655975342
    4. '(key' → logprob: -5.524535655975342
    5. 'key' → logprob: -5.899535655975342
    6. '=' → logprob: -6.149535655975342
    7. ',key' → logprob: -12.274535179138184
    8. '```' → logprob: -13.149535179138184
    9. ' key' → logprob: -13.399535179138184
    10. '_lambda' → logprob: -13.399535179138184

Token 1968: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.03456612676382065
    2. 'x' → logprob: -3.5345661640167236
    3. 'key' → logprob: -5.4095659255981445
    4. '=lambda' → logprob: -8.284565925598145
    5. '(lambda' → logprob: -10.034565925598145
    6. ' lambda' → logprob: -10.659565925598145
    7. '0' → logprob: -12.159565925598145
    8. '```' → logprob: -12.909565925598145
    9. 'lam' → logprob: -13.784565925598145
    10. '   ' → logprob: -14.659565925598145

Token 1969: ':' (ID: 25)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.03401494398713112
    2. ':' → logprob: -3.909014940261841
    3. 'lambda' → logprob: -4.65901517868042
    4. '=' → logprob: -6.15901517868042
    5. '(lambda' → logprob: -6.40901517868042
    6. ',' → logprob: -9.909014701843262
    7. ' lambda' → logprob: -10.409014701843262
    8. ')' → logprob: -11.659014701843262
    9. '   ' → logprob: -11.909014701843262
    10. 'key' → logprob: -12.034014701843262

Token 1970: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.018179206177592278
    2. 'x' → logprob: -4.018179416656494
    3. '(lambda' → logprob: -10.643178939819336
    4. ' lambda' → logprob: -12.393178939819336
    5. 'lam' → logprob: -14.393178939819336
    6. 'operator' → logprob: -14.643178939819336
    7. 'len' → logprob: -15.893178939819336
    8. '0' → logprob: -16.518178939819336
    9. '(' → logprob: -17.018178939819336
    10. '(x' → logprob: -17.143178939819336

Token 1971: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13080497086048126
    2. '0' → logprob: -2.130805015563965
    3. '(' → logprob: -6.005805015563965
    4. '==' → logprob: -7.880805015563965
    5. '=' → logprob: -8.755805015563965
    6. '.' → logprob: -8.755805015563965
    7. '.sort' → logprob: -8.880805015563965
    8. '<' → logprob: -9.505805015563965
    9. ':' → logprob: -9.630805015563965
    10. '```' → logprob: -9.880805015563965

Token 1972: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.750436007976532e-05
    2. '(' → logprob: -11.00003719329834
    3. '[' → logprob: -11.75003719329834
    4. ' ' → logprob: -12.37503719329834
    5. '1' → logprob: -12.62503719329834
    6. '   ' → logprob: -14.12503719329834
    7. 'lambda' → logprob: -14.62503719329834
    8. ')' → logprob: -15.12503719329834
    9. '```' → logprob: -15.18753719329834
    10. ' (' → logprob: -15.25003719329834

Token 1973: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006752309389412403
    2. ')
' → logprob: -5.0067524909973145
    3. '       ' → logprob: -10.506752014160156
    4. '))' → logprob: -13.256752014160156
    5. ')]' → logprob: -13.381752014160156
    6. ')

' → logprob: -13.881752014160156
    7. ')}' → logprob: -14.381752014160156
    8. '),' → logprob: -14.381752014160156
    9. ')`' → logprob: -14.506752014160156
    10. '   ' → logprob: -14.631752014160156

Token 1974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09409943968057632
    2. 'for' → logprob: -2.719099521636963
    3. 'if' → logprob: -4.344099521636963
    4. '```' → logprob: -5.844099521636963
    5. 'while' → logprob: -6.219099521636963
    6. 'can' → logprob: -6.844099521636963
    7. 'depart' → logprob: -6.969099521636963
    8. 'def' → logprob: -6.969099521636963
    9. '   ' → logprob: -7.719099521636963
    10. '#' → logprob: -7.719099521636963

Token 1975: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9893031120300293
    2. 'depart' → logprob: -1.1143031120300293
    3. 'if' → logprob: -2.4893031120300293
    4. 'ready' → logprob: -2.8643031120300293
    5. 'for' → logprob: -3.1143031120300293
    6. 'can' → logprob: -3.2393031120300293
    7. '#' (adapté à ' #') → logprob: -3.4893031120300293
    8. '       ' → logprob: -4.489303112030029
    9. 'to' → logprob: -4.614303112030029
    10. 'res' → logprob: -4.864303112030029

Token 1976: ' Bottom' (ID: 44368)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5807790756225586
    2. 'depart' → logprob: -0.9557790756225586
    3. 'can' → logprob: -4.080779075622559
    4. '#' → logprob: -4.330779075622559
    5. 'ready' → logprob: -4.705779075622559
    6. 'res' → logprob: -5.205779075622559
    7. 'for' → logprob: -6.330779075622559
    8. 'results' → logprob: -6.330779075622559
    9. 'le' → logprob: -6.580779075622559
    10. '       ' → logprob: -6.830779075622559

Token 1977: ' cars' (ID: 13653)
  Prédit: '_depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.839134156703949
    2. '_c' → logprob: -1.2141342163085938
    3. 'depart' → logprob: -1.7141342163085938
    4. 'cars' → logprob: -2.8391342163085938
    5. 'can' → logprob: -5.214134216308594
    6. '_ready' → logprob: -5.214134216308594
    7. '_can' → logprob: -5.339134216308594
    8. '_to' → logprob: -5.589134216308594
    9. 'ready' → logprob: -6.464134216308594
    10. 'car' → logprob: -6.714134216308594

Token 1978: ' depart' (ID: 14182)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.4978688955307007
    2. 'depart' → logprob: -1.9978688955307007
    3. 'ready' → logprob: -2.1228690147399902
    4. 'to' → logprob: -3.6228690147399902
    5. '       ' → logprob: -4.12286901473999
    6. '_ready' → logprob: -4.24786901473999
    7. 'for' → logprob: -4.74786901473999
    8. 'le' → logprob: -4.74786901473999
    9. '_to' → logprob: -4.74786901473999
    10. '_depart' → logprob: -4.74786901473999

Token 1979: ' first' (ID: 1577)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3855305910110474
    2. '_c' → logprob: -1.5105305910110474
    3. '_list' → logprob: -2.385530471801758
    4. 'cars' → logprob: -2.885530471801758
    5. '       ' → logprob: -3.260530471801758
    6. 'for' → logprob: -3.260530471801758
    7. '.append' → logprob: -3.385530471801758
    8. '.extend' → logprob: -3.385530471801758
    9. 'now' → logprob: -4.010530471801758
    10. '_now' → logprob: -4.010530471801758

Token 1980: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2167120724916458
    2. 'for' → logprob: -2.59171199798584
    3. 'if' → logprob: -2.84171199798584
    4. 'result' → logprob: -3.59171199798584
    5. 'depart' → logprob: -3.84171199798584
    6. 'return' → logprob: -5.21671199798584
    7. 'while' → logprob: -6.46671199798584
    8. ' for' → logprob: -6.71671199798584
    9. ' if' → logprob: -7.09171199798584
    10. 'departure' → logprob: -7.46671199798584

Token 1981: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6066781878471375
    2. 'for' → logprob: -0.9816781878471375
    3. 'if' → logprob: -2.9816782474517822
    4. 'return' → logprob: -4.606678009033203
    5. 'depart' → logprob: -4.856678009033203
    6. 'result' → logprob: -5.106678009033203
    7. '```' → logprob: -5.856678009033203
    8. ' for' → logprob: -6.731678009033203
    9. 'departure' → logprob: -8.106678009033203
    10. 'car' → logprob: -8.356678009033203

Token 1982: ' bottom' (ID: 8725)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.3366867005825043
    2. 'result' → logprob: -2.336686611175537
    3. 'return' → logprob: -2.461686611175537
    4. 'for' → logprob: -3.211686611175537
    5. '       ' → logprob: -3.461686611175537
    6. 'if' → logprob: -3.711686611175537
    7. 'to' → logprob: -6.711686611175537
    8. 'le' → logprob: -6.961686611175537
    9. 'ready' → logprob: -6.961686611175537
    10. 'departure' → logprob: -7.086686611175537

Token 1983: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.056786954402923584
    2. '_depart' → logprob: -3.6817870140075684
    3. '_ids' → logprob: -4.806787014007568
    4. 'cars' → logprob: -5.056787014007568
    5. ',' → logprob: -5.806787014007568
    6. '.sort' → logprob: -6.056787014007568
    7. '_indices' → logprob: -6.181787014007568
    8. '_car' → logprob: -6.681787014007568
    9. '_idx' → logprob: -7.056787014007568
    10. '.append' → logprob: -7.056787014007568

Token 1984: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.012610547244548798
    2. 'ar' → logprob: -4.51261043548584
    3. '_depart' → logprob: -7.63761043548584
    4. ' =' → logprob: -8.26261043548584
    5. '_c' → logprob: -8.63761043548584
    6. '=' → logprob: -9.26261043548584
    7. 'depart' → logprob: -9.51261043548584
    8. '[' → logprob: -9.63761043548584
    9. 'cars' → logprob: -10.01261043548584
    10. '_' → logprob: -10.38761043548584

Token 1985: '_depart' (ID: 172061)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1323586702346802
    2. '.extend' → logprob: -1.3823586702346802
    3. '=' → logprob: -1.8823586702346802
    4. '.append' → logprob: -2.2573585510253906
    5. ' =' → logprob: -2.2573585510253906
    6. ',' → logprob: -4.757358551025391
    7. '_ids' → logprob: -4.757358551025391
    8. '=[]' → logprob: -5.007358551025391
    9. '_tokens' → logprob: -5.507358551025391
    10. '.sort' → logprob: -5.507358551025391

Token 1986: 'ing' (ID: 289)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3926355838775635
    2. 'ing' → logprob: -1.7676355838775635
    3. '=[]
' → logprob: -2.8926355838775635
    4. '=' → logprob: -3.0176355838775635
    5. 'ure' → logprob: -4.142635345458984
    6. '=[]' → logprob: -4.392635345458984
    7. '_list' → logprob: -5.017635345458984
    8. 'ed' → logprob: -5.267635345458984
    9. '=[' → logprob: -5.517635345458984
    10. 'ures' → logprob: -6.142635345458984

Token 1987: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3747636675834656
    2. ' =' → logprob: -1.7497637271881104
    3. '.extend' → logprob: -2.4997637271881104
    4. '_ids' → logprob: -4.249763488769531
    5. '.append' → logprob: -4.374763488769531
    6. '_c' → logprob: -4.374763488769531
    7. '=[]' → logprob: -5.374763488769531
    8. '[:]' → logprob: -5.624763488769531
    9. 'cars' → logprob: -6.249763488769531
    10. '+=' → logprob: -6.624763488769531

Token 1988: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01574668288230896
    2. '[b' → logprob: -4.265746593475342
    3. ' [' → logprob: -7.390746593475342
    4. '[i' → logprob: -8.8907470703125
    5. '[]
' → logprob: -9.0157470703125
    6. '[len' → logprob: -9.1407470703125
    7. '[x' → logprob: -9.1407470703125
    8. '[arr' → logprob: -9.1407470703125
    9. '[d' → logprob: -10.3907470703125
    10. '[(' → logprob: -10.3907470703125

Token 1989: 'c' (ID: 66)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.18067800998687744
    2. 'b' → logprob: -2.305677890777588
    3. 'x' → logprob: -3.180677890777588
    4. 'c' → logprob: -4.430677890777588
    5. 'bc' → logprob: -4.805677890777588
    6. 'pair' → logprob: -6.305677890777588
    7. 'bt' → logprob: -6.930677890777588
    8. 'item' → logprob: -7.180677890777588
    9. 'cb' → logprob: -9.055678367614746
    10. ' car' → logprob: -9.305678367614746

Token 1990: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18622423708438873
    2. ' for' → logprob: -1.8112242221832275
    3. '[' → logprob: -5.061224460601807
    4. '
' → logprob: -10.061223983764648
    5. 'x' → logprob: -10.311223983764648
    6. '```' → logprob: -11.811223983764648
    7. 'token' → logprob: -11.811223983764648
    8. '	for' → logprob: -12.311223983764648
    9. 'or' → logprob: -12.561223983764648
    10. ' ' → logprob: -12.811223983764648

Token 1991: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0033591510728001595
    2. 'idx' → logprob: -5.878359317779541
    3. '(_,' → logprob: -8.628358840942383
    4. '_' → logprob: -8.753358840942383
    5. '_i' → logprob: -9.878358840942383
    6. 'space' → logprob: -10.128358840942383
    7. 'i' → logprob: -10.128358840942383
    8. ' _,' → logprob: -10.378358840942383
    9. 'index' → logprob: -10.878358840942383
    10. '__,' → logprob: -11.503358840942383

Token 1992: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.040457421680912e-05
    2. ' c' → logprob: -9.625070571899414
    3. 'car' → logprob: -13.125070571899414
    4. 'b' → logprob: -14.375070571899414
    5. '_c' → logprob: -14.375070571899414
    6. '   ' → logprob: -15.125070571899414
    7. '	c' → logprob: -15.875070571899414
    8. '
' → logprob: -16.250070571899414
    9. '    ' → logprob: -16.375070571899414
    10. '       ' → logprob: -16.750070571899414

Token 1993: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06999201327562332
    2. ' in' → logprob: -2.6949920654296875
    3. ',' → logprob: -10.444992065429688
    4. '
' → logprob: -10.694992065429688
    5. 'c' → logprob: -13.819992065429688
    6. ' 
' → logprob: -14.694992065429688
    7. ' ' → logprob: -15.069992065429688
    8. ')' → logprob: -15.069992065429688
    9. 'import' → logprob: -15.069992065429688
    10. '       ' → logprob: -15.944992065429688

Token 1994: ' departing' (ID: 126080)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.006543543189764023
    2. ' departing' → logprob: -5.5065436363220215
    3. 'bottom' → logprob: -6.6315436363220215
    4. '_depart' → logprob: -7.5065436363220215
    5. 'c' → logprob: -9.006543159484863
    6. '
' → logprob: -9.256543159484863
    7. '[(' → logprob: -9.756543159484863
    8. 'div' → logprob: -9.881543159484863
    9. 'b' → logprob: -10.006543159484863
    10. '(' → logprob: -11.006543159484863

Token 1995: '_bottom' (ID: 59652)
  Prédit: '_bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.5821906328201294
    2. 'bottom' → logprob: -1.4571906328201294
    3. 'c' → logprob: -2.20719051361084
    4. 'depart' → logprob: -3.58219051361084
    5. '_depart' → logprob: -3.58219051361084
    6. 'cars' → logprob: -3.95719051361084
    7. 'car' → logprob: -4.70719051361084
    8. '_c' → logprob: -6.20719051361084
    9. '
' → logprob: -6.70719051361084
    10. ' c' → logprob: -6.83219051361084

Token 1996: ']

' (ID: 3144)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7629112601280212
    2. ']' → logprob: -1.262911319732666
    3. 'if' → logprob: -1.512911319732666
    4. ']
' → logprob: -3.637911319732666
    5. '       ' → logprob: -5.512911319732666
    6. ']

' → logprob: -8.887910842895508
    7. ' ]' → logprob: -9.637910842895508
    8. '   ' → logprob: -11.012910842895508
    9. '
' → logprob: -11.762910842895508
    10. ' ]
' → logprob: -11.887910842895508

Token 1997: '       ' (ID: 309)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.004859311040490866
    2. '[top' → logprob: -5.629859447479248
    3. '       ' → logprob: -7.129859447479248
    4. ' top' → logprob: -8.87985897064209
    5. '(top' → logprob: -9.37985897064209
    6. 'for' → logprob: -9.62985897064209
    7. '+' → logprob: -9.75485897064209
    8. '_top' → logprob: -10.87985897064209
    9. '[' → logprob: -11.12985897064209
    10. 'if' → logprob: -11.12985897064209

Token 1998: ' #' (ID: 1069)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.008937290869653225
    2. 'if' → logprob: -5.383937358856201
    3. 'for' → logprob: -6.383937358856201
    4. '#' (adapté à ' #') → logprob: -7.008937358856201
    5. 'return' → logprob: -7.633937358856201
    6. '       ' → logprob: -8.258936882019043
    7. 'available' → logprob: -8.258936882019043
    8. 'waiting' → logprob: -8.383936882019043
    9. 'depart' → logprob: -8.883936882019043
    10. 'ready' → logprob: -9.258936882019043

Token 1999: ' For' (ID: 2214)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.06107205152511597
    2. '#' → logprob: -3.6860721111297607
    3. 'waiting' → logprob: -4.436071872711182
    4. 'depart' → logprob: -4.811071872711182
    5. 'for' → logprob: -5.311071872711182
    6. 'available' → logprob: -6.061071872711182
    7. 'ready' → logprob: -6.186071872711182
    8. 'remaining' → logprob: -6.561071872711182
    9. 'can' → logprob: -6.936071872711182
    10. 'if' → logprob: -7.311071872711182

Token 2000: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.03916734829545021
    2. '#' → logprob: -4.664167404174805
    3. 'the' → logprob: -5.164167404174805
    4. 'bottom' → logprob: -5.289167404174805
    5. 'depart' → logprob: -5.664167404174805
    6. 't' → logprob: -5.789167404174805
    7. 'space' → logprob: -5.914167404174805
    8. ' top' → logprob: -6.164167404174805
    9. 'each' → logprob: -6.289167404174805
    10. 'c' → logprob: -6.914167404174805

Token 2001: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.5393818020820618
    2. '_c' → logprob: -0.9143818020820618
    3. 'car' → logprob: -4.289381980895996
    4. 'c' → logprob: -6.789381980895996
    5. '_car' → logprob: -7.164381980895996
    6. ' cars' → logprob: -8.164381980895996
    7. '_,' → logprob: -9.914381980895996
    8. 'space' → logprob: -10.289381980895996
    9. '_' → logprob: -10.789381980895996
    10. '
' → logprob: -11.164381980895996

Token 2002: ',' (ID: 11)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.07321415096521378
    2. '_depart' → logprob: -3.323214054107666
    3. 'can' → logprob: -4.823214054107666
    4. 'waiting' → logprob: -5.073214054107666
    5. 'to' → logprob: -5.323214054107666
    6. 'for' → logprob: -5.823214054107666
    7. 'def' → logprob: -6.323214054107666
    8. 'ready' → logprob: -6.448214054107666
    9. '#' → logprob: -6.448214054107666
    10. 'departure' → logprob: -6.698214054107666

Token 2003: ' only' (ID: 1606)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.4291877746582031
    2. 'result' → logprob: -2.179187774658203
    3. 'can' → logprob: -2.679187774658203
    4. 'depart' → logprob: -2.679187774658203
    5. 'ready' → logprob: -3.054187774658203
    6. 'waiting' → logprob: -4.179187774658203
    7. 'for' → logprob: -4.679187774658203
    8. '       ' → logprob: -4.804187774658203
    9. '#' → logprob: -5.179187774658203
    10. 'res' → logprob: -5.804187774658203

Token 2004: ' depart' (ID: 14182)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5175078511238098
    2. 'top' → logprob: -2.392507791519165
    3. 'can' → logprob: -2.392507791519165
    4. 'append' → logprob: -2.642507791519165
    5. 'bottom' → logprob: -3.392507791519165
    6. 'depart' → logprob: -3.392507791519165
    7. 'cars' → logprob: -4.392508029937744
    8. 'after' → logprob: -4.392508029937744
    9. 'allow' → logprob: -4.642508029937744
    10. 'if' → logprob: -4.892508029937744

Token 2005: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41188594698905945
    2. 'c' → logprob: -1.6618859767913818
    3. 'car' → logprob: -3.161885976791382
    4. 'those' → logprob: -3.286885976791382
    5. 'cars' → logprob: -3.786885976791382
    6. '[c' → logprob: -4.036885738372803
    7. ' if' → logprob: -4.161885738372803
    8. 'top' → logprob: -5.161885738372803
    9. '[' → logprob: -6.161885738372803
    10. ' those' → logprob: -6.536885738372803

Token 2006: ' bottom' (ID: 8725)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5944290161132812
    2. 'space' → logprob: -1.3444290161132812
    3. 'not' → logprob: -2.2194290161132812
    4. 'any' → logprob: -4.219429016113281
    5. '(not' → logprob: -4.219429016113281
    6. '(space' → logprob: -4.219429016113281
    7. '(c' → logprob: -4.844429016113281
    8. 'top' → logprob: -5.094429016113281
    9. 'c' → logprob: -5.219429016113281
    10. ' all' → logprob: -5.344429016113281

Token 2007: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3278592824935913
    2. 'is' → logprob: -2.202859401702881
    3. '_c' → logprob: -2.452859401702881
    4. 'cars' → logprob: -3.452859401702881
    5. 'in' → logprob: -3.577859401702881
    6. 'c' → logprob: -4.827859401702881
    7. ' is' → logprob: -5.702859401702881
    8. 'not' → logprob: -5.702859401702881
    9. '_car' → logprob: -5.952859401702881
    10. ' in' → logprob: -6.827859401702881

Token 2008: ' has' (ID: 853)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5155989527702332
    2. 'in' → logprob: -1.140599012374878
    3. 'not' → logprob: -3.140599012374878
    4. ' is' → logprob: -4.015598773956299
    5. ' in' → logprob: -4.765598773956299
    6. 'for' → logprob: -5.765598773956299
    7. ' not' → logprob: -6.265598773956299
    8. 'and' → logprob: -6.515598773956299
    9. '(space' → logprob: -6.640598773956299
    10. '
' → logprob: -6.765598773956299

Token 2009: ' departed' (ID: 115328)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4239398241043091
    2. 'space' → logprob: -2.2989397048950195
    3. 'depart' → logprob: -2.4239397048950195
    4. '(None' → logprob: -2.6739397048950195
    5. 'is' → logprob: -3.5489397048950195
    6. 'left' → logprob: -3.6739397048950195
    7. '(space' → logprob: -4.2989397048950195
    8. 'not' → logprob: -5.6739397048950195
    9. 'none' → logprob: -6.2989397048950195
    10. ' None' → logprob: -6.4239397048950195

Token 2010: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9294857978820801
    2. ' and' → logprob: -1.17948579788208
    3. '       ' → logprob: -1.67948579788208
    4. '
' → logprob: -3.05448579788208
    5. 'and' → logprob: -4.17948579788208
    6. ' (' → logprob: -4.30448579788208
    7. 'or' → logprob: -5.30448579788208
    8. '(' → logprob: -5.30448579788208
    9. '()
' → logprob: -5.42948579788208
    10. ',' → logprob: -5.67948579788208

Token 2011: ' not' (ID: 625)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.03902003541588783
    2. '(space' → logprob: -3.78902006149292
    3. 'bottom' → logprob: -4.66402006149292
    4. 'not' → logprob: -6.16402006149292
    5. '(bottom' → logprob: -7.16402006149292
    6. '(c' → logprob: -7.41402006149292
    7. 'c' → logprob: -7.66402006149292
    8. '(not' → logprob: -7.66402006149292
    9. 't' → logprob: -8.164019584655762
    10. 'b' → logprob: -8.164019584655762

Token 2012: ' present' (ID: 3333)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0346510410308838
    2. 'space' → logprob: -2.159651041030884
    3. ' in' → logprob: -2.284651041030884
    4. 't' → logprob: -2.284651041030884
    5. 'any' → logprob: -2.534651041030884
    6. '(space' → logprob: -3.034651041030884
    7. 'None' → logprob: -3.159651041030884
    8. '(c' → logprob: -3.284651041030884
    9. 'c' → logprob: -3.409651041030884
    10. 'present' → logprob: -3.909651041030884

Token 2013: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2755396068096161
    2. '
' → logprob: -2.4005396366119385
    3. 'for' → logprob: -3.4005396366119385
    4. 'and' → logprob: -3.7755396366119385
    5. ' and' → logprob: -4.150539398193359
    6. 'yet' → logprob: -4.400539398193359
    7. 'or' → logprob: -4.775539398193359
    8. ' or' → logprob: -4.775539398193359
    9. '```' → logprob: -4.775539398193359
    10. ' yet' → logprob: -5.150539398193359

Token 2014: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25613659620285034
    2. 'top' → logprob: -1.8811366558074951
    3. 'and' → logprob: -4.256136417388916
    4. ' and' → logprob: -4.631136417388916
    5. 'depart' → logprob: -4.881136417388916
    6. 'def' → logprob: -5.006136417388916
    7. ' =' → logprob: -5.256136417388916
    8. '           ' → logprob: -6.131136417388916
    9. 'or' → logprob: -6.131136417388916
    10. 'filtered' → logprob: -6.256136417388916

Token 2015: ' top' (ID: 2344)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.5117920637130737
    2. 'top' (adapté à ' top') → logprob: -1.1367920637130737
    3. 'ready' → logprob: -3.6367921829223633
    4. 'result' → logprob: -3.8867921829223633
    5. 'can' → logprob: -4.386792182922363
    6. '       ' → logprob: -4.761792182922363
    7. 'available' → logprob: -4.886792182922363
    8. 'res' → logprob: -7.011792182922363
    9. 'waiting' → logprob: -7.636792182922363
    10. 'departure' → logprob: -7.761792182922363

Token 2016: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.14720217883586884
    2. 'cars' → logprob: -2.147202253341675
    3. '_depart' → logprob: -4.147202014923096
    4. 'depart' → logprob: -6.022202014923096
    5. '_can' → logprob: -7.272202014923096
    6. 'can' → logprob: -8.022202491760254
    7. '_ready' → logprob: -8.522202491760254
    8. '_to' → logprob: -9.147202491760254
    9. 'def' → logprob: -9.397202491760254
    10. 'car' → logprob: -9.522202491760254

Token 2017: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.011557023040950298
    2. 'ar' → logprob: -4.636557102203369
    3. 'cars' → logprob: -6.511557102203369
    4. '_' → logprob: -9.886556625366211
    5. 'arr' → logprob: -10.136556625366211
    6. 'depart' → logprob: -10.386556625366211
    7. '_depart' → logprob: -10.386556625366211
    8. '_c' → logprob: -10.511556625366211
    9. 'an' → logprob: -10.761556625366211
    10. '_ar' → logprob: -10.886556625366211

Token 2018: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.0025418936274945736
    2. 'depart' → logprob: -6.752542018890381
    3. '_can' → logprob: -6.877542018890381
    4. '_to' → logprob: -8.752541542053223
    5. '_ready' → logprob: -9.377541542053223
    6. ' =' → logprob: -10.877541542053223
    7. 's' → logprob: -11.127541542053223
    8. '_de' → logprob: -11.502541542053223
    9. '_arr' → logprob: -11.502541542053223
    10. 'can' → logprob: -11.752541542053223

Token 2019: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0002534720697440207
    2. 'uring' → logprob: -9.000253677368164
    3. 'art' → logprob: -10.000253677368164
    4. 'aring' → logprob: -11.125253677368164
    5. 'inging' → logprob: -11.125253677368164
    6. 'iting' → logprob: -11.375253677368164
    7. 'ng' → logprob: -11.750253677368164
    8. 'uting' → logprob: -12.250253677368164
    9. 'orting' → logprob: -12.500253677368164
    10. 'ending' → logprob: -12.750253677368164

Token 2020: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020745081827044487
    2. ' =' → logprob: -3.895745038986206
    3. '=[]
' → logprob: -9.145745277404785
    4. '=[]' → logprob: -9.770745277404785
    5. '=[' → logprob: -11.645745277404785
    6. '_filtered' → logprob: -11.895745277404785
    7. '_out' → logprob: -12.895745277404785
    8. '_depart' → logprob: -12.895745277404785
    9. 'depart' → logprob: -13.145745277404785
    10. '_to' → logprob: -13.145745277404785

Token 2021: ' []
' (ID: 8911)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.6971967816352844
    2. '[]
' → logprob: -0.6971967816352844
    3. '[
' → logprob: -6.197196960449219
    4. '[]' → logprob: -6.697196960449219
    5. '[]

' → logprob: -8.447196960449219
    6. ' []
' → logprob: -8.572196960449219
    7. '[' → logprob: -8.697196960449219
    8. '   ' → logprob: -9.697196960449219
    9. '[i' → logprob: -10.197196960449219
    10. ' [' → logprob: -10.822196960449219

Token 2022: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7947269678115845
    2. 'for' → logprob: -1.2947269678115845
    3. ' for' → logprob: -1.2947269678115845
    4. '[' → logprob: -9.794727325439453
    5. '```' → logprob: -9.794727325439453
    6. '           ' → logprob: -9.919727325439453
    7. '
' → logprob: -10.544727325439453
    8. '   ' → logprob: -10.669727325439453
    9. '[]' → logprob: -10.669727325439453
    10. '	for' → logprob: -10.669727325439453

Token 2023: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00042054426739923656
    2. '       ' → logprob: -8.250420570373535
    3. ' for' → logprob: -8.750420570373535
    4. 'space' → logprob: -15.500420570373535
    5. '   ' → logprob: -15.625420570373535
    6. 'idx' → logprob: -15.875420570373535
    7. '	for' → logprob: -16.12541961669922
    8. '           ' → logprob: -17.25041961669922
    9. '```' → logprob: -17.50041961669922
    10. 'top' → logprob: -17.50041961669922

Token 2024: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.35123878717422485
    2. '(space' → logprob: -1.72623872756958
    3. 'idx' → logprob: -2.72623872756958
    4. 'i' → logprob: -3.47623872756958
    5. '(i' → logprob: -4.60123872756958
    6. 'index' → logprob: -5.60123872756958
    7. ' space' → logprob: -6.35123872756958
    8. '(idx' → logprob: -6.60123872756958
    9. ' idx' → logprob: -6.72623872756958
    10. '(_,' → logprob: -6.72623872756958

Token 2025: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.45624473690986633
    2. '_index' → logprob: -1.956244707107544
    3. ' in' → logprob: -2.456244707107544
    4. ',' → logprob: -2.581244707107544
    5. 'idx' → logprob: -3.206244707107544
    6. 'in' → logprob: -4.581244945526123
    7. 'index' → logprob: -4.706244945526123
    8. '_,' → logprob: -6.831244945526123
    9. '_i' → logprob: -7.456244945526123
    10. ',index' → logprob: -8.081244468688965

Token 2026: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010032468708232045
    2. ' ,' → logprob: -9.625100135803223
    3. ',t' → logprob: -11.500100135803223
    4. ' in' → logprob: -11.625100135803223
    5. '_,' → logprob: -11.625100135803223
    6. ',_' → logprob: -13.250100135803223
    7. 'in' → logprob: -14.000100135803223
    8. ',c' → logprob: -14.375100135803223
    9. 'top' → logprob: -14.750100135803223
    10. 't' → logprob: -14.875100135803223

Token 2027: ' top' (ID: 2344)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09298253059387207
    2. 'c' → logprob: -3.092982530593872
    3. 't' → logprob: -3.342982530593872
    4. 'top' → logprob: -4.842982292175293
    5. ' car' → logprob: -8.842982292175293
    6. ' t' → logprob: -10.342982292175293
    7. ' c' → logprob: -10.967982292175293
    8. 'tc' → logprob: -12.467982292175293
    9. 'space' → logprob: -12.467982292175293
    10. ' top' → logprob: -12.717982292175293

Token 2028: '_car' (ID: 62991)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.06584926694631577
    2. '_car' → logprob: -2.8158493041992188
    3. '_c' → logprob: -6.440849304199219
    4. 'c' → logprob: -6.565849304199219
    5. ',' → logprob: -7.565849304199219
    6. 'space' → logprob: -9.565849304199219
    7. '_idx' → logprob: -9.815849304199219
    8. 't' → logprob: -10.565849304199219
    9. 'cars' → logprob: -10.565849304199219
    10. '_space' → logprob: -10.815849304199219

Token 2029: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.201473668217659
    2. ' in' → logprob: -1.7014737129211426
    3. ',' → logprob: -10.201473236083984
    4. '   ' → logprob: -11.701473236083984
    5. '	in' → logprob: -12.701473236083984
    6. '_in' → logprob: -12.826473236083984
    7. '
' → logprob: -12.951473236083984
    8. ' ' → logprob: -13.076473236083984
    9. 's' → logprob: -13.951473236083984
    10. ')' → logprob: -14.326473236083984

Token 2030: ' departing' (ID: 126080)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.009808976203203201
    2. ' departing' → logprob: -4.6348090171813965
    3. '   ' → logprob: -10.759808540344238
    4. '       ' → logprob: -11.634808540344238
    5. '_depart' → logprob: -11.634808540344238
    6. '           ' → logprob: -12.509808540344238
    7. 'de' → logprob: -13.509808540344238
    8. '    ' → logprob: -13.759808540344238
    9. '     ' → logprob: -13.884808540344238
    10. '.depart' → logprob: -14.009808540344238

Token 2031: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.38711708784103394
    2. 'top' → logprob: -1.1371171474456787
    3. '(top' → logprob: -9.762117385864258
    4. 'Top' → logprob: -9.762117385864258
    5. 'depart' → logprob: -10.137117385864258
    6. '_depart' → logprob: -10.512117385864258
    7. '[top' → logprob: -11.137117385864258
    8. ' top' → logprob: -11.762117385864258
    9. 'car' → logprob: -12.012117385864258
    10. 't' → logprob: -12.012117385864258

Token 2032: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05724344030022621
    2. ':' → logprob: -3.1822433471679688
    3. '           ' → logprob: -4.557243347167969
    4. '   ' → logprob: -6.432243347167969
    5. '       ' → logprob: -6.682243347167969
    6. ' if' → logprob: -8.807243347167969
    7. ',' → logprob: -9.057243347167969
    8. '):
' → logprob: -9.182243347167969
    9. ' :
' → logprob: -9.682243347167969
    10. '[' → logprob: -10.057243347167969

Token 2033: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014891503378748894
    2. ' space' → logprob: -7.501489162445068
    3. 'space' → logprob: -7.751489162445068
    4. '```' → logprob: -8.37648868560791
    5. '       ' → logprob: -9.25148868560791
    6. '   ' → logprob: -9.75148868560791
    7. '               ' → logprob: -10.75148868560791
    8. ' if' → logprob: -11.00148868560791
    9. ',' → logprob: -11.12648868560791
    10. '          ' → logprob: -11.25148868560791

Token 2034: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -0.002034038072451949
    2. '           ' → logprob: -6.7520341873168945
    3. 'bottom' → logprob: -7.5020341873168945
    4. ' space' → logprob: -8.627034187316895
    5. '   ' → logprob: -9.752034187316895
    6. 'if' → logprob: -10.127034187316895
    7. '               ' → logprob: -11.252034187316895
    8. '       ' → logprob: -11.752034187316895
    9. 'lower' → logprob: -13.377034187316895
    10. ' bottom' → logprob: -14.002034187316895

Token 2035: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038057100027799606
    2. '=' → logprob: -3.2880570888519287
    3. '_idx' → logprob: -12.038057327270508
    4. '   ' → logprob: -12.288057327270508
    5. '_obj' → logprob: -13.788057327270508
    6. 'idx' → logprob: -13.913057327270508
    7. ' ' → logprob: -14.288057327270508
    8. '       ' → logprob: -14.413057327270508
    9. '=self' → logprob: -15.038057327270508
    10. 'x' → logprob: -15.413057327270508

Token 2036: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011752246646210551
    2. ' self' → logprob: -6.751175403594971
    3. '           ' → logprob: -12.376174926757812
    4. '   ' → logprob: -15.001174926757812
    5. '       ' → logprob: -15.126174926757812
    6. '               ' → logprob: -16.501174926757812
    7. '(self' → logprob: -16.751174926757812
    8. '[self' → logprob: -16.751174926757812
    9. '         ' → logprob: -17.626174926757812
    10. '	self' → logprob: -17.751174926757812

Token 2037: '.sp' (ID: 16144)
  Prédit: '.sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sp' → logprob: -0.010346894152462482
    2. 'spaces' → logprob: -5.13534688949585
    3. 'sp' → logprob: -6.01034688949585
    4. 'self' → logprob: -6.26034688949585
    5. '.s' → logprob: -11.885347366333008
    6. 'parking' → logprob: -12.010347366333008
    7. '.space' → logprob: -12.260347366333008
    8. '	sp' → logprob: -12.510347366333008
    9. 'space' → logprob: -12.760347366333008
    10. '       ' → logprob: -12.885347366333008

Token 2038: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -2.069664333248511e-05
    2. 'paces' → logprob: -11.875020980834961
    3. 'spaces' → logprob: -12.625020980834961
    4. '   ' → logprob: -12.750020980834961
    5. 'ace' → logprob: -13.625020980834961
    6. 'ces' → logprob: -13.750020980834961
    7. '               ' → logprob: -14.250020980834961
    8. '           ' → logprob: -14.375020980834961
    9. '       ' → logprob: -14.625020980834961
    10. 'laces' → logprob: -14.750020980834961

Token 2039: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007107630372047424
    2. '[top' → logprob: -7.250710964202881
    3. 'top' → logprob: -15.375710487365723
    4. '           ' → logprob: -15.625710487365723
    5. 'space' → logprob: -15.875710487365723
    6. '(space' → logprob: -15.875710487365723
    7. '[
' → logprob: -17.00071144104004
    8. '               ' → logprob: -17.12571144104004
    9. ' [' → logprob: -17.37571144104004
    10. '       ' → logprob: -18.00071144104004

Token 2040: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -11.62501049041748
    3. '(space' → logprob: -13.87501049041748
    4. ' space' → logprob: -15.37501049041748
    5. 'pace' → logprob: -15.50001049041748
    6. '   ' → logprob: -19.000009536743164
    7. '
' → logprob: -19.500009536743164
    8. '       ' → logprob: -19.875009536743164
    9. 'spaces' → logprob: -20.500009536743164
    10. '[
' → logprob: -20.750009536743164

Token 2041: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.04537571594119072
    2. 'space' → logprob: -3.6703758239746094
    3. '[' → logprob: -4.170375823974609
    4. 'idx' → logprob: -6.545375823974609
    5. 'top' → logprob: -7.920375823974609
    6. '_index' → logprob: -8.67037582397461
    7. 'Idx' → logprob: -8.67037582397461
    8. 'index' → logprob: -8.79537582397461
    9. '-' → logprob: -8.79537582397461
    10. '[top' → logprob: -8.92037582397461

Token 2042: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3868829607963562
    2. ' -' → logprob: -1.136883020401001
    3. '           ' → logprob: -12.261882781982422
    4. '.index' → logprob: -13.011882781982422
    5. '[' → logprob: -13.886882781982422
    6. 'index' → logprob: -14.011882781982422
    7. ' ' → logprob: -14.761882781982422
    8. '       ' → logprob: -14.761882781982422
    9. '   ' → logprob: -15.136882781982422
    10. ']' → logprob: -15.386882781982422

Token 2043: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.158350151963532e-05
    2. '0' → logprob: -10.375061988830566
    3. ' ' → logprob: -10.625061988830566
    4. '-' → logprob: -12.375061988830566
    5. '   ' → logprob: -14.562561988830566
    6. '```' → logprob: -15.375061988830566
    7. '           ' → logprob: -15.750061988830566
    8. '
' → logprob: -15.937561988830566
    9. 'None' → logprob: -16.68756103515625
    10. '#' → logprob: -16.68756103515625

Token 2044: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '-' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '0' → logprob: -15.125004768371582
    5. '   ' → logprob: -16.3750057220459
    6. '```' → logprob: -16.5625057220459
    7. '2' → logprob: -17.5000057220459
    8. '           ' → logprob: -18.3750057220459
    9. '       ' → logprob: -18.6250057220459
    10. '１' → logprob: -18.9375057220459

Token 2045: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055655527859926224
    2. ']
' → logprob: -2.9306554794311523
    3. ']' → logprob: -8.055655479431152
    4. '       ' → logprob: -8.555655479431152
    5. ')
' → logprob: -9.430655479431152
    6. '               ' → logprob: -9.805655479431152
    7. '
' → logprob: -10.180655479431152
    8. '            
' → logprob: -10.930655479431152
    9. '   ' → logprob: -11.305655479431152
    10. 'if' → logprob: -11.555655479431152

Token 2046: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008521550917066634
    2. 'if' → logprob: -7.375852108001709
    3. 'bottom' → logprob: -9.125852584838867
    4. '       ' → logprob: -10.000852584838867
    5. '```' → logprob: -10.500852584838867
    6. '   ' → logprob: -10.625852584838867
    7. ' if' → logprob: -11.375852584838867
    8. ' bottom' → logprob: -12.125852584838867
    9. '               ' → logprob: -13.750852584838867
    10. '
' → logprob: -14.875852584838867

Token 2047: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4463041126728058
    2. 'if' → logprob: -1.1963040828704834
    3. 'bottom' → logprob: -2.9463040828704834
    4. 'b' → logprob: -6.0713043212890625
    5. '       ' → logprob: -6.5713043212890625
    6. ' if' → logprob: -6.9463043212890625
    7. '   ' → logprob: -8.571304321289062
    8. ' bottom' → logprob: -8.696304321289062
    9. '```' → logprob: -9.196304321289062
    10. '               ' → logprob: -11.321304321289062

Token 2048: ' can' (ID: 665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04113567993044853
    2. '           ' → logprob: -3.291135787963867
    3. 'bottom' → logprob: -5.916135787963867
    4. ' if' → logprob: -8.541135787963867
    5. '   ' → logprob: -9.291135787963867
    6. '       ' → logprob: -9.916135787963867
    7. 'b' → logprob: -9.916135787963867
    8. ' bottom' → logprob: -12.666135787963867
    9. '```' → logprob: -14.041135787963867
    10. '               ' → logprob: -14.666135787963867

Token 2049: ' depart' (ID: 14182)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.9915052652359009
    2. '_depart' → logprob: -1.2415052652359009
    3. '_' → logprob: -1.7415052652359009
    4. '_bottom' → logprob: -3.3665051460266113
    5. '_remove' → logprob: -3.4915051460266113
    6. 'top' → logprob: -4.116505146026611
    7. 'if' → logprob: -4.366505146026611
    8. 'not' → logprob: -4.366505146026611
    9. '           ' → logprob: -4.741505146026611
    10. 'depart' → logprob: -4.741505146026611

Token 2050: ' only' (ID: 1606)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5728102326393127
    2. 'if' → logprob: -0.9478102326393127
    3. '           ' → logprob: -3.072810173034668
    4. ' =' → logprob: -6.572810173034668
    5. '=' → logprob: -7.822810173034668
    6. 'only' → logprob: -8.572810173034668
    7. ' only' → logprob: -9.947810173034668
    8. '       ' → logprob: -10.697810173034668
    9. 'iff' → logprob: -10.697810173034668
    10. '            ' → logprob: -11.322810173034668

Token 2051: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04914499819278717
    2. ' if' → logprob: -3.049144983291626
    3. '           ' → logprob: -7.549145221710205
    4. '=' → logprob: -11.049144744873047
    5. 'top' → logprob: -12.049144744873047
    6. '       ' → logprob: -13.049144744873047
    7. '(top' → logprob: -13.924144744873047
    8. '               ' → logprob: -13.924144744873047
    9. 'iff' → logprob: -13.924144744873047
    10. '            ' → logprob: -14.174144744873047

Token 2052: ' bottom' (ID: 8725)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -9.353008499601856e-05
    2. ' space' → logprob: -9.500093460083008
    3. '(space' → logprob: -11.250093460083008
    4. '           ' → logprob: -12.125093460083008
    5. 'self' → logprob: -16.250093460083008
    6. '               ' → logprob: -17.125093460083008
    7. 'top' → logprob: -18.625093460083008
    8. 'bottom' → logprob: -19.375093460083008
    9. 'spaces' → logprob: -19.500093460083008
    10. '(' → logprob: -19.625093460083008

Token 2053: ' is' (ID: 382)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7720058560371399
    2. '_car' → logprob: -1.0220057964324951
    3. 'space' → logprob: -2.397005796432495
    4. 'is' → logprob: -3.272005796432495
    5. ' is' → logprob: -3.647005796432495
    6. '(space' → logprob: -5.022006034851074
    7. '           ' → logprob: -5.522006034851074
    8. ' space' → logprob: -6.022006034851074
    9. '```' → logprob: -6.397006034851074
    10. 'Car' → logprob: -6.397006034851074

Token 2054: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019619399681687355
    2. 'space' → logprob: -6.626961708068848
    3. ' None' → logprob: -7.376961708068848
    4. '           ' → logprob: -12.251961708068848
    5. '(None' → logprob: -13.126961708068848
    6. 'none' → logprob: -13.751961708068848
    7. ' space' → logprob: -13.751961708068848
    8. '   ' → logprob: -14.001961708068848
    9. '(space' → logprob: -15.126961708068848
    10. '       ' → logprob: -16.376962661743164

Token 2055: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4949435889720917
    2. ' or' → logprob: -1.369943618774414
    3. 'or' → logprob: -1.994943618774414
    4. 'and' → logprob: -9.369943618774414
    5. ' and' → logprob: -9.869943618774414
    6. '               ' → logprob: -10.244943618774414
    7. '```' → logprob: -10.869943618774414
    8. '          ' → logprob: -11.244943618774414
    9. '   ' → logprob: -11.619943618774414
    10. ',' → logprob: -12.119943618774414

Token 2056: ' bottom' (ID: 8725)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.03042902611196041
    2. '(space' → logprob: -3.5304291248321533
    3. 'top' → logprob: -8.280428886413574
    4. 'bottom' → logprob: -9.280428886413574
    5. '(top' → logprob: -9.530428886413574
    6. ' space' → logprob: -9.655428886413574
    7. '(b' → logprob: -9.780428886413574
    8. '(bottom' → logprob: -10.280428886413574
    9. '(t' → logprob: -11.030428886413574
    10. '(not' → logprob: -11.155428886413574

Token 2057: ' has' (ID: 853)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.135872483253479
    2. '_car' → logprob: -1.135872483253479
    3. ' is' → logprob: -1.885872483253479
    4. '.car' → logprob: -2.2608723640441895
    5. 'is' → logprob: -2.3858723640441895
    6. '.is' → logprob: -5.6358723640441895
    7. '.' → logprob: -6.1358723640441895
    8. '.depart' → logprob: -7.2608723640441895
    9. 'Car' → logprob: -7.3858723640441895
    10. '   ' → logprob: -8.135872840881348

Token 2058: ' departure' (ID: 40493)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2330828309059143
    2. 'depart' → logprob: -1.8580827713012695
    3. 'car' → logprob: -4.7330827713012695
    4. 'none' → logprob: -4.8580827713012695
    5. 'is' → logprob: -4.9830827713012695
    6. 'bottom' → logprob: -5.1080827713012695
    7. 'left' → logprob: -5.2330827713012695
    8. 'been' → logprob: -5.3580827713012695
    9. 'space' → logprob: -5.7330827713012695
    10. ' None' → logprob: -5.8580827713012695

Token 2059: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.022219769656658173
    2. 'time' → logprob: -3.897219657897949
    3. 'ed' → logprob: -7.147219657897949
    4. '           ' → logprob: -8.39721965789795
    5. '       ' → logprob: -8.89721965789795
    6. '   ' → logprob: -9.02221965789795
    7. 'done' → logprob: -9.14721965789795
    8. 'passed' → logprob: -10.14721965789795
    9. 'completed' → logprob: -10.27221965789795
    10. 'car' → logprob: -10.27221965789795

Token 2060: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6426494121551514
    2. '<' → logprob: -0.7676494121551514
    3. ' <=' → logprob: -5.3926496505737305
    4. ' <' → logprob: -5.5176496505737305
    5. 'and' → logprob: -7.0176496505737305
    6. '>' → logprob: -8.64264965057373
    7. '>=' → logprob: -9.64264965057373
    8. 'passed' → logprob: -9.76764965057373
    9. 'or' → logprob: -10.01764965057373
    10. '```' → logprob: -10.51764965057373

Token 2061: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00031699295504949987
    2. 'top' → logprob: -8.750316619873047
    3. ' self' → logprob: -9.500316619873047
    4. 'space' → logprob: -10.000316619873047
    5. 'current' → logprob: -10.750316619873047
    6. '
' → logprob: -12.500316619873047
    7. '(self' → logprob: -12.500316619873047
    8. '=self' → logprob: -12.750316619873047
    9. 'time' → logprob: -13.125316619873047
    10. '	self' → logprob: -13.750316619873047

Token 2062: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5770468711853027
    2. 'time' → logprob: -0.8270468711853027
    3. 'self' → logprob: -6.952046871185303
    4. ' time' → logprob: -9.327047348022461
    5. 'car' → logprob: -11.077047348022461
    6. 'Time' → logprob: -11.452047348022461
    7. '
' → logprob: -11.952047348022461
    8. '   ' → logprob: -11.952047348022461
    9. '0' → logprob: -13.077047348022461
    10. '           ' → logprob: -13.327047348022461

Token 2063: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3651939332485199
    2. ' or' → logprob: -1.3651939630508423
    3. 'or' → logprob: -3.3651938438415527
    4. ' and' → logprob: -4.740193843841553
    5. 'and' → logprob: -5.615193843841553
    6. '               ' → logprob: -6.365193843841553
    7. '
' → logprob: -7.240193843841553
    8. '```' → logprob: -7.365193843841553
    9. ':
' → logprob: -8.865194320678711
    10. '       ' → logprob: -9.365194320678711

Token 2064: 'already' (ID: 89136)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02008339948952198
    2. ' self' → logprob: -4.395083427429199
    3. 'top' → logprob: -5.395083427429199
    4. 'space' → logprob: -6.270083427429199
    5. 'or' → logprob: -8.2700834274292
    6. '0' → logprob: -9.0200834274292
    7. ')' → logprob: -9.1450834274292
    8. '           ' → logprob: -9.2700834274292
    9. ' or' → logprob: -9.6450834274292
    10. ' top' → logprob: -9.7700834274292

Token 2065: ' departing' (ID: 126080)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3221031725406647
    2. '0' → logprob: -2.822103261947632
    3. '<' → logprob: -2.947103261947632
    4. 'current' → logprob: -3.072103261947632
    5. 'in' → logprob: -3.322103261947632
    6. '<=' → logprob: -3.447103261947632
    7. 'processed' → logprob: -5.322103023529053
    8. 'passed' → logprob: -5.322103023529053
    9. 'removed' → logprob: -5.447103023529053
    10. ' self' → logprob: -5.697103023529053

Token 2066: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3600582778453827
    2. 'or' → logprob: -2.110058307647705
    3. ' or' → logprob: -2.485058307647705
    4. '           ' → logprob: -2.860058307647705
    5. ')' → logprob: -3.735058307647705
    6. '               ' → logprob: -5.235058307647705
    7. '       ' → logprob: -5.735058307647705
    8. '):
' → logprob: -6.485058307647705
    9. 'now' → logprob: -6.860058307647705
    10. 'time' → logprob: -6.985058307647705

Token 2067: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013272607466205955
    2. ' or' → logprob: -7.376327037811279
    3. ' and' → logprob: -7.751327037811279
    4. '```' → logprob: -9.126327514648438
    5. '
' → logprob: -9.501327514648438
    6. ' if' → logprob: -10.251327514648438
    7. 'and' → logprob: -10.376327514648438
    8. '               ' → logprob: -11.876327514648438
    9. ',' → logprob: -12.501327514648438
    10. 'or' → logprob: -13.001327514648438

Token 2068: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2633124887943268
    2. 'if' (adapté à ' if') → logprob: -1.5133124589920044
    3. ' if' → logprob: -4.513312339782715
    4. 'bottom' → logprob: -8.138312339782715
    5. '   ' → logprob: -10.513312339782715
    6. '       ' → logprob: -11.013312339782715
    7. ' bottom' → logprob: -11.138312339782715
    8. '               ' → logprob: -13.513312339782715
    9. '```' → logprob: -13.888312339782715
    10. 'b' → logprob: -14.013312339782715

Token 2069: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.10070250928401947
    2. '(space' → logprob: -2.3507025241851807
    3. ' space' → logprob: -8.975702285766602
    4. '           ' → logprob: -8.975702285766602
    5. 'not' → logprob: -9.475702285766602
    6. '   ' → logprob: -10.475702285766602
    7. '(not' → logprob: -10.475702285766602
    8. '(
' → logprob: -10.850702285766602
    9. ' (' → logprob: -11.100702285766602
    10. '(' → logprob: -11.350702285766602

Token 2070: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -1.9266199160483666e-05
    2. '           ' → logprob: -11.750019073486328
    3. 'bottom' → logprob: -12.625019073486328
    4. '.' → logprob: -12.875019073486328
    5. '   ' → logprob: -13.625019073486328
    6. ' .' → logprob: -14.000019073486328
    7. '       ' → logprob: -14.125019073486328
    8. '.top' → logprob: -14.250019073486328
    9. ').' → logprob: -15.375019073486328
    10. '.lower' → logprob: -15.375019073486328

Token 2071: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6103703379631042
    2. ' is' → logprob: -1.360370397567749
    3. '[' → logprob: -1.610370397567749
    4. '[top' → logprob: -8.235370635986328
    5. '           ' → logprob: -9.610370635986328
    6. '==' → logprob: -10.610370635986328
    7. '.is' → logprob: -10.735370635986328
    8. '(space' → logprob: -11.110370635986328
    9. ' ' → logprob: -11.360370635986328
    10. '```' → logprob: -11.735370635986328

Token 2072: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.165027217415627e-05
    2. ' None' → logprob: -10.750021934509277
    3. '(None' → logprob: -16.25002098083496
    4. '   ' → logprob: -16.87502098083496
    5. 'none' → logprob: -18.00002098083496
    6. '_None' → logprob: -19.25002098083496
    7. '           ' → logprob: -19.75002098083496
    8. '=None' → logprob: -20.12502098083496
    9. '       ' → logprob: -21.25002098083496
    10. '_none' → logprob: -21.62502098083496

Token 2073: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06371496617794037
    2. 'or' → logprob: -2.8137149810791016
    3. '               ' → logprob: -6.438714981079102
    4. '           ' → logprob: -9.313714981079102
    5. ':
' → logprob: -10.438714981079102
    6. '              ' → logprob: -11.688714981079102
    7. '	or' → logprob: -11.938714981079102
    8. '            ' → logprob: -12.438714981079102
    9. '                ' → logprob: -13.438714981079102
    10. ':' → logprob: -13.438714981079102

Token 2074: ' (' (ID: 350)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -2.5822400857578032e-05
    2. '(space' → logprob: -11.250025749206543
    3. ' space' → logprob: -11.500025749206543
    4. '           ' → logprob: -14.000025749206543
    5. 'self' → logprob: -14.125025749206543
    6. '               ' → logprob: -14.500025749206543
    7. '   ' → logprob: -15.500025749206543
    8. 'not' → logprob: -15.500025749206543
    9. 'time' → logprob: -16.87502670288086
    10. '                   ' → logprob: -17.00002670288086

Token 2075: 'space' (ID: 8775)
  Prédit: 'space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.0325924449716695e-05
    2. ' space' → logprob: -11.75001049041748
    3. 'self' → logprob: -13.37501049041748
    4. '(space' → logprob: -14.87501049041748
    5. '   ' → logprob: -15.75001049041748
    6. '           ' → logprob: -15.87501049041748
    7. 'not' → logprob: -16.500009536743164
    8. '               ' → logprob: -16.875009536743164
    9. '
' → logprob: -17.750009536743164
    10. 'time' → logprob: -17.875009536743164

Token 2076: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.00015109812375158072
    2. 'bottom' → logprob: -9.500150680541992
    3. '.current' → logprob: -10.125150680541992
    4. '.sp' → logprob: -11.250150680541992
    5. '
' → logprob: -12.250150680541992
    6. '.' → logprob: -12.375150680541992
    7. '.top' → logprob: -12.625150680541992
    8. '   ' → logprob: -13.375150680541992
    9. '.space' → logprob: -14.125150680541992
    10. ' .' → logprob: -14.375150680541992

Token 2077: '.depart' (ID: 192809)
  Prédit: '.depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depart' → logprob: -0.00021331508469302207
    2. 'departure' → logprob: -8.875213623046875
    3. '.' → logprob: -10.000213623046875
    4. '.is' → logprob: -12.500213623046875
    5. '.department' → logprob: -12.500213623046875
    6. ' is' → logprob: -12.500213623046875
    7. 'depart' → logprob: -12.875213623046875
    8. '.dead' → logprob: -13.000213623046875
    9. 'and' → logprob: -13.250213623046875
    10. '.leave' → logprob: -13.375213623046875

Token 2078: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.008634896948933601
    2. '_time' → logprob: -4.7586350440979
    3. 'time' → logprob: -12.008634567260742
    4. '__' → logprob: -12.508634567260742
    5. 'ature' → logprob: -13.383634567260742
    6. '
' → logprob: -13.508634567260742
    7. '```' → logprob: -14.258634567260742
    8. 'URE' → logprob: -14.383634567260742
    9. 'art' → logprob: -14.508634567260742
    10. 'iture' → logprob: -14.633634567260742

Token 2079: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.77627644513268e-06
    2. 'time' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.875008583068848
    4. 'Time' → logprob: -16.250009536743164
    5. '<=' → logprob: -16.375009536743164
    6. '_' → logprob: -17.250009536743164
    7. 'self' → logprob: -17.375009536743164
    8. '_TIME' → logprob: -17.750009536743164
    9. ' time' → logprob: -17.875009536743164
    10. ')' → logprob: -18.000009536743164

Token 2080: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6931589245796204
    2. '<=' → logprob: -0.6931589245796204
    3. '           ' → logprob: -12.693159103393555
    4. ' ' → logprob: -13.318159103393555
    5. '```' → logprob: -13.318159103393555
    6. '   ' → logprob: -13.568159103393555
    7. ')<=' → logprob: -14.193159103393555
    8. ')' → logprob: -14.693159103393555
    9. '       ' → logprob: -14.818159103393555
    10. '          ' → logprob: -14.943159103393555

Token 2081: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.143808109802194e-05
    2. ' self' → logprob: -10.125041007995605
    3. '           ' → logprob: -13.875041007995605
    4. '       ' → logprob: -15.500041007995605
    5. '	self' → logprob: -16.375041961669922
    6. '   ' → logprob: -16.875041961669922
    7. '(self' → logprob: -16.875041961669922
    8. '=self' → logprob: -17.375041961669922
    9. '
' → logprob: -17.500041961669922
    10. '               ' → logprob: -18.125041961669922

Token 2082: '.current' (ID: 8357)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0005194319528527558
    2. '.current' → logprob: -7.625519275665283
    3. ' current' → logprob: -10.625519752502441
    4. 'self' → logprob: -12.125519752502441
    5. 'space' → logprob: -14.500519752502441
    6. '_current' → logprob: -15.250519752502441
    7. 'car' → logprob: -15.375519752502441
    8. 'user' → logprob: -15.500519752502441
    9. '
' → logprob: -15.750519752502441
    10. 'urrent' → logprob: -16.125518798828125

Token 2083: '_time' (ID: 6425)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01238237600773573
    2. 'time' → logprob: -4.762382507324219
    3. 'token' → logprob: -6.387382507324219
    4. 'car' → logprob: -6.512382507324219
    5. '_time' → logprob: -7.887382507324219
    6. '_token' → logprob: -10.387382507324219
    7. '       ' → logprob: -10.512382507324219
    8. ' self' → logprob: -10.637382507324219
    9. '.time' → logprob: -10.887382507324219
    10. '   ' → logprob: -11.012382507324219

Token 2084: ' and' (ID: 326)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004846853669732809
    2. ' and' → logprob: -6.004847049713135
    3. '               ' → logprob: -7.129847049713135
    4. 'and' → logprob: -7.254847049713135
    5. '):' → logprob: -7.754847049713135
    6. '           ' → logprob: -8.379846572875977
    7. ')' → logprob: -9.379846572875977
    8. ' ):
' → logprob: -9.879846572875977
    9. ':
' → logprob: -10.754846572875977
    10. '):

' → logprob: -10.879846572875977

Token 2085: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.02511439472436905
    2. '(space' → logprob: -4.2751145362854
    3. 'not' → logprob: -5.4001145362854
    4. 'top' → logprob: -6.1501145362854
    5. 'all' → logprob: -6.2751145362854
    6. '(not' → logprob: -6.9001145362854
    7. 'self' → logprob: -7.2751145362854
    8. 'any' → logprob: -8.400114059448242
    9. 'len' → logprob: -9.150114059448242
    10. 'car' → logprob: -9.775114059448242

Token 2086: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.001981687266379595
    2. 'bottom' → logprob: -6.751981735229492
    3. '.sp' → logprob: -7.751981735229492
    4. '.top' → logprob: -8.751981735229492
    5. '.output' → logprob: -10.001981735229492
    6. '.current' → logprob: -10.126981735229492
    7. '   ' → logprob: -11.001981735229492
    8. '.' → logprob: -11.126981735229492
    9. '.space' → logprob: -11.251981735229492
    10. ' ' → logprob: -11.501981735229492

Token 2087: ' not' (ID: 625)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11855296045541763
    2. '.depart' → logprob: -3.1185529232025146
    3. ' not' → logprob: -3.3685529232025146
    4. ' in' → logprob: -3.9935529232025146
    5. ' is' → logprob: -5.118553161621094
    6. 'not' → logprob: -5.368553161621094
    7. 'park' → logprob: -7.243553161621094
    8. 'in' → logprob: -7.493553161621094
    9. '.is' → logprob: -7.493553161621094
    10. '.car' → logprob: -7.868553161621094

Token 2088: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2520690858364105
    2. ' in' → logprob: -1.502069115638733
    3. '           ' → logprob: -9.877069473266602
    4. 'self' → logprob: -9.877069473266602
    5. '   ' → logprob: -10.877069473266602
    6. '       ' → logprob: -12.127069473266602
    7. ' ' → logprob: -13.127069473266602
    8. '
' → logprob: -13.502069473266602
    9. '         ' → logprob: -13.627069473266602
    10. '          ' → logprob: -13.627069473266602

Token 2089: ' bottom' (ID: 8725)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2560647130012512
    2. 'bottom' → logprob: -1.6310646533966064
    3. '[self' → logprob: -4.3810648918151855
    4. 'top' → logprob: -4.5060648918151855
    5. 'depart' → logprob: -5.8810648918151855
    6. '[' → logprob: -6.1310648918151855
    7. '[top' → logprob: -6.6310648918151855
    8. '[b' → logprob: -9.506064414978027
    9. '(self' → logprob: -10.006064414978027
    10. ' self' → logprob: -10.381064414978027

Token 2090: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.012495988979935646
    2. '_depart' → logprob: -4.637495994567871
    3. '
' → logprob: -7.387495994567871
    4. '._' → logprob: -7.637495994567871
    5. 'cars' → logprob: -7.762495994567871
    6. '_car' → logprob: -8.762495994567871
    7. ')' → logprob: -9.137495994567871
    8. '_top' → logprob: -9.137495994567871
    9. 'depart' → logprob: -9.262495994567871
    10. '.depart' → logprob: -9.387495994567871

Token 2091: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.34532666206359863
    2. 'ar' → logprob: -1.4703266620635986
    3. '_depart' → logprob: -3.4703266620635986
    4. 'depart' → logprob: -4.4703264236450195
    5. '[' → logprob: -5.8453264236450195
    6. 'aring' → logprob: -5.9703264236450195
    7. '_c' → logprob: -6.0953264236450195
    8. '_arr' → logprob: -6.3453264236450195
    9. '[]' → logprob: -6.3453264236450195
    10. 'arr' → logprob: -6.8453264236450195

Token 2092: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.00494127394631505
    2. 'depart' → logprob: -5.379941463470459
    3. '_de' → logprob: -8.7549409866333
    4. '_dep' → logprob: -10.3799409866333
    5. 'Depart' → logprob: -10.7549409866333
    6. '.depart' → logprob: -11.2549409866333
    7. '
' → logprob: -11.5049409866333
    8. ')' → logprob: -11.5049409866333
    9. '[' → logprob: -11.6299409866333
    10. '_department' → logprob: -11.7549409866333

Token 2093: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0002613358374219388
    2. 'ed' → logprob: -9.000261306762695
    3. 'ging' → logprob: -9.250261306762695
    4. 'uring' → logprob: -10.875261306762695
    5. 'ng' → logprob: -12.250261306762695
    6. 'eing' → logprob: -12.875261306762695
    7. 'inging' → logprob: -13.000261306762695
    8. '_ing' → logprob: -13.250261306762695
    9. 'uing' → logprob: -13.375261306762695
    10. 'g' → logprob: -13.625261306762695

Token 2094: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006713005714118481
    2. '           ' → logprob: -5.881712913513184
    3. '):' → logprob: -6.256712913513184
    4. ')' → logprob: -7.631712913513184
    5. ' and' → logprob: -7.631712913513184
    6. '               ' → logprob: -7.881712913513184
    7. 'and' → logprob: -8.381712913513184
    8. ' ):
' → logprob: -8.631712913513184
    9. '):

' → logprob: -9.256712913513184
    10. '          ' → logprob: -10.631712913513184

Token 2095: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004691306967288256
    2. '           ' → logprob: -6.379691123962402
    3. 'continue' → logprob: -6.754691123962402
    4. ' and' → logprob: -7.129691123962402
    5. ' continue' → logprob: -8.129691123962402
    6. ':
' → logprob: -8.254691123962402
    7. 'and' → logprob: -8.629691123962402
    8. '
' → logprob: -9.254691123962402
    9. 'top' → logprob: -10.004691123962402
    10. '              ' → logprob: -10.504691123962402

Token 2096: ' top' (ID: 2344)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1324668526649475
    2. 'continue' → logprob: -2.8824667930603027
    3. 'top' (adapté à ' top') → logprob: -3.3824667930603027
    4. '           ' → logprob: -3.5074667930603027
    5. ' continue' → logprob: -5.882466793060303
    6. '                   ' → logprob: -7.507466793060303
    7. ' top' → logprob: -7.632466793060303
    8. '
' → logprob: -9.007467269897461
    9. '```' → logprob: -9.507467269897461
    10. '   ' → logprob: -10.632467269897461

Token 2097: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00010914575977949426
    2. '_car' → logprob: -9.50010871887207
    3. 'car' → logprob: -11.00010871887207
    4. 'cars' → logprob: -11.12510871887207
    5. '
' → logprob: -13.87510871887207
    6. '           ' → logprob: -15.25010871887207
    7. 'Cars' → logprob: -15.50010871887207
    8. '=' → logprob: -15.62510871887207
    9. 'c' → logprob: -15.75010871887207
    10. 'Car' → logprob: -16.25010871887207

Token 2098: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.19877742230892181
    2. '_c' → logprob: -1.823777437210083
    3. 'ar' → logprob: -4.073777198791504
    4. 'cars' → logprob: -6.448777198791504
    5. '_ar' → logprob: -9.448777198791504
    6. 'aras' → logprob: -10.448777198791504
    7. '_' → logprob: -10.823777198791504
    8. '
' → logprob: -10.948777198791504
    9. '_car' → logprob: -11.198777198791504
    10. '#' → logprob: -11.448777198791504

Token 2099: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.001463692169636488
    2. '.append' → logprob: -7.501463890075684
    3. 'depart' → logprob: -7.626463890075684
    4. '_de' → logprob: -8.001463890075684
    5. '_c' → logprob: -10.376463890075684
    6. '_top' → logprob: -10.876463890075684
    7. 'Depart' → logprob: -11.876463890075684
    8. '_dep' → logprob: -12.001463890075684
    9. '           ' → logprob: -12.751463890075684
    10. '=' → logprob: -13.001463890075684

Token 2100: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.014752520248293877
    2. 'aring' → logprob: -5.639752388000488
    3. 'uring' → logprob: -6.139752388000488
    4. 'uting' → logprob: -6.264752388000488
    5. 'art' → logprob: -6.389752388000488
    6. 'ng' → logprob: -6.764752388000488
    7. 'ting' → logprob: -6.889752388000488
    8. 'iting' → logprob: -7.139752388000488
    9. '
' → logprob: -7.639752388000488
    10. 'ating' → logprob: -7.764752388000488

Token 2101: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.337155355140567e-05
    2. '.' → logprob: -10.375062942504883
    3. '           ' → logprob: -10.750062942504883
    4. '.extend' → logprob: -12.375062942504883
    5. 'append' → logprob: -12.750062942504883
    6. ' .' → logprob: -13.500062942504883
    7. '               ' → logprob: -13.750062942504883
    8. '.remove' → logprob: -14.875062942504883
    9. '                   ' → logprob: -15.500062942504883
    10. '=' → logprob: -15.875062942504883

Token 2102: '(top' (ID: 42605)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.35468414425849915
    2. '(top' → logprob: -1.2296841144561768
    3. ' top' → logprob: -5.104684352874756
    4. ' (' → logprob: -9.229683876037598
    5. '(' → logprob: -10.354683876037598
    6. '[top' → logprob: -12.354683876037598
    7. '	top' → logprob: -12.354683876037598
    8. '   ' → logprob: -12.729683876037598
    9. '           ' → logprob: -13.104683876037598
    10. '(t' → logprob: -13.229683876037598

Token 2103: '_car' (ID: 62991)
  Prédit: '(top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.19899922609329224
    2. '_car' → logprob: -1.9489991664886475
    3. 'top' → logprob: -3.5739991664886475
    4. '(' → logprob: -5.573999404907227
    5. '(space' → logprob: -6.323999404907227
    6. '_top' → logprob: -6.448999404907227
    7. 'car' → logprob: -6.948999404907227
    8. '_c' → logprob: -7.323999404907227
    9. '(car' → logprob: -8.573999404907227
    10. '[top' → logprob: -8.698999404907227

Token 2104: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7480250597000122
    2. '           ' → logprob: -1.1230250597000122
    3. ')' → logprob: -1.8730250597000122
    4. '       ' → logprob: -3.3730249404907227
    5. '               ' → logprob: -4.498024940490723
    6. '
' → logprob: -7.123024940490723
    7. ')

' → logprob: -7.373024940490723
    8. '                   ' → logprob: -8.998024940490723
    9. ')return' → logprob: -9.248024940490723
    10. '[' → logprob: -9.498024940490723

Token 2105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017741423100233078
    2. '       ' → logprob: -4.1427412033081055
    3. '               ' → logprob: -6.7677412033081055
    4. '```' → logprob: -8.017741203308105
    5. 'continue' → logprob: -9.642741203308105
    6. ' continue' → logprob: -9.767741203308105
    7. '<|end|>' → logprob: -10.267741203308105
    8. 'Continue' → logprob: -10.642741203308105
    9. 'Continu' → logprob: -11.642741203308105
    10. '_continue' → logprob: -12.267741203308105

Token 2106: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28005319833755493
    2. '       ' → logprob: -1.6550531387329102
    3. '<|end|>' → logprob: -3.15505313873291
    4. '
' → logprob: -5.90505313873291
    5. ')' → logprob: -6.15505313873291
    6. '               ' → logprob: -6.53005313873291
    7. 'continue' → logprob: -7.53005313873291
    8. '<|end|>' → logprob: -7.65505313873291
    9. ' ' → logprob: -7.78005313873291
    10. 'return' → logprob: -8.28005313873291

Token 2107: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03322628140449524
    2. ':
' → logprob: -3.533226251602173
    3. ':' → logprob: -6.033226490020752
    4. '           ' → logprob: -7.533226490020752
    5. ' continue' → logprob: -8.533226013183594
    6. 'continue' → logprob: -8.658226013183594
    7. '              ' → logprob: -10.158226013183594
    8. ' if' → logprob: -11.033226013183594
    9. '       ' → logprob: -11.158226013183594
    10. ',' → logprob: -11.408226013183594

Token 2108: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009454108658246696
    2. '           ' → logprob: -7.625945568084717
    3. 'continue' → logprob: -8.500945091247559
    4. ' continue' → logprob: -9.125945091247559
    5. 'top' → logprob: -10.750945091247559
    6. '                   ' → logprob: -10.875945091247559
    7. '
' → logprob: -11.000945091247559
    8. '```' → logprob: -11.125945091247559
    9. '              ' → logprob: -11.250945091247559
    10. '       ' → logprob: -11.375945091247559

Token 2109: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05388728901743889
    2. '               ' → logprob: -3.303887367248535
    3. 'pass' → logprob: -4.553887367248535
    4. '#' (adapté à ' #') → logprob: -5.553887367248535
    5. 'top' → logprob: -7.428887367248535
    6. ' continue' → logprob: -8.178887367248535
    7. '                   ' → logprob: -8.428887367248535
    8. '           ' → logprob: -8.928887367248535
    9. 'None' → logprob: -10.053887367248535
    10. 'break' → logprob: -11.428887367248535

Token 2110: ' must' (ID: 2804)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3665584921836853
    2. '               ' → logprob: -1.36655855178833
    3. '#' → logprob: -3.74155855178833
    4. 'pass' → logprob: -4.49155855178833
    5. ' continue' → logprob: -4.74155855178833
    6. 'top' → logprob: -4.86655855178833
    7. ' pass' → logprob: -8.866558074951172
    8. '           ' → logprob: -9.366558074951172
    9. 'None' → logprob: -9.741558074951172
    10. ' #' → logprob: -9.866558074951172

Token 2111: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.39564916491508484
    2. 'continue' → logprob: -1.1456491947174072
    3. 'not' → logprob: -5.395648956298828
    4. 'top' → logprob: -6.145648956298828
    5. ' wait' → logprob: -6.770648956298828
    6. 'keep' → logprob: -8.145648956298828
    7. ' continue' → logprob: -8.645648956298828
    8. '               ' → logprob: -8.895648956298828
    9. 'waiting' → logprob: -9.270648956298828
    10. '           ' → logprob: -10.020648956298828

Token 2112: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5623049139976501
    2. 'continue' → logprob: -0.9373049139976501
    3. ' continue' → logprob: -3.437304973602295
    4. '       ' → logprob: -5.187304973602295
    5. '           ' → logprob: -8.312304496765137
    6. '
' → logprob: -9.312304496765137
    7. '#' → logprob: -9.562304496765137
    8. 'Continue' → logprob: -9.687304496765137
    9. '```' → logprob: -9.937304496765137
    10. '_continue' → logprob: -11.062304496765137

Token 2113: ' bottom' (ID: 8725)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.5995765924453735
    2. 'bottom' → logprob: -0.8495765924453735
    3. 'the' → logprob: -4.224576473236084
    4. 'False' → logprob: -5.724576473236084
    5. 'True' → logprob: -6.724576473236084
    6. ' space' → logprob: -6.974576473236084
    7. 'None' → logprob: -7.099576473236084
    8. ' bottom' → logprob: -7.474576473236084
    9. 'departure' → logprob: -7.974576473236084
    10. 'current' → logprob: -8.099576950073242

Token 2114: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7103257775306702
    2. '_car' → logprob: -0.7103257775306702
    3. '_c' → logprob: -4.585325717926025
    4. ' car' → logprob: -6.335325717926025
    5. 'cars' → logprob: -6.710325717926025
    6. '```' → logprob: -7.085325717926025
    7. '_' → logprob: -7.585325717926025
    8. 'space' → logprob: -7.710325717926025
    9. ')' → logprob: -8.085326194763184
    10. '	car' → logprob: -8.585326194763184

Token 2115: '
' (ID: 198)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16587208211421967
    2. ' continue' → logprob: -2.540872097015381
    3. '               ' → logprob: -2.790872097015381
    4. ' to' → logprob: -5.165872097015381
    5. '           ' → logprob: -5.915872097015381
    6. '       ' → logprob: -7.040872097015381
    7. 'to' → logprob: -7.040872097015381
    8. ' for' → logprob: -7.915872097015381
    9. ' continues' → logprob: -8.040871620178223
    10. '```' → logprob: -8.165871620178223

Token 2116: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025258539244532585
    2. 'continue' → logprob: -3.7752585411071777
    3. ' continue' → logprob: -6.900258541107178
    4. '```' → logprob: -7.275258541107178
    5. '       ' → logprob: -8.40025806427002
    6. '#' → logprob: -11.52525806427002
    7. 'contin' → logprob: -11.90025806427002
    8. 'Continue' → logprob: -11.90025806427002
    9. '_continue' → logprob: -11.90025806427002
    10. '           ' → logprob: -11.90025806427002

Token 2117: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.010299584828317165
    2. 'pass' (adapté à ' pass') → logprob: -4.7602996826171875
    3. 'top' → logprob: -6.7602996826171875
    4. '               ' → logprob: -8.010299682617188
    5. ' continue' → logprob: -8.885299682617188
    6. '                   ' → logprob: -11.010299682617188
    7. '#' → logprob: -11.135299682617188
    8. '           ' → logprob: -11.760299682617188
    9. 'continu' → logprob: -12.510299682617188
    10. 'space' → logprob: -12.510299682617188

Token 2118: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07479573786258698
    2. '               ' → logprob: -2.699795722961426
    3. '<|end|>' → logprob: -5.699795722961426
    4. 'continue' → logprob: -8.824795722961426
    5. '           ' → logprob: -8.949795722961426
    6. 'Continue' → logprob: -9.074795722961426
    7. '```' → logprob: -9.199795722961426
    8. 'return' → logprob: -9.324795722961426
    9. ' continue' → logprob: -9.449795722961426
    10. ' return' → logprob: -9.449795722961426

Token 2119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009365611709654331
    2. '               ' → logprob: -5.384365558624268
    3. '           ' → logprob: -6.509365558624268
    4. '```' → logprob: -6.884365558624268
    5. '<|end|>' → logprob: -7.884365558624268
    6. '   ' → logprob: -7.884365558624268
    7. 'def' → logprob: -8.384366035461426
    8. ')' → logprob: -8.759366035461426
    9. 'The' → logprob: -9.134366035461426
    10. 'top' → logprob: -9.259366035461426

Token 2120: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1210009977221489
    2. '               ' → logprob: -2.9960010051727295
    3. '           ' → logprob: -3.6210010051727295
    4. ')' → logprob: -4.62100076675415
    5. 'top' → logprob: -4.74600076675415
    6. 'return' → logprob: -5.37100076675415
    7. '+' → logprob: -5.62100076675415
    8. '<|end|>' → logprob: -5.62100076675415
    9. 'continue' → logprob: -6.87100076675415
    10. '   ' → logprob: -7.24600076675415

Token 2121: ' top' (ID: 2344)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8345622420310974
    2. '       ' → logprob: -1.2095623016357422
    3. '#' → logprob: -2.459562301635742
    4. 'bottom' → logprob: -2.709562301635742
    5. 'depart' → logprob: -2.834562301635742
    6. 'top' → logprob: -3.334562301635742
    7. 'result' → logprob: -4.459562301635742
    8. 'all' → logprob: -4.959562301635742
    9. 'departure' → logprob: -7.334562301635742
    10. 'car' → logprob: -8.209562301635742

Token 2122: ' cars' (ID: 13653)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0019580135121941566
    2. 'cars' → logprob: -6.501957893371582
    3. '_depart' → logprob: -8.251957893371582
    4. 'depart' → logprob: -9.751957893371582
    5. '_car' → logprob: -10.376957893371582
    6. ' =' → logprob: -11.376957893371582
    7. '
' → logprob: -11.626957893371582
    8. 'car' → logprob: -11.751957893371582
    9. '#' → logprob: -11.751957893371582
    10. '=' → logprob: -11.876957893371582

Token 2123: ' depart' (ID: 14182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7801385521888733
    2. '_depart' → logprob: -1.1551384925842285
    3. ' =' → logprob: -1.7801384925842285
    4. 'depart' → logprob: -3.1551384925842285
    5. '=[]' → logprob: -5.1551384925842285
    6. 'can' → logprob: -6.0301384925842285
    7. '=[]
' → logprob: -6.2801384925842285
    8. ' departing' → logprob: -7.6551384925842285
    9. '_can' → logprob: -7.7801384925842285
    10. 'must' → logprob: -7.9051384925842285

Token 2124: ' simultaneous' (ID: 102894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.610617995262146
    2. ' =' → logprob: -0.860617995262146
    3. '.extend' → logprob: -4.4856181144714355
    4. '.append' → logprob: -5.4856181144714355
    5. 'final' → logprob: -5.8606181144714355
    6. 'now' → logprob: -5.9856181144714355
    7. '=[]' → logprob: -6.1106181144714355
    8. '_depart' → logprob: -6.2356181144714355
    9. '[:]' → logprob: -6.4856181144714355
    10. 'only' → logprob: -6.6106181144714355

Token 2125: ' after' (ID: 1934)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.7052021622657776
    2. ' =' → logprob: -2.080202102661133
    3. '_top' → logprob: -2.455202102661133
    4. 'with' → logprob: -3.330202102661133
    5. '.append' → logprob: -3.455202102661133
    6. '=True' → logprob: -3.580202102661133
    7. '_with' → logprob: -3.705202102661133
    8. '=' → logprob: -3.830202102661133
    9. ' if' → logprob: -3.830202102661133
    10. '(top' → logprob: -4.080202102661133

Token 2126: ' their' (ID: 1043)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.008341992273926735
    2. 'all' → logprob: -5.2583417892456055
    3. 'the' → logprob: -6.2583417892456055
    4. ' bottom' → logprob: -6.7583417892456055
    5. ' all' → logprob: -12.008341789245605
    6. ' the' → logprob: -12.258341789245605
    7. 'top' → logprob: -12.633341789245605
    8. 'depart' → logprob: -12.883341789245605
    9. '
' → logprob: -13.383341789245605
    10. '   ' → logprob: -13.758341789245605

Token 2127: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.015661371871829033
    2. 'cor' → logprob: -4.515661239624023
    3. 'lower' → logprob: -5.765661239624023
    4. 'res' → logprob: -7.140661239624023
    5. 'associated' → logprob: -8.140661239624023
    6. 'space' → logprob: -9.765661239624023
    7. 'waiting' → logprob: -10.140661239624023
    8. 'dependent' → logprob: -10.140661239624023
    9. 'own' → logprob: -10.640661239624023
    10. 'related' → logprob: -10.765661239624023

Token 2128: ' cars' (ID: 13653)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.4530119001865387
    2. 'cars' → logprob: -1.7030118703842163
    3. 'car' → logprob: -2.078011989593506
    4. '_car' → logprob: -3.328011989593506
    5. '_depart' → logprob: -5.328011989593506
    6. ' cars' → logprob: -5.828011989593506
    7. '```' → logprob: -5.953011989593506
    8. 's' → logprob: -6.203011989593506
    9. '_' → logprob: -6.328011989593506
    10. 'depart' → logprob: -6.453011989593506

Token 2129: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2856365144252777
    2. '
' → logprob: -2.7856364250183105
    3. ' =' → logprob: -3.4106364250183105
    4. ' if' → logprob: -3.4106364250183105
    5. '.extend' → logprob: -3.9106364250183105
    6. ',' → logprob: -4.6606364250183105
    7. '.append' → logprob: -5.0356364250183105
    8. 'and' → logprob: -5.1606364250183105
    9. '(top' → logprob: -5.2856364250183105
    10. '_depart' → logprob: -5.5356364250183105

Token 2130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08411850780248642
    2. '```' → logprob: -3.959118604660034
    3. '(top' → logprob: -4.084118366241455
    4. 'top' → logprob: -4.459118366241455
    5. ' if' → logprob: -4.709118366241455
    6. '
' → logprob: -5.084118366241455
    7. ' top' → logprob: -5.584118366241455
    8. '[top' → logprob: -6.084118366241455
    9. ',' → logprob: -6.334118366241455
    10. ' and' → logprob: -6.459118366241455

Token 2131: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20276890695095062
    2. 'top' → logprob: -2.4527688026428223
    3. ' top' → logprob: -3.4527688026428223
    4. 'return' → logprob: -3.7027688026428223
    5. '
' → logprob: -5.452768802642822
    6. ' if' → logprob: -5.577768802642822
    7. 'continue' → logprob: -5.702768802642822
    8. '[top' → logprob: -5.702768802642822
    9. '#' (adapté à ' #') → logprob: -5.827768802642822
    10. '.extend' → logprob: -5.827768802642822

Token 2132: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6484557390213013
    2. 'top' → logprob: -1.0234557390213013
    3. '#' → logprob: -3.2734556198120117
    4. 'return' → logprob: -4.148455619812012
    5. 'self' → logprob: -4.148455619812012
    6. 'bottom' → logprob: -4.148455619812012
    7. 'for' → logprob: -4.523455619812012
    8. '
' → logprob: -5.273455619812012
    9. ' top' → logprob: -5.273455619812012
    10. 'continue' → logprob: -5.773455619812012

Token 2133: ' possible' (ID: 4149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8540410995483398
    2. 'top' → logprob: -1.7290410995483398
    3. 'all' → logprob: -1.9790410995483398
    4. 'len' → logprob: -2.35404109954834
    5. 'not' → logprob: -3.22904109954834
    6. 'bottom' → logprob: -3.60404109954834
    7. 'self' → logprob: -3.72904109954834
    8. 'True' → logprob: -3.97904109954834
    9. ' all' → logprob: -4.22904109954834
    10. '       ' → logprob: -4.60404109954834

Token 2134: ' multiple' (ID: 7598)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.3074278831481934
    2. '#' → logprob: -1.6824278831481934
    3. 'continue' → logprob: -2.0574278831481934
    4. '       ' → logprob: -2.1824278831481934
    5. '           ' → logprob: -2.4324278831481934
    6. 'to' → logprob: -3.5574278831481934
    7. 'if' → logprob: -3.5574278831481934
    8. 'that' → logprob: -4.182427883148193
    9. ' if' → logprob: -4.307427883148193
    10. ' to' → logprob: -4.557427883148193

Token 2135: ' top' (ID: 2344)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.903772234916687
    2. 'bottom' → logprob: -1.903772234916687
    3. 'for' → logprob: -2.9037723541259766
    4. 'top' → logprob: -3.0287723541259766
    5. '#' → logprob: -3.2787723541259766
    6. '
' → logprob: -3.6537723541259766
    7. '           ' → logprob: -3.6537723541259766
    8. ' for' → logprob: -3.7787723541259766
    9. 'cars' → logprob: -3.7787723541259766
    10. 'if' → logprob: -4.028772354125977

Token 2136: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.4107625186443329
    2. '_c' → logprob: -1.2857625484466553
    3. 'car' → logprob: -4.285762310028076
    4. '_car' → logprob: -4.535762310028076
    5. ' cars' → logprob: -4.660762310028076
    6. 's' → logprob: -4.910762310028076
    7. '_depart' → logprob: -5.035762310028076
    8. '
' → logprob: -6.035762310028076
    9. 'depart' → logprob: -6.285762310028076
    10. '#' → logprob: -7.160762310028076

Token 2137: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1841791570186615
    2. 'top' → logprob: -3.3091790676116943
    3. 'bottom' → logprob: -3.6841790676116943
    4. '           ' → logprob: -3.8091790676116943
    5. 'return' → logprob: -3.9341790676116943
    6. '#' → logprob: -4.809179306030273
    7. '
' → logprob: -4.809179306030273
    8. ' =' → logprob: -5.309179306030273
    9. ' top' → logprob: -5.684179306030273
    10. ' bottom' → logprob: -5.809179306030273

Token 2138: ' different' (ID: 2647)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5597899556159973
    2. 'same' → logprob: -1.5597898960113525
    3. 'top' → logprob: -2.8097898960113525
    4. 'space' → logprob: -3.3097898960113525
    5. 'spaces' → logprob: -3.5597898960113525
    6. '[]' → logprob: -3.6847898960113525
    7. 'bottom' → logprob: -4.434790134429932
    8. ' the' → logprob: -4.684790134429932
    9. 'waiting' → logprob: -4.809790134429932
    10. 'different' → logprob: -5.184790134429932

Token 2139: ' spaces' (ID: 18608)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.022754548117518425
    2. ' spaces' → logprob: -4.272754669189453
    3. 'space' → logprob: -4.897754669189453
    4. '
' → logprob: -8.272754669189453
    5. '```' → logprob: -8.772754669189453
    6. 'paces' → logprob: -9.022754669189453
    7. 'cars' → logprob: -9.147754669189453
    8. 'lines' → logprob: -9.647754669189453
    9. '_spaces' → logprob: -9.772754669189453
    10. 'places' → logprob: -10.022754669189453

Token 2140: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12844796478748322
    2. '           ' → logprob: -3.378448009490967
    3. '               ' → logprob: -3.628448009490967
    4. '[top' → logprob: -4.878448009490967
    5. '(top' → logprob: -4.878448009490967
    6. 'top' → logprob: -5.128448009490967
    7. '.append' → logprob: -5.628448009490967
    8. ' if' → logprob: -5.628448009490967
    9. 'return' → logprob: -5.753448009490967
    10. ' top' → logprob: -5.753448009490967

Token 2141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3022085428237915
    2. 'return' → logprob: -1.8022085428237915
    3. '
' → logprob: -3.552208423614502
    4. '#' → logprob: -3.552208423614502
    5. 'top' → logprob: -3.677208423614502
    6. '```' → logprob: -5.177208423614502
    7. 'bottom' → logprob: -5.552208423614502
    8. 'for' → logprob: -7.177208423614502
    9. 'depart' → logprob: -7.677208423614502
    10. 'all' → logprob: -8.30220890045166

Token 2142: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4522271752357483
    2. 'return' → logprob: -1.2022271156311035
    3. '
' → logprob: -3.5772271156311035
    4. '#' (adapté à ' #') → logprob: -4.2022271156311035
    5. 'top' → logprob: -4.3272271156311035
    6. 'bottom' → logprob: -5.0772271156311035
    7. 'for' → logprob: -8.702227592468262
    8. '        
' → logprob: -9.077227592468262
    9. 'depart' → logprob: -9.077227592468262
    10. 'all' → logprob: -9.077227592468262

Token 2143: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5608039498329163
    2. 'return' → logprob: -1.1858038902282715
    3. 'top' → logprob: -2.4358038902282715
    4. '
' → logprob: -4.4358038902282715
    5. '#' → logprob: -4.5608038902282715
    6. 'bottom' → logprob: -4.5608038902282715
    7. 'depart' → logprob: -6.8108038902282715
    8. 'all' → logprob: -7.1858038902282715
    9. 'self' → logprob: -8.18580436706543
    10. '           ' → logprob: -8.31080436706543

Token 2144: ' all' (ID: 722)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0004981054808013141
    2. ' bottom' → logprob: -7.625498294830322
    3. '   ' → logprob: -12.125497817993164
    4. '[' → logprob: -12.750497817993164
    5. '(bottom' → logprob: -15.125497817993164
    6. 'top' → logprob: -15.250497817993164
    7. ' ' → logprob: -15.375497817993164
    8. '       ' → logprob: -16.000497817993164
    9. '
' → logprob: -16.125497817993164
    10. '           ' → logprob: -16.250497817993164

Token 2145: ' departing' (ID: 126080)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.005523549858480692
    2. 'top' → logprob: -5.505523681640625
    3. ' bottom' → logprob: -6.880523681640625
    4. 'return' → logprob: -8.880523681640625
    5. '           ' → logprob: -9.505523681640625
    6. '[' → logprob: -10.255523681640625
    7. '       ' → logprob: -10.380523681640625
    8. '[top' → logprob: -10.505523681640625
    9. '
' → logprob: -11.005523681640625
    10. '   ' → logprob: -11.130523681640625

Token 2146: ' cars' (ID: 13653)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0010607946896925569
    2. 'cars' → logprob: -8.251060485839844
    3. ' bottom' → logprob: -8.501060485839844
    4. '_bottom' → logprob: -8.501060485839844
    5. '[' → logprob: -8.876060485839844
    6. '(bottom' → logprob: -9.376060485839844
    7. 'top' → logprob: -9.876060485839844
    8. 'depart' → logprob: -10.876060485839844
    9. '[]' → logprob: -11.126060485839844
    10. '```' → logprob: -11.376060485839844

Token 2147: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.22236792743206024
    2. 'return' → logprob: -2.097368001937866
    3. '       ' → logprob: -3.097368001937866
    4. '=' → logprob: -4.222367763519287
    5. ' =' → logprob: -4.597367763519287
    6. ' bottom' → logprob: -5.472367763519287
    7. '
' → logprob: -7.472367763519287
    8. ',' → logprob: -7.597367763519287
    9. ' return' → logprob: -8.347368240356445
    10. '           ' → logprob: -8.722368240356445

Token 2148: ' then' (ID: 1815)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.44315940141677856
    2. '_c' → logprob: -1.1931593418121338
    3. '+' → logprob: -3.443159341812134
    4. '_bottom' → logprob: -4.318159580230713
    5. 'bottom' → logprob: -6.068159580230713
    6. '_depart' → logprob: -6.568159580230713
    7. '```' → logprob: -6.693159580230713
    8. '_car' → logprob: -7.693159580230713
    9. ' and' → logprob: -7.943159580230713
    10. '.extend' → logprob: -8.068159103393555

Token 2149: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.003130067139863968
    2. ' top' → logprob: -6.128129959106445
    3. 'bottom' → logprob: -7.003129959106445
    4. '[top' → logprob: -10.878129959106445
    5. '   ' → logprob: -12.128129959106445
    6. ' bottom' → logprob: -12.878129959106445
    7. '[' → logprob: -12.878129959106445
    8. '
' → logprob: -13.128129959106445
    9. '       ' → logprob: -13.628129959106445
    10. '           ' → logprob: -14.503129959106445

Token 2150: ' ordered' (ID: 17889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04170149192214012
    2. 'return' → logprob: -3.791701555252075
    3. '
' → logprob: -4.166701316833496
    4. 'bottom' → logprob: -6.666701316833496
    5. ' bottom' → logprob: -7.666701316833496
    6. ' return' → logprob: -8.166701316833496
    7. '```' → logprob: -8.791701316833496
    8. '[]' → logprob: -9.166701316833496
    9. ',' → logprob: -9.291701316833496
    10. '[]
' → logprob: -9.291701316833496

Token 2151: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.034487128257751465
    2. ' by' → logprob: -4.284487247467041
    3. 'def' → logprob: -4.909487247467041
    4. '+' → logprob: -5.534487247467041
    5. '=' → logprob: -5.909487247467041
    6. ',' → logprob: -6.409487247467041
    7. '       ' → logprob: -6.909487247467041
    8. '```' → logprob: -7.284487247467041
    9. '+=' → logprob: -7.534487247467041
    10. 'bottom' → logprob: -8.159486770629883

Token 2152: ' space' (ID: 4918)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5247906446456909
    2. 'space' → logprob: -0.8997906446456909
    3. ' lambda' → logprob: -7.1497907638549805
    4. '(lambda' → logprob: -7.3997907638549805
    5. 'index' → logprob: -8.89979076385498
    6. ' space' → logprob: -9.77479076385498
    7. '=lambda' → logprob: -10.89979076385498
    8. 'key' → logprob: -11.27479076385498
    9. 'spaces' → logprob: -11.64979076385498
    10. '(space' → logprob: -11.77479076385498

Token 2153: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.04513486474752426
    2. '.index' → logprob: -3.2951347827911377
    3. ' index' → logprob: -5.295135021209717
    4. '_index' → logprob: -6.795135021209717
    5. 'idx' → logprob: -7.795135021209717
    6. '
' → logprob: -9.170134544372559
    7. '[index' → logprob: -9.170134544372559
    8. '       ' → logprob: -9.420134544372559
    9. '_idx' → logprob: -9.420134544372559
    10. '   ' → logprob: -10.920134544372559

Token 2154: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8262534141540527
    2. 'bottom' → logprob: -0.8262534141540527
    3. 'return' → logprob: -2.5762534141540527
    4. '[' → logprob: -4.326253414154053
    5. '+' → logprob: -4.701253414154053
    6. ',' → logprob: -4.951253414154053
    7. ' bottom' → logprob: -5.076253414154053
    8. ' +' → logprob: -5.826253414154053
    9. '   ' → logprob: -6.201253414154053
    10. '
' → logprob: -6.326253414154053

Token 2155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009075870737433434
    2. 'return' → logprob: -5.75907564163208
    3. '[' → logprob: -5.88407564163208
    4. '```' → logprob: -6.63407564163208
    5. 'bottom' → logprob: -7.50907564163208
    6. ')' → logprob: -8.259076118469238
    7. '           ' → logprob: -8.384076118469238
    8. '[
' → logprob: -8.384076118469238
    9. '[top' → logprob: -9.384076118469238
    10. ',' → logprob: -9.384076118469238

Token 2156: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.391603022813797
    2. '       ' → logprob: -1.1416029930114746
    3. '
' → logprob: -5.516602993011475
    4. '```' → logprob: -7.891602993011475
    5. ' return' → logprob: -8.516603469848633
    6. 'result' → logprob: -10.391603469848633
    7. 'bottom' → logprob: -10.766603469848633
    8. '   ' → logprob: -11.016603469848633
    9. 'all' → logprob: -11.266603469848633
    10. '        
' → logprob: -11.891603469848633

Token 2157: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.00041494169272482395
    2. ' bottom' → logprob: -8.000414848327637
    3. '   ' → logprob: -9.875414848327637
    4. '[' → logprob: -10.625414848327637
    5. '(bottom' → logprob: -13.500414848327637
    6. '       ' → logprob: -14.250414848327637
    7. '           ' → logprob: -14.625414848327637
    8. ' ' → logprob: -15.000414848327637
    9. '[*' → logprob: -15.625414848327637
    10. '     ' → logprob: -16.000415802001953

Token 2158: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0007487560505978763
    2. '[' → logprob: -8.375748634338379
    3. '_car' → logprob: -9.125748634338379
    4. '`' → logprob: -9.875748634338379
    5. '[_' → logprob: -9.875748634338379
    6. ')' → logprob: -10.125748634338379
    7. '[]' → logprob: -10.500748634338379
    8. '+' → logprob: -10.750748634338379
    9. '```' → logprob: -10.750748634338379
    10. ' +' → logprob: -11.000748634338379

Token 2159: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.015484961681067944
    2. 'ar' → logprob: -4.265484809875488
    3. '_' → logprob: -7.390484809875488
    4. '[' → logprob: -7.765484809875488
    5. '_c' → logprob: -9.515484809875488
    6. '[_' → logprob: -9.890484809875488
    7. '_ar' → logprob: -10.140484809875488
    8. 'cars' → logprob: -10.515484809875488
    9. '[]' → logprob: -11.140484809875488
    10. '[(' → logprob: -11.515484809875488

Token 2160: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.02661934308707714
    2. '+' → logprob: -4.4016194343566895
    3. 'depart' → logprob: -4.9016194343566895
    4. ' +' → logprob: -5.2766194343566895
    5. '[:]' → logprob: -7.7766194343566895
    6. '[:' → logprob: -8.276618957519531
    7. '[' → logprob: -8.651618957519531
    8. '```' → logprob: -8.651618957519531
    9. 'Depart' → logprob: -9.276618957519531
    10. '.depart' → logprob: -10.151618957519531

Token 2161: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00015240935317706317
    2. 'ging' → logprob: -9.125152587890625
    3. 'ng' → logprob: -10.625152587890625
    4. 'ding' → logprob: -12.375152587890625
    5. 'ING' → logprob: -12.875152587890625
    6. 'g' → logprob: -12.875152587890625
    7. '[' → logprob: -13.000152587890625
    8. '_ing' → logprob: -13.125152587890625
    9. 'inging' → logprob: -13.250152587890625
    10. 'cing' → logprob: -13.750152587890625

Token 2162: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2524172067642212
    2. '+' → logprob: -1.5024172067642212
    3. '       ' → logprob: -8.37741756439209
    4. '+[' → logprob: -9.12741756439209
    5. '[top' → logprob: -9.25241756439209
    6. 'top' → logprob: -10.87741756439209
    7. '```' → logprob: -11.62741756439209
    8. '   ' → logprob: -12.00241756439209
    9. '           ' → logprob: -12.75241756439209
    10. '+self' → logprob: -12.87741756439209

Token 2163: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0004892880679108202
    2. ' top' → logprob: -7.625489234924316
    3. '[top' → logprob: -13.625489234924316
    4. '(top' → logprob: -17.625490188598633
    5. '	top' → logprob: -17.625490188598633
    6. '   ' → logprob: -17.750490188598633
    7. '       ' → logprob: -18.500490188598633
    8. '[' → logprob: -19.000490188598633
    9. 'bottom' → logprob: -19.250490188598633
    10. '           ' → logprob: -19.500490188598633

Token 2164: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -4.5491004129871726e-05
    2. 'cars' → logprob: -10.375045776367188
    3. '_car' → logprob: -11.375045776367188
    4. 'car' → logprob: -13.125045776367188
    5. '[' → logprob: -16.000045776367188
    6. '_' → logprob: -16.250045776367188
    7. '[_' → logprob: -16.500045776367188
    8. 'Cars' → logprob: -16.500045776367188
    9. '```' → logprob: -16.500045776367188
    10. 'c' → logprob: -16.750045776367188

Token 2165: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.005784685257822275
    2. 'ar' → logprob: -5.255784511566162
    3. '_depart' → logprob: -7.880784511566162
    4. 'aring' → logprob: -10.50578498840332
    5. '_c' → logprob: -10.63078498840332
    6. 'cars' → logprob: -10.75578498840332
    7. '_' → logprob: -10.88078498840332
    8. 'depart' → logprob: -10.88078498840332
    9. '_de' → logprob: -11.63078498840332
    10. 'rs' → logprob: -11.75578498840332

Token 2166: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.774393618106842
    2. 'ep' → logprob: -1.3993935585021973
    3. 'part' → logprob: -1.5243935585021973
    4. '_part' → logprob: -3.1493935585021973
    5. 'depart' → logprob: -3.5243935585021973
    6. 'Depart' → logprob: -7.149393558502197
    7. '_ep' → logprob: -7.649393558502197
    8. 'art' → logprob: -8.024394035339355
    9. 'e' → logprob: -8.649394035339355
    10. 'apart' → logprob: -8.774394035339355

Token 2167: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00017064384883269668
    2. 'uting' → logprob: -9.250170707702637
    3. 'ng' → logprob: -10.750170707702637
    4. 'ting' → logprob: -11.250170707702637
    5. 'uring' → logprob: -11.375170707702637
    6. 'art' → logprob: -11.875170707702637
    7. 'aring' → logprob: -12.125170707702637
    8. 'inging' → logprob: -12.625170707702637
    9. 'ging' → logprob: -12.625170707702637
    10. 'uing' → logprob: -12.875170707702637

Token 2168: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9587892293930054
    2. '       ' → logprob: -0.9587892293930054
    3. '<|end|>' → logprob: -2.083789348602295
    4. '```' → logprob: -2.833789348602295
    5. ',' → logprob: -4.208789348602295
    6. '[' → logprob: -4.583789348602295
    7. ')' → logprob: -4.833789348602295
    8. 'def' → logprob: -5.958789348602295
    9. ':' → logprob: -6.083789348602295
    10. '
' → logprob: -6.333789348602295

Token 2169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.124306820333004
    2. '       ' → logprob: -2.3743069171905518
    3. ':' → logprob: -5.499306678771973
    4. ',' → logprob: -5.624306678771973
    5. '_' → logprob: -5.999306678771973
    6. '[' → logprob: -5.999306678771973
    7. '```' → logprob: -5.999306678771973
    8. 'def' → logprob: -6.249306678771973
    9. '           ' → logprob: -6.624306678771973
    10. ')' → logprob: -6.874306678771973

Token 2170: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0207100510597229
    2. 'def' (adapté à ' def') → logprob: -4.395709991455078
    3. '```' → logprob: -5.020709991455078
    4. ' def' → logprob: -6.520709991455078
    5. '
' → logprob: -10.020709991455078
    6. '       ' → logprob: -11.145709991455078
    7. '<|end|>' → logprob: -11.395709991455078
    8. ')' → logprob: -12.520709991455078
    9. '	def' → logprob: -12.770709991455078
    10. ' ' → logprob: -13.145709991455078

Token 2171: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.1695604771375656
    2. 'advance' → logprob: -2.044560432434082
    3. 'step' → logprob: -4.544560432434082
    4. 'simulate' → logprob: -4.669560432434082
    5. '_process' → logprob: -5.419560432434082
    6. 'tick' → logprob: -7.544560432434082
    7. '_step' → logprob: -7.669560432434082
    8. 'run' → logprob: -8.044560432434082
    9. 'handle' → logprob: -8.669560432434082
    10. 'update' → logprob: -9.044560432434082

Token 2172: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.7509174942970276
    2. '_c' → logprob: -1.5009174346923828
    3. '_arr' → logprob: -2.000917434692383
    4. '_time' → logprob: -2.250917434692383
    5. '_events' → logprob: -3.125917434692383
    6. '_next' → logprob: -4.750917434692383
    7. '_event' → logprob: -5.500917434692383
    8. '_step' → logprob: -5.750917434692383
    9. '_car' → logprob: -6.125917434692383
    10. '_tick' → logprob: -7.500917434692383

Token 2173: 'ures' (ID: 1609)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.0002549024939071387
    2. 'ures' → logprob: -8.75025463104248
    3. '(self' → logprob: -10.25025463104248
    4. '_car' → logprob: -10.25025463104248
    5. '_time' → logprob: -11.75025463104248
    6. '__' → logprob: -12.25025463104248
    7. '
' → logprob: -12.37525463104248
    8. 'art' → logprob: -13.37525463104248
    9. 'ature' → logprob: -13.50025463104248
    10. 'e' → logprob: -13.75025463104248

Token 2174: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.865583706414327e-05
    2. '   ' → logprob: -9.37509822845459
    3. '       ' → logprob: -11.50009822845459
    4. '(' → logprob: -12.62509822845459
    5. 'self' → logprob: -16.250099182128906
    6. '(
' → logprob: -17.125099182128906
    7. 'def' → logprob: -17.125099182128906
    8. ' (' → logprob: -17.250099182128906
    9. '	self' → logprob: -17.250099182128906
    10. ' ' → logprob: -17.375099182128906

Token 2175: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008590542711317539
    2. 'self' → logprob: -7.875859260559082
    3. '   ' → logprob: -8.625859260559082
    4. '       ' → logprob: -9.000859260559082
    5. '(' → logprob: -9.125859260559082
    6. '):
' → logprob: -10.125859260559082
    7. '_' → logprob: -12.375859260559082
    8. '_(' → logprob: -12.500859260559082
    9. '):' → logprob: -12.625859260559082
    10. '__(' → logprob: -13.125859260559082

Token 2176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40933704376220703
    2. '```' → logprob: -1.659337043762207
    3. '   ' → logprob: -2.034337043762207
    4. 'def' → logprob: -4.284337043762207
    5. 'self' → logprob: -7.659337043762207
    6. '``' → logprob: -8.534337043762207
    7. '
' → logprob: -8.909337043762207
    8. ' def' → logprob: -9.534337043762207
    9. '(self' → logprob: -9.909337043762207
    10. '    
' → logprob: -10.034337043762207

Token 2177: ' bottom' (ID: 8725)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09316805005073547
    2. 'bottom' (adapté à ' bottom') → logprob: -2.468168020248413
    3. 'depart' → logprob: -6.468168258666992
    4. '```' → logprob: -6.718168258666992
    5. '   ' → logprob: -7.843168258666992
    6. 'while' → logprob: -7.843168258666992
    7. ' bottom' → logprob: -8.343168258666992
    8. 'def' → logprob: -8.468168258666992
    9. '
' → logprob: -9.718168258666992
    10. '``' → logprob: -9.718168258666992

Token 2178: '_depart' (ID: 172061)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00044151677866466343
    2. '_depart' → logprob: -8.000441551208496
    3. ',' → logprob: -9.250441551208496
    4. '_car' → logprob: -12.625441551208496
    5. '_de' → logprob: -13.125441551208496
    6. '_to' → logprob: -13.500441551208496
    7. '_,' → logprob: -14.125441551208496
    8. ',_' → logprob: -14.375441551208496
    9. 'cars' → logprob: -14.750441551208496
    10. '```' → logprob: -15.500441551208496

Token 2179: ',' (ID: 11)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -5.848420551046729e-05
    2. 'ures' → logprob: -10.8750581741333
    3. 'uring' → logprob: -11.3750581741333
    4. 'ed' → logprob: -12.0000581741333
    5. '_ing' → logprob: -12.1250581741333
    6. 'ING' → logprob: -12.2500581741333
    7. '_c' → logprob: -12.5000581741333
    8. ',' → logprob: -13.5000581741333
    9. ' =' → logprob: -13.7500581741333
    10. 's' → logprob: -14.1250581741333

Token 2180: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.008614926598966122
    2. ' top' → logprob: -4.758615016937256
    3. '	top' → logprob: -14.883614540100098
    4. 'bottom' → logprob: -17.133615493774414
    5. '[top' → logprob: -17.633615493774414
    6. '(top' → logprob: -17.758615493774414
    7. '       ' → logprob: -17.758615493774414
    8. '_top' → logprob: -17.883615493774414
    9. '.top' → logprob: -19.008615493774414
    10. '   ' → logprob: -19.258615493774414

Token 2181: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.0008341663633473217
    2. 'depart' → logprob: -8.250834465026855
    3. '       ' → logprob: -8.625834465026855
    4. ',' → logprob: -8.625834465026855
    5. '_c' → logprob: -9.500834465026855
    6. ' =' → logprob: -10.375834465026855
    7. 'Depart' → logprob: -11.125834465026855
    8. '   ' → logprob: -11.375834465026855
    9. '=' → logprob: -11.625834465026855
    10. '           ' → logprob: -11.750834465026855

Token 2182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3658570349216461
    2. ',' → logprob: -1.7408570051193237
    3. '=' → logprob: -2.6158571243286133
    4. 'ing' → logprob: -2.8658571243286133
    5. '   ' → logprob: -7.240857124328613
    6. '       ' → logprob: -9.740857124328613
    7. ' ' → logprob: -9.865857124328613
    8. '=[],' → logprob: -10.240857124328613
    9. ',_' → logprob: -10.740857124328613
    10. 'ed' → logprob: -10.740857124328613

Token 2183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017398154886905104
    2. ' self' → logprob: -8.875173568725586
    3. '       ' → logprob: -10.500173568725586
    4. '(self' → logprob: -12.500173568725586
    5. '   ' → logprob: -12.875173568725586
    6. '           ' → logprob: -15.750173568725586
    7. '	self' → logprob: -16.125173568725586
    8. '[self' → logprob: -17.625173568725586
    9. '*self' → logprob: -17.875173568725586
    10. '=self' → logprob: -18.125173568725586

Token 2184: '._' (ID: 2697)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.10184827446937561
    2. '._' → logprob: -2.3518483638763428
    3. 'process' → logprob: -7.351848125457764
    4. '.find' → logprob: -7.851848125457764
    5. '.process' → logprob: -8.351848602294922
    6. '_can' → logprob: -8.726848602294922
    7. '_process' → logprob: -8.976848602294922
    8. '_get' → logprob: -10.226848602294922
    9. 'find' → logprob: -11.476848602294922
    10. '_found' → logprob: -11.976848602294922

Token 2185: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.001257376279681921
    2. 'remove' → logprob: -7.001257419586182
    3. '_find' → logprob: -8.001256942749023
    4. '_remove' → logprob: -11.751256942749023
    5. 'process' → logprob: -14.251256942749023
    6. '
' → logprob: -14.501256942749023
    7. '.find' → logprob: -14.751256942749023
    8. '(find' → logprob: -14.876256942749023
    9. '	find' → logprob: -15.126256942749023
    10. ' find' → logprob: -15.251256942749023

Token 2186: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.8825564384460449
    2. '_c' → logprob: -1.007556438446045
    3. 'bottom' → logprob: -2.507556438446045
    4. '_car' → logprob: -2.882556438446045
    5. '_bottom' → logprob: -3.257556438446045
    6. 'depart' → logprob: -3.757556438446045
    7. 'car' → logprob: -4.257556438446045
    8. 'cars' → logprob: -5.882556438446045
    9. '_de' → logprob: -7.132556438446045
    10. '
' → logprob: -7.632556438446045

Token 2187: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.021054456010460854
    2. 'art' → logprob: -4.521054267883301
    3. 'uring' → logprob: -5.396054267883301
    4. '_c' → logprob: -5.646054267883301
    5. 'car' → logprob: -7.521054267883301
    6. 'aring' → logprob: -7.771054267883301
    7. '_car' → logprob: -7.896054267883301
    8. 'uting' → logprob: -8.3960542678833
    9. 'ging' → logprob: -10.3960542678833
    10. '_ing' → logprob: -10.3960542678833

Token 2188: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.005346059333533049
    2. 'bottom' → logprob: -5.880345821380615
    3. 'cars' → logprob: -6.380345821380615
    4. '_bottom' → logprob: -7.630345821380615
    5. '(bottom' → logprob: -8.880346298217773
    6. '()' → logprob: -9.880346298217773
    7. '()
' → logprob: -10.130346298217773
    8. ')' → logprob: -10.880346298217773
    9. '```' → logprob: -11.005346298217773
    10. 'car' → logprob: -11.630346298217773

Token 2189: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.0019666971638798714
    2. 'ar' → logprob: -6.25196647644043
    3. 'cars' → logprob: -10.50196647644043
    4. '
' → logprob: -13.75196647644043
    5. 'rs' → logprob: -13.75196647644043
    6. '_' → logprob: -13.75196647644043
    7. 'arse' → logprob: -13.87696647644043
    8. '```' → logprob: -14.00196647644043
    9. '   ' → logprob: -14.12696647644043
    10. 'ers' → logprob: -14.50196647644043

Token 2190: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010076797567307949
    2. '()
' → logprob: -5.385076999664307
    3. '
' → logprob: -5.510076999664307
    4. '()' → logprob: -7.635076999664307
    5. 'for' → logprob: -8.260076522827148
    6. 'if' → logprob: -8.760076522827148
    7. 'bottom' → logprob: -9.135076522827148
    8. ' bottom' → logprob: -9.510076522827148
    9. '        
' → logprob: -9.760076522827148
    10. ' if' → logprob: -10.135076522827148

Token 2191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1275203377008438
    2. 'for' → logprob: -2.1275203227996826
    3. ' for' → logprob: -7.502520561218262
    4. 'if' → logprob: -11.002520561218262
    5. '```' → logprob: -11.502520561218262
    6. '   ' → logprob: -12.502520561218262
    7. '
' → logprob: -12.627520561218262
    8. 'self' → logprob: -12.877520561218262
    9. 'while' → logprob: -13.377520561218262
    10. 'all' → logprob: -13.877520561218262

Token 2192: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002481008181348443
    2. '       ' → logprob: -6.002480983734131
    3. ' for' → logprob: -12.877481460571289
    4. 'if' → logprob: -13.502481460571289
    5. '   ' → logprob: -14.627481460571289
    6. '#' (adapté à ' #') → logprob: -15.127481460571289
    7. '```' → logprob: -15.252481460571289
    8. 'while' → logprob: -15.502481460571289
    9. 'all' → logprob: -15.877481460571289
    10. '	for' → logprob: -16.87748146057129

Token 2193: ' depart' (ID: 14182)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011945136357098818
    2. '       ' → logprob: -6.751194477081299
    3. 'while' → logprob: -11.126194953918457
    4. 'if' → logprob: -12.876194953918457
    5. 'self' → logprob: -12.876194953918457
    6. ' for' → logprob: -13.001194953918457
    7. '#' → logprob: -13.751194953918457
    8. '```' → logprob: -14.501194953918457
    9. '   ' → logprob: -14.876194953918457
    10. 'all' → logprob: -16.75119400024414

Token 2194: ' bottom' (ID: 8725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3240104019641876
    2. '       ' → logprob: -1.3240103721618652
    3. ' for' → logprob: -4.699010372161865
    4. '
' → logprob: -7.949010372161865
    5. 'cars' → logprob: -8.074010848999023
    6. '   ' → logprob: -8.324010848999023
    7. 'bottom' → logprob: -9.074010848999023
    8. 'if' → logprob: -9.574010848999023
    9. 'car' → logprob: -9.824010848999023
    10. '```' → logprob: -10.074010848999023

Token 2195: ' cars' (ID: 13653)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07997643202543259
    2. '       ' → logprob: -3.3299763202667236
    3. 'cars' → logprob: -3.4549763202667236
    4. '
' → logprob: -5.204976558685303
    5. '```' → logprob: -6.829976558685303
    6. ' for' → logprob: -7.454976558685303
    7. '_c' → logprob: -8.204976081848145
    8. 'car' → logprob: -8.204976081848145
    9. '_positions' → logprob: -8.454976081848145
    10. 'and' → logprob: -8.829976081848145

Token 2196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20200806856155396
    2. 'for' → logprob: -1.7020080089569092
    3. ' for' → logprob: -7.577008247375488
    4. '```' → logprob: -10.077008247375488
    5. '
' → logprob: -10.952008247375488
    6. '   ' → logprob: -11.077008247375488
    7. '           ' → logprob: -12.702008247375488
    8. 'if' → logprob: -13.452008247375488
    9. 'while' → logprob: -13.577008247375488
    10. '	for' → logprob: -14.702008247375488

Token 2197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3877566158771515
    2. 'for' → logprob: -1.137756586074829
    3. ' for' → logprob: -7.637756824493408
    4. '```' → logprob: -7.887756824493408
    5. '
' → logprob: -10.76275634765625
    6. '   ' → logprob: -12.88775634765625
    7. '        
' → logprob: -13.38775634765625
    8. '           ' → logprob: -13.51275634765625
    9. '``' → logprob: -14.88775634765625
    10. '#' → logprob: -15.38775634765625

Token 2198: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0024909991770982742
    2. '       ' → logprob: -6.002490997314453
    3. ' for' → logprob: -11.252490997314453
    4. '```' → logprob: -13.002490997314453
    5. '   ' → logprob: -16.502490997314453
    6. '``' → logprob: -18.377490997314453
    7. '	for' → logprob: -18.502490997314453
    8. '           ' → logprob: -20.752490997314453
    9. '        
' → logprob: -21.127490997314453
    10. '
' → logprob: -21.502490997314453

Token 2199: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0280383548888494e-06
    2. 'c' → logprob: -14.125000953674316
    3. ' car' → logprob: -15.875000953674316
    4. 'b' → logprob: -17.250001907348633
    5. 'bottom' → logprob: -17.500001907348633
    6. 'Car' → logprob: -18.625001907348633
    7. '	car' → logprob: -19.000001907348633
    8. 'cars' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.375001907348633
    10. '(car' → logprob: -19.875001907348633

Token 2200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04307832196354866
    2. 'in' → logprob: -3.1680784225463867
    3. '_in' → logprob: -10.293078422546387
    4. '	in' → logprob: -10.293078422546387
    5. ' ' → logprob: -12.668078422546387
    6. ' ' → logprob: -13.543078422546387
    7. '.in' → logprob: -14.043078422546387
    8. '
' → logprob: -14.043078422546387
    9. '   ' → logprob: -14.168078422546387
    10. ',' → logprob: -14.168078422546387

Token 2201: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -6.630610641877865e-06
    2. ' bottom' → logprob: -12.125006675720215
    3. 'top' → logprob: -14.625006675720215
    4. '   ' → logprob: -15.250006675720215
    5. '(bottom' → logprob: -15.375006675720215
    6. '[' → logprob: -16.7500057220459
    7. '           ' → logprob: -16.8750057220459
    8. 'self' → logprob: -17.2500057220459
    9. '.bottom' → logprob: -18.2500057220459
    10. '       ' → logprob: -18.2500057220459

Token 2202: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.018941223621368408
    2. 'depart' → logprob: -4.643941402435303
    3. '.depart' → logprob: -4.893941402435303
    4. 'Depart' → logprob: -8.143940925598145
    5. ':
' → logprob: -8.643940925598145
    6. '._' → logprob: -9.018940925598145
    7. '   ' → logprob: -9.081440925598145
    8. '.' → logprob: -9.206440925598145
    9. ':' → logprob: -9.706440925598145
    10. '
' → logprob: -9.768940925598145

Token 2203: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2124597281217575
    2. ':' → logprob: -2.0874598026275635
    3. '           ' → logprob: -2.7124598026275635
    4. '       ' → logprob: -7.837459564208984
    5. '():
' → logprob: -8.087459564208984
    6. '):
' → logprob: -8.837459564208984
    7. '   ' → logprob: -9.962459564208984
    8. 'self' → logprob: -10.337459564208984
    9. ',' → logprob: -11.087459564208984
    10. '.' → logprob: -11.087459564208984

Token 2204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016507796244695783
    2. 'self' → logprob: -6.501650810241699
    3. ' self' → logprob: -9.7516508102417
    4. '```' → logprob: -10.0016508102417
    5. '   ' → logprob: -10.1266508102417
    6. '       ' → logprob: -13.2516508102417
    7. '(self' → logprob: -13.7516508102417
    8. '               ' → logprob: -14.3766508102417
    9. '	self' → logprob: -15.1266508102417
    10. '		' → logprob: -15.2516508102417

Token 2205: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00012023169983876869
    2. '           ' → logprob: -9.250120162963867
    3. ' self' → logprob: -11.000120162963867
    4. '       ' → logprob: -11.875120162963867
    5. 'car' → logprob: -15.750120162963867
    6. '   ' → logprob: -15.875120162963867
    7. '               ' → logprob: -16.750120162963867
    8. '	self' → logprob: -16.875120162963867
    9. '```' → logprob: -17.500120162963867
    10. 'if' → logprob: -18.625120162963867

Token 2206: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.03316551074385643
    2. '.output' → logprob: -4.158165454864502
    3. '_remove' → logprob: -4.533165454864502
    4. 'output' → logprob: -5.158165454864502
    5. '_output' → logprob: -8.03316593170166
    6. '.remove' → logprob: -10.53316593170166
    7. '.' → logprob: -10.65816593170166
    8. '   ' → logprob: -10.65816593170166
    9. '.current' → logprob: -10.90816593170166
    10. ' output' → logprob: -11.78316593170166

Token 2207: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -4.36574100604048e-06
    2. '_remove' → logprob: -12.375004768371582
    3. ' remove' → logprob: -16.875003814697266
    4. '.remove' → logprob: -17.375003814697266
    5. '	remove' → logprob: -17.625003814697266
    6. 'output' → logprob: -17.625003814697266
    7. '(remove' → logprob: -17.750003814697266
    8. 'append' → logprob: -19.000003814697266
    9. 'replace' → logprob: -19.875003814697266
    10. 'removed' → logprob: -20.000003814697266

Token 2208: '_car' (ID: 62991)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.03806134685873985
    2. '(car' → logprob: -3.2880613803863525
    3. '_car' → logprob: -11.038061141967773
    4. ' car' → logprob: -13.038061141967773
    5. '	car' → logprob: -13.788061141967773
    6. '```' → logprob: -15.163061141967773
    7. 'Car' → logprob: -16.413061141967773
    8. '.car' → logprob: -16.413061141967773
    9. '(' → logprob: -16.663061141967773
    10. '   ' → logprob: -17.163061141967773

Token 2209: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. '(c' → logprob: -16.75000762939453
    4. '(
' → logprob: -17.00000762939453
    5. '(Car' → logprob: -17.00000762939453
    6. 'car' → logprob: -17.75000762939453
    7. ' (' → logprob: -17.75000762939453
    8. '(card' → logprob: -19.00000762939453
    9. '(cat' → logprob: -19.25000762939453
    10. '```' → logprob: -19.37500762939453

Token 2210: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8393260836601257
    2. '           ' → logprob: -1.0893261432647705
    3. ')' → logprob: -1.4643261432647705
    4. '<|end|>' → logprob: -9.214325904846191
    5. '
' → logprob: -10.089325904846191
    6. '()
' → logprob: -10.214325904846191
    7. '()' → logprob: -10.339325904846191
    8. ',' → logprob: -10.964325904846191
    9. '),' → logprob: -11.339325904846191
    10. ')
' → logprob: -11.714325904846191

Token 2211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007260043174028397
    2. '       ' → logprob: -5.507259845733643
    3. 'self' → logprob: -5.757259845733643
    4. '```' → logprob: -11.6322603225708
    5. '   ' → logprob: -12.0072603225708
    6. ' self' → logprob: -13.5072603225708
    7. '               ' → logprob: -15.0072603225708
    8. '                   ' → logprob: -16.007259368896484
    9. '`' → logprob: -17.382259368896484
    10. '		' → logprob: -17.507259368896484

Token 2212: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.2200749754119897e-06
    2. '           ' → logprob: -13.250001907348633
    3. ' self' → logprob: -15.000001907348633
    4. '       ' → logprob: -18.000001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '	self' → logprob: -21.250001907348633
    7. '  ' → logprob: -22.750001907348633
    8. '         ' → logprob: -23.500001907348633
    9. '(self' → logprob: -23.750001907348633
    10. ' ' → logprob: -23.875001907348633

Token 2213: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.0009134899592027068
    2. 'output' → logprob: -7.000913619995117
    3. '_output' → logprob: -14.250913619995117
    4. '.' → logprob: -15.375913619995117
    5. ' output' → logprob: -15.625913619995117
    6. 'Output' → logprob: -15.750913619995117
    7. '       ' → logprob: -15.875913619995117
    8. '```' → logprob: -15.875913619995117
    9. '	output' → logprob: -16.000913619995117
    10. '           ' → logprob: -16.125913619995117

Token 2214: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.843177233240567e-05
    2. 'order' → logprob: -11.125018119812012
    3. 'Order' → logprob: -13.125018119812012
    4. '.append' → logprob: -14.000018119812012
    5. '```' → logprob: -14.875018119812012
    6. '\' → logprob: -15.875018119812012
    7. '_orders' → logprob: -16.375019073486328
    8. '`' → logprob: -16.500019073486328
    9. '_ORDER' → logprob: -17.375019073486328
    10. 'append' → logprob: -17.875019073486328

Token 2215: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.750000953674316
    3. 'append' → logprob: -15.875000953674316
    4. '.app' → logprob: -16.125
    5. '.extend' → logprob: -17.5
    6. '_append' → logprob: -19.625
    7. ' .' → logprob: -19.75
    8. '.ap' → logprob: -19.75
    9. '.Append' → logprob: -19.875
    10. '.push' → logprob: -20.0

Token 2216: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.011047814972698689
    2. 'car' → logprob: -4.511047840118408
    3. '	car' → logprob: -17.63604736328125
    4. ' car' → logprob: -18.01104736328125
    5. '(' → logprob: -18.13604736328125
    6. '(c' → logprob: -18.38604736328125
    7. '_car' → logprob: -20.01104736328125
    8. 'Car' → logprob: -20.76104736328125
    9. '(
' → logprob: -20.76104736328125
    10. '.car' → logprob: -21.26104736328125

Token 2217: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -1.1279553291387856e-05
    2. 'car' → logprob: -12.875011444091797
    3. '_car' → logprob: -13.000011444091797
    4. '.' → logprob: -13.125011444091797
    5. '._' → logprob: -13.250011444091797
    6. ' .' → logprob: -14.500011444091797
    7. '	car' → logprob: -14.500011444091797
    8. '(car' → logprob: -15.000011444091797
    9. '```' → logprob: -15.125011444091797
    10. '   ' → logprob: -15.500011444091797

Token 2218: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.128163257315464e-07
    2. 'id' → logprob: -15.625
    3. '_ids' → logprob: -17.875
    4. 'd' → logprob: -18.125
    5. ')_' → logprob: -18.875
    6. '```' → logprob: -19.25
    7. 's' → logprob: -19.375
    8. '}_' → logprob: -19.5
    9. '_' → logprob: -19.625
    10. '<|end|>' → logprob: -20.0

Token 2219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891809940338135
    2. ')
' → logprob: -2.578917980194092
    3. ')

' → logprob: -11.20391845703125
    4. '       ' → logprob: -11.45391845703125
    5. '           ' → logprob: -13.07891845703125
    6. ')
' → logprob: -13.82891845703125
    7. ')\' → logprob: -15.20391845703125
    8. '   ' → logprob: -15.95391845703125
    9. '),' → logprob: -15.95391845703125
    10. '<|end|>' → logprob: -15.95391845703125

Token 2220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008419298566877842
    2. '```' → logprob: -5.008419513702393
    3. '
' → logprob: -6.508419513702393
    4. 'for' → logprob: -8.758419036865234
    5. '        
' → logprob: -10.133419036865234
    6. '           ' → logprob: -12.258419036865234
    7. '   ' → logprob: -12.508419036865234
    8. '`' → logprob: -13.133419036865234
    9. '``' → logprob: -13.633419036865234
    10. ' for' → logprob: -14.258419036865234

Token 2221: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5768988728523254
    2. 'for' → logprob: -1.0768988132476807
    3. '#' (adapté à ' #') → logprob: -2.3268988132476807
    4. '   ' → logprob: -9.576898574829102
    5. '```' → logprob: -10.326898574829102
    6. ' for' → logprob: -11.951898574829102
    7. '           ' → logprob: -13.076898574829102
    8. '
' → logprob: -13.451898574829102
    9. ' #' → logprob: -14.451898574829102
    10. '        
' → logprob: -14.451898574829102

Token 2222: ' depart' (ID: 14182)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020052457693964243
    2. '#' → logprob: -6.252005100250244
    3. '       ' → logprob: -9.502005577087402
    4. ' for' → logprob: -13.877005577087402
    5. 'self' → logprob: -14.502005577087402
    6. '   ' → logprob: -15.377005577087402
    7. 'if' → logprob: -15.752005577087402
    8. 'while' → logprob: -17.127004623413086
    9. ' #' → logprob: -17.502004623413086
    10. '
' → logprob: -17.752004623413086

Token 2223: ' top' (ID: 2344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001363168703392148
    2. ' for' → logprob: -9.500136375427246
    3. '       ' → logprob: -9.750136375427246
    4. '   ' → logprob: -13.250136375427246
    5. 'top' → logprob: -13.875136375427246
    6. '
' → logprob: -14.875136375427246
    7. '	for' → logprob: -17.00013542175293
    8. '```' → logprob: -17.25013542175293
    9. '           ' → logprob: -17.75013542175293
    10. ' ' → logprob: -19.00013542175293

Token 2224: ' cars' (ID: 13653)
  Prédit: '_depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.6448009014129639
    2. 'cars' → logprob: -1.5198009014129639
    3. 'for' → logprob: -2.019800901412964
    4. 'depart' → logprob: -2.144800901412964
    5. 'car' → logprob: -6.144801139831543
    6. '_c' → logprob: -7.144801139831543
    7. '       ' → logprob: -7.269801139831543
    8. '
' → logprob: -7.769801139831543
    9. 'Depart' → logprob: -7.894801139831543
    10. ' for' → logprob: -7.894801139831543

Token 2225: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010300288908183575
    2. 'for' → logprob: -4.885300159454346
    3. '
' → logprob: -6.010300159454346
    4. ' for' → logprob: -9.385300636291504
    5. '        
' → logprob: -10.010300636291504
    6. ',' → logprob: -10.385300636291504
    7. '   ' → logprob: -10.885300636291504
    8. '           ' → logprob: -11.260300636291504
    9. '```' → logprob: -11.260300636291504
    10. ':' → logprob: -11.885300636291504

Token 2226: ' bottom' (ID: 8725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01923302747309208
    2. 'bottom' → logprob: -4.394233226776123
    3. ' for' → logprob: -5.644233226776123
    4. '       ' → logprob: -6.644233226776123
    5. '   ' → logprob: -7.519233226776123
    6. 'all' → logprob: -7.644233226776123
    7. '
' → logprob: -8.144232749938965
    8. ' bottom' → logprob: -8.269232749938965
    9. '#' → logprob: -9.144232749938965
    10. '           ' → logprob: -9.894232749938965

Token 2227: ' cars' (ID: 13653)
  Prédit: '_depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.16428256034851074
    2. '       ' → logprob: -2.1642825603485107
    3. 'for' → logprob: -4.03928279876709
    4. 'depart' → logprob: -4.28928279876709
    5. 'cars' → logprob: -6.66428279876709
    6. '           ' → logprob: -7.03928279876709
    7. ' for' → logprob: -7.53928279876709
    8. 'Depart' → logprob: -7.53928279876709
    9. '   ' → logprob: -7.53928279876709
    10. '
' → logprob: -8.28928279876709

Token 2228: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06212889775633812
    2. 'for' → logprob: -3.062128782272339
    3. ' for' → logprob: -4.312129020690918
    4. '
' → logprob: -11.187129020690918
    5. '   ' → logprob: -11.187129020690918
    6. '```' → logprob: -11.312129020690918
    7. ',' → logprob: -12.562129020690918
    8. '           ' → logprob: -14.062129020690918
    9. '        
' → logprob: -15.187129020690918
    10. '	for' → logprob: -15.937129020690918

Token 2229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25254833698272705
    2. 'for' → logprob: -1.752548336982727
    3. ' for' → logprob: -3.0025482177734375
    4. '```' → logprob: -8.627548217773438
    5. '   ' → logprob: -11.752548217773438
    6. '           ' → logprob: -14.002548217773438
    7. '
' → logprob: -14.127548217773438
    8. '	for' → logprob: -15.252548217773438
    9. ',' → logprob: -15.752548217773438
    10. '``' → logprob: -16.627548217773438

Token 2230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.2729995988775045e-06
    2. '       ' → logprob: -12.000006675720215
    3. ' for' → logprob: -16.2500057220459
    4. '```' → logprob: -19.0000057220459
    5. '   ' → logprob: -19.2500057220459
    6. '
' → logprob: -22.0000057220459
    7. '	for' → logprob: -23.0000057220459
    8. '           ' → logprob: -23.1250057220459
    9. '``' → logprob: -24.6250057220459
    10. '        
' → logprob: -26.8750057220459

Token 2231: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -3.130576806142926e-05
    2. ' car' → logprob: -10.375031471252441
    3. '	car' → logprob: -18.125030517578125
    4. '   ' → logprob: -18.375030517578125
    5. '(car' → logprob: -19.625030517578125
    6. '.car' → logprob: -20.375030517578125
    7. ' ' → logprob: -20.500030517578125
    8. 'Car' → logprob: -20.500030517578125
    9. '```' → logprob: -20.500030517578125
    10. '_car' → logprob: -20.625030517578125

Token 2232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00091217877343297
    2. 'in' → logprob: -7.000912189483643
    3. ' ' → logprob: -14.875911712646484
    4. '	in' → logprob: -16.125911712646484
    5. '
' → logprob: -16.500911712646484
    6. ' ' → logprob: -17.500911712646484
    7. 'import' → logprob: -18.125911712646484
    8. '<|end|>' → logprob: -18.125911712646484
    9. '_in' → logprob: -18.250911712646484
    10. ',' → logprob: -18.375911712646484

Token 2233: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -7.505351095460355e-05
    2. ' top' → logprob: -9.500075340270996
    3. 'car' → logprob: -16.12507438659668
    4. '	top' → logprob: -17.75007438659668
    5. '(top' → logprob: -18.87507438659668
    6. '[top' → logprob: -19.00007438659668
    7. 'bottom' → logprob: -19.50007438659668
    8. '
' → logprob: -19.50007438659668
    9. '   ' → logprob: -19.50007438659668
    10. '_top' → logprob: -20.00007438659668

Token 2234: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.03424835577607155
    2. '.depart' → logprob: -3.5342483520507812
    3. 'depart' → logprob: -5.784248352050781
    4. '._' → logprob: -7.409248352050781
    5. 'Depart' → logprob: -7.909248352050781
    6. ' in' → logprob: -9.409248352050781
    7. ':
' → logprob: -9.659248352050781
    8. '   ' → logprob: -9.784248352050781
    9. '.' → logprob: -9.909248352050781
    10. ':' → logprob: -10.159248352050781

Token 2235: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13468389213085175
    2. '           ' → logprob: -2.509683847427368
    3. ':' → logprob: -3.134683847427368
    4. '       ' → logprob: -7.759684085845947
    5. ',' → logprob: -8.134683609008789
    6. '():
' → logprob: -8.884683609008789
    7. '):
' → logprob: -9.509683609008789
    8. '   ' → logprob: -10.134683609008789
    9. '(self' → logprob: -10.134683609008789
    10. 'self' → logprob: -10.384683609008789

Token 2236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009817477315664291
    2. 'self' → logprob: -4.759817600250244
    3. ' self' → logprob: -6.759817600250244
    4. '   ' → logprob: -11.134817123413086
    5. '	self' → logprob: -11.884817123413086
    6. '```' → logprob: -12.384817123413086
    7. '(self' → logprob: -12.509817123413086
    8. '	       ' → logprob: -12.759817123413086
    9. '       ' → logprob: -13.134817123413086
    10. '               ' → logprob: -13.134817123413086

Token 2237: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.764977686339989e-05
    2. ' self' → logprob: -10.250057220458984
    3. '           ' → logprob: -10.750057220458984
    4. '       ' → logprob: -14.750057220458984
    5. '   ' → logprob: -15.500057220458984
    6. '               ' → logprob: -15.625057220458984
    7. '	self' → logprob: -18.250057220458984
    8. '(self' → logprob: -18.375057220458984
    9. '                   ' → logprob: -19.125057220458984
    10. '_self' → logprob: -19.500057220458984

Token 2238: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.010047998279333115
    2. '_remove' → logprob: -4.760047912597656
    3. '_process' → logprob: -6.885047912597656
    4. '   ' → logprob: -8.760047912597656
    5. '.process' → logprob: -8.885047912597656
    6. '_rem' → logprob: -11.260047912597656
    7. '_depart' → logprob: -11.260047912597656
    8. 'process' → logprob: -11.385047912597656
    9. '_removed' → logprob: -11.885047912597656
    10. '       ' → logprob: -12.010047912597656

Token 2239: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.02975187823176384
    2. '_remove' → logprob: -3.529751777648926
    3. '.remove' → logprob: -14.154751777648926
    4. ' remove' → logprob: -15.404751777648926
    5. '(remove' → logprob: -15.404751777648926
    6. '	remove' → logprob: -15.904751777648926
    7. 'Remove' → logprob: -16.279752731323242
    8. '_removed' → logprob: -18.029752731323242
    9. '_process' → logprob: -18.154752731323242
    10. 'process' → logprob: -18.279752731323242

Token 2240: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.017303338274359703
    2. 'car' → logprob: -4.267303466796875
    3. '(car' → logprob: -5.767303466796875
    4. '	car' → logprob: -12.767303466796875
    5. '_' → logprob: -13.267303466796875
    6. 'Car' → logprob: -13.767303466796875
    7. '(' → logprob: -15.392303466796875
    8. ' car' → logprob: -15.392303466796875
    9. '.car' → logprob: -15.642303466796875
    10. '_c' → logprob: -16.142303466796875

Token 2241: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. ' (' → logprob: -16.5
    4. '(Car' → logprob: -17.125
    5. '(c' → logprob: -17.625
    6. 'car' → logprob: -18.5
    7. '(
' → logprob: -18.625
    8. '(card' → logprob: -18.625
    9. ' car' → logprob: -19.25
    10. '(cat' → logprob: -20.0

Token 2242: ')
' (ID: 446)
  Prédit: '(car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(car' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.25000286102295
    3. ' (' → logprob: -14.25000286102295
    4. '           ' → logprob: -15.75000286102295
    5. '(' → logprob: -15.87500286102295
    6. 'car' → logprob: -16.375003814697266
    7. ' car' → logprob: -16.875003814697266
    8. ')(' → logprob: -17.125003814697266
    9. '(
' → logprob: -17.375003814697266
    10. '```' → logprob: -17.750003814697266

Token 2243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024181826040148735
    2. 'self' → logprob: -4.149181842803955
    3. 'car' → logprob: -5.524181842803955
    4. '   ' → logprob: -6.524181842803955
    5. '```' → logprob: -6.774181842803955
    6. '       ' → logprob: -7.649181842803955
    7. '(car' → logprob: -7.649181842803955
    8. ' self' → logprob: -8.649181365966797
    9. '(self' → logprob: -8.774181365966797
    10. '[self' → logprob: -10.024181365966797

Token 2244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -9.960946772480384e-05
    2. '           ' → logprob: -9.250099182128906
    3. ' self' → logprob: -12.750099182128906
    4. '       ' → logprob: -15.000099182128906
    5. 'car' → logprob: -15.750099182128906
    6. '   ' → logprob: -16.500099182128906
    7. '               ' → logprob: -17.375099182128906
    8. '
' → logprob: -19.000099182128906
    9. '                   ' → logprob: -19.375099182128906
    10. '         ' → logprob: -20.000099182128906

Token 2245: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -5.764977686339989e-05
    2. 'output' → logprob: -9.875057220458984
    3. '.' → logprob: -13.125057220458984
    4. '```' → logprob: -13.500057220458984
    5. '
' → logprob: -14.125057220458984
    6. '`.' → logprob: -14.625057220458984
    7. '	output' → logprob: -14.750057220458984
    8. '.
' → logprob: -15.375057220458984
    9. '._' → logprob: -15.750057220458984
    10. '.input' → logprob: -16.000057220458984

Token 2246: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.3782830137643032e-05
    2. 'Order' → logprob: -11.50001335144043
    3. '.append' → logprob: -12.87501335144043
    4. 'order' → logprob: -14.50001335144043
    5. '```' → logprob: -16.12501335144043
    6. '._' → logprob: -16.25001335144043
    7. 'append' → logprob: -16.50001335144043
    8. '_' → logprob: -16.75001335144043
    9. '\' → logprob: -16.87501335144043
    10. '_append' → logprob: -17.12501335144043

Token 2247: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.599403423024341e-05
    2. '.' → logprob: -9.750065803527832
    3. '.app' → logprob: -12.125065803527832
    4. '.extend' → logprob: -14.250065803527832
    5. 'append' → logprob: -14.750065803527832
    6. '_append' → logprob: -15.000065803527832
    7. 'Append' → logprob: -15.125065803527832
    8. '[-' → logprob: -15.500065803527832
    9. '.Append' → logprob: -16.12506675720215
    10. ' .' → logprob: -16.75006675720215

Token 2248: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.0019606323912739754
    2. '(' → logprob: -6.251960754394531
    3. 'car' → logprob: -10.376960754394531
    4. '(
' → logprob: -14.376960754394531
    5. '(c' → logprob: -15.751960754394531
    6. ' (' → logprob: -17.12696075439453
    7. '(Car' → logprob: -17.25196075439453
    8. '(card' → logprob: -18.12696075439453
    9. '(cart' → logprob: -18.25196075439453
    10. 'Car' → logprob: -18.25196075439453

Token 2249: '.car' (ID: 49278)
  Prédit: '.car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.0007275633979588747
    2. '.' → logprob: -7.250727653503418
    3. '(car' → logprob: -11.875727653503418
    4. ' .' → logprob: -13.125727653503418
    5. '_car' → logprob: -13.125727653503418
    6. '.
' → logprob: -13.750727653503418
    7. 'car' → logprob: -13.750727653503418
    8. '	car' → logprob: -13.875727653503418
    9. ' car' → logprob: -14.000727653503418
    10. '._' → logprob: -14.375727653503418

Token 2250: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.816093228830141e-06
    2. '._' → logprob: -13.12500286102295
    3. 'd' → logprob: -15.00000286102295
    4. '.id' → logprob: -16.000001907348633
    5. 'id' → logprob: -16.250001907348633
    6. '.car' → logprob: -16.250001907348633
    7. '_' → logprob: -17.000001907348633
    8. '```' → logprob: -17.125001907348633
    9. '_.' → logprob: -17.250001907348633
    10. '_i' → logprob: -17.500001907348633

Token 2251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011772842844948173
    2. ')
' → logprob: -9.875117301940918
    3. '(' → logprob: -10.375117301940918
    4. '[' → logprob: -10.500117301940918
    5. '(car' → logprob: -12.625117301940918
    6. ')`' → logprob: -14.125117301940918
    7. '(
' → logprob: -14.750117301940918
    8. '))' → logprob: -15.000117301940918
    9. ']' → logprob: -15.250117301940918
    10. '()' → logprob: -15.625117301940918

Token 2252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9981906414031982
    2. '<|end|>' → logprob: -1.4981906414031982
    3. '
' → logprob: -1.6231906414031982
    4. '```' → logprob: -2.2481906414031982
    5. '   ' → logprob: -2.4981906414031982
    6. '        
' → logprob: -5.748190879821777
    7. '    
' → logprob: -5.998190879821777
    8. '(' → logprob: -6.248190879821777
    9. '`' → logprob: -6.373190879821777
    10. '\' → logprob: -6.498190879821777

Token 2253: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06853419542312622
    2. '   ' → logprob: -3.6935341358184814
    3. 'def' → logprob: -3.9435341358184814
    4. '```' → logprob: -4.4435343742370605
    5. '
' → logprob: -5.4435343742370605
    6. '<|end|>' → logprob: -5.8185343742370605
    7. 'while' → logprob: -6.1935343742370605
    8. ' while' → logprob: -8.443533897399902
    9. '`' → logprob: -8.818533897399902
    10. '`
' → logprob: -9.068533897399902

Token 2254: ' len' (ID: 4631)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7816470265388489
    2. '<|end|>' → logprob: -0.7816470265388489
    3. 'def' → logprob: -3.156646966934204
    4. 'None' → logprob: -3.406646966934204
    5. '<|end|>' → logprob: -5.906647205352783
    6. '   ' → logprob: -6.531647205352783
    7. '\n' → logprob: -7.031647205352783
    8. '```' → logprob: -7.031647205352783
    9. '

' → logprob: -7.281647205352783
    10. ' None' → logprob: -8.031646728515625

Token 2255: '(bottom' (ID: 114240)
  Prédit: '(bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bottom' → logprob: -0.007429145742207766
    2. '(self' → logprob: -5.132429122924805
    3. '(' → logprob: -6.632429122924805
    4. '(top' → logprob: -9.132429122924805
    5. 'bottom' → logprob: -9.882429122924805
    6. '(
' → logprob: -12.132429122924805
    7. 'self' → logprob: -12.882429122924805
    8. '(bot' → logprob: -12.882429122924805
    9. '(car' → logprob: -13.007429122924805
    10. '(left' → logprob: -13.132429122924805

Token 2256: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -4.894790981779806e-05
    2. '_' → logprob: -11.125048637390137
    3. ')' → logprob: -11.250048637390137
    4. 'Depart' → logprob: -12.000048637390137
    5. 'depart' → logprob: -12.125048637390137
    6. ')_' → logprob: -13.375048637390137
    7. '(' → logprob: -13.750048637390137
    8. '_depend' → logprob: -14.375048637390137
    9. '.depart' → logprob: -14.500048637390137
    10. '(
' → logprob: -14.625048637390137

Token 2257: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01582295633852482
    2. '+' → logprob: -4.390822887420654
    3. ' +' → logprob: -5.765822887420654
    4. ')+' → logprob: -9.390823364257812
    5. ')>' → logprob: -9.890823364257812
    6. '()' → logprob: -11.265823364257812
    7. '   ' → logprob: -11.890823364257812
    8. '>' → logprob: -12.515823364257812
    9. '+)' → logprob: -12.890823364257812
    10. '),' → logprob: -13.390823364257812

Token 2258: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7481776475906372
    2. '   ' → logprob: -0.8731776475906372
    3. '
' → logprob: -2.7481775283813477
    4. '<|end|>' → logprob: -3.7481775283813477
    5. ' def' → logprob: -4.748177528381348
    6. '```' → logprob: -5.123177528381348
    7. '    
' → logprob: -6.123177528381348
    8. '	def' → logprob: -6.748177528381348
    9. '       ' → logprob: -6.873177528381348
    10. ')' → logprob: -7.623177528381348

Token 2259: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002072357019642368
    2. ' len' → logprob: -8.50020694732666
    3. '(len' → logprob: -12.50020694732666
    4. '	len' → logprob: -17.875207901000977
    5. '[len' → logprob: -18.875207901000977
    6. '=len' → logprob: -19.500207901000977
    7. '
' → logprob: -20.000207901000977
    8. ',len' → logprob: -20.375207901000977
    9. '```' → logprob: -21.750207901000977
    10. '<len' → logprob: -21.875207901000977

Token 2260: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.0005535095697268844
    2. 'top' → logprob: -7.500553607940674
    3. '(' → logprob: -14.500553131103516
    4. ' top' → logprob: -17.125553131103516
    5. '(bottom' → logprob: -18.000553131103516
    6. '	top' → logprob: -18.250553131103516
    7. '[top' → logprob: -18.250553131103516
    8. '(
' → logprob: -19.125553131103516
    9. '_top' → logprob: -20.125553131103516
    10. 'Top' → logprob: -20.125553131103516

Token 2261: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -3.292907877039397e-06
    2. 'depart' → logprob: -13.37500286102295
    3. 'Depart' → logprob: -13.75000286102295
    4. '_depend' → logprob: -14.75000286102295
    5. '.depart' → logprob: -16.500003814697266
    6. '_de' → logprob: -16.875003814697266
    7. '_department' → logprob: -17.000003814697266
    8. ')' → logprob: -18.000003814697266
    9. '_dep' → logprob: -18.000003814697266
    10. '
' → logprob: -18.500003814697266

Token 2262: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045926711754873395
    2. '<|end|>' → logprob: -8.250459671020508
    3. '())' → logprob: -9.375459671020508
    4. '()' → logprob: -10.000459671020508
    5. '       ' → logprob: -11.000459671020508
    6. '<|end|>' → logprob: -11.125459671020508
    7. ')
' → logprob: -11.375459671020508
    8. '   ' → logprob: -11.500459671020508
    9. ')return' → logprob: -12.375459671020508
    10. '(' → logprob: -12.375459671020508

Token 2263: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09343354403972626
    2. '   ' → logprob: -2.5934336185455322
    3. '```' → logprob: -5.218433380126953
    4. ' def' → logprob: -5.343433380126953
    5. '<|end|>' → logprob: -5.968433380126953
    6. '
' → logprob: -7.593433380126953
    7. '	def' → logprob: -7.718433380126953
    8. '`' → logprob: -9.218433380126953
    9. '    
' → logprob: -9.468433380126953
    10. '<|end|>' → logprob: -9.593433380126953

Token 2264: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.044217079877853394
    2. '   ' → logprob: -3.169217109680176
    3. '```' → logprob: -7.294217109680176
    4. ' def' → logprob: -7.544217109680176
    5. '	def' → logprob: -12.294217109680176
    6. '
' → logprob: -13.669217109680176
    7. '`' → logprob: -14.169217109680176
    8. 'class' → logprob: -15.044217109680176
    9. '    
' → logprob: -15.169217109680176
    10. '<|end|>' → logprob: -15.544217109680176

Token 2265: ' tick' (ID: 27693)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.3899449110031128
    2. 'process' → logprob: -1.6399449110031128
    3. '_' → logprob: -2.5149450302124023
    4. '_process' → logprob: -4.014945030212402
    5. 'tick' → logprob: -5.014945030212402
    6. 'simulate' → logprob: -5.014945030212402
    7. 'park' → logprob: -5.264945030212402
    8. 'try' → logprob: -5.764945030212402
    9. 'run' → logprob: -6.389945030212402
    10. '_arr' → logprob: -6.639945030212402

Token 2266: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016098834748845547
    2. '(' → logprob: -8.750161170959473
    3. '   ' → logprob: -14.000161170959473
    4. 'self' → logprob: -14.250161170959473
    5. '(
' → logprob: -14.375161170959473
    6. '       ' → logprob: -16.500160217285156
    7. '	self' → logprob: -17.000160217285156
    8. 'def' → logprob: -17.000160217285156
    9. '(s' → logprob: -17.000160217285156
    10. ' (' → logprob: -17.250160217285156

Token 2267: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0037408177740871906
    2. 'self' → logprob: -5.8787407875061035
    3. '):' → logprob: -7.7537407875061035
    4. '):
' → logprob: -7.8787407875061035
    5. '(' → logprob: -10.003741264343262
    6. ')' → logprob: -10.878741264343262
    7. ')(' → logprob: -10.878741264343262
    8. '	self' → logprob: -11.253741264343262
    9. '   ' → logprob: -11.378741264343262
    10. '       ' → logprob: -12.003741264343262

Token 2268: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7210749983787537
    2. '       ' → logprob: -0.7210749983787537
    3. 'self' → logprob: -3.7210750579833984
    4. '```' → logprob: -5.846075057983398
    5. ' self' → logprob: -7.971075057983398
    6. '
' → logprob: -10.471075057983398
    7. '(self' → logprob: -10.471075057983398
    8. '`' → logprob: -11.096075057983398
    9. '``' → logprob: -11.346075057983398
    10. 'def' → logprob: -12.221075057983398

Token 2269: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.052412569522857666
    2. '       ' → logprob: -3.052412509918213
    3. 'while' → logprob: -6.552412509918213
    4. '#' (adapté à ' #') → logprob: -6.927412509918213
    5. 'depart' → logprob: -6.927412509918213
    6. ' self' → logprob: -8.677412986755371
    7. 'count' → logprob: -9.302412986755371
    8. 'if' → logprob: -9.802412986755371
    9. 'cars' → logprob: -10.552412986755371
    10. '```' → logprob: -10.677412986755371

Token 2270: ' process' (ID: 2273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011794081889092922
    2. '       ' → logprob: -5.386794090270996
    3. 'while' → logprob: -5.511794090270996
    4. 'depart' → logprob: -6.511794090270996
    5. '#' → logprob: -7.011794090270996
    6. 'def' → logprob: -8.011794090270996
    7. 'cars' → logprob: -9.011794090270996
    8. 'count' → logprob: -9.761794090270996
    9. 'car' → logprob: -10.261794090270996
    10. '   ' → logprob: -10.261794090270996

Token 2271: ' departures' (ID: 188012)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08250168710947037
    2. '()' → logprob: -3.4575016498565674
    3. '       ' → logprob: -3.8325016498565674
    4. '()
' → logprob: -4.0825018882751465
    5. '(self' → logprob: -5.4575018882751465
    6. '   ' → logprob: -6.0825018882751465
    7. ' self' → logprob: -6.3325018882751465
    8. '```' → logprob: -8.457501411437988
    9. 'def' → logprob: -8.707501411437988
    10. '(
' → logprob: -9.582501411437988

Token 2272: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08753093332052231
    2. 'depart' → logprob: -3.3375308513641357
    3. 'self' → logprob: -3.5875308513641357
    4. 'count' → logprob: -4.087531089782715
    5. '   ' → logprob: -6.837531089782715
    6. 'num' → logprob: -7.462531089782715
    7. '```' → logprob: -7.712531089782715
    8. 'car' → logprob: -7.962531089782715
    9. 'cars' → logprob: -8.087531089782715
    10. ' departed' → logprob: -8.462531089782715

Token 2273: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02004496194422245
    2. 'self' → logprob: -4.020044803619385
    3. '()' → logprob: -6.770044803619385
    4. '```' → logprob: -8.395045280456543
    5. '(self' → logprob: -8.645045280456543
    6. ' self' → logprob: -8.895045280456543
    7. '(' → logprob: -9.645045280456543
    8. '   ' → logprob: -10.395045280456543
    9. '        
' → logprob: -10.520045280456543
    10. '
' → logprob: -10.895045280456543

Token 2274: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003479500999674201
    2. 'current' → logprob: -5.753479480743408
    3. ' self' → logprob: -8.378479957580566
    4. 'time' → logprob: -10.503479957580566
    5. 'the' → logprob: -11.253479957580566
    6. ')' → logprob: -12.003479957580566
    7. ' current' → logprob: -12.253479957580566
    8. '=self' → logprob: -12.378479957580566
    9. '(self' → logprob: -12.753479957580566
    10. '
' → logprob: -13.128479957580566

Token 2275: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.001359401736408472
    2. '_' → logprob: -7.251359462738037
    3. 'time' → logprob: -8.251358985900879
    4. ' time' → logprob: -9.501358985900879
    5. '_
' → logprob: -9.626358985900879
    6. 'self' → logprob: -9.626358985900879
    7. '   ' → logprob: -9.751358985900879
    8. ' _' → logprob: -10.001358985900879
    9. '       ' → logprob: -11.001358985900879
    10. '
' → logprob: -11.251358985900879

Token 2276: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4241198003292084
    2. 'self' → logprob: -1.9241198301315308
    3. 'depart' → logprob: -2.049119710922241
    4. 'count' → logprob: -2.799119710922241
    5. 'num' → logprob: -5.67411994934082
    6. '```' → logprob: -6.67411994934082
    7. 'cars' → logprob: -6.79911994934082
    8. ' self' → logprob: -6.92411994934082
    9. ' departed' → logprob: -7.17411994934082
    10. '   ' → logprob: -7.67411994934082

Token 2277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15180422365665436
    2. 'self' → logprob: -2.526804208755493
    3. 'depart' → logprob: -3.026804208755493
    4. 'count' → logprob: -4.901804447174072
    5. '```' → logprob: -6.026804447174072
    6. 'cars' → logprob: -7.026804447174072
    7. 'car' → logprob: -8.026803970336914
    8. ' self' → logprob: -8.151803970336914
    9. 'num' → logprob: -8.276803970336914
    10. '   ' → logprob: -8.401803970336914

Token 2278: ' departed' (ID: 115328)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16794487833976746
    2. 'depart' → logprob: -2.54294490814209
    3. '       ' → logprob: -2.91794490814209
    4. 'count' → logprob: -4.04294490814209
    5. 'num' → logprob: -6.29294490814209
    6. ' self' → logprob: -7.29294490814209
    7. 'cars' → logprob: -7.41794490814209
    8. 'left' → logprob: -8.16794490814209
    9. '   ' → logprob: -8.41794490814209
    10. '```' → logprob: -8.54294490814209

Token 2279: '_count' (ID: 7536)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7590340971946716
    2. '_count' → logprob: -1.0090341567993164
    3. '_' → logprob: -2.3840341567993164
    4. ' =' → logprob: -3.1340341567993164
    5. '=' → logprob: -3.6340341567993164
    6. '_car' → logprob: -6.634034156799316
    7. '_tokens' → logprob: -7.009034156799316
    8. '_number' → logprob: -7.259034156799316
    9. '_num' → logprob: -7.509034156799316
    10. '_amount' → logprob: -7.884034156799316

Token 2280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47418251633644104
    2. '=' → logprob: -0.9741824865341187
    3. '()' → logprob: -9.59918212890625
    4. ' +=' → logprob: -11.09918212890625
    5. '+=' → logprob: -11.97418212890625
    6. ',' → logprob: -12.22418212890625
    7. '   ' → logprob: -12.34918212890625
    8. ' ' → logprob: -13.59918212890625
    9. ' =
' → logprob: -13.97418212890625
    10. '=self' → logprob: -14.22418212890625

Token 2281: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.517272024415433e-05
    2. ' self' → logprob: -9.500075340270996
    3. '       ' → logprob: -15.750075340270996
    4. '	self' → logprob: -16.50007438659668
    5. '(self' → logprob: -16.62507438659668
    6. '=self' → logprob: -17.87507438659668
    7. '[self' → logprob: -19.37507438659668
    8. '0' → logprob: -20.00007438659668
    9. 'Self' → logprob: -20.12507438659668
    10. 'len' → logprob: -21.00007438659668

Token 2282: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.4741258919239044
    2. 'process' → logprob: -0.974125862121582
    3. ' process' → logprob: -10.599125862121582
    4. '   ' → logprob: -11.724125862121582
    5. '._' → logprob: -12.599125862121582
    6. '.' → logprob: -12.599125862121582
    7. '	process' → logprob: -12.849125862121582
    8. '_process' → logprob: -12.974125862121582
    9. '       ' → logprob: -13.599125862121582
    10. '.tick' → logprob: -14.849125862121582

Token 2283: '_depart' (ID: 172061)
  Prédit: '_depart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depart' → logprob: -0.0003863438032567501
    2. 'depart' → logprob: -8.000386238098145
    3. 'Depart' → logprob: -10.125386238098145
    4. '_de' → logprob: -12.625386238098145
    5. 's' → logprob: -13.125386238098145
    6. '()' → logprob: -13.750386238098145
    7. '_arr' → logprob: -13.875386238098145
    8. '_del' → logprob: -14.375386238098145
    9. 'ing' → logprob: -14.375386238098145
    10. '()
' → logprob: -14.750386238098145

Token 2284: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -2.1888679839321412e-05
    2. 'ure' → logprob: -10.750021934509277
    3. '
' → logprob: -16.00002098083496
    4. 'als' → logprob: -16.75002098083496
    5. '_car' → logprob: -16.87502098083496
    6. 'ions' → logprob: -17.50002098083496
    7. 'URES' → logprob: -17.50002098083496
    8. '_' → logprob: -17.50002098083496
    9. '()
' → logprob: -17.87502098083496
    10. '()' → logprob: -18.00002098083496

Token 2285: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3071848452091217
    2. '       ' → logprob: -1.4321848154067993
    3. '<|end|>' → logprob: -4.05718469619751
    4. '        
' → logprob: -5.55718469619751
    5. '#' → logprob: -6.93218469619751
    6. '  
' → logprob: -7.68218469619751
    7. ' 
' → logprob: -7.80718469619751
    8. 'self' → logprob: -7.80718469619751
    9. ',' → logprob: -8.057185173034668
    10. '<|end|>' → logprob: -8.057185173034668

Token 2286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03960010036826134
    2. '```' → logprob: -3.914600133895874
    3. 'while' → logprob: -4.414599895477295
    4. '
' → logprob: -5.414599895477295
    5. 'self' → logprob: -7.039599895477295
    6. '        
' → logprob: -7.164599895477295
    7. ' while' → logprob: -7.914599895477295
    8. '   ' → logprob: -9.039600372314453
    9. '``' → logprob: -9.914600372314453
    10. 'if' → logprob: -10.789600372314453

Token 2287: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3558214604854584
    2. 'self' → logprob: -1.6058214902877808
    3. '       ' → logprob: -2.855821371078491
    4. '#' (adapté à ' #') → logprob: -3.605821371078491
    5. 'if' → logprob: -4.85582160949707
    6. '
' → logprob: -5.73082160949707
    7. 'for' → logprob: -6.23082160949707
    8. '        
' → logprob: -7.35582160949707
    9. '```' → logprob: -8.48082160949707
    10. ' while' → logprob: -9.60582160949707

Token 2288: ' After' (ID: 6311)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.012973980978131294
    2. 'self' → logprob: -5.137973785400391
    3. '#' → logprob: -5.637973785400391
    4. '       ' → logprob: -5.762973785400391
    5. 'for' → logprob: -8.26297378540039
    6. ' while' → logprob: -11.26297378540039
    7. '   ' → logprob: -11.51297378540039
    8. 'm' → logprob: -11.76297378540039
    9. 'new' → logprob: -12.26297378540039
    10. 'if' → logprob: -12.26297378540039

Token 2289: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08978409320116043
    2. ' self' → logprob: -2.7147841453552246
    3. '       ' → logprob: -4.339784145355225
    4. 'depart' → logprob: -5.464784145355225
    5. '
' → logprob: -7.339784145355225
    6. '   ' → logprob: -8.214783668518066
    7. 'that' → logprob: -8.339783668518066
    8. ' that' → logprob: -8.339783668518066
    9. ' departed' → logprob: -8.339783668518066
    10. 'if' → logprob: -9.214783668518066

Token 2290: ' departures' (ID: 188012)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.0024819616228342056
    2. '       ' → logprob: -7.002481937408447
    3. ' departed' → logprob: -7.502481937408447
    4. ' departures' → logprob: -7.752481937408447
    5. 'cars' → logprob: -8.627482414245605
    6. 'car' → logprob: -9.002482414245605
    7. '   ' → logprob: -9.252482414245605
    8. 'departure' → logprob: -10.502482414245605
    9. ' departing' → logprob: -10.627482414245605
    10. '
' → logprob: -11.002482414245605

Token 2291: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18078875541687012
    2. ',' → logprob: -2.18078875541687
    3. '
' → logprob: -3.18078875541687
    4. 'while' → logprob: -5.930788993835449
    5. '#' → logprob: -6.305788993835449
    6. 'for' → logprob: -6.305788993835449
    7. '        
' → logprob: -6.305788993835449
    8. 'if' → logprob: -7.430788993835449
    9. ' for' → logprob: -7.680788993835449
    10. ',
' → logprob: -7.805788993835449

Token 2292: ' process' (ID: 2273)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0032267908100038767
    2. '       ' → logprob: -5.7532267570495605
    3. '#' → logprob: -10.003227233886719
    4. ' while' → logprob: -12.878227233886719
    5. '   ' → logprob: -14.503227233886719
    6. '
' → logprob: -14.628227233886719
    7. 'self' → logprob: -16.00322723388672
    8. '	while' → logprob: -16.25322723388672
    9. 'for' → logprob: -16.75322723388672
    10. '        
' → logprob: -17.00322723388672

Token 2293: ' waiting' (ID: 12028)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23462416231632233
    2. '       ' → logprob: -2.234624147415161
    3. 'waiting' → logprob: -2.484624147415161
    4. 'arr' → logprob: -5.60962438583374
    5. 'self' → logprob: -5.60962438583374
    6. 'new' → logprob: -5.85962438583374
    7. ' while' → logprob: -6.60962438583374
    8. '#' → logprob: -6.60962438583374
    9. 'queued' → logprob: -6.98462438583374
    10. 'cars' → logprob: -7.35962438583374

Token 2294: ' queue' (ID: 13661)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.3313421905040741
    2. 'cars' → logprob: -1.9563422203063965
    3. 'while' → logprob: -2.8313422203063965
    4. 'queue' → logprob: -3.5813422203063965
    5. 'if' → logprob: -3.8313422203063965
    6. '       ' → logprob: -3.9563422203063965
    7. ' cars' → logprob: -6.0813422203063965
    8. '_c' → logprob: -6.3313422203063965
    9. 'for' → logprob: -6.3313422203063965
    10. 'car' → logprob: -6.4563422203063965

Token 2295: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023904841393232346
    2. 'while' → logprob: -4.273904800415039
    3. ' while' → logprob: -4.648904800415039
    4. '        
' → logprob: -9.648904800415039
    5. ',' → logprob: -10.648904800415039
    6. '	while' → logprob: -11.398904800415039
    7. '
' → logprob: -12.023904800415039
    8. 'While' → logprob: -12.148904800415039
    9. ':' → logprob: -13.523904800415039
    10. '   ' → logprob: -13.648904800415039

Token 2296: ' parking' (ID: 14472)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.036261796951293945
    2. '_car' → logprob: -3.786261796951294
    3. 'while' → logprob: -5.161261558532715
    4. '_' → logprob: -5.661261558532715
    5. '_wait' → logprob: -7.036261558532715
    6. 'waiting' → logprob: -7.036261558532715
    7. '_c' → logprob: -7.661261558532715
    8. ' car' → logprob: -8.411261558532715
    9. '_queue' → logprob: -8.536261558532715
    10. 'self' → logprob: -8.911261558532715

Token 2297: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13142728805541992
    2. 'while' → logprob: -2.25642728805542
    3. ' while' → logprob: -4.00642728805542
    4. '	while' → logprob: -9.256427764892578
    5. '        
' → logprob: -9.631427764892578
    6. 'for' → logprob: -11.131427764892578
    7. '```' → logprob: -11.381427764892578
    8. 'While' → logprob: -11.506427764892578
    9. '   ' → logprob: -11.631427764892578
    10. ',' → logprob: -12.006427764892578

Token 2298: ' spaces' (ID: 18608)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.027524683624505997
    2. ' departed' → logprob: -3.652524709701538
    3. 'self' → logprob: -7.777524471282959
    4. 'True' → logprob: -8.402524948120117
    5. 'len' → logprob: -8.527524948120117
    6. 'arr' → logprob: -8.652524948120117
    7. ' True' → logprob: -9.652524948120117
    8. 'dep' → logprob: -10.402524948120117
    9. 'not' → logprob: -10.652524948120117
    10. '_depart' → logprob: -10.902524948120117

Token 2299: ' free' (ID: 2240)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2180004119873047
    2. '       ' → logprob: -1.5930004119873047
    3. ':' → logprob: -1.7180004119873047
    4. 'available' → logprob: -1.7180004119873047
    5. '
' → logprob: -3.7180004119873047
    6. ' available' → logprob: -4.093000411987305
    7. '.' → logprob: -4.218000411987305
    8. 'are' → logprob: -4.343000411987305
    9. '_available' → logprob: -4.593000411987305
    10. ' are' → logprob: -4.718000411987305

Token 2300: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010242469608783722
    2. 'while' → logprob: -5.135242462158203
    3. ' while' → logprob: -6.135242462158203
    4. '
' → logprob: -7.385242462158203
    5. '```' → logprob: -7.885242462158203
    6. 'for' → logprob: -8.260242462158203
    7. ' for' → logprob: -8.510242462158203
    8. '        
' → logprob: -8.760242462158203
    9. ':
' → logprob: -8.760242462158203
    10. ':' → logprob: -8.885242462158203

Token 2301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009441436268389225
    2. 'while' → logprob: -6.134441375732422
    3. '```' → logprob: -6.134441375732422
    4. '
' → logprob: -6.259441375732422
    5. ' while' → logprob: -6.384441375732422
    6. ' for' → logprob: -7.759441375732422
    7. '        
' → logprob: -7.759441375732422
    8. 'for' → logprob: -8.134441375732422
    9. '	' → logprob: -9.509441375732422
    10. 'self' → logprob: -10.009441375732422

Token 2302: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3251357972621918
    2. '       ' → logprob: -1.3251358270645142
    3. ' while' → logprob: -4.450135707855225
    4. '```' → logprob: -9.700136184692383
    5. '
' → logprob: -10.575136184692383
    6. '        
' → logprob: -11.325136184692383
    7. 'for' → logprob: -11.450136184692383
    8. '	while' → logprob: -11.825136184692383
    9. '   ' → logprob: -12.200136184692383
    10. 'While' → logprob: -14.075136184692383

Token 2303: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000998155795969069
    2. ' self' → logprob: -7.125998020172119
    3. 'len' → logprob: -8.625998497009277
    4. 'True' → logprob: -11.375998497009277
    5. '(self' → logprob: -14.000998497009277
    6. '   ' → logprob: -14.625998497009277
    7. ' len' → logprob: -14.750998497009277
    8. ' True' → logprob: -14.750998497009277
    9. '	self' → logprob: -14.750998497009277
    10. ' ' → logprob: -16.25099754333496

Token 2304: '.wait' (ID: 29833)
  Prédit: '.wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wait' → logprob: -0.01213555783033371
    2. '.can' → logprob: -4.5121355056762695
    3. 'wait' → logprob: -8.01213550567627
    4. '._' → logprob: -8.38713550567627
    5. '.sp' → logprob: -8.51213550567627
    6. '.' → logprob: -9.26213550567627
    7. '.current' → logprob: -9.26213550567627
    8. '.has' → logprob: -9.51213550567627
    9. ' .' → logprob: -11.63713550567627
    10. '.process' → logprob: -11.76213550567627

Token 2305: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -2.641841820150148e-05
    2. '_' → logprob: -11.25002670288086
    3. '```' → logprob: -12.62502670288086
    4. 'e' → logprob: -12.87502670288086
    5. 'ing' → logprob: -13.37502670288086
    6. '._' → logprob: -14.25002670288086
    7. '_q' → logprob: -14.25002670288086
    8. '__' → logprob: -14.62502670288086
    9. '
' → logprob: -14.62502670288086
    10. 's' → logprob: -14.62502670288086

Token 2306: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05684743821620941
    2. 'and' → logprob: -2.931847333908081
    3. ':
' → logprob: -6.30684757232666
    4. ':' → logprob: -10.05684757232666
    5. '   ' → logprob: -10.68184757232666
    6. '           ' → logprob: -10.80684757232666
    7. '       ' → logprob: -10.80684757232666
    8. '>' → logprob: -10.80684757232666
    9. '	and' → logprob: -12.43184757232666
    10. '```' → logprob: -13.30684757232666

Token 2307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011820121668279171
    2. ' car' → logprob: -5.386820316314697
    3. 'car' → logprob: -6.011820316314697
    4. '```' → logprob: -6.886820316314697
    5. ' True' → logprob: -7.261820316314697
    6. ' and' → logprob: -7.511820316314697
    7. '   ' → logprob: -7.636820316314697
    8. ' queue' → logprob: -8.261819839477539
    9. '            
' → logprob: -8.636819839477539
    10. 'True' → logprob: -8.761819839477539

Token 2308: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9510518908500671
    2. 'car' (adapté à ' car') → logprob: -0.9510518908500671
    3. ' car' → logprob: -2.576051950454712
    4. 'space' → logprob: -3.326051950454712
    5. ' True' → logprob: -4.326051712036133
    6. ' space' → logprob: -4.326051712036133
    7. 'self' → logprob: -4.326051712036133
    8. '   ' → logprob: -4.451051712036133
    9. ' queue' → logprob: -4.826051712036133
    10. ' self' → logprob: -5.076051712036133

Token 2309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03816760703921318
    2. '=' → logprob: -3.288167715072632
    3. ' ' → logprob: -10.038167953491211
    4. '_car' → logprob: -11.663167953491211
    5. '_space' → logprob: -11.663167953491211
    6. '_next' → logprob: -12.038167953491211
    7. '   ' → logprob: -12.288167953491211
    8. '           ' → logprob: -12.288167953491211
    9. ' =
' → logprob: -12.538167953491211
    10. '_' → logprob: -12.663167953491211

Token 2310: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023246292024850845
    2. ' self' → logprob: -3.7732462882995605
    3. '           ' → logprob: -14.148246765136719
    4. '(self' → logprob: -16.77324676513672
    5. '	self' → logprob: -17.64824676513672
    6. ' ' → logprob: -17.77324676513672
    7. '=self' → logprob: -18.02324676513672
    8. '_self' → logprob: -19.02324676513672
    9. '[self' → logprob: -19.14824676513672
    10. '   ' → logprob: -19.77324676513672

Token 2311: '.wait' (ID: 29833)
  Prédit: '.wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wait' → logprob: -9.448370838072151e-05
    2. 'wait' → logprob: -9.375094413757324
    3. 'self' → logprob: -11.750094413757324
    4. '.' → logprob: -13.875094413757324
    5. '       ' → logprob: -15.875094413757324
    6. '   ' → logprob: -16.00009536743164
    7. '_wait' → logprob: -16.25009536743164
    8. '	wait' → logprob: -16.62509536743164
    9. '.await' → logprob: -17.00009536743164
    10. ' .' → logprob: -17.00009536743164

Token 2312: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: 0.0
    2. '_wait' → logprob: -16.875
    3. 'queue' → logprob: -17.625
    4. '_QUEUE' → logprob: -18.25
    5. '_' → logprob: -18.875
    6. '
' → logprob: -19.625
    7. 'Queue' → logprob: -20.25
    8. '_car' → logprob: -20.875
    9. '.queue' → logprob: -21.125
    10. '_
' → logprob: -21.25

Token 2313: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20145153999328613
    2. '.p' → logprob: -1.7014515399932861
    3. '.pop' → logprob: -10.576451301574707
    4. '           ' → logprob: -12.451451301574707
    5. '.peek' → logprob: -12.451451301574707
    6. 'p' → logprob: -13.451451301574707
    7. '   ' → logprob: -14.076451301574707
    8. '       ' → logprob: -14.076451301574707
    9. '.' → logprob: -14.326451301574707
    10. '               ' → logprob: -14.576451301574707

Token 2314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035846298560500145
    2. 'p' → logprob: -6.503584861755371
    3. 'self' → logprob: -6.503584861755371
    4. '[' → logprob: -7.503584861755371
    5. '.p' → logprob: -10.753584861755371
    6. '-' → logprob: -12.128584861755371
    7. 'pop' → logprob: -13.503584861755371
    8. '```' → logprob: -14.503584861755371
    9. 'peek' → logprob: -15.128584861755371
    10. '(' → logprob: -15.253584861755371

Token 2315: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.686739444732666
    2. ')
' → logprob: -1.186739444732666
    3. ')' → logprob: -2.061739444732666
    4. '
' → logprob: -2.811739444732666
    5. '               ' → logprob: -6.686739444732666
    6. '       ' → logprob: -6.686739444732666
    7. '            
' → logprob: -6.936739444732666
    8. ']
' → logprob: -9.061738967895508
    9. '          ' → logprob: -9.561738967895508
    10. '            ' → logprob: -9.686738967895508

Token 2316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011799617670476437
    2. ' if' → logprob: -4.5117998123168945
    3. 'if' → logprob: -8.261799812316895
    4. '            
' → logprob: -8.636799812316895
    5. ' ' → logprob: -10.011799812316895
    6. '```' → logprob: -10.011799812316895
    7. ' ' → logprob: -10.136799812316895
    8. '   ' → logprob: -10.636799812316895
    9. ' =' → logprob: -10.636799812316895
    10. '               ' → logprob: -11.136799812316895

Token 2317: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1592334359884262
    2. 'empty' → logprob: -2.159233331680298
    3. 'self' → logprob: -3.909233331680298
    4. '#' (adapté à ' #') → logprob: -5.659233570098877
    5. ' empty' → logprob: -5.659233570098877
    6. 'space' → logprob: -7.284233570098877
    7. ' self' → logprob: -7.409233570098877
    8. '   ' → logprob: -7.534233570098877
    9. 'possible' → logprob: -7.909233570098877
    10. 'available' → logprob: -8.034233093261719

Token 2318: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7375487685203552
    2. 'empty' → logprob: -0.8625487685203552
    3. 'self' → logprob: -3.237548828125
    4. '#' → logprob: -3.987548828125
    5. 'old' → logprob: -4.612548828125
    6. '   ' → logprob: -4.862548828125
    7. 'prev' → logprob: -5.112548828125
    8. 'possible' → logprob: -6.112548828125
    9. 'available' → logprob: -6.612548828125
    10. 'can' → logprob: -6.612548828125

Token 2319: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15029145777225494
    2. ' =' → logprob: -2.2752914428710938
    3. ' self' → logprob: -3.9002914428710938
    4. '           ' → logprob: -5.150291442871094
    5. '=' → logprob: -5.525291442871094
    6. 'self' → logprob: -6.275291442871094
    7. '_space' → logprob: -6.775291442871094
    8. 'if' → logprob: -7.025291442871094
    9. '_spaces' → logprob: -8.275291442871094
    10. '_self' → logprob: -8.400291442871094

Token 2320: ' can' (ID: 665)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6971996426582336
    2. 'self' → logprob: -0.9471996426582336
    3. 'car' → logprob: -3.072199583053589
    4. '(self' → logprob: -4.072199821472168
    5. ' any' → logprob: -4.322199821472168
    6. 'can' → logprob: -4.572199821472168
    7. 'True' → logprob: -5.072199821472168
    8. ' self' → logprob: -5.197199821472168
    9. 'len' → logprob: -5.322199821472168
    10. '(len' → logprob: -6.072199821472168

Token 2321: ' park' (ID: 11796)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03460965305566788
    2. 'park' → logprob: -3.78460955619812
    3. ' park' → logprob: -5.909609794616699
    4. ' =' → logprob: -6.034609794616699
    5. '   ' → logprob: -6.409609794616699
    6. 'self' → logprob: -6.659609794616699
    7. ' self' → logprob: -6.784609794616699
    8. '=' → logprob: -7.659609794616699
    9. '=self' → logprob: -8.4096097946167
    10. ' ' → logprob: -8.5346097946167

Token 2322: ' now' (ID: 1954)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08886933326721191
    2. 'self' → logprob: -3.713869333267212
    3. ' self' → logprob: -3.713869333267212
    4. '=' → logprob: -4.338869094848633
    5. 'car' → logprob: -5.088869094848633
    6. '           ' → logprob: -5.338869094848633
    7. '(self' → logprob: -5.713869094848633
    8. ' car' → logprob: -5.963869094848633
    9. '_car' → logprob: -6.213869094848633
    10. '(car' → logprob: -6.463869094848633

Token 2323: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14923293888568878
    2. ' =' → logprob: -2.274232864379883
    3. ' if' → logprob: -4.399232864379883
    4. ' self' → logprob: -4.774232864379883
    5. '
' → logprob: -4.899232864379883
    6. '            
' → logprob: -6.274232864379883
    7. '=' → logprob: -7.024232864379883
    8. 'self' → logprob: -7.399232864379883
    9. ' =
' → logprob: -7.649232864379883
    10. ':
' → logprob: -8.024232864379883

Token 2324: ' current' (ID: 2208)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.22206361591815948
    2. 'self' → logprob: -2.0970635414123535
    3. 'this' → logprob: -3.9720635414123535
    4. 'least' → logprob: -4.2220635414123535
    5. 'available' → logprob: -4.5970635414123535
    6. 'empty' → logprob: -5.3470635414123535
    7. ' any' → logprob: -5.4720635414123535
    8. 'some' → logprob: -5.4720635414123535
    9. 'car' → logprob: -5.5970635414123535
    10. 'a' → logprob: -5.9720635414123535

Token 2325: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.800345778465271
    2. '_time' → logprob: -1.175345778465271
    3. 'space' → logprob: -2.0503458976745605
    4. 'spaces' → logprob: -3.5503458976745605
    5. 'car' → logprob: -3.9253458976745605
    6. 'token' → logprob: -3.9253458976745605
    7. ')' → logprob: -4.4253458976745605
    8. 'available' → logprob: -4.8003458976745605
    9. 'self' → logprob: -5.1753458976745605
    10. ' time' → logprob: -5.4253458976745605

Token 2326: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009688684367574751
    2. '            
' → logprob: -7.500968933105469
    3. ',' → logprob: -9.125968933105469
    4. ' =' → logprob: -9.375968933105469
    5. ' if' → logprob: -9.500968933105469
    6. '=' → logprob: -10.750968933105469
    7. '
' → logprob: -11.000968933105469
    8. '   ' → logprob: -11.250968933105469
    9. '       ' → logprob: -11.375968933105469
    10. '          ' → logprob: -12.125968933105469

Token 2327: 'there' (ID: 31813)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.48427972197532654
    2. 'True' → logprob: -1.484279751777649
    3. 'self' → logprob: -1.984279751777649
    4. ' True' → logprob: -4.609279632568359
    5. 'any' → logprob: -5.984279632568359
    6. ' self' → logprob: -6.359279632568359
    7. ' car' → logprob: -6.484279632568359
    8. ')' → logprob: -6.734279632568359
    9. '
' → logprob: -7.609279632568359
    10. 'not' → logprob: -7.859279632568359

Token 2328: ' may' (ID: 1340)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.35795432329177856
    2. ' is' → logprob: -2.357954263687134
    3. 'is' → logprob: -2.607954263687134
    4. '.' → logprob: -3.732954263687134
    5. '.space' → logprob: -3.982954263687134
    6. ')' → logprob: -4.232954502105713
    7. '.has' → logprob: -4.482954502105713
    8. ').' → logprob: -4.607954502105713
    9. 'self' → logprob: -4.607954502105713
    10. '.wait' → logprob: -5.232954502105713

Token 2329: ' newly' (ID: 21834)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6515410542488098
    2. 'is' → logprob: -1.526540994644165
    3. ' be' → logprob: -2.151540994644165
    4. ')' → logprob: -3.151540994644165
    5. ' are' → logprob: -3.151540994644165
    6. 'be' → logprob: -4.276541233062744
    7. 'are' → logprob: -4.276541233062744
    8. ' have' → logprob: -5.526541233062744
    9. '=' → logprob: -5.651541233062744
    10. 'have' → logprob: -5.651541233062744

Token 2330: ' opened' (ID: 13906)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.21235764026641846
    2. 'available' → logprob: -2.587357521057129
    3. 'be' → logprob: -2.837357521057129
    4. ' available' → logprob: -3.962357521057129
    5. ' free' → logprob: -4.337357521057129
    6. ' freed' → logprob: -5.337357521057129
    7. 'free' → logprob: -5.337357521057129
    8. ' have' → logprob: -6.087357521057129
    9. ' is' → logprob: -6.462357521057129
    10. ')' → logprob: -6.712357521057129

Token 2331: ' space' (ID: 4918)
  Prédit: '_spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -1.1030362844467163
    2. ' spaces' → logprob: -1.2280362844467163
    3. ' space' → logprob: -2.103036403656006
    4. '_space' → logprob: -2.353036403656006
    5. ')' → logprob: -3.228036403656006
    6. ' spot' → logprob: -3.478036403656006
    7. ' spots' → logprob: -3.728036403656006
    8. '_' → logprob: -4.228036403656006
    9. 'space' → logprob: -4.478036403656006
    10. 'spaces' → logprob: -4.728036403656006

Token 2332: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.21350368857383728
    2. ')
' → logprob: -1.8385037183761597
    3. '           ' → logprob: -3.96350359916687
    4. '):' → logprob: -5.213503837585449
    5. ')' → logprob: -5.463503837585449
    6. '               ' → logprob: -6.088503837585449
    7. '):

' → logprob: -7.463503837585449
    8. '=' → logprob: -7.713503837585449
    9. ' ):
' → logprob: -8.08850383758545
    10. ' or' → logprob: -8.58850383758545

Token 2333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010263776639476418
    2. '
' → logprob: -8.126026153564453
    3. '            
' → logprob: -8.251026153564453
    4. ' if' → logprob: -8.501026153564453
    5. ' =' → logprob: -9.251026153564453
    6. ',' → logprob: -11.001026153564453
    7. ' 
' → logprob: -11.126026153564453
    8. '          ' → logprob: -11.126026153564453
    9. '<|end|>' → logprob: -11.251026153564453
    10. ' ' → logprob: -11.251026153564453

Token 2334: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1211060285568237
    2. ' self' → logprob: -1.2461060285568237
    3. 'car' → logprob: -1.3711060285568237
    4. '           ' → logprob: -2.6211061477661133
    5. ' car' → logprob: -3.2461061477661133
    6. ' if' → logprob: -5.371106147766113
    7. ' can' → logprob: -5.496106147766113
    8. '
' → logprob: -5.871106147766113
    9. 'if' → logprob: -6.246106147766113
    10. ' not' → logprob: -6.871106147766113

Token 2335: ' search' (ID: 3684)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7375341653823853
    2. 'if' → logprob: -1.8625341653823853
    3. 'self' → logprob: -2.2375340461730957
    4. 'car' → logprob: -2.7375340461730957
    5. 'empty' → logprob: -2.8625340461730957
    6. ' if' → logprob: -3.3625340461730957
    7. 'can' → logprob: -3.6125340461730957
    8. 'possible' → logprob: -4.612534046173096
    9. 'space' → logprob: -4.737534046173096
    10. '
' → logprob: -4.737534046173096

Token 2336: ' empty' (ID: 8213)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.55350661277771
    2. '=' → logprob: -2.92850661277771
    3. 'car' → logprob: -2.92850661277771
    4. 'empty' → logprob: -2.92850661277771
    5. 'self' → logprob: -3.05350661277771
    6. '_empty' → logprob: -3.17850661277771
    7. '_spaces' → logprob: -3.30350661277771
    8. '_positions' → logprob: -4.178506851196289
    9. '_possible' → logprob: -4.428506851196289
    10. '_candidates' → logprob: -4.428506851196289

Token 2337: ' space' (ID: 4918)
  Prédit: '_spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.0016897005261853337
    2. '_' → logprob: -7.501689910888672
    3. '()' → logprob: -7.501689910888672
    4. ' =' → logprob: -9.001689910888672
    5. 'spaces' → logprob: -9.126689910888672
    6. '=' → logprob: -9.376689910888672
    7. '_space' → logprob: -9.626689910888672
    8. '_positions' → logprob: -10.126689910888672
    9. 's' → logprob: -10.376689910888672
    10. '```' → logprob: -10.376689910888672

Token 2338: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0277544017881155
    2. '=' → logprob: -3.777754306793213
    3. 's' → logprob: -6.027754306793213
    4. '           ' → logprob: -7.152754306793213
    5. ')' → logprob: -8.652754783630371
    6. ',' → logprob: -9.277754783630371
    7. '()
' → logprob: -9.277754783630371
    8. '()' → logprob: -9.402754783630371
    9. '_spaces' → logprob: -9.527754783630371
    10. '_' → logprob: -9.652754783630371

Token 2339: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.962773323059082
    2. '           ' → logprob: -0.962773323059082
    3. '=' → logprob: -1.462773323059082
    4. '=True' → logprob: -7.337773323059082
    5. '               ' → logprob: -7.337773323059082
    6. '       ' → logprob: -7.462773323059082
    7. ' or' → logprob: -7.712773323059082
    8. ',' → logprob: -7.962773323059082
    9. '=
' → logprob: -8.212773323059082
    10. '```' → logprob: -8.587773323059082

Token 2340: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' (adapté à ' empty') → logprob: -0.38337442278862
    2. ' empty' → logprob: -1.6333744525909424
    3. '           ' → logprob: -2.1333744525909424
    4. 'self' → logprob: -6.008374214172363
    5. ' self' → logprob: -7.008374214172363
    6. '   ' → logprob: -8.133374214172363
    7. '(empty' → logprob: -8.758374214172363
    8. ' spaces' → logprob: -9.383374214172363
    9. 'available' → logprob: -9.508374214172363
    10. '_empty' → logprob: -9.508374214172363

Token 2341: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.00015419373812619597
    2. '_' → logprob: -9.375154495239258
    3. '_space' → logprob: -10.250154495239258
    4. '_positions' → logprob: -11.375154495239258
    5. 'spaces' → logprob: -12.125154495239258
    6. '_sp' → logprob: -12.375154495239258
    7. 's' → logprob: -12.875154495239258
    8. '_s' → logprob: -13.250154495239258
    9. '```' → logprob: -13.500154495239258
    10. '=_' → logprob: -14.000154495239258

Token 2342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42880484461784363
    2. '=' → logprob: -1.053804874420166
    3. '_sorted' → logprob: -10.428804397583008
    4. '           ' → logprob: -10.928804397583008
    5. '.sort' → logprob: -11.303804397583008
    6. 'sorted' → logprob: -11.303804397583008
    7. ')' → logprob: -12.428804397583008
    8. '=self' → logprob: -12.428804397583008
    9. '```' → logprob: -12.803804397583008
    10. ':' → logprob: -12.803804397583008

Token 2343: ' self' (ID: 1051)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.38771894574165344
    2. 'self' → logprob: -1.137718915939331
    3. ' self' → logprob: -7.63771915435791
    4. ' [' → logprob: -8.51271915435791
    5. '[' → logprob: -9.26271915435791
    6. '   ' → logprob: -11.13771915435791
    7. '(self' → logprob: -11.13771915435791
    8. '[s' → logprob: -11.51271915435791
    9. '           ' → logprob: -12.01271915435791
    10. 'sorted' → logprob: -12.13771915435791

Token 2344: '._' (ID: 2697)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03092825599014759
    2. '[self' → logprob: -3.530928373336792
    3. ' self' → logprob: -6.780928134918213
    4. '(self' → logprob: -10.905928611755371
    5. '   ' → logprob: -11.530928611755371
    6. '[' → logprob: -11.905928611755371
    7. ' [' → logprob: -13.530928611755371
    8. '	self' → logprob: -13.530928611755371
    9. '[
' → logprob: -13.655928611755371
    10. '=self' → logprob: -14.155928611755371

Token 2345: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -6.749814019713085e-06
    2. '_find' → logprob: -12.375006675720215
    3. ' find' → logprob: -13.875006675720215
    4. '(find' → logprob: -14.375006675720215
    5. '```' → logprob: -15.375006675720215
    6. '	find' → logprob: -15.875006675720215
    7. '
' → logprob: -16.00000762939453
    8. '.find' → logprob: -16.12500762939453
    9. '`' → logprob: -16.62500762939453
    10. '[' → logprob: -16.87500762939453

Token 2346: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.000536828360054642
    2. 'spaces' → logprob: -7.625536918640137
    3. 'space' → logprob: -10.250536918640137
    4. 'self' → logprob: -11.750536918640137
    5. '_no' → logprob: -13.875536918640137
    6. 'Spaces' → logprob: -14.000536918640137
    7. '
' → logprob: -14.125536918640137
    8. 'no' → logprob: -14.500536918640137
    9. '_space' → logprob: -14.625536918640137
    10. '```' → logprob: -14.625536918640137

Token 2347: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -8.602024900028482e-05
    2. 'no' → logprob: -9.375085830688477
    3. 'No' → logprob: -15.250085830688477
    4. '```' → logprob: -15.250085830688477
    5. '_empty' → logprob: -15.625085830688477
    6. '(no' → logprob: -16.750085830688477
    7. '   ' → logprob: -16.875085830688477
    8. ' no' → logprob: -17.250085830688477
    9. '_with' → logprob: -17.250085830688477
    10. '_' → logprob: -17.500085830688477

Token 2348: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00013786651834379882
    2. 'cars' → logprob: -9.125138282775879
    3. 's' → logprob: -10.875138282775879
    4. 'car' → logprob: -12.375138282775879
    5. 'Cars' → logprob: -13.375138282775879
    6. '_' → logprob: -13.500138282775879
    7. '```' → logprob: -14.625138282775879
    8. 'c' → logprob: -15.000138282775879
    9. 'space' → logprob: -15.125138282775879
    10. '_car' → logprob: -15.250138282775879

Token 2349: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.04336099326610565
    2. 'ar' → logprob: -3.168360948562622
    3. 'cars' → logprob: -8.418360710144043
    4. '_c' → logprob: -10.293360710144043
    5. 'aros' → logprob: -11.043360710144043
    6. '_' → logprob: -11.293360710144043
    7. 'a' → logprob: -11.418360710144043
    8. 'ors' → logprob: -11.543360710144043
    9. 'os' → logprob: -12.293360710144043
    10. 'rs' → logprob: -12.543360710144043

Token 2350: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2016284167766571
    2. '()' → logprob: -1.7016284465789795
    3. '       ' → logprob: -8.576628684997559
    4. '           ' → logprob: -11.076628684997559
    5. '()
' → logprob: -12.326628684997559
    6. '()

' → logprob: -12.951628684997559
    7. '();' → logprob: -14.201628684997559
    8. '())' → logprob: -14.326628684997559
    9. '()\' → logprob: -14.576628684997559
    10. '()[' → logprob: -15.076628684997559

Token 2351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04969550669193268
    2. '()
' → logprob: -4.0496954917907715
    3. '.sort' → logprob: -4.6746954917907715
    4. '       ' → logprob: -5.0496954917907715
    5. '```' → logprob: -5.5496954917907715
    6. '[]
' → logprob: -6.0496954917907715
    7. '[' → logprob: -6.1746954917907715
    8. ':
' → logprob: -6.1746954917907715
    9. '
' → logprob: -6.2996954917907715
    10. ' or' → logprob: -8.04969596862793

Token 2352: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5990299582481384
    2. 'if' (adapté à ' if') → logprob: -0.8490299582481384
    3. ' if' → logprob: -4.099030017852783
    4. 'empty' → logprob: -5.099030017852783
    5. ' empty' → logprob: -9.974029541015625
    6. '               ' → logprob: -10.849029541015625
    7. ';if' → logprob: -11.099029541015625
    8. '(empty' → logprob: -11.349029541015625
    9. '            
' → logprob: -11.599029541015625
    10. '       ' → logprob: -12.349029541015625

Token 2353: ' empty' (ID: 8213)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03380325809121132
    2. 'empty' → logprob: -3.6588032245635986
    3. ' not' → logprob: -4.908803462982178
    4. '           ' → logprob: -9.90880298614502
    5. ' empty' → logprob: -10.53380298614502
    6. 'len' → logprob: -11.15880298614502
    7. '               ' → logprob: -14.15880298614502
    8. '(not' → logprob: -14.28380298614502
    9. '(empty' → logprob: -14.90880298614502
    10. '
' → logprob: -15.28380298614502

Token 2354: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -6.988221684878226e-06
    2. '```' → logprob: -13.125006675720215
    3. '_' → logprob: -13.250006675720215
    4. 'empty' → logprob: -14.250006675720215
    5. '_places' → logprob: -14.625006675720215
    6. '_positions' → logprob: -14.875006675720215
    7. 'spaces' → logprob: -15.500006675720215
    8. '_sizes' → logprob: -15.625006675720215
    9. '_shapes' → logprob: -16.00000762939453
    10. '_empty' → logprob: -16.25000762939453

Token 2355: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5405739545822144
    2. '.sort' → logprob: -1.6655739545822144
    3. ':' → logprob: -2.040574073791504
    4. '[' → logprob: -2.540574073791504
    5. '==' → logprob: -5.290574073791504
    6. '           ' → logprob: -5.415574073791504
    7. 'and' → logprob: -6.040574073791504
    8. ' and' → logprob: -7.165574073791504
    9. '.' → logprob: -7.165574073791504
    10. '<|end|>' → logprob: -7.165574073791504

Token 2356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037032817490398884
    2. 'empty' → logprob: -5.8787031173706055
    3. ' empty' → logprob: -8.128703117370605
    4. '(empty' → logprob: -8.378703117370605
    5. 'self' → logprob: -9.253703117370605
    6. '[' → logprob: -9.753703117370605
    7. '```' → logprob: -10.128703117370605
    8. '
' → logprob: -10.128703117370605
    9. ':
' → logprob: -10.253703117370605
    10. '           ' → logprob: -10.253703117370605

Token 2357: ' empty' (ID: 8213)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6107763648033142
    2. 'self' → logprob: -1.235776424407959
    3. 'empty' (adapté à ' empty') → logprob: -2.360776424407959
    4. ' self' → logprob: -3.110776424407959
    5. ' empty' → logprob: -3.735776424407959
    6. ' car' → logprob: -6.610776424407959
    7. 'car' → logprob: -6.860776424407959
    8. '(empty' → logprob: -8.3607759475708
    9. ' ' → logprob: -8.6107759475708
    10. '                   ' → logprob: -8.9857759475708

Token 2358: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -7.088138227118179e-05
    2. '_' → logprob: -10.000070571899414
    3. '_
' → logprob: -12.125070571899414
    4. '```' → logprob: -12.500070571899414
    5. '[_' → logprob: -12.625070571899414
    6. '[' → logprob: -12.750070571899414
    7. '_positions' → logprob: -12.875070571899414
    8. 'spaces' → logprob: -13.125070571899414
    9. '
' → logprob: -13.500070571899414
    10. '_space' → logprob: -14.375070571899414

Token 2359: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00010914575977949426
    2. 'sort' → logprob: -9.25010871887207
    3. '=' → logprob: -11.87510871887207
    4. '[' → logprob: -13.37510871887207
    5. '.' → logprob: -13.62510871887207
    6. '.pop' → logprob: -14.37510871887207
    7. ' sort' → logprob: -14.50010871887207
    8. '_sort' → logprob: -14.75010871887207
    9. ' =' → logprob: -15.00010871887207
    10. '_sorted' → logprob: -15.00010871887207

Token 2360: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00035369666875340044
    2. 'key' → logprob: -8.750353813171387
    3. '(
' → logprob: -8.875353813171387
    4. '(lambda' → logprob: -10.875353813171387
    5. ',key' → logprob: -10.875353813171387
    6. '(' → logprob: -12.375353813171387
    7. '```' → logprob: -12.625353813171387
    8. '[key' → logprob: -13.125353813171387
    9. '           ' → logprob: -13.625353813171387
    10. '               ' → logprob: -13.750353813171387

Token 2361: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -6.12258882028982e-05
    2. 'lambda' → logprob: -9.87506103515625
    3. '(lambda' → logprob: -11.87506103515625
    4. '=' → logprob: -13.25006103515625
    5. '```' → logprob: -14.00006103515625
    6. '_lambda' → logprob: -16.50006103515625
    7. 'ambda' → logprob: -16.75006103515625
    8. ' lambda' → logprob: -18.00006103515625
    9. '   ' → logprob: -18.37506103515625
    10. '=
' → logprob: -18.62506103515625

Token 2362: ' s' (ID: 265)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.015177621506154537
    2. ' lambda' → logprob: -4.8901777267456055
    3. '=lambda' → logprob: -5.1401777267456055
    4. '(lambda' → logprob: -6.8901777267456055
    5. 's' → logprob: -7.3901777267456055
    6. '   ' → logprob: -11.265177726745605
    7. 'l' → logprob: -12.015177726745605
    8. '               ' → logprob: -12.265177726745605
    9. '```' → logprob: -12.890177726745605
    10. '_lambda' → logprob: -13.015177726745605

Token 2363: ':' (ID: 25)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.03603207692503929
    2. '=' → logprob: -3.66103196144104
    3. ':' → logprob: -4.661032199859619
    4. '(lambda' → logprob: -9.536031723022461
    5. ' =' → logprob: -9.911031723022461
    6. '=s' → logprob: -10.786031723022461
    7. 'lambda' → logprob: -11.286031723022461
    8. '               ' → logprob: -11.536031723022461
    9. ',' → logprob: -11.661031723022461
    10. '           ' → logprob: -11.911031723022461

Token 2364: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003670364967547357
    2. ' s' → logprob: -8.625367164611816
    3. 'lambda' → logprob: -8.625367164611816
    4. ' lambda' → logprob: -11.750367164611816
    5. '(lambda' → logprob: -16.5003662109375
    6. '=lambda' → logprob: -18.8753662109375
    7. '(s' → logprob: -19.1253662109375
    8. '```' → logprob: -19.8753662109375
    9. '_lambda' → logprob: -20.1253662109375
    10. '_s' → logprob: -20.5003662109375

Token 2365: '.index' (ID: 9736)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03370575234293938
    2. 's' → logprob: -3.533705711364746
    3. '.s' → logprob: -5.783705711364746
    4. '.' → logprob: -8.033705711364746
    5. ' s' → logprob: -8.533705711364746
    6. '.index' → logprob: -8.908705711364746
    7. ':s' → logprob: -9.533705711364746
    8. 'index' → logprob: -10.283705711364746
    9. ':index' → logprob: -10.408705711364746
    10. ':
' → logprob: -11.158705711364746

Token 2366: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.031650811433792114
    2. '[' → logprob: -3.7816507816314697
    3. '               ' → logprob: -5.031651020050049
    4. ')' → logprob: -6.406651020050049
    5. '                   ' → logprob: -9.53165054321289
    6. '
' → logprob: -10.65665054321289
    7. '):
' → logprob: -11.15665054321289
    8. '           ' → logprob: -11.40665054321289
    9. ':
' → logprob: -11.40665054321289
    10. ';' → logprob: -11.78165054321289

Token 2367: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10827360302209854
    2. 'self' → logprob: -2.483273506164551
    3. '                   ' → logprob: -4.733273506164551
    4. '[' → logprob: -5.733273506164551
    5. '```' → logprob: -5.733273506164551
    6. '[self' → logprob: -6.733273506164551
    7. ' self' → logprob: -6.858273506164551
    8. '
' → logprob: -7.108273506164551
    9. '(self' → logprob: -7.858273506164551
    10. '``' → logprob: -9.23327350616455

Token 2368: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03911403939127922
    2. ' self' → logprob: -3.914113998413086
    3. '               ' → logprob: -4.164113998413086
    4. 'car' → logprob: -6.039113998413086
    5. 'empty' → logprob: -8.539113998413086
    6. ' car' → logprob: -8.539113998413086
    7. 's' → logprob: -10.914113998413086
    8. ' empty' → logprob: -11.164113998413086
    9. '   ' → logprob: -11.789113998413086
    10. '                   ' → logprob: -11.914113998413086

Token 2369: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0036057746037840843
    2. '_wait' → logprob: -5.878605842590332
    3. '.wait' → logprob: -7.628605842590332
    4. '_assign' → logprob: -8.503605842590332
    5. 'wait' → logprob: -9.878605842590332
    6. '       ' → logprob: -10.753605842590332
    7. '   ' → logprob: -11.378605842590332
    8. '[' → logprob: -12.878605842590332
    9. '
' → logprob: -12.878605842590332
    10. '_ass' → logprob: -13.128605842590332

Token 2370: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.735893965815194e-05
    2. '_assign' → logprob: -11.000017166137695
    3. 'find' → logprob: -15.625017166137695
    4. 'append' → logprob: -16.875017166137695
    5. 'Assign' → logprob: -16.875017166137695
    6. '.assign' → logprob: -17.125017166137695
    7. 'assigned' → logprob: -17.250017166137695
    8. 'ass' → logprob: -17.375017166137695
    9. '(assign' → logprob: -17.500017166137695
    10. 'assing' → logprob: -17.750017166137695

Token 2371: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012190054985694587
    2. '(empty' → logprob: -9.5001220703125
    3. 'empty' → logprob: -11.5001220703125
    4. 'park' → logprob: -11.5001220703125
    5. '(' → logprob: -11.7501220703125
    6. '(car' → logprob: -12.0001220703125
    7. '_par' → logprob: -12.7501220703125
    8. '           ' → logprob: -13.2501220703125
    9. '               ' → logprob: -14.2501220703125
    10. '\' → logprob: -14.3751220703125

Token 2372: 'park' (ID: 11174)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028305457904934883
    2. 'park' → logprob: -3.9033055305480957
    3. 'car' → logprob: -5.403305530548096
    4. 'empty' → logprob: -6.403305530548096
    5. '_wait' → logprob: -7.028305530548096
    6. '_car' → logprob: -8.778305053710938
    7. 'wait' → logprob: -8.903305053710938
    8. 'self' → logprob: -9.153305053710938
    9. '_par' → logprob: -10.028305053710938
    10. 'parking' → logprob: -10.278305053710938

Token 2373: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00011069540778407827
    2. '_positions' → logprob: -9.750110626220703
    3. '_' → logprob: -10.250110626220703
    4. 'Position' → logprob: -11.625110626220703
    5. '(car' → logprob: -12.625110626220703
    6. '           ' → logprob: -13.500110626220703
    7. '_space' → logprob: -14.250110626220703
    8. '_Position' → logprob: -14.375110626220703
    9. 'position' → logprob: -14.625110626220703
    10. '               ' → logprob: -14.875110626220703

Token 2374: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.014189710840582848
    2. '(empty' → logprob: -4.389189720153809
    3. '(self' → logprob: -7.139189720153809
    4. 'car' → logprob: -7.889189720153809
    5. '(wait' → logprob: -8.014189720153809
    6. '(' → logprob: -9.014189720153809
    7. 'empty' → logprob: -10.389189720153809
    8. '(
' → logprob: -11.639189720153809
    9. '(w' → logprob: -12.389189720153809
    10. 'self' → logprob: -12.514189720153809

Token 2375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021313901990652084
    2. '(empty' → logprob: -3.8963139057159424
    3. '(car' → logprob: -7.896313667297363
    4. '(' → logprob: -8.646313667297363
    5. '               ' → logprob: -8.771313667297363
    6. ' ,' → logprob: -10.396313667297363
    7. 'empty' → logprob: -11.646313667297363
    8. ')' → logprob: -11.771313667297363
    9. ',
' → logprob: -12.271313667297363
    10. ' (' → logprob: -12.521313667297363

Token 2376: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.001170460251159966
    2. ' empty' → logprob: -6.751170635223389
    3. '(empty' → logprob: -16.876171112060547
    4. '           ' → logprob: -17.251171112060547
    5. '               ' → logprob: -17.376171112060547
    6. '.empty' → logprob: -18.376171112060547
    7. '空' → logprob: -18.376171112060547
    8. '       ' → logprob: -18.501171112060547
    9. '_empty' → logprob: -19.001171112060547
    10. '                   ' → logprob: -19.251171112060547

Token 2377: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.0005701907211914659
    2. 'spaces' → logprob: -8.000570297241211
    3. '_positions' → logprob: -9.000570297241211
    4. 'empty' → logprob: -9.500570297241211
    5. ')' → logprob: -11.875570297241211
    6. '_empty' → logprob: -12.125570297241211
    7. '[' → logprob: -12.375570297241211
    8. 'Spaces' → logprob: -12.500570297241211
    9. '(empty' → logprob: -12.875570297241211
    10. '```' → logprob: -13.375570297241211

Token 2378: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.729906196298543e-06
    2. ')[' → logprob: -12.625009536743164
    3. '           ' → logprob: -13.250009536743164
    4. '       ' → logprob: -13.625009536743164
    5. '```' → logprob: -13.875009536743164
    6. ' [' → logprob: -14.000009536743164
    7. '][' → logprob: -14.875009536743164
    8. '   ' → logprob: -14.875009536743164
    9. '[
' → logprob: -15.250009536743164
    10. '0' → logprob: -15.625009536743164

Token 2379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.204720582696609e-05
    2. '[' → logprob: -9.875052452087402
    3. ' ' → logprob: -15.375052452087402
    4. '(' → logprob: -17.000051498413086
    5. ')' → logprob: -17.000051498413086
    6. '   ' → logprob: -17.250051498413086
    7. '
' → logprob: -17.375051498413086
    8. '```' → logprob: -17.500051498413086
    9. '#' → logprob: -18.000051498413086
    10. '           ' → logprob: -18.250051498413086

Token 2380: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20143507421016693
    2. ')' → logprob: -1.7014350891113281
    3. ')
' → logprob: -11.576435089111328
    4. '               ' → logprob: -12.201435089111328
    5. ')

' → logprob: -12.576435089111328
    6. '           ' → logprob: -13.576435089111328
    7. ')`
' → logprob: -14.201435089111328
    8. '       ' → logprob: -14.451435089111328
    9. ' )
' → logprob: -15.076435089111328
    10. '                   ' → logprob: -15.076435089111328

Token 2381: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006125979125499725
    2. '                
' → logprob: -8.000612258911133
    3. '                   ' → logprob: -9.500612258911133
    4. '```' → logprob: -10.625612258911133
    5. '<|end|>' → logprob: -10.750612258911133
    6. '[' → logprob: -10.875612258911133
    7. 'self' → logprob: -11.000612258911133
    8. '			' → logprob: -11.125612258911133
    9. '              ' → logprob: -11.500612258911133
    10. ',' → logprob: -11.625612258911133

Token 2382: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.36145126819610596
    2. '               ' → logprob: -1.236451268196106
    3. ' self' → logprob: -4.361451148986816
    4. '                   ' → logprob: -9.736451148986816
    5. '           ' → logprob: -10.611451148986816
    6. '	self' → logprob: -11.111451148986816
    7. '```' → logprob: -11.111451148986816
    8. 'del' → logprob: -11.236451148986816
    9. '			' → logprob: -11.361451148986816
    10. '   ' → logprob: -12.361451148986816

Token 2383: '.wait' (ID: 29833)
  Prédit: '.wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wait' → logprob: -5.848420551046729e-05
    2. 'wait' → logprob: -9.8750581741333
    3. '.' → logprob: -12.6250581741333
    4. '	wait' → logprob: -13.3750581741333
    5. ' wait' → logprob: -14.6250581741333
    6. ').' → logprob: -14.8750581741333
    7. '_wait' → logprob: -15.0000581741333
    8. ' .' → logprob: -15.0000581741333
    9. '       ' → logprob: -15.3750581741333
    10. '
' → logprob: -16.500059127807617

Token 2384: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.0564331205387134e-05
    2. '_wait' → logprob: -11.50001049041748
    3. '_' → logprob: -16.000011444091797
    4. 'Queue' → logprob: -16.250011444091797
    5. '_QUEUE' → logprob: -16.625011444091797
    6. '._' → logprob: -17.250011444091797
    7. '```' → logprob: -17.750011444091797
    8. 'wait' → logprob: -17.875011444091797
    9. 'ait' → logprob: -18.375011444091797
    10. 'queue' → logprob: -18.750011444091797

Token 2385: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00026455431361682713
    2. '.pop' → logprob: -8.625264167785645
    3. '           ' → logprob: -9.750264167785645
    4. 'opleft' → logprob: -11.750264167785645
    5. '.rotate' → logprob: -12.875264167785645
    6. '                   ' → logprob: -12.875264167785645
    7. '.' → logprob: -13.000264167785645
    8. '       ' → logprob: -13.000264167785645
    9. '               ' → logprob: -13.125264167785645
    10. ' .' → logprob: -13.250264167785645

Token 2386: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0009178895270451903
    2. 'op' → logprob: -7.000917911529541
    3. 'ople' → logprob: -12.625917434692383
    4. 'opl' → logprob: -13.125917434692383
    5. '```' → logprob: -14.375917434692383
    6. '
' → logprob: -16.250917434692383
    7. 'opup' → logprob: -16.750917434692383
    8. 'opt' → logprob: -16.875917434692383
    9. 'p' → logprob: -17.250917434692383
    10. 'opu' → logprob: -17.375917434692383

Token 2387: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.33464306592941284
    2. '()' → logprob: -1.3346431255340576
    3. '           ' → logprob: -3.9596431255340576
    4. '               ' → logprob: -6.5846428871154785
    5. 'else' → logprob: -8.584643363952637
    6. '<|end|>' → logprob: -8.959643363952637
    7. '();' → logprob: -9.209643363952637
    8. '
' → logprob: -10.209643363952637
    9. '```' → logprob: -10.209643363952637
    10. '()

' → logprob: -10.209643363952637

Token 2388: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11556600034236908
    2. '               ' → logprob: -2.2405660152435303
    3. 'else' → logprob: -5.990565776824951
    4. 'elif' → logprob: -9.11556625366211
    5. ' else' → logprob: -9.99056625366211
    6. '```' → logprob: -10.11556625366211
    7. '                   ' → logprob: -11.11556625366211
    8. '		' → logprob: -11.49056625366211
    9. '       ' → logprob: -12.36556625366211
    10. 'continue' → logprob: -12.36556625366211

Token 2389: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6879404783248901
    2. '               ' → logprob: -1.1879404783248901
    3. '           ' → logprob: -1.6879404783248901
    4. 'else' → logprob: -5.18794059753418
    5. ' continue' → logprob: -6.31294059753418
    6. 'elif' → logprob: -9.43794059753418
    7. '                   ' → logprob: -9.43794059753418
    8. '```' → logprob: -10.68794059753418
    9. '       ' → logprob: -11.56294059753418
    10. 'continu' → logprob: -11.68794059753418

Token 2390: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022799992933869362
    2. '
' → logprob: -3.8977999687194824
    3. '            
' → logprob: -6.147799968719482
    4. '```' → logprob: -10.27280044555664
    5. 'elif' → logprob: -10.64780044555664
    6. 'else' → logprob: -10.89780044555664
    7. '           
' → logprob: -12.02280044555664
    8. '#' → logprob: -12.14780044555664
    9. '    
' → logprob: -12.27280044555664
    10. 'if' → logprob: -12.77280044555664

Token 2391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040918976068496704
    2. '
' → logprob: -3.290919065475464
    3. '            
' → logprob: -5.915918827056885
    4. '  
' → logprob: -10.415919303894043
    5. '    
' → logprob: -10.540919303894043
    6. 'else' → logprob: -11.040919303894043
    7. '```' → logprob: -11.040919303894043
    8. '           
' → logprob: -11.165919303894043
    9. 'empty' → logprob: -11.540919303894043
    10. 'elif' → logprob: -11.665919303894043

Token 2392: ' else' (ID: 1203)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.5017739534378052
    2. '#' → logprob: -1.2517739534378052
    3. '           ' → logprob: -2.3767738342285156
    4. '       ' → logprob: -4.376773834228516
    5. '
' → logprob: -6.126773834228516
    6. '   ' → logprob: -8.001773834228516
    7. 'if' → logprob: -8.876773834228516
    8. ' #' → logprob: -9.126773834228516
    9. 'spaces' → logprob: -9.626773834228516
    10. ' space' → logprob: -10.126773834228516

Token 2393: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4111561179161072
    2. '           ' → logprob: -1.286156177520752
    3. ' if' → logprob: -3.536156177520752
    4. ':
' → logprob: -3.911156177520752
    5. 'if' → logprob: -5.036156177520752
    6. ':' → logprob: -5.661156177520752
    7. '            ' → logprob: -8.661155700683594
    8. '   ' → logprob: -8.911155700683594
    9. '              ' → logprob: -8.911155700683594
    10. '            
' → logprob: -8.911155700683594

Token 2394: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038266513496637344
    2. '           ' → logprob: -3.53826642036438
    3. 'break' → logprob: -5.413266658782959
    4. '#' → logprob: -6.288266658782959
    5. 'space' → logprob: -6.788266658782959
    6. 'if' → logprob: -8.2882661819458
    7. '   ' → logprob: -8.4132661819458
    8. ' break' → logprob: -8.5382661819458
    9. ' #' → logprob: -9.2882661819458
    10. ' ' → logprob: -9.4132661819458

Token 2395: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.05811169743537903
    2. '               ' → logprob: -2.9331116676330566
    3. '#' (adapté à ' #') → logprob: -6.183111667633057
    4. 'space' → logprob: -7.308111667633057
    5. ' break' → logprob: -8.183112144470215
    6. '           ' → logprob: -8.808112144470215
    7. '   ' → logprob: -10.058112144470215
    8. '	break' → logprob: -12.558112144470215
    9. ' ' → logprob: -12.808112144470215
    10. 'if' → logprob: -13.308112144470215

Token 2396: ' try' (ID: 2075)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0197275560349226
    2. '#' → logprob: -4.51972770690918
    3. 'space' → logprob: -4.76972770690918
    4. ' break' → logprob: -9.64472770690918
    5. '           ' → logprob: -10.26972770690918
    6. '   ' → logprob: -10.76972770690918
    7. '               ' → logprob: -10.89472770690918
    8. '       ' → logprob: -12.26972770690918
    9. ' #' → logprob: -13.01972770690918
    10. '	break' → logprob: -13.14472770690918

Token 2397: ' min' (ID: 1349)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08799237012863159
    2. ':
' → logprob: -2.7129924297332764
    3. '_to' → logprob: -4.587992191314697
    4. ':' → logprob: -5.837992191314697
    5. ' to' → logprob: -6.337992191314697
    6. '               ' → logprob: -6.462992191314697
    7. '           ' → logprob: -7.712992191314697
    8. '   ' → logprob: -7.837992191314697
    9. '                   ' → logprob: -8.462992668151855
    10. 'park' → logprob: -8.837992668151855

Token 2398: ' diff' (ID: 8868)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -6.704273118884885e-07
    2. '_difference' → logprob: -15.875000953674316
    3. 'diff' → logprob: -16.0
    4. '_DIFF' → logprob: -16.875
    5. '_min' → logprob: -17.0
    6. 'Diff' → logprob: -17.25
    7. '_d' → logprob: -17.375
    8. '_space' → logprob: -17.375
    9. '(_' → logprob: -17.5
    10. '           ' → logprob: -17.5

Token 2399: ' space' (ID: 4918)
  Prédit: '_space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_space' → logprob: -0.0767480880022049
    2. 'space' → logprob: -2.9517481327056885
    3. ' space' → logprob: -4.076747894287109
    4. '           ' → logprob: -5.701747894287109
    5. '               ' → logprob: -6.826747894287109
    6. '(space' → logprob: -8.70174789428711
    7. '_SPACE' → logprob: -11.32674789428711
    8. '=' → logprob: -11.57674789428711
    9. '.space' → logprob: -11.82674789428711
    10. '       ' → logprob: -11.95174789428711

Token 2400: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1233358159661293
    2. ' =' → logprob: -2.998335838317871
    3. '=' → logprob: -3.248335838317871
    4. 'space' → logprob: -4.873335838317871
    5. '           ' → logprob: -4.998335838317871
    6. '(space' → logprob: -5.123335838317871
    7. ' space' → logprob: -5.248335838317871
    8. '                   ' → logprob: -7.498335838317871
    9. ',' → logprob: -8.123335838317871
    10. '```' → logprob: -8.373335838317871

Token 2401: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1000913754105568
    2. '=' → logprob: -2.8500914573669434
    3. ' =' → logprob: -3.3500914573669434
    4. 'space' → logprob: -7.100091457366943
    5. '                   ' → logprob: -7.350091457366943
    6. '(space' → logprob: -8.600090980529785
    7. '                ' → logprob: -8.725090980529785
    8. ' space' → logprob: -9.350090980529785
    9. '```' → logprob: -9.350090980529785
    10. '=None' → logprob: -9.725090980529785

Token 2402: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' (adapté à ' space') → logprob: -7.779520092299208e-05
    2. ' space' → logprob: -10.125078201293945
    3. '               ' → logprob: -10.250078201293945
    4. '           ' → logprob: -13.250078201293945
    5. '                   ' → logprob: -15.750078201293945
    6. '_space' → logprob: -16.000078201293945
    7. 'self' → logprob: -16.375078201293945
    8. '   ' → logprob: -16.500078201293945
    9. '(space' → logprob: -16.500078201293945
    10. 'spaces' → logprob: -17.875078201293945

Token 2403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891149073839188
    2. '=' → logprob: -2.578911542892456
    3. '=self' → logprob: -10.953911781311035
    4. '=None' → logprob: -13.578911781311035
    5. '           ' → logprob: -14.328911781311035
    6. '                   ' → logprob: -14.453911781311035
    7. '=_' → logprob: -14.453911781311035
    8. '               ' → logprob: -14.953911781311035
    9. ':' → logprob: -15.203911781311035
    10. 's' → logprob: -15.703911781311035

Token 2404: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008617766201496124
    2. ' self' → logprob: -4.758617877960205
    3. '(self' → logprob: -13.258617401123047
    4. '               ' → logprob: -13.758617401123047
    5. '           ' → logprob: -15.633617401123047
    6. '	self' → logprob: -16.008617401123047
    7. '[self' → logprob: -17.008617401123047
    8. '=self' → logprob: -17.508617401123047
    9. '                   ' → logprob: -18.133617401123047
    10. '   ' → logprob: -19.258617401123047

Token 2405: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0017101633129641414
    2. '_min' → logprob: -6.376709938049316
    3. '.min' → logprob: -11.876709938049316
    4. '       ' → logprob: -15.626709938049316
    5. '_m' → logprob: -15.751709938049316
    6. '_can' → logprob: -15.751709938049316
    7. '.' → logprob: -16.001710891723633
    8. '   ' → logprob: -16.001710891723633
    9. 'self' → logprob: -16.501710891723633
    10. '_self' → logprob: -16.501710891723633

Token 2406: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.170270353322849e-05
    2. '_min' → logprob: -9.750061988830566
    3. 'find' → logprob: -12.625061988830566
    4. '_find' → logprob: -16.87506103515625
    5. ' min' → logprob: -17.37506103515625
    6. '(min' → logprob: -19.87506103515625
    7. '
' → logprob: -20.25006103515625
    8. 'm' → logprob: -21.25006103515625
    9. '	min' → logprob: -21.25006103515625
    10. 'max' → logprob: -21.25006103515625

Token 2407: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -4.4849443838757e-06
    2. 'diff' → logprob: -12.625004768371582
    3. '_d' → logprob: -15.125004768371582
    4. '_DIFF' → logprob: -15.125004768371582
    5. '_space' → logprob: -15.500004768371582
    6. 'Diff' → logprob: -16.250003814697266
    7. '_def' → logprob: -16.250003814697266
    8. 'space' → logprob: -16.750003814697266
    9. '_min' → logprob: -17.500003814697266
    10. '```' → logprob: -17.875003814697266

Token 2408: '_space' (ID: 36700)
  Prédit: '_space'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_space' → logprob: -0.0003918271977454424
    2. 'space' → logprob: -7.875391960144043
    3. 'Space' → logprob: -12.750391960144043
    4. '_car' → logprob: -12.875391960144043
    5. '_spaces' → logprob: -13.000391960144043
    6. 'car' → logprob: -13.625391960144043
    7. '_' → logprob: -14.250391960144043
    8. '_diff' → logprob: -14.500391960144043
    9. '(space' → logprob: -14.750391960144043
    10. ' space' → logprob: -14.750391960144043

Token 2409: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -1.0802738870552275e-05
    2. 'car' → logprob: -11.50001049041748
    3. '(space' → logprob: -15.12501049041748
    4. '(' → logprob: -15.50001049041748
    5. '```' → logprob: -16.125011444091797
    6. '	car' → logprob: -17.000011444091797
    7. '(
' → logprob: -17.250011444091797
    8. '.car' → logprob: -17.625011444091797
    9. ' (' → logprob: -18.125011444091797
    10. ' car' → logprob: -19.000011444091797

Token 2410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01413471158593893
    2. '(space' → logprob: -4.639134883880615
    3. '(car' → logprob: -5.764134883880615
    4. ')' → logprob: -6.889134883880615
    5. '               ' → logprob: -9.889134407043457
    6. '           ' → logprob: -10.264134407043457
    7. ',
' → logprob: -10.389134407043457
    8. ' ,' → logprob: -10.889134407043457
    9. ')
' → logprob: -11.139134407043457
    10. 'space' → logprob: -11.139134407043457

Token 2411: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006618033512495458
    2. ' self' → logprob: -7.500661849975586
    3. '                   ' → logprob: -9.875661849975586
    4. '               ' → logprob: -10.250661849975586
    5. '           ' → logprob: -11.125661849975586
    6. '                       ' → logprob: -13.750661849975586
    7. '(self' → logprob: -14.000661849975586
    8. '
' → logprob: -14.250661849975586
    9. '   ' → logprob: -14.375661849975586
    10. '                           ' → logprob: -15.000661849975586

Token 2412: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.008617881685495377
    2. 'current' → logprob: -4.758617877960205
    3. ' current' → logprob: -13.258618354797363
    4. '.' → logprob: -15.133618354797363
    5. '
' → logprob: -15.383618354797363
    6. '.user' → logprob: -15.383618354797363
    7. '_current' → logprob: -15.383618354797363
    8. ')' → logprob: -16.383617401123047
    9. '           ' → logprob: -16.383617401123047
    10. '	current' → logprob: -16.633617401123047

Token 2413: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00023154958034865558
    2. '._' → logprob: -9.000231742858887
    3. '.time' → logprob: -9.875231742858887
    4. 'time' → logprob: -10.375231742858887
    5. 'self' → logprob: -11.500231742858887
    6. '_t' → logprob: -12.375231742858887
    7. '_token' → logprob: -12.750231742858887
    8. ')' → logprob: -13.125231742858887
    9. ' time' → logprob: -13.375231742858887
    10. 'ime' → logprob: -14.125231742858887

Token 2414: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08014655113220215
    2. ')' → logprob: -2.580146551132202
    3. '               ' → logprob: -7.080146789550781
    4. '           ' → logprob: -7.830146789550781
    5. ')
' → logprob: -11.205146789550781
    6. '                   ' → logprob: -13.830146789550781
    7. '[' → logprob: -14.580146789550781
    8. ')

' → logprob: -15.205146789550781
    9. ')`
' → logprob: -15.580146789550781
    10. '             ' → logprob: -15.705146789550781

Token 2415: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016230609267950058
    2. '```' → logprob: -5.016230583190918
    3. '           ' → logprob: -5.516230583190918
    4. ' if' → logprob: -5.641230583190918
    5. '(None' → logprob: -7.391230583190918
    6. '                   ' → logprob: -8.141230583190918
    7. '                ' → logprob: -9.016230583190918
    8. '              ' → logprob: -9.141230583190918
    9. '<|end|>' → logprob: -9.141230583190918
    10. ')' → logprob: -9.516230583190918

Token 2416: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.016499625518918037
    2. '               ' → logprob: -4.2664995193481445
    3. ' if' → logprob: -6.6414995193481445
    4. 'self' → logprob: -7.5164995193481445
    5. '           ' → logprob: -7.6414995193481445
    6. 'If' → logprob: -13.641499519348145
    7. '```' → logprob: -13.891499519348145
    8. '                   ' → logprob: -14.141499519348145
    9. '(self' → logprob: -14.641499519348145
    10. '   ' → logprob: -15.016499519348145

Token 2417: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.014163863845169544
    2. ' space' → logprob: -4.264163970947266
    3. '(space' → logprob: -15.139163970947266
    4. 'spaces' → logprob: -18.139163970947266
    5. '               ' → logprob: -18.514163970947266
    6. '_space' → logprob: -19.264163970947266
    7. '                ' → logprob: -19.514163970947266
    8. '.space' → logprob: -19.639163970947266
    9. 'spacing' → logprob: -20.264163970947266
    10. ' not' → logprob: -20.389163970947266

Token 2418: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.010613380931317806
    2. 'is' → logprob: -4.760613441467285
    3. '                   ' → logprob: -6.385613441467285
    4. ':
' → logprob: -8.635613441467285
    5. ')' → logprob: -10.010613441467285
    6. '               ' → logprob: -10.510613441467285
    7. ':' → logprob: -10.760613441467285
    8. '):
' → logprob: -11.885613441467285
    9. '                       ' → logprob: -12.135613441467285
    10. '                ' → logprob: -12.385613441467285

Token 2419: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12797565758228302
    2. 'None' → logprob: -2.1279757022857666
    3. ' not' → logprob: -6.8779754638671875
    4. ' None' → logprob: -11.252975463867188
    5. '                   ' → logprob: -13.127975463867188
    6. 'Not' → logprob: -14.377975463867188
    7. '=None' → logprob: -14.627975463867188
    8. 'none' → logprob: -14.627975463867188
    9. '               ' → logprob: -15.127975463867188
    10. 'n' → logprob: -16.877975463867188

Token 2420: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0018405868904665112
    2. 'not' → logprob: -6.501840591430664
    3. ' None' → logprob: -8.001840591430664
    4. ' not' → logprob: -12.751840591430664
    5. 'Not' → logprob: -16.001840591430664
    6. 'none' → logprob: -16.126840591430664
    7. '               ' → logprob: -16.251840591430664
    8. '                   ' → logprob: -16.501840591430664
    9. '=None' → logprob: -16.751840591430664
    10. '(None' → logprob: -16.876840591430664

Token 2421: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14653225243091583
    2. '                   ' → logprob: -2.3965322971343994
    3. ':' → logprob: -3.3965322971343994
    4. '               ' → logprob: -4.64653205871582
    5. '):
' → logprob: -7.14653205871582
    6. ' and' → logprob: -7.89653205871582
    7. '{
' → logprob: -8.39653205871582
    8. '                       ' → logprob: -8.89653205871582
    9. '           ' → logprob: -9.64653205871582
    10. '```' → logprob: -9.64653205871582

Token 2422: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008132717572152615
    2. 'self' → logprob: -5.6331329345703125
    3. ' self' → logprob: -6.5081329345703125
    4. '               ' → logprob: -6.6331329345703125
    5. '                       ' → logprob: -7.6331329345703125
    6. '(self' → logprob: -7.7581329345703125
    7. '```' → logprob: -8.008132934570312
    8. '{
' → logprob: -9.508132934570312
    9. '                    
' → logprob: -9.883132934570312
    10. '   ' → logprob: -10.133132934570312

Token 2423: ' self' (ID: 1051)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.41038328409194946
    2. 'self' (adapté à ' self') → logprob: -1.1603832244873047
    3. ' self' → logprob: -4.035383224487305
    4. '                       ' → logprob: -6.035383224487305
    5. '(self' → logprob: -6.660383224487305
    6. '	self' → logprob: -7.035383224487305
    7. '   ' → logprob: -7.785383224487305
    8. '```' → logprob: -7.785383224487305
    9. '_self' → logprob: -9.660383224487305
    10. '               ' → logprob: -11.285383224487305

Token 2424: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00015407454338856041
    2. '_wait' → logprob: -9.125154495239258
    3. '.wait' → logprob: -10.750154495239258
    4. '_assign' → logprob: -10.875154495239258
    5. '       ' → logprob: -13.125154495239258
    6. '_ass' → logprob: -14.000154495239258
    7. '.' → logprob: -14.875154495239258
    8. 'wait' → logprob: -14.875154495239258
    9. '   ' → logprob: -15.375154495239258
    10. '           ' → logprob: -15.750154495239258

Token 2425: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.00029708960209973156
    2. '_assign' → logprob: -8.125297546386719
    3. 'min' → logprob: -15.250297546386719
    4. 'Assign' → logprob: -15.375297546386719
    5. '.assign' → logprob: -15.500297546386719
    6. 'assigned' → logprob: -16.37529754638672
    7. '(assign' → logprob: -16.50029754638672
    8. '	assign' → logprob: -16.75029754638672
    9. ' assign' → logprob: -17.00029754638672
    10. 'ass' → logprob: -17.75029754638672

Token 2426: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.673547563375905e-05
    2. '(car' → logprob: -10.375086784362793
    3. '_space' → logprob: -11.500086784362793
    4. '_par' → logprob: -11.500086784362793
    5. '_car' → logprob: -11.625086784362793
    6. '(space' → logprob: -11.625086784362793
    7. 'park' → logprob: -12.125086784362793
    8. 'car' → logprob: -12.500086784362793
    9. 'space' → logprob: -13.000086784362793
    10. '(' → logprob: -13.125086784362793

Token 2427: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -0.14604173600673676
    2. '_' → logprob: -2.5210416316986084
    3. 'space' → logprob: -2.8960416316986084
    4. 'Park' → logprob: -8.896041870117188
    5. '(space' → logprob: -10.646041870117188
    6. 'car' → logprob: -10.771041870117188
    7. '```' → logprob: -10.896041870117188
    8. 'parking' → logprob: -11.021041870117188
    9. '_space' → logprob: -11.271041870117188
    10. ' space' → logprob: -11.896041870117188

Token 2428: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -7.457669562427327e-05
    2. '_' → logprob: -9.62507438659668
    3. 'position' → logprob: -12.37507438659668
    4. 'Position' → logprob: -13.00007438659668
    5. '                   ' → logprob: -14.62507438659668
    6. '_positions' → logprob: -14.87507438659668
    7. '           ' → logprob: -15.12507438659668
    8. '(car' → logprob: -15.37507438659668
    9. 'park' → logprob: -15.75007438659668
    10. '               ' → logprob: -16.00007438659668

Token 2429: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.31334006786346436
    2. '(space' → logprob: -1.3133400678634644
    3. '(' → logprob: -9.563340187072754
    4. '(
' → logprob: -12.563340187072754
    5. '```' → logprob: -13.688340187072754
    6. '(sp' → logprob: -13.813340187072754
    7. '                   ' → logprob: -13.938340187072754
    8. ' (' → logprob: -14.313340187072754
    9. '(vehicle' → logprob: -16.188339233398438
    10. '(ship' → logprob: -16.313339233398438

Token 2430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001561009994475171
    2. '(space' → logprob: -9.62515640258789
    3. '                   ' → logprob: -10.00015640258789
    4. ' ,' → logprob: -11.00015640258789
    5. ',
' → logprob: -11.12515640258789
    6. '<|end|>' → logprob: -12.37515640258789
    7. ')' → logprob: -12.62515640258789
    8. '[' → logprob: -13.62515640258789
    9. '),' → logprob: -13.87515640258789
    10. '‌,' → logprob: -14.25015640258789

Token 2431: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.004221570678055286
    2. 'car' → logprob: -5.504221439361572
    3. ' space' → logprob: -8.87922191619873
    4. ' car' → logprob: -12.50422191619873
    5. '(space' → logprob: -16.254220962524414
    6. 'spaces' → logprob: -16.754220962524414
    7. 'spacing' → logprob: -17.879220962524414
    8. '                   ' → logprob: -18.879220962524414
    9. '_space' → logprob: -18.879220962524414
    10. '(car' → logprob: -19.129220962524414

Token 2432: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40135055780410767
    2. ')' → logprob: -1.151350498199463
    3. ')
' → logprob: -4.401350498199463
    4. '               ' → logprob: -7.776350498199463
    5. '<|end|>' → logprob: -8.026350975036621
    6. '				' → logprob: -8.276350975036621
    7. '                       ' → logprob: -8.651350975036621
    8. '           ' → logprob: -8.776350975036621
    9. '```' → logprob: -9.276350975036621
    10. '		           ' → logprob: -9.401350975036621

Token 2433: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008659643935970962
    2. '               ' → logprob: -8.375865936279297
    3. '                    
' → logprob: -8.625865936279297
    4. '```' → logprob: -8.750865936279297
    5. '           ' → logprob: -9.750865936279297
    6. '                       ' → logprob: -10.000865936279297
    7. '                    ' → logprob: -10.250865936279297
    8. '<|end|>' → logprob: -10.500865936279297
    9. 'self' → logprob: -10.875865936279297
    10. '				' → logprob: -11.250865936279297

Token 2434: ' self' (ID: 1051)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.43763288855552673
    2. ' self' → logprob: -1.4376329183578491
    3. 'self' (adapté à ' self') → logprob: -2.1876327991485596
    4. '                       ' → logprob: -6.062633037567139
    5. '	self' → logprob: -7.937633037567139
    6. '                    
' → logprob: -8.06263256072998
    7. '                    ' → logprob: -8.06263256072998
    8. '               ' → logprob: -8.31263256072998
    9. '```' → logprob: -8.56263256072998
    10. '				' → logprob: -8.81263256072998

Token 2435: '.wait' (ID: 29833)
  Prédit: '.wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wait' → logprob: -0.00035691517405211926
    2. 'wait' → logprob: -8.250356674194336
    3. '._' → logprob: -9.875356674194336
    4. '_wait' → logprob: -10.125356674194336
    5. '.' → logprob: -13.500356674194336
    6. '       ' → logprob: -14.000356674194336
    7. '
' → logprob: -14.250356674194336
    8. '	wait' → logprob: -14.500356674194336
    9. ' wait' → logprob: -15.625356674194336
    10. '   ' → logprob: -16.125356674194336

Token 2436: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -3.7385154428193346e-05
    2. '_wait' → logprob: -10.25003719329834
    3. 'queue' → logprob: -14.12503719329834
    4. 'wait' → logprob: -14.25003719329834
    5. 'Queue' → logprob: -14.87503719329834
    6. '_QUEUE' → logprob: -16.500038146972656
    7. '_' → logprob: -16.875038146972656
    8. '```' → logprob: -17.000038146972656
    9. '_list' → logprob: -17.625038146972656
    10. 'que' → logprob: -18.125038146972656

Token 2437: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00015669701679144055
    2. '.append' → logprob: -9.37515640258789
    3. '.pop' → logprob: -10.25015640258789
    4. 'opleft' → logprob: -11.87515640258789
    5. '```' → logprob: -12.12515640258789
    6. '.' → logprob: -12.12515640258789
    7. ' .' → logprob: -12.50015640258789
    8. '       ' → logprob: -12.50015640258789
    9. ').' → logprob: -13.25015640258789
    10. '                   ' → logprob: -13.62515640258789

Token 2438: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00013381359167397022
    2. 'op' → logprob: -9.000133514404297
    3. 'wait' → logprob: -12.500133514404297
    4. 'left' → logprob: -12.625133514404297
    5. 'e' → logprob: -14.125133514404297
    6. 'deque' → logprob: -14.625133514404297
    7. 'oped' → logprob: -15.125133514404297
    8. 'append' → logprob: -15.250133514404297
    9. 'queue' → logprob: -15.250133514404297
    10. '```' → logprob: -15.500133514404297

Token 2439: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3134676218032837
    2. '()' → logprob: -1.3134676218032837
    3. '                   ' → logprob: -8.813467979431152
    4. '()\' → logprob: -10.938467979431152
    5. '()

' → logprob: -11.688467979431152
    6. '()
' → logprob: -11.938467979431152
    7. '();' → logprob: -11.938467979431152
    8. '())
' → logprob: -12.938467979431152
    9. '();
' → logprob: -13.063467979431152
    10. '               ' → logprob: -13.313467979431152

Token 2440: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03496633842587471
    2. '               ' → logprob: -3.784966230392456
    3. '```' → logprob: -5.534966468811035
    4. '()' → logprob: -5.909966468811035
    5. '           ' → logprob: -6.659966468811035
    6. '(' → logprob: -6.784966468811035
    7. '                       ' → logprob: -6.784966468811035
    8. '(
' → logprob: -8.284966468811035
    9. '       ' → logprob: -8.284966468811035
    10. '<|end|>' → logprob: -8.659966468811035

Token 2441: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2544069290161133
    2. 'continue' (adapté à ' continue') → logprob: -1.5044069290161133
    3. ' continue' → logprob: -6.379406929016113
    4. 'return' → logprob: -7.879406929016113
    5. '               ' → logprob: -8.629406929016113
    6. '```' → logprob: -9.254406929016113
    7. '                       ' → logprob: -9.629406929016113
    8. '           ' → logprob: -10.254406929016113
    9. '	continue' → logprob: -12.379406929016113
    10. '_continue' → logprob: -12.504406929016113

Token 2442: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023040352389216423
    2. '
' → logprob: -3.898040294647217
    3. '           ' → logprob: -6.648040294647217
    4. '                
' → logprob: -8.023040771484375
    5. 'else' → logprob: -8.273040771484375
    6. '                   ' → logprob: -8.398040771484375
    7. '```' → logprob: -8.398040771484375
    8. ' else' → logprob: -9.773040771484375
    9. '                    
' → logprob: -10.648040771484375
    10. '               
' → logprob: -11.398040771484375

Token 2443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00044616201194003224
    2. '                
' → logprob: -9.000446319580078
    3. '           ' → logprob: -9.250446319580078
    4. 'else' → logprob: -9.500446319580078
    5. '
' → logprob: -9.875446319580078
    6. '                   ' → logprob: -10.500446319580078
    7. '```' → logprob: -10.875446319580078
    8. '              ' → logprob: -11.500446319580078
    9. ' else' → logprob: -11.625446319580078
    10. '			' → logprob: -11.875446319580078

Token 2444: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14365346729755402
    2. '               ' → logprob: -2.018653392791748
    3. '
' → logprob: -7.768653392791748
    4. 'break' → logprob: -8.143653869628906
    5. '                   ' → logprob: -9.018653869628906
    6. 'else' (adapté à ' else') → logprob: -9.143653869628906
    7. '       ' → logprob: -10.768653869628906
    8. ' else' → logprob: -12.018653869628906
    9. ' break' → logprob: -13.143653869628906
    10. '   ' → logprob: -13.143653869628906

Token 2445: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016513699665665627
    2. '               ' → logprob: -4.266513824462891
    3. '           ' → logprob: -6.141513824462891
    4. '   ' → logprob: -9.51651382446289
    5. 'break' → logprob: -9.51651382446289
    6. ':
' → logprob: -10.39151382446289
    7. ' break' → logprob: -12.01651382446289
    8. '       ' → logprob: -12.51651382446289
    9. '                       ' → logprob: -13.14151382446289
    10. '				' → logprob: -13.51651382446289

Token 2446: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26862072944641113
    2. '               ' → logprob: -1.5186207294464111
    3. '                   ' → logprob: -4.268620491027832
    4. 'break' → logprob: -6.143620491027832
    5. '   ' → logprob: -8.018620491027832
    6. '       ' → logprob: -9.518620491027832
    7. ' break' → logprob: -14.018620491027832
    8. '                       ' → logprob: -14.268620491027832
    9. '		' → logprob: -15.143620491027832
    10. '	break' → logprob: -15.643620491027832

Token 2447: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6958329081535339
    2. 'break' (adapté à ' break') → logprob: -0.6958329081535339
    3. '               ' → logprob: -6.1958327293396
    4. '                       ' → logprob: -7.9458327293396
    5. ' break' → logprob: -8.695833206176758
    6. '   ' → logprob: -9.820833206176758
    7. '           ' → logprob: -10.320833206176758
    8. '       ' → logprob: -10.695833206176758
    9. '	break' → logprob: -11.445833206176758
    10. '				' → logprob: -13.695833206176758

Token 2448: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20555290579795837
    2. '<|end|>' → logprob: -1.8305529356002808
    3. '
' → logprob: -4.20555305480957
    4. 'self' → logprob: -5.45555305480957
    5. '   ' → logprob: -5.83055305480957
    6. '        
' → logprob: -7.20555305480957
    7. '<|end|>' → logprob: -7.45555305480957
    8. ')' → logprob: -7.70555305480957
    9. '\' → logprob: -7.95555305480957
    10. 'def' → logprob: -8.45555305480957

Token 2449: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2450: ' no' (ID: 860)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5679119229316711
    2. '#' → logprob: -0.9429119229316711
    3. 'True' → logprob: -4.3179121017456055
    4. '           ' → logprob: -4.4429121017456055
    5. 'pass' → logprob: -5.5679121017456055
    6. '               ' → logprob: -5.8179121017456055
    7. '       ' → logprob: -6.1929121017456055
    8. 'return' → logprob: -6.1929121017456055
    9. 'break' → logprob: -6.4429121017456055
    10. 'def' → logprob: -6.5679121017456055

Token 2451: ' space' (ID: 4918)
  Prédit: ' more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.473432719707489
    2. ' space' → logprob: -1.5984327793121338
    3. 'space' → logprob: -2.098432779312134
    4. 'more' → logprob: -3.723432779312134
    5. ' available' → logprob: -4.098432540893555
    6. 'available' → logprob: -5.223432540893555
    7. ' spaces' → logprob: -5.848432540893555
    8. 'spaces' → logprob: -6.473432540893555
    9. ' possible' → logprob: -8.348432540893555
    10. ' break' → logprob: -8.598432540893555

Token 2452: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2453: ' first' (ID: 1577)
  Prédit: 'waiting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'waiting' → logprob: -0.3300880789756775
    2. 'now' → logprob: -1.5800881385803223
    3. 'the' → logprob: -3.5800881385803223
    4. 'parking' → logprob: -4.080088138580322
    5. 'car' → logprob: -4.580088138580322
    6. 'wait' → logprob: -4.955088138580322
    7. ' waiting' → logprob: -5.330088138580322
    8. 'more' → logprob: -5.705088138580322
    9. ' now' → logprob: -6.205088138580322
    10. 'this' → logprob: -7.080088138580322

Token 2454: ' waiting' (ID: 12028)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.016765180975198746
    2. ' car' → logprob: -4.516765117645264
    3. 'waiting' → logprob: -5.766765117645264
    4. '_wait' → logprob: -7.516765117645264
    5. 'wait' → logprob: -7.641765117645264
    6. ' waiting' → logprob: -7.766765117645264
    7. 'in' → logprob: -7.891765117645264
    8. '_car' → logprob: -7.891765117645264
    9. ' in' → logprob: -8.266765594482422
    10. ' wait' → logprob: -10.141765594482422

Token 2455: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.09736648947000504
    2. '_car' → logprob: -2.4723665714263916
    3. ' car' → logprob: -5.0973663330078125
    4. '_queue' → logprob: -6.5973663330078125
    5. '
' → logprob: -8.347366333007812
    6. 'queue' → logprob: -9.097366333007812
    7. '```' → logprob: -9.097366333007812
    8. '	car' → logprob: -9.347366333007812
    9. ')' → logprob: -9.472366333007812
    10. '.car' → logprob: -9.597366333007812

Token 2456: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2457: ' wait' (ID: 5238)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020180614665150642
    2. 'break' → logprob: -4.145180702209473
    3. '           ' → logprob: -6.395180702209473
    4. 'return' → logprob: -7.020180702209473
    5. '               ' → logprob: -7.145180702209473
    6. ' break' → logprob: -7.520180702209473
    7. '#' → logprob: -9.270180702209473
    8. '                       ' → logprob: -9.645180702209473
    9. '   ' → logprob: -10.270180702209473
    10. ' return' → logprob: -11.395180702209473

Token 2458: ' further' (ID: 6544)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2459: ' time' (ID: 1058)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2460: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07259852439165115
    2. '<|end|>' → logprob: -3.072598457336426
    3. 'self' → logprob: -4.072598457336426
    4. '
' → logprob: -5.822598457336426
    5. '   ' → logprob: -6.197598457336426
    6. '           ' → logprob: -7.322598457336426
    7. '<|end|>' → logprob: -8.072598457336426
    8. '	' → logprob: -8.822598457336426
    9. ')' → logprob: -9.072598457336426
    10. '        
' → logprob: -9.572598457336426

Token 2461: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23879946768283844
    2. '   ' → logprob: -1.7387994527816772
    3. '
' → logprob: -4.113799571990967
    4. 'self' → logprob: -4.363799571990967
    5. '       ' → logprob: -5.238799571990967
    6. '```' → logprob: -6.488799571990967
    7. '<|end|>' → logprob: -7.863799571990967
    8. '    
' → logprob: -8.863799095153809
    9. ' def' → logprob: -9.613799095153809
    10. '	def' → logprob: -10.613799095153809

Token 2462: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3922771215438843
    2. '<|end|>' → logprob: -1.2672771215438843
    3. ' def' → logprob: -3.892277240753174
    4. '   ' → logprob: -4.142277240753174
    5. '	def' → logprob: -6.017277240753174
    6. '<|end|>' → logprob: -6.392277240753174
    7. ')' → logprob: -7.392277240753174
    8. ' ' → logprob: -8.267276763916016
    9. '```' → logprob: -8.267276763916016
    10. '#' → logprob: -8.517276763916016

Token 2463: ' run' (ID: 2461)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.4733152687549591
    2. 'advance' → logprob: -1.3483152389526367
    3. 'run' → logprob: -2.2233152389526367
    4. 'process' → logprob: -4.848315238952637
    5. 'increment' → logprob: -8.348315238952637
    6. 'park' → logprob: -8.473315238952637
    7. 'get' → logprob: -8.973315238952637
    8. '__' → logprob: -9.223315238952637
    9. 'update' → logprob: -9.348315238952637
    10. ' simulate' → logprob: -9.598315238952637

Token 2464: '_sim' (ID: 45966)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004944138927385211
    2. '   ' → logprob: -8.250494003295898
    3. '(' → logprob: -8.875494003295898
    4. '(
' → logprob: -10.250494003295898
    5. '       ' → logprob: -10.875494003295898
    6. '_(' → logprob: -11.250494003295898
    7. 'self' → logprob: -11.375494003295898
    8. '__(' → logprob: -12.375494003295898
    9. '_self' → logprob: -13.125494003295898
    10. '```' → logprob: -13.375494003295898

Token 2465: 'ulation' (ID: 4672)
  Prédit: 'ulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulation' → logprob: -0.38711997866630554
    2. 'ulate' → logprob: -1.137120008468628
    3. 'ulator' → logprob: -8.637120246887207
    4. '(self' → logprob: -10.512120246887207
    5. 'ul' → logprob: -11.512120246887207
    6. '_time' → logprob: -11.637120246887207
    7. 'ple' → logprob: -11.887120246887207
    8. 'lation' → logprob: -12.762120246887207
    9. '```' → logprob: -12.887120246887207
    10. 'ule' → logprob: -13.262120246887207

Token 2466: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -11.000024795532227
    3. '       ' → logprob: -12.250024795532227
    4. '   ' → logprob: -13.000024795532227
    5. '(
' → logprob: -14.250024795532227
    6. 'self' → logprob: -14.625024795532227
    7. ' (' → logprob: -15.125024795532227
    8. 'def' → logprob: -17.125024795532227
    9. '```' → logprob: -17.500024795532227
    10. '	self' → logprob: -18.750024795532227

Token 2467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4188596308231354
    2. '(self' → logprob: -1.918859601020813
    3. '       ' → logprob: -2.2938597202301025
    4. 'self' → logprob: -2.9188597202301025
    5. '   ' → logprob: -3.2938597202301025
    6. ',self' → logprob: -6.543859481811523
    7. 'def' → logprob: -7.543859481811523
    8. '
' → logprob: -7.918859481811523
    9. '):
' → logprob: -8.043859481811523
    10. ',
' → logprob: -9.168859481811523

Token 2468: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.1317676603794098
    2. ' cars' → logprob: -2.506767749786377
    3. 'self' → logprob: -3.381767749786377
    4. 'car' → logprob: -5.881767749786377
    5. 'events' → logprob: -6.131767749786377
    6. ' self' → logprob: -6.131767749786377
    7. 'arrival' → logprob: -8.506767272949219
    8. 'start' → logprob: -9.256767272949219
    9. '   ' → logprob: -9.381767272949219
    10. ' events' → logprob: -9.631767272949219

Token 2469: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026207173243165016
    2. '       ' → logprob: -3.776207208633423
    3. '):' → logprob: -7.151206970214844
    4. '):
' → logprob: -7.276206970214844
    5. '   ' → logprob: -7.401206970214844
    6. ',' → logprob: -7.776206970214844
    7. 'self' → logprob: -8.151206970214844
    8. '(self' → logprob: -10.026206970214844
    9. '[self' → logprob: -10.151206970214844
    10. '[' → logprob: -10.776206970214844

Token 2470: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00012630375567823648
    2. ' List' → logprob: -9.000125885009766
    3. '[List' → logprob: -13.875125885009766
    4. 'self' → logprob: -14.250125885009766
    5. '       ' → logprob: -14.625125885009766
    6. '   ' → logprob: -14.750125885009766
    7. ')' → logprob: -15.125125885009766
    8. '
' → logprob: -16.500125885009766
    9. '           ' → logprob: -17.875125885009766
    10. '):
' → logprob: -18.125125885009766

Token 2471: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.988221684878226e-06
    2. '[
' → logprob: -12.500006675720215
    3. 'Car' → logprob: -12.875006675720215
    4. '<Car' → logprob: -14.500006675720215
    5. '[int' → logprob: -16.12500762939453
    6. '```' → logprob: -16.50000762939453
    7. '
' → logprob: -17.62500762939453
    8. '):
' → logprob: -17.87500762939453
    9. '   ' → logprob: -18.87500762939453
    10. '(Car' → logprob: -19.00000762939453

Token 2472: 'Car' (ID: 9680)
  Prédit: 'Car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -1.9361264946837764e-07
    2. ' Car' → logprob: -15.625
    3. '   ' → logprob: -19.5
    4. 'car' → logprob: -20.25
    5. 'Tuple' → logprob: -20.375
    6. '<Car' → logprob: -20.375
    7. '[' → logprob: -20.75
    8. '
' → logprob: -20.875
    9. '(Car' → logprob: -22.125
    10. ')' → logprob: -22.125

Token 2473: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18595048785209656
    2. '   ' → logprob: -2.185950517654419
    3. '       ' → logprob: -3.560950517654419
    4. ']):
' → logprob: -4.43595027923584
    5. ')' → logprob: -4.68595027923584
    6. '):' → logprob: -5.56095027923584
    7. ',' → logprob: -5.68595027923584
    8. '[' → logprob: -8.56095027923584
    9. ']):' → logprob: -8.68595027923584
    10. '])' → logprob: -9.93595027923584

Token 2474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013171293772757053
    2. '```' → logprob: -4.388171195983887
    3. '   ' → logprob: -7.638171195983887
    4. 'self' → logprob: -9.888171195983887
    5. '``' → logprob: -10.388171195983887
    6. 'def' → logprob: -10.388171195983887
    7. '
' → logprob: -11.138171195983887
    8. ',' → logprob: -11.263171195983887
    9. '(self' → logprob: -11.388171195983887
    10. '`' → logprob: -11.763171195983887

Token 2475: ' #' (ID: 1069)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.599585771560669
    2. '       ' → logprob: -1.599585771560669
    3. 'self' → logprob: -1.599585771560669
    4. 'car' → logprob: -3.849585771560669
    5. 'events' → logprob: -4.59958553314209
    6. 'all' → logprob: -5.84958553314209
    7. 'for' → logprob: -6.09958553314209
    8. 'next' → logprob: -6.09958553314209
    9. 'i' → logprob: -6.22458553314209
    10. 'times' → logprob: -6.34958553314209

Token 2476: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.0381355844438076
    2. 'self' → logprob: -4.288135528564453
    3. '       ' → logprob: -4.538135528564453
    4. 'events' → logprob: -5.038135528564453
    5. 'for' → logprob: -6.413135528564453
    6. 'car' → logprob: -6.663135528564453
    7. '#' → logprob: -7.163135528564453
    8. 'def' → logprob: -7.288135528564453
    9. '   ' → logprob: -7.538135528564453
    10. 'i' → logprob: -8.038135528564453

Token 2477: ' arrive' (ID: 18338)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.04131070524454117
    2. ' =' → logprob: -3.6663107872009277
    3. '_sorted' → logprob: -4.541310787200928
    4. '       ' → logprob: -6.041310787200928
    5. '=' → logprob: -6.541310787200928
    6. 'sort' → logprob: -8.91631031036377
    7. '   ' → logprob: -8.91631031036377
    8. ':' → logprob: -10.29131031036377
    9. '.extend' → logprob: -10.79131031036377
    10. 'sorted' → logprob: -10.91631031036377

Token 2478: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08688241243362427
    2. 'self' → logprob: -3.8368823528289795
    3. '.sort' → logprob: -4.086882591247559
    4. '=' → logprob: -4.461882591247559
    5. '_sorted' → logprob: -4.836882591247559
    6. '(self' → logprob: -4.961882591247559
    7. ' =' → logprob: -5.211882591247559
    8. 'sorted' → logprob: -5.586882591247559
    9. '```' → logprob: -5.711882591247559
    10. '   ' → logprob: -6.336882591247559

Token 2479: '10' (ID: 702)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.130616307258606
    2. 'sorted' → logprob: -1.130616307258606
    3. '.sort' → logprob: -1.380616307258606
    4. '_sorted' → logprob: -3.2556161880493164
    5. '       ' → logprob: -3.5056161880493164
    6. 'sort' → logprob: -4.255616188049316
    7. '(sorted' → logprob: -5.005616188049316
    8. 'self' → logprob: -5.130616188049316
    9. 'in' → logprob: -6.255616188049316
    10. '   ' → logprob: -6.380616188049316

Token 2480: ' minutes' (ID: 5438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12603488564491272
    2. '0' → logprob: -2.50103497505188
    3. '   ' → logprob: -4.501034736633301
    4. ':
' → logprob: -4.626034736633301
    5. ':' → logprob: -5.251034736633301
    6. '```' → logprob: -6.251034736633301
    7. ' at' → logprob: -6.751034736633301
    8. ' ' → logprob: -6.751034736633301
    9. 'def' → logprob: -7.001034736633301
    10. ' minutes' → logprob: -7.626034736633301

Token 2481: ' apart' (ID: 12259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11414692550897598
    2. '   ' → logprob: -3.4891469478607178
    3. '=' → logprob: -3.6141469478607178
    4. ' =' → logprob: -4.864146709442139
    5. ':' → logprob: -4.989146709442139
    6. 'def' → logprob: -5.239146709442139
    7. 'per' → logprob: -5.739146709442139
    8. ' at' → logprob: -5.864146709442139
    9. '_per' → logprob: -5.864146709442139
    10. 'each' → logprob: -6.114146709442139

Token 2482: ' starting' (ID: 8601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03984939306974411
    2. '(self' → logprob: -4.414849281311035
    3. '
' → logprob: -4.914849281311035
    4. '(' → logprob: -5.289849281311035
    5. ',' → logprob: -5.789849281311035
    6. ':' → logprob: -6.289849281311035
    7. 'self' → logprob: -6.289849281311035
    8. 'from' → logprob: -6.539849281311035
    9. '   ' → logprob: -6.664849281311035
    10. '=' → logprob: -7.039849281311035

Token 2483: ' time' (ID: 1058)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0836394727230072
    2. 'at' → logprob: -3.08363938331604
    3. '=' → logprob: -3.45863938331604
    4. '       ' → logprob: -6.583639621734619
    5. ' at' → logprob: -7.833639621734619
    6. 'with' → logprob: -7.958639621734619
    7. ' from' → logprob: -8.208639144897461
    8. '   ' → logprob: -8.708639144897461
    9. 'time' → logprob: -8.708639144897461
    10. '```' → logprob: -9.833639144897461

Token 2484: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09030994772911072
    2. 'from' → logprob: -2.9653098583221436
    3. 'start' → logprob: -4.715310096740723
    4. '=' → logprob: -5.215310096740723
    5. '```' → logprob: -5.465310096740723
    6. 'self' → logprob: -5.715310096740723
    7. '
' → logprob: -6.090310096740723
    8. 'time' → logprob: -6.215310096740723
    9. 'for' → logprob: -6.340310096740723
    10. ',' → logprob: -6.340310096740723

Token 2485: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25537627935409546
    2. 'from' → logprob: -2.3803763389587402
    3. '=
' → logprob: -3.5053763389587402
    4. '       ' → logprob: -3.6303763389587402
    5. ' =' → logprob: -3.7553763389587402
    6. 'self' → logprob: -3.8803763389587402
    7. '0' → logprob: -4.00537633895874
    8. 'for' → logprob: -6.25537633895874
    9. '   ' → logprob: -6.88037633895874
    10. '
' → logprob: -6.88037633895874

Token 2486: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04091325402259827
    2. 'time' → logprob: -4.040913105010986
    3. 'for' → logprob: -4.665913105010986
    4. 'start' → logprob: -5.415913105010986
    5. 'next' → logprob: -6.165913105010986
    6. '```' → logprob: -6.290913105010986
    7. '
' → logprob: -6.415913105010986
    8. 'current' → logprob: -6.915913105010986
    9. 'arrival' → logprob: -7.040913105010986
    10. 'self' → logprob: -7.915913105010986

Token 2487: ' indexes' (ID: 50739)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9958524107933044
    2. 'time' → logprob: -1.2458524703979492
    3. '       ' → logprob: -1.6208524703979492
    4. 'current' → logprob: -2.870852470397949
    5. 'arrival' → logprob: -3.620852470397949
    6. 'start' → logprob: -4.245852470397949
    7. '#' → logprob: -4.370852470397949
    8. 'now' → logprob: -4.370852470397949
    9. 'next' → logprob: -4.495852470397949
    10. 'self' → logprob: -5.495852470397949

Token 2488: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06520740687847137
    2. '(self' → logprob: -3.6902074813842773
    3. '
' → logprob: -4.940207481384277
    4. '```' → logprob: -4.940207481384277
    5. 'for' → logprob: -5.190207481384277
    6. '   ' → logprob: -5.440207481384277
    7. 'self' → logprob: -5.440207481384277
    8. '=' → logprob: -6.440207481384277
    9. 'from' → logprob: -6.565207481384277
    10. ',' → logprob: -6.690207481384277

Token 2489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.844328761100769
    2. 'car' → logprob: -0.844328761100769
    3. 'range' → logprob: -2.9693288803100586
    4. '[' → logprob: -3.2193288803100586
    5. 'sorted' → logprob: -4.844328880310059
    6. 'i' → logprob: -5.094328880310059
    7. '[
' → logprob: -5.344328880310059
    8. '[i' → logprob: -5.344328880310059
    9. 'from' → logprob: -5.344328880310059
    10. 'for' → logprob: -5.594328880310059

Token 2490: '1' (ID: 16)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.9966069459915161
    2. 'range' → logprob: -1.2466069459915161
    3. '0' → logprob: -1.7466069459915161
    4. 'sorted' → logprob: -2.3716068267822266
    5. '[' → logprob: -3.7466068267822266
    6. 'enumer' → logprob: -4.246606826782227
    7. 'cars' → logprob: -4.871606826782227
    8. 'in' → logprob: -5.496606826782227
    9. '1' → logprob: -5.496606826782227
    10. 'for' → logprob: -5.746606826782227

Token 2491: '-based' (ID: 8235)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2760608196258545
    2. ' to' → logprob: -2.2760608196258545
    3. 'to' → logprob: -3.2760608196258545
    4. ' for' → logprob: -3.4010608196258545
    5. 'for' → logprob: -3.5260608196258545
    6. '
' → logprob: -4.526061058044434
    7. '   ' → logprob: -4.651061058044434
    8. ',' → logprob: -5.276061058044434
    9. ' through' → logprob: -6.151061058044434
    10. '```' → logprob: -6.401061058044434

Token 2492: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03313034400343895
    2. 'for' → logprob: -4.033130168914795
    3. '
' → logprob: -5.158130168914795
    4. '```' → logprob: -5.533130168914795
    5. 'def' → logprob: -6.908130168914795
    6. ' for' → logprob: -6.908130168914795
    7. '   ' → logprob: -7.283130168914795
    8. ',' → logprob: -7.408130168914795
    9. 'start' → logprob: -7.783130168914795
    10. 'self' → logprob: -7.783130168914795

Token 2493: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.13776831328868866
    2. '_ids' → logprob: -2.762768268585205
    3. 's' → logprob: -3.262768268585205
    4. ' for' → logprob: -4.387768268585205
    5. '   ' → logprob: -5.262768268585205
    6. 'for' → logprob: -6.137768268585205
    7. '_s' → logprob: -6.137768268585205
    8. ':' → logprob: -6.762768268585205
    9. '_index' → logprob: -7.012768268585205
    10. ' s' → logprob: -7.512768268585205

Token 2494: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049438219517469406
    2. ',' → logprob: -3.799438238143921
    3. 'for' → logprob: -4.174437999725342
    4. ' for' → logprob: -5.674437999725342
    5. '
' → logprob: -6.549437999725342
    6. ':' → logprob: -6.674437999725342
    7. ':
' → logprob: -6.799437999725342
    8. '=' → logprob: -7.049437999725342
    9. '```' → logprob: -7.299437999725342
    10. '   ' → logprob: -7.924437999725342

Token 2495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0087887616828084
    2. '   ' → logprob: -6.008788585662842
    3. 'for' → logprob: -6.133788585662842
    4. '```' → logprob: -6.133788585662842
    5. '
' → logprob: -7.133788585662842
    6. 'self' → logprob: -7.633788585662842
    7. ',' → logprob: -8.5087890625
    8. 'current' → logprob: -9.3837890625
    9. 'time' → logprob: -9.5087890625
    10. ' for' → logprob: -9.5087890625

Token 2496: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22031013667583466
    2. 'time' → logprob: -2.3453102111816406
    3. 'self' → logprob: -3.3453102111816406
    4. '       ' → logprob: -3.4703102111816406
    5. 'next' → logprob: -4.345310211181641
    6. 'current' → logprob: -4.595310211181641
    7. 'arrival' → logprob: -5.095310211181641
    8. ' for' → logprob: -6.095310211181641
    9. 'last' → logprob: -6.595310211181641
    10. 'cars' → logprob: -7.595310211181641

Token 2497: ' simulation' (ID: 30937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2402736097574234
    2. 'self' → logprob: -2.2402737140655518
    3. 'time' → logprob: -3.6152737140655518
    4. 'cars' → logprob: -3.9902737140655518
    5. 'arrival' → logprob: -4.240273475646973
    6. '       ' → logprob: -4.240273475646973
    7. 'current' → logprob: -4.740273475646973
    8. 'next' → logprob: -4.865273475646973
    9. 'last' → logprob: -5.240273475646973
    10. 'car' → logprob: -5.490273475646973

Token 2498: ' time' (ID: 1058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10617080330848694
    2. 'time' → logprob: -3.356170892715454
    3. 'for' → logprob: -4.606170654296875
    4. '
' → logprob: -4.731170654296875
    5. 'self' → logprob: -4.856170654296875
    6. 'current' → logprob: -5.481170654296875
    7. ' =' → logprob: -5.481170654296875
    8. '=' → logprob: -5.481170654296875
    9. ':' → logprob: -5.606170654296875
    10. '   ' → logprob: -5.981170654296875

Token 2499: ' step' (ID: 5983)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06697525829076767
    2. ' =' → logprob: -2.8169753551483154
    3. '       ' → logprob: -5.941975116729736
    4. '+=' → logprob: -7.191975116729736
    5. 'self' → logprob: -7.316975116729736
    6. '   ' → logprob: -7.941975116729736
    7. 'for' → logprob: -8.941975593566895
    8. '=self' → logprob: -9.066975593566895
    9. ' +=' → logprob: -9.191975593566895
    10. 'max' → logprob: -9.941975593566895

Token 2500: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2841187119483948
    2. ' =' → logprob: -2.40911865234375
    3. '+=' → logprob: -2.65911865234375
    4. '       ' → logprob: -3.28411865234375
    5. ' +=' → logprob: -3.53411865234375
    6. '   ' → logprob: -5.40911865234375
    7. 'self' → logprob: -5.78411865234375
    8. '0' → logprob: -5.90911865234375
    9. 'for' → logprob: -6.28411865234375
    10. '
' → logprob: -6.28411865234375

Token 2501: ' minutes' (ID: 5438)
  Prédit: 'minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minutes' → logprob: -0.607719361782074
    2. 'range' → logprob: -0.857719361782074
    3. '10' → logprob: -4.357719421386719
    4. '1' → logprob: -4.482719421386719
    5. 'def' → logprob: -6.607719421386719
    6. 'self' → logprob: -7.232719421386719
    7. 'for' → logprob: -7.232719421386719
    8. 'increments' → logprob: -7.357719421386719
    9. ' range' → logprob: -7.607719421386719
    10. ' minutes' → logprob: -7.732719421386719

Token 2502: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3253827691078186
    2. 'time' → logprob: -1.8253827095031738
    3. 'for' → logprob: -3.700382709503174
    4. '
' → logprob: -3.950382709503174
    5. 'self' → logprob: -3.950382709503174
    6. '```' → logprob: -4.325382709503174
    7. 'current' → logprob: -4.325382709503174
    8. ' =' → logprob: -5.325382709503174
    9. 't' → logprob: -5.450382709503174
    10. '=' → logprob: -5.575382709503174

Token 2503: ' minimal' (ID: 19957)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8504026532173157
    2. '       ' → logprob: -1.850402593612671
    3. 'self' → logprob: -2.100402593612671
    4. 'for' → logprob: -2.225402593612671
    5. 'max' → logprob: -2.225402593612671
    6. 'current' → logprob: -3.350402593612671
    7. 't' → logprob: -4.47540283203125
    8. ' for' → logprob: -5.47540283203125
    9. '```' → logprob: -5.47540283203125
    10. 'start' → logprob: -5.72540283203125

Token 2504: ' unit' (ID: 7670)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34898725152015686
    2. 'time' → logprob: -2.098987340927124
    3. '```' → logprob: -3.223987340927124
    4. ' =' → logprob: -3.723987340927124
    5. 'current' → logprob: -3.973987340927124
    6. 'self' → logprob: -3.973987340927124
    7. '
' → logprob: -4.348987102508545
    8. '   ' → logprob: -4.348987102508545
    9. '=' → logprob: -4.848987102508545
    10. '        
' → logprob: -5.223987102508545

Token 2505: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012517070397734642
    2. 'def' → logprob: -5.637516975402832
    3. '
' → logprob: -6.012516975402832
    4. '   ' → logprob: -6.387516975402832
    5. '```' → logprob: -6.387516975402832
    6. 'self' → logprob: -7.137516975402832
    7. 'for' → logprob: -7.387516975402832
    8. 'time' → logprob: -7.512516975402832
    9. 'current' → logprob: -8.137516975402832
    10. 'start' → logprob: -8.637516975402832

Token 2506: '1' (ID: 16)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19665557146072388
    2. 'time' → logprob: -2.821655511856079
    3. '
' → logprob: -3.071655511856079
    4. 'def' → logprob: -3.946655511856079
    5. 'current' → logprob: -4.571655750274658
    6. 'start' → logprob: -5.071655750274658
    7. '   ' → logprob: -5.071655750274658
    8. 'self' → logprob: -5.071655750274658
    9. 'for' → logprob: -5.071655750274658
    10. 'max' → logprob: -5.571655750274658

Token 2507: ' minute' (ID: 12434)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03651377186179161
    2. '
' → logprob: -3.6615138053894043
    3. 'time' → logprob: -5.161513805389404
    4. '   ' → logprob: -6.786513805389404
    5. 'self' → logprob: -7.536513805389404
    6. 'def' → logprob: -7.661513805389404
    7. 'for' → logprob: -7.661513805389404
    8. '```' → logprob: -7.661513805389404
    9. 'start' → logprob: -7.786513805389404
    10. 'current' → logprob: -8.036513328552246

Token 2508: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012141798622906208
    2. '```' → logprob: -5.512141704559326
    3. 'time' → logprob: -5.887141704559326
    4. 'for' → logprob: -6.137141704559326
    5. '
' → logprob: -7.387141704559326
    6. 'self' → logprob: -7.637141704559326
    7. 'current' → logprob: -7.637141704559326
    8. '   ' → logprob: -8.387142181396484
    9. 'def' → logprob: -8.637142181396484
    10. ' for' → logprob: -8.637142181396484

Token 2509: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9650661945343018
    2. 'max' → logprob: -1.2150661945343018
    3. 'time' → logprob: -2.3400661945343018
    4. 'for' → logprob: -2.7150661945343018
    5. 'last' → logprob: -3.3400661945343018
    6. 'arrival' → logprob: -3.5900661945343018
    7. 'start' → logprob: -3.7150661945343018
    8. 'self' → logprob: -3.7150661945343018
    9. 'current' → logprob: -4.215065956115723
    10. 'end' → logprob: -4.215065956115723

Token 2510: ' cars' (ID: 13653)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6395782828330994
    2. 'for' → logprob: -1.6395783424377441
    3. 'car' → logprob: -2.014578342437744
    4. '       ' → logprob: -2.889578342437744
    5. 'len' → logprob: -3.889578342437744
    6. 'cars' → logprob: -3.889578342437744
    7. 'while' → logprob: -4.639578342437744
    8. ' for' → logprob: -4.639578342437744
    9. '#' → logprob: -4.764578342437744
    10. 'self' → logprob: -5.014578342437744

Token 2511: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.35184746980667114
    2. '       ' → logprob: -2.2268474102020264
    3. '   ' → logprob: -2.6018474102020264
    4. ' arrive' → logprob: -3.8518474102020264
    5. '_arr' → logprob: -3.9768474102020264
    6. '.arr' → logprob: -4.7268476486206055
    7. 'arrival' → logprob: -4.7268476486206055
    8. 'may' → logprob: -4.9768476486206055
    9. 'continue' → logprob: -5.2268476486206055
    10. '.' → logprob: -5.2268476486206055

Token 2512: ' every' (ID: 1753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.875120222568512
    2. 'at' → logprob: -1.1251201629638672
    3. 'every' → logprob: -2.375120162963867
    4. ' at' → logprob: -2.875120162963867
    5. 'each' → logprob: -3.750120162963867
    6. '=' → logprob: -4.000120162963867
    7. '   ' → logprob: -4.125120162963867
    8. '```' → logprob: -4.500120162963867
    9. 'in' → logprob: -4.750120162963867
    10. 'after' → logprob: -5.250120162963867

Token 2513: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006500058807432652
    2. ' ' → logprob: -8.500650405883789
    3. '
' → logprob: -8.625650405883789
    4. '1' → logprob: -9.500650405883789
    5. '```' → logprob: -9.500650405883789
    6. '``' → logprob: -10.625650405883789
    7. '   ' → logprob: -10.750650405883789
    8. '0' → logprob: -10.750650405883789
    9. '=' → logprob: -11.875650405883789
    10. '       ' → logprob: -12.063150405883789

Token 2514: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002003218833124265
    2. '
' → logprob: -9.250200271606445
    3. '1' → logprob: -9.625200271606445
    4. ' ' → logprob: -11.750200271606445
    5. '0' → logprob: -11.750200271606445
    6. '```' → logprob: -11.750200271606445
    7. '   ' → logprob: -13.000200271606445
    8. '``' → logprob: -13.187700271606445
    9. '

' → logprob: -13.750200271606445
    10. 'car' → logprob: -14.000200271606445

Token 2515: ' minutes' (ID: 5438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.516497790813446
    2. '       ' → logprob: -1.1414978504180908
    3. '
' → logprob: -3.891497850418091
    4. ':' → logprob: -4.141497611999512
    5. ':
' → logprob: -4.516497611999512
    6. 'def' → logprob: -5.016497611999512
    7. '```' → logprob: -5.016497611999512
    8. ' def' → logprob: -5.391497611999512
    9. '):
' → logprob: -5.641497611999512
    10. ' ' → logprob: -6.016497611999512

Token 2516: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041280511766672134
    2. '
' → logprob: -4.041280746459961
    3. '```' → logprob: -4.166280746459961
    4. ',' → logprob: -6.041280746459961
    5. 'time' → logprob: -6.916280746459961
    6. 'for' → logprob: -7.291280746459961
    7. '   ' → logprob: -7.541280746459961
    8. 'def' → logprob: -7.541280746459961
    9. '``' → logprob: -7.541280746459961
    10. 'self' → logprob: -8.041280746459961

Token 2517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19157926738262177
    2. '```' → logprob: -1.9415792226791382
    3. '   ' → logprob: -4.316579341888428
    4. '
' → logprob: -5.441579341888428
    5. '``' → logprob: -5.566579341888428
    6. 'def' → logprob: -5.566579341888428
    7. 'for' → logprob: -6.816579341888428
    8. ',' → logprob: -6.816579341888428
    9. 'self' → logprob: -6.941579341888428
    10. ':' → logprob: -7.441579341888428

Token 2518: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3729562759399414
    2. 'time' → logprob: -1.8729562759399414
    3. 'for' → logprob: -2.6229562759399414
    4. 'self' → logprob: -3.6229562759399414
    5. 'start' → logprob: -4.497956275939941
    6. 'arrival' → logprob: -4.497956275939941
    7. 'next' → logprob: -4.997956275939941
    8. 't' → logprob: -4.997956275939941
    9. 'max' → logprob: -5.247956275939941
    10. '
' → logprob: -5.497956275939941

Token 2519: ' simulation' (ID: 30937)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5210617184638977
    2. 'for' → logprob: -1.396061658859253
    3. '       ' → logprob: -3.271061658859253
    4. 'current' → logprob: -3.271061658859253
    5. 'arrival' → logprob: -3.646061658859253
    6. 'self' → logprob: -3.896061658859253
    7. 't' → logprob: -4.146061897277832
    8. '
' → logprob: -5.521061897277832
    9. 'next' → logprob: -5.646061897277832
    10. 'car' → logprob: -6.021061897277832

Token 2520: ' ends' (ID: 17095)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1798655092716217
    2. 'time' → logprob: -3.304865598678589
    3. 'self' → logprob: -3.554865598678589
    4. '=' → logprob: -4.17986536026001
    5. '_time' → logprob: -4.30486536026001
    6. ' =' → logprob: -4.30486536026001
    7. '   ' → logprob: -4.55486536026001
    8. 'def' → logprob: -4.80486536026001
    9. '
' → logprob: -4.80486536026001
    10. 'start' → logprob: -5.05486536026001

Token 2521: ' when' (ID: 1261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3971620202064514
    2. '(self' → logprob: -1.7721619606018066
    3. 'self' → logprob: -2.7721619606018066
    4. '(' → logprob: -3.8971619606018066
    5. '   ' → logprob: -4.397161960601807
    6. 'for' → logprob: -4.397161960601807
    7. '```' → logprob: -4.397161960601807
    8. 'def' → logprob: -4.647161960601807
    9. ' at' → logprob: -5.272161960601807
    10. '=' → logprob: -6.147161960601807

Token 2522: ' all' (ID: 722)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11249052733182907
    2. ' not' → logprob: -2.73749041557312
    3. 'all' → logprob: -3.86249041557312
    4. 'len' → logprob: -4.237490653991699
    5. 'cars' → logprob: -5.612490653991699
    6. 'self' → logprob: -6.487490653991699
    7. ' all' → logprob: -7.237490653991699
    8. '       ' → logprob: -9.1124906539917
    9. ' len' → logprob: -9.3624906539917
    10. ' cars' → logprob: -10.1124906539917

Token 2523: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.005744267720729113
    2. 'car' → logprob: -5.755744457244873
    3. ' cars' → logprob: -6.005744457244873
    4. '   ' → logprob: -10.505743980407715
    5. '       ' → logprob: -10.630743980407715
    6. 'self' → logprob: -11.005743980407715
    7. '
' → logprob: -11.755743980407715
    8. '#' → logprob: -12.005743980407715
    9. 'c' → logprob: -12.755743980407715
    10. 'len' → logprob: -13.255743980407715

Token 2524: ' departed' (ID: 115328)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.3531501591205597
    2. 'have' → logprob: -1.6031501293182373
    3. ' are' → logprob: -2.6031501293182373
    4. ' have' → logprob: -4.478150367736816
    5. 'park' → logprob: -5.478150367736816
    6. '       ' → logprob: -5.978150367736816
    7. '```' → logprob: -6.978150367736816
    8. '   ' → logprob: -7.228150367736816
    9. '_are' → logprob: -7.228150367736816
    10. '_have' → logprob: -8.103150367736816

Token 2525: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004490888677537441
    2. '
' → logprob: -6.504490852355957
    3. '```' → logprob: -6.879490852355957
    4. ',' → logprob: -7.004490852355957
    5. '   ' → logprob: -7.754490852355957
    6. 'def' → logprob: -8.879490852355957
    7. 'current' → logprob: -9.504490852355957
    8. 'self' → logprob: -9.504490852355957
    9. 'time' → logprob: -10.004490852355957
    10. '        
' → logprob: -10.129490852355957

Token 2526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5805827975273132
    2. 'time' → logprob: -1.080582857131958
    3. 'current' → logprob: -3.455582857131958
    4. '
' → logprob: -4.080582618713379
    5. '```' → logprob: -4.080582618713379
    6. 't' → logprob: -4.205582618713379
    7. 'self' → logprob: -4.705582618713379
    8. '   ' → logprob: -5.580582618713379
    9. 'next' → logprob: -6.330582618713379
    10. ' time' → logprob: -6.580582618713379

Token 2527: ' total' (ID: 3609)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.20221047103405
    2. 'self' → logprob: -2.2022104263305664
    3. '       ' → logprob: -3.2022104263305664
    4. 'current' → logprob: -4.202210426330566
    5. 'last' → logprob: -5.327210426330566
    6. 'next' → logprob: -5.327210426330566
    7. 't' → logprob: -6.077210426330566
    8. 'arrival' → logprob: -6.452210426330566
    9. '```' → logprob: -7.452210426330566
    10. 'for' → logprob: -7.827210426330566

Token 2528: '_c' (ID: 1303)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.11917269229888916
    2. '_c' → logprob: -2.2441725730895996
    3. '   ' → logprob: -5.7441725730896
    4. '=' → logprob: -6.9941725730896
    5. 'time' → logprob: -6.9941725730896
    6. ' =' → logprob: -7.4941725730896
    7. '_minutes' → logprob: -8.119173049926758
    8. '       ' → logprob: -8.994173049926758
    9. 'cars' → logprob: -9.744173049926758
    10. '_steps' → logprob: -9.994173049926758

Token 2529: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.260944664478302
    2. 'urrent' → logprob: -2.3859446048736572
    3. 'ount' → logprob: -2.6359446048736572
    4. 'ar' → logprob: -2.7609446048736572
    5. 'ode' → logprob: -7.260944843292236
    6. 'time' → logprob: -7.385944843292236
    7. 'ont' → logprob: -7.510944843292236
    8. '_time' → logprob: -7.635944843292236
    9. 'ur' → logprob: -10.010944366455078
    10. 'ounter' → logprob: -10.135944366455078

Token 2530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28158456087112427
    2. '=' → logprob: -1.4065845012664795
    3. '=len' → logprob: -8.781584739685059
    4. '   ' → logprob: -9.406584739685059
    5. '       ' → logprob: -9.906584739685059
    6. '_count' → logprob: -10.281584739685059
    7. ',' → logprob: -10.906584739685059
    8. '_remaining' → logprob: -11.281584739685059
    9. '```' → logprob: -11.281584739685059
    10. '=int' → logprob: -11.656584739685059

Token 2531: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0003811025235336274
    2. ' len' → logprob: -7.875380992889404
    3. '(len' → logprob: -14.875381469726562
    4. '[len' → logprob: -14.875381469726562
    5. '   ' → logprob: -16.125381469726562
    6. '       ' → logprob: -16.125381469726562
    7. '=len' → logprob: -17.000381469726562
    8. 'cars' → logprob: -18.000381469726562
    9. '	len' → logprob: -18.250381469726562
    10. '           ' → logprob: -18.375381469726562

Token 2532: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.31443509459495544
    2. 'cars' → logprob: -1.3144351243972778
    3. 'c' → logprob: -7.064435005187988
    4. ' cars' → logprob: -8.314435005187988
    5. 'car' → logprob: -10.439435005187988
    6. '(car' → logprob: -12.064435005187988
    7. 'Cars' → logprob: -12.189435005187988
    8. '       ' → logprob: -12.314435005187988
    9. 'self' → logprob: -12.439435005187988
    10. '(self' → logprob: -12.564435005187988

Token 2533: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.0027039465494453907
    2. 'ar' → logprob: -6.37770414352417
    3. 'cars' → logprob: -7.00270414352417
    4. 'a' → logprob: -10.877703666687012
    5. '_c' → logprob: -10.877703666687012
    6. '   ' → logprob: -11.127703666687012
    7. '_' → logprob: -12.002703666687012
    8. 's' → logprob: -12.127703666687012
    9. '=' → logprob: -12.252703666687012
    10. 'c' → logprob: -12.502703666687012

Token 2534: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6288214325904846
    2. '       ' → logprob: -1.0038213729858398
    3. ')
' → logprob: -2.75382137298584
    4. ')' → logprob: -3.50382137298584
    5. '):
' → logprob: -5.87882137298584
    6. ',' → logprob: -6.12882137298584
    7. '        
' → logprob: -8.25382137298584
    8. '```' → logprob: -8.37882137298584
    9. ' and' → logprob: -8.50382137298584
    10. ':
' → logprob: -9.00382137298584

Token 2535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02263999544084072
    2. '
' → logprob: -5.397640228271484
    3. 'for' → logprob: -5.522640228271484
    4. 'current' → logprob: -5.897640228271484
    5. 'arr' → logprob: -6.272640228271484
    6. 'next' → logprob: -6.272640228271484
    7. 'car' → logprob: -6.397640228271484
    8. 'while' → logprob: -6.647640228271484
    9. 'self' → logprob: -6.772640228271484
    10. 'time' → logprob: -7.022640228271484

Token 2536: ' parked' (ID: 79911)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.7005525827407837
    2. 'while' → logprob: -1.7005525827407837
    3. 'arr' → logprob: -1.9505525827407837
    4. 'i' → logprob: -3.200552463531494
    5. 'idx' → logprob: -3.450552463531494
    6. 'for' → logprob: -3.575552463531494
    7. 'next' → logprob: -3.700552463531494
    8. 'time' → logprob: -3.825552463531494
    9. 'arrival' → logprob: -3.825552463531494
    10. '       ' → logprob: -5.450552463531494

Token 2537: '_count' (ID: 7536)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.32775115966796875
    2. ' =' → logprob: -1.5777511596679688
    3. '_count' → logprob: -2.8277511596679688
    4. '=' → logprob: -5.327751159667969
    5. '_index' → logprob: -5.327751159667969
    6. '_idx' → logprob: -5.702751159667969
    7. '_car' → logprob: -7.952751159667969
    8. '_set' → logprob: -9.452751159667969
    9. '_ids' → logprob: -9.702751159667969
    10. '_time' → logprob: -10.077751159667969

Token 2538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42903828620910645
    2. ' =' → logprob: -1.0540382862091064
    3. '       ' → logprob: -8.304038047790527
    4. '   ' → logprob: -10.179038047790527
    5. ' +=' → logprob: -11.304038047790527
    6. ',' → logprob: -11.804038047790527
    7. '+=' → logprob: -11.929038047790527
    8. '        ' → logprob: -12.554038047790527
    9. ' parked' → logprob: -12.554038047790527
    10. '           ' → logprob: -12.679038047790527

Token 2539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008073674980551004
    2. ' ' → logprob: -7.125807285308838
    3. 'len' → logprob: -13.625807762145996
    4. '   ' → logprob: -13.750807762145996
    5. 'sum' → logprob: -15.750807762145996
    6. '       ' → logprob: -15.750807762145996
    7. '```' → logprob: -16.37580680847168
    8. '=' → logprob: -16.50080680847168
    9. '  ' → logprob: -16.62580680847168
    10. '     ' → logprob: -17.81330680847168

Token 2540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011117222311440855
    2. ' ' → logprob: -9.12511157989502
    3. 'len' → logprob: -13.37511157989502
    4. '```' → logprob: -15.75011157989502
    5. '   ' → logprob: -16.312610626220703
    6. '=' → logprob: -16.562610626220703
    7. 'sum' → logprob: -16.750110626220703
    8. '۰' → logprob: -17.125110626220703
    9. '
' → logprob: -17.312610626220703
    10. '1' → logprob: -17.375110626220703

Token 2541: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08026020228862762
    2. 'while' → logprob: -3.2052602767944336
    3. '```' → logprob: -4.830260276794434
    4. '
' → logprob: -4.830260276794434
    5. ' while' → logprob: -5.330260276794434
    6. 'for' → logprob: -5.955260276794434
    7. '        
' → logprob: -5.955260276794434
    8. ',' → logprob: -6.080260276794434
    9. '<|end|>' → logprob: -6.205260276794434
    10. ' for' → logprob: -7.080260276794434

Token 2542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2588186264038086
    2. 'while' → logprob: -1.7588186264038086
    3. '```' → logprob: -3.3838186264038086
    4. '
' → logprob: -4.758818626403809
    5. 'for' → logprob: -5.133818626403809
    6. ' while' → logprob: -5.508818626403809
    7. 'car' → logprob: -6.758818626403809
    8. 'self' → logprob: -7.633818626403809
    9. 'current' → logprob: -8.008818626403809
    10. '``' → logprob: -8.258818626403809

Token 2543: ' arrived' (ID: 18157)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8932452201843262
    2. 'car' → logprob: -1.7682452201843262
    3. 'for' → logprob: -1.8932452201843262
    4. 'arrival' → logprob: -2.393245220184326
    5. 'time' → logprob: -2.643245220184326
    6. 'next' → logprob: -3.518245220184326
    7. 'arr' → logprob: -3.643245220184326
    8. '       ' → logprob: -3.643245220184326
    9. 'idx' → logprob: -5.268245220184326
    10. 'i' → logprob: -5.268245220184326

Token 2544: '_idx' (ID: 15257)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.1076788902282715
    2. '_time' → logprob: -1.3576788902282715
    3. ' =' → logprob: -1.7326788902282715
    4. '_idx' → logprob: -1.9826788902282715
    5. '=' → logprob: -2.6076788902282715
    6. '_c' → logprob: -4.1076788902282715
    7. '_count' → logprob: -6.2326788902282715
    8. '_car' → logprob: -6.3576788902282715
    9. '_at' → logprob: -6.8576788902282715
    10. ' +=' → logprob: -7.8576788902282715

Token 2545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47454747557640076
    2. ' =' → logprob: -0.9745475053787231
    3. ' +=' → logprob: -8.224547386169434
    4. '+=' → logprob: -8.849547386169434
    5. '=
' → logprob: -11.349547386169434
    6. '<|end|>' → logprob: -11.849547386169434
    7. '       ' → logprob: -12.099547386169434
    8. ' =
' → logprob: -12.474547386169434
    9. '   ' → logprob: -12.474547386169434
    10. ')' → logprob: -12.599547386169434

Token 2546: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '=' → logprob: -15.250036239624023
    4. '   ' → logprob: -16.250036239624023
    5. '1' → logprob: -17.000036239624023
    6. '       ' → logprob: -17.250036239624023
    7. '[' → logprob: -18.875036239624023
    8. '۰' → logprob: -19.000036239624023
    9. ' =' → logprob: -19.375036239624023
    10. '
' → logprob: -19.625036239624023

Token 2547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.774276774493046e-05
    2. ' ' → logprob: -10.250038146972656
    3. '1' → logprob: -13.875038146972656
    4. '=' → logprob: -14.937538146972656
    5. '   ' → logprob: -15.187538146972656
    6. '
' → logprob: -15.812538146972656
    7. '       ' → logprob: -16.625038146972656
    8. '۰' → logprob: -16.875038146972656
    9. 'park' → logprob: -17.000038146972656
    10. 'len' → logprob: -17.125038146972656

Token 2548: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2054029256105423
    2. '
' → logprob: -1.7054029703140259
    3. '```' → logprob: -6.080402851104736
    4. 'while' → logprob: -6.955402851104736
    5. '        
' → logprob: -8.080403327941895
    6. ' while' → logprob: -8.830403327941895
    7. '
' → logprob: -9.080403327941895
    8. ',' → logprob: -9.205403327941895
    9. '``' → logprob: -10.705403327941895
    10. '   ' → logprob: -11.205403327941895

Token 2549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048247672617435455
    2. 'while' → logprob: -3.5482475757598877
    3. '```' → logprob: -4.423247814178467
    4. ' while' → logprob: -5.798247814178467
    5. '
' → logprob: -6.298247814178467
    6. '        
' → logprob: -7.298247814178467
    7. ',' → logprob: -7.673247814178467
    8. '``' → logprob: -9.048247337341309
    9. '   ' → logprob: -10.048247337341309
    10. '`' → logprob: -10.548247337341309

Token 2550: ' last' (ID: 2174)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001691846176981926
    2. '       ' → logprob: -7.126691818237305
    3. ' while' → logprob: -7.376691818237305
    4. '
' → logprob: -9.376691818237305
    5. '```' → logprob: -9.376691818237305
    6. 'car' → logprob: -10.251691818237305
    7. 'if' → logprob: -11.126691818237305
    8. 'n' → logprob: -11.501691818237305
    9. 'for' → logprob: -11.626691818237305
    10. 'max' → logprob: -11.876691818237305

Token 2551: '_arr' (ID: 25121)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.36289581656455994
    2. '_arr' → logprob: -1.2378958463668823
    3. '_car' → logprob: -4.862895965576172
    4. '_' → logprob: -5.862895965576172
    5. 'time' → logprob: -6.862895965576172
    6. '_processed' → logprob: -7.612895965576172
    7. '```' → logprob: -7.737895965576172
    8. '_tick' → logprob: -8.237895965576172
    9. '_timestamp' → logprob: -8.612895965576172
    10. '_event' → logprob: -8.612895965576172

Token 2552: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.009202509187161922
    2. 'val' → logprob: -5.759202480316162
    3. 'ived' → logprob: -6.009202480316162
    4. 'iv' → logprob: -6.759202480316162
    5. '_time' → logprob: -7.384202480316162
    6. '   ' → logprob: -7.759202480316162
    7. '_val' → logprob: -7.884202480316162
    8. 'ive' → logprob: -8.25920295715332
    9. '_' → logprob: -8.88420295715332
    10. '       ' → logprob: -9.13420295715332

Token 2553: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.4717333912849426
    2. '=' → logprob: -1.3467333316802979
    3. ' =' → logprob: -2.221733331680298
    4. '+' → logprob: -5.846733570098877
    5. '_' → logprob: -6.471733570098877
    6. 'Time' → logprob: -6.721733570098877
    7. ' +' → logprob: -7.596733570098877
    8. ' +=' → logprob: -7.971733570098877
    9. '+=' → logprob: -8.096733093261719
    10. 'time' → logprob: -8.096733093261719

Token 2554: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233284831047058
    2. '=' → logprob: -0.8983284831047058
    3. '+' → logprob: -10.02332878112793
    4. ' +=' → logprob: -10.27332878112793
    5. '+=' → logprob: -10.52332878112793
    6. ' +' → logprob: -10.64832878112793
    7. ' ' → logprob: -11.14832878112793
    8. '=
' → logprob: -11.39832878112793
    9. ':' → logprob: -12.14832878112793
    10. '```' → logprob: -12.14832878112793

Token 2555: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.08724267035722733
    2. 'cars' → logprob: -2.587242603302002
    3. '(car' → logprob: -5.712242603302002
    4. '(' → logprob: -6.337242603302002
    5. '0' → logprob: -6.712242603302002
    6. ' (' → logprob: -7.337242603302002
    7. '((' → logprob: -7.462242603302002
    8. '10' → logprob: -8.21224308013916
    9. 'c' → logprob: -8.83724308013916
    10. 'car' → logprob: -9.33724308013916

Token 2556: 'cars' (ID: 87072)
  Prédit: 'cars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.7939074039459229
    2. 'total' → logprob: -1.2939074039459229
    3. '(total' → logprob: -1.7939074039459229
    4. 'len' → logprob: -3.043907403945923
    5. '(c' → logprob: -3.293907403945923
    6. '(len' → logprob: -3.918907403945923
    7. '10' → logprob: -7.168907165527344
    8. '(' → logprob: -7.543907165527344
    9. 'c' → logprob: -7.668907165527344
    10. ' (' → logprob: -8.668907165527344

Token 2557: '[-' (ID: 17503)
  Prédit: '[arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[arr' → logprob: -0.3235791325569153
    2. '[-' → logprob: -1.4485790729522705
    3. '[' → logprob: -3.5735790729522705
    4. '[len' → logprob: -5.19857931137085
    5. 'len' → logprob: -6.19857931137085
    6. ')' → logprob: -6.32357931137085
    7. 'arr' → logprob: -6.44857931137085
    8. '   ' → logprob: -7.57357931137085
    9. '_len' → logprob: -7.69857931137085
    10. '_arr' → logprob: -7.82357931137085

Token 2558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.432518421206623e-05
    2. '].' → logprob: -10.2500638961792
    3. ' ' → logprob: -11.8750638961792
    4. ']' → logprob: -12.1250638961792
    5. '   ' → logprob: -12.3750638961792
    6. '  ' → logprob: -12.7500638961792
    7. '-' → logprob: -12.8750638961792
    8. '
' → logprob: -13.1250638961792
    9. 'len' → logprob: -14.0000638961792
    10. '])' → logprob: -14.3750638961792

Token 2559: '].' (ID: 1651)
  Prédit: '.car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.car' → logprob: -0.19152943789958954
    2. '].' → logprob: -2.0665295124053955
    3. ').' → logprob: -3.4415295124053955
    4. '.index' → logprob: -4.941529273986816
    5. '   ' → logprob: -5.566529273986816
    6. ' .' → logprob: -5.941529273986816
    7. '.' → logprob: -7.066529273986816
    8. '.idx' → logprob: -7.941529273986816
    9. '.arr' → logprob: -9.191529273986816
    10. '.id' → logprob: -9.316529273986816

Token 2560: 'arrival' (ID: 183251)
  Prédit: 'arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.03489381819963455
    2. 'car' → logprob: -3.409893751144409
    3. 'arr' → logprob: -7.784893989562988
    4. 'departure' → logprob: -7.909893989562988
    5. 'park' → logprob: -8.284893989562988
    6. 'parking' → logprob: -9.659893989562988
    7. ' arrival' → logprob: -9.909893989562988
    8. '.car' → logprob: -10.909893989562988
    9. '```' → logprob: -11.409893989562988
    10. '__' → logprob: -11.534893989562988

Token 2561: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.8802491215174086e-05
    2. 'time' → logprob: -10.875028610229492
    3. '+' → logprob: -12.125028610229492
    4. '   ' → logprob: -14.000028610229492
    5. 'Time' → logprob: -14.000028610229492
    6. '```' → logprob: -14.375028610229492
    7. '
' → logprob: -14.875028610229492
    8. '._' → logprob: -15.125028610229492
    9. ')_' → logprob: -15.125028610229492
    10. '_' → logprob: -15.750028610229492

Token 2562: ' if' (ID: 538)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4931902289390564
    2. '+' → logprob: -1.1181902885437012
    3. ' if' → logprob: -2.993190288543701
    4. ')' → logprob: -5.118190288543701
    5. 'if' → logprob: -5.493190288543701
    6. ')+' → logprob: -6.868190288543701
    7. '+
' → logprob: -7.993190288543701
    8. '
' → logprob: -8.243189811706543
    9. '   ' → logprob: -8.743189811706543
    10. ' +
' → logprob: -9.368189811706543

Token 2563: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.020296849310398102
    2. 'len' → logprob: -4.270297050476074
    3. ' cars' → logprob: -5.895297050476074
    4. 'arr' → logprob: -6.270297050476074
    5. 'last' → logprob: -6.895297050476074
    6. 'total' → logprob: -8.895297050476074
    7. 'car' → logprob: -9.145297050476074
    8. ' len' → logprob: -9.645297050476074
    9. 'c' → logprob: -10.520297050476074
    10. ' last' → logprob: -10.895297050476074

Token 2564: ' else' (ID: 1203)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.13349150121212006
    2. ' is' → logprob: -2.3834915161132812
    3. 'else' → logprob: -3.6334915161132812
    4. 'arr' → logprob: -5.758491516113281
    5. ')' → logprob: -6.508491516113281
    6. '.arr' → logprob: -8.508491516113281
    7. 'last' → logprob: -8.758491516113281
    8. '       ' → logprob: -8.758491516113281
    9. ' else' → logprob: -8.883491516113281
    10. '):
' → logprob: -9.133491516113281

Token 2565: ' ' (ID: 220)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.6441522240638733
    2. '0' → logprob: -1.2691521644592285
    3. 'None' → logprob: -2.0191521644592285
    4. ' None' → logprob: -4.0191521644592285
    5. ' cars' → logprob: -4.0191521644592285
    6. '10' → logprob: -4.7691521644592285
    7. 'c' → logprob: -5.5191521644592285
    8. 'not' → logprob: -5.8941521644592285
    9. ' ' → logprob: -6.2691521644592285
    10. ')' → logprob: -6.3941521644592285

Token 2566: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011472763493657112
    2. 'cars' → logprob: -4.761472702026367
    3. 'None' → logprob: -6.136472702026367
    4. ' ' → logprob: -8.636472702026367
    5. 'car' → logprob: -8.761472702026367
    6. 'c' → logprob: -9.511472702026367
    7. '-' → logprob: -9.886472702026367
    8. ' None' → logprob: -9.886472702026367
    9. ' cars' → logprob: -10.011472702026367
    10. '10' → logprob: -10.261472702026367

Token 2567: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8535232543945312
    2. ' +' → logprob: -1.2285232543945312
    3. '+' → logprob: -1.7285232543945312
    4. ' if' → logprob: -3.2285232543945312
    5. ')+' → logprob: -3.2285232543945312
    6. ')
' → logprob: -4.603523254394531
    7. '       ' → logprob: -4.853523254394531
    8. '
' → logprob: -5.978523254394531
    9. 'if' → logprob: -6.103523254394531
    10. ' or' → logprob: -6.478523254394531

Token 2568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16464197635650635
    2. '
' → logprob: -2.164641857147217
    3. '```' → logprob: -3.789641857147217
    4. 'while' → logprob: -4.414641857147217
    5. ' while' → logprob: -6.664641857147217
    6. '        
' → logprob: -7.789641857147217
    7. '   ' → logprob: -8.539642333984375
    8. 'self' → logprob: -8.539642333984375
    9. '``' → logprob: -9.039642333984375
    10. '`' → logprob: -10.664642333984375

Token 2569: ' max' (ID: 2999)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1426314413547516
    2. '       ' → logprob: -2.1426315307617188
    3. '
' → logprob: -5.017631530761719
    4. ' while' → logprob: -5.267631530761719
    5. '```' → logprob: -5.642631530761719
    6. 'self' → logprob: -9.142631530761719
    7. '   ' → logprob: -9.892631530761719
    8. 'current' → logprob: -10.267631530761719
    9. 'import' → logprob: -10.642631530761719
    10. '``' → logprob: -11.017631530761719

Token 2570: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0026661460287868977
    2. '_arr' → logprob: -6.877665996551514
    3. 'time' → logprob: -7.252665996551514
    4. 'Time' → logprob: -8.377666473388672
    5. '(self' → logprob: -9.127666473388672
    6. '
' → logprob: -9.502666473388672
    7. '(current' → logprob: -9.752666473388672
    8. '_' → logprob: -9.752666473388672
    9. 'arr' → logprob: -9.877666473388672
    10. 'arrival' → logprob: -10.002666473388672

Token 2571: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16060875356197357
    2. '=' → logprob: -1.9106087684631348
    3. '+' → logprob: -9.160608291625977
    4. ' +' → logprob: -9.285608291625977
    5. '   ' → logprob: -9.910608291625977
    6. ' +=' → logprob: -10.035608291625977
    7. '       ' → logprob: -10.910608291625977
    8. '=max' → logprob: -10.910608291625977
    9. '=self' → logprob: -11.535608291625977
    10. ' ' → logprob: -11.785608291625977

Token 2572: ' max' (ID: 2999)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.6473693251609802
    2. 'last' → logprob: -0.7723693251609802
    3. 'max' → logprob: -5.022369384765625
    4. ' last' → logprob: -5.522369384765625
    5. ' cars' → logprob: -6.772369384765625
    6. '(last' → logprob: -6.772369384765625
    7. '100' → logprob: -8.022369384765625
    8. '(c' → logprob: -8.272369384765625
    9. '       ' → logprob: -8.522369384765625
    10. ' max' → logprob: -8.647369384765625

Token 2573: '(c' (ID: 2410)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.3452853262424469
    2. '(c' → logprob: -1.5952852964401245
    3. '(car' → logprob: -2.970285415649414
    4. '(' → logprob: -3.720285415649414
    5. '(
' → logprob: -5.470285415649414
    6. '((' → logprob: -5.595285415649414
    7. 'last' → logprob: -5.845285415649414
    8. '(max' → logprob: -6.470285415649414
    9. '([' → logprob: -7.720285415649414
    10. '(self' → logprob: -7.845285415649414

Token 2574: '.depart' (ID: 192809)
  Prédit: 'ars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.16954036056995392
    2. 'ar' → logprob: -3.2945404052734375
    3. '(' → logprob: -3.4195404052734375
    4. '(last' → logprob: -3.4195404052734375
    5. '(c' → logprob: -3.4195404052734375
    6. '[' → logprob: -4.9195404052734375
    7. 'last' → logprob: -5.5445404052734375
    8. '(self' → logprob: -6.2945404052734375
    9. '(ar' → logprob: -6.6695404052734375
    10. '=' → logprob: -7.2945404052734375

Token 2575: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.011336873285472393
    2. '_time' → logprob: -4.511336803436279
    3. 'time' → logprob: -9.761337280273438
    4. '__' → logprob: -10.136337280273438
    5. 'ime' → logprob: -10.136337280273438
    6. 'arrival' → logprob: -10.136337280273438
    7. '_arr' → logprob: -10.261337280273438
    8. 'ue' → logprob: -10.386337280273438
    9. '```' → logprob: -11.011337280273438
    10. '_' → logprob: -12.261337280273438

Token 2576: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.1054253011243418e-05
    2. 'time' → logprob: -11.000020980834961
    3. 'ime' → logprob: -13.250020980834961
    4. 'Time' → logprob: -13.625020980834961
    5. 'ion' → logprob: -15.375020980834961
    6. '   ' → logprob: -15.625020980834961
    7. 'ure' → logprob: -15.750020980834961
    8. '_times' → logprob: -15.875020980834961
    9. 'ation' → logprob: -16.00002098083496
    10. '_TIME' → logprob: -16.25002098083496

Token 2577: ' for' (ID: 395)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1564444750547409
    2. ',' → logprob: -2.531444549560547
    3. '+' → logprob: -3.031444549560547
    4. ' if' → logprob: -4.906444549560547
    5. ' for' → logprob: -5.406444549560547
    6. ' ,' → logprob: -6.281444549560547
    7. ')' → logprob: -6.531444549560547
    8. 'for' → logprob: -7.781444549560547
    9. ' or' → logprob: -8.156444549560547
    10. ',
' → logprob: -8.281444549560547

Token 2578: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10438883304595947
    2. 'cars' → logprob: -2.35438871383667
    3. ' c' → logprob: -5.72938871383667
    4. ' cars' → logprob: -7.35438871383667
    5. 'car' → logprob: -8.479389190673828
    6. '
' → logprob: -10.354389190673828
    7. '	c' → logprob: -10.854389190673828
    8. '_c' → logprob: -12.416889190673828
    9. ' car' → logprob: -13.416889190673828
    10. '(c' → logprob: -13.541889190673828

Token 2579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4990134835243225
    2. 'c' → logprob: -1.3740134239196777
    3. 'in' → logprob: -1.9990134239196777
    4. ' c' → logprob: -5.624013423919678
    5. 'cars' → logprob: -7.874013423919678
    6. 'car' → logprob: -8.374013900756836
    7. 's' → logprob: -11.124013900756836
    8. ' car' → logprob: -11.249013900756836
    9. ' ' → logprob: -11.374013900756836
    10. '
' → logprob: -11.749013900756836

Token 2580: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.00041065402911044657
    2. ' cars' → logprob: -7.875410556793213
    3. 'c' → logprob: -10.750411033630371
    4. 'car' → logprob: -12.000411033630371
    5. '
' → logprob: -13.375411033630371
    6. 'cats' → logprob: -15.125411033630371
    7. 'cards' → logprob: -15.375411033630371
    8. '   ' → logprob: -15.500411033630371
    9. '[' → logprob: -15.875411033630371
    10. 'self' → logprob: -16.625410079956055

Token 2581: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20418915152549744
    2. ')+' → logprob: -1.7041891813278198
    3. ' +' → logprob: -7.079189300537109
    4. ' if' → logprob: -7.204189300537109
    5. ' )' → logprob: -7.579189300537109
    6. '       ' → logprob: -8.07918930053711
    7. '+' → logprob: -8.07918930053711
    8. 'if' → logprob: -11.20418930053711
    9. ')
' → logprob: -11.32918930053711
    10. '           ' → logprob: -12.20418930053711

Token 2582: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43611934781074524
    2. '
' → logprob: -1.1861193180084229
    3. ' +' → logprob: -3.186119318008423
    4. '+' → logprob: -5.686119556427002
    5. '```' → logprob: -6.311119556427002
    6. '        
' → logprob: -7.186119556427002
    7. ' if' → logprob: -9.311119079589844
    8. '<|end|>' → logprob: -9.561119079589844
    9. '  
' → logprob: -9.686119079589844
    10. ')
' → logprob: -9.811119079589844

Token 2583: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.0009155054576694965
    2. ' cars' → logprob: -7.00091552734375
    3. 'c' → logprob: -12.87591552734375
    4. 'car' → logprob: -13.62591552734375
    5. '
' → logprob: -15.50091552734375
    6. '```' → logprob: -17.50091552734375
    7. '   ' → logprob: -17.62591552734375
    8. '[' → logprob: -17.87591552734375
    9. '(c' → logprob: -18.00091552734375
    10. 'cards' → logprob: -18.00091552734375

Token 2584: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25205832719802856
    2. ' else' → logprob: -1.5020582675933838
    3. '       ' → logprob: -9.002058029174805
    4. '```' → logprob: -13.002058029174805
    5. '   ' → logprob: -13.377058029174805
    6. '        ' → logprob: -14.502058029174805
    7. '           ' → logprob: -14.752058029174805
    8. ':
' → logprob: -15.377058029174805
    9. ')' → logprob: -15.502058029174805
    10. ':' → logprob: -15.627058029174805

Token 2585: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2293422669172287
    2. 'cars' → logprob: -2.229342222213745
    3. '(c' → logprob: -2.604342222213745
    4. 'last' → logprob: -4.229342460632324
    5. '(last' → logprob: -5.979342460632324
    6. '(' → logprob: -6.229342460632324
    7. 'c' → logprob: -6.854342460632324
    8. ' ' → logprob: -7.354342460632324
    9. ' cars' → logprob: -7.479342460632324
    10. 'max' → logprob: -7.604342460632324

Token 2586: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.058276016265153885
    2. 'cars' → logprob: -3.8082759380340576
    3. '(c' → logprob: -4.058276176452637
    4. 'last' → logprob: -4.433276176452637
    5. '(last' → logprob: -5.558276176452637
    6. 'c' → logprob: -7.433276176452637
    7. '(' → logprob: -7.808276176452637
    8. ' ' → logprob: -9.308276176452637
    9. '10' → logprob: -9.933276176452637
    10. '(max' → logprob: -9.933276176452637

Token 2587: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5838653445243835
    2. '       ' → logprob: -1.0838654041290283
    3. '```' → logprob: -2.5838654041290283
    4. 'while' → logprob: -4.208865165710449
    5. 'self' → logprob: -5.583865165710449
    6. ' while' → logprob: -5.833865165710449
    7. '        
' → logprob: -6.083865165710449
    8. '``' → logprob: -6.958865165710449
    9. ',' → logprob: -7.333865165710449
    10. '<|end|>' → logprob: -7.458865165710449

Token 2588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09361105412244797
    2. '
' → logprob: -2.718611001968384
    3. '```' → logprob: -3.968611001968384
    4. 'while' → logprob: -6.218611240386963
    5. 'self' → logprob: -7.093611240386963
    6. 'time' → logprob: -7.718611240386963
    7. 'current' → logprob: -8.343610763549805
    8. '        
' → logprob: -8.343610763549805
    9. ' while' → logprob: -8.343610763549805
    10. '   ' → logprob: -8.968610763549805

Token 2589: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07984932512044907
    2. '       ' → logprob: -2.8298492431640625
    3. '
' → logprob: -4.5798492431640625
    4. 'time' → logprob: -5.8298492431640625
    5. '```' → logprob: -6.4548492431640625
    6. 'self' → logprob: -6.4548492431640625
    7. 'for' → logprob: -7.2048492431640625
    8. 'current' → logprob: -8.079849243164062
    9. ' while' → logprob: -8.454849243164062
    10. '   ' → logprob: -10.329849243164062

Token 2590: ' we' (ID: 581)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02069556899368763
    2. 'time' → logprob: -4.270695686340332
    3. '       ' → logprob: -5.395695686340332
    4. 'for' → logprob: -6.895695686340332
    5. 'current' → logprob: -7.520695686340332
    6. 'self' → logprob: -8.395695686340332
    7. 'max' → logprob: -9.645695686340332
    8. ' while' → logprob: -10.020695686340332
    9. '
' → logprob: -10.270695686340332
    10. '```' → logprob: -10.520695686340332

Token 2591: ' simulate' (ID: 66687)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1789519786834717
    2. '   ' → logprob: -1.4289519786834717
    3. '=' → logprob: -2.1789519786834717
    4. '       ' → logprob: -2.3039519786834717
    5. 'current' → logprob: -2.5539519786834717
    6. 'while' → logprob: -3.1789519786834717
    7. '_current' → logprob: -3.3039519786834717
    8. '
' → logprob: -3.8039519786834717
    9. 'def' → logprob: -4.053952217102051
    10. '_time' → logprob: -5.303952217102051

Token 2592: ' from' (ID: 591)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.43244439363479614
    2. '       ' → logprob: -1.5574443340301514
    3. 'self' → logprob: -2.8074443340301514
    4. 'for' → logprob: -3.1824443340301514
    5. 'time' → logprob: -4.4324445724487305
    6. '
' → logprob: -5.1824445724487305
    7. 'current' → logprob: -5.4324445724487305
    8. '0' → logprob: -5.5574445724487305
    9. ' while' → logprob: -5.5574445724487305
    10. 'max' → logprob: -6.3074445724487305

Token 2593: ' time' (ID: 1058)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00894804298877716
    2. 'self' → logprob: -5.133947849273682
    3. 'time' → logprob: -5.883947849273682
    4. 'current' → logprob: -9.13394832611084
    5. ' ' → logprob: -10.00894832611084
    6. 'now' → logprob: -10.88394832611084
    7. '       ' → logprob: -11.00894832611084
    8. '   ' → logprob: -11.25894832611084
    9. ' self' → logprob: -11.75894832611084
    10. 't' → logprob: -12.25894832611084

Token 2594: '=' (ID: 28)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5368316173553467
    2. '=' → logprob: -0.9118316173553467
    3. ' =' → logprob: -4.411831855773926
    4. 'self' → logprob: -7.661831855773926
    5. '       ' → logprob: -7.661831855773926
    6. '=
' → logprob: -8.786831855773926
    7. ' ' → logprob: -9.661831855773926
    8. '```' → logprob: -10.036831855773926
    9. '+=' → logprob: -10.161831855773926
    10. ' self' → logprob: -10.286831855773926

Token 2595: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.960946772480384e-05
    2. ' ' → logprob: -9.250099182128906
    3. '   ' → logprob: -13.875099182128906
    4. 'self' → logprob: -14.250099182128906
    5. '       ' → logprob: -14.500099182128906
    6. '=' → logprob: -15.000099182128906
    7. '
' → logprob: -15.500099182128906
    8. '           ' → logprob: -16.125099182128906
    9. '```' → logprob: -16.375099182128906
    10. '    ' → logprob: -16.625099182128906

Token 2596: ' forward' (ID: 6687)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7154947519302368
    2. '       ' → logprob: -0.8404947519302368
    3. '
' → logprob: -3.5904946327209473
    4. ' while' → logprob: -4.340494632720947
    5. ' to' → logprob: -4.715494632720947
    6. 'for' → logprob: -4.840494632720947
    7. 'to' → logprob: -4.840494632720947
    8. 'self' → logprob: -5.090494632720947
    9. '```' → logprob: -5.715494632720947
    10. 'time' → logprob: -6.715494632720947

Token 2597: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1750965416431427
    2. 'while' → logprob: -2.0500965118408203
    3. '
' → logprob: -3.6750965118408203
    4. '```' → logprob: -5.80009651184082
    5. ' while' → logprob: -6.42509651184082
    6. 'time' → logprob: -7.67509651184082
    7. 'for' → logprob: -7.92509651184082
    8. 'self' → logprob: -7.92509651184082
    9. '        
' → logprob: -8.05009651184082
    10. ',' → logprob: -9.30009651184082

Token 2598: ' minutes' (ID: 5438)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.027864551171660423
    2. 'steps' → logprob: -4.902864456176758
    3. 'increments' → logprob: -5.277864456176758
    4. 'increment' → logprob: -5.652864456176758
    5. 'minutes' → logprob: -5.777864456176758
    6. '1' → logprob: -5.902864456176758
    7. ' range' → logprob: -6.402864456176758
    8. 'while' → logprob: -6.652864456176758
    9. '0' → logprob: -7.152864456176758
    10. '   ' → logprob: -7.652864456176758

Token 2599: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014771894551813602
    2. 'while' → logprob: -4.389771938323975
    3. '
' → logprob: -6.514771938323975
    4. '```' → logprob: -8.139771461486816
    5. ' while' → logprob: -8.264771461486816
    6. 'self' → logprob: -9.889771461486816
    7. '        
' → logprob: -9.889771461486816
    8. '   ' → logprob: -10.014771461486816
    9. 'for' → logprob: -10.389771461486816
    10. ',' → logprob: -11.389771461486816

Token 2600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5168053507804871
    2. 'while' → logprob: -1.5168054103851318
    3. '
' → logprob: -2.766805410385132
    4. '```' → logprob: -2.766805410385132
    5. 'time' → logprob: -3.516805410385132
    6. '   ' → logprob: -4.641805171966553
    7. 'self' → logprob: -5.141805171966553
    8. 'current' → logprob: -5.141805171966553
    9. ' while' → logprob: -5.891805171966553
    10. '``' → logprob: -6.516805171966553

Token 2601: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006734318565577269
    2. '       ' → logprob: -5.506734371185303
    3. 'time' → logprob: -6.881734371185303
    4. 'for' → logprob: -7.506734371185303
    5. ' while' → logprob: -7.756734371185303
    6. '
' → logprob: -7.756734371185303
    7. '```' → logprob: -9.131733894348145
    8. 'current' → logprob: -9.631733894348145
    9. 'self' → logprob: -10.506733894348145
    10. '   ' → logprob: -11.506733894348145

Token 2602: ' an' (ID: 448)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08707134425640106
    2. 'time' → logprob: -2.837071418762207
    3. '       ' → logprob: -3.962071418762207
    4. ' while' → logprob: -5.837071418762207
    5. 'current' → logprob: -6.337071418762207
    6. 'for' → logprob: -7.212071418762207
    7. '```' → logprob: -9.212071418762207
    8. '
' → logprob: -9.462071418762207
    9. ' time' → logprob: -9.837071418762207
    10. 't' → logprob: -10.087071418762207

Token 2603: ' abstraction' (ID: 129564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2165748029947281
    2. 'while' → logprob: -2.3415749073028564
    3. '   ' → logprob: -3.0915749073028564
    4. 'n' → logprob: -3.8415749073028564
    5. 'time' → logprob: -4.841574668884277
    6. 't' → logprob: -5.716574668884277
    7. ' while' → logprob: -5.716574668884277
    8. 'y' → logprob: -5.841574668884277
    9. ' =' → logprob: -6.216574668884277
    10. '=' → logprob: -6.216574668884277

Token 2604: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15342199802398682
    2. 'for' → logprob: -3.4034218788146973
    3. 'time' → logprob: -3.9034218788146973
    4. 'while' → logprob: -3.9034218788146973
    5. '   ' → logprob: -4.528421878814697
    6. 'current' → logprob: -4.778421878814697
    7. ' for' → logprob: -4.903421878814697
    8. ':' → logprob: -5.153421878814697
    9. '```' → logprob: -5.278421878814697
    10. 'of' → logprob: -5.653421878814697

Token 2605: ' event' (ID: 2104)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2763955295085907
    2. 'time' → logprob: -1.901395559310913
    3. '       ' → logprob: -3.151395559310913
    4. ' while' → logprob: -4.026395320892334
    5. 'for' → logprob: -4.151395320892334
    6. 'current' → logprob: -4.401395320892334
    7. ' time' → logprob: -6.901395320892334
    8. ' for' → logprob: -7.401395320892334
    9. ' current' → logprob: -7.651395320892334
    10. '
' → logprob: -7.901395320892334

Token 2606: ' loop' (ID: 11453)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.27536484599113464
    2. '_time' → logprob: -2.650364875793457
    3. '_' → logprob: -2.900364875793457
    4. 's' → logprob: -3.275364875793457
    5. ' =' → logprob: -3.275364875793457
    6. '=' → logprob: -4.275364875793457
    7. 'queue' → logprob: -5.150364875793457
    8. '_times' → logprob: -5.275364875793457
    9. '_loop' → logprob: -5.650364875793457
    10. '   ' → logprob: -6.025364875793457

Token 2607: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1376017928123474
    2. 'while' → logprob: -2.887601852416992
    3. '
' → logprob: -3.762601852416992
    4. 'time' → logprob: -4.137601852416992
    5. '```' → logprob: -4.137601852416992
    6. ' while' → logprob: -5.137601852416992
    7. '   ' → logprob: -6.512601852416992
    8. 'for' → logprob: -6.512601852416992
    9. ' for' → logprob: -6.637601852416992
    10. ':' → logprob: -6.637601852416992

Token 2608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3263269364833832
    2. 'while' → logprob: -1.7013269662857056
    3. 'time' → logprob: -3.076326847076416
    4. '```' → logprob: -3.326326847076416
    5. ' while' → logprob: -5.576326847076416
    6. 'current' → logprob: -5.576326847076416
    7. '
' → logprob: -5.701326847076416
    8. '   ' → logprob: -6.576326847076416
    9. '``' → logprob: -7.201326847076416
    10. 'for' → logprob: -8.326327323913574

Token 2609: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8058018088340759
    2. 'while' → logprob: -0.9308018088340759
    3. '       ' → logprob: -2.0558018684387207
    4. 'current' → logprob: -3.9308018684387207
    5. '```' → logprob: -5.805801868438721
    6. 't' → logprob: -5.930801868438721
    7. '
' → logprob: -6.055801868438721
    8. ' while' → logprob: -6.430801868438721
    9. ' time' → logprob: -7.430801868438721
    10. 'for' → logprob: -7.930801868438721

Token 2610: ' maintain' (ID: 12930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4726433753967285
    2. 'time' → logprob: -1.2226433753967285
    3. '       ' → logprob: -2.8476433753967285
    4. 'current' → logprob: -3.8476433753967285
    5. ' while' → logprob: -6.3476433753967285
    6. 'for' → logprob: -8.09764289855957
    7. ' time' → logprob: -8.72264289855957
    8. 't' → logprob: -9.34764289855957
    9. 'next' → logprob: -9.34764289855957
    10. ' current' → logprob: -9.47264289855957

Token 2611: ' when' (ID: 1261)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7258663773536682
    2. 'current' → logprob: -1.7258663177490234
    3. 'event' → logprob: -2.3508663177490234
    4. 'car' → logprob: -2.8508663177490234
    5. 'arrival' → logprob: -2.9758663177490234
    6. 'arr' → logprob: -3.1008663177490234
    7. 'self' → logprob: -4.100866317749023
    8. 'next' → logprob: -4.225866317749023
    9. 'while' → logprob: -4.350866317749023
    10. 'a' → logprob: -4.725866317749023

Token 2612: ' next' (ID: 2613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2819574177265167
    2. 'arr' → logprob: -1.7819573879241943
    3. 'cars' → logprob: -3.9069573879241943
    4. 'car' → logprob: -4.031957626342773
    5. ' self' → logprob: -4.531957626342773
    6. 'next' → logprob: -4.656957626342773
    7. 'current' → logprob: -4.906957626342773
    8. '       ' → logprob: -6.156957626342773
    9. '   ' → logprob: -6.406957626342773
    10. 'the' → logprob: -6.531957626342773

Token 2613: ' car' (ID: 1669)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.7639917135238647
    2. '_event' → logprob: -1.5139917135238647
    3. 'arrival' → logprob: -1.6389917135238647
    4. 'car' → logprob: -2.7639918327331543
    5. '_arr' → logprob: -3.5139918327331543
    6. '_car' → logprob: -3.8889918327331543
    7. 'arr' → logprob: -5.763991832733154
    8. 'events' → logprob: -7.263991832733154
    9. '   ' → logprob: -8.013991355895996
    10. 'departure' → logprob: -8.013991355895996

Token 2614: ' arrives' (ID: 39650)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.363036185503006
    2. '_time' → logprob: -1.7380361557006836
    3. '_index' → logprob: -2.8630361557006836
    4. 'arrival' → logprob: -3.7380361557006836
    5. '_event' → logprob: -4.613036155700684
    6. '=' → logprob: -4.863036155700684
    7. '_idx' → logprob: -5.238036155700684
    8. 'arr' → logprob: -5.363036155700684
    9. '_to' → logprob: -5.363036155700684
    10. ' =' → logprob: -5.363036155700684

Token 2615: '
' (ID: 198)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.29097163677215576
    2. '       ' → logprob: -1.4159716367721558
    3. 'arrival' → logprob: -5.915971755981445
    4. 'while' → logprob: -6.540971755981445
    5. 'event' → logprob: -6.915971755981445
    6. ' next' → logprob: -6.915971755981445
    7. '```' → logprob: -7.040971755981445
    8. 'arr' → logprob: -7.415971755981445
    9. 'if' → logprob: -7.665971755981445
    10. ',' → logprob: -7.665971755981445

Token 2616: '       ' (ID: 309)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9181174039840698
    2. '       ' → logprob: -1.0431174039840698
    3. '=' → logprob: -2.6681175231933594
    4. 'while' → logprob: -3.5431175231933594
    5. 'time' → logprob: -3.5431175231933594
    6. ',' → logprob: -3.6681175231933594
    7. ' =' → logprob: -3.7931175231933594
    8. '```' → logprob: -4.168117523193359
    9. '
' → logprob: -4.293117523193359
    10. '_next' → logprob: -4.543117523193359

Token 2617: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.01379474438726902
    2. '       ' → logprob: -4.888794898986816
    3. 'while' → logprob: -5.138794898986816
    4. 'arrival' → logprob: -9.138794898986816
    5. ' next' → logprob: -9.263794898986816
    6. '```' → logprob: -10.388794898986816
    7. 'arr' → logprob: -10.763794898986816
    8. '   ' → logprob: -11.138794898986816
    9. '``' → logprob: -11.263794898986816
    10. 'if' → logprob: -12.138794898986816

Token 2618: ' We' (ID: 1416)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.012083981186151505
    2. 'while' → logprob: -4.512084007263184
    3. '       ' → logprob: -7.262084007263184
    4. 'arrival' → logprob: -8.387084007263184
    5. ' next' → logprob: -10.137084007263184
    6. '   ' → logprob: -10.887084007263184
    7. 'car' → logprob: -11.262084007263184
    8. 'if' → logprob: -11.512084007263184
    9. '```' → logprob: -11.887084007263184
    10. 'arr' → logprob: -12.137084007263184

Token 2619: ' proceed' (ID: 18988)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8619005680084229
    2. '       ' → logprob: -1.1119005680084229
    3. 'current' → logprob: -2.736900568008423
    4. 'def' → logprob: -3.361900568008423
    5. 'continue' → logprob: -3.611900568008423
    6. '
' → logprob: -3.611900568008423
    7. ' current' → logprob: -4.236900329589844
    8. 'while' → logprob: -4.236900329589844
    9. '_current' → logprob: -5.111900329589844
    10. 'next' → logprob: -5.236900329589844

Token 2620: ' minute' (ID: 12434)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9606016874313354
    2. 'while' → logprob: -1.8356016874313354
    3. 'self' → logprob: -1.9606016874313354
    4. '       ' → logprob: -2.335601806640625
    5. ' to' → logprob: -2.585601806640625
    6. 'with' → logprob: -3.210601806640625
    7. 'until' → logprob: -3.835601806640625
    8. ' self' → logprob: -4.335601806640625
    9. ' by' → logprob: -4.460601806640625
    10. ' until' → logprob: -4.960601806640625

Token 2621: ' per' (ID: 777)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.0829559564590454
    2. '+=' → logprob: -1.3329559564590454
    3. ' by' → logprob: -1.7079559564590454
    4. ' +=' → logprob: -1.8329559564590454
    5. '=' → logprob: -3.207955837249756
    6. '+' → logprob: -5.457955837249756
    7. ' =' → logprob: -6.082955837249756
    8. '_by' → logprob: -6.207955837249756
    9. 's' → logprob: -6.207955837249756
    10. '_' → logprob: -6.832955837249756

Token 2622: ' minute' (ID: 12434)
  Prédit: 'minute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minute' → logprob: -0.007813396863639355
    2. ' minute' → logprob: -6.757813453674316
    3. 'increment' → logprob: -6.882813453674316
    4. 'step' → logprob: -7.132813453674316
    5. '1' → logprob: -7.257813453674316
    6. 'time' → logprob: -7.257813453674316
    7. '
' → logprob: -7.382813453674316
    8. 'iteration' → logprob: -7.382813453674316
    9. 'car' → logprob: -8.257813453674316
    10. '_min' → logprob: -8.257813453674316

Token 2623: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1452343463897705
    2. 'while' → logprob: -2.2702343463897705
    3. '
' → logprob: -3.7702343463897705
    4. ' while' → logprob: -5.520234107971191
    5. 'self' → logprob: -6.895234107971191
    6. '        
' → logprob: -7.020234107971191
    7. '   ' → logprob: -7.145234107971191
    8. '```' → logprob: -7.145234107971191
    9. ',' → logprob: -7.895234107971191
    10. 'def' → logprob: -8.770234107971191

Token 2624: ' simplicity' (ID: 57516)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04114014282822609
    2. ' self' → logprob: -3.791140079498291
    3. 'now' → logprob: -5.166140079498291
    4. 'time' → logprob: -5.791140079498291
    5. '0' → logprob: -6.416140079498291
    6. 'current' → logprob: -6.666140079498291
    7. 'cur' → logprob: -6.916140079498291
    8. 'i' → logprob: -7.291140079498291
    9. '   ' → logprob: -7.541140079498291
    10. '       ' → logprob: -7.666140079498291

Token 2625: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.677661657333374
    2. '       ' → logprob: -1.052661657333374
    3. 'while' → logprob: -2.052661657333374
    4. '```' → logprob: -4.802661895751953
    5. ' while' → logprob: -5.802661895751953
    6. '        
' → logprob: -6.927661895751953
    7. 'self' → logprob: -7.302661895751953
    8. '``' → logprob: -7.552661895751953
    9. '   ' → logprob: -7.677661895751953
    10. ',' → logprob: -8.802661895751953

Token 2626: 'max' (ID: 3228)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03453999385237694
    2. ' while' → logprob: -4.409540176391602
    3. '       ' → logprob: -4.784540176391602
    4. '
' → logprob: -5.034540176391602
    5. 'self' → logprob: -5.534540176391602
    6. ')' → logprob: -7.034540176391602
    7. ')
' → logprob: -7.284540176391602
    8. '```' → logprob: -7.409540176391602
    9. '):
' → logprob: -8.284540176391602
    10. '   ' → logprob: -9.284540176391602

Token 2627: ' ' (ID: 220)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.12781359255313873
    2. 'time' → logprob: -3.3778135776519775
    3. '+' → logprob: -4.002813816070557
    4. ')' → logprob: -4.252813816070557
    5. '   ' → logprob: -4.877813816070557
    6. '=' → logprob: -5.252813816070557
    7. '_' → logprob: -5.377813816070557
    8. '_arr' → logprob: -5.752813816070557
    9. '(self' → logprob: -6.002813816070557
    10. '       ' → logprob: -6.127813816070557

Token 2628: '120' (ID: 6106)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0599709749221802
    2. '_time' → logprob: -1.0599709749221802
    3. '+' → logprob: -2.6849708557128906
    4. '=' → logprob: -2.8099708557128906
    5. '(max' → logprob: -3.3099708557128906
    6. 'time' → logprob: -4.059970855712891
    7. '```' → logprob: -4.309970855712891
    8. '   ' → logprob: -4.559970855712891
    9. '+=' → logprob: -4.559970855712891
    10. 'self' → logprob: -4.684970855712891

Token 2629: ' parking' (ID: 14472)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7159216403961182
    2. ')' → logprob: -0.9659216403961182
    3. '
' → logprob: -2.590921640396118
    4. '):
' → logprob: -3.840921640396118
    5. '0' → logprob: -4.715921401977539
    6. '+' → logprob: -5.215921401977539
    7. '       ' → logprob: -5.965921401977539
    8. ' ' → logprob: -6.090921401977539
    9. ':
' → logprob: -6.215921401977539
    10. ':' → logprob: -6.465921401977539

Token 2630: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.2941287755966187
    2. ')' → logprob: -1.9191287755966187
    3. ')
' → logprob: -1.9191287755966187
    4. '_minutes' → logprob: -2.169128894805908
    5. 'time' → logprob: -2.794128894805908
    6. '
' → logprob: -2.794128894805908
    7. '       ' → logprob: -3.294128894805908
    8. '):
' → logprob: -3.419128894805908
    9. 'minute' → logprob: -4.294128894805908
    10. '   ' → logprob: -4.419128894805908

Token 2631: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9668895602226257
    2. ')' → logprob: -1.9668896198272705
    3. ')
' → logprob: -1.9668896198272705
    4. '):
' → logprob: -2.0918896198272705
    5. '       ' → logprob: -2.3418896198272705
    6. '):' → logprob: -3.0918896198272705
    7. ':' → logprob: -3.9668896198272705
    8. ':
' → logprob: -3.9668896198272705
    9. '+' → logprob: -5.091889381408691
    10. ',' → logprob: -5.216889381408691

Token 2632: ' time' (ID: 1058)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8826380372047424
    2. 'self' → logprob: -1.5076379776000977
    3. ' while' → logprob: -1.5076379776000977
    4. ' self' → logprob: -3.0076379776000977
    5. 'max' → logprob: -4.007637977600098
    6. '       ' → logprob: -4.257637977600098
    7. ')
' → logprob: -4.632637977600098
    8. ')' → logprob: -4.632637977600098
    9. '#' → logprob: -5.132637977600098
    10. '
' → logprob: -5.257637977600098

Token 2633: ' may' (ID: 1340)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6822530031204224
    2. '=' → logprob: -1.8072530031204224
    3. '+' → logprob: -2.307252883911133
    4. ' +=' → logprob: -2.432252883911133
    5. '<=' → logprob: -2.557252883911133
    6. ' <=' → logprob: -4.182252883911133
    7. '       ' → logprob: -4.557252883911133
    8. '
' → logprob: -5.057252883911133
    9. ')' → logprob: -5.057252883911133
    10. '<' → logprob: -5.557252883911133

Token 2634: ' go' (ID: 810)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.011934757232666
    2. '+=' → logprob: -1.011934757232666
    3. '=' → logprob: -1.386934757232666
    4. '       ' → logprob: -5.636934757232666
    5. 'continue' → logprob: -5.636934757232666
    6. '   ' → logprob: -5.761934757232666
    7. ' +=' → logprob: -6.011934757232666
    8. '```' → logprob: -6.136934757232666
    9. ' <=' → logprob: -6.261934757232666
    10. ')' → logprob: -6.886934757232666

Token 2635: ' max' (ID: 2999)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.06347735971212387
    2. ' up' → logprob: -3.4384772777557373
    3. 'b' → logprob: -4.813477516174316
    4. '       ' → logprob: -5.313477516174316
    5. '+=' → logprob: -5.688477516174316
    6. '0' → logprob: -6.188477516174316
    7. '=' → logprob: -6.313477516174316
    8. 'to' → logprob: -6.313477516174316
    9. ' beyond' → logprob: -6.563477516174316
    10. 'until' → logprob: -6.688477516174316

Token 2636: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30803626775741577
    2. '=' → logprob: -2.4330363273620605
    3. '+=' → logprob: -2.9330363273620605
    4. '1' → logprob: -3.9330363273620605
    5. ' up' → logprob: -3.9330363273620605
    6. 'up' → logprob: -4.0580363273620605
    7. ' +' → logprob: -4.0580363273620605
    8. ' +=' → logprob: -4.5580363273620605
    9. '120' → logprob: -4.6830363273620605
    10. 'to' → logprob: -5.3080363273620605

Token 2637: '100' (ID: 1353)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.826494038105011
    2. '=' → logprob: -1.8264939785003662
    3. 'up' → logprob: -2.201493978500366
    4. '120' → logprob: -2.451493978500366
    5. ' max' → logprob: -3.201493978500366
    6. 'c' → logprob: -3.576493978500366
    7. 'to' → logprob: -3.951493978500366
    8. '
' → logprob: -3.951493978500366
    9. 'cars' → logprob: -4.076494216918945
    10. ' to' → logprob: -4.326494216918945

Token 2638: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15136444568634033
    2. ' +' → logprob: -3.401364326477051
    3. '       ' → logprob: -3.651364326477051
    4. '
' → logprob: -4.276364326477051
    5. '=' → logprob: -4.401364326477051
    6. '0' → logprob: -4.401364326477051
    7. '+
' → logprob: -5.026364326477051
    8. '```' → logprob: -5.401364326477051
    9. ')' → logprob: -5.526364326477051
    10. '+=' → logprob: -5.776364326477051

Token 2639: '10' (ID: 702)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -1.4333101511001587
    2. 'car' → logprob: -1.8083101511001587
    3. '10' → logprob: -2.058310031890869
    4. '0' → logprob: -2.183310031890869
    5. '60' → logprob: -2.183310031890869
    6. 'minutes' → logprob: -2.308310031890869
    7. '1' → logprob: -4.183310031890869
    8. 'max' → logprob: -4.433310031890869
    9. '100' → logprob: -4.558310031890869
    10. ')' → logprob: -4.683310031890869

Token 2640: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11314097791910172
    2. ' +' → logprob: -3.6131410598754883
    3. '0' → logprob: -4.113141059875488
    4. '):
' → logprob: -4.238141059875488
    5. '
' → logprob: -4.738141059875488
    6. '       ' → logprob: -4.738141059875488
    7. ')
' → logprob: -4.863141059875488
    8. '+
' → logprob: -4.863141059875488
    9. ':
' → logprob: -5.238141059875488
    10. '1' → logprob: -5.363141059875488

Token 2641: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.525177538394928
    2. '120' → logprob: -1.6501774787902832
    3. '10' → logprob: -1.7751774787902832
    4. '1' → logprob: -4.525177478790283
    5. '100' → logprob: -5.025177478790283
    6. '20' → logprob: -5.275177478790283
    7. '(max' → logprob: -5.275177478790283
    8. '121' → logprob: -5.525177478790283
    9. '
' → logprob: -5.900177478790283
    10. ' max' → logprob: -6.150177478790283

Token 2642: ' t' (ID: 260)
  Prédit: '120'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '120' → logprob: -0.07850975543260574
    2. 'car' → logprob: -3.82850980758667
    3. '20' → logprob: -4.57850980758667
    4. 'parking' → logprob: -4.57850980758667
    5. 'park' → logprob: -4.95350980758667
    6. '30' → logprob: -5.32850980758667
    7. '
' → logprob: -5.57850980758667
    8. 'max' → logprob: -5.70350980758667
    9. '60' → logprob: -5.82850980758667
    10. 'duration' → logprob: -5.95350980758667

Token 2643: ')
' (ID: 446)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.11237215995788574
    2. '=' → logprob: -2.3623721599578857
    3. '10' → logprob: -6.237372398376465
    4. ' =' → logprob: -6.612372398376465
    5. '_duration' → logprob: -6.987372398376465
    6. ')' → logprob: -7.237372398376465
    7. 'max' → logprob: -7.612372398376465
    8. 'imedelta' → logprob: -7.737372398376465
    9. 'imes' → logprob: -7.862372398376465
    10. ')
' → logprob: -7.862372398376465

Token 2644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6802137494087219
    2. '
' → logprob: -1.0552136898040771
    3. 'while' → logprob: -2.430213689804077
    4. '```' → logprob: -3.680213689804077
    5. 'time' → logprob: -4.430213928222656
    6. '        
' → logprob: -5.055213928222656
    7. ' while' → logprob: -5.555213928222656
    8. 'current' → logprob: -6.180213928222656
    9. '   ' → logprob: -6.180213928222656
    10. '``' → logprob: -6.680213928222656

Token 2645: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2030763328075409
    2. '       ' → logprob: -2.3280763626098633
    3. 'time' → logprob: -3.2030763626098633
    4. '
' → logprob: -3.4530763626098633
    5. 'current' → logprob: -5.328076362609863
    6. '```' → logprob: -5.578076362609863
    7. ' while' → logprob: -5.703076362609863
    8. 'for' → logprob: -7.203076362609863
    9. 'next' → logprob: -7.703076362609863
    10. 'self' → logprob: -8.328076362609863

Token 2646: ' but' (ID: 889)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05763131007552147
    2. '       ' → logprob: -3.432631254196167
    3. 'time' → logprob: -4.057631492614746
    4. 'for' → logprob: -5.807631492614746
    5. '
' → logprob: -6.807631492614746
    6. ' while' → logprob: -6.932631492614746
    7. '```' → logprob: -7.682631492614746
    8. 'current' → logprob: -7.682631492614746
    9. '   ' → logprob: -9.182631492614746
    10. 'max' → logprob: -9.557631492614746

Token 2647: ' since' (ID: 3630)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0214622151106596
    2. '       ' → logprob: -4.021462440490723
    3. ' while' → logprob: -6.396462440490723
    4. 'time' → logprob: -7.146462440490723
    5. 'current' → logprob: -7.771462440490723
    6. '
' → logprob: -8.646462440490723
    7. 'max' → logprob: -9.396462440490723
    8. '   ' → logprob: -9.896462440490723
    9. 'for' → logprob: -10.021462440490723
    10. '#' → logprob: -10.271462440490723

Token 2648: ' max' (ID: 2999)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.008641282096505165
    2. ' arrived' → logprob: -6.258641242980957
    3. 'True' → logprob: -6.383641242980957
    4. 'cars' → logprob: -6.508641242980957
    5. 'car' → logprob: -6.883641242980957
    6. 'len' → logprob: -7.133641242980957
    7. 'self' → logprob: -8.008641242980957
    8. 'last' → logprob: -8.633641242980957
    9. 'while' → logprob: -8.758641242980957
    10. '       ' → logprob: -9.008641242980957

Token 2649: ' number' (ID: 2086)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.7578032612800598
    2. 'time' → logprob: -1.007803201675415
    3. 'self' → logprob: -2.382803201675415
    4. 'car' → logprob: -3.257803201675415
    5. ' self' → logprob: -4.757803440093994
    6. '   ' → logprob: -5.382803440093994
    7. ' time' → logprob: -5.382803440093994
    8. 'c' → logprob: -6.257803440093994
    9. '_' → logprob: -6.382803440093994
    10. 'cars' → logprob: -6.382803440093994

Token 2650: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.601884663105011
    2. '_' → logprob: -1.2268846035003662
    3. ' =' → logprob: -3.726884603500366
    4. 'of' → logprob: -3.726884603500366
    5. '#' → logprob: -3.851884603500366
    6. ':' → logprob: -4.101884841918945
    7. 'def' → logprob: -4.726884841918945
    8. ')' → logprob: -4.976884841918945
    9. '       ' → logprob: -5.101884841918945
    10. ' +=' → logprob: -5.226884841918945

Token 2651: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.10328248888254166
    2. 'car' → logprob: -2.8532824516296387
    3. ' cars' → logprob: -3.7282824516296387
    4. 'time' → logprob: -4.853282451629639
    5. '   ' → logprob: -6.478282451629639
    6. '       ' → logprob: -6.978282451629639
    7. ' car' → logprob: -7.353282451629639
    8. 'for' → logprob: -7.478282451629639
    9. 'minutes' → logprob: -7.853282451629639
    10. 'self' → logprob: -7.853282451629639

Token 2652: ' ' (ID: 220)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25452494621276855
    2. '<=' → logprob: -2.6295249462127686
    3. ' is' → logprob: -2.8795249462127686
    4. '=' → logprob: -3.7545249462127686
    5. ' <' → logprob: -4.129525184631348
    6. '+' → logprob: -4.504525184631348
    7. '       ' → logprob: -4.504525184631348
    8. ' =' → logprob: -4.879525184631348
    9. '   ' → logprob: -5.754525184631348
    10. ' +=' → logprob: -6.004525184631348

Token 2653: '100' (ID: 1353)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5260611176490784
    2. 'is' → logprob: -1.6510610580444336
    3. '<=' → logprob: -2.0260610580444336
    4. ' is' → logprob: -2.9010610580444336
    5. ' <=' → logprob: -4.776061058044434
    6. ' =' → logprob: -5.401061058044434
    7. '       ' → logprob: -5.526061058044434
    8. 'can' → logprob: -6.026061058044434
    9. '+' → logprob: -6.401061058044434
    10. '   ' → logprob: -6.526061058044434

Token 2654: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0138907432556152
    2. '       ' → logprob: -1.5138907432556152
    3. '
' → logprob: -1.6388907432556152
    4. ':' → logprob: -1.8888907432556152
    5. ',' → logprob: -4.013890743255615
    6. '   ' → logprob: -4.638890743255615
    7. '):
' → logprob: -4.763890743255615
    8. '+' → logprob: -4.763890743255615
    9. 'while' → logprob: -5.638890743255615
    10. ' and' → logprob: -5.638890743255615

Token 2655: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7929952144622803
    2. 'self' → logprob: -1.6679952144622803
    3. 'cars' → logprob: -1.6679952144622803
    4. ' self' → logprob: -3.7929952144622803
    5. ' max' → logprob: -3.7929952144622803
    6. 'each' → logprob: -4.167995452880859
    7. 'arrival' → logprob: -4.167995452880859
    8. '
' → logprob: -4.292995452880859
    9. 'car' → logprob: -4.542995452880859
    10. ' cars' → logprob: -4.542995452880859

Token 2656: ' parking' (ID: 14472)
  Prédit: 'parking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parking' → logprob: -0.5411345362663269
    2. 'park' → logprob: -1.1661345958709717
    3. ' parking' → logprob: -3.2911345958709717
    4. 'duration' → logprob: -4.291134357452393
    5. 't' → logprob: -4.416134357452393
    6. 'time' → logprob: -4.666134357452393
    7. 'car' → logprob: -4.791134357452393
    8. '   ' → logprob: -5.166134357452393
    9. 'arrival' → logprob: -5.666134357452393
    10. '```' → logprob: -6.166134357452393

Token 2657: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.24737539887428284
    2. '_duration' → logprob: -1.9973753690719604
    3. 'time' → logprob: -2.62237548828125
    4. 'duration' → logprob: -4.99737548828125
    5. ' time' → logprob: -6.74737548828125
    6. '       ' → logprob: -7.49737548828125
    7. '   ' → logprob: -7.62237548828125
    8. '_' → logprob: -7.87237548828125
    9. '```' → logprob: -7.99737548828125
    10. '
' → logprob: -8.37237548828125

Token 2658: ' ' (ID: 220)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.5048818588256836
    2. 'is' → logprob: -1.6298818588256836
    3. '<=' → logprob: -1.6298818588256836
    4. '+' → logprob: -2.0048818588256836
    5. ' <=' → logprob: -2.8798818588256836
    6. '=' → logprob: -3.0048818588256836
    7. '       ' → logprob: -3.5048818588256836
    8. 'can' → logprob: -4.004881858825684
    9. '10' → logprob: -4.129881858825684
    10. '   ' → logprob: -4.504881858825684

Token 2659: '120' (ID: 6106)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2542940676212311
    2. '=' → logprob: -2.1292941570281982
    3. '1' → logprob: -2.7542941570281982
    4. ' <=' → logprob: -3.5042941570281982
    5. '```' → logprob: -6.004293918609619
    6. '10' → logprob: -6.254293918609619
    7. '+' → logprob: -6.504293918609619
    8. ' =' → logprob: -7.504293918609619
    9. '
' → logprob: -7.504293918609619
    10. '0' → logprob: -7.879293918609619

Token 2660: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5807961821556091
    2. '
' → logprob: -1.455796241760254
    3. ':' → logprob: -2.455796241760254
    4. '       ' → logprob: -2.955796241760254
    5. '+' → logprob: -4.080796241760254
    6. ',' → logprob: -4.205796241760254
    7. '   ' → logprob: -4.955796241760254
    8. '):
' → logprob: -5.080796241760254
    9. 'while' → logprob: -5.455796241760254
    10. '=' → logprob: -5.955796241760254

Token 2661: ' it's' (ID: 4275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23242731392383575
    2. 'self' → logprob: -2.3574273586273193
    3. ' while' → logprob: -2.6074273586273193
    4. '
' → logprob: -4.10742712020874
    5. '       ' → logprob: -4.48242712020874
    6. ' self' → logprob: -5.35742712020874
    7. 'for' → logprob: -5.73242712020874
    8. 'time' → logprob: -7.23242712020874
    9. '#' → logprob: -7.23242712020874
    10. ' for' → logprob: -7.60742712020874

Token 2662: ' acceptable' (ID: 34028)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.091631531715393
    2. '100' → logprob: -2.0916314125061035
    3. '120' → logprob: -2.2166314125061035
    4. '```' → logprob: -2.2166314125061035
    5. '       ' → logprob: -2.4666314125061035
    6. ' max' → logprob: -2.9666314125061035
    7. 'self' → logprob: -3.3416314125061035
    8. '   ' → logprob: -3.3416314125061035
    9. 'possible' → logprob: -3.8416314125061035
    10. '
' → logprob: -4.4666314125061035

Token 2663: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03333755210042
    2. 'while' → logprob: -3.9083375930786133
    3. '
' → logprob: -5.033337593078613
    4. 'time' → logprob: -5.658337593078613
    5. '```' → logprob: -7.158337593078613
    6. 'for' → logprob: -7.533337593078613
    7. ' while' → logprob: -7.533337593078613
    8. '   ' → logprob: -8.158337593078613
    9. 'current' → logprob: -8.408337593078613
    10. 'next' → logprob: -9.408337593078613

Token 2664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5214242339134216
    2. '
' → logprob: -1.5214242935180664
    3. 'while' → logprob: -2.3964242935180664
    4. '```' → logprob: -2.5214242935180664
    5. 'time' → logprob: -5.021424293518066
    6. ' while' → logprob: -5.271424293518066
    7. '``' → logprob: -6.521424293518066
    8. '   ' → logprob: -7.021424293518066
    9. '        
' → logprob: -7.146424293518066
    10. 'current' → logprob: -7.646424293518066

Token 2665: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.334622859954834
    2. '       ' → logprob: -1.584622859954834
    3. '```' → logprob: -3.334622859954834
    4. '
' → logprob: -3.959622859954834
    5. 'for' → logprob: -4.959622859954834
    6. 'time' → logprob: -5.084622859954834
    7. ' while' → logprob: -5.709622859954834
    8. 'self' → logprob: -5.959622859954834
    9. '``' → logprob: -6.459622859954834
    10. '   ' → logprob: -6.584622859954834

Token 2666: ' len' (ID: 4631)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47411686182022095
    2. 'self' → logprob: -0.974116861820221
    3. '(self' → logprob: -10.474117279052734
    4. '           ' → logprob: -11.849117279052734
    5. '       ' → logprob: -13.724117279052734
    6. '	self' → logprob: -13.849117279052734
    7. '   ' → logprob: -14.599117279052734
    8. '0' → logprob: -15.099117279052734
    9. ' ' → logprob: -15.599117279052734
    10. 'Self' → logprob: -15.724117279052734

Token 2667: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001777960715116933
    2. 'self' → logprob: -9.000177383422852
    3. '(' → logprob: -10.125177383422852
    4. '(
' → logprob: -11.750177383422852
    5. ' self' → logprob: -13.125177383422852
    6. ' (' → logprob: -13.500177383422852
    7. '(output' → logprob: -14.125177383422852
    8. '([' → logprob: -14.625177383422852
    9. '(s' → logprob: -15.375177383422852
    10. '	self' → logprob: -15.375177383422852

Token 2668: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.0020847124978899956
    2. 'output' → logprob: -6.627084732055664
    3. '.wait' → logprob: -7.377084732055664
    4. '._' → logprob: -10.127084732055664
    5. '.' → logprob: -10.252084732055664
    6. '.sp' → logprob: -11.127084732055664
    7. '.arr' → logprob: -11.627084732055664
    8. ' .' → logprob: -12.002084732055664
    9. 'wait' → logprob: -12.002084732055664
    10. '.car' → logprob: -12.752084732055664

Token 2669: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.8908587662735954e-05
    2. '_orders' → logprob: -12.000019073486328
    3. ')' → logprob: -12.625019073486328
    4. '_' → logprob: -13.000019073486328
    5. '```' → logprob: -13.375019073486328
    6. '
' → logprob: -13.875019073486328
    7. '_output' → logprob: -14.125019073486328
    8. ' _' → logprob: -14.375019073486328
    9. 'order' → logprob: -14.500019073486328
    10. '(_' → logprob: -14.875019073486328

Token 2670: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08514014631509781
    2. '<' → logprob: -2.8351402282714844
    3. ' <' → logprob: -4.085140228271484
    4. ')<' → logprob: -5.210140228271484
    5. '<len' → logprob: -8.960140228271484
    6. '```' → logprob: -8.960140228271484
    7. ')!=' → logprob: -9.585140228271484
    8. '!=' → logprob: -10.460140228271484
    9. ' !=' → logprob: -10.460140228271484
    10. '   ' → logprob: -10.710140228271484

Token 2671: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1633923500776291
    2. '<' → logprob: -1.9133923053741455
    3. ')' → logprob: -6.788392543792725
    4. '<len' → logprob: -7.663392543792725
    5. ' <=' → logprob: -7.913392543792725
    6. ' !=' → logprob: -7.913392543792725
    7. '[' → logprob: -8.163392066955566
    8. '```' → logprob: -9.288392066955566
    9. '<=' → logprob: -9.413392066955566
    10. ' <
' → logprob: -9.663392066955566

Token 2672: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0007202956476248801
    2. ' total' → logprob: -7.250720500946045
    3. '       ' → logprob: -12.125720024108887
    4. '   ' → logprob: -12.625720024108887
    5. 'len' → logprob: -14.000720024108887
    6. '           ' → logprob: -14.500720024108887
    7. '
' → logprob: -15.875720024108887
    8. '(total' → logprob: -17.500720977783203
    9. '               ' → logprob: -18.125720977783203
    10. '	total' → logprob: -18.375720977783203

Token 2673: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.018580414354801178
    2. '_' → logprob: -4.518580436706543
    3. '_order' → logprob: -6.393580436706543
    4. '_time' → logprob: -6.393580436706543
    5. 's' → logprob: -7.018580436706543
    6. '_orders' → logprob: -7.143580436706543
    7. '   ' → logprob: -7.643580436706543
    8. '_car' → logprob: -8.018580436706543
    9. '       ' → logprob: -8.643580436706543
    10. '```' → logprob: -8.768580436706543

Token 2674: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.006498062051832676
    2. 'ar' → logprob: -5.256497859954834
    3. '_c' → logprob: -7.006497859954834
    4. '_' → logprob: -9.131498336791992
    5. '   ' → logprob: -9.506498336791992
    6. 'cars' → logprob: -9.506498336791992
    7. '
' → logprob: -10.256498336791992
    8. '```' → logprob: -11.006498336791992
    9. '_ar' → logprob: -12.006498336791992
    10. '       ' → logprob: -12.381498336791992

Token 2675: ':

' (ID: 1402)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18259736895561218
    2. ':' → logprob: -2.0575973987579346
    3. '       ' → logprob: -3.9325973987579346
    4. '           ' → logprob: -4.1825971603393555
    5. ' or' → logprob: -7.1825971603393555
    6. '[' → logprob: -7.3075971603393555
    7. ',' → logprob: -7.5575971603393555
    8. '   ' → logprob: -7.6825971603393555
    9. ' and' → logprob: -8.057597160339355
    10. '):
' → logprob: -8.307597160339355

Token 2676: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5979828834533691
    2. '       ' → logprob: -1.7229828834533691
    3. '   ' → logprob: -1.8479828834533691
    4. '
' → logprob: -2.472982883453369
    5. '```' → logprob: -4.847982883453369
    6. '    
' → logprob: -4.972982883453369
    7. '        
' → logprob: -5.097982883453369
    8. 'self' → logprob: -5.972982883453369
    9. '            
' → logprob: -6.097982883453369
    10. '\n' → logprob: -6.972982883453369

Token 2677: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6722428202629089
    2. '           ' → logprob: -1.2972428798675537
    3. '#' (adapté à ' #') → logprob: -1.5472428798675537
    4. 'while' → logprob: -6.047242641448975
    5. 'for' → logprob: -7.547242641448975
    6. '```' → logprob: -8.922243118286133
    7. ' if' → logprob: -9.047243118286133
    8. ' #' → logprob: -9.422243118286133
    9. '   ' → logprob: -10.172243118286133
    10. '
' → logprob: -11.297243118286133

Token 2678: ' Arrival' (ID: 151124)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6040520071983337
    2. '#' → logprob: -1.3540520668029785
    3. '           ' → logprob: -1.7290520668029785
    4. 'while' → logprob: -4.2290520668029785
    5. 'for' → logprob: -5.8540520668029785
    6. ' #' → logprob: -9.10405158996582
    7. ' if' → logprob: -9.35405158996582
    8. '   ' → logprob: -10.47905158996582
    9. '```' → logprob: -10.72905158996582
    10. '#if' → logprob: -10.97905158996582

Token 2679: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0906638652086258
    2. 'if' → logprob: -2.9656639099121094
    3. ' if' → logprob: -3.8406639099121094
    4. ' ==' → logprob: -5.090663909912109
    5. ':' → logprob: -6.340663909912109
    6. '==' → logprob: -6.465663909912109
    7. ' =' → logprob: -6.840663909912109
    8. '_time' → logprob: -7.340663909912109
    9. '            
' → logprob: -7.840663909912109
    10. ',' → logprob: -8.09066390991211

Token 2680: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.6426666378974915
    2. 'car' → logprob: -1.1426665782928467
    3. 'if' → logprob: -2.2676665782928467
    4. 'while' → logprob: -4.642666816711426
    5. 'any' → logprob: -4.642666816711426
    6. '           ' → logprob: -4.642666816711426
    7. ' cars' → logprob: -5.017666816711426
    8. 'new' → logprob: -5.392666816711426
    9. 'arr' → logprob: -5.892666816711426
    10. ' if' → logprob: -6.392666816711426

Token 2681: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7120579481124878
    2. 'if' → logprob: -0.8370579481124878
    3. 'while' → logprob: -3.0870580673217773
    4. ' if' → logprob: -3.5870580673217773
    5. 'for' → logprob: -7.087058067321777
    6. ' while' → logprob: -7.087058067321777
    7. '```' → logprob: -8.587058067321777
    8. ' ==' → logprob: -8.712058067321777
    9. '==' → logprob: -8.712058067321777
    10. ',' → logprob: -9.087058067321777

Token 2682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025794629473239183
    2. 'if' → logprob: -6.252579689025879
    3. ' if' → logprob: -7.877579689025879
    4. 'for' → logprob: -9.377579689025879
    5. ',' → logprob: -10.252579689025879
    6. ' at' → logprob: -10.377579689025879
    7. 'while' → logprob: -10.877579689025879
    8. '       ' → logprob: -11.127579689025879
    9. ' for' → logprob: -11.252579689025879
    10. ' ==' → logprob: -11.252579689025879

Token 2683: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06359124928712845
    2. '           ' → logprob: -2.938591241836548
    3. ' if' → logprob: -4.813591480255127
    4. 'while' → logprob: -7.563591480255127
    5. '```' → logprob: -11.688591003417969
    6. 'for' → logprob: -11.938591003417969
    7. '            
' → logprob: -12.063591003417969
    8. ' while' → logprob: -12.438591003417969
    9. '   ' → logprob: -12.813591003417969
    10. '       ' → logprob: -13.188591003417969

Token 2684: ' Cars' (ID: 41728)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1312558501958847
    2. 'while' → logprob: -2.131255865097046
    3. '           ' → logprob: -5.506255626678467
    4. ' if' → logprob: -9.006256103515625
    5. 'for' → logprob: -9.131256103515625
    6. ' while' → logprob: -11.006256103515625
    7. '   ' → logprob: -12.506256103515625
    8. '       ' → logprob: -12.756256103515625
    9. '```' → logprob: -13.256256103515625
    10. '#' → logprob: -15.131256103515625

Token 2685: ' arrive' (ID: 18338)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.013811469078064
    2. ' at' → logprob: -2.1388115882873535
    3. '_at' → logprob: -2.1388115882873535
    4. '           ' → logprob: -2.2638115882873535
    5. 'arr' → logprob: -2.6388115882873535
    6. 'at' → logprob: -3.1388115882873535
    7. 'if' → logprob: -3.5138115882873535
    8. ' if' → logprob: -3.7638115882873535
    9. '_idx' → logprob: -4.2638115882873535
    10. ' arriving' → logprob: -4.2638115882873535

Token 2686: ' exact' (ID: 6354)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6267596483230591
    2. 'at' → logprob: -1.501759648323059
    3. 'if' → logprob: -2.5017595291137695
    4. ' at' → logprob: -2.6267595291137695
    5. ' if' → logprob: -3.2517595291137695
    6. ' =' → logprob: -4.6267595291137695
    7. '_at' → logprob: -5.0017595291137695
    8. '=' → logprob: -5.1267595291137695
    9. 'now' → logprob: -5.6267595291137695
    10. 'and' → logprob: -5.8767595291137695

Token 2687: ' at' (ID: 540)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.006230113562196493
    2. '==' → logprob: -6.131229877471924
    3. ' at' → logprob: -6.256229877471924
    4. ' ==' → logprob: -6.506229877471924
    5. '           ' → logprob: -8.256230354309082
    6. ' and' → logprob: -9.256230354309082
    7. ' ' → logprob: -9.756230354309082
    8. ' if' → logprob: -10.131230354309082
    9. 'ely' → logprob: -10.881230354309082
    10. 'if' → logprob: -11.131230354309082

Token 2688: ' their' (ID: 1043)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08864331990480423
    2. ' self' → logprob: -2.7136433124542236
    3. 'car' → logprob: -4.463643550872803
    4. 'cars' → logprob: -5.213643550872803
    5. ' cars' → logprob: -6.963643550872803
    6. ' car' → logprob: -8.088643074035645
    7. '           ' → logprob: -8.838643074035645
    8. '(self' → logprob: -10.213643074035645
    9. '
' → logprob: -10.338643074035645
    10. '10' → logprob: -11.213643074035645

Token 2689: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.000527534110005945
    2. ' arrival' → logprob: -8.125527381896973
    3. 'arr' → logprob: -9.125527381896973
    4. '
' → logprob: -9.625527381896973
    5. '.arr' → logprob: -10.750527381896973
    6. '```' → logprob: -11.000527381896973
    7. 'car' → logprob: -11.875527381896973
    8. 'current' → logprob: -12.750527381896973
    9. '   ' → logprob: -13.125527381896973
    10. '`' → logprob: -14.000527381896973

Token 2690: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.07499847561120987
    2. 'time' → logprob: -2.699998378753662
    3. '           ' → logprob: -5.699998378753662
    4. ' time' → logprob: -6.949998378753662
    5. '```' → logprob: -7.574998378753662
    6. '_times' → logprob: -9.44999885559082
    7. 'times' → logprob: -9.57499885559082
    8. '       ' → logprob: -10.82499885559082
    9. '               ' → logprob: -10.94999885559082
    10. '   ' → logprob: -11.57499885559082

Token 2691: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009862331673502922
    2. 'while' → logprob: -4.759862422943115
    3. ' while' → logprob: -7.634862422943115
    4. 'for' → logprob: -7.884862422943115
    5. 'if' → logprob: -9.009861946105957
    6. ',' → logprob: -9.009861946105957
    7. ' for' → logprob: -9.634861946105957
    8. '
' → logprob: -10.384861946105957
    9. '            
' → logprob: -11.259861946105957
    10. ' if' → logprob: -11.384861946105957

Token 2692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000748398422729224
    2. 'if' → logprob: -8.500748634338379
    3. '```' → logprob: -8.500748634338379
    4. 'while' → logprob: -9.000748634338379
    5. '
' → logprob: -9.250748634338379
    6. ' if' → logprob: -10.125748634338379
    7. ',' → logprob: -10.250748634338379
    8. ' while' → logprob: -11.125748634338379
    9. '            
' → logprob: -11.500748634338379
    10. 'for' → logprob: -12.000748634338379

Token 2693: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07496629655361176
    2. 'if' → logprob: -2.6999661922454834
    3. 'while' (adapté à ' while') → logprob: -5.9499664306640625
    4. ' if' → logprob: -6.0749664306640625
    5. ' while' → logprob: -10.074966430664062
    6. 'for' → logprob: -10.574966430664062
    7. '            
' → logprob: -10.949966430664062
    8. '
' → logprob: -11.949966430664062
    9. '```' → logprob: -12.074966430664062
    10. '          ' → logprob: -12.949966430664062

Token 2694: ' arrived' (ID: 18157)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0008326167589984834
    2. ' arrived' → logprob: -7.500832557678223
    3. '           ' → logprob: -8.375832557678223
    4. '   ' → logprob: -11.125832557678223
    5. 'arrival' → logprob: -11.875832557678223
    6. '(arr' → logprob: -12.125832557678223
    7. '       ' → logprob: -12.250832557678223
    8. '          ' → logprob: -12.500832557678223
    9. ' ' → logprob: -13.000832557678223
    10. '         ' → logprob: -13.250832557678223

Token 2695: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00021307668066583574
    2. 'idx' → logprob: -8.750212669372559
    3. '<' → logprob: -10.250212669372559
    4. ' <' → logprob: -11.625212669372559
    5. '   ' → logprob: -12.625212669372559
    6. '<=' → logprob: -13.375212669372559
    7. 'Idx' → logprob: -13.875212669372559
    8. '
' → logprob: -14.250212669372559
    9. '```' → logprob: -15.125212669372559
    10. ' ' → logprob: -15.375212669372559

Token 2696: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5458583235740662
    2. ' <' → logprob: -1.045858383178711
    3. '<len' → logprob: -2.670858383178711
    4. '<size' → logprob: -10.170858383178711
    5. '<num' → logprob: -11.545858383178711
    6. '<n' → logprob: -12.795858383178711
    7. '<count' → logprob: -13.045858383178711
    8. '<int' → logprob: -13.170858383178711
    9. '<const' → logprob: -13.295858383178711
    10. ' ' → logprob: -13.295858383178711

Token 2697: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1003584936261177
    2. 'len' → logprob: -2.350358486175537
    3. ' total' → logprob: -8.850358963012695
    4. ' len' → logprob: -11.975358963012695
    5. 'cars' → logprob: -13.850358963012695
    6. 'car' → logprob: -15.350358963012695
    7. '   ' → logprob: -15.475358963012695
    8. '
' → logprob: -15.725358963012695
    9. '(total' → logprob: -15.975358963012695
    10. '```' → logprob: -16.350358963012695

Token 2698: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2916703224182129
    2. 'cars' → logprob: -1.416670322418213
    3. 'car' → logprob: -5.666670322418213
    4. 'len' → logprob: -5.791670322418213
    5. 'c' → logprob: -6.041670322418213
    6. '   ' → logprob: -8.041669845581055
    7. '=len' → logprob: -8.666669845581055
    8. '```' → logprob: -8.791669845581055
    9. '=' → logprob: -9.041669845581055
    10. '-c' → logprob: -9.041669845581055

Token 2699: 'ars' (ID: 1904)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.3697758615016937
    2. '```' → logprob: -2.7447757720947266
    3. '_' → logprob: -3.2447757720947266
    4. 's' → logprob: -3.2447757720947266
    5. '_idx' → logprob: -3.2447757720947266
    6. 'x' → logprob: -3.4947757720947266
    7. '_len' → logprob: -3.8697757720947266
    8. '_ids' → logprob: -4.494775772094727
    9. 'len' → logprob: -4.619775772094727
    10. 'car' → logprob: -4.619775772094727

Token 2700: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47426897287368774
    2. 'and' → logprob: -0.9742689728736877
    3. '           ' → logprob: -8.724268913269043
    4. '               ' → logprob: -11.099268913269043
    5. '	and' → logprob: -12.224268913269043
    6. '   ' → logprob: -13.099268913269043
    7. '       ' → logprob: -13.474268913269043
    8. '          ' → logprob: -13.599268913269043
    9. '                   ' → logprob: -13.849268913269043
    10. ':
' → logprob: -14.724268913269043

Token 2701: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -7.40998875699006e-05
    2. ' cars' → logprob: -9.87507438659668
    3. 'self' → logprob: -11.37507438659668
    4. 'car' → logprob: -11.62507438659668
    5. '   ' → logprob: -13.62507438659668
    6. '           ' → logprob: -14.37507438659668
    7. '       ' → logprob: -15.62507438659668
    8. '
' → logprob: -16.00007438659668
    9. 'cats' → logprob: -16.87507438659668
    10. 'c' → logprob: -17.12507438659668

Token 2702: '[arr' (ID: 151991)
  Prédit: '[arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[arr' → logprob: -8.745069499127567e-05
    2. '[' → logprob: -9.50008773803711
    3. '```' → logprob: -12.25008773803711
    4. ')[' → logprob: -13.00008773803711
    5. '[
' → logprob: -13.25008773803711
    6. '][' → logprob: -13.37508773803711
    7. '           ' → logprob: -14.37508773803711
    8. '<arr' → logprob: -14.75008773803711
    9. '[arg' → logprob: -15.00008773803711
    10. '
' → logprob: -15.75008773803711

Token 2703: 'ived' (ID: 3276)
  Prédit: 'ived'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ived' → logprob: -0.0007848527166061103
    2. '_idx' → logprob: -7.625784873962402
    3. 'ed' → logprob: -9.125784873962402
    4. 'ved' → logprob: -9.875784873962402
    5. 'ieved' → logprob: -10.125784873962402
    6. '           ' → logprob: -10.375784873962402
    7. '       ' → logprob: -10.875784873962402
    8. 'aved' → logprob: -11.750784873962402
    9. '```' → logprob: -12.125784873962402
    10. 'ival' → logprob: -12.375784873962402

Token 2704: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -3.690834273584187e-05
    2. 'idx' → logprob: -11.12503719329834
    3. 'Idx' → logprob: -12.25003719329834
    4. '__' → logprob: -12.37503719329834
    5. '   ' → logprob: -13.12503719329834
    6. '_id' → logprob: -13.62503719329834
    7. '       ' → logprob: -13.62503719329834
    8. 'ive' → logprob: -13.87503719329834
    9. '_arr' → logprob: -13.87503719329834
    10. '```' → logprob: -14.25003719329834

Token 2705: '].' (ID: 1651)
  Prédit: '.arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arr' → logprob: -0.032407116144895554
    2. '].' → logprob: -4.032407283782959
    3. '.car' → logprob: -4.657407283782959
    4. ' .' → logprob: -6.032407283782959
    5. '.ai' → logprob: -7.907407283782959
    6. '           ' → logprob: -7.907407283782959
    7. ').' → logprob: -8.1574068069458
    8. '.' → logprob: -8.2824068069458
    9. '.user' → logprob: -9.1574068069458
    10. '.at' → logprob: -9.4074068069458

Token 2706: 'arrival' (ID: 183251)
  Prédit: 'arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -1.4736459888808895e-05
    2. ' arrival' → logprob: -11.375014305114746
    3. '.arr' → logprob: -13.000014305114746
    4. 'arr' → logprob: -14.500014305114746
    5. '   ' → logprob: -15.875014305114746
    6. '
' → logprob: -16.125015258789062
    7. '```' → logprob: -16.500015258789062
    8. '.' → logprob: -17.000015258789062
    9. '.car' → logprob: -17.625015258789062
    10. ' ' → logprob: -17.750015258789062

Token 2707: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.5776860184123507e-06
    2. 'time' → logprob: -14.00000286102295
    3. 'Time' → logprob: -14.37500286102295
    4. '```' → logprob: -14.87500286102295
    5. '   ' → logprob: -15.12500286102295
    6. '._' → logprob: -15.50000286102295
    7. '_' → logprob: -16.875001907348633
    8. 't' → logprob: -17.375001907348633
    9. '       ' → logprob: -17.500001907348633
    10. '           ' → logprob: -17.625001907348633

Token 2708: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05649362877011299
    2. '<=' → logprob: -3.3064935207366943
    3. ' ==' → logprob: -4.056493759155273
    4. ' <=' → logprob: -7.056493759155273
    5. '==
' → logprob: -9.306493759155273
    6. ']==' → logprob: -11.681493759155273
    7. '=' → logprob: -12.681493759155273
    8. ')==' → logprob: -12.931493759155273
    9. '===' → logprob: -13.556493759155273
    10. '()==' → logprob: -13.556493759155273

Token 2709: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005939012626186013
    2. ' self' → logprob: -7.500594139099121
    3. '           ' → logprob: -10.125594139099121
    4. '               ' → logprob: -14.875594139099121
    5. '   ' → logprob: -15.750594139099121
    6. '                   ' → logprob: -16.000593185424805
    7. '(self' → logprob: -16.125593185424805
    8. '=self' → logprob: -16.625593185424805
    9. '	self' → logprob: -16.875593185424805
    10. '
' → logprob: -17.000593185424805

Token 2710: '.current' (ID: 8357)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.036774300038814545
    2. '.current' → logprob: -3.7867743968963623
    3. ' current' → logprob: -4.786774158477783
    4. 'self' → logprob: -5.286774158477783
    5. '           ' → logprob: -10.911774635314941
    6. ' self' → logprob: -11.161774635314941
    7. '   ' → logprob: -13.036774635314941
    8. '_current' → logprob: -13.411774635314941
    9. '	current' → logprob: -13.536774635314941
    10. '       ' → logprob: -14.536774635314941

Token 2711: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.015305552864447e-05
    2. 'time' → logprob: -10.500060081481934
    3. '   ' → logprob: -11.250060081481934
    4. '_' → logprob: -12.375060081481934
    5. '+' → logprob: -12.625060081481934
    6. ' _' → logprob: -13.125060081481934
    7. '       ' → logprob: -13.500060081481934
    8. 'Time' → logprob: -13.625060081481934
    9. 'self' → logprob: -14.000060081481934
    10. '           ' → logprob: -14.250060081481934

Token 2712: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.008170200511813164
    2. ':' → logprob: -5.258170127868652
    3. '):
' → logprob: -6.258170127868652
    4. '           ' → logprob: -7.633170127868652
    5. '               ' → logprob: -7.633170127868652
    6. ':

' → logprob: -11.383170127868652
    7. ' and' → logprob: -11.633170127868652
    8. '():
' → logprob: -12.133170127868652
    9. '):' → logprob: -12.258170127868652
    10. ']:
' → logprob: -12.383170127868652

Token 2713: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031091354321688414
    2. '```' → logprob: -9.250310897827148
    3. 'self' → logprob: -9.625310897827148
    4. 'car' → logprob: -9.875310897827148
    5. '           ' → logprob: -10.375310897827148
    6. ':
' → logprob: -11.375310897827148
    7. '
' → logprob: -11.625310897827148
    8. ',' → logprob: -11.750310897827148
    9. '                
' → logprob: -11.875310897827148
    10. ' self' → logprob: -11.875310897827148

Token 2714: ' car' (ID: 1669)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' (adapté à ' car') → logprob: -0.7667632102966309
    2. 'self' → logprob: -0.8917632102966309
    3. '               ' → logprob: -2.266763210296631
    4. '                   ' → logprob: -4.266763210296631
    5. ' self' → logprob: -5.516763210296631
    6. ' car' → logprob: -5.766763210296631
    7. '           ' → logprob: -8.141763687133789
    8. '```' → logprob: -8.516763687133789
    9. '	car' → logprob: -9.141763687133789
    10. '   ' → logprob: -10.766763687133789

Token 2715: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25217944383621216
    2. '=' → logprob: -1.5021793842315674
    3. '           ' → logprob: -8.877179145812988
    4. '               ' → logprob: -9.877179145812988
    5. '                   ' → logprob: -10.377179145812988
    6. '   ' → logprob: -11.627179145812988
    7. ')' → logprob: -12.127179145812988
    8. '=
' → logprob: -13.002179145812988
    9. '       ' → logprob: -13.502179145812988
    10. ' =
' → logprob: -13.627179145812988

Token 2716: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.10029508918523788
    2. ' cars' → logprob: -2.350295066833496
    3. 'car' → logprob: -9.350295066833496
    4. 'c' → logprob: -14.725295066833496
    5. ' car' → logprob: -15.475295066833496
    6. 'Cars' → logprob: -15.600295066833496
    7. '           ' → logprob: -15.725295066833496
    8. 'cards' → logprob: -15.850295066833496
    9. '   ' → logprob: -16.350296020507812
    10. '               ' → logprob: -16.475296020507812

Token 2717: '[arr' (ID: 151991)
  Prédit: '[arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[arr' → logprob: -0.02346186153590679
    2. '(arr' → logprob: -4.523461818695068
    3. '               ' → logprob: -5.023461818695068
    4. '[' → logprob: -5.398461818695068
    5. '           ' → logprob: -8.023462295532227
    6. '[c' → logprob: -8.273462295532227
    7. '                
' → logprob: -9.273462295532227
    8. '(car' → logprob: -9.398462295532227
    9. '```' → logprob: -9.648462295532227
    10. '(c' → logprob: -9.648462295532227

Token 2718: 'ived' (ID: 3276)
  Prédit: 'ived'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ived' → logprob: -0.0026567510794848204
    2. '_idx' → logprob: -6.377656936645508
    3. 'ved' → logprob: -7.752656936645508
    4. 'ed' → logprob: -8.752656936645508
    5. 'ieved' → logprob: -9.502656936645508
    6. '           ' → logprob: -9.752656936645508
    7. '       ' → logprob: -10.002656936645508
    8. 'aved' → logprob: -10.002656936645508
    9. '               ' → logprob: -10.752656936645508
    10. '_index' → logprob: -10.877656936645508

Token 2719: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -8.41129949549213e-05
    2. 'idx' → logprob: -9.875083923339844
    3. ']' → logprob: -12.000083923339844
    4. '[' → logprob: -12.250083923339844
    5. 'Idx' → logprob: -12.375083923339844
    6. ']
' → logprob: -12.875083923339844
    7. '[
' → logprob: -13.000083923339844
    8. '
' → logprob: -13.250083923339844
    9. '[idx' → logprob: -13.250083923339844
    10. '   ' → logprob: -13.375083923339844

Token 2720: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17363367974758148
    2. ')
' → logprob: -2.048633575439453
    3. ']
' → logprob: -3.673633575439453
    4. ')' → logprob: -5.798633575439453
    5. ']' → logprob: -7.173633575439453
    6. '                
' → logprob: -7.548633575439453
    7. '<|end|>' → logprob: -8.798633575439453
    8. '                   ' → logprob: -8.923633575439453
    9. '           ' → logprob: -9.173633575439453
    10. '
' → logprob: -9.548633575439453

Token 2721: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00044544681441038847
    2. '                   ' → logprob: -8.250445365905762
    3. 'self' → logprob: -9.375445365905762
    4. '           ' → logprob: -10.250445365905762
    5. '                
' → logprob: -10.500445365905762
    6. ' self' → logprob: -11.375445365905762
    7. '```' → logprob: -11.375445365905762
    8. '
' → logprob: -12.125445365905762
    9. '   ' → logprob: -13.000445365905762
    10. '                    
' → logprob: -13.500445365905762

Token 2722: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0298173725605011
    2. '               ' → logprob: -3.5298173427581787
    3. ' self' → logprob: -9.779817581176758
    4. 'car' → logprob: -11.654817581176758
    5. '           ' → logprob: -14.279817581176758
    6. '   ' → logprob: -14.529817581176758
    7. '                   ' → logprob: -15.279817581176758
    8. '	self' → logprob: -15.904817581176758
    9. '(self' → logprob: -16.654817581176758
    10. '```' → logprob: -16.904817581176758

Token 2723: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.3822154111694545e-05
    2. 'park' → logprob: -10.500043869018555
    3. ' .' → logprob: -12.000043869018555
    4. '   ' → logprob: -12.750043869018555
    5. '.car' → logprob: -13.375043869018555
    6. ').' → logprob: -13.875043869018555
    7. '```' → logprob: -14.125043869018555
    8. '..' → logprob: -14.250043869018555
    9. '._' → logprob: -15.000043869018555
    10. '>.' → logprob: -15.375043869018555

Token 2724: 'park' (ID: 11174)
  Prédit: 'park'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'park' → logprob: -4.6087021473795176e-05
    2. 'car' → logprob: -11.250045776367188
    3. 'wait' → logprob: -12.000045776367188
    4. 'arr' → logprob: -12.125045776367188
    5. 'parking' → logprob: -12.500045776367188
    6. 'can' → logprob: -13.250045776367188
    7. 'pack' → logprob: -13.250045776367188
    8. '
' → logprob: -13.500045776367188
    9. 'assign' → logprob: -13.625045776367188
    10. ' park' → logprob: -13.625045776367188

Token 2725: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.000192812061868608
    2. '(car' → logprob: -9.250192642211914
    3. 'car' → logprob: -9.375192642211914
    4. '_' → logprob: -11.750192642211914
    5. '	car' → logprob: -13.625192642211914
    6. 'Car' → logprob: -14.125192642211914
    7. '_c' → logprob: -14.875192642211914
    8. '<Car' → logprob: -14.875192642211914
    9. '_position' → logprob: -15.375192642211914
    10. '_
' → logprob: -15.500192642211914

Token 2726: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -0.007170924451202154
    2. 'car' → logprob: -5.507171154022217
    3. '(' → logprob: -6.257171154022217
    4. '(
' → logprob: -6.757171154022217
    5. '	car' → logprob: -12.757170677185059
    6. ' car' → logprob: -12.882170677185059
    7. '(c' → logprob: -13.757170677185059
    8. ')' → logprob: -14.507170677185059
    9. '()' → logprob: -14.632170677185059
    10. '(

' → logprob: -14.882170677185059

Token 2727: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04401861131191254
    2. ')' → logprob: -3.669018507003784
    3. '               ' → logprob: -4.044018745422363
    4. '           ' → logprob: -11.169018745422363
    5. ')
' → logprob: -11.794018745422363
    6. '                   ' → logprob: -12.169018745422363
    7. ' )
' → logprob: -12.919018745422363
    8. ')

' → logprob: -13.169018745422363
    9. '       ' → logprob: -14.294018745422363
    10. '())
' → logprob: -14.294018745422363

Token 2728: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012684474932029843
    2. '           ' → logprob: -6.75126838684082
    3. '
' → logprob: -9.75126838684082
    4. '                   ' → logprob: -10.50126838684082
    5. '                
' → logprob: -12.50126838684082
    6. '       ' → logprob: -12.75126838684082
    7. '```' → logprob: -12.87626838684082
    8. '   ' → logprob: -13.75126838684082
    9. 'arr' → logprob: -14.62626838684082
    10. '            
' → logprob: -14.75126838684082

Token 2729: ' arrived' (ID: 18157)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6936359405517578
    2. 'arr' → logprob: -0.6936359405517578
    3. '           ' → logprob: -7.693635940551758
    4. '                   ' → logprob: -11.443635940551758
    5. ' arrived' → logprob: -11.568635940551758
    6. '   ' → logprob: -11.693635940551758
    7. 'arrival' → logprob: -13.318635940551758
    8. 'att' → logprob: -13.818635940551758
    9. '              ' → logprob: -14.693635940551758
    10. '       ' → logprob: -14.943635940551758

Token 2730: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.001037214300595224
    2. 'd' → logprob: -7.001037120819092
    3. 'ed' → logprob: -9.00103759765625
    4. '_index' → logprob: -14.25103759765625
    5. 'ved' → logprob: -14.25103759765625
    6. 'ged' → logprob: -14.62603759765625
    7. 'idx' → logprob: -15.75103759765625
    8. '_id' → logprob: -15.87603759765625
    9. '_IDX' → logprob: -16.12603759765625
    10. 'Idx' → logprob: -16.37603759765625

Token 2731: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008632768876850605
    2. ' +=' → logprob: -4.758632659912109
    3. '+' → logprob: -11.00863265991211
    4. '=' → logprob: -14.00863265991211
    5. ']+=' → logprob: -14.63363265991211
    6. '           ' → logprob: -15.75863265991211
    7. '+="' → logprob: -16.50863265991211
    8. ')' → logprob: -16.75863265991211
    9. '+='' → logprob: -17.38363265991211
    10. '               ' → logprob: -17.88363265991211

Token 2732: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -21.375
    5. '           ' → logprob: -21.625
    6. '
' → logprob: -21.75
    7. '１' → logprob: -22.125
    8. '       ' → logprob: -23.625
    9. '۱' → logprob: -23.875
    10. '+' → logprob: -24.125

Token 2733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -20.25
    4. '１' → logprob: -20.875
    5. '   ' → logprob: -22.0
    6. '۱' → logprob: -22.5
    7. '
' → logprob: -22.5
    8. '१' → logprob: -24.0625
    9. '0' → logprob: -24.1875
    10. '১' → logprob: -24.1875

Token 2734: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11421434581279755
    2. 'self' → logprob: -2.7392144203186035
    3. '
' → logprob: -3.2392144203186035
    4. ' self' → logprob: -6.4892144203186035
    5. '       ' → logprob: -6.7392144203186035
    6. '```' → logprob: -7.2392144203186035
    7. '            
' → logprob: -7.8642144203186035
    8. '   ' → logprob: -8.864213943481445
    9. '               ' → logprob: -10.489213943481445
    10. '<|end|>' → logprob: -10.864213943481445

Token 2735: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5437754392623901
    2. 'self' → logprob: -1.1687754392623901
    3. '           ' → logprob: -2.6687755584716797
    4. '```' → logprob: -4.04377555847168
    5. '       ' → logprob: -4.54377555847168
    6. '   ' → logprob: -4.91877555847168
    7. ' self' → logprob: -6.41877555847168
    8. '    
' → logprob: -7.41877555847168
    9. '            
' → logprob: -7.54377555847168
    10. '        
' → logprob: -7.66877555847168

Token 2736: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01263713650405407
    2. '           ' → logprob: -4.387637138366699
    3. ' self' → logprob: -9.5126371383667
    4. 'if' → logprob: -10.8876371383667
    5. '
' → logprob: -11.5126371383667
    6. '#' (adapté à ' #') → logprob: -11.7626371383667
    7. '```' → logprob: -12.0126371383667
    8. 'while' → logprob: -12.2626371383667
    9. '            
' → logprob: -12.8876371383667
    10. '       ' → logprob: -13.2626371383667

Token 2737: ' depart' (ID: 14182)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011915886716451496
    2. '           ' → logprob: -9.25011920928955
    3. ' self' → logprob: -10.75011920928955
    4. '#' → logprob: -14.12511920928955
    5. '
' → logprob: -14.50011920928955
    6. 'while' → logprob: -16.000118255615234
    7. '       ' → logprob: -16.250118255615234
    8. 'if' → logprob: -16.875118255615234
    9. '   ' → logprob: -17.250118255615234
    10. '            
' → logprob: -17.250118255615234

Token 2738: ' cars' (ID: 13653)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4155735969543457
    2. 's' → logprob: -2.4155735969543457
    3. 'ed' → logprob: -2.6655735969543457
    4. 'ures' → logprob: -3.1655735969543457
    5. 'cars' → logprob: -3.2905735969543457
    6. '       ' → logprob: -3.4155735969543457
    7. 'self' → logprob: -4.165573596954346
    8. '   ' → logprob: -4.290573596954346
    9. 'car' → logprob: -4.415573596954346
    10. 'ure' → logprob: -4.790573596954346

Token 2739: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007994010113179684
    2. '
' → logprob: -5.382994174957275
    3. '       ' → logprob: -7.007994174957275
    4. '()' → logprob: -7.507994174957275
    5. 'self' → logprob: -7.882994174957275
    6. '()
' → logprob: -7.882994174957275
    7. ',' → logprob: -8.132993698120117
    8. 's' → logprob: -9.132993698120117
    9. '_count' → logprob: -9.132993698120117
    10. '=' → logprob: -9.257993698120117

Token 2740: ' park' (ID: 11796)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001328572048805654
    2. 'tick' → logprob: -7.376328468322754
    3. ' self' → logprob: -7.501328468322754
    4. '
' → logprob: -8.876328468322754
    5. '           ' → logprob: -12.501328468322754
    6. '       ' → logprob: -13.251328468322754
    7. ' tick' → logprob: -14.126328468322754
    8. '```' → logprob: -14.376328468322754
    9. '#' → logprob: -14.751328468322754
    10. '   ' → logprob: -15.126328468322754

Token 2741: ' waiting' (ID: 12028)
  Prédit: '_car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.2982153296470642
    2. 'car' → logprob: -2.048215389251709
    3. 'cars' → logprob: -2.298215389251709
    4. '_c' → logprob: -4.548215389251709
    5. 'self' → logprob: -5.173215389251709
    6. 'ing' → logprob: -6.173215389251709
    7. '
' → logprob: -6.298215389251709
    8. ' cars' → logprob: -6.298215389251709
    9. '       ' → logprob: -6.673215389251709
    10. 'waiting' → logprob: -7.173215389251709

Token 2742: ' at' (ID: 540)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.2224661260843277
    2. 'queue' → logprob: -2.222466230392456
    3. '_queue' → logprob: -2.722466230392456
    4. '_c' → logprob: -4.347465991973877
    5. 'queues' → logprob: -5.847465991973877
    6. 'car' → logprob: -5.972465991973877
    7. ' cars' → logprob: -6.347465991973877
    8. 'self' → logprob: -6.347465991973877
    9. '       ' → logprob: -7.097465991973877
    10. '
' → logprob: -7.347465991973877

Token 2743: ' this' (ID: 495)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6126813888549805
    2. 'current' → logprob: -0.8626813888549805
    3. 'the' → logprob: -4.4876813888549805
    4. 'this' → logprob: -4.8626813888549805
    5. 'car' → logprob: -5.4876813888549805
    6. 'cars' → logprob: -6.3626813888549805
    7. '(self' → logprob: -6.3626813888549805
    8. 'waiting' → logprob: -6.6126813888549805
    9. 'next' → logprob: -6.7376813888549805
    10. ' current' → logprob: -6.7376813888549805

Token 2744: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.34941473603248596
    2. '
' → logprob: -2.474414825439453
    3. '_time' → logprob: -2.474414825439453
    4. 'current' → logprob: -3.099414825439453
    5. 'self' → logprob: -3.474414825439453
    6. '       ' → logprob: -4.724414825439453
    7. ' time' → logprob: -4.724414825439453
    8. '```' → logprob: -4.974414825439453
    9. '.current' → logprob: -5.349414825439453
    10. '           ' → logprob: -5.474414825439453

Token 2745: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3905694782733917
    2. 'self' → logprob: -2.1405694484710693
    3. '           ' → logprob: -2.1405694484710693
    4. '()
' → logprob: -3.2655694484710693
    5. '
' → logprob: -3.7655694484710693
    6. '()' → logprob: -3.7655694484710693
    7. ' self' → logprob: -6.765569686889648
    8. '(self' → logprob: -6.765569686889648
    9. '```' → logprob: -7.765569686889648
    10. ',' → logprob: -8.640569686889648

Token 2746: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04521404951810837
    2. '           ' → logprob: -3.9202139377593994
    3. 'self' → logprob: -4.2952141761779785
    4. '
' → logprob: -4.6702141761779785
    5. ' self' → logprob: -7.1702141761779785
    6. '```' → logprob: -7.7952141761779785
    7. '   ' → logprob: -9.92021369934082
    8. '        
' → logprob: -10.04521369934082
    9. '(self' → logprob: -10.92021369934082
    10. '`
' → logprob: -11.17021369934082

Token 2747: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5864576697349548
    2. '       ' → logprob: -0.8364576697349548
    3. ' self' → logprob: -4.7114577293396
    4. '           ' → logprob: -6.5864577293396
    5. '
' → logprob: -9.961457252502441
    6. '   ' → logprob: -11.336457252502441
    7. '```' → logprob: -11.336457252502441
    8. ' ' → logprob: -11.836457252502441
    9. '	self' → logprob: -12.711457252502441
    10. '               ' → logprob: -12.836457252502441

Token 2748: '.tick' (ID: 87028)
  Prédit: '.tick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tick' → logprob: -3.869639476761222e-05
    2. 'tick' → logprob: -10.250039100646973
    3. '.' → logprob: -13.500039100646973
    4. '.process' → logprob: -14.375039100646973
    5. '   ' → logprob: -14.500039100646973
    6. ' .' → logprob: -15.125039100646973
    7. ' tick' → logprob: -15.750039100646973
    8. '.ticket' → logprob: -16.125038146972656
    9. '       ' → logprob: -16.375038146972656
    10. '```' → logprob: -16.500038146972656

Token 2749: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01306117046624422
    2. 'self' → logprob: -5.013061046600342
    3. '
' → logprob: -5.888061046600342
    4. '()
' → logprob: -6.138061046600342
    5. '            
' → logprob: -7.388061046600342
    6. '(self' → logprob: -8.5130615234375
    7. '()' → logprob: -8.6380615234375
    8. ' self' → logprob: -9.0130615234375
    9. '       ' → logprob: -9.8880615234375
    10. '#' → logprob: -10.1380615234375

Token 2750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004647284280508757
    2. '
' → logprob: -5.504647254943848
    3. 'self' → logprob: -8.004647254943848
    4. '```' → logprob: -8.754647254943848
    5. '            
' → logprob: -10.379647254943848
    6. '       ' → logprob: -11.379647254943848
    7. '`
' → logprob: -11.629647254943848
    8. '`' → logprob: -11.879647254943848
    9. '\' → logprob: -12.879647254943848
    10. ' self' → logprob: -13.254647254943848

Token 2751: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.038493312895298004
    2. '           ' → logprob: -3.2884933948516846
    3. '
' → logprob: -8.038493156433105
    4. '```' → logprob: -9.413493156433105
    5. ' self' → logprob: -10.413493156433105
    6. '   ' → logprob: -11.413493156433105
    7. '       ' → logprob: -12.788493156433105
    8. '            
' → logprob: -13.413493156433105
    9. '``' → logprob: -14.288493156433105
    10. '`' → logprob: -14.663493156433105

Token 2752: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.029894080013036728
    2. 'current' → logprob: -3.5298941135406494
    3. '   ' → logprob: -10.02989387512207
    4. '
' → logprob: -10.40489387512207
    5. ' current' → logprob: -11.02989387512207
    6. '_current' → logprob: -11.15489387512207
    7. '.' → logprob: -11.27989387512207
    8. 'self' → logprob: -11.40489387512207
    9. '.
' → logprob: -12.65489387512207
    10. '	current' → logprob: -12.90489387512207

Token 2753: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.125001907348633
    3. 'time' → logprob: -15.125001907348633
    4. '+=' → logprob: -15.625001907348633
    5. '+' → logprob: -15.875001907348633
    6. ' +=' → logprob: -16.875001907348633
    7. ' _' → logprob: -17.250001907348633
    8. '_
' → logprob: -17.875001907348633
    9. 'Time' → logprob: -18.000001907348633
    10. '++' → logprob: -18.000001907348633

Token 2754: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00020389800192788243
    2. ' +=' → logprob: -8.500204086303711
    3. '+' → logprob: -15.125204086303711
    4. '=' → logprob: -16.75020408630371
    5. ']+=' → logprob: -17.75020408630371
    6. '+='' → logprob: -18.62520408630371
    7. '+=(' → logprob: -18.87520408630371
    8. '+="' → logprob: -19.25020408630371
    9. '+
' → logprob: -20.37520408630371
    10. '   ' → logprob: -22.00020408630371

Token 2755: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '   ' → logprob: -23.5
    4. '```' → logprob: -23.75
    5. '１' → logprob: -25.5
    6. '
' → logprob: -25.75
    7. '`' → logprob: -27.0
    8. '10' → logprob: -27.75
    9. '﻿' → logprob: -28.25
    10. ' ' → logprob: -28.25

Token 2756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -21.0
    3. '１' → logprob: -25.25
    4. '   ' → logprob: -25.625
    5. '```' → logprob: -26.0
    6. '
' → logprob: -27.25
    7. '`' → logprob: -28.0
    8. '10' → logprob: -28.25
    9. '۱' → logprob: -28.75
    10. '01' → logprob: -29.125

Token 2757: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2758: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2759: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06078155338764191
    2. 'main' → logprob: -3.310781478881836
    3. ' parse' → logprob: -4.310781478881836
    4. ' solve' → logprob: -5.560781478881836
    5. ' run' → logprob: -6.685781478881836
    6. 'parse' → logprob: -7.060781478881836
    7. '__' → logprob: -7.310781478881836
    8. 'simulate' → logprob: -7.310781478881836
    9. ' simulate' → logprob: -7.560781478881836
    10. 'solve' → logprob: -7.810781478881836

Token 2760: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.4831898808479309
    2. '_' → logprob: -1.9831898212432861
    3. '_line' → logprob: -2.483189821243286
    4. '_c' → logprob: -3.608189821243286
    5. '(
' → logprob: -3.608189821243286
    6. '_car' → logprob: -3.733189821243286
    7. 'def' → logprob: -3.858189821243286
    8. '_code' → logprob: -4.358190059661865
    9. '(input' → logprob: -4.858190059661865
    10. '(' → logprob: -5.233190059661865

Token 2761: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11383698135614395
    2. '():
' → logprob: -2.2388370037078857
    3. '()' → logprob: -7.238836765289307
    4. '(input' → logprob: -9.238837242126465
    5. '_input' → logprob: -10.113837242126465
    6. '_' → logprob: -10.738837242126465
    7. '(' → logprob: -10.863837242126465
    8. '():
' → logprob: -10.988837242126465
    9. ' ():' → logprob: -11.113837242126465
    10. '():

' → logprob: -11.113837242126465

Token 2762: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.611541211605072
    2. '():
' → logprob: -0.861541211605072
    3. '()' → logprob: -3.361541271209717
    4. '()->' → logprob: -8.986540794372559
    5. '(lines' → logprob: -8.986540794372559
    6. '(num' → logprob: -11.611540794372559
    7. '(input' → logprob: -12.236540794372559
    8. '(n' → logprob: -12.486540794372559
    9. '():
' → logprob: -12.486540794372559
    10. ' ():' → logprob: -12.611540794372559

Token 2763: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.004328641574829817
    2. 'Tuple' → logprob: -5.504328727722168
    3. 'int' → logprob: -8.754328727722168
    4. '(List' → logprob: -9.629328727722168
    5. '(int' → logprob: -11.504328727722168
    6. 'tuple' → logprob: -11.754328727722168
    7. '[List' → logprob: -12.004328727722168
    8. ' List' → logprob: -14.379328727722168
    9. 'list' → logprob: -14.379328727722168
    10. 'None' → logprob: -14.504328727722168

Token 2764: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003051385283470154
    2. 'Car' → logprob: -6.753051280975342
    3. '[List' → logprob: -6.753051280975342
    4. '[int' → logprob: -7.253051280975342
    5. '[str' → logprob: -13.2530517578125
    6. '[
' → logprob: -13.2530517578125
    7. 'car' → logprob: -15.0030517578125
    8. '<Car' → logprob: -15.1280517578125
    9. 'int' → logprob: -17.3780517578125
    10. '```' → logprob: -17.5030517578125

Token 2765: 'Tuple' (ID: 40048)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -1.3856492842023727e-06
    2. 'Tuple' → logprob: -13.875000953674316
    3. 'str' → logprob: -15.500000953674316
    4. 'int' → logprob: -15.625000953674316
    5. ' Car' → logprob: -16.750001907348633
    6. 'car' → logprob: -17.750001907348633
    7. '<Car' → logprob: -19.125001907348633
    8. 'tuple' → logprob: -19.375001907348633
    9. '(Car' → logprob: -19.500001907348633
    10. '
' → logprob: -20.875001907348633

Token 2766: '[int' (ID: 40124)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013530643656849861
    2. '[int' → logprob: -4.388530731201172
    3. '(int' → logprob: -7.013530731201172
    4. '   ' → logprob: -10.388530731201172
    5. 'List' → logprob: -10.888530731201172
    6. ']' → logprob: -11.388530731201172
    7. 'Tuple' → logprob: -11.388530731201172
    8. ']int' → logprob: -11.513530731201172
    9. 'Car' → logprob: -12.013530731201172
    10. 'str' → logprob: -12.263530731201172

Token 2767: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011436345055699348
    2. ',int' → logprob: -4.511436462402344
    3. '[int' → logprob: -8.636436462402344
    4. ']]:
' → logprob: -9.136436462402344
    5. 'int' → logprob: -9.886436462402344
    6. ',List' → logprob: -10.636436462402344
    7. ' ,' → logprob: -12.136436462402344
    8. ',bool' → logprob: -12.136436462402344
    9. ',float' → logprob: -12.386436462402344
    10. '[' → logprob: -12.511436462402344

Token 2768: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.273621405242011e-05
    2. 'List' → logprob: -11.500032424926758
    3. ' int' → logprob: -11.750032424926758
    4. '[int' → logprob: -12.250032424926758
    5. '...' → logprob: -12.500032424926758
    6. '   ' → logprob: -12.875032424926758
    7. 'Optional' → logprob: -13.625032424926758
    8. '
' → logprob: -14.375032424926758
    9. '```' → logprob: -15.250032424926758
    10. ']int' → logprob: -15.500032424926758

Token 2769: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3957641124725342
    2. ']]:
' → logprob: -1.1457641124725342
    3. ']]' → logprob: -5.395764350891113
    4. ',int' → logprob: -5.520764350891113
    5. ',List' → logprob: -9.520764350891113
    6. ']' → logprob: -9.520764350891113
    7. ']int' → logprob: -10.770764350891113
    8. ']],' → logprob: -11.020764350891113
    9. 'int' → logprob: -11.145764350891113
    10. '   ' → logprob: -11.145764350891113

Token 2770: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.2020991056924686e-05
    2. 'List' → logprob: -10.625032424926758
    3. '[int' → logprob: -13.125032424926758
    4. 'Optional' → logprob: -13.500032424926758
    5. ' int' → logprob: -13.500032424926758
    6. '   ' → logprob: -14.000032424926758
    7. '```' → logprob: -15.000032424926758
    8. '
' → logprob: -15.000032424926758
    9. '...' → logprob: -15.250032424926758
    10. 'str' → logprob: -15.875032424926758

Token 2771: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018167035654187202
    2. '[int' → logprob: -4.018167018890381
    3. '[
' → logprob: -11.143167495727539
    4. ']]' → logprob: -14.018167495727539
    5. 'int' → logprob: -14.393167495727539
    6. 'Tuple' → logprob: -14.768167495727539
    7. '[List' → logprob: -15.268167495727539
    8. ']' → logprob: -15.518167495727539
    9. ']]:
' → logprob: -15.643167495727539
    10. '[Int' → logprob: -16.26816749572754

Token 2772: ']]' (ID: 8928)
  Prédit: ']]:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.0072789802215993404
    2. ']]' → logprob: -5.257278919219971
    3. '[int' → logprob: -6.257278919219971
    4. '[' → logprob: -9.257279396057129
    5. ']):
' → logprob: -12.007279396057129
    6. ']' → logprob: -12.132279396057129
    7. ',' → logprob: -12.257279396057129
    8. '[List' → logprob: -12.632279396057129
    9. '[str' → logprob: -13.132279396057129
    10. ']]]' → logprob: -13.132279396057129

Token 2773: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5762070417404175
    2. '():
' → logprob: -0.8262070417404175
    3. '():
' → logprob: -8.451207160949707
    4. '()' → logprob: -9.951207160949707
    5. ':' → logprob: -13.326207160949707
    6. '():

' → logprob: -13.326207160949707
    7. ' ():' → logprob: -13.576207160949707
    8. '(' → logprob: -14.326207160949707
    9. ':
' → logprob: -15.201207160949707
    10. '   ' → logprob: -15.576207160949707

Token 2774: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004565530922263861
    2. 'n' → logprob: -5.879565715789795
    3. '```' → logprob: -6.504565715789795
    4. '       ' → logprob: -9.379565238952637
    5. ' n' → logprob: -10.129565238952637
    6. 'lines' → logprob: -10.254565238952637
    7. '...' → logprob: -10.879565238952637
    8. 'input' → logprob: -11.004565238952637
    9. 'return' → logprob: -11.629565238952637
    10. 'import' → logprob: -11.629565238952637

Token 2775: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031811442226171494
    2. 'import' (adapté à ' import') → logprob: -4.156811237335205
    3. '   ' → logprob: -4.781811237335205
    4. ' n' → logprob: -5.656811237335205
    5. 'input' → logprob: -6.656811237335205
    6. 'lines' → logprob: -7.281811237335205
    7. 'num' → logprob: -7.906811237335205
    8. '```' → logprob: -7.906811237335205
    9. 'inputs' → logprob: -8.406811714172363
    10. 'N' → logprob: -8.656811714172363

Token 2776: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.054500666621607e-06
    2. ' sys' → logprob: -12.75000286102295
    3. '=sys' → logprob: -16.125003814697266
    4. 'io' → logprob: -18.875003814697266
    5. '(sys' → logprob: -19.250003814697266
    6. '	sys' → logprob: -20.250003814697266
    7. 'stdin' → logprob: -20.500003814697266
    8. 'built' → logprob: -20.875003814697266
    9. 'os' → logprob: -21.375003814697266
    10. '_sys' → logprob: -21.500003814697266

Token 2777: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1486349254846573
    2. 'data' → logprob: -2.898634910583496
    3. 'input' → logprob: -3.523634910583496
    4. 'lines' → logprob: -3.773634910583496
    5. '```' → logprob: -4.148634910583496
    6. '
' → logprob: -5.023634910583496
    7. 'n' → logprob: -5.648634910583496
    8. ' lines' → logprob: -5.898634910583496
    9. '``' → logprob: -7.148634910583496
    10. 'line' → logprob: -8.273634910583496

Token 2778: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31875619292259216
    2. 'data' → logprob: -1.9437562227249146
    3. 'lines' → logprob: -2.443756103515625
    4. 'input' → logprob: -3.443756103515625
    5. '
' → logprob: -4.943756103515625
    6. ' lines' → logprob: -6.193756103515625
    7. '```' → logprob: -7.193756103515625
    8. '	lines' → logprob: -7.568756103515625
    9. 'for' → logprob: -9.068756103515625
    10. 'line' → logprob: -9.318756103515625

Token 2779: ' dataset' (ID: 20830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3852168917655945
    2. 'n' → logprob: -1.5102169513702393
    3. 'lines' → logprob: -3.1352169513702393
    4. 'data' → logprob: -3.3852169513702393
    5. 'input' → logprob: -4.13521671295166
    6. ' n' → logprob: -6.26021671295166
    7. 'N' → logprob: -6.38521671295166
    8. ' lines' → logprob: -7.01021671295166
    9. '```' → logprob: -8.13521671295166
    10. 'num' → logprob: -8.88521671295166

Token 2780: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9376062154769897
    2. 's' → logprob: -1.0626062154769897
    3. '=' → logprob: -2.3126063346862793
    4. '[
' → logprob: -3.4376063346862793
    5. '_' → logprob: -3.5626063346862793
    6. '   ' → logprob: -3.9376063346862793
    7. '_lines' → logprob: -4.187606334686279
    8. '[' → logprob: -4.187606334686279
    9. '[]' → logprob: -4.687606334686279
    10. '.readline' → logprob: -5.187606334686279

Token 2781: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.38703230023384094
    2. '[]' → logprob: -1.1370322704315186
    3. 'sys' → logprob: -9.137032508850098
    4. '[]

' → logprob: -10.012032508850098
    5. ' []
' → logprob: -12.637032508850098
    6. ' []' → logprob: -12.762032508850098
    7. '[' → logprob: -13.512032508850098
    8. '   ' → logprob: -14.512032508850098
    9. '[]"' → logprob: -15.137032508850098
    10. 'deque' → logprob: -15.387032508850098

Token 2782: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06670676171779633
    2. 'for' → logprob: -3.441706657409668
    3. '```' → logprob: -3.816706657409668
    4. 'line' → logprob: -5.191706657409668
    5. '
' → logprob: -6.316706657409668
    6. 'lines' → logprob: -6.816706657409668
    7. 'while' → logprob: -7.066706657409668
    8. ' for' → logprob: -7.066706657409668
    9. '``' → logprob: -8.816706657409668
    10. ' line' → logprob: -9.816706657409668

Token 2783: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3788658380508423
    2. 'line' → logprob: -1.8788658380508423
    3. '   ' → logprob: -2.1288657188415527
    4. 'while' → logprob: -3.6288657188415527
    5. 'lines' (adapté à ' lines') → logprob: -4.878865718841553
    6. 'n' → logprob: -5.753865718841553
    7. '```' → logprob: -5.753865718841553
    8. ' for' → logprob: -6.253865718841553
    9. '
' → logprob: -7.878865718841553
    10. '``' → logprob: -8.503866195678711

Token 2784: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01126120239496231
    2. ' =' → logprob: -4.886260986328125
    3. '()' → logprob: -6.011260986328125
    4. '   ' → logprob: -7.511260986328125
    5. '()
' → logprob: -8.886260986328125
    6. '=line' → logprob: -9.136260986328125
    7. '().' → logprob: -9.511260986328125
    8. '=
' → logprob: -9.511260986328125
    9. '.readline' → logprob: -9.886260986328125
    10. '=[]
' → logprob: -10.386260986328125

Token 2785: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.013954048044979572
    2. '[]
' → logprob: -5.013954162597656
    3. '[]' → logprob: -5.763954162597656
    4. 'iter' → logprob: -6.013954162597656
    5. '[' → logprob: -7.013954162597656
    6. ' sys' → logprob: -7.888954162597656
    7. 'list' → logprob: -9.388954162597656
    8. ' iter' → logprob: -9.638954162597656
    9. '(sys' → logprob: -10.013954162597656
    10. 'deque' → logprob: -10.263954162597656

Token 2786: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01280180737376213
    2. 'stdin' → logprob: -4.387801647186279
    3. '.' → logprob: -8.762802124023438
    4. '.stdout' → logprob: -10.137802124023438
    5. ' stdin' → logprob: -10.262802124023438
    6. '(stdin' → logprob: -10.512802124023438
    7. 'import' → logprob: -11.887802124023438
    8. '   ' → logprob: -12.012802124023438
    9. '.argv' → logprob: -12.137802124023438
    10. '.readline' → logprob: -12.637802124023438

Token 2787: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.024440823122859
    2. '.readlines' → logprob: -3.8994407653808594
    3. '.' → logprob: -6.399440765380859
    4. '_lines' → logprob: -6.899440765380859
    5. '.
' → logprob: -8.02444076538086
    6. '```' → logprob: -8.14944076538086
    7. '
' → logprob: -8.89944076538086
    8. 'read' → logprob: -9.14944076538086
    9. '_read' → logprob: -9.39944076538086
    10. ' =' → logprob: -9.89944076538086

Token 2788: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002755174064077437
    2. '()' → logprob: -9.125275611877441
    3. '()
' → logprob: -9.750275611877441
    4. '_lines' → logprob: -9.875275611877441
    5. 'lines' → logprob: -10.500275611877441
    6. '.split' → logprob: -11.375275611877441
    7. 'split' → logprob: -11.750275611877441
    8. '   ' → logprob: -12.750275611877441
    9. '```' → logprob: -12.875275611877441
    10. '().
' → logprob: -13.125275611877441

Token 2789: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1604507714509964
    2. 'strip' → logprob: -1.91045081615448
    3. 'lines' → logprob: -8.66045093536377
    4. 'decode' → logprob: -10.91045093536377
    5. ' split' → logprob: -11.53545093536377
    6. '(split' → logprob: -11.53545093536377
    7. 'rstrip' → logprob: -11.53545093536377
    8. 'read' → logprob: -12.41045093536377
    9. '```' → logprob: -14.16045093536377
    10. '(strip' → logprob: -15.41045093536377

Token 2790: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005628037615679204
    2. '()' → logprob: -7.62556266784668
    3. '('\' → logprob: -9.75056266784668
    4. '()
' → logprob: -11.37556266784668
    5. '.split' → logprob: -12.87556266784668
    6. 'split' → logprob: -13.87556266784668
    7. '()\' → logprob: -13.87556266784668
    8. '(' → logprob: -15.37556266784668
    9. '()[' → logprob: -16.75056266784668
    10. '().
' → logprob: -17.00056266784668

Token 2791: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. '(split' → logprob: -15.000000953674316
    3. ' split' → logprob: -15.625000953674316
    4. 'strip' → logprob: -18.375
    5. 'lines' → logprob: -19.625
    6. 'spl' → logprob: -19.75
    7. '.split' → logprob: -20.125
    8. '```' → logprob: -20.5
    9. 'rstrip' → logprob: -20.5
    10. 'replace' → logprob: -20.625

Token 2792: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.015730848535895348
    2. 'lines' → logprob: -4.265730857849121
    3. '("\' → logprob: -6.640730857849121
    4. '()' → logprob: -8.765730857849121
    5. ''\' → logprob: -9.265730857849121
    6. '()
' → logprob: -12.015730857849121
    7. '()\' → logprob: -13.140730857849121
    8. '"\' → logprob: -14.140730857849121
    9. '('' → logprob: -15.265730857849121
    10. '(' → logprob: -15.390730857849121

Token 2793: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.676292231422849e-05
    2. '\n' → logprob: -11.000017166137695
    3. '
' → logprob: -16.875017166137695
    4. ' n' → logprob: -18.625017166137695
    5. 'ndef' → logprob: -20.625017166137695
    6. 'newline' → logprob: -20.750017166137695
    7. '```' → logprob: -22.000017166137695
    8. '	n' → logprob: -22.500017166137695
    9. 'r' → logprob: -22.875017166137695
    10. '\' → logprob: -22.875017166137695

Token 2794: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.650997519493103
    2. ')
' → logprob: -1.025997519493103
    3. '   ' → logprob: -2.2759976387023926
    4. ')' → logprob: -4.525997638702393
    5. '')' → logprob: -5.150997638702393
    6. 'def' → logprob: -8.525997161865234
    7. '")
' → logprob: -9.525997161865234
    8. '```' → logprob: -9.775997161865234
    9. ')')
' → logprob: -9.775997161865234
    10. '
' → logprob: -9.900997161865234

Token 2795: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3245006203651428
    2. 'i' → logprob: -1.324500560760498
    3. 'idx' → logprob: -5.074500560760498
    4. '```' → logprob: -5.949500560760498
    5. 'n' → logprob: -6.574500560760498
    6. ' i' → logprob: -8.074501037597656
    7. 'pos' → logprob: -8.324501037597656
    8. 'for' → logprob: -9.449501037597656
    9. 'index' → logprob: -9.574501037597656
    10. 'line' → logprob: -9.699501037597656

Token 2796: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04913114756345749
    2. '   ' → logprob: -3.299131155014038
    3. 'idx' (adapté à ' idx') → logprob: -4.799130916595459
    4. 'n' → logprob: -6.049130916595459
    5. '```' → logprob: -8.049131393432617
    6. 'line' → logprob: -10.549131393432617
    7. 'index' → logprob: -10.549131393432617
    8. 'pos' → logprob: -10.799131393432617
    9. ' i' → logprob: -10.924131393432617
    10. 'num' → logprob: -11.549131393432617

Token 2797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014514746144413948
    2. ' =' → logprob: -4.264514923095703
    3. '+=' → logprob: -8.514514923095703
    4. '   ' → logprob: -9.139514923095703
    5. '```' → logprob: -11.139514923095703
    6. ' +=' → logprob: -11.264514923095703
    7. '=
' → logprob: -11.889514923095703
    8. '==' → logprob: -14.139514923095703
    9. '       ' → logprob: -14.264514923095703
    10. '    ' → logprob: -14.264514923095703

Token 2798: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015240294160321355
    2. '1' → logprob: -6.501523971557617
    3. ' ' → logprob: -10.751523971557617
    4. '   ' → logprob: -15.501523971557617
    5. '2' → logprob: -16.501523971557617
    6. '=' → logprob: -18.501523971557617
    7. '```' → logprob: -18.751523971557617
    8. '
' → logprob: -18.876523971557617
    9. '[' → logprob: -19.001523971557617
    10. '(' → logprob: -19.126523971557617

Token 2799: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.625004768371582
    3. '1' → logprob: -13.625004768371582
    4. '=' → logprob: -15.750004768371582
    5. '[' → logprob: -17.625003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '<|end|>' → logprob: -18.000003814697266
    8. '2' → logprob: -18.500003814697266
    9. '```' → logprob: -18.750003814697266
    10. '۰' → logprob: -19.000003814697266

Token 2800: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.44908976554870605
    2. '   ' → logprob: -1.199089765548706
    3. 'n' → logprob: -2.949089765548706
    4. '```' → logprob: -5.074090003967285
    5. ' while' → logprob: -6.949090003967285
    6. '
' → logprob: -8.074090003967285
    7. ' n' → logprob: -8.074090003967285
    8. 'for' → logprob: -10.574090003967285
    9. '``' → logprob: -10.574090003967285
    10. '	while' → logprob: -11.199090003967285

Token 2801: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08717634528875351
    2. 'n' → logprob: -3.0871763229370117
    3. '   ' → logprob: -3.3371763229370117
    4. 't' → logprob: -7.087176322937012
    5. '```' → logprob: -7.337176322937012
    6. ' while' → logprob: -8.087176322937012
    7. 'T' → logprob: -8.087176322937012
    8. 'datasets' → logprob: -9.712176322937012
    9. '
' → logprob: -10.087176322937012
    10. 'num' → logprob: -10.337176322937012

Token 2802: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.013727137818932533
    2. 'n' → logprob: -4.513727188110352
    3. '   ' → logprob: -6.013727188110352
    4. '```' → logprob: -8.638727188110352
    5. ' while' → logprob: -10.263727188110352
    6. '
' → logprob: -11.888727188110352
    7. '``' → logprob: -12.763727188110352
    8. 't' → logprob: -12.763727188110352
    9. 'T' → logprob: -13.138727188110352
    10. 'N' → logprob: -13.388727188110352

Token 2803: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0004948906716890633
    2. 'lines' → logprob: -8.125494956970215
    3. ' idx' → logprob: -8.750494956970215
    4. 'len' → logprob: -10.250494956970215
    5. '   ' → logprob: -13.375494956970215
    6. 'True' → logprob: -13.750494956970215
    7. '
' → logprob: -13.875494956970215
    8. '	idx' → logprob: -14.375494956970215
    9. ' ' → logprob: -14.875494956970215
    10. ' lines' → logprob: -15.500494956970215

Token 2804: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5310775637626648
    2. '<len' → logprob: -1.0310776233673096
    3. ' <' → logprob: -3.1560776233673096
    4. '+' → logprob: -6.1560773849487305
    5. '<n' → logprob: -6.1560773849487305
    6. '```' → logprob: -6.5310773849487305
    7. '<=' → logprob: -7.1560773849487305
    8. '<int' → logprob: -7.4060773849487305
    9. '()<' → logprob: -7.6560773849487305
    10. '<size' → logprob: -7.6560773849487305

Token 2805: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.45848218582978e-06
    2. ' len' → logprob: -13.00000286102295
    3. 'lines' → logprob: -16.625001907348633
    4. '(len' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.375001907348633
    6. 'int' → logprob: -18.375001907348633
    7. 'idx' → logprob: -18.750001907348633
    8. '	len' → logprob: -19.250001907348633
    9. '
' → logprob: -19.375001907348633
    10. ',len' → logprob: -19.625001907348633

Token 2806: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.008737127296626568
    2. '(lines' → logprob: -4.758737087249756
    3. ' lines' → logprob: -9.008737564086914
    4. '	lines' → logprob: -15.508737564086914
    5. '.lines' → logprob: -18.133737564086914
    6. '_lines' → logprob: -18.508737564086914
    7. 'line' → logprob: -19.383737564086914
    8. '-lines' → logprob: -19.883737564086914
    9. '```' → logprob: -20.633737564086914
    10. '
' → logprob: -20.883737564086914

Token 2807: '):
' (ID: 1883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6763009428977966
    2. ':
' → logprob: -1.1763010025024414
    3. '   ' → logprob: -2.8013010025024414
    4. ':' → logprob: -2.9263010025024414
    5. ' and' → logprob: -2.9263010025024414
    6. 'and' → logprob: -4.801301002502441
    7. '):
' → logprob: -5.551301002502441
    8. '```' → logprob: -6.676301002502441
    9. ',' → logprob: -7.176301002502441
    10. ')' → logprob: -8.676301002502441

Token 2808: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2679051160812378
    2. '```' → logprob: -2.1429052352905273
    3. 'n' → logprob: -2.5179052352905273
    4. 'line' → logprob: -4.142905235290527
    5. 'if' → logprob: -4.267905235290527
    6. '       ' → logprob: -6.017905235290527
    7. ' n' → logprob: -6.267905235290527
    8. 'num' → logprob: -6.892905235290527
    9. ' if' → logprob: -7.392905235290527
    10. '``' → logprob: -8.642905235290527

Token 2809: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23059691488742828
    2. 'line' → logprob: -2.1055970191955566
    3. 'if' (adapté à ' if') → logprob: -3.2305970191955566
    4. '   ' → logprob: -3.7305970191955566
    5. 'num' → logprob: -4.730597019195557
    6. '```' → logprob: -5.480597019195557
    7. '       ' → logprob: -6.105597019195557
    8. 'count' → logprob: -6.105597019195557
    9. ' n' → logprob: -6.730597019195557
    10. 'N' → logprob: -6.980597019195557

Token 2810: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.047044217586517334
    2. 'not' → logprob: -3.297044277191162
    3. ' lines' → logprob: -5.422044277191162
    4. ' not' → logprob: -5.422044277191162
    5. '   ' → logprob: -9.297043800354004
    6. 'len' → logprob: -10.922043800354004
    7. '(lines' → logprob: -11.672043800354004
    8. 'line' → logprob: -12.547043800354004
    9. 'int' → logprob: -13.672043800354004
    10. '	lines' → logprob: -13.922043800354004

Token 2811: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.286852345103398e-05
    2. '```' → logprob: -10.375042915344238
    3. '[' → logprob: -12.375042915344238
    4. '[int' → logprob: -13.500042915344238
    5. '   ' → logprob: -13.625042915344238
    6. '[index' → logprob: -13.750042915344238
    7. 'idx' → logprob: -14.000042915344238
    8. '[
' → logprob: -14.375042915344238
    9. '[token' → logprob: -15.000042915344238
    10. '[ind' → logprob: -15.125042915344238

Token 2812: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.8896343111991882
    2. '.startswith' → logprob: -1.139634370803833
    3. ' ==' → logprob: -2.264634370803833
    4. '==' → logprob: -2.264634370803833
    5. '```' → logprob: -3.389634370803833
    6. '().' → logprob: -4.264634132385254
    7. '.endswith' → logprob: -6.014634132385254
    8. ']==' → logprob: -6.139634132385254
    9. '       ' → logprob: -6.389634132385254
    10. '[' → logprob: -6.889634132385254

Token 2813: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.009025190025568008
    2. '==' → logprob: -5.0090250968933105
    3. '.strip' → logprob: -6.8840250968933105
    4. '```' → logprob: -7.7590250968933105
    5. 'startswith' → logprob: -7.7590250968933105
    6. 'isdigit' → logprob: -8.009025573730469
    7. ' ==' → logprob: -9.634025573730469
    8. '(strip' → logprob: -12.259025573730469
    9. '_strip' → logprob: -12.634025573730469
    10. '``' → logprob: -12.759025573730469

Token 2814: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.08690831065177917
    2. '()' → logprob: -2.5869083404541016
    3. '==' → logprob: -4.836908340454102
    4. '():
' → logprob: -11.086908340454102
    5. '():' → logprob: -11.336908340454102
    6. ' ==' → logprob: -11.336908340454102
    7. '()=="' → logprob: -11.961908340454102
    8. '()!=' → logprob: -12.711908340454102
    9. '```' → logprob: -13.211908340454102
    10. ']==' → logprob: -13.336908340454102

Token 2815: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008468599058687687
    2. ' ==' → logprob: -5.0084686279296875
    3. '()==' → logprob: -6.6334686279296875
    4. '```' → logprob: -8.508468627929688
    5. '.startswith' → logprob: -9.508468627929688
    6. '==
' → logprob: -9.633468627929688
    7. '()' → logprob: -10.633468627929688
    8. '===' → logprob: -11.258468627929688
    9. '=='' → logprob: -11.633468627929688
    10. '       ' → logprob: -11.758468627929688

Token 2816: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6114478707313538
    2. ''' → logprob: -1.111447811126709
    3. '"' → logprob: -2.736447811126709
    4. '"":' → logprob: -3.236447811126709
    5. '""' → logprob: -3.736447811126709
    6. ''#' → logprob: -8.861448287963867
    7. '0' → logprob: -9.986448287963867
    8. ' '':
' → logprob: -9.986448287963867
    9. '"#' → logprob: -10.486448287963867
    10. ' "":
' → logprob: -10.611448287963867

Token 2817: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018288150895386934
    2. '       ' → logprob: -7.251828670501709
    3. '```' → logprob: -7.626828670501709
    4. 'idx' → logprob: -8.501829147338867
    5. 'if' → logprob: -8.876829147338867
    6. ':
' → logprob: -9.251829147338867
    7. 'break' → logprob: -9.501829147338867
    8. '               ' → logprob: -10.126829147338867
    9. ':' → logprob: -10.626829147338867
    10. '   ' → logprob: -11.501829147338867

Token 2818: ' idx' (ID: 14016)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06499215215444565
    2. 'idx' (adapté à ' idx') → logprob: -2.8149921894073486
    3. '       ' → logprob: -6.0649919509887695
    4. '```' → logprob: -7.5649919509887695
    5. 'break' → logprob: -9.31499195098877
    6. '               ' → logprob: -9.93999195098877
    7. ' idx' → logprob: -11.06499195098877
    8. '   ' → logprob: -11.18999195098877
    9. '``' → logprob: -13.43999195098877
    10. '
' → logprob: -13.56499195098877

Token 2819: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0017105208244174719
    2. ' +=' → logprob: -6.751710414886475
    3. '           ' → logprob: -8.626710891723633
    4. '=' → logprob: -8.876710891723633
    5. '+' → logprob: -9.751710891723633
    6. '==' → logprob: -10.001710891723633
    7. '       ' → logprob: -10.001710891723633
    8. ']+=' → logprob: -10.626710891723633
    9. '```' → logprob: -11.251710891723633
    10. 'idx' → logprob: -11.626710891723633

Token 2820: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -15.375000953674316
    4. '           ' → logprob: -16.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '+' → logprob: -18.000001907348633
    8. '       ' → logprob: -19.000001907348633
    9. 'continue' → logprob: -19.000001907348633
    10. '``' → logprob: -20.875001907348633

Token 2821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -16.625
    4. 'continue' → logprob: -17.625
    5. '```' → logprob: -18.625
    6. '+' → logprob: -18.875
    7. '0' → logprob: -19.375
    8. '   ' → logprob: -19.5
    9. '2' → logprob: -19.75
    10. '۱' → logprob: -21.25

Token 2822: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019219681853428483
    2. '       ' → logprob: -6.376922130584717
    3. 'continue' → logprob: -9.376921653747559
    4. '```' → logprob: -10.001921653747559
    5. '               ' → logprob: -10.126921653747559
    6. '	       ' → logprob: -11.376921653747559
    7. '   ' → logprob: -11.376921653747559
    8. '		' → logprob: -11.751921653747559
    9. '{
' → logprob: -12.501921653747559
    10. ' continue' → logprob: -12.876921653747559

Token 2823: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007057761307805777
    2. '       ' → logprob: -5.7570576667785645
    3. 'continue' → logprob: -5.8820576667785645
    4. '```' → logprob: -7.3820576667785645
    5. '               ' → logprob: -8.632058143615723
    6. '		' → logprob: -9.382058143615723
    7. ' continue' → logprob: -10.007058143615723
    8. '	continue' → logprob: -10.132058143615723
    9. '   ' → logprob: -10.507058143615723
    10. '{
' → logprob: -10.507058143615723

Token 2824: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.38730934262275696
    2. '           ' → logprob: -1.1373093128204346
    3. ' continue' → logprob: -7.887309551239014
    4. '       ' → logprob: -10.637309074401855
    5. '	continue' → logprob: -11.262309074401855
    6. '               ' → logprob: -11.637309074401855
    7. '		' → logprob: -12.262309074401855
    8. '```' → logprob: -12.262309074401855
    9. '
' → logprob: -13.262309074401855
    10. 'contin' → logprob: -13.512309074401855

Token 2825: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020483380183577538
    2. 'if' → logprob: -4.145483493804932
    3. '```' → logprob: -6.145483493804932
    4. ' if' → logprob: -6.395483493804932
    5. '           ' → logprob: -7.895483493804932
    6. '   ' → logprob: -9.270483016967773
    7. '{
' → logprob: -10.145483016967773
    8. '
' → logprob: -11.020483016967773
    9. '	' → logprob: -11.270483016967773
    10. '​' → logprob: -11.770483016967773

Token 2826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28054434061050415
    2. 'if' → logprob: -1.6555442810058594
    3. '```' → logprob: -3.0305442810058594
    4. ' if' → logprob: -5.530544281005859
    5. '   ' → logprob: -8.03054428100586
    6. '           ' → logprob: -8.03054428100586
    7. 'line' → logprob: -8.90554428100586
    8. '	' → logprob: -9.40554428100586
    9. '``' → logprob: -9.78054428100586
    10. 'i' → logprob: -9.90554428100586

Token 2827: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03036646917462349
    2. 'num' → logprob: -4.65536642074585
    3. 'm' (adapté à ' m') → logprob: -5.03036642074585
    4. '       ' → logprob: -5.28036642074585
    5. 'parts' → logprob: -5.53036642074585
    6. 'N' → logprob: -6.28036642074585
    7. 'count' → logprob: -7.40536642074585
    8. 'if' → logprob: -7.78036642074585
    9. '```' → logprob: -7.90536642074585
    10. 't' → logprob: -7.90536642074585

Token 2828: '_n' (ID: 2170)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2618640661239624
    2. ',' → logprob: -2.136864185333252
    3. ' =' → logprob: -2.386864185333252
    4. '<|end|>' → logprob: -4.386864185333252
    5. '<|end|>' → logprob: -6.386864185333252
    6. ')' → logprob: -6.386864185333252
    7. '==' → logprob: -7.011864185333252
    8. '=
' → logprob: -7.261864185333252
    9. '[' → logprob: -7.761864185333252
    10. '.' → logprob: -8.011863708496094

Token 2829: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5803570747375488
    2. ' =' → logprob: -0.8303570747375488
    3. ',' → logprob: -5.705357074737549
    4. '   ' → logprob: -7.955357074737549
    5. '[idx' → logprob: -8.33035659790039
    6. ')' → logprob: -9.33035659790039
    7. '       ' → logprob: -9.45535659790039
    8. '=
' → logprob: -9.45535659790039
    9. '=int' → logprob: -9.58035659790039
    10. '=line' → logprob: -10.45535659790039

Token 2830: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00978867057710886
    2. 'list' → logprob: -4.759788513183594
    3. ' lines' → logprob: -6.759788513183594
    4. 'line' → logprob: -12.259788513183594
    5. ' list' → logprob: -12.259788513183594
    6. '(lines' → logprob: -12.884788513183594
    7. 'int' → logprob: -14.134788513183594
    8. '	lines' → logprob: -15.134788513183594
    9. '   ' → logprob: -15.259788513183594
    10. '[' → logprob: -15.634788513183594

Token 2831: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0005469570169225335
    2. 'idx' → logprob: -7.875546932220459
    3. '```' → logprob: -9.750547409057617
    4. '   ' → logprob: -10.375547409057617
    5. '_idx' → logprob: -10.625547409057617
    6. ' =' → logprob: -11.375547409057617
    7. '_tokens' → logprob: -12.125547409057617
    8. '[token' → logprob: -12.125547409057617
    9. '       ' → logprob: -12.625547409057617
    10. ' idx' → logprob: -12.750547409057617

Token 2832: '].' (ID: 1651)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.26549381017684937
    2. '].' → logprob: -2.015493869781494
    3. '.strip' → logprob: -2.765493869781494
    4. '().' → logprob: -4.140493869781494
    5. '.' → logprob: -5.140493869781494
    6. '       ' → logprob: -5.265493869781494
    7. ' =' → logprob: -5.390493869781494
    8. '           ' → logprob: -5.890493869781494
    9. '=' → logprob: -7.015493869781494
    10. ').' → logprob: -7.765493869781494

Token 2833: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4740772247314453
    2. 'split' → logprob: -0.9740772247314453
    3. 'rstrip' → logprob: -15.474077224731445
    4. '.strip' → logprob: -18.474077224731445
    5. ' strip' → logprob: -18.974077224731445
    6. '```' → logprob: -19.474077224731445
    7. ' split' → logprob: -19.724077224731445
    8. '.split' → logprob: -20.599077224731445
    9. 'str' → logprob: -20.974077224731445
    10. '_split' → logprob: -21.849077224731445

Token 2834: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1278114914894104
    2. '()
' → logprob: -2.1278114318847656
    3. '()[' → logprob: -7.627811431884766
    4. '();' → logprob: -8.627811431884766
    5. '[' → logprob: -9.377811431884766
    6. '(' → logprob: -10.252811431884766
    7. '(),' → logprob: -10.627811431884766
    8. '       ' → logprob: -11.127811431884766
    9. '=' → logprob: -11.502811431884766
    10. '()\' → logprob: -11.877811431884766

Token 2835: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3588402569293976
    2. 'idx' → logprob: -1.3588402271270752
    3. 'if' → logprob: -3.483840227127075
    4. '```' → logprob: -5.233840465545654
    5. '[idx' → logprob: -5.483840465545654
    6. '           ' → logprob: -5.733840465545654
    7. ' if' → logprob: -8.108839988708496
    8. ' idx' → logprob: -8.108839988708496
    9. 'm' → logprob: -9.233839988708496
    10. '_idx' → logprob: -9.483839988708496

Token 2836: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.37667733430862427
    2. 'm' → logprob: -1.3766772747039795
    3. 'idx' → logprob: -3.3766772747039795
    4. '       ' → logprob: -3.6266772747039795
    5. '           ' → logprob: -8.126677513122559
    6. ' if' → logprob: -8.376677513122559
    7. '```' → logprob: -9.376677513122559
    8. 'n' → logprob: -10.751677513122559
    9. 'yield' → logprob: -10.876677513122559
    10. 'num' → logprob: -12.251677513122559

Token 2837: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5933048725128174
    2. 'not' → logprob: -0.8433048725128174
    3. 'm' → logprob: -4.093304634094238
    4. ' not' → logprob: -7.968304634094238
    5. 'int' → logprob: -8.843304634094238
    6. ' len' → logprob: -11.218304634094238
    7. '           ' → logprob: -11.593304634094238
    8. '(len' → logprob: -11.718304634094238
    9. '       ' → logprob: -12.343304634094238
    10. '   ' → logprob: -13.343304634094238

Token 2838: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.31500473618507385
    2. 'm' → logprob: -1.3150047063827515
    3. '==' → logprob: -6.940004825592041
    4. '[m' → logprob: -7.690004825592041
    5. '(lines' → logprob: -8.940004348754883
    6. '>' → logprob: -10.065004348754883
    7. 'lines' → logprob: -10.315004348754883
    8. '```' → logprob: -10.440004348754883
    9. '=' → logprob: -11.065004348754883
    10. ')m' → logprob: -11.815004348754883

Token 2839: '_n' (ID: 2170)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0017994119552895427
    2. '==' → logprob: -6.876799583435059
    3. '[m' → logprob: -8.501799583435059
    4. '```' → logprob: -8.626799583435059
    5. 'idx' → logprob: -9.751799583435059
    6. '_n' → logprob: -9.751799583435059
    7. '(idx' → logprob: -9.876799583435059
    8. '[' → logprob: -10.126799583435059
    9. '>' → logprob: -10.376799583435059
    10. 'm' → logprob: -11.001799583435059

Token 2840: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004982559010386467
    2. '!=' → logprob: -6.3799824714660645
    3. ' ==' → logprob: -6.5049824714660645
    4. ')==' → logprob: -6.8799824714660645
    5. ')' → logprob: -8.379982948303223
    6. '<=' → logprob: -8.629982948303223
    7. '```' → logprob: -9.379982948303223
    8. '[idx' → logprob: -9.754982948303223
    9. '==
' → logprob: -10.129982948303223
    10. '===' → logprob: -10.129982948303223

Token 2841: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006908129435032606
    2. '!=' → logprob: -5.131907939910889
    3. ' ==' → logprob: -7.631907939910889
    4. '<=' → logprob: -8.881908416748047
    5. '==
' → logprob: -9.256908416748047
    6. '```' → logprob: -9.381908416748047
    7. '[' → logprob: -10.256908416748047
    8. '===' → logprob: -10.631908416748047
    9. ')==' → logprob: -10.881908416748047
    10. '=' → logprob: -11.006908416748047

Token 2842: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007537625497207046
    2. ' ' → logprob: -7.750753879547119
    3. '1' → logprob: -8.250753402709961
    4. '=' → logprob: -9.875753402709961
    5. '```' → logprob: -12.125753402709961
    6. ')' → logprob: -13.250753402709961
    7. '   ' → logprob: -14.375753402709961
    8. '
' → logprob: -14.625753402709961
    9. '0' → logprob: -14.750753402709961
    10. 'm' → logprob: -15.000753402709961

Token 2843: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008037914521992207
    2. '1' → logprob: -7.2508039474487305
    3. ' ' → logprob: -9.75080394744873
    4. '=' → logprob: -11.12580394744873
    5. '```' → logprob: -12.12580394744873
    6. '
' → logprob: -12.25080394744873
    7. '>' → logprob: -13.00080394744873
    8. ')' → logprob: -13.25080394744873
    9. '   ' → logprob: -13.56330394744873
    10. '0' → logprob: -13.81330394744873

Token 2844: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9409587383270264
    2. ':' → logprob: -1.3159587383270264
    3. ':
' → logprob: -1.5659587383270264
    4. ' and' → logprob: -2.5659587383270264
    5. ' or' → logprob: -3.6909587383270264
    6. 'and' → logprob: -4.6909589767456055
    7. '[idx' → logprob: -5.1909589767456055
    8. '       ' → logprob: -5.4409589767456055
    9. '==' → logprob: -5.8159589767456055
    10. '=' → logprob: -5.9409589767456055

Token 2845: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03512875735759735
    2. 'idx' → logprob: -4.410128593444824
    3. '       ' → logprob: -4.535128593444824
    4. '```' → logprob: -5.035128593444824
    5. 'if' → logprob: -6.410128593444824
    6. '[idx' → logprob: -7.285128593444824
    7. ' if' → logprob: -7.535128593444824
    8. '               ' → logprob: -7.660128593444824
    9. 'm' → logprob: -7.660128593444824
    10. ' idx' → logprob: -7.910128593444824

Token 2846: ' break' (ID: 2338)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.17059409618377686
    2. 'break' (adapté à ' break') → logprob: -2.1705942153930664
    3. '           ' → logprob: -3.1705942153930664
    4. 'return' → logprob: -8.170594215393066
    5. '       ' → logprob: -8.545594215393066
    6. '               ' → logprob: -9.045594215393066
    7. ' idx' → logprob: -9.795594215393066
    8. 'if' → logprob: -9.795594215393066
    9. ' break' → logprob: -11.420594215393066
    10. 'continue' → logprob: -11.545594215393066

Token 2847: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.93710636976175e-05
    2. '
' → logprob: -10.000099182128906
    3. 'idx' → logprob: -10.500099182128906
    4. '```' → logprob: -11.500099182128906
    5. '           ' → logprob: -11.750099182128906
    6. '[idx' → logprob: -13.125099182128906
    7. '        
' → logprob: -13.250099182128906
    8. 'm' → logprob: -13.750099182128906
    9. ' idx' → logprob: -14.125099182128906
    10. '   ' → logprob: -14.250099182128906

Token 2848: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.710598886013031
    2. 'idx' → logprob: -0.710598886013031
    3. '```' → logprob: -4.335598945617676
    4. '           ' → logprob: -6.085598945617676
    5. 'if' → logprob: -7.085598945617676
    6. ' idx' → logprob: -7.960598945617676
    7. '	idx' → logprob: -8.585598945617676
    8. '[idx' → logprob: -8.835598945617676
    9. '``' → logprob: -9.335598945617676
    10. '   ' → logprob: -9.460598945617676

Token 2849: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.00487104244530201
    2. '       ' → logprob: -5.504870891571045
    3. '```' → logprob: -8.004871368408203
    4. 'idx' → logprob: -8.379871368408203
    5. 'n' → logprob: -9.129871368408203
    6. '           ' → logprob: -10.379871368408203
    7. '   ' → logprob: -10.754871368408203
    8. 'if' → logprob: -10.879871368408203
    9. 'num' → logprob: -11.004871368408203
    10. ' m' → logprob: -11.129871368408203

Token 2850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31167852878570557
    2. '[idx' → logprob: -2.186678409576416
    3. '_idx' → logprob: -2.936678409576416
    4. ' =' → logprob: -3.186678409576416
    5. '=' → logprob: -3.561678409576416
    6. 'idx' → logprob: -4.811678409576416
    7. '   ' → logprob: -5.061678409576416
    8. '```' → logprob: -5.561678409576416
    9. '_,' → logprob: -5.811678409576416
    10. '       ' → logprob: -6.061678409576416

Token 2851: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012525303289294243
    2. ' n' → logprob: -4.3875250816345215
    3. '
' → logprob: -12.63752555847168
    4. '   ' → logprob: -12.76252555847168
    5. '_n' → logprob: -12.76252555847168
    6. '=' → logprob: -13.01252555847168
    7. ' =' → logprob: -14.13752555847168
    8. '       ' → logprob: -14.13752555847168
    9. '           ' → logprob: -14.63752555847168
    10. ' ' → logprob: -15.01252555847168

Token 2852: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25706201791763306
    2. ' =' → logprob: -1.5070619583129883
    3. '=
' → logprob: -5.882061958312988
    4. '[idx' → logprob: -6.882061958312988
    5. ' =
' → logprob: -8.007061958312988
    6. '       ' → logprob: -8.382061958312988
    7. '[' → logprob: -9.007061958312988
    8. '<|end|>' → logprob: -9.132061958312988
    9. ')' → logprob: -9.257061958312988
    10. ',' → logprob: -9.757061958312988

Token 2853: ' int' (ID: 677)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.581000030040741
    2. 'int' → logprob: -0.831000030040741
    3. '[int' → logprob: -6.205999851226807
    4. 'm' → logprob: -6.580999851226807
    5. ' map' → logprob: -6.705999851226807
    6. 'lines' → logprob: -7.955999851226807
    7. ' int' → logprob: -10.206000328063965
    8. ' lines' → logprob: -11.581000328063965
    9. '[m' → logprob: -12.206000328063965
    10. '[' → logprob: -12.581000328063965

Token 2854: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6003971695899963
    2. '(m' → logprob: -0.8503971695899963
    3. 'lines' → logprob: -3.8503971099853516
    4. '(lines' → logprob: -5.850397109985352
    5. '[m' → logprob: -12.475397109985352
    6. ')m' → logprob: -12.600397109985352
    7. ' lines' → logprob: -14.100397109985352
    8. '
' → logprob: -14.350397109985352
    9. 'tokens' → logprob: -14.350397109985352
    10. '	m' → logprob: -14.350397109985352

Token 2855: '_n' (ID: 2170)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.4761224091053009
    2. 'idx' → logprob: -0.9761223793029785
    3. '[m' → logprob: -6.7261223793029785
    4. '(idx' → logprob: -7.9761223793029785
    5. 'm' → logprob: -8.351122856140137
    6. '_n' → logprob: -9.726122856140137
    7. 'lines' → logprob: -9.851122856140137
    8. '[n' → logprob: -10.101122856140137
    9. '_idx' → logprob: -10.226122856140137
    10. 'n' → logprob: -11.101122856140137

Token 2856: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038980069803074
    2. '[idx' → logprob: -8.50039005279541
    3. '0' → logprob: -8.62539005279541
    4. 'idx' → logprob: -12.75039005279541
    5. '(' → logprob: -14.12539005279541
    6. '   ' → logprob: -14.25039005279541
    7. '```' → logprob: -14.25039005279541
    8. '1' → logprob: -14.50039005279541
    9. '[]' → logprob: -15.12539005279541
    10. '[
' → logprob: -15.37539005279541

Token 2857: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002518031978979707
    2. '1' → logprob: -8.375251770019531
    3. ' ' → logprob: -11.250251770019531
    4. '[' → logprob: -11.750251770019531
    5. '   ' → logprob: -15.625251770019531
    6. ')' → logprob: -16.75025177001953
    7. ']' → logprob: -17.62525177001953
    8. '  ' → logprob: -17.62525177001953
    9. '```' → logprob: -18.00025177001953
    10. '    ' → logprob: -18.12525177001953

Token 2858: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000104616025055293
    2. '],' → logprob: -10.000104904174805
    3. ']),' → logprob: -10.625104904174805
    4. '       ' → logprob: -11.250104904174805
    5. ')' → logprob: -12.250104904174805
    6. ' ),' → logprob: -12.250104904174805
    7. ',' → logprob: -13.000104904174805
    8. ')],' → logprob: -13.125104904174805
    9. '   ' → logprob: -13.500104904174805
    10. '           ' → logprob: -13.625104904174805

Token 2859: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004441355704329908
    2. ' int' → logprob: -7.750443935394287
    3. 'm' → logprob: -11.250444412231445
    4. '   ' → logprob: -16.000444412231445
    5. '
' → logprob: -16.375444412231445
    6. ' m' → logprob: -16.500444412231445
    7. 'n' → logprob: -17.375444412231445
    8. '           ' → logprob: -17.500444412231445
    9. '       ' → logprob: -17.625444412231445
    10. '[int' → logprob: -17.625444412231445

Token 2860: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001719446387141943
    2. 'int' → logprob: -6.5017194747924805
    3. '(m' → logprob: -8.50171947479248
    4. ' m' → logprob: -11.25171947479248
    5. '   ' → logprob: -15.25171947479248
    6. '(int' → logprob: -15.75171947479248
    7. '[m' → logprob: -15.75171947479248
    8. '           ' → logprob: -16.001718521118164
    9. ')m' → logprob: -16.626718521118164
    10. '
' → logprob: -16.626718521118164

Token 2861: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0010744920000433922
    2. 'n' → logprob: -7.501074314117432
    3. '1' → logprob: -7.626074314117432
    4. '_m' → logprob: -11.25107479095459
    5. '[' → logprob: -11.87607479095459
    6. '[idx' → logprob: -12.50107479095459
    7. 'N' → logprob: -12.75107479095459
    8. '_' → logprob: -13.00107479095459
    9. '[n' → logprob: -13.62607479095459
    10. 'm' → logprob: -14.12607479095459

Token 2862: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003407071635592729
    2. '[' → logprob: -8.000340461730957
    3. ' ' → logprob: -13.000340461730957
    4. '   ' → logprob: -13.250340461730957
    5. '```' → logprob: -14.750340461730957
    6. 'idx' → logprob: -15.375340461730957
    7. '
' → logprob: -15.500340461730957
    8. '[idx' → logprob: -15.625340461730957
    9. '_' → logprob: -16.875341415405273
    10. '    ' → logprob: -16.875341415405273

Token 2863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.37500286102295
    3. '
' → logprob: -14.50000286102295
    4. '   ' → logprob: -15.37500286102295
    5. '[' → logprob: -16.625001907348633
    6. '0' → logprob: -16.625001907348633
    7. '2' → logprob: -17.375001907348633
    8. '```' → logprob: -17.500001907348633
    9. '    ' → logprob: -18.000001907348633
    10. '  ' → logprob: -18.000001907348633

Token 2864: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04913841187953949
    2. ')' → logprob: -3.049138307571411
    3. '       ' → logprob: -8.299138069152832
    4. '])
' → logprob: -8.424138069152832
    5. ')
' → logprob: -10.174138069152832
    6. '])' → logprob: -11.424138069152832
    7. '):
' → logprob: -12.049138069152832
    8. '           ' → logprob: -12.174138069152832
    9. ');' → logprob: -12.674138069152832
    10. '),' → logprob: -13.174138069152832

Token 2865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013309752568602562
    2. 'idx' → logprob: -4.638309955596924
    3. '```' → logprob: -5.763309955596924
    4. '           ' → logprob: -9.013309478759766
    5. 'if' → logprob: -9.138309478759766
    6. '   ' → logprob: -9.763309478759766
    7. ' idx' → logprob: -10.138309478759766
    8. '[idx' → logprob: -10.388309478759766
    9. '``' → logprob: -11.388309478759766
    10. '
' → logprob: -11.388309478759766

Token 2866: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.01910240761935711
    2. '       ' → logprob: -4.269102573394775
    3. 'if' → logprob: -5.394102573394775
    4. '```' → logprob: -8.269102096557617
    5. '   ' → logprob: -9.394102096557617
    6. ' idx' → logprob: -11.144102096557617
    7. '``' → logprob: -11.269102096557617
    8. '	idx' → logprob: -12.019102096557617
    9. '           ' → logprob: -12.269102096557617
    10. 'n' → logprob: -12.769102096557617

Token 2867: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0013754721730947495
    2. ' +=' → logprob: -6.626375675201416
    3. '+' → logprob: -11.001375198364258
    4. '```' → logprob: -11.126375198364258
    5. ']+=' → logprob: -11.251375198364258
    6. '=' → logprob: -13.251375198364258
    7. '   ' → logprob: -14.251375198364258
    8. '       ' → logprob: -14.501375198364258
    9. '+
' → logprob: -14.626375198364258
    10. '++' → logprob: -14.751375198364258

Token 2868: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'n' → logprob: -15.000000953674316
    4. '
' → logprob: -17.5
    5. '0' → logprob: -18.0
    6. '   ' → logprob: -19.0
    7. '2' → logprob: -19.0
    8. '```' → logprob: -20.25
    9. ' n' → logprob: -20.75
    10. 'int' → logprob: -21.0

Token 2869: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. '0' → logprob: -11.375019073486328
    3. '2' → logprob: -12.125019073486328
    4. ' ' → logprob: -13.375019073486328
    5. 'n' → logprob: -14.375019073486328
    6. '
' → logprob: -17.000019073486328
    7. '+' → logprob: -17.125019073486328
    8. '```' → logprob: -17.250019073486328
    9. '3' → logprob: -17.625019073486328
    10. '-' → logprob: -18.500019073486328

Token 2870: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1437934935092926
    2. 'if' → logprob: -3.0187935829162598
    3. 'data' → logprob: -3.6437935829162598
    4. 'num' → logprob: -4.51879358291626
    5. 'lines' → logprob: -4.64379358291626
    6. 'car' → logprob: -5.01879358291626
    7. 'nums' → logprob: -5.01879358291626
    8. 'cars' → logprob: -5.01879358291626
    9. 'numbers' → logprob: -5.39379358291626
    10. 'count' → logprob: -5.76879358291626

Token 2871: '       ' (ID: 309)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.11277726292610168
    2. 'car' → logprob: -2.8627772331237793
    3. 'if' → logprob: -3.2377772331237793
    4. '       ' → logprob: -5.237777233123779
    5. 'data' → logprob: -5.737777233123779
    6. '```' → logprob: -7.362777233123779
    7. 'entries' → logprob: -8.487777709960938
    8. '   ' → logprob: -8.737777709960938
    9. 'numbers' → logprob: -8.987777709960938
    10. 'nums' → logprob: -9.237777709960938

Token 2872: ' if' (ID: 538)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.01200801134109497
    2. 'car' → logprob: -5.262008190155029
    3. 'for' → logprob: -6.137008190155029
    4. 'data' → logprob: -7.012008190155029
    5. 'parking' → logprob: -7.012008190155029
    6. 'park' → logprob: -8.012007713317871
    7. 'nums' → logprob: -8.262007713317871
    8. '   ' → logprob: -8.387007713317871
    9. 'while' → logprob: -8.387007713317871
    10. 'duration' → logprob: -8.637007713317871

Token 2873: ' m' (ID: 284)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3185732066631317
    2. 'n' → logprob: -1.318573236465454
    3. 'len' → logprob: -5.943572998046875
    4. 'm' → logprob: -6.943572998046875
    5. 'not' → logprob: -7.068572998046875
    6. 'lines' → logprob: -8.068572998046875
    7. '   ' → logprob: -8.443572998046875
    8. ' idx' → logprob: -8.943572998046875
    9. '       ' → logprob: -9.068572998046875
    10. ' n' → logprob: -11.193572998046875

Token 2874: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7994123697280884
    2. '>=' → logprob: -1.1744123697280884
    3. '<=' → logprob: -1.9244123697280884
    4. ' ==' → logprob: -3.299412250518799
    5. '>' → logprob: -3.924412250518799
    6. ' >=' → logprob: -3.924412250518799
    7. ' <=' → logprob: -4.674412250518799
    8. '```' → logprob: -5.424412250518799
    9. ' >' → logprob: -6.549412250518799
    10. '<len' → logprob: -6.799412250518799

Token 2875: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.625866030342877e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.000085830688477
    4. '       ' → logprob: -16.375085830688477
    5. '```' → logprob: -16.500085830688477
    6. '=' → logprob: -16.875085830688477
    7. '  ' → logprob: -16.875085830688477
    8. '           ' → logprob: -17.125085830688477
    9. '-' → logprob: -17.250085830688477
    10. '
' → logprob: -17.500085830688477

Token 2876: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '-' → logprob: -14.625025749206543
    4. '   ' → logprob: -15.625025749206543
    5. '```' → logprob: -15.875025749206543
    6. 'and' → logprob: -16.250024795532227
    7. '
' → logprob: -16.625024795532227
    8. '=' → logprob: -17.125024795532227
    9. '  ' → logprob: -17.500024795532227
    10. 'n' → logprob: -18.437524795532227

Token 2877: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.693807065486908
    2. 'and' → logprob: -0.693807065486908
    3. '           ' → logprob: -8.068806648254395
    4. '       ' → logprob: -8.193806648254395
    5. ':
' → logprob: -10.193806648254395
    6. ':' → logprob: -11.193806648254395
    7. ' or' → logprob: -11.818806648254395
    8. '   ' → logprob: -12.693806648254395
    9. '	and' → logprob: -12.943806648254395
    10. '          ' → logprob: -13.568806648254395

Token 2878: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006718452088534832
    2. ' n' → logprob: -5.006718635559082
    3. '   ' → logprob: -13.381718635559082
    4. '	n' → logprob: -14.131718635559082
    5. '       ' → logprob: -15.006718635559082
    6. '
' → logprob: -16.006717681884766
    7. ' ' → logprob: -16.256717681884766
    8. '_n' → logprob: -16.756717681884766
    9. '     ' → logprob: -16.756717681884766
    10. '  ' → logprob: -17.006717681884766

Token 2879: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2531488835811615
    2. ' ==' → logprob: -1.5031489133834839
    3. '=' → logprob: -6.878149032592773
    4. '==
' → logprob: -9.378149032592773
    5. '===' → logprob: -10.628149032592773
    6. '[' → logprob: -11.378149032592773
    7. ']==' → logprob: -11.378149032592773
    8. ')==' → logprob: -11.503149032592773
    9. ' =' → logprob: -11.628149032592773
    10. '<|end|>' → logprob: -12.003149032592773

Token 2880: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '[' → logprob: -20.750001907348633
    5. '```' → logprob: -20.750001907348633
    6. '<|end|>' → logprob: -21.000001907348633
    7. '۰' → logprob: -21.125001907348633
    8. '1' → logprob: -21.500001907348633
    9. '<|end|>' → logprob: -21.750001907348633
    10. '  ' → logprob: -22.125001907348633

Token 2881: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -16.6250057220459
    4. '<|end|>' → logprob: -16.7500057220459
    5. '   ' → logprob: -19.2500057220459
    6. '
' → logprob: -19.3750057220459
    7. '۰' → logprob: -19.3750057220459
    8. '  ' → logprob: -19.7500057220459
    9. '=' → logprob: -19.8750057220459
    10. 'and' → logprob: -20.4375057220459

Token 2882: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25920894742012024
    2. ':' → logprob: -2.134208917617798
    3. ':
' → logprob: -2.259208917617798
    4. '       ' → logprob: -5.384209156036377
    5. '		' → logprob: -8.134208679199219
    6. '          ' → logprob: -9.009208679199219
    7. '               ' → logprob: -9.009208679199219
    8. '<|end|>' → logprob: -9.634208679199219
    9. '<|end|>' → logprob: -9.884208679199219
    10. '                       ' → logprob: -9.884208679199219

Token 2883: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003430077340453863
    2. '       ' → logprob: -5.878429889678955
    3. '		' → logprob: -8.753430366516113
    4. '               ' → logprob: -9.003430366516113
    5. '	       ' → logprob: -9.003430366516113
    6. '                       ' → logprob: -10.003430366516113
    7. '   ' → logprob: -10.503430366516113
    8. '                   ' → logprob: -10.878430366516113
    9. 'break' → logprob: -10.878430366516113
    10. ':' → logprob: -11.128430366516113

Token 2884: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06545095145702362
    2. '           ' → logprob: -2.81545090675354
    3. ' break' → logprob: -5.815451145172119
    4. '	break' → logprob: -8.065450668334961
    5. '               ' → logprob: -9.065450668334961
    6. 'return' → logprob: -9.940450668334961
    7. '_break' → logprob: -11.940450668334961
    8. '		' → logprob: -12.190450668334961
    9. '	       ' → logprob: -13.065450668334961
    10. '```' → logprob: -13.440450668334961

Token 2885: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008455123752355576
    2. '```' → logprob: -4.883455276489258
    3. '   ' → logprob: -8.133455276489258
    4. '
' → logprob: -9.133455276489258
    5. '``' → logprob: -9.258455276489258
    6. 'data' → logprob: -9.383455276489258
    7. 'num' → logprob: -9.633455276489258
    8. 'm' → logprob: -10.258455276489258
    9. 'n' → logprob: -10.383455276489258
    10. '        
' → logprob: -10.383455276489258

Token 2886: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018339187372475863
    2. '```' → logprob: -6.376833915710449
    3. '   ' → logprob: -10.12683391571045
    4. '           ' → logprob: -10.87683391571045
    5. 'data' → logprob: -10.87683391571045
    6. '
' → logprob: -11.75183391571045
    7. '        
' → logprob: -12.00183391571045
    8. 'car' → logprob: -12.12683391571045
    9. 'continue' → logprob: -12.37683391571045
    10. '``' → logprob: -12.62683391571045

Token 2887: ' t' (ID: 260)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.09213750809431076
    2. '       ' → logprob: -3.217137575149536
    3. 'car' → logprob: -3.842137575149536
    4. 'park' → logprob: -5.217137336730957
    5. 'parking' → logprob: -5.217137336730957
    6. 'duration' → logprob: -5.592137336730957
    7. 'data' → logprob: -6.217137336730957
    8. 'times' → logprob: -6.592137336730957
    9. 'c' → logprob: -6.592137336730957
    10. 'capacity' → logprob: -7.217137336730957

Token 2888: '_list' (ID: 4162)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26986631751060486
    2. ' =' → logprob: -2.5198662281036377
    3. '_list' → logprob: -2.5198662281036377
    4. '_line' → logprob: -3.7698662281036377
    5. 's' → logprob: -4.144866466522217
    6. 'imes' → logprob: -4.769866466522217
    7. '=' → logprob: -4.894866466522217
    8. ',n' → logprob: -5.394866466522217
    9. '_values' → logprob: -5.519866466522217
    10. '   ' → logprob: -6.394866466522217

Token 2889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12702827155590057
    2. ' =' → logprob: -2.127028226852417
    3. '   ' → logprob: -10.252028465270996
    4. '       ' → logprob: -10.252028465270996
    5. '=line' → logprob: -11.377028465270996
    6. '=
' → logprob: -12.002028465270996
    7. '=[]
' → logprob: -12.627028465270996
    8. '=[]' → logprob: -13.002028465270996
    9. '=list' → logprob: -13.502028465270996
    10. '           ' → logprob: -13.752028465270996

Token 2890: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08529286086559296
    2. '[list' → logprob: -2.5852928161621094
    3. ' list' → logprob: -5.085292816162109
    4. '[' → logprob: -9.08529281616211
    5. '[line' → logprob: -10.33529281616211
    6. ' [' → logprob: -10.33529281616211
    7. '[]
' → logprob: -11.96029281616211
    8. '[List' → logprob: -12.96029281616211
    9. '[int' → logprob: -13.08529281616211
    10. '[len' → logprob: -13.58529281616211

Token 2891: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010263829492032528
    2. 'while' → logprob: -4.885263919830322
    3. 'for' → logprob: -6.010263919830322
    4. '           ' → logprob: -9.010263442993164
    5. '   ' → logprob: -10.760263442993164
    6. '```' → logprob: -11.010263442993164
    7. '	while' → logprob: -11.385263442993164
    8. ' for' → logprob: -11.510263442993164
    9. ' while' → logprob: -11.635263442993164
    10. '	for' → logprob: -12.885263442993164

Token 2892: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16484105587005615
    2. 'while' → logprob: -1.9148410558700562
    3. '       ' → logprob: -5.414841175079346
    4. 'count' → logprob: -8.914840698242188
    5. 't' → logprob: -11.914840698242188
    6. '           ' → logprob: -12.164840698242188
    7. ' for' → logprob: -12.664840698242188
    8. '   ' → logprob: -13.164840698242188
    9. 'i' → logprob: -13.914840698242188
    10. 'num' → logprob: -13.914840698242188

Token 2893: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5063486099243164
    2. '_i' → logprob: -1.0063486099243164
    3. '_j' → logprob: -3.6313486099243164
    4. 'i' → logprob: -5.381348609924316
    5. ' _' → logprob: -8.381348609924316
    6. '__' → logprob: -8.881348609924316
    7. '_in' → logprob: -9.381348609924316
    8. 'j' → logprob: -9.881348609924316
    9. '_line' → logprob: -10.506348609924316
    10. '___' → logprob: -10.506348609924316

Token 2894: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.045183975249528885
    2. 'in' → logprob: -3.6701838970184326
    3. '_' → logprob: -4.170184135437012
    4. 'i' → logprob: -5.795184135437012
    5. ' _' → logprob: -9.670184135437012
    6. '
' → logprob: -10.420184135437012
    7. ' i' → logprob: -10.545184135437012
    8. '_i' → logprob: -10.545184135437012
    9. ' ' → logprob: -10.920184135437012
    10. 't' → logprob: -11.170184135437012

Token 2895: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00022594700567424297
    2. ' range' → logprob: -8.875226020812988
    3. '_' → logprob: -9.500226020812988
    4. '_range' → logprob: -11.625226020812988
    5. '
' → logprob: -14.250226020812988
    6. 'in' → logprob: -14.375226020812988
    7. 'r' → logprob: -14.750226020812988
    8. '	range' → logprob: -15.500226020812988
    9. 'i' → logprob: -15.625226020812988
    10. '(range' → logprob: -16.875225067138672

Token 2896: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008933556382544339
    2. '(n' → logprob: -7.125893592834473
    3. ' n' → logprob: -10.000893592834473
    4. '	n' → logprob: -11.000893592834473
    5. '       ' → logprob: -11.625893592834473
    6. '   ' → logprob: -11.875893592834473
    7. '           ' → logprob: -12.625893592834473
    8. '0' → logprob: -12.750893592834473
    9. '_n' → logprob: -13.250893592834473
    10. ')n' → logprob: -14.750893592834473

Token 2897: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.41269829869270325
    2. ':
' → logprob: -1.5376982688903809
    3. '       ' → logprob: -2.787698268890381
    4. '           ' → logprob: -3.162698268890381
    5. ':' → logprob: -4.787698268890381
    6. '):' → logprob: -5.662698268890381
    7. '<|end|>' → logprob: -6.037698268890381
    8. '   ' → logprob: -6.412698268890381
    9. '():
' → logprob: -6.912698268890381
    10. '<|end|>' → logprob: -7.787698268890381

Token 2898: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008984320797026157
    2. 't' → logprob: -5.258984088897705
    3. '	       ' → logprob: -6.758984088897705
    4. '       ' → logprob: -7.008984088897705
    5. '```' → logprob: -7.383984088897705
    6. ' t' → logprob: -7.758984088897705
    7. '<|end|>' → logprob: -8.633984565734863
    8. '   ' → logprob: -9.258984565734863
    9. '<|end|>' → logprob: -9.758984565734863
    10. '		   ' → logprob: -10.758984565734863

Token 2899: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.032404232770204544
    2. 'line' → logprob: -3.7824041843414307
    3. 'tokens' → logprob: -5.40740442276001
    4. '           ' → logprob: -6.53240442276001
    5. 'parts' → logprob: -7.15740442276001
    6. 'time' → logprob: -7.40740442276001
    7. ' t' → logprob: -8.157403945922852
    8. 'vals' → logprob: -8.282403945922852
    9. 'num' → logprob: -8.907403945922852
    10. 'values' → logprob: -9.157403945922852

Token 2900: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.38560160994529724
    2. '_line' → logprob: -1.7606016397476196
    3. 't' → logprob: -3.26060152053833
    4. '=' → logprob: -3.63560152053833
    5. 'line' → logprob: -4.13560152053833
    6. 'okens' → logprob: -4.63560152053833
    7. '_tokens' → logprob: -4.63560152053833
    8. ' =' → logprob: -4.88560152053833
    9. '.append' → logprob: -5.01060152053833
    10. '_' → logprob: -5.26060152053833

Token 2901: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000855597376357764
    2. '+=' → logprob: -7.750855445861816
    3. '.' → logprob: -9.375855445861816
    4. ' +=' → logprob: -9.375855445861816
    5. '.extend' → logprob: -9.500855445861816
    6. '           ' → logprob: -9.875855445861816
    7. '[idx' → logprob: -10.000855445861816
    8. '[int' → logprob: -10.125855445861816
    9. '       ' → logprob: -11.625855445861816
    10. '=' → logprob: -12.000855445861816

Token 2902: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026991849881596863
    2. '(int' → logprob: -8.500269889831543
    3. ' int' → logprob: -10.000269889831543
    4. '           ' → logprob: -11.625269889831543
    5. '[int' → logprob: -12.000269889831543
    6. '
' → logprob: -12.375269889831543
    7. '0' → logprob: -14.500269889831543
    8. '<int' → logprob: -15.000269889831543
    9. '   ' → logprob: -15.375269889831543
    10. '            
' → logprob: -15.875269889831543

Token 2903: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0001105762057704851
    2. 'lines' → logprob: -9.125110626220703
    3. ' lines' → logprob: -14.250110626220703
    4. '	lines' → logprob: -14.250110626220703
    5. '(
' → logprob: -15.875110626220703
    6. '(' → logprob: -16.125110626220703
    7. '
' → logprob: -17.875110626220703
    8. '   ' → logprob: -18.000110626220703
    9. ')' → logprob: -18.750110626220703
    10. '_lines' → logprob: -19.250110626220703

Token 2904: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.013994814362377e-05
    2. 'idx' → logprob: -10.00005054473877
    3. '(idx' → logprob: -12.50005054473877
    4. '[' → logprob: -14.25005054473877
    5. '   ' → logprob: -16.250049591064453
    6. '[
' → logprob: -16.375049591064453
    7. '	idx' → logprob: -17.500049591064453
    8. ' idx' → logprob: -17.625049591064453
    9. '```' → logprob: -17.875049591064453
    10. 'lines' → logprob: -18.375049591064453

Token 2905: ']))
' (ID: 24801)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.08129207044839859
    2. '])' → logprob: -2.956292152404785
    3. 'idx' → logprob: -4.581292152404785
    4. '])
' → logprob: -4.581292152404785
    5. '       ' → logprob: -6.831292152404785
    6. ']))' → logprob: -6.831292152404785
    7. ']))
' → logprob: -7.581292152404785
    8. '(idx' → logprob: -7.581292152404785
    9. '```' → logprob: -7.831292152404785
    10. '   ' → logprob: -7.831292152404785

Token 2906: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06456835567951202
    2. '       ' → logprob: -3.189568281173706
    3. '```' → logprob: -4.314568519592285
    4. 'idx' → logprob: -5.314568519592285
    5. '	       ' → logprob: -7.064568519592285
    6. '<|end|>' → logprob: -7.939568519592285
    7. '   ' → logprob: -8.064568519592285
    8. '<|end|>' → logprob: -8.189568519592285
    9. '``' → logprob: -8.439568519592285
    10. '	idx' → logprob: -8.814568519592285

Token 2907: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.008131536655128002
    2. '           ' → logprob: -5.258131504058838
    3. '	idx' → logprob: -6.258131504058838
    4. '```' → logprob: -8.258131980895996
    5. ' idx' → logprob: -8.383131980895996
    6. '       ' → logprob: -8.508131980895996
    7. '		' → logprob: -9.508131980895996
    8. '	       ' → logprob: -9.758131980895996
    9. '_idx' → logprob: -10.008131980895996
    10. '
' → logprob: -11.133131980895996

Token 2908: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.013917608186602592
    2. '=' → logprob: -5.013917446136475
    3. ' +=' → logprob: -5.513917446136475
    4. '```' → logprob: -6.638917446136475
    5. '<|end|>' → logprob: -7.513917446136475
    6. '+' → logprob: -7.888917446136475
    7. 'idx' → logprob: -8.138917922973633
    8. ']+=' → logprob: -8.763917922973633
    9. '++' → logprob: -8.888917922973633
    10. '<|end|>' → logprob: -9.638917922973633

Token 2909: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '
' → logprob: -18.0
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -19.625
    6. '+' → logprob: -20.0
    7. '=' → logprob: -20.5
    8. '１' → logprob: -20.875
    9. '(' → logprob: -21.25
    10. 't' → logprob: -21.875

Token 2910: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -20.25
    4. '0' → logprob: -21.0
    5. '１' → logprob: -21.25
    6. '
' → logprob: -21.25
    7. '(' → logprob: -21.25
    8. '+' → logprob: -21.625
    9. '   ' → logprob: -21.75
    10. 't' → logprob: -22.0

Token 2911: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011543353088200092
    2. '<|end|>' → logprob: -4.761543273925781
    3. '
' → logprob: -6.511543273925781
    4. 'return' → logprob: -7.011543273925781
    5. '```' → logprob: -8.886543273925781
    6. 'def' → logprob: -9.011543273925781
    7. '        
' → logprob: -9.636543273925781
    8. '<|end|>' → logprob: -10.011543273925781
    9. '   ' → logprob: -10.511543273925781
    10. ')' → logprob: -10.761543273925781

Token 2912: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18247681856155396
    2. '<|end|>' → logprob: -1.8074767589569092
    3. 'continue' → logprob: -7.182476997375488
    4. 'return' → logprob: -7.182476997375488
    5. '```' → logprob: -7.807476997375488
    6. '           ' → logprob: -8.432476997375488
    7. '<|end|>' → logprob: -8.807476997375488
    8. ')' → logprob: -8.932476997375488
    9. '   ' → logprob: -9.682476997375488
    10. ' continue' → logprob: -10.057476997375488

Token 2913: ' dataset' (ID: 20830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25467735528945923
    2. 'dataset' (adapté à ' dataset') → logprob: -1.5046772956848145
    3. '```' → logprob: -7.1296772956848145
    4. '   ' → logprob: -7.6296772956848145
    5. 'car' → logprob: -8.004677772521973
    6. '
' → logprob: -8.254677772521973
    7. 'data' → logprob: -8.629677772521973
    8. ' dataset' → logprob: -8.629677772521973
    9. 'return' → logprob: -9.254677772521973
    10. 'def' → logprob: -9.379677772521973

Token 2914: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.027598440647125244
    2. '       ' → logprob: -3.7775983810424805
    3. '.' → logprob: -6.1525983810424805
    4. '=' → logprob: -7.7775983810424805
    5. '```' → logprob: -7.7775983810424805
    6. '.extend' → logprob: -8.27759838104248
    7. ',' → logprob: -8.52759838104248
    8. ' =' → logprob: -8.65259838104248
    9. '<|end|>' → logprob: -9.02759838104248
    10. '   ' → logprob: -9.27759838104248

Token 2915: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005033678840845823
    2. '(m' → logprob: -5.880033493041992
    3. '(' → logprob: -6.255033493041992
    4. '   ' → logprob: -8.755033493041992
    5. '       ' → logprob: -9.255033493041992
    6. '(
' → logprob: -10.630033493041992
    7. ' (' → logprob: -10.755033493041992
    8. ' ((' → logprob: -12.380033493041992
    9. '           ' → logprob: -14.005033493041992
    10. '(M' → logprob: -14.505033493041992

Token 2916: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: 0.0
    2. ' m' → logprob: -19.125
    3. '(m' → logprob: -21.625
    4. '	m' → logprob: -23.75
    5. ')m' → logprob: -23.75
    6. '   ' → logprob: -24.625
    7. '_m' → logprob: -26.0
    8. '           ' → logprob: -26.125
    9. '#m' → logprob: -26.125
    10. '[m' → logprob: -26.25

Token 2917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03814041242003441
    2. ',n' → logprob: -3.288140296936035
    3. 'n' → logprob: -10.163140296936035
    4. ' ,' → logprob: -10.538140296936035
    5. ',
' → logprob: -10.663140296936035
    6. '[n' → logprob: -12.163140296936035
    7. '
' → logprob: -13.663140296936035
    8. '[' → logprob: -13.663140296936035
    9. '_n' → logprob: -13.788140296936035
    10. '(n' → logprob: -14.663140296936035

Token 2918: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004315036640036851
    2. ' n' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.500431060791016
    4. '       ' → logprob: -15.500431060791016
    5. '	n' → logprob: -16.750431060791016
    6. '           ' → logprob: -17.625431060791016
    7. 't' → logprob: -18.125431060791016
    8. ' ' → logprob: -18.250431060791016
    9. '    ' → logprob: -18.625431060791016
    10. '     ' → logprob: -19.000431060791016

Token 2919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01275826059281826
    2. ',t' → logprob: -4.387758255004883
    3. ',
' → logprob: -8.637758255004883
    4. '       ' → logprob: -10.512758255004883
    5. ' ,' → logprob: -10.762758255004883
    6. '   ' → logprob: -11.012758255004883
    7. 't' → logprob: -13.512758255004883
    8. '```' → logprob: -13.887758255004883
    9. '           ' → logprob: -14.262758255004883
    10. ',n' → logprob: -14.637758255004883

Token 2920: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0008122475701384246
    2. ' t' → logprob: -7.12581205368042
    3. '   ' → logprob: -12.250812530517578
    4. '       ' → logprob: -13.125812530517578
    5. '           ' → logprob: -14.875812530517578
    6. '`t' → logprob: -16.125812530517578
    7. '    ' → logprob: -16.250812530517578
    8. '                   ' → logprob: -16.250812530517578
    9. '	t' → logprob: -16.375812530517578
    10. '        ' → logprob: -16.625812530517578

Token 2921: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.45848218582978e-06
    2. 't' → logprob: -13.50000286102295
    3. 'list' → logprob: -14.12500286102295
    4. 'List' → logprob: -16.250001907348633
    5. '_LIST' → logprob: -17.000001907348633
    6. 's' → logprob: -17.750001907348633
    7. '_lst' → logprob: -18.000001907348633
    8. '_t' → logprob: -18.750001907348633
    9. '_List' → logprob: -19.125001907348633
    10. '[t' → logprob: -19.375001907348633

Token 2922: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14309726655483246
    2. ')
' → logprob: -2.393097162246704
    3. '       ' → logprob: -3.268097162246704
    4. '))' → logprob: -6.143097400665283
    5. '))
' → logprob: -6.518097400665283
    6. '   ' → logprob: -9.393096923828125
    7. '           ' → logprob: -9.643096923828125
    8. '               ' → logprob: -10.893096923828125
    9. ')')
' → logprob: -11.143096923828125
    10. ')`
' → logprob: -11.268096923828125

Token 2923: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08327384293079376
    2. 'return' → logprob: -2.5832738876342773
    3. '
' → logprob: -5.708273887634277
    4. 'def' → logprob: -7.333273887634277
    5. ' return' → logprob: -8.458273887634277
    6. '```' → logprob: -9.333273887634277
    7. '    
' → logprob: -10.458273887634277
    8. '	return' → logprob: -10.833273887634277
    9. '`' → logprob: -11.458273887634277
    10. '<|end|>' → logprob: -11.833273887634277

Token 2924: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6939396262168884
    2. 'return' (adapté à ' return') → logprob: -0.6939396262168884
    3. ' return' → logprob: -8.318939208984375
    4. '```' → logprob: -8.693939208984375
    5. '
' → logprob: -9.068939208984375
    6. '<|end|>' → logprob: -9.568939208984375
    7. 'for' → logprob: -10.193939208984375
    8. '{return' → logprob: -10.193939208984375
    9. '	return' → logprob: -10.443939208984375
    10. 'def' → logprob: -10.943939208984375

Token 2925: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.000984935206361115
    2. '[(' → logprob: -7.000985145568848
    3. '[
' → logprob: -9.750985145568848
    4. '[' → logprob: -12.125985145568848
    5. ' dataset' → logprob: -12.250985145568848
    6. '[]' → logprob: -13.250985145568848
    7. '[]
' → logprob: -13.625985145568848
    8. '   ' → logprob: -14.250985145568848
    9. ' [(' → logprob: -14.500985145568848
    10. '(dataset' → logprob: -14.750985145568848

Token 2926: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000282431225059554
    2. 'if' → logprob: -8.375282287597656
    3. '```' → logprob: -10.375282287597656
    4. '
' → logprob: -11.000282287597656
    5. 'import' → logprob: -13.250282287597656
    6. 'class' → logprob: -13.500282287597656
    7. ' def' → logprob: -15.375282287597656
    8. 'from' → logprob: -15.750282287597656
    9. '#' → logprob: -16.000282287597656
    10. ' if' → logprob: -16.250282287597656

Token 2927: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01607859693467617
    2. 'if' → logprob: -4.266078472137451
    3. '```' → logprob: -6.266078472137451
    4. 'import' → logprob: -12.39107894897461
    5. '
' → logprob: -12.89107894897461
    6. 'class' → logprob: -13.01607894897461
    7. ' if' → logprob: -13.39107894897461
    8. '``' → logprob: -13.51607894897461
    9. '#' → logprob: -14.76607894897461
    10. ' def' → logprob: -14.89107894897461

Token 2928: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.8624639324116288e-06
    2. ' main' → logprob: -14.000001907348633
    3. 'solve' → logprob: -14.625001907348633
    4. '_main' → logprob: -15.625001907348633
    5. 'simulate' → logprob: -15.875001907348633
    6. 'run' → logprob: -15.875001907348633
    7. 'read' → logprob: -17.500001907348633
    8. '```' → logprob: -17.750001907348633
    9. '
' → logprob: -18.125001907348633
    10. 'def' → logprob: -18.125001907348633

Token 2929: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10028959065675735
    2. '():
' → logprob: -2.3502895832061768
    3. '()' → logprob: -9.475289344787598
    4. '():
' → logprob: -12.850289344787598
    5. 'def' → logprob: -12.975289344787598
    6. '():

' → logprob: -14.225289344787598
    7. ' ():' → logprob: -15.100289344787598
    8. '()>' → logprob: -16.350290298461914
    9. '()->' → logprob: -16.850290298461914
    10. '();' → logprob: -16.975290298461914

Token 2930: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07835667580366135
    2. 'def' → logprob: -3.3283567428588867
    3. 'import' → logprob: -3.8283567428588867
    4. 'data' → logprob: -4.703356742858887
    5. '```' → logprob: -5.328356742858887
    6. 'dataset' → logprob: -5.578356742858887
    7. 'datasets' → logprob: -10.328356742858887
    8. '``' → logprob: -10.828356742858887
    9. 'from' → logprob: -11.703356742858887
    10. '
' → logprob: -13.078356742858887

Token 2931: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' (adapté à ' dataset') → logprob: -0.5667905211448669
    2. 'data' → logprob: -1.0667905807495117
    3. 'import' → logprob: -2.8167905807495117
    4. '   ' → logprob: -3.8167905807495117
    5. 'datasets' → logprob: -5.191790580749512
    6. 'def' → logprob: -6.941790580749512
    7. '```' → logprob: -9.066790580749512
    8. ' dataset' → logprob: -10.566790580749512
    9. 'input' → logprob: -10.816790580749512
    10. 'inputs' → logprob: -11.191790580749512

Token 2932: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5478687286376953
    2. '()' → logprob: -1.5478687286376953
    3. ' =' → logprob: -2.9228687286376953
    4. '():
' → logprob: -3.0478687286376953
    5. '():' → logprob: -3.1728687286376953
    6. ':' → logprob: -3.6728687286376953
    7. '=' → logprob: -4.172868728637695
    8. 'data' → logprob: -5.047868728637695
    9. 'for' → logprob: -5.297868728637695
    10. 'def' → logprob: -5.922868728637695

Token 2933: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0007111206650733948
    2. ' parse' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.125711441040039
    4. '[]' → logprob: -15.750711441040039
    5. '(parse' → logprob: -15.875711441040039
    6. '	parse' → logprob: -17.12571144104004
    7. '[]
' → logprob: -17.87571144104004
    8. '=parse' → logprob: -18.12571144104004
    9. '.parse' → logprob: -18.87571144104004
    10. '```' → logprob: -19.12571144104004

Token 2934: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.001586389378644526
    2. 'input' → logprob: -6.501586437225342
    3. '_' → logprob: -10.126585960388184
    4. '_
' → logprob: -10.626585960388184
    5. '(
' → logprob: -12.126585960388184
    6. '()
' → logprob: -12.376585960388184
    7. 'Input' → logprob: -12.501585960388184
    8. '(' → logprob: -13.626585960388184
    9. '()' → logprob: -14.126585960388184
    10. '```' → logprob: -14.376585960388184

Token 2935: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2854728400707245
    2. 'for' → logprob: -1.4104728698730469
    3. 'parking' → logprob: -6.285472869873047
    4. '```' → logprob: -6.535472869873047
    5. ' for' → logprob: -7.285472869873047
    6. '
' → logprob: -8.910472869873047
    7. 'import' → logprob: -9.785472869873047
    8. '``' → logprob: -9.785472869873047
    9. 'from' → logprob: -11.285472869873047
    10. '    
' → logprob: -11.660472869873047

Token 2936: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17685650289058685
    2. '   ' → logprob: -2.051856517791748
    3. '```' → logprob: -3.801856517791748
    4. ' for' → logprob: -4.801856517791748
    5. '
' → logprob: -6.176856517791748
    6. 'parking' → logprob: -7.176856517791748
    7. '``' → logprob: -9.05185604095459
    8. '    
' → logprob: -10.30185604095459
    9. 'Parking' → logprob: -10.55185604095459
    10. ' parking' → logprob: -11.55185604095459

Token 2937: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000997082912363112
    2. '   ' → logprob: -7.000997066497803
    3. '```' → logprob: -9.500997543334961
    4. ' for' → logprob: -11.750997543334961
    5. '``' → logprob: -13.000997543334961
    6. '
' → logprob: -14.750997543334961
    7. 'from' → logprob: -15.625997543334961
    8. 'car' → logprob: -16.50099754333496
    9. '	for' → logprob: -16.75099754333496
    10. 'import' → logprob: -17.25099754333496

Token 2938: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08304347842931747
    2. ' m' → logprob: -2.5830435752868652
    3. '(m' → logprob: -6.083043575286865
    4. '   ' → logprob: -6.333043575286865
    5. ' (' → logprob: -9.833043098449707
    6. ' ' → logprob: -11.708043098449707
    7. 'data' → logprob: -11.833043098449707
    8. '```' → logprob: -12.708043098449707
    9. ' data' → logprob: -12.833043098449707
    10. '(' → logprob: -12.958043098449707

Token 2939: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2352385965641588e-05
    2. '   ' → logprob: -11.500012397766113
    3. ' m' → logprob: -14.250012397766113
    4. '(m' → logprob: -14.875012397766113
    5. 'dataset' → logprob: -14.875012397766113
    6. 'data' → logprob: -15.000012397766113
    7. '```' → logprob: -15.750012397766113
    8. ')m' → logprob: -16.250011444091797
    9. '       ' → logprob: -16.375011444091797
    10. '    
' → logprob: -17.500011444091797

Token 2940: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017339673358947039
    2. ',n' → logprob: -6.376733779907227
    3. ' ,' → logprob: -10.376733779907227
    4. '_,' → logprob: -14.876733779907227
    5. '   ' → logprob: -15.501733779907227
    6. ',
' → logprob: -16.501733779907227
    7. 'n' → logprob: -17.251733779907227
    8. ',num' → logprob: -18.126733779907227
    9. '‌,' → logprob: -18.501733779907227
    10. '،' → logprob: -19.001733779907227

Token 2941: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004150699358433485
    2. ' n' → logprob: -5.504150867462158
    3. '   ' → logprob: -9.629150390625
    4. '       ' → logprob: -12.254150390625
    5. '    ' → logprob: -14.254150390625
    6. '     ' → logprob: -15.504150390625
    7. '           ' → logprob: -15.754150390625
    8. '      ' → logprob: -15.754150390625
    9. '	n' → logprob: -16.004150390625
    10. '  ' → logprob: -16.254150390625

Token 2942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004228091274853796
    2. ' ,' → logprob: -7.875422954559326
    3. ',n' → logprob: -10.875422477722168
    4. '   ' → logprob: -11.500422477722168
    5. ',m' → logprob: -12.250422477722168
    6. ',t' → logprob: -12.375422477722168
    7. ',
' → logprob: -13.750422477722168
    8. '_,' → logprob: -13.875422477722168
    9. '  ' → logprob: -15.000422477722168
    10. ',w' → logprob: -15.250422477722168

Token 2943: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00013905855303164572
    2. ' t' → logprob: -9.250139236450195
    3. '   ' → logprob: -10.125139236450195
    4. '       ' → logprob: -13.875139236450195
    5. '`t' → logprob: -14.625139236450195
    6. '           ' → logprob: -15.000139236450195
    7. ' ' → logprob: -15.000139236450195
    8. ')t' → logprob: -15.875139236450195
    9. '	t' → logprob: -16.000139236450195
    10. '  ' → logprob: -16.250139236450195

Token 2944: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0011782010551542044
    2. 'list' → logprob: -6.75117826461792
    3. ')' → logprob: -12.876177787780762
    4. 't' → logprob: -13.126177787780762
    5. 'List' → logprob: -14.001177787780762
    6. '_lst' → logprob: -14.001177787780762
    7. '   ' → logprob: -14.626177787780762
    8. 's' → logprob: -14.876177787780762
    9. '_t' → logprob: -15.626177787780762
    10. '_values' → logprob: -15.751177787780762

Token 2945: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010115911572938785
    2. '   ' → logprob: -9.375101089477539
    3. ' )' → logprob: -11.875101089477539
    4. '):
' → logprob: -12.125101089477539
    5. 'in' → logprob: -13.625101089477539
    6. ' in' → logprob: -14.000101089477539
    7. '):' → logprob: -14.125101089477539
    8. '       ' → logprob: -14.500101089477539
    9. ')
' → logprob: -15.875101089477539
    10. '    ' → logprob: -15.875101089477539

Token 2946: ' in' (ID: 306)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6948287487030029
    2. ':' → logprob: -0.9448287487030029
    3. '   ' → logprob: -2.944828748703003
    4. '       ' → logprob: -3.569828748703003
    5. ',' → logprob: -3.944828748703003
    6. '():
' → logprob: -4.944828987121582
    7. '):
' → logprob: -5.819828987121582
    8. ' in' → logprob: -7.819828987121582
    9. 'in' → logprob: -7.944828987121582
    10. '<|end|>' → logprob: -9.257328987121582

Token 2947: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -7.111979357432574e-05
    2. ' dataset' → logprob: -9.75007152557373
    3. '   ' → logprob: -11.37507152557373
    4. '
' → logprob: -14.12507152557373
    5. '(dataset' → logprob: -14.62507152557373
    6. ' ' → logprob: -17.250070571899414
    7. 'parse' → logprob: -17.875070571899414
    8. '       ' → logprob: -18.000070571899414
    9. 'datasets' → logprob: -18.125070571899414
    10. '  ' → logprob: -18.250070571899414

Token 2948: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9937583804130554
    2. ':
' → logprob: -1.1187584400177002
    3. ':' → logprob: -1.4937584400177002
    4. '   ' → logprob: -2.8687584400177
    5. '```' → logprob: -5.493758201599121
    6. '():
' → logprob: -5.618758201599121
    7. '<|end|>' → logprob: -5.618758201599121
    8. ',' → logprob: -5.743758201599121
    9. '        
' → logprob: -5.993758201599121
    10. '<|end|>' → logprob: -6.618758201599121

Token 2949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044359974563121796
    2. '   ' → logprob: -3.1693599224090576
    3. '```' → logprob: -6.669360160827637
    4. 'car' → logprob: -10.294360160827637
    5. '
' → logprob: -10.544360160827637
    6. '        
' → logprob: -11.419360160827637
    7. '           ' → logprob: -12.669360160827637
    8. '``' → logprob: -12.794360160827637
    9. 'cars' → logprob: -12.794360160827637
    10. '    
' → logprob: -12.919360160827637

Token 2950: ' parking' (ID: 14472)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.35443609952926636
    2. '       ' → logprob: -1.3544361591339111
    3. 'parking' (adapté à ' parking') → logprob: -3.229436159133911
    4. 'lot' → logprob: -8.229435920715332
    5. '```' → logprob: -8.854435920715332
    6. 'car' → logprob: -9.229435920715332
    7. ' cars' → logprob: -9.229435920715332
    8. '   ' → logprob: -9.729435920715332
    9. 'park' → logprob: -10.604435920715332
    10. ' parking' → logprob: -10.854435920715332

Token 2951: '_l' (ID: 1478)
  Prédit: 'lot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lot' → logprob: -0.5542451739311218
    2. '_l' → logprob: -0.9292451739311218
    3. 'Lot' → logprob: -3.8042452335357666
    4. '=' → logprob: -5.3042449951171875
    5. ' =' → logprob: -6.5542449951171875
    6. '       ' → logprob: -6.8042449951171875
    7. '   ' → logprob: -7.6792449951171875
    8. ' lot' → logprob: -9.554244995117188
    9. '        ' → logprob: -9.804244995117188
    10. '    ' → logprob: -10.179244995117188

Token 2952: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0011081863194704056
    2. 'lot' → logprob: -7.126108169555664
    3. '```' → logprob: -9.501108169555664
    4. '   ' → logprob: -10.376108169555664
    5. '_l' → logprob: -10.751108169555664
    6. 'Lot' → logprob: -10.876108169555664
    7. 'ots' → logprob: -10.876108169555664
    8. '_' → logprob: -10.876108169555664
    9. '
' → logprob: -11.376108169555664
    10. '__' → logprob: -11.751108169555664

Token 2953: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22772590816020966
    2. '=' → logprob: -1.602725863456726
    3. '=
' → logprob: -7.102725982666016
    4. '.' → logprob: -7.852725982666016
    5. '       ' → logprob: -7.977725982666016
    6. ' =
' → logprob: -8.102725982666016
    7. '        
' → logprob: -8.727725982666016
    8. '   ' → logprob: -8.977725982666016
    9. '```' → logprob: -11.227725982666016
    10. '        ' → logprob: -11.352725982666016

Token 2954: ' Parking' (ID: 40497)
  Prédit: 'Parking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parking' → logprob: -1.306760805164231e-05
    2. ' Parking' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.00001335144043
    4. 'Park' → logprob: -19.62501335144043
    5. '       ' → logprob: -19.87501335144043
    6. 'Garage' → logprob: -20.62501335144043
    7. 'parking' → logprob: -20.75001335144043
    8. 'Python' → logprob: -21.25001335144043
    9. 'P' → logprob: -21.75001335144043
    10. 'Pricing' → logprob: -22.00001335144043

Token 2955: 'Lot' (ID: 41922)
  Prédit: 'Lot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lot' → logprob: -1.27099974633893e-05
    2. 'Parking' → logprob: -11.500012397766113
    3. '       ' → logprob: -14.125012397766113
    4. 'Space' → logprob: -14.375012397766113
    5. 'Lots' → logprob: -15.000012397766113
    6. ' Lot' → logprob: -15.250012397766113
    7. 'lot' → logprob: -15.375012397766113
    8. '   ' → logprob: -15.875012397766113
    9. 'Lottery' → logprob: -16.12501335144043
    10. '        ' → logprob: -17.37501335144043

Token 2956: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.004119480960071087
    2. 'm' → logprob: -5.504119396209717
    3. '       ' → logprob: -10.129119873046875
    4. ' m' → logprob: -14.879119873046875
    5. '   ' → logprob: -15.254119873046875
    6. '	m' → logprob: -15.629119873046875
    7. '[m' → logprob: -16.004119873046875
    8. '           ' → logprob: -16.254119873046875
    9. '
' → logprob: -17.129119873046875
    10. '        
' → logprob: -17.629119873046875

Token 2957: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3945099115371704
    2. '       ' → logprob: -1.1445099115371704
    3. ')' → logprob: -4.894509792327881
    4. ')c' → logprob: -10.269510269165039
    5. 'cars' → logprob: -10.644510269165039
    6. 'car' → logprob: -11.019510269165039
    7. ',' → logprob: -11.769510269165039
    8. 'c' → logprob: -12.144510269165039
    9. '   ' → logprob: -12.144510269165039
    10. ' cars' → logprob: -12.519510269165039

Token 2958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005481490516103804
    2. 'cars' → logprob: -8.250548362731934
    3. 'car' → logprob: -8.250548362731934
    4. '```' → logprob: -11.375548362731934
    5. '   ' → logprob: -11.625548362731934
    6. '
' → logprob: -13.375548362731934
    7. ' cars' → logprob: -13.500548362731934
    8. '        
' → logprob: -14.375548362731934
    9. '	' → logprob: -14.875548362731934
    10. '           ' → logprob: -15.125548362731934

Token 2959: ' cars' (ID: 13653)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' (adapté à ' cars') → logprob: -0.030037879943847656
    2. '       ' → logprob: -3.5300378799438477
    3. 'car' → logprob: -8.280037879943848
    4. 'for' → logprob: -11.405037879943848
    5. ' cars' → logprob: -11.780037879943848
    6. '   ' → logprob: -11.905037879943848
    7. '           ' → logprob: -12.655037879943848
    8. '```' → logprob: -13.530037879943848
    9. 'arrival' → logprob: -14.405037879943848
    10. 'current' → logprob: -14.530037879943848

Token 2960: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47647443413734436
    2. ' =' → logprob: -0.976474404335022
    3. '       ' → logprob: -6.101474285125732
    4. '=[' → logprob: -9.85147476196289
    5. '=[]' → logprob: -10.10147476196289
    6. '=[]
' → logprob: -10.60147476196289
    7. '   ' → logprob: -11.22647476196289
    8. '           ' → logprob: -12.35147476196289
    9. '=
' → logprob: -12.60147476196289
    10. '        ' → logprob: -12.60147476196289

Token 2961: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009731179103255272
    2. '[
' → logprob: -4.759731292724609
    3. '[]
' → logprob: -7.009731292724609
    4. '       ' → logprob: -8.75973129272461
    5. '[C' → logprob: -10.25973129272461
    6. ' [' → logprob: -11.25973129272461
    7. '[]' → logprob: -12.63473129272461
    8. '   ' → logprob: -13.13473129272461
    9. '           ' → logprob: -13.63473129272461
    10. '[class' → logprob: -14.50973129272461

Token 2962: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031818498973734677
    2. 'for' → logprob: -8.12531852722168
    3. ' for' → logprob: -11.00031852722168
    4. '```' → logprob: -12.62531852722168
    5. '   ' → logprob: -13.62531852722168
    6. '           ' → logprob: -15.37531852722168
    7. '
' → logprob: -16.12531852722168
    8. '	' → logprob: -16.12531852722168
    9. '	for' → logprob: -16.62531852722168
    10. '<|end|>' → logprob: -16.75031852722168

Token 2963: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38768360018730164
    2. 'for' (adapté à ' for') → logprob: -1.137683629989624
    3. 'arrival' → logprob: -7.262683391571045
    4. ' for' → logprob: -9.762683868408203
    5. 'start' → logprob: -10.137683868408203
    6. '   ' → logprob: -12.387683868408203
    7. 'car' → logprob: -12.887683868408203
    8. 'time' → logprob: -13.262683868408203
    9. 'current' → logprob: -13.762683868408203
    10. 'next' → logprob: -13.762683868408203

Token 2964: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003259234596043825
    2. 'car' → logprob: -6.003259181976318
    3. ' i' → logprob: -7.378259181976318
    4. '   ' → logprob: -9.378259658813477
    5. '_i' → logprob: -10.253259658813477
    6. '       ' → logprob: -11.378259658813477
    7. '_car' → logprob: -11.628259658813477
    8. ' car' → logprob: -11.753259658813477
    9. '```' → logprob: -12.628259658813477
    10. '_' → logprob: -13.503259658813477

Token 2965: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0080132856965065
    2. 'in' → logprob: -4.8830132484436035
    3. ',' → logprob: -8.633013725280762
    4. '       ' → logprob: -8.633013725280762
    5. '   ' → logprob: -11.383013725280762
    6. '	in' → logprob: -11.758013725280762
    7. '        ' → logprob: -11.883013725280762
    8. '_' → logprob: -12.008013725280762
    9. '	' → logprob: -12.633013725280762
    10. '    ' → logprob: -13.008013725280762

Token 2966: ' t' (ID: 260)
  Prédit: 'duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duration' → logprob: -0.4602013826370239
    2. 't' → logprob: -1.335201382637024
    3. 'park' → logprob: -2.9602012634277344
    4. 'dur' → logprob: -4.210201263427734
    5. 'd' → logprob: -4.710201263427734
    6. ' duration' → logprob: -4.960201263427734
    7. 'p' → logprob: -5.085201263427734
    8. 'pt' → logprob: -5.585201263427734
    9. 'parking' → logprob: -5.585201263427734
    10. ' t' → logprob: -5.710201263427734

Token 2967: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5307131409645081
    2. 'in' → logprob: -0.9057131409645081
    3. 'n' → logprob: -5.155713081359863
    4. '_in' → logprob: -7.030713081359863
    5. '_' → logprob: -7.655713081359863
    6. ',' → logprob: -8.405713081359863
    7. 's' → logprob: -10.280713081359863
    8. ' ' → logprob: -10.530713081359863
    9. 'ime' → logprob: -10.655713081359863
    10. 'd' → logprob: -10.655713081359863

Token 2968: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0001589618914294988
    2. ' enumerate' → logprob: -8.75015926361084
    3. 'range' → logprob: -14.62515926361084
    4. '   ' → logprob: -17.250158309936523
    5. 'in' → logprob: -17.875158309936523
    6. '
' → logprob: -19.000158309936523
    7. 'enum' → logprob: -19.250158309936523
    8. ' ' → logprob: -19.375158309936523
    9. 'zip' → logprob: -20.375158309936523
    10. 'en' → logprob: -20.750158309936523

Token 2969: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003472959389910102
    2. 'range' → logprob: -6.128472805023193
    3. 'enumer' → logprob: -6.753472805023193
    4. ' t' → logprob: -10.003473281860352
    5. '(t' → logprob: -10.503473281860352
    6. '   ' → logprob: -10.753473281860352
    7. '       ' → logprob: -11.878473281860352
    8. ' enumerate' → logprob: -12.628473281860352
    9. 'in' → logprob: -13.378473281860352
    10. '`t' → logprob: -13.378473281860352

Token 2970: '_list' (ID: 4162)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0894688218832016
    2. '(range' → logprob: -3.0894687175750732
    3. ' in' → logprob: -4.714468955993652
    4. '(t' → logprob: -4.839468955993652
    5. 'range' → logprob: -5.089468955993652
    6. 'enumer' → logprob: -5.214468955993652
    7. 'in' → logprob: -5.714468955993652
    8. ' range' → logprob: -5.964468955993652
    9. ',t' → logprob: -6.089468955993652
    10. 't' → logprob: -6.714468955993652

Token 2971: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12372058629989624
    2. '           ' → logprob: -2.248720645904541
    3. ' in' → logprob: -5.123720645904541
    4. ':
' → logprob: -6.623720645904541
    5. '       ' → logprob: -6.873720645904541
    6. 'in' → logprob: -6.998720645904541
    7. ':' → logprob: -7.998720645904541
    8. '(car' → logprob: -8.123720169067383
    9. '(c' → logprob: -8.498720169067383
    10. ',c' → logprob: -8.748720169067383

Token 2972: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.659005157416686e-05
    2. '```' → logprob: -9.875066757202148
    3. 'car' → logprob: -12.250066757202148
    4. '
' → logprob: -12.875066757202148
    5. '       ' → logprob: -13.250066757202148
    6. '(car' → logprob: -13.625066757202148
    7. ',' → logprob: -13.875066757202148
    8. '          ' → logprob: -13.875066757202148
    9. '   ' → logprob: -14.000066757202148
    10. '`' → logprob: -15.000066757202148

Token 2973: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012520836666226387
    2. 'car' → logprob: -4.512520790100098
    3. 'cars' → logprob: -7.262520790100098
    4. ' cars' → logprob: -8.012520790100098
    5. ' car' → logprob: -8.637520790100098
    6. '```' → logprob: -9.137520790100098
    7. '       ' → logprob: -9.762520790100098
    8. '               ' → logprob: -10.012520790100098
    9. '   ' → logprob: -10.762520790100098
    10. 'arrival' → logprob: -11.762520790100098

Token 2974: ' arrival' (ID: 24861)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4760163128376007
    2. 'car' → logprob: -1.1010162830352783
    3. 'arrival' → logprob: -3.4760162830352783
    4. 'cars' → logprob: -4.726016521453857
    5. '       ' → logprob: -6.226016521453857
    6. ' car' → logprob: -6.476016521453857
    7. '```' → logprob: -7.226016521453857
    8. ' arrival' → logprob: -7.476016521453857
    9. 'arr' → logprob: -7.601016521453857
    10. ' cars' → logprob: -7.601016521453857

Token 2975: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0316225104033947
    2. '=' → logprob: -4.031622409820557
    3. 'time' → logprob: -4.531622409820557
    4. ' =' → logprob: -6.281622409820557
    5. '=i' → logprob: -8.281622886657715
    6. '       ' → logprob: -8.781622886657715
    7. '=time' → logprob: -9.406622886657715
    8. '_car' → logprob: -9.531622886657715
    9. '   ' → logprob: -9.656622886657715
    10. '           ' → logprob: -10.156622886657715

Token 2976: ' every' (ID: 1753)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34190911054611206
    2. '=i' → logprob: -1.5919091701507568
    3. ' =' → logprob: -2.716909170150757
    4. 'i' → logprob: -4.591908931732178
    5. '           ' → logprob: -4.716908931732178
    6. '(i' → logprob: -7.341908931732178
    7. ' i' → logprob: -9.591909408569336
    8. '               ' → logprob: -10.341909408569336
    9. '0' → logprob: -10.841909408569336
    10. ',' → logprob: -10.841909408569336

Token 2977: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.14469076693058014
    2. 'i' → logprob: -2.019690752029419
    3. '(i' → logprob: -7.144690990447998
    4. '
' → logprob: -8.26969051361084
    5. '(' → logprob: -8.39469051361084
    6. '           ' → logprob: -9.01969051361084
    7. ' ' → logprob: -9.01969051361084
    8. '=' → logprob: -9.39469051361084
    9. '   ' → logprob: -9.39469051361084
    10. 'car' → logprob: -9.51969051361084

Token 2978: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00015669701679144055
    2. 'i' → logprob: -9.87515640258789
    3. ' ' → logprob: -10.25015640258789
    4. '           ' → logprob: -10.87515640258789
    5. '(' → logprob: -11.75015640258789
    6. '         ' → logprob: -11.87515640258789
    7. '               ' → logprob: -12.12515640258789
    8. '   ' → logprob: -12.25015640258789
    9. '
' → logprob: -12.25015640258789
    10. '       ' → logprob: -12.37515640258789

Token 2979: ' minutes' (ID: 5438)
  Prédit: 'minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minutes' → logprob: -0.38389304280281067
    2. '*i' → logprob: -1.3838930130004883
    3. '*' → logprob: -2.7588930130004883
    4. 'i' → logprob: -6.008893013000488
    5. ' *' → logprob: -6.758893013000488
    6. '           ' → logprob: -7.883893013000488
    7. '_minutes' → logprob: -8.383893013000488
    8. 'minute' → logprob: -8.883893013000488
    9. ' minutes' → logprob: -9.133893013000488
    10. 'min' → logprob: -9.258893013000488

Token 2980: ' *' (ID: 425)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01840932108461857
    2. ',' → logprob: -4.393409252166748
    3. '(' → logprob: -6.393409252166748
    4. '=' → logprob: -6.893409252166748
    5. '(i' → logprob: -7.018409252166748
    6. ' =' → logprob: -7.143409252166748
    7. '0' → logprob: -7.143409252166748
    8. '10' → logprob: -7.893409252166748
    9. ' (' → logprob: -9.143409729003906
    10. '
' → logprob: -10.518409729003906

Token 2981: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004173018038272858
    2. ' i' → logprob: -5.8791728019714355
    3. '           ' → logprob: -7.3791728019714355
    4. '(i' → logprob: -7.6291728019714355
    5. '10' → logprob: -8.379173278808594
    6. '   ' → logprob: -11.754173278808594
    7. ' (' → logprob: -12.379173278808594
    8. '               ' → logprob: -12.379173278808594
    9. '       ' → logprob: -12.504173278808594
    10. ' ' → logprob: -13.379173278808594

Token 2982: ' starting' (ID: 8601)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019964562729001045
    2. ',' → logprob: -4.269964694976807
    3. '(i' → logprob: -5.894964694976807
    4. 'i' → logprob: -6.644964694976807
    5. '(' → logprob: -8.144964218139648
    6. '=' → logprob: -8.519964218139648
    7. '0' → logprob: -8.644964218139648
    8. '*' → logprob: -8.644964218139648
    9. '10' → logprob: -8.644964218139648
    10. ',i' → logprob: -8.894964218139648

Token 2983: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6012552976608276
    2. 'i' → logprob: -1.6012552976608276
    3. 'from' → logprob: -2.226255416870117
    4. '(i' → logprob: -3.476255416870117
    5. 'at' → logprob: -3.726255416870117
    6. '           ' → logprob: -3.851255416870117
    7. '0' → logprob: -4.226255416870117
    8. '(' → logprob: -4.226255416870117
    9. '=i' → logprob: -4.851255416870117
    10. ' =' → logprob: -5.226255416870117

Token 2984: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1625761240720749
    2. '0' → logprob: -2.162576198577881
    3. '1' → logprob: -3.912576198577881
    4. ' i' → logprob: -5.037576198577881
    5. '(i' → logprob: -5.162576198577881
    6. '           ' → logprob: -6.287576198577881
    7. '10' → logprob: -8.162575721740723
    8. ' ' → logprob: -8.537575721740723
    9. ' (' → logprob: -8.662575721740723
    10. '(' → logprob: -9.287575721740723

Token 2985: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23808427155017853
    2. '0' → logprob: -1.613084316253662
    3. '1' → logprob: -4.988084316253662
    4. '(i' → logprob: -5.988084316253662
    5. '           ' → logprob: -6.238084316253662
    6. ' i' → logprob: -7.488084316253662
    7. '10' → logprob: -7.863084316253662
    8. '       ' → logprob: -9.738083839416504
    9. '(' → logprob: -9.738083839416504
    10. '   ' → logprob: -10.113083839416504

Token 2986: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022368213103618473
    2. ',' → logprob: -9.125224113464355
    3. '
' → logprob: -9.875224113464355
    4. 'car' → logprob: -10.625224113464355
    5. '       ' → logprob: -11.625224113464355
    6. 'arrival' → logprob: -11.750224113464355
    7. '(' → logprob: -12.125224113464355
    8. '(car' → logprob: -12.125224113464355
    9. '   ' → logprob: -12.500224113464355
    10. '          ' → logprob: -13.625224113464355

Token 2987: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010420980397611856
    2. ' i' → logprob: -7.126041889190674
    3. '10' → logprob: -8.876042366027832
    4. '0' → logprob: -9.626042366027832
    5. '           ' → logprob: -10.626042366027832
    6. '(i' → logprob: -13.626042366027832
    7. '                           ' → logprob: -13.876042366027832
    8. ' ' → logprob: -14.001042366027832
    9. '               ' → logprob: -14.126042366027832
    10. '                               ' → logprob: -14.251042366027832

Token 2988: '*' (ID: 9)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.579305112361908
    2. '*' → logprob: -1.3293051719665527
    3. ' *' → logprob: -2.0793051719665527
    4. ',' → logprob: -3.3293051719665527
    5. '
' → logprob: -5.079305171966553
    6. '=' → logprob: -6.579305171966553
    7. ' =' → logprob: -6.829305171966553
    8. '+' → logprob: -7.079305171966553
    9. '```' → logprob: -7.454305171966553
    10. '       ' → logprob: -7.579305171966553

Token 2989: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.672236824873835e-05
    2. '           ' → logprob: -10.125076293945312
    3. ' ' → logprob: -11.000076293945312
    4. '
' → logprob: -11.250076293945312
    5. '               ' → logprob: -13.250076293945312
    6. '   ' → logprob: -13.625076293945312
    7. '                   ' → logprob: -13.875076293945312
    8. '```' → logprob: -14.250076293945312
    9. '                               ' → logprob: -15.000076293945312
    10. '       ' → logprob: -15.250076293945312

Token 2990: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007641222910024226
    2. '
' → logprob: -7.250763893127441
    3. ',' → logprob: -10.250763893127441
    4. '       ' → logprob: -11.625763893127441
    5. 'car' → logprob: -12.750763893127441
    6. 'arrival' → logprob: -13.125763893127441
    7. '               ' → logprob: -14.000763893127441
    8. '
' → logprob: -14.000763893127441
    9. '          ' → logprob: -14.375763893127441
    10. '   ' → logprob: -14.500763893127441

Token 2991: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023333763238042593
    2. ',' → logprob: -8.62523365020752
    3. '```' → logprob: -11.37523365020752
    4. '       ' → logprob: -11.50023365020752
    5. 'car' → logprob: -11.75023365020752
    6. '          ' → logprob: -12.12523365020752
    7. '(car' → logprob: -12.37523365020752
    8. '   ' → logprob: -13.00023365020752
    9. '(' → logprob: -13.12523365020752
    10. '		' → logprob: -13.25023365020752

Token 2992: ' cars' (ID: 13653)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2655542194843292
    2. 'cars' (adapté à ' cars') → logprob: -1.6405541896820068
    3. '           ' → logprob: -3.265554189682007
    4. ' cars' → logprob: -7.140554428100586
    5. ' car' → logprob: -8.765554428100586
    6. '       ' → logprob: -9.015554428100586
    7. '   ' → logprob: -9.890554428100586
    8. '```' → logprob: -10.890554428100586
    9. '               ' → logprob: -11.515554428100586
    10. 'c' → logprob: -12.015554428100586

Token 2993: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00462154159322381
    2. '=' → logprob: -6.254621505737305
    3. '           ' → logprob: -6.629621505737305
    4. ' =' → logprob: -7.129621505737305
    5. '       ' → logprob: -8.004621505737305
    6. '.' → logprob: -8.754621505737305
    7. 'append' → logprob: -11.129621505737305
    8. ' .' → logprob: -11.129621505737305
    9. '   ' → logprob: -11.254621505737305
    10. '.extend' → logprob: -12.004621505737305

Token 2994: '(Car' (ID: 157495)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.00100422790274024
    2. ' Car' → logprob: -7.001004219055176
    3. '(Car' → logprob: -9.501004219055176
    4. '           ' → logprob: -11.001004219055176
    5. '               ' → logprob: -14.251004219055176
    6. '   ' → logprob: -15.126004219055176
    7. '<Car' → logprob: -15.126004219055176
    8. '       ' → logprob: -17.001005172729492
    9. 'Cars' → logprob: -17.126005172729492
    10. '.Car' → logprob: -17.501005172729492

Token 2995: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3220367431640625
    2. 'car' → logprob: -1.8220367431640625
    3. '(i' → logprob: -2.1970367431640625
    4. '           ' → logprob: -6.4470367431640625
    5. '(car' → logprob: -7.3220367431640625
    6. '               ' → logprob: -8.822036743164062
    7. ' i' → logprob: -10.072036743164062
    8. '   ' → logprob: -10.572036743164062
    9. ' car' → logprob: -11.197036743164062
    10. '       ' → logprob: -11.572036743164062

Token 2996: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03381190076470375
    2. ' +' → logprob: -3.4088118076324463
    3. '+
' → logprob: -9.033811569213867
    4. ',' → logprob: -11.283811569213867
    5. '=' → logprob: -11.408811569213867
    6. '1' → logprob: -11.908811569213867
    7. ' +
' → logprob: -12.783811569213867
    8. '```' → logprob: -12.783811569213867
    9. '   ' → logprob: -13.158811569213867
    10. '
' → logprob: -13.158811569213867

Token 2997: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -16.0
    3. ' ' → logprob: -16.0
    4. '   ' → logprob: -17.0
    5. '```' → logprob: -17.875
    6. '=' → logprob: -19.25
    7. 'import' → logprob: -20.0
    8. '+' → logprob: -20.25
    9. ')' → logprob: -20.375
    10. '１' → logprob: -20.625

Token 2998: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '
' → logprob: -16.75
    4. '   ' → logprob: -17.375
    5. '```' → logprob: -18.75
    6. '2' → logprob: -18.875
    7. 'import' → logprob: -19.125
    8. '0' → logprob: -19.5
    9. '１' → logprob: -19.5625
    10. '۱' → logprob: -19.875

Token 2999: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001097417771234177
    2. ',i' → logprob: -9.750109672546387
    3. ' ,' → logprob: -11.000109672546387
    4. '           ' → logprob: -11.000109672546387
    5. ',t' → logprob: -11.875109672546387
    6. '               ' → logprob: -12.250109672546387
    7. ',
' → logprob: -13.250109672546387
    8. '                   ' → logprob: -13.750109672546387
    9. 't' → logprob: -14.250109672546387
    10. '```' → logprob: -14.875109672546387

Token 3000: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.7372048862162046e-05
    2. ' t' → logprob: -10.875027656555176
    3. '           ' → logprob: -12.000027656555176
    4. '10' → logprob: -13.875027656555176
    5. '               ' → logprob: -14.875027656555176
    6. '   ' → logprob: -15.375027656555176
    7. '          ' → logprob: -16.12502670288086
    8. '	t' → logprob: -16.12502670288086
    9. '       ' → logprob: -16.25002670288086
    10. '                   ' → logprob: -16.37502670288086

Token 3001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002182499971240759
    2. ',i' → logprob: -6.877182483673096
    3. ' ,' → logprob: -7.002182483673096
    4. '           ' → logprob: -8.627182960510254
    5. '               ' → logprob: -11.127182960510254
    6. '*' → logprob: -11.877182960510254
    7. ',
' → logprob: -12.377182960510254
    8. '   ' → logprob: -12.377182960510254
    9. ' *' → logprob: -12.377182960510254
    10. '       ' → logprob: -12.377182960510254

Token 3002: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009237268241122365
    2. ' i' → logprob: -7.0009236335754395
    3. '           ' → logprob: -11.625924110412598
    4. '(i' → logprob: -14.125924110412598
    5. '                   ' → logprob: -14.375924110412598
    6. '               ' → logprob: -14.500924110412598
    7. '                           ' → logprob: -14.500924110412598
    8. '                               ' → logprob: -15.125924110412598
    9. '10' → logprob: -15.375924110412598
    10. '                                   ' → logprob: -15.500924110412598

Token 3003: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06199368089437485
    2. ' *' → logprob: -2.8119935989379883
    3. '10' → logprob: -11.686993598937988
    4. '           ' → logprob: -12.311993598937988
    5. ' ' → logprob: -12.686993598937988
    6. ' ' → logprob: -12.936993598937988
    7. ')' → logprob: -13.686993598937988
    8. '0' → logprob: -13.811993598937988
    9. '```' → logprob: -13.936993598937988
    10. '   ' → logprob: -14.436993598937988

Token 3004: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.625000953674316
    3. ' ' → logprob: -16.125
    4. '
' → logprob: -16.625
    5. '           ' → logprob: -17.125
    6. '   ' → logprob: -18.0
    7. '`' → logprob: -18.125
    8. '=' → logprob: -18.25
    9. '``' → logprob: -18.5
    10. '       ' → logprob: -19.125

Token 3005: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '```' → logprob: -17.875
    3. ' ' → logprob: -18.625
    4. '
' → logprob: -18.625
    5. '1' → logprob: -19.375
    6. '0' → logprob: -20.0
    7. '`' → logprob: -20.125
    8. 'def' → logprob: -20.5
    9. '   ' → logprob: -21.125
    10. '' → logprob: -21.125

Token 3006: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07016350328922272
    2. '))
' → logprob: -2.8201634883880615
    3. '           ' → logprob: -4.820163726806641
    4. '       ' → logprob: -9.69516372680664
    5. '               ' → logprob: -11.44516372680664
    6. '))
' → logprob: -11.82016372680664
    7. '))

' → logprob: -12.07016372680664
    8. '          ' → logprob: -12.44516372680664
    9. '   ' → logprob: -12.94516372680664
    10. '         ' → logprob: -13.69516372680664

Token 3007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006576312007382512
    2. '
' → logprob: -7.875657558441162
    3. '```' → logprob: -8.25065803527832
    4. '   ' → logprob: -12.25065803527832
    5. 'parking' → logprob: -12.25065803527832
    6. 'for' → logprob: -12.87565803527832
    7. '           ' → logprob: -13.37565803527832
    8. '        
' → logprob: -14.25065803527832
    9. ' parking' → logprob: -14.50065803527832
    10. '``' → logprob: -15.12565803527832

Token 3008: ' parking' (ID: 14472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07928851991891861
    2. 'parking' (adapté à ' parking') → logprob: -2.5792884826660156
    3. '```' → logprob: -8.704288482666016
    4. ' parking' → logprob: -8.954288482666016
    5. '   ' → logprob: -9.329288482666016
    6. '
' → logprob: -12.204288482666016
    7. '``' → logprob: -12.579288482666016
    8. '           ' → logprob: -13.079288482666016
    9. 'for' → logprob: -13.454288482666016
    10. '        
' → logprob: -14.079288482666016

Token 3009: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0002406090497970581
    2. 'lot' → logprob: -8.375240325927734
    3. '       ' → logprob: -11.875240325927734
    4. '
' → logprob: -13.500240325927734
    5. '   ' → logprob: -14.375240325927734
    6. 'l' → logprob: -15.000240325927734
    7. 'Lot' → logprob: -16.250240325927734
    8. '```' → logprob: -16.500240325927734
    9. '        
' → logprob: -16.625240325927734
    10. 'for' → logprob: -16.625240325927734

Token 3010: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.013389505445957184
    2. 'lot' → logprob: -4.763389587402344
    3. '_l' → logprob: -5.513389587402344
    4. 't' → logprob: -8.138389587402344
    5. 'l' → logprob: -8.388389587402344
    6. '   ' → logprob: -9.763389587402344
    7. '       ' → logprob: -10.138389587402344
    8. '_t' → logprob: -10.763389587402344
    9. '_' → logprob: -11.013389587402344
    10. 'o' → logprob: -11.638389587402344

Token 3011: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.004308703355491161
    2. 'run' → logprob: -5.504308700561523
    3. '.' → logprob: -9.129308700561523
    4. '   ' → logprob: -10.254308700561523
    5. '       ' → logprob: -10.629308700561523
    6. '
' → logprob: -11.254308700561523
    7. 'park' → logprob: -11.504308700561523
    8. '.
' → logprob: -11.754308700561523
    9. '```' → logprob: -12.004308700561523
    10. ' run' → logprob: -12.504308700561523

Token 3012: '_sim' (ID: 45966)
  Prédit: '_sim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sim' → logprob: -0.0001628956088097766
    2. 'simulation' → logprob: -9.000163078308105
    3. 'Simulation' → logprob: -10.875163078308105
    4. '_car' → logprob: -11.000163078308105
    5. '
' → logprob: -14.125163078308105
    6. '```' → logprob: -14.250163078308105
    7. '(sim' → logprob: -14.500163078308105
    8. '_' → logprob: -14.875163078308105
    9. '_s' → logprob: -15.125163078308105
    10. 'sim' → logprob: -15.500163078308105

Token 3013: 'ulation' (ID: 4672)
  Prédit: 'ulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulation' → logprob: -1.1472419600977446e-06
    2. 'ulate' → logprob: -14.625000953674316
    3. 'lation' → logprob: -15.250000953674316
    4. 'ULATION' → logprob: -16.125001907348633
    5. 'ation' → logprob: -16.500001907348633
    6. 'ul' → logprob: -16.625001907348633
    7. 'uation' → logprob: -17.125001907348633
    8. 'utation' → logprob: -17.625001907348633
    9. 'imulation' → logprob: -17.625001907348633
    10. '_sim' → logprob: -17.625001907348633

Token 3014: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1472419600977446e-06
    2. '(car' → logprob: -14.125000953674316
    3. '(' → logprob: -16.500001907348633
    4. '(
' → logprob: -16.750001907348633
    5. '```' → logprob: -16.750001907348633
    6. '       ' → logprob: -16.875001907348633
    7. 'c' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '(C' → logprob: -17.625001907348633
    10. ' (' → logprob: -18.000001907348633

Token 3015: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.0002394170151092112
    2. 'ar' → logprob: -9.125239372253418
    3. '(c' → logprob: -9.500239372253418
    4. 'cars' → logprob: -10.000239372253418
    5. '[' → logprob: -12.625239372253418
    6. '(' → logprob: -12.750239372253418
    7. '{' → logprob: -13.875239372253418
    8. '```' → logprob: -14.125239372253418
    9. 'c' → logprob: -14.875239372253418
    10. '(ar' → logprob: -15.000239372253418

Token 3016: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014647466596215963
    2. '<|end|>' → logprob: -7.25146484375
    3. ')' → logprob: -7.37646484375
    4. '
' → logprob: -9.75146484375
    5. ')
' → logprob: -10.25146484375
    6. '<|end|>' → logprob: -11.50146484375
    7. '        
' → logprob: -11.62646484375
    8. '   ' → logprob: -12.00146484375
    9. ',' → logprob: -13.25146484375
    10. '()' → logprob: -13.37646484375

Token 3017: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004216112662106752
    2. '   ' → logprob: -5.504216194152832
    3. 'for' → logprob: -9.254216194152832
    4. '```' → logprob: -10.254216194152832
    5. 'print' → logprob: -12.504216194152832
    6. '
' → logprob: -13.379216194152832
    7. ' for' → logprob: -14.629216194152832
    8. '           ' → logprob: -15.254216194152832
    9. 'output' → logprob: -15.254216194152832
    10. '        
' → logprob: -15.754216194152832

Token 3018: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0024619796313345432
    2. '       ' → logprob: -6.502461910247803
    3. 'for' → logprob: -7.002461910247803
    4. '```' → logprob: -10.002462387084961
    5. ' print' → logprob: -12.877462387084961
    6. '   ' → logprob: -14.502462387084961
    7. '``' → logprob: -15.002462387084961
    8. '
' → logprob: -15.377462387084961
    9. '        
' → logprob: -15.627462387084961
    10. 'output' → logprob: -15.752462387084961

Token 3019: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7072906494140625
    2. '(*' → logprob: -0.8322906494140625
    3. '('\' → logprob: -3.0822906494140625
    4. '("' → logprob: -3.7072906494140625
    5. '("\' → logprob: -7.4572906494140625
    6. '(*(' → logprob: -7.9572906494140625
    7. '(' → logprob: -8.207290649414062
    8. '*' → logprob: -9.207290649414062
    9. '(',' → logprob: -9.457290649414062
    10. ''' → logprob: -9.457290649414062

Token 3020: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029027367010712624
    2. ''\' → logprob: -3.7790274620056152
    3. '"' → logprob: -5.404027462005615
    4. '"\' → logprob: -7.279027462005615
    5. '
' → logprob: -8.779026985168457
    6. '\n' → logprob: -9.529026985168457
    7. '('' → logprob: -9.529026985168457
    8. '*' → logprob: -9.654026985168457
    9. ' '' → logprob: -9.654026985168457
    10. '('\' → logprob: -10.529026985168457

Token 3021: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0008858494111336768
    2. 'print' → logprob: -7.125885963439941
    3. ''' → logprob: -9.750885963439941
    4. '.join' → logprob: -11.875885963439941
    5. 'sep' → logprob: -12.000885963439941
    6. ''s' → logprob: -12.375885963439941
    7. 'end' → logprob: -12.750885963439941
    8. ''.' → logprob: -13.625885963439941
    9. ' join' → logprob: -14.375885963439941
    10. '.' → logprob: -14.625885963439941

Token 3022: '(map' (ID: 16946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.020523089915513992
    2. '(str' → logprob: -4.0205230712890625
    3. '[str' → logprob: -6.5205230712890625
    4. 'map' → logprob: -7.0205230712890625
    5. '(map' → logprob: -12.520523071289062
    6. ' str' → logprob: -14.770523071289062
    7. '	str' → logprob: -16.770523071289062
    8. '=str' → logprob: -18.395523071289062
    9. '   ' → logprob: -19.145523071289062
    10. '.str' → logprob: -19.770523071289062

Token 3023: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.06197384372353554
    2. 'str' → logprob: -2.811973810195923
    3. '=str' → logprob: -13.061973571777344
    4. '```' → logprob: -13.311973571777344
    5. '[str' → logprob: -13.936973571777344
    6. '
' → logprob: -14.436973571777344
    7. '	str' → logprob: -15.061973571777344
    8. '(
' → logprob: -15.561973571777344
    9. ' str' → logprob: -16.061973571777344
    10. '(' → logprob: -16.436973571777344

Token 3024: ',' (ID: 11)
  Prédit: '(par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -0.010010226629674435
    2. '(p' → logprob: -4.635010242462158
    3. ',' → logprob: -9.385009765625
    4. '([' → logprob: -9.885009765625
    5. 'parking' → logprob: -10.010009765625
    6. '(self' → logprob: -10.885009765625
    7. '(' → logprob: -11.385009765625
    8. '       ' → logprob: -12.010009765625
    9. '(car' → logprob: -12.260009765625
    10. '(pl' → logprob: -12.260009765625

Token 3025: ' parking' (ID: 14472)
  Prédit: 'parking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parking' → logprob: -2.935296834039036e-06
    2. ' parking' → logprob: -12.75000286102295
    3. '       ' → logprob: -17.500003814697266
    4. '           ' → logprob: -17.875003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '[' → logprob: -18.500003814697266
    7. 'park' → logprob: -20.250003814697266
    8. 'Parking' → logprob: -21.375003814697266
    9. 'par' → logprob: -21.875003814697266
    10. 'self' → logprob: -21.875003814697266

Token 3026: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.5715117454528809
    2. '.output' → logprob: -0.9465117454528809
    3. 'parking' → logprob: -3.196511745452881
    4. 'output' → logprob: -6.571511745452881
    5. '_par' → logprob: -6.821511745452881
    6. '.par' → logprob: -7.071511745452881
    7. ' parking' → logprob: -7.196511745452881
    8. '.' → logprob: -7.571511745452881
    9. '._' → logprob: -8.321512222290039
    10. '(output' → logprob: -8.571512222290039

Token 3027: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0003766919835470617
    2. 'st' → logprob: -8.25037670135498
    3. 'ist' → logprob: -9.87537670135498
    4. 'ost' → logprob: -10.62537670135498
    5. 't' → logprob: -11.75037670135498
    6. 'o' → logprob: -12.00037670135498
    7. 'lot' → logprob: -12.00037670135498
    8. '_ot' → logprob: -12.62537670135498
    9. 'ut' → logprob: -12.75037670135498
    10. '   ' → logprob: -12.87537670135498

Token 3028: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.011051828041672707
    2. 'output' → logprob: -4.511051654815674
    3. '   ' → logprob: -13.761052131652832
    4. '.' → logprob: -14.261052131652832
    5. ').' → logprob: -14.261052131652832
    6. ' output' → logprob: -14.636052131652832
    7. '       ' → logprob: -15.386052131652832
    8. ' .' → logprob: -15.636052131652832
    9. 'Output' → logprob: -15.636052131652832
    10. '$output' → logprob: -15.761052131652832

Token 3029: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.981667537620524e-06
    2. 'order' → logprob: -13.250001907348633
    3. 'Order' → logprob: -16.500001907348633
    4. '_ORDER' → logprob: -18.125001907348633
    5. '_output' → logprob: -18.125001907348633
    6. '_orders' → logprob: -18.125001907348633
    7. ')' → logprob: -18.250001907348633
    8. '```' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '$order' → logprob: -20.000001907348633

Token 3030: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06212027370929718
    2. ')))' → logprob: -2.812120199203491
    3. '()))' → logprob: -9.93712043762207
    4. '   ' → logprob: -10.18712043762207
    5. '       ' → logprob: -10.43712043762207
    6. '))
' → logprob: -10.68712043762207
    7. ')' → logprob: -12.93712043762207
    8. ' ))' → logprob: -13.31212043762207
    9. '(p' → logprob: -13.43712043762207
    10. '           ' → logprob: -13.43712043762207

Token 3031: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008753431029617786
    2. '())' → logprob: -5.133753299713135
    3. '))' → logprob: -5.883753299713135
    4. '()' → logprob: -11.008753776550293
    5. '       ' → logprob: -11.508753776550293
    6. ')
' → logprob: -12.633753776550293
    7. ')}' → logprob: -13.633753776550293
    8. '   ' → logprob: -13.758753776550293
    9. '()))' → logprob: -14.008753776550293
    10. ')))' → logprob: -14.258753776550293

Token 3032: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.8889261304575484e-06
    2. '```' → logprob: -13.000003814697266
    3. ' if' → logprob: -13.875003814697266
    4. 'main' → logprob: -14.250003814697266
    5. '#' → logprob: -18.375003814697266
    6. '__' → logprob: -21.000003814697266
    7. 'If' → logprob: -21.125003814697266
    8. '
' → logprob: -21.250003814697266
    9. '#if' → logprob: -21.625003814697266
    10. '	if' → logprob: -22.000003814697266

Token 3033: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.802049756515771e-05
    2. ' __' → logprob: -9.625067710876465
    3. 'name' → logprob: -13.250067710876465
    4. '___' → logprob: -17.00006866455078
    5. ''' → logprob: -17.12506866455078
    6. '```' → logprob: -17.37506866455078
    7. '_name' → logprob: -18.37506866455078
    8. 'True' → logprob: -18.50006866455078
    9. '____' → logprob: -19.37506866455078
    10. ''name' → logprob: -19.37506866455078

Token 3034: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10282084345817566
    2. '==' → logprob: -2.352820873260498
    3. ' ==' → logprob: -6.727820873260498
    4. 'if' → logprob: -7.727820873260498
    5. '=="' → logprob: -7.727820873260498
    6. '=='' → logprob: -8.85282039642334
    7. '```' → logprob: -8.85282039642334
    8. 'name' → logprob: -9.47782039642334
    9. '==
' → logprob: -9.60282039642334
    10. '__.__' → logprob: -10.85282039642334

Token 3035: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0018253617454320192
    2. '==' → logprob: -6.501825332641602
    3. '__.__' → logprob: -9.251825332641602
    4. '=="' → logprob: -9.626825332641602
    5. ' ==' → logprob: -10.001825332641602
    6. '__":
' → logprob: -10.626825332641602
    7. '=='' → logprob: -10.876825332641602
    8. '__':
' → logprob: -11.251825332641602
    9. '```' → logprob: -11.376825332641602
    10. '__
' → logprob: -11.501825332641602

Token 3036: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12760870158672333
    2. '__' → logprob: -2.3776087760925293
    3. ' ==' → logprob: -3.7526087760925293
    4. '=="' → logprob: -6.127608776092529
    5. '=='' → logprob: -6.877608776092529
    6. '.__' → logprob: -9.252608299255371
    7. '```' → logprob: -9.627608299255371
    8. '==
' → logprob: -9.752608299255371
    9. '__.__' → logprob: -10.127608299255371
    10. '['' → logprob: -10.377608299255371

Token 3037: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20154675841331482
    2. ''' → logprob: -1.7015467882156372
    3. '__' → logprob: -8.951546669006348
    4. ' "__' → logprob: -12.826546669006348
    5. ' '__' → logprob: -14.451546669006348
    6. '   ' → logprob: -15.451546669006348
    7. '"name' → logprob: -16.326547622680664
    8. '('__' → logprob: -16.451547622680664
    9. '("__' → logprob: -16.701547622680664
    10. ''name' → logprob: -17.076547622680664

Token 3038: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38692405819892883
    2. 'main' → logprob: -1.1369240283966064
    3. '_main' → logprob: -10.136923789978027
    4. ''' → logprob: -12.886923789978027
    5. '___' → logprob: -13.011923789978027
    6. '__':
' → logprob: -13.136923789978027
    7. 'name' → logprob: -13.136923789978027
    8. ' main' → logprob: -13.511923789978027
    9. '__":
' → logprob: -14.136923789978027
    10. '"' → logprob: -14.261923789978027

Token 3039: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.6332462430000305
    2. '():
' → logprob: -1.6332461833953857
    3. ':' → logprob: -1.8832461833953857
    4. ':
' → logprob: -2.5082461833953857
    5. '__":
' → logprob: -3.8832461833953857
    6. '__' → logprob: -4.133246421813965
    7. '```' → logprob: -7.133246421813965
    8. '   ' → logprob: -7.508246421813965
    9. '__:' → logprob: -7.508246421813965
    10. '[' → logprob: -8.508246421813965

Token 3040: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.021243538707494736
    2. '   ' → logprob: -3.8962435722351074
    3. '	main' → logprob: -7.521243572235107
    4. ' main' → logprob: -9.64624309539795
    5. '_main' → logprob: -9.89624309539795
    6. '__' → logprob: -11.14624309539795
    7. 'import' → logprob: -12.02124309539795
    8. '(main' → logprob: -12.14624309539795
    9. 'Main' → logprob: -12.64624309539795
    10. '```' → logprob: -12.64624309539795

Token 3041: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. 'import' → logprob: -17.5
    3. ' main' → logprob: -17.75
    4. '	main' → logprob: -21.5
    5. '   ' → logprob: -22.5
    6. '_main' → logprob: -24.75
    7. '.main' → logprob: -25.0
    8. '(main' → logprob: -26.0
    9. 'Main' → logprob: -28.125
    10. 'from' → logprob: -28.25

Token 3042: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3040
Tokens correctement prédits (1ère position, stricte): 1085
Tokens correctement prédits (1ère position, avec adaptation): 1196
Tokens correctement prédits (top 10): 2252
Précision stricte (1ère position): 35.69%
Précision adaptée (1ère position): 39.34%
Précision (top 10): 74.08%
================================================================================
