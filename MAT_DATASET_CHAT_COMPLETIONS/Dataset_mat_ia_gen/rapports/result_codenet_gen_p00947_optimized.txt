================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
table = [list(map(int, input().split())) for _ in range(10)]
def op(x,y): return table[x][y]
def check_ssn(digits):
    res = 0
    for d in digits:
        res = op(res,d)
    return res
count = 0
for num in range(10000):
    digits = [(num//1000)%10,(num//100)%10,(num//10)%10,num%10]
    e = check_ssn([0]+digits)
    ssn = digits+[e]
    fail = False
    # Single digit error
    for i in range(5):
        original = ssn[i]
        for d in range(10):
            if d != original:
                s = ssn[:]
                s[i] = d
                if check_ssn(s) == 0:
                    fail = True
                    break
        if fail:
            break
    if fail:
        count += 1
        continue
    # Transpose adjacent digits error
    for i in range(4):
        if ssn[i] != ssn[i+1]:
            s = ssn[:]
            s[i], s[i+1] = s[i+1], s[i]
            if check_ssn(s) == 0:
                fail = True
                break
    if fail:
        count += 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'table' (ID: 4202)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: 'list' (ID: 2641)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16463914513587952
    2. '[]' → logprob: -1.9146391153335571
    3. ']' → logprob: -5.789638996124268
    4. '{' → logprob: -7.289638996124268
    5. '   ' → logprob: -8.164639472961426
    6. '[],' → logprob: -8.289639472961426
    7. '[
' → logprob: -10.289639472961426
    8. '```' → logprob: -10.414639472961426
    9. ' [' → logprob: -11.414639472961426
    10. ' ' → logprob: -12.039639472961426

Token 4: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3223828375339508
    2. '(' → logprob: -1.3223828077316284
    3. '(map' → logprob: -4.947382926940918
    4. '(filter' → logprob: -7.447382926940918
    5. '('' → logprob: -8.572382926940918
    6. '(chain' → logprob: -9.072382926940918
    7. ']' → logprob: -9.197382926940918
    8. '(column' → logprob: -9.197382926940918
    9. '(zip' → logprob: -9.447382926940918
    10. '[' → logprob: -9.447382926940918

Token 5: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3116006553173065
    2. '(str' → logprob: -1.561600685119629
    3. '(lambda' → logprob: -3.186600685119629
    4. '(' → logprob: -4.561600685119629
    5. 'int' → logprob: -6.686600685119629
    6. 'str' → logprob: -6.811600685119629
    7. ')' → logprob: -6.936600685119629
    8. '```' → logprob: -7.061600685119629
    9. '[int' → logprob: -8.061600685119629
    10. '<int' → logprob: -8.186600685119629

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10607913881540298
    2. '(token' → logprob: -3.4810791015625
    3. '(table' → logprob: -3.8560791015625
    4. ')' → logprob: -4.6060791015625
    5. '(user' → logprob: -4.7310791015625
    6. '(range' → logprob: -4.9810791015625
    7. '(input' → logprob: -6.1060791015625
    8. '(data' → logprob: -6.2310791015625
    9. '(row' → logprob: -6.6060791015625
    10. '(line' → logprob: -6.6060791015625

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006200734525918961
    2. ' input' → logprob: -5.506200790405273
    3. '(input' → logprob: -6.881200790405273
    4. 'row' → logprob: -7.381200790405273
    5. 'line' → logprob: -8.131200790405273
    6. ',input' → logprob: -10.006200790405273
    7. ')' → logprob: -10.131200790405273
    8. 'x' → logprob: -11.131200790405273
    9. ' line' → logprob: -11.381200790405273
    10. 'user' → logprob: -11.881200790405273

Token 8: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2608935832977295
    2. '().' → logprob: -2.1358935832977295
    3. '()' → logprob: -2.3858935832977295
    4. '()));' → logprob: -5.260893821716309
    5. '())))' → logprob: -5.510893821716309
    6. '(' → logprob: -5.510893821716309
    7. '())' → logprob: -6.010893821716309
    8. '(()' → logprob: -6.260893821716309
    9. '());' → logprob: -8.385893821716309
    10. '()`' → logprob: -8.385893821716309

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007252985378727317
    2. 'strip' → logprob: -7.250725269317627
    3. 'rstrip' → logprob: -11.500725746154785
    4. ' split' → logprob: -12.625725746154785
    5. '(split' → logprob: -13.250725746154785
    6. ')' → logprob: -16.37572479248047
    7. 'spl' → logprob: -16.50072479248047
    8. 'read' → logprob: -16.75072479248047
    9. 's' → logprob: -18.12572479248047
    10. 'replace' → logprob: -18.25072479248047

Token 10: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.026990247890353203
    2. '))' → logprob: -3.9019901752471924
    3. '())' → logprob: -5.4019904136657715
    4. '()' → logprob: -7.2769904136657715
    5. '('' → logprob: -7.5269904136657715
    6. '())))' → logprob: -8.151989936828613
    7. '(' → logprob: -8.276989936828613
    8. ')' → logprob: -10.026989936828613
    9. ''))' → logprob: -10.651989936828613
    10. ')))' → logprob: -10.651989936828613

Token 11: ' for' (ID: 395)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06362458318471909
    2. ']' → logprob: -3.188624620437622
    3. ')' → logprob: -3.938624620437622
    4. '()]' → logprob: -7.813624382019043
    5. '),' → logprob: -9.313624382019043
    6. 'for' → logprob: -9.438624382019043
    7. '])' → logprob: -9.563624382019043
    8. '])]' → logprob: -9.813624382019043
    9. '`]' → logprob: -9.938624382019043
    10. ')])' → logprob: -10.188624382019043

Token 12: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004252319689840078
    2. 'range' → logprob: -6.3792524337768555
    3. ' ' → logprob: -7.0042524337768555
    4. ' row' → logprob: -7.2542524337768555
    5. ' i' → logprob: -7.8792524337768555
    6. ' _' → logprob: -8.629252433776855
    7. '_' → logprob: -9.379252433776855
    8. ' rows' → logprob: -9.754252433776855
    9. '_range' → logprob: -10.129252433776855
    10. '(range' → logprob: -10.379252433776855

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11286191642284393
    2. 'in' → logprob: -2.2378618717193604
    3. '<|end|>' → logprob: -11.237861633300781
    4. 'range' → logprob: -11.737861633300781
    5. 'import' → logprob: -11.862861633300781
    6. '_' → logprob: -12.737861633300781
    7. ' ' → logprob: -13.237861633300781
    8. 's' → logprob: -13.487861633300781
    9. '	in' → logprob: -14.237861633300781
    10. '_in' → logprob: -14.237861633300781

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859213903546333
    2. 'range' → logprob: -3.0485920906066895
    3. ' ' → logprob: -13.173592567443848
    4. '	range' → logprob: -13.548592567443848
    5. '(range' → logprob: -14.048592567443848
    6. ' xrange' → logprob: -14.548592567443848
    7. '_range' → logprob: -15.548592567443848
    8. '-range' → logprob: -17.29859161376953
    9. ' in' → logprob: -17.54859161376953
    10. '  ' → logprob: -17.54859161376953

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.576873758807778e-05
    2. '(len' → logprob: -9.500075340270996
    3. '(n' → logprob: -15.625075340270996
    4. '(
' → logprob: -15.875075340270996
    5. ' (' → logprob: -15.875075340270996
    6. ')' → logprob: -16.125076293945312
    7. '```' → logprob: -16.500076293945312
    8. '(int' → logprob: -16.875076293945312
    9. '()' → logprob: -17.000076293945312
    10. ')(' → logprob: -17.125076293945312

Token 16: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1107335165143013
    2. '9' → logprob: -3.2357335090637207
    3. 'int' → logprob: -3.7357335090637207
    4. '5' → logprob: -3.9857335090637207
    5. '4' → logprob: -4.860733509063721
    6. '10' → logprob: -4.985733509063721
    7. 'n' → logprob: -5.735733509063721
    8. '6' → logprob: -6.110733509063721
    9. 'len' → logprob: -6.735733509063721
    10. '8' → logprob: -7.735733509063721

Token 17: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.167648876318708e-05
    2. ')' → logprob: -10.375041961669922
    3. ']' → logprob: -11.750041961669922
    4. ')])' → logprob: -13.625041961669922
    5. '])]' → logprob: -14.875041961669922
    6. ' )' → logprob: -15.375041961669922
    7. '')]' → logprob: -15.500041961669922
    8. ')],' → logprob: -16.000041961669922
    9. '])' → logprob: -16.375041961669922
    10. '))' → logprob: -16.375041961669922

Token 18: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12075718492269516
    2. '[' → logprob: -2.8707571029663086
    3. ']' → logprob: -3.4957571029663086
    4. ',' → logprob: -4.870757102966309
    5. '#' → logprob: -5.120757102966309
    6. ')' → logprob: -5.245757102966309
    7. '```' → logprob: -7.120757102966309
    8. 'for' → logprob: -7.245757102966309
    9. ''' → logprob: -7.370757102966309
    10. '\' → logprob: -7.495757102966309

Token 19: ' op' (ID: 991)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06435409188270569
    2. ' space' → logprob: -3.439354181289673
    3. ' calculate' → logprob: -4.939353942871094
    4. ' find' → logprob: -5.189353942871094
    5. ' process' → logprob: -5.564353942871094
    6. ' check' → logprob: -6.439353942871094
    7. ' table' → logprob: -6.939353942871094
    8. ' a' → logprob: -7.189353942871094
    9. ' solve' → logprob: -7.189353942871094
    10. ' is' → logprob: -7.314353942871094

Token 20: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6918604969978333
    2. '_' → logprob: -1.1918604373931885
    3. 'a' → logprob: -3.3168604373931885
    4. 'er' → logprob: -3.4418604373931885
    5. 'en' → logprob: -3.6918604373931885
    6. '()' → logprob: -3.9418604373931885
    7. '=' → logprob: -4.566860675811768
    8. 'e' → logprob: -4.941860675811768
    9. '(en' → logprob: -5.066860675811768
    10. '```' → logprob: -5.066860675811768

Token 21: ',y' (ID: 16103)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3113636076450348
    2. '):' → logprob: -1.8113635778427124
    3. ',' → logprob: -2.686363697052002
    4. '[' → logprob: -3.561363697052002
    5. '+' → logprob: -5.561363697052002
    6. '_' → logprob: -6.936363697052002
    7. ':' → logprob: -8.186363220214844
    8. ' ,' → logprob: -8.186363220214844
    9. '=' → logprob: -8.561363220214844
    10. '*' → logprob: -8.686363220214844

Token 22: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08022994548082352
    2. ')' → logprob: -2.5802299976348877
    3. ',' → logprob: -6.830229759216309
    4. ' ):' → logprob: -8.830229759216309
    5. ':' → logprob: -10.205229759216309
    6. ')]' → logprob: -11.205229759216309
    7. ' )' → logprob: -11.455229759216309
    8. '+' → logprob: -11.580229759216309
    9. ']:' → logprob: -11.705229759216309
    10. '):
' → logprob: -12.080229759216309

Token 23: ' return' (ID: 622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.345211386680603
    2. '   ' → logprob: -2.3452115058898926
    3. ' ' → logprob: -2.4702115058898926
    4. '(' → logprob: -2.8452115058898926
    5. ' :' → logprob: -3.7202115058898926
    6. '    ' → logprob: -4.720211505889893
    7. ' (' → logprob: -5.220211505889893
    8. ')' → logprob: -5.345211505889893
    9. '):' → logprob: -5.845211505889893
    10. ''' → logprob: -6.470211505889893

Token 24: ' table' (ID: 3293)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7825383543968201
    2. ' x' → logprob: -1.5325384140014648
    3. 'table' → logprob: -1.9075384140014648
    4. ' table' → logprob: -2.407538414001465
    5. 'abs' → logprob: -4.157538414001465
    6. '(' → logprob: -4.282538414001465
    7. ' (' → logprob: -4.282538414001465
    8. ' abs' → logprob: -4.782538414001465
    9. ' max' → logprob: -5.032538414001465
    10. '1' → logprob: -5.282538414001465

Token 25: '[x' (ID: 17295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.639194905757904
    2. '[x' → logprob: -0.764194905757904
    3. '[y' → logprob: -5.139194965362549
    4. '[max' → logprob: -8.38919448852539
    5. ' [' → logprob: -9.13919448852539
    6. '[
' → logprob: -9.76419448852539
    7. '[row' → logprob: -9.88919448852539
    8. '[t' → logprob: -10.51419448852539
    9. '[int' → logprob: -10.51419448852539
    10. '[word' → logprob: -10.63919448852539

Token 26: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008415495976805687
    2. ']' → logprob: -7.5008416175842285
    3. '[y' → logprob: -8.75084114074707
    4. '[' → logprob: -9.50084114074707
    5. ' ][' → logprob: -10.00084114074707
    6. '   ' → logprob: -13.25084114074707
    7. '])' → logprob: -13.37584114074707
    8. '"][' → logprob: -14.12584114074707
    9. ''][' → logprob: -14.25084114074707
    10. '-' → logprob: -14.37584114074707

Token 27: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.493430894101039e-05
    2. ' y' → logprob: -9.500075340270996
    3. '	y' → logprob: -17.12507438659668
    4. ' ' → logprob: -17.75007438659668
    5. '0' → logprob: -18.00007438659668
    6. ')y' → logprob: -18.25007438659668
    7. ']' → logprob: -19.25007438659668
    8. 'x' → logprob: -19.62507438659668
    9. 'yj' → logprob: -20.00007438659668
    10. ''y' → logprob: -20.12507438659668

Token 28: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03863519802689552
    2. ')' → logprob: -3.28863525390625
    3. '[' → logprob: -8.03863525390625
    4. '])' → logprob: -8.78863525390625
    5. ' ]' → logprob: -9.78863525390625
    6. ')]' → logprob: -10.03863525390625
    7. ' )' → logprob: -12.41363525390625
    8. '+' → logprob: -12.91363525390625
    9. ']+' → logprob: -13.16363525390625
    10. '[x' → logprob: -13.28863525390625

Token 29: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7744839191436768
    2. '(' → logprob: -1.2744839191436768
    3. '.' → logprob: -2.5244839191436768
    4. '*' → logprob: -2.7744839191436768
    5. '[' → logprob: -3.1494839191436768
    6. ')' → logprob: -4.274483680725098
    7. ':' → logprob: -4.274483680725098
    8. '<|end|>' → logprob: -4.399483680725098
    9. '#' → logprob: -5.149483680725098
    10. ',' → logprob: -5.274483680725098

Token 30: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.40143266320228577
    2. ' max' → logprob: -1.9014326333999634
    3. ' op' → logprob: -3.651432752609253
    4. ' sum' → logprob: -4.026432514190674
    5. ' solve' → logprob: -4.276432514190674
    6. 'main' → logprob: -4.276432514190674
    7. ' add' → logprob: -4.401432514190674
    8. 'max' → logprob: -4.776432514190674
    9. ' dfs' → logprob: -4.901432514190674
    10. ' min' → logprob: -5.151432514190674

Token 31: '_ss' (ID: 61028)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03360317274928093
    2. '(x' → logprob: -3.5336031913757324
    3. '(row' → logprob: -6.283603191375732
    4. '(table' → logprob: -7.658603191375732
    5. '_' → logprob: -7.783603191375732
    6. '(a' → logprob: -8.033602714538574
    7. ' (' → logprob: -8.908602714538574
    8. '(i' → logprob: -9.033602714538574
    9. '(rows' → logprob: -9.658602714538574
    10. '((' → logprob: -9.658602714538574

Token 32: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37868204712867737
    2. '(i' → logprob: -1.753682017326355
    3. '(x' → logprob: -3.0036821365356445
    4. 's' → logprob: -4.1286821365356445
    5. '(s' → logprob: -4.2536821365356445
    6. '(a' → logprob: -4.2536821365356445
    7. '(row' → logprob: -4.5036821365356445
    8. '_' → logprob: -4.8786821365356445
    9. 'q' → logprob: -5.6286821365356445
    10. 'a' → logprob: -5.8786821365356445

Token 33: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15998288989067078
    2. '_' → logprob: -2.409982919692993
    3. '_(' → logprob: -3.659982919692993
    4. '(x' → logprob: -4.534982681274414
    5. '_s' → logprob: -4.909982681274414
    6. 's' → logprob: -5.034982681274414
    7. '(_' → logprob: -5.659982681274414
    8. '(_)' → logprob: -6.284982681274414
    9. '(a' → logprob: -7.409982681274414
    10. ' (' → logprob: -8.034982681274414

Token 34: 'igits' (ID: 64824)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6316849589347839
    2. 'igits' → logprob: -1.2566850185394287
    3. '):' → logprob: -2.7566850185394287
    4. 'igit' → logprob: -3.2566850185394287
    5. ')' → logprob: -3.6316850185394287
    6. '(x' → logprob: -4.88168478012085
    7. 'ay' → logprob: -4.88168478012085
    8. 'e' → logprob: -5.38168478012085
    9. 'd' → logprob: -5.50668478012085
    10. '[' → logprob: -5.75668478012085

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002885237103328109
    2. ',' → logprob: -6.502885341644287
    3. ')' → logprob: -7.002885341644287
    4. '[' → logprob: -8.752884864807129
    5. ' ):' → logprob: -9.252884864807129
    6. '[]):' → logprob: -9.252884864807129
    7. ']:' → logprob: -10.377884864807129
    8. '(' → logprob: -11.002884864807129
    9. ',d' → logprob: -11.127884864807129
    10. ':' → logprob: -11.127884864807129

Token 36: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1188458800315857
    2. ' (' → logprob: -2.9938459396362305
    3. '   ' → logprob: -3.4938459396362305
    4. ':' → logprob: -3.8688459396362305
    5. ' ' → logprob: -5.3688459396362305
    6. ' :' → logprob: -6.7438459396362305
    7. '(d' → logprob: -7.4938459396362305
    8. ' ():' → logprob: -7.6188459396362305
    9. '[' → logprob: -7.7438459396362305
    10. '    ' → logprob: -7.9938459396362305

Token 37: ' res' (ID: 694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9939476251602173
    2. ' for' → logprob: -0.9939476251602173
    3. '   ' → logprob: -2.8689475059509277
    4. 'for' → logprob: -3.1189475059509277
    5. ' return' → logprob: -3.8689475059509277
    6. ' if' → logprob: -3.9939475059509277
    7. ' n' → logprob: -4.118947505950928
    8. ' s' → logprob: -4.118947505950928
    9. 'd' → logprob: -4.493947505950928
    10. 's' → logprob: -4.618947505950928

Token 38: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.8376038670539856
    2. ' =' → logprob: -0.9626038670539856
    3. '=' → logprob: -1.7126038074493408
    4. 'ults' → logprob: -5.71260404586792
    5. 'ul' → logprob: -7.71260404586792
    6. ' ' → logprob: -7.71260404586792
    7. 'u' → logprob: -8.462603569030762
    8. 'ultat' → logprob: -8.587603569030762
    9. ' ult' → logprob: -9.087603569030762
    10. 'ulta' → logprob: -9.212603569030762

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6230274438858032
    2. '0' → logprob: -1.1230274438858032
    3. ' []' → logprob: -2.7480273246765137
    4. ' True' → logprob: -3.6230273246765137
    5. ' digits' → logprob: -4.623027324676514
    6. ' all' → logprob: -4.998027324676514
    7. '1' → logprob: -5.248027324676514
    8. ' [' → logprob: -5.498027324676514
    9. ' sum' → logprob: -5.498027324676514
    10. '[]' → logprob: -5.748027324676514

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05048433691263199
    2. 'sum' → logprob: -3.3004844188690186
    3. '[]' → logprob: -5.8004841804504395
    4. 'True' → logprob: -5.9254841804504395
    5. '[' → logprob: -6.4254841804504395
    6. 'digits' → logprob: -6.4254841804504395
    7. 'False' → logprob: -6.8004841804504395
    8. '1' → logprob: -7.4254841804504395
    9. '(' → logprob: -7.6754841804504395
    10. ' ' → logprob: -8.050484657287598

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.362030953168869
    2. '<|end|>' → logprob: -1.8620309829711914
    3. ' ' → logprob: -2.9870309829711914
    4. ' for' → logprob: -3.1120309829711914
    5. 'for' → logprob: -3.7370309829711914
    6. '    ' → logprob: -4.987030982971191
    7. '  ' → logprob: -5.237030982971191
    8. ',' → logprob: -5.237030982971191
    9. ')' → logprob: -6.237030982971191
    10. '+' → logprob: -6.487030982971191

Token 42: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6729989647865295
    2. 'for' → logprob: -1.0479989051818848
    3. '   ' → logprob: -2.1729989051818848
    4. ' ' → logprob: -3.9229989051818848
    5. '    ' → logprob: -6.172998905181885
    6. '	for' → logprob: -6.672998905181885
    7. '  ' → logprob: -7.672998905181885
    8. '+' → logprob: -8.047999382019043
    9. '<|end|>' → logprob: -8.547999382019043
    10. '*' → logprob: -8.547999382019043

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6967292428016663
    2. 'for' (adapté à ' for') → logprob: -0.6967292428016663
    3. '   ' → logprob: -5.6967291831970215
    4. ' ' → logprob: -9.32172966003418
    5. '	for' → logprob: -9.94672966003418
    6. 'n' → logprob: -10.82172966003418
    7. '```' → logprob: -11.19672966003418
    8. '
' → logprob: -11.57172966003418
    9. 'i' → logprob: -12.32172966003418
    10. 'd' → logprob: -12.44672966003418

Token 44: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01268010213971138
    2. ' ' → logprob: -5.3876800537109375
    3. 'i' → logprob: -5.5126800537109375
    4. ' _' → logprob: -6.3876800537109375
    5. '_' → logprob: -7.1376800537109375
    6. ' digit' → logprob: -7.3876800537109375
    7. ' d' → logprob: -8.137680053710938
    8. ' range' → logprob: -8.762680053710938
    9. 'digit' → logprob: -8.887680053710938
    10. ' idx' → logprob: -9.262680053710938

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006318612489849329
    2. 'in' → logprob: -5.50631856918335
    3. ',' → logprob: -7.38131856918335
    4. ' ' → logprob: -7.63131856918335
    5. 'i' → logprob: -8.006319046020508
    6. ' i' → logprob: -8.381319046020508
    7. '   ' → logprob: -8.881319046020508
    8. 'ex' → logprob: -9.006319046020508
    9. 'igits' → logprob: -9.756319046020508
    10. '  ' → logprob: -9.881319046020508

Token 46: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.1645071804523468
    2. 'digits' → logprob: -2.2895071506500244
    3. ' range' → logprob: -3.0395071506500244
    4. 'range' → logprob: -6.0395073890686035
    5. ' ' → logprob: -9.539506912231445
    6. 'd' → logprob: -11.789506912231445
    7. 'igits' → logprob: -11.789506912231445
    8. '  ' → logprob: -12.102006912231445
    9. '[' → logprob: -12.227006912231445
    10. 'enumer' → logprob: -12.977006912231445

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019735967740416527
    2. '   ' → logprob: -5.144735813140869
    3. '*' → logprob: -5.269735813140869
    4. '       ' → logprob: -6.144735813140869
    5. ' *' → logprob: -6.269735813140869
    6. '=' → logprob: -6.519735813140869
    7. '):' → logprob: -6.894735813140869
    8. ' :' → logprob: -8.019736289978027
    9. ',' → logprob: -8.019736289978027
    10. '    ' → logprob: -8.519736289978027

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48136916756629944
    2. ' res' → logprob: -1.731369137763977
    3. '   ' → logprob: -2.2313692569732666
    4. 'res' → logprob: -3.1063692569732666
    5. ' ' → logprob: -3.8563692569732666
    6. '    ' → logprob: -3.8563692569732666
    7. ',' → logprob: -6.2313690185546875
    8. '+' → logprob: -7.3563690185546875
    9. '  ' → logprob: -7.4813690185546875
    10. '*' → logprob: -7.4813690185546875

Token 49: ' res' (ID: 694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5227960348129272
    2. ' res' → logprob: -1.3977960348129272
    3. 'res' (adapté à ' res') → logprob: -2.647796154022217
    4. '    ' → logprob: -3.272796154022217
    5. ' 
' → logprob: -3.272796154022217
    6. '       ' → logprob: -5.897796154022217
    7. '   ' → logprob: -6.397796154022217
    8. ' ' → logprob: -6.397796154022217
    9. '+' → logprob: -6.772796154022217
    10. '        ' → logprob: -6.897796154022217

Token 50: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10142969340085983
    2. '+=' → logprob: -2.3514297008514404
    3. '=' → logprob: -7.101429462432861
    4. ' =' → logprob: -9.10142993927002
    5. ' ^=' → logprob: -9.22642993927002
    6. ' *=' → logprob: -9.60142993927002
    7. ' ' → logprob: -10.10142993927002
    8. ' <<=' → logprob: -10.35142993927002
    9. '*=' → logprob: -11.22642993927002
    10. ' -=' → logprob: -11.47642993927002

Token 51: ' op' (ID: 991)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.007620114367455244
    2. 'res' → logprob: -5.007620334625244
    3. ' (' → logprob: -7.507620334625244
    4. '(res' → logprob: -8.007619857788086
    5. ' ' → logprob: -11.507619857788086
    6. '(' → logprob: -12.507619857788086
    7. '10' → logprob: -12.882619857788086
    8. '	res' → logprob: -13.382619857788086
    9. '_res' → logprob: -14.695119857788086
    10. ' ' → logprob: -14.695119857788086

Token 52: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.10339245200157166
    2. '(' → logprob: -2.9783923625946045
    3. '(x' → logprob: -3.7283923625946045
    4. '(d' → logprob: -4.103392601013184
    5. 'res' → logprob: -5.228392601013184
    6. 'd' → logprob: -8.103392601013184
    7. '('' → logprob: -8.603392601013184
    8. 'x' → logprob: -9.103392601013184
    9. 'es' → logprob: -9.103392601013184
    10. ' ' → logprob: -9.478392601013184

Token 53: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.05491669848561287
    2. ',' → logprob: -2.9299166202545166
    3. ' ,' → logprob: -11.179916381835938
    4. 'd' → logprob: -11.179916381835938
    5. ',int' → logprob: -13.679916381835938
    6. ' ' → logprob: -14.179916381835938
    7. ',len' → logprob: -14.304916381835938
    8. '	d' → logprob: -14.804916381835938
    9. ',x' → logprob: -15.429916381835938
    10. '，' → logprob: -15.554916381835938

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002479886752553284
    2. ' )' → logprob: -9.000247955322266
    3. '))' → logprob: -9.250247955322266
    4. ')`' → logprob: -12.125247955322266
    5. ')
' → logprob: -12.375247955322266
    6. ')+' → logprob: -12.750247955322266
    7. '`)' → logprob: -13.000247955322266
    8. ')*' → logprob: -13.500247955322266
    9. '+' → logprob: -13.625247955322266
    10. '),' → logprob: -13.750247955322266

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13441400229930878
    2. ' ' → logprob: -3.634413957595825
    3. '
' → logprob: -3.759413957595825
    4. ' return' → logprob: -4.134414196014404
    5. '+' → logprob: -4.384414196014404
    6. '    
' → logprob: -4.509414196014404
    7. '    ' → logprob: -5.009414196014404
    8. 'return' → logprob: -5.009414196014404
    9. ')' → logprob: -5.634414196014404
    10. '  ' → logprob: -5.634414196014404

Token 56: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1003199815750122
    2. ' ' → logprob: -1.2253199815750122
    3. ' return' → logprob: -1.7253199815750122
    4. 'return' (adapté à ' return') → logprob: -2.2253198623657227
    5. ' if' → logprob: -3.4753198623657227
    6. '
' → logprob: -3.7253198623657227
    7. '  ' → logprob: -5.225319862365723
    8. ' ==' → logprob: -5.475319862365723
    9. 'if' → logprob: -5.600319862365723
    10. '==' → logprob: -5.600319862365723

Token 57: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.1811172366142273
    2. 'res' → logprob: -1.806117296218872
    3. ' op' → logprob: -7.181117057800293
    4. ' ' → logprob: -8.681117057800293
    5. ' True' → logprob: -8.806117057800293
    6. 'op' → logprob: -9.306117057800293
    7. 'True' → logprob: -10.306117057800293
    8. ' ' → logprob: -10.556117057800293
    9. '(res' → logprob: -10.681117057800293
    10. ' False' → logprob: -11.306117057800293

Token 58: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5171818733215332
    2. '<|end|>' → logprob: -1.0171818733215332
    3. '
' → logprob: -4.267181873321533
    4. ' ' → logprob: -4.767181873321533
    5. '[' → logprob: -5.392181873321533
    6. '(
' → logprob: -5.642181873321533
    7. ')' → logprob: -5.642181873321533
    8. '()' → logprob: -6.642181873321533
    9. '%' → logprob: -6.767181873321533
    10. '<|end|>' → logprob: -7.017181873321533

Token 59: 'count' (ID: 5420)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3441331386566162
    2. '=' → logprob: -1.8441331386566162
    3. '(' → logprob: -2.469133138656616
    4. ' ' → logprob: -3.844133138656616
    5. '_' → logprob: -3.969133138656616
    6. '[' → logprob: -5.844133377075195
    7. '  ' → logprob: -6.969133377075195
    8. 's' → logprob: -7.094133377075195
    9. ')' → logprob: -7.094133377075195
    10. ' (' → logprob: -7.969133377075195

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231648087501526
    2. ' ' → logprob: -0.8981648087501526
    3. '{}' → logprob: -10.898164749145508
    4. ' [' → logprob: -11.773164749145508
    5. '[' → logprob: -12.523164749145508
    6. ' {}' → logprob: -12.773164749145508
    7. '1' → logprob: -13.523164749145508
    8. ' ' → logprob: -13.648164749145508
    9. '{' → logprob: -13.773164749145508
    10. 'int' → logprob: -13.898164749145508

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029959288076497614
    2. '[' → logprob: -9.000299453735352
    3. '{}' → logprob: -9.375299453735352
    4. ' ' → logprob: -10.125299453735352
    5. 'int' → logprob: -10.375299453735352
    6. '{' → logprob: -12.000299453735352
    7. '[int' → logprob: -12.250299453735352
    8. 'sum' → logprob: -12.375299453735352
    9. '1' → logprob: -13.250299453735352
    10. '[]' → logprob: -14.250299453735352

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7725922465324402
    2. '<|end|>' → logprob: -0.7725922465324402
    3. 'for' → logprob: -2.897592306137085
    4. ' for' → logprob: -4.522592067718506
    5. '\n' → logprob: -5.022592067718506
    6. '<|end|>' → logprob: -6.522592067718506
    7. ' 
' → logprob: -6.897592067718506
    8. '  
' → logprob: -8.397592544555664
    9. '```' → logprob: -8.397592544555664
    10. '
' → logprob: -8.522592544555664

Token 64: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0718042328953743
    2. '<|end|>' → logprob: -3.4468042850494385
    3. ' for' → logprob: -3.5718042850494385
    4. '
' → logprob: -4.696804046630859
    5. '```' → logprob: -9.57180404663086
    6. '<|end|>' → logprob: -9.82180404663086
    7. '\n' → logprob: -11.19680404663086
    8. '[' → logprob: -11.57180404663086
    9. ',' → logprob: -11.82180404663086
    10. '0' → logprob: -11.94680404663086

Token 65: ' num' (ID: 2269)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.11750221997499466
    2. ' i' → logprob: -2.992502212524414
    3. '_' → logprob: -3.242502212524414
    4. ' ' → logprob: -3.867502212524414
    5. ' r' → logprob: -8.242502212524414
    6. ' range' → logprob: -8.492502212524414
    7. ' row' → logprob: -9.117502212524414
    8. ' x' → logprob: -9.617502212524414
    9. ' s' → logprob: -10.867502212524414
    10. ' xrange' → logprob: -11.367502212524414

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006750543136149645
    2. 'in' → logprob: -5.131750583648682
    3. '_' → logprob: -8.006750106811523
    4. 's' → logprob: -8.631750106811523
    5. ' ' → logprob: -9.381750106811523
    6. ' i' → logprob: -9.881750106811523
    7. '1' → logprob: -9.881750106811523
    8. '  ' → logprob: -10.756750106811523
    9. 'space' → logprob: -10.756750106811523
    10. 'range' → logprob: -11.256750106811523

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.000740538293030113
    2. 'range' → logprob: -7.2507405281066895
    3. '(range' → logprob: -11.000741004943848
    4. '	range' → logprob: -11.500741004943848
    5. ' ' → logprob: -13.000741004943848
    6. ' xrange' → logprob: -14.000741004943848
    7. '[' → logprob: -15.000741004943848
    8. '_range' → logprob: -16.25074005126953
    9. '.range' → logprob: -16.75074005126953
    10. '```' → logprob: -17.00074005126953

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. ' (' → logprob: -13.250001907348633
    3. '(
' → logprob: -17.625001907348633
    4. ' ' → logprob: -18.375001907348633
    5. '((' → logprob: -18.375001907348633
    6. '(-' → logprob: -18.750001907348633
    7. '(int' → logprob: -19.375001907348633
    8. '(len' → logprob: -19.500001907348633
    9. '<|end|>' → logprob: -19.500001907348633
    10. '(

' → logprob: -19.625001907348633

Token 69: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.04005236551165581
    2. '10' → logprob: -4.04005241394043
    3. '0' → logprob: -4.66505241394043
    4. '1' → logprob: -5.04005241394043
    5. '111' → logprob: -5.91505241394043
    6. ' ' → logprob: -7.04005241394043
    7. '000' → logprob: -7.16505241394043
    8. '999' → logprob: -7.29005241394043
    9. '123' → logprob: -8.29005241394043
    10. '900' → logprob: -9.91505241394043

Token 70: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.14113649725914001
    2. '0' → logprob: -2.141136407852173
    3. '_' → logprob: -5.016136646270752
    4. '00' → logprob: -5.266136646270752
    5. ',' → logprob: -6.891136646270752
    6. '):' → logprob: -7.141136646270752
    7. ' ' → logprob: -8.391136169433594
    8. '):
' → logprob: -9.516136169433594
    9. '```' → logprob: -9.766136169433594
    10. ')' → logprob: -10.391136169433594

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017803760711103678
    2. ' ):' → logprob: -7.2517805099487305
    3. ':' → logprob: -7.6267805099487305
    4. ',' → logprob: -8.12678050994873
    5. '+' → logprob: -9.37678050994873
    6. '0' → logprob: -9.37678050994873
    7. '):
' → logprob: -9.50178050994873
    8. '000' → logprob: -11.62678050994873
    9. ')' → logprob: -12.00178050994873
    10. '100' → logprob: -12.12678050994873

Token 72: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18397974967956543
    2. '   ' → logprob: -1.8089797496795654
    3. ':
' → logprob: -6.6839799880981445
    4. ' :' → logprob: -6.6839799880981445
    5. ',' → logprob: -7.6839799880981445
    6. '):' → logprob: -8.058979988098145
    7. '    
' → logprob: -8.183979988098145
    8. ' ' → logprob: -8.558979988098145
    9. '```' → logprob: -9.058979988098145
    10. '<|end|>' → logprob: -9.558979988098145

Token 73: ' digits' (ID: 37806)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6685896515846252
    2. '   ' → logprob: -1.5435895919799805
    3. '    ' → logprob: -1.9185895919799805
    4. ':' → logprob: -2.7935895919799805
    5. ' :' → logprob: -3.7935895919799805
    6. ' if' → logprob: -4.7935895919799805
    7. '     
' → logprob: -5.0435895919799805
    8. '  ' → logprob: -5.2935895919799805
    9. ' 
' → logprob: -5.2935895919799805
    10. '    
' → logprob: -5.6685895919799805

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002478508511558175
    2. '=' → logprob: -6.00247859954834
    3. ' ' → logprob: -14.50247859954834
    4. ')' → logprob: -14.50247859954834
    5. ' =[' → logprob: -15.12747859954834
    6. '_' → logprob: -15.37747859954834
    7. '	' → logprob: -15.37747859954834
    8. ',' → logprob: -15.75247859954834
    9. ' ' → logprob: -15.87747859954834
    10. '[' → logprob: -16.252477645874023

Token 75: ' [(' (ID: 43900)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3224855065345764
    2. '[' → logprob: -1.9474854469299316
    3. ' list' → logprob: -3.1974854469299316
    4. '[list' → logprob: -3.1974854469299316
    5. '[f' → logprob: -3.3224854469299316
    6. 'list' → logprob: -4.572485446929932
    7. '[str' → logprob: -5.947485446929932
    8. '[int' → logprob: -7.572485446929932
    9. '[len' → logprob: -7.947485446929932
    10. ' f' → logprob: -8.19748592376709

Token 76: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.026331651955842972
    2. ' num' → logprob: -3.651331663131714
    3. 'int' → logprob: -11.651331901550293
    4. '   ' → logprob: -11.776331901550293
    5. '(num' → logprob: -12.151331901550293
    6. ' ' → logprob: -12.651331901550293
    7. 'n' → logprob: -13.651331901550293
    8. '10' → logprob: -14.276331901550293
    9. '	num' → logprob: -14.276331901550293
    10. ' (' → logprob: -14.401331901550293

Token 77: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.12703584134578705
    2. '//' → logprob: -2.1270358562469482
    3. ' ' → logprob: -10.002036094665527
    4. ')//' → logprob: -10.252036094665527
    5. '   ' → logprob: -11.377036094665527
    6. ' >>' → logprob: -12.002036094665527
    7. '>>' → logprob: -12.502036094665527
    8. ')' → logprob: -12.877036094665527
    9. '  ' → logprob: -14.002036094665527
    10. ' //(' → logprob: -14.127036094665527

Token 78: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01275649480521679
    2. ' ' → logprob: -4.38775634765625
    3. '  ' → logprob: -9.01275634765625
    4. '10' → logprob: -10.01275634765625
    5. '(' → logprob: -10.63775634765625
    6. '1' → logprob: -11.01275634765625
    7. '   ' → logprob: -11.13775634765625
    8. '{' → logprob: -11.26275634765625
    9. '    ' → logprob: -13.26275634765625
    10. '```' → logprob: -13.51275634765625

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004869186959695071
    2. ')' → logprob: -7.875486850738525
    3. ')%' → logprob: -9.250487327575684
    4. '%' → logprob: -11.625487327575684
    5. ' ' → logprob: -13.625487327575684
    6. '   ' → logprob: -16.000486373901367
    7. ' %' → logprob: -16.375486373901367
    8. '    ' → logprob: -16.375486373901367
    9. '  ' → logprob: -16.500486373901367
    10. '۰' → logprob: -17.375486373901367

Token 80: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18313609063625336
    2. ')%' → logprob: -1.8081361055374146
    3. ' )' → logprob: -6.058135986328125
    4. '%' → logprob: -7.058135986328125
    5. ' %' → logprob: -9.308135986328125
    6. '),' → logprob: -9.433135986328125
    7. '%)' → logprob: -12.433135986328125
    8. ' ),' → logprob: -12.933135986328125
    9. ' ' → logprob: -13.183135986328125
    10. '<|end|>' → logprob: -13.558135986328125

Token 81: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.750003814697266
    3. '1' → logprob: -15.125003814697266
    4. '   ' → logprob: -15.500003814697266
    5. '```' → logprob: -15.500003814697266
    6. '{' → logprob: -16.250003814697266
    7. '100' → logprob: -17.000003814697266
    8. '>' → logprob: -17.000003814697266
    9. '  ' → logprob: -17.250003814697266
    10. '`' → logprob: -17.500003814697266

Token 82: ',(' (ID: 27243)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18034382164478302
    2. ' ,' → logprob: -1.8053438663482666
    3. ' ' → logprob: -9.055343627929688
    4. ',
' → logprob: -9.180343627929688
    5. ',d' → logprob: -9.180343627929688
    6. '),' → logprob: -9.555343627929688
    7. ' ],' → logprob: -10.055343627929688
    8. ' ]' → logprob: -10.305343627929688
    9. '],' → logprob: -10.430343627929688
    10. ']' → logprob: -10.930343627929688

Token 83: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0009418348199687898
    2. ' num' → logprob: -7.000941753387451
    3. '(num' → logprob: -10.50094223022461
    4. ' ' → logprob: -12.87594223022461
    5. '	num' → logprob: -16.12594223022461
    6. '   ' → logprob: -17.12594223022461
    7. ',num' → logprob: -17.37594223022461
    8. '  ' → logprob: -18.00094223022461
    9. ' (' → logprob: -18.62594223022461
    10. 'nu' → logprob: -18.62594223022461

Token 84: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -2.522638169466518e-05
    2. ' //' → logprob: -10.750024795532227
    3. ')//' → logprob: -12.875024795532227
    4. '//=' → logprob: -14.750024795532227
    5. '>//' → logprob: -15.875024795532227
    6. '/' → logprob: -16.250024795532227
    7. '```' → logprob: -16.375024795532227
    8. '://' → logprob: -17.000024795532227
    9. '100' → logprob: -17.000024795532227
    10. '%' → logprob: -17.375024795532227

Token 85: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.001936485292389989
    2. ' ' → logprob: -6.251936435699463
    3. '  ' → logprob: -12.501936912536621
    4. '10' → logprob: -12.626936912536621
    5. '500' → logprob: -15.251936912536621
    6. '1' → logprob: -15.251936912536621
    7. '   ' → logprob: -15.501936912536621
    8. '```' → logprob: -16.126935958862305
    9. '010' → logprob: -17.001935958862305
    10. '１００' → logprob: -17.876935958862305

Token 86: ')%' (ID: 57656)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04095445200800896
    2. ')' → logprob: -3.415954351425171
    3. '<|end|>' → logprob: -5.04095458984375
    4. ' ' → logprob: -8.16595458984375
    5. '2' → logprob: -8.91595458984375
    6. ')>' → logprob: -9.66595458984375
    7. '```' → logprob: -10.04095458984375
    8. '),' → logprob: -10.41595458984375
    9. '   ' → logprob: -10.66595458984375
    10. '<|end|>' → logprob: -11.04095458984375

Token 87: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.750045776367188
    3. '100' → logprob: -10.875045776367188
    4. '  ' → logprob: -12.750045776367188
    5. '```' → logprob: -14.000045776367188
    6. '   ' → logprob: -14.250045776367188
    7. '1' → logprob: -14.750045776367188
    8. '{' → logprob: -14.875045776367188
    9. '``' → logprob: -16.062545776367188
    10. '	' → logprob: -16.125045776367188

Token 88: ',(' (ID: 27243)
  Prédit: ',('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',(' → logprob: -0.03444809094071388
    2. ',' → logprob: -3.4094481468200684
    3. ',num' → logprob: -8.28444766998291
    4. ',[' → logprob: -8.65944766998291
    5. '),(' → logprob: -9.15944766998291
    6. ' ,' → logprob: -9.40944766998291
    7. ',d' → logprob: -9.53444766998291
    8. '',(' → logprob: -10.53444766998291
    9. '   ' → logprob: -11.65944766998291
    10. '",(' → logprob: -11.78444766998291

Token 89: 'num' (ID: 4571)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.4511251449584961
    2. '10' → logprob: -1.451125144958496
    3. 'num' → logprob: -2.076125144958496
    4. ' ' → logprob: -6.451125144958496
    5. '(' → logprob: -6.826125144958496
    6. ' num' → logprob: -7.701125144958496
    7. ' (' → logprob: -9.326125144958496
    8. '[num' → logprob: -9.701125144958496
    9. '50' → logprob: -10.076125144958496
    10. '  ' → logprob: -11.326125144958496

Token 90: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00029029499273747206
    2. '0' → logprob: -8.500289916992188
    3. '/' → logprob: -10.750289916992188
    4. '```' → logprob: -11.125289916992188
    5. '100' → logprob: -11.625289916992188
    6. '400' → logprob: -11.750289916992188
    7. ' //' → logprob: -11.875289916992188
    8. '300' → logprob: -12.000289916992188
    9. '%' → logprob: -12.250289916992188
    10. '1' → logprob: -12.750289916992188

Token 91: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.113290095934644e-05
    2. ' ' → logprob: -9.625081062316895
    3. '0' → logprob: -11.375081062316895
    4. '  ' → logprob: -13.375081062316895
    5. '010' → logprob: -14.375081062316895
    6. '   ' → logprob: -14.625081062316895
    7. '1' → logprob: -15.000081062316895
    8. '100' → logprob: -15.125081062316895
    9. '``' → logprob: -16.25008201599121
    10. '```' → logprob: -16.37508201599121

Token 92: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0005981888971291482
    2. ')' → logprob: -7.500597953796387
    3. ' )' → logprob: -10.875597953796387
    4. '0' → logprob: -11.000597953796387
    5. '%' → logprob: -12.375597953796387
    6. '1' → logprob: -12.750597953796387
    7. ' ' → logprob: -14.000597953796387
    8. '   ' → logprob: -14.500597953796387
    9. '3' → logprob: -16.250598907470703
    10. '2' → logprob: -16.250598907470703

Token 93: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00010318557906430215
    2. '1' → logprob: -9.375102996826172
    3. ' ' → logprob: -11.375102996826172
    4. '0' → logprob: -12.000102996826172
    5. '```' → logprob: -15.375102996826172
    6. '   ' → logprob: -16.125102996826172
    7. '  ' → logprob: -16.625102996826172
    8. ')' → logprob: -16.750102996826172
    9. '	' → logprob: -17.000102996826172
    10. '<|end|>' → logprob: -17.250102996826172

Token 94: ',num' (ID: 78576)
  Prédit: ',('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',(' → logprob: -0.35882577300071716
    2. ',num' → logprob: -1.2338258028030396
    3. ',' → logprob: -5.10882568359375
    4. ',d' → logprob: -5.73382568359375
    5. ',[' → logprob: -7.73382568359375
    6. '),(' → logprob: -8.23382568359375
    7. ' ,' → logprob: -8.23382568359375
    8. ',n' → logprob: -10.85882568359375
    9. '),' → logprob: -11.35882568359375
    10. ')' → logprob: -11.48382568359375

Token 95: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0036822594702243805
    2. ' %' → logprob: -6.3786821365356445
    3. ']' → logprob: -6.8786821365356445
    4. ']%' → logprob: -7.6286821365356445
    5. '[' → logprob: -8.878682136535645
    6. ')]' → logprob: -9.128682136535645
    7. ')' → logprob: -9.378682136535645
    8. ')%' → logprob: -9.628682136535645
    9. '<|end|>' → logprob: -10.878682136535645
    10. '])' → logprob: -11.128682136535645

Token 96: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0022037860471755266
    2. '1' → logprob: -6.127203941345215
    3. ' ' → logprob: -11.002203941345215
    4. '```' → logprob: -14.252203941345215
    5. '   ' → logprob: -14.877203941345215
    6. ']' → logprob: -14.877203941345215
    7. '100' → logprob: -15.002203941345215
    8. ')' → logprob: -16.3772029876709
    9. '  ' → logprob: -16.5022029876709
    10. '0' → logprob: -16.7522029876709

Token 97: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027959682047367096
    2. ' ]' → logprob: -6.502796173095703
    3. ')' → logprob: -7.252796173095703
    4. ')]' → logprob: -7.752796173095703
    5. '   ' → logprob: -9.127796173095703
    6. '])' → logprob: -10.877796173095703
    7. ']:' → logprob: -11.502796173095703
    8. ',' → logprob: -12.127796173095703
    9. ' ' → logprob: -12.377796173095703
    10. ']
' → logprob: -13.002796173095703

Token 98: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8275398015975952
    2. '   ' → logprob: -1.2025398015975952
    3. ' ' → logprob: -2.2025399208068848
    4. ' 
' → logprob: -2.9525399208068848
    5. '<|end|>' → logprob: -3.2025399208068848
    6. '  
' → logprob: -3.8275399208068848
    7. ' if' → logprob: -4.452539920806885
    8. '    
' → logprob: -4.577539920806885
    9. '  ' → logprob: -5.577539920806885
    10. 'if' → logprob: -6.077539920806885

Token 99: ' e' (ID: 319)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21736961603164673
    2. 'if' → logprob: -1.717369556427002
    3. '   ' → logprob: -4.342369556427002
    4. '
' → logprob: -6.842369556427002
    5. ' res' → logprob: -7.467369556427002
    6. 'res' → logprob: -7.967369556427002
    7. ' ' → logprob: -8.34237003326416
    8. ' r' → logprob: -8.96737003326416
    9. ' 
' → logprob: -9.34237003326416
    10. '    
' → logprob: -9.71737003326416

Token 100: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6757939457893372
    2. '=' → logprob: -1.1757938861846924
    3. ' =' → logprob: -2.3007938861846924
    4. 'v' → logprob: -3.3007938861846924
    5. 'm' → logprob: -4.1757941246032715
    6. 'f' → logprob: -5.1757941246032715
    7. 'x' → logprob: -5.5507941246032715
    8. 'n' → logprob: -5.5507941246032715
    9. 'qual' → logprob: -6.0507941246032715
    10. 'p' → logprob: -6.5507941246032715

Token 101: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.018158959224820137
    2. 'check' → logprob: -4.018158912658691
    3. ' ' → logprob: -12.768158912658691
    4. ' count' → logprob: -12.893158912658691
    5. ' op' → logprob: -13.268158912658691
    6. '(check' → logprob: -14.143158912658691
    7. 'count' → logprob: -14.893158912658691
    8. '	check' → logprob: -15.018158912658691
    9. ' ' → logprob: -16.393159866333008
    10. ' table' → logprob: -16.393159866333008

Token 102: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -7.941850526549388e-06
    2. '_s' → logprob: -12.250007629394531
    3. '_' → logprob: -13.125007629394531
    4. '_sn' → logprob: -13.750007629394531
    5. '_digits' → logprob: -18.25000762939453
    6. 'ss' → logprob: -19.00000762939453
    7. ' _' → logprob: -19.37500762939453
    8. '(ss' → logprob: -19.62500762939453
    9. '_(' → logprob: -19.62500762939453
    10. '_sm' → logprob: -20.12500762939453

Token 103: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.35837464465294e-05
    2. 'd' → logprob: -11.375043869018555
    3. 'digits' → logprob: -11.750043869018555
    4. '_digits' → logprob: -12.500043869018555
    5. 'nd' → logprob: -12.625043869018555
    6. 'num' → logprob: -12.750043869018555
    7. 'numbers' → logprob: -13.437543869018555
    8. 'N' → logprob: -13.625043869018555
    9. 'н' → logprob: -13.812543869018555
    10. ' digits' → logprob: -14.187543869018555

Token 104: '([' (ID: 5194)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0007743701571598649
    2. '(' → logprob: -7.250774383544922
    3. 'digits' → logprob: -9.875774383544922
    4. '(div' → logprob: -12.750774383544922
    5. ' digits' → logprob: -12.875774383544922
    6. '([' → logprob: -13.250774383544922
    7. ' (' → logprob: -13.625774383544922
    8. '(
' → logprob: -14.000774383544922
    9. '(s' → logprob: -14.375774383544922
    10. '(numbers' → logprob: -14.625774383544922

Token 105: '0' (ID: 15)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.7088502049446106
    2. 'd' → logprob: -1.2088501453399658
    3. '0' → logprob: -1.8338501453399658
    4. 'e' → logprob: -3.833850145339966
    5. '3' → logprob: -5.083850383758545
    6. '*' → logprob: -5.208850383758545
    7. '   ' → logprob: -5.708850383758545
    8. '1' → logprob: -5.833850383758545
    9. 'num' → logprob: -6.333850383758545
    10. 'i' → logprob: -6.708850383758545

Token 106: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -1.08628511428833
    2. ']' → logprob: -1.21128511428833
    3. ',d' → logprob: -1.71128511428833
    4. ',' → logprob: -1.71128511428833
    5. ' ]' → logprob: -6.33628511428833
    6. '])' → logprob: -7.33628511428833
    7. ' ,' → logprob: -8.086284637451172
    8. ',e' → logprob: -9.336284637451172
    9. '])+' → logprob: -9.336284637451172
    10. '0' → logprob: -9.836284637451172

Token 107: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.005929505452513695
    2. ' digits' → logprob: -5.130929470062256
    3. '[' → logprob: -14.505929946899414
    4. '   ' → logprob: -16.505929946899414
    5. ' ' → logprob: -17.005929946899414
    6. '_digits' → logprob: -17.130929946899414
    7. 'Digits' → logprob: -17.630929946899414
    8. 'd' → logprob: -17.630929946899414
    9. ' [' → logprob: -18.005929946899414
    10. 'digit' → logprob: -18.005929946899414

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004920989274978638
    2. ' )' → logprob: -6.004920959472656
    3. ')
' → logprob: -6.129920959472656
    4. '+' → logprob: -9.879920959472656
    5. ')+' → logprob: -10.629920959472656
    6. ')==' → logprob: -10.629920959472656
    7. '])' → logprob: -10.879920959472656
    8. '[' → logprob: -11.004920959472656
    9. '))' → logprob: -11.004920959472656
    10. ')
' → logprob: -11.379920959472656

Token 109: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44644126296043396
    2. ' if' → logprob: -1.4464412927627563
    3. '<|end|>' → logprob: -3.071441173553467
    4. '   ' → logprob: -3.196441173553467
    5. 'if' → logprob: -4.821441173553467
    6. '    
' → logprob: -4.946441173553467
    7. ' 
' → logprob: -4.946441173553467
    8. '==' → logprob: -5.571441173553467
    9. '  
' → logprob: -5.696441173553467
    10. ' ==' → logprob: -6.196441173553467

Token 110: ' ss' (ID: 20928)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3513200879096985
    2. 'if' → logprob: -1.3513200283050537
    3. ' if' → logprob: -3.3513200283050537
    4. ' ' → logprob: -6.976320266723633
    5. '
' → logprob: -7.601320266723633
    6. 'e' → logprob: -7.726320266723633
    7. '  ' → logprob: -8.851320266723633
    8. '    
' → logprob: -9.976320266723633
    9. '    ' → logprob: -10.476320266723633
    10. ',' → logprob: -10.851320266723633

Token 111: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017386233957950026
    2. 'nid' → logprob: -9.625173568725586
    3. 'if' → logprob: -10.250173568725586
    4. 'N' → logprob: -10.750173568725586
    5. 'num' → logprob: -11.125173568725586
    6. 'ns' → logprob: -11.625173568725586
    7. '_num' → logprob: -11.875173568725586
    8. ' =' → logprob: -12.375173568725586
    9. '_number' → logprob: -12.875173568725586
    10. '=' → logprob: -12.875173568725586

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.147266685962677
    2. '_' → logprob: -2.7722666263580322
    3. ' =' → logprob: -3.5222666263580322
    4. 'if' → logprob: -3.5222666263580322
    5. 's' → logprob: -4.522266864776611
    6. '_=' → logprob: -7.272266864776611
    7. '==' → logprob: -7.397266864776611
    8. 'e' → logprob: -7.897266864776611
    9. ' if' → logprob: -8.272266387939453
    10. '_count' → logprob: -8.272266387939453

Token 113: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -1.6418153047561646
    2. ' str' → logprob: -1.7668153047561646
    3. '"' → logprob: -1.8918153047561646
    4. ' [' → logprob: -2.016815185546875
    5. ' digits' → logprob: -2.266815185546875
    6. 'str' → logprob: -2.891815185546875
    7. '[' → logprob: -2.891815185546875
    8. ' "' → logprob: -3.641815185546875
    9. ' e' → logprob: -4.141815185546875
    10. 'e' → logprob: -4.391815185546875

Token 114: '+[' (ID: 166077)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.921670138835907
    2. '[:]' → logprob: -0.921670138835907
    3. '[::-' → logprob: -2.5466701984405518
    4. '[' → logprob: -3.1716701984405518
    5. '[:' → logprob: -3.5466701984405518
    6. '+[' → logprob: -3.5466701984405518
    7. ' +' → logprob: -4.171669960021973
    8. '.copy' → logprob: -4.796669960021973
    9. '<|end|>' → logprob: -6.671669960021973
    10. '[:-' → logprob: -7.046669960021973

Token 115: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.001267016981728375
    2. ' e' → logprob: -6.751266956329346
    3. '[e' → logprob: -9.876267433166504
    4. '[' → logprob: -10.626267433166504
    5. '0' → logprob: -11.751267433166504
    6. '   ' → logprob: -12.501267433166504
    7. ']' → logprob: -13.001267433166504
    8. ' [' → logprob: -13.501267433166504
    9. ' ' → logprob: -13.626267433166504
    10. ',e' → logprob: -14.126267433166504

Token 116: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.23607668280601501
    2. ']' → logprob: -1.6110767126083374
    3. ']
' → logprob: -5.736076831817627
    4. ' ]
' → logprob: -5.861076831817627
    5. 'if' → logprob: -6.361076831817627
    6. '
' → logprob: -6.611076831817627
    7. ' ]' → logprob: -7.611076831817627
    8. ']

' → logprob: -8.361076354980469
    9. ' if' → logprob: -8.486076354980469
    10. ',' → logprob: -9.111076354980469

Token 117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14252929389476776
    2. ' if' → logprob: -2.267529249191284
    3. '   ' → logprob: -4.142529487609863
    4. 'if' → logprob: -4.892529487609863
    5. '<|end|>' → logprob: -6.267529487609863
    6. '    
' → logprob: -6.642529487609863
    7. '  
' → logprob: -6.892529487609863
    8. '   
' → logprob: -7.767529487609863
    9. ' 
' → logprob: -8.142529487609863
    10. '[' → logprob: -8.142529487609863

Token 118: ' fail' (ID: 7111)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3694387674331665
    2. ' if' → logprob: -1.2444387674331665
    3. '   ' → logprob: -5.119438648223877
    4. '
' → logprob: -5.744438648223877
    5. 'for' → logprob: -5.869438648223877
    6. 'count' → logprob: -5.869438648223877
    7. ' count' → logprob: -6.619438648223877
    8. ' for' → logprob: -6.619438648223877
    9. 'e' → logprob: -7.244438648223877
    10. ' ' → logprob: -7.869438648223877

Token 119: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.6399610638618469
    2. '_' → logprob: -1.7649610042572021
    3. 's' → logprob: -2.389961004257202
    4. 'ures' → logprob: -3.014961004257202
    5. 'ure' → logprob: -3.389961004257202
    6. 'ed' → logprob: -3.514961004257202
    7. '=' → logprob: -3.639961004257202
    8. '_if' → logprob: -3.639961004257202
    9. 'count' → logprob: -4.264961242675781
    10. ' =' → logprob: -4.764961242675781

Token 120: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.25364816188812256
    2. 'False' → logprob: -1.5036481618881226
    3. '0' → logprob: -7.128648281097412
    4. ' any' → logprob: -7.378648281097412
    5. ' ' → logprob: -9.378647804260254
    6. 'any' → logprob: -9.753647804260254
    7. ' not' → logprob: -10.378647804260254
    8. ' True' → logprob: -10.503647804260254
    9. '"' → logprob: -10.878647804260254
    10. '(False' → logprob: -11.003647804260254

Token 121: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4794447422027588
    2. '<|end|>' → logprob: -1.2294447422027588
    3. '   ' → logprob: -2.729444742202759
    4. ' for' → logprob: -4.10444450378418
    5. 'for' → logprob: -6.47944450378418
    6. ' 
' → logprob: -6.97944450378418
    7. ' ' → logprob: -7.10444450378418
    8. '    
' → logprob: -7.35444450378418
    9. '	for' → logprob: -7.47944450378418
    10. ' if' → logprob: -7.60444450378418

Token 123: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38135841488838196
    2. 'for' → logprob: -1.2563583850860596
    3. '   ' → logprob: -3.5063583850860596
    4. '	for' → logprob: -6.131358623504639
    5. ' ' → logprob: -9.13135814666748
    6. '
' → logprob: -10.50635814666748
    7. '<|end|>' → logprob: -10.63135814666748
    8. '  ' → logprob: -11.13135814666748
    9. ' 
' → logprob: -12.38135814666748
    10. '\t' → logprob: -13.13135814666748

Token 124: ' Single' (ID: 16035)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47411271929740906
    2. ' for' → logprob: -0.9741127490997314
    3. ' ' → logprob: -10.974112510681152
    4. '<|end|>' → logprob: -11.599112510681152
    5. '   ' → logprob: -12.599112510681152
    6. 'range' → logprob: -13.474112510681152
    7. ' range' → logprob: -13.599112510681152
    8. 'For' → logprob: -14.224112510681152
    9. '  ' → logprob: -14.599112510681152
    10. '	for' → logprob: -14.849112510681152

Token 125: ' digit' (ID: 19181)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5135288238525391
    2. 'digit' → logprob: -2.763528823852539
    3. '_digit' → logprob: -2.888528823852539
    4. 'for' → logprob: -3.513528823852539
    5. 'ton' → logprob: -3.763528823852539
    6. 'pass' → logprob: -3.888528823852539
    7. ' failure' → logprob: -3.888528823852539
    8. 'd' → logprob: -3.888528823852539
    9. 'fail' → logprob: -3.888528823852539
    10. ' for' → logprob: -4.013528823852539

Token 126: ' error' (ID: 2915)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12092357128858566
    2. ' for' → logprob: -2.3709235191345215
    3. 's' → logprob: -3.9959235191345215
    4. 'fail' → logprob: -7.3709235191345215
    5. '<|end|>' → logprob: -7.6209235191345215
    6. 'sum' → logprob: -8.49592399597168
    7. 'd' → logprob: -8.87092399597168
    8. 'count' → logprob: -9.49592399597168
    9. 'e' → logprob: -9.74592399597168
    10. '0' → logprob: -10.24592399597168

Token 127: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5239663124084473
    2. 's' → logprob: -1.3989663124084473
    3. 'for' → logprob: -1.8989663124084473
    4. ':' → logprob: -5.898966312408447
    5. '<|end|>' → logprob: -5.898966312408447
    6. ' in' → logprob: -7.023966312408447
    7. ' ' → logprob: -7.148966312408447
    8. '
' → logprob: -7.523966312408447
    9. ' or' → logprob: -7.773966312408447
    10. ',' → logprob: -8.023965835571289

Token 128: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4296755790710449
    2. 'for' → logprob: -1.054675579071045
    3. 's' → logprob: -7.304675579071045
    4. '   ' → logprob: -8.179676055908203
    5. '<|end|>' → logprob: -12.304676055908203
    6. ' ' → logprob: -12.804676055908203
    7. ' in' → logprob: -12.929676055908203
    8. ':' → logprob: -12.929676055908203
    9. '  ' → logprob: -13.179676055908203
    10. '	for' → logprob: -13.429676055908203

Token 129: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16023224592208862
    2. ' for' → logprob: -1.9102323055267334
    3. '   ' → logprob: -11.785232543945312
    4. '	for' → logprob: -15.160232543945312
    5. ' ' → logprob: -16.910232543945312
    6. 'f' → logprob: -17.410232543945312
    7. '
' → logprob: -17.660232543945312
    8. '  ' → logprob: -19.160232543945312
    9. 'fo' → logprob: -19.785232543945312
    10. ' 
' → logprob: -19.785232543945312

Token 130: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.025942830368876457
    2. 'i' → logprob: -3.900942802429199
    3. ' pos' → logprob: -5.650942802429199
    4. ' idx' → logprob: -6.900942802429199
    5. 'pos' → logprob: -7.775942802429199
    6. ' d' → logprob: -8.5259428024292
    7. ' p' → logprob: -9.4009428024292
    8. 'd' → logprob: -10.5259428024292
    9. 'idx' → logprob: -10.5259428024292
    10. ' ' → logprob: -10.7759428024292

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01612563244998455
    2. 'in' → logprob: -4.141125679016113
    3. ' ' → logprob: -9.766125679016113
    4. ',' → logprob: -10.891125679016113
    5. '0' → logprob: -12.141125679016113
    6. '	in' → logprob: -12.766125679016113
    7. 'n' → logprob: -13.266125679016113
    8. 'range' → logprob: -13.641125679016113
    9. '  ' → logprob: -14.641125679016113
    10. 'd' → logprob: -14.766125679016113

Token 132: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10022716224193573
    2. 'range' → logprob: -2.350227117538452
    3. ' ' → logprob: -11.225227355957031
    4. '  ' → logprob: -12.975227355957031
    5. '   ' → logprob: -12.975227355957031
    6. '	range' → logprob: -14.225227355957031
    7. '(range' → logprob: -14.850227355957031
    8. ' ss' → logprob: -15.850227355957031
    9. '
' → logprob: -16.10022735595703
    10. ' xrange' → logprob: -16.10022735595703

Token 133: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00672566844150424
    2. '(len' → logprob: -5.006725788116455
    3. 'len' → logprob: -12.506725311279297
    4. ' (' → logprob: -12.881725311279297
    5. '6' → logprob: -13.256725311279297
    6. '(
' → logprob: -14.006725311279297
    7. '7' → logprob: -14.381725311279297
    8. ' len' → logprob: -15.006725311279297
    9. ' ' → logprob: -15.756725311279297
    10. '(length' → logprob: -16.506725311279297

Token 134: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5235046744346619
    2. '5' → logprob: -0.8985046744346619
    3. 'len' → logprob: -8.898504257202148
    4. '7' → logprob: -9.148504257202148
    5. '4' → logprob: -9.898504257202148
    6. '11' → logprob: -10.398504257202148
    7. ' ' → logprob: -11.273504257202148
    8. '10' → logprob: -11.398504257202148
    9. '   ' → logprob: -11.898504257202148
    10. '```' → logprob: -12.148504257202148

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015836587408557534
    2. '):
' → logprob: -9.125158309936523
    3. '+' → logprob: -10.625158309936523
    4. ':' → logprob: -11.000158309936523
    5. ' ):' → logprob: -12.250158309936523
    6. ')' → logprob: -13.250158309936523
    7. '   ' → logprob: -14.875158309936523
    8. '6' → logprob: -15.375158309936523
    9. '}:' → logprob: -15.375158309936523
    10. '-' → logprob: -15.625158309936523

Token 136: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7603693008422852
    2. '<|end|>' → logprob: -0.8853693008422852
    3. '       ' → logprob: -2.260369300842285
    4. '   ' → logprob: -5.010369300842285
    5. '<|end|>' → logprob: -6.010369300842285
    6. ' ' → logprob: -6.385369300842285
    7. ',' → logprob: -6.635369300842285
    8. '
' → logprob: -7.260369300842285
    9. ':
' → logprob: -7.635369300842285
    10. '    ' → logprob: -7.635369300842285

Token 137: ' original' (ID: 4756)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2534084618091583
    2. ' if' → logprob: -1.753408432006836
    3. 'for' → logprob: -3.253408432006836
    4. 'if' → logprob: -5.003408432006836
    5. '   ' → logprob: -5.753408432006836
    6. '       ' → logprob: -6.628408432006836
    7. '    ' → logprob: -7.878408432006836
    8. ' ' → logprob: -8.753408432006836
    9. '	for' → logprob: -9.253408432006836
    10. '        ' → logprob: -10.003408432006836

Token 138: ' =' (ID: 314)
  Prédit: '_digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.6486402750015259
    2. ' =' → logprob: -1.5236402750015259
    3. 'digit' → logprob: -2.2736401557922363
    4. '_' → logprob: -3.2736401557922363
    5. '=' → logprob: -3.7736401557922363
    6. 'for' → logprob: -4.148640155792236
    7. 'd' → logprob: -4.273640155792236
    8. '_value' → logprob: -4.273640155792236
    9. ' for' → logprob: -4.398640155792236
    10. '_val' → logprob: -4.523640155792236

Token 139: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.054936330765485764
    2. ' ss' → logprob: -2.929936408996582
    3. '	ss' → logprob: -11.054936408996582
    4. '(ss' → logprob: -11.429936408996582
    5. '   ' → logprob: -12.054936408996582
    6. 'table' → logprob: -12.679936408996582
    7. 'digits' → logprob: -12.804936408996582
    8. ' ' → logprob: -12.929936408996582
    9. '_ss' → logprob: -12.929936408996582
    10. 's' → logprob: -13.679936408996582

Token 140: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.4121114822482923e-06
    2. 'ns' → logprob: -13.875003814697266
    3. 'ss' → logprob: -15.000003814697266
    4. '[' → logprob: -15.125003814697266
    5. 'sn' → logprob: -15.250003814697266
    6. 's' → logprob: -15.500003814697266
    7. 'num' → logprob: -15.625003814697266
    8. ' n' → logprob: -16.062503814697266
    9. 'н' → logprob: -16.312503814697266
    10. 'nt' → logprob: -16.500003814697266

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.125001907348633
    3. '[I' → logprob: -15.750001907348633
    4. 'i' → logprob: -16.000001907348633
    5. '[:]' → logprob: -17.500001907348633
    6. '```' → logprob: -17.750001907348633
    7. '
' → logprob: -18.625001907348633
    8. '[j' → logprob: -18.875001907348633
    9. '<|end|>' → logprob: -18.875001907348633
    10. '[
' → logprob: -19.000001907348633

Token 142: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1930025815963745
    2. ']' → logprob: -1.1930025815963745
    3. ']
' → logprob: -1.5680025815963745
    4. ')
' → logprob: -1.6930025815963745
    5. '])' → logprob: -7.818002700805664
    6. ')]' → logprob: -9.068002700805664
    7. '])
' → logprob: -9.193002700805664
    8. '<|end|>' → logprob: -9.193002700805664
    9. '
' → logprob: -9.693002700805664
    10. ']

' → logprob: -10.693002700805664

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13227513432502747
    2. ' for' → logprob: -2.257275104522705
    3. 'for' → logprob: -4.007275104522705
    4. '   ' → logprob: -7.757275104522705
    5. '	for' → logprob: -8.257275581359863
    6. '<|end|>' → logprob: -8.632275581359863
    7. '	' → logprob: -9.007275581359863
    8. ',' → logprob: -10.132275581359863
    9. '	   ' → logprob: -11.382275581359863
    10. '           ' → logprob: -11.632275581359863

Token 144: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5762512683868408
    2. ' for' → logprob: -0.8262512683868408
    3. '       ' → logprob: -8.201251029968262
    4. '	for' → logprob: -10.451251029968262
    5. '   ' → logprob: -11.826251029968262
    6. '<|end|>' → logprob: -14.451251029968262
    7. '```' → logprob: -15.326251029968262
    8. ' ' → logprob: -15.326251029968262
    9. '
' → logprob: -16.576251983642578
    10. '	' → logprob: -16.701251983642578

Token 145: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7621215581893921
    2. ' d' → logprob: -1.137121558189392
    3. ' new' → logprob: -3.3871216773986816
    4. ' digit' → logprob: -3.5121216773986816
    5. 'digit' → logprob: -3.6371216773986816
    6. 'x' → logprob: -3.8871216773986816
    7. 'v' → logprob: -4.012121677398682
    8. ' v' → logprob: -4.512121677398682
    9. 'new' → logprob: -4.637121677398682
    10. ' x' → logprob: -4.637121677398682

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02055741846561432
    2. 'in' → logprob: -3.895557403564453
    3. 'range' → logprob: -11.645557403564453
    4. ' ' → logprob: -13.020557403564453
    5. 'd' → logprob: -13.270557403564453
    6. '0' → logprob: -14.645557403564453
    7. '	in' → logprob: -14.895557403564453
    8. 'n' → logprob: -15.395557403564453
    9. 'i' → logprob: -15.520557403564453
    10. '1' → logprob: -15.645557403564453

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141372084617615
    2. ' range' → logprob: -1.7014137506484985
    3. '	range' → logprob: -15.701414108276367
    4. '(range' → logprob: -15.951414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '0' → logprob: -17.701414108276367
    7. '   ' → logprob: -17.826414108276367
    8. '[' → logprob: -19.076414108276367
    9. 'ange' → logprob: -19.451414108276367
    10. '  ' → logprob: -19.951414108276367

Token 148: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011093445122241974
    2. '(' → logprob: -4.511093616485596
    3. '0' → logprob: -10.261093139648438
    4. ' ' → logprob: -12.011093139648438
    5. '```' → logprob: -13.386093139648438
    6. '   ' → logprob: -14.011093139648438
    7. '1' → logprob: -14.261093139648438
    8. '
' → logprob: -14.386093139648438
    9. '9' → logprob: -15.761093139648438
    10. '=' → logprob: -15.761093139648438

Token 149: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -13.00000286102295
    3. '1' → logprob: -14.25000286102295
    4. ' ' → logprob: -16.125003814697266
    5. '(' → logprob: -18.000003814697266
    6. '9' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '```' → logprob: -18.500003814697266
    9. ')' → logprob: -19.625003814697266
    10. '6' → logprob: -19.875003814697266

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0744267925620079
    2. '):
' → logprob: -2.8244268894195557
    3. ':' → logprob: -4.574426651000977
    4. ' ):' → logprob: -6.449426651000977
    5. ' ):
' → logprob: -9.199426651000977
    6. '       ' → logprob: -9.199426651000977
    7. ')' → logprob: -9.449426651000977
    8. '           ' → logprob: -9.824426651000977
    9. ' :' → logprob: -10.824426651000977
    10. '<|end|>' → logprob: -11.074426651000977

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7108139395713806
    2. '<|end|>' → logprob: -0.7108139395713806
    3. ' if' → logprob: -4.710813999176025
    4. ' ' → logprob: -6.335813999176025
    5. ':' → logprob: -6.710813999176025
    6. ',' → logprob: -6.710813999176025
    7. '<|end|>' → logprob: -6.835813999176025
    8. '       ' → logprob: -6.835813999176025
    9. 'if' → logprob: -8.085813522338867
    10. '	       ' → logprob: -8.085813522338867

Token 152: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4883585572242737
    2. '           ' → logprob: -1.863358497619629
    3. '               ' → logprob: -1.863358497619629
    4. '<|end|>' → logprob: -3.363358497619629
    5. 'if' (adapté à ' if') → logprob: -3.488358497619629
    6. ' ' → logprob: -4.863358497619629
    7. '            ' → logprob: -6.863358497619629
    8. '       ' → logprob: -7.113358497619629
    9. '             ' → logprob: -8.988358497619629
    10. '                ' → logprob: -8.988358497619629

Token 153: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17977072298526764
    2. 'd' → logprob: -1.8047707080841064
    3. ' ' → logprob: -11.304770469665527
    4. '	d' → logprob: -12.304770469665527
    5. '   ' → logprob: -12.429770469665527
    6. '    ' → logprob: -13.429770469665527
    7. '  ' → logprob: -13.929770469665527
    8. ' i' → logprob: -14.429770469665527
    9. ' ' → logprob: -14.679770469665527
    10. 'i' → logprob: -14.929770469665527

Token 154: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.29309290647506714
    2. '!=' → logprob: -1.668092966079712
    3. ' ==' → logprob: -3.043092966079712
    4. '==' → logprob: -4.043092727661133
    5. '<|end|>' → logprob: -8.793092727661133
    6. '()!=' → logprob: -11.293092727661133
    7. '=' → logprob: -11.418092727661133
    8. ' ' → logprob: -11.543092727661133
    9. ' ' → logprob: -12.418092727661133
    10. '<|end|>' → logprob: -12.918092727661133

Token 155: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.029754776507616043
    2. ' original' → logprob: -3.529754877090454
    3. 'ss' → logprob: -13.404754638671875
    4. ' ' → logprob: -13.404754638671875
    5. '(original' → logprob: -14.779754638671875
    6. '   ' → logprob: -14.779754638671875
    7. '
' → logprob: -15.154754638671875
    8. '  ' → logprob: -16.529754638671875
    9. ' ss' → logprob: -16.529754638671875
    10. '.original' → logprob: -16.779754638671875

Token 156: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7455230951309204
    2. ' and' → logprob: -0.8705230951309204
    3. ':' → logprob: -2.245522975921631
    4. 'and' → logprob: -7.370522975921631
    5. '           ' → logprob: -8.745523452758789
    6. ':

' → logprob: -10.245523452758789
    7. ' :
' → logprob: -10.495523452758789
    8. '):
' → logprob: -10.870523452758789
    9. ',' → logprob: -11.620523452758789
    10. ':
' → logprob: -11.745523452758789

Token 157: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39722877740859985
    2. '               ' → logprob: -1.522228717803955
    3. '           ' → logprob: -2.647228717803955
    4. ' and' → logprob: -3.772228717803955
    5. ':' → logprob: -4.522228717803955
    6. '
' → logprob: -6.272228717803955
    7. ' :
' → logprob: -7.397228717803955
    8. '              ' → logprob: -7.522228717803955
    9. '             ' → logprob: -8.022229194641113
    10. '                   ' → logprob: -8.147229194641113

Token 158: ' s' (ID: 265)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.212282657623291
    2. '
' → logprob: -1.587282657623291
    3. ' ss' → logprob: -1.587282657623291
    4. ' if' → logprob: -1.837282657623291
    5. '                   ' → logprob: -2.587282657623291
    6. ' s' → logprob: -4.587282657623291
    7. '           ' → logprob: -5.212282657623291
    8. '                
' → logprob: -5.462282657623291
    9. ' 
' → logprob: -5.462282657623291
    10. ' fail' → logprob: -5.587282657623291

Token 159: ' =' (ID: 314)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.00526091456413269
    2. 's' → logprob: -5.755260944366455
    3. 'sns' → logprob: -6.630260944366455
    4. 'san' → logprob: -9.130260467529297
    5. 'sd' → logprob: -9.630260467529297
    6. ' =' → logprob: -9.630260467529297
    7. 'ns' → logprob: -10.255260467529297
    8. 'sm' → logprob: -10.255260467529297
    9. 'SN' → logprob: -10.255260467529297
    10. 'n' → logprob: -10.380260467529297

Token 160: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.07414025068283081
    2. 'check' → logprob: -3.1991403102874756
    3. ' ss' → logprob: -3.5741403102874756
    4. ' check' → logprob: -6.5741400718688965
    5. '[' → logprob: -8.199140548706055
    6. '   ' → logprob: -8.449140548706055
    7. ' ' → logprob: -8.824140548706055
    8. 'fail' → logprob: -9.074140548706055
    9. 'digits' → logprob: -9.449140548706055
    10. '  ' → logprob: -9.824140548706055

Token 161: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1008713702030946e-06
    2. 'N' → logprob: -13.625001907348633
    3. 'sn' → logprob: -15.250001907348633
    4. 'ns' → logprob: -15.875001907348633
    5. 'н' → logprob: -16.375001907348633
    6. '_n' → logprob: -16.625001907348633
    7. 's' → logprob: -16.750001907348633
    8. '
' → logprob: -17.125001907348633
    9. 'check' → logprob: -17.125001907348633
    10. '[' → logprob: -17.125001907348633

Token 162: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.002670780522748828
    2. '[:]' → logprob: -6.502670764923096
    3. '.copy' → logprob: -6.752670764923096
    4. 'copy' → logprob: -17.252670288085938
    5. '[' → logprob: -17.502670288085938
    6. '[:-' → logprob: -19.127670288085938
    7. '][:' → logprob: -20.627670288085938
    8. '_copy' → logprob: -20.627670288085938
    9. '.' → logprob: -20.877670288085938
    10. 'Copy' → logprob: -21.127670288085938

Token 163: ']
' (ID: 1592)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00014120421838015318
    2. ']' → logprob: -9.500141143798828
    3. ' i' → logprob: -10.250141143798828
    4. ':i' → logprob: -11.250141143798828
    5. ':' → logprob: -12.375141143798828
    6. '0' → logprob: -12.375141143798828
    7. '   ' → logprob: -12.875141143798828
    8. ' ' → logprob: -13.500141143798828
    9. ',i' → logprob: -13.875141143798828
    10. '	i' → logprob: -14.125141143798828

Token 164: '               ' (ID: 506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0029555968940258026
    2. '               ' → logprob: -6.502955436706543
    3. ' s' → logprob: -7.002955436706543
    4. '           ' → logprob: -8.127955436706543
    5. '                   ' → logprob: -8.502955436706543
    6. '                       ' → logprob: -11.127955436706543
    7. '       ' → logprob: -12.127955436706543
    8. '<|end|>' → logprob: -12.502955436706543
    9. '              ' → logprob: -12.752955436706543
    10. '   ' → logprob: -12.752955436706543

Token 165: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.006741657853126526
    2. ' s' → logprob: -5.006741523742676
    3. '               ' → logprob: -10.631741523742676
    4. '           ' → logprob: -13.756741523742676
    5. '                   ' → logprob: -14.506741523742676
    6. '	s' → logprob: -15.631741523742676
    7. '       ' → logprob: -15.756741523742676
    8. ' ' → logprob: -16.381742477416992
    9. '   ' → logprob: -16.506742477416992
    10. '                       ' → logprob: -17.131742477416992

Token 166: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8206473871250637e-05
    2. '[s' → logprob: -11.000028610229492
    3. 's' → logprob: -11.750028610229492
    4. '[' → logprob: -13.375028610229492
    5. 'i' → logprob: -14.000028610229492
    6. ' [' → logprob: -15.375028610229492
    7. '               ' → logprob: -15.500028610229492
    8. '                   ' → logprob: -15.625028610229492
    9. '           ' → logprob: -15.750028610229492
    10. ' =' → logprob: -16.375028610229492

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009528818540275097
    2. ']=' → logprob: -4.884528636932373
    3. '=' → logprob: -6.509528636932373
    4. ' ]' → logprob: -8.384529113769531
    5. ' =' → logprob: -8.509529113769531
    6. ')' → logprob: -15.384529113769531
    7. 'd' → logprob: -15.509529113769531
    8. ']+=' → logprob: -15.634529113769531
    9. ' ' → logprob: -16.00952911376953
    10. ']=(' → logprob: -16.13452911376953

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687217235565186
    2. ' =' → logprob: -1.1368721723556519
    3. '=d' → logprob: -13.886872291564941
    4. '.=' → logprob: -17.136871337890625
    5. ' =
' → logprob: -17.261871337890625
    6. '＝' → logprob: -17.386871337890625
    7. '=s' → logprob: -17.386871337890625
    8. '=
' → logprob: -17.511871337890625
    9. ' ' → logprob: -17.636871337890625
    10. ']' → logprob: -17.761871337890625

Token 169: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006715370807796717
    2. ' d' → logprob: -5.006715297698975
    3. '	d' → logprob: -17.381715774536133
    4. ' ' → logprob: -18.381715774536133
    5. ')d' → logprob: -19.631715774536133
    6. '_d' → logprob: -20.506715774536133
    7. '   ' → logprob: -20.506715774536133
    8. '  ' → logprob: -21.006715774536133
    9. '
' → logprob: -21.756715774536133
    10. '(d' → logprob: -21.881715774536133

Token 170: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0582086518406868
    2. '               ' → logprob: -2.933208703994751
    3. '
' → logprob: -6.808208465576172
    4. '       ' → logprob: -7.308208465576172
    5. ' if' → logprob: -7.308208465576172
    6. '  
' → logprob: -8.433208465576172
    7. '           ' → logprob: -8.808208465576172
    8. '<|end|>' → logprob: -9.058208465576172
    9. 'if' → logprob: -9.183208465576172
    10. '                
' → logprob: -9.558208465576172

Token 171: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3560391366481781
    2. '               ' → logprob: -1.2310391664505005
    3. ' if' → logprob: -5.981039047241211
    4. '           ' → logprob: -6.856039047241211
    5. '                
' → logprob: -7.106039047241211
    6. '       ' → logprob: -7.356039047241211
    7. '  
' → logprob: -7.356039047241211
    8. '
' → logprob: -7.481039047241211
    9. 'if' → logprob: -8.231039047241211
    10. ' 
' → logprob: -8.856039047241211

Token 172: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0035352094564586878
    2. ' if' → logprob: -5.878535270690918
    3. 'e' → logprob: -8.503535270690918
    4. '
' → logprob: -8.503535270690918
    5. 'r' → logprob: -8.753535270690918
    6. '               ' → logprob: -9.253535270690918
    7. '                   ' → logprob: -11.128535270690918
    8. '   ' → logprob: -11.503535270690918
    9. 'res' → logprob: -11.503535270690918
    10. 'f' → logprob: -11.753535270690918

Token 173: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.3014949858188629
    2. 'check' → logprob: -1.4264949560165405
    3. ' not' → logprob: -4.05149507522583
    4. 'not' → logprob: -6.05149507522583
    5. ' ' → logprob: -8.676494598388672
    6. '   ' → logprob: -9.426494598388672
    7. ' op' → logprob: -9.801494598388672
    8. '(check' → logprob: -10.426494598388672
    9. 'op' → logprob: -11.051494598388672
    10. '  ' → logprob: -11.426494598388672

Token 174: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.01419759076088667
    2. '_s' → logprob: -4.264197826385498
    3. '_' → logprob: -10.63919734954834
    4. 's' → logprob: -12.88919734954834
    5. '(s' → logprob: -12.88919734954834
    6. '(ss' → logprob: -13.38919734954834
    7. '_sn' → logprob: -13.51419734954834
    8. 'ss' → logprob: -13.88919734954834
    9. '_(' → logprob: -15.26419734954834
    10. '_sm' → logprob: -15.63919734954834

Token 175: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002681486774235964
    2. 's' → logprob: -6.002681255340576
    3. '_n' → logprob: -9.127681732177734
    4. '(s' → logprob: -9.877681732177734
    5. 'N' → logprob: -10.502681732177734
    6. '_s' → logprob: -12.752681732177734
    7. 'ns' → logprob: -12.752681732177734
    8. 'sn' → logprob: -13.002681732177734
    9. '_' → logprob: -13.752681732177734
    10. '(n' → logprob: -13.877681732177734

Token 176: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.657694418914616e-05
    2. '(' → logprob: -10.375056266784668
    3. ' (' → logprob: -11.125056266784668
    4. '<|end|>' → logprob: -12.500056266784668
    5. '(ss' → logprob: -13.125056266784668
    6. 's' → logprob: -13.125056266784668
    7. ')' → logprob: -13.875056266784668
    8. ')(' → logprob: -14.625056266784668
    9. '(
' → logprob: -14.875056266784668
    10. '((' → logprob: -15.000056266784668

Token 177: ')' (ID: 8)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.11974381655454636
    2. '(ss' → logprob: -3.494743824005127
    3. '([]' → logprob: -3.494743824005127
    4. ')' → logprob: -3.994743824005127
    5. '(s' → logprob: -4.244743824005127
    6. '(' → logprob: -4.869743824005127
    7. '==' → logprob: -5.619743824005127
    8. ')==' → logprob: -5.869743824005127
    9. '[:]' → logprob: -6.369743824005127
    10. ' ==' → logprob: -7.369743824005127

Token 178: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21709737181663513
    2. '()==' → logprob: -2.592097282409668
    3. ' ==' → logprob: -2.967097282409668
    4. '()' → logprob: -3.092097282409668
    5. '(' → logprob: -4.467097282409668
    6. '([' → logprob: -5.092097282409668
    7. '(s' → logprob: -5.717097282409668
    8. '!=' → logprob: -7.467097282409668
    9. '()!=' → logprob: -8.467097282409668
    10. '(e' → logprob: -8.467097282409668

Token 179: ' ' (ID: 220)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4074817895889282
    2. '0' → logprob: -1.2824817895889282
    3. 'res' → logprob: -3.5324816703796387
    4. 'ss' → logprob: -4.407481670379639
    5. 'op' → logprob: -5.157481670379639
    6. 's' → logprob: -6.157481670379639
    7. ' ' → logprob: -6.282481670379639
    8. ' e' → logprob: -6.282481670379639
    9. 'fail' → logprob: -6.282481670379639
    10. 'table' → logprob: -7.657481670379639

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1836085468530655
    2. 'e' → logprob: -2.0586085319519043
    3. 'res' → logprob: -3.4336085319519043
    4. 'fail' → logprob: -6.183608531951904
    5. 'op' → logprob: -6.308608531951904
    6. '1' → logprob: -7.183608531951904
    7. 'ss' → logprob: -7.183608531951904
    8. 'check' → logprob: -7.558608531951904
    9. 's' → logprob: -7.933608531951904
    10. 'table' → logprob: -8.058609008789062

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14815974235534668
    2. ':
' → logprob: -2.0231597423553467
    3. '               ' → logprob: -6.148159980773926
    4. '           ' → logprob: -6.273159980773926
    5. ' and' → logprob: -7.148159980773926
    6. '                   ' → logprob: -7.898159980773926
    7. ':return' → logprob: -9.148159980773926
    8. '              ' → logprob: -10.023159980773926
    9. '       ' → logprob: -10.523159980773926
    10. ' or' → logprob: -10.773159980773926

Token 182: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02016168087720871
    2. '               ' → logprob: -4.1451616287231445
    3. ' fail' → logprob: -6.3951616287231445
    4. 'fail' → logprob: -6.6451616287231445
    5. '                       ' → logprob: -7.1451616287231445
    6. '           ' → logprob: -8.395161628723145
    7. '
' → logprob: -10.895161628723145
    8. '                           ' → logprob: -11.020161628723145
    9. '```' → logprob: -11.020161628723145
    10. 'False' → logprob: -11.270161628723145

Token 183: ' fail' (ID: 7111)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' (adapté à ' fail') → logprob: -0.034637756645679474
    2. ' fail' → logprob: -3.659637689590454
    3. '                   ' → logprob: -5.034637928009033
    4. '   ' → logprob: -7.284637928009033
    5. '               ' → logprob: -7.784637928009033
    6. '                       ' → logprob: -8.534637451171875
    7. 'break' → logprob: -9.034637451171875
    8. 'count' → logprob: -9.409637451171875
    9. '       ' → logprob: -9.534637451171875
    10. '           ' → logprob: -9.534637451171875

Token 184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933172941207886
    2. ' =' → logprob: -0.6933172941207886
    3. '=True' → logprob: -9.068317413330078
    4. '   ' → logprob: -10.318317413330078
    5. ' ' → logprob: -11.943317413330078
    6. '  ' → logprob: -12.818317413330078
    7. ':' → logprob: -12.943317413330078
    8. '    ' → logprob: -13.068317413330078
    9. '==' → logprob: -13.193317413330078
    10. ' ==' → logprob: -13.318317413330078

Token 185: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047935113310814
    2. ' True' → logprob: -4.511047840118408
    3. 'False' → logprob: -16.01104736328125
    4. '(True' → logprob: -18.26104736328125
    5. '=True' → logprob: -19.76104736328125
    6. '1' → logprob: -19.76104736328125
    7. '   ' → logprob: -20.13604736328125
    8. ' ' → logprob: -20.51104736328125
    9. 'Tr' → logprob: -22.51104736328125
    10. ' False' → logprob: -23.13604736328125

Token 186: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003186863148584962
    2. '				' → logprob: -6.7531867027282715
    3. '               ' → logprob: -7.3781867027282715
    4. '                       ' → logprob: -8.37818717956543
    5. 'break' → logprob: -8.62818717956543
    6. '                    
' → logprob: -8.62818717956543
    7. '                  ' → logprob: -9.00318717956543
    8. '       ' → logprob: -9.12818717956543
    9. '                    ' → logprob: -9.25318717956543
    10. '           ' → logprob: -9.75318717956543

Token 187: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002157518407329917
    2. '               ' → logprob: -6.877157688140869
    3. '				' → logprob: -8.377157211303711
    4. '                       ' → logprob: -8.752157211303711
    5. '                    
' → logprob: -8.877157211303711
    6. '           ' → logprob: -9.127157211303711
    7. '       ' → logprob: -9.377157211303711
    8. 'break' → logprob: -9.877157211303711
    9. '                  ' → logprob: -10.002157211303711
    10. '<|end|>' → logprob: -10.377157211303711

Token 188: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.006736691575497389
    2. ' break' → logprob: -5.006736755371094
    3. '               ' → logprob: -11.881736755371094
    4. '                   ' → logprob: -12.131736755371094
    5. '	break' → logprob: -12.631736755371094
    6. '   ' → logprob: -13.631736755371094
    7. '           ' → logprob: -13.631736755371094
    8. '       ' → logprob: -13.756736755371094
    9. 'b' → logprob: -14.381736755371094
    10. '                       ' → logprob: -14.381736755371094

Token 189: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1948252022266388
    2. '<|end|>' → logprob: -2.8198251724243164
    3. '\n' → logprob: -3.0698251724243164
    4. ' 
' → logprob: -3.4448251724243164
    5. '  
' → logprob: -4.194825172424316
    6. '       ' → logprob: -5.194825172424316
    7. '		
' → logprob: -6.444825172424316
    8. '               ' → logprob: -6.569825172424316
    9. '    
' → logprob: -6.569825172424316
    10. '        
' → logprob: -6.694825172424316

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7786828279495239
    2. '
' → logprob: -1.778682827949524
    3. '<|end|>' → logprob: -2.1536827087402344
    4. '	' → logprob: -2.7786827087402344
    5. '\n' → logprob: -3.5286827087402344
    6. ' 
' → logprob: -3.5286827087402344
    7. '		
' → logprob: -3.7786827087402344
    8. '  
' → logprob: -4.153682708740234
    9. '        
' → logprob: -4.278682708740234
    10. '    
' → logprob: -4.403682708740234

Token 191: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10467927902936935
    2. '   ' → logprob: -3.1046793460845947
    3. '
' → logprob: -3.2296793460845947
    4. '	' → logprob: -5.479679107666016
    5. '<|end|>' → logprob: -6.104679107666016
    6. '    ' → logprob: -6.229679107666016
    7. ' 
' → logprob: -6.729679107666016
    8. ' ' → logprob: -7.229679107666016
    9. '               ' → logprob: -7.729679107666016
    10. '           ' → logprob: -7.729679107666016

Token 192: ' fail' (ID: 7111)
  Prédit: ' fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fail' → logprob: -0.0009124171338044107
    2. 'fail' → logprob: -7.000912189483643
    3. '	fail' → logprob: -14.3759126663208
    4. ' not' → logprob: -15.8759126663208
    5. ' ' → logprob: -16.250911712646484
    6. ' break' → logprob: -16.750911712646484
    7. ' ' → logprob: -16.750911712646484
    8. '.fail' → logprob: -18.125911712646484
    9. ' fails' → logprob: -18.500911712646484
    10. '_fail' → logprob: -19.625911712646484

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012997613521292806
    2. '==' → logprob: -7.501299858093262
    3. ':
' → logprob: -7.876299858093262
    4. ' ==' → logprob: -9.001299858093262
    5. '):' → logprob: -9.876299858093262
    6. '=' → logprob: -10.251299858093262
    7. ' :' → logprob: -10.501299858093262
    8. '<|end|>' → logprob: -10.501299858093262
    9. ')' → logprob: -10.751299858093262
    10. '=True' → logprob: -10.876299858093262

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02645554021000862
    2. '       ' → logprob: -4.401455402374268
    3. 'break' → logprob: -5.276455402374268
    4. ' break' → logprob: -5.401455402374268
    5. '   ' → logprob: -5.526455402374268
    6. '	break' → logprob: -9.276455879211426
    7. '               ' → logprob: -9.401455879211426
    8. '		' → logprob: -10.526455879211426
    9. '```' → logprob: -11.901455879211426
    10. ' ' → logprob: -12.026455879211426

Token 195: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03804412856698036
    2. ' break' → logprob: -3.2880442142486572
    3. '   ' → logprob: -13.413043975830078
    4. '	break' → logprob: -14.663043975830078
    5. 'continue' → logprob: -15.038043975830078
    6. '       ' → logprob: -16.163043975830078
    7. 'count' → logprob: -16.288043975830078
    8. '```' → logprob: -16.538043975830078
    9. ' ' → logprob: -17.163043975830078
    10. '           ' → logprob: -17.538043975830078

Token 196: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4169566333293915
    2. ')' → logprob: -1.5419566631317139
    3. 'count' → logprob: -2.666956663131714
    4. 'else' → logprob: -4.291956424713135
    5. '<|end|>' → logprob: -4.416956424713135
    6. ' count' → logprob: -5.166956424713135
    7. '```' → logprob: -5.291956424713135
    8. ' else' → logprob: -5.416956424713135
    9. 'if' → logprob: -5.916956424713135
    10. '+' → logprob: -6.416956424713135

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23651660978794098
    2. ')' → logprob: -2.8615167140960693
    3. '
' → logprob: -3.2365167140960693
    4. 'else' → logprob: -3.3615167140960693
    5. '    
' → logprob: -4.11151647567749
    6. ' else' → logprob: -4.23651647567749
    7. 'count' → logprob: -4.36151647567749
    8. 'if' → logprob: -4.61151647567749
    9. '<|end|>' → logprob: -5.11151647567749
    10. ' if' → logprob: -5.48651647567749

Token 198: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5842216610908508
    2. 'if' (adapté à ' if') → logprob: -1.084221601486206
    3. 'else' → logprob: -3.084221601486206
    4. ' if' → logprob: -3.584221601486206
    5. '    
' → logprob: -4.334221839904785
    6. '
' → logprob: -5.959221839904785
    7. ' ' → logprob: -5.959221839904785
    8. ' else' → logprob: -5.959221839904785
    9. '  
' → logprob: -6.084221839904785
    10. '<|end|>' → logprob: -6.459221839904785

Token 199: ' fail' (ID: 7111)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.020795514807105064
    2. 'not' → logprob: -3.8957955837249756
    3. ' fail' → logprob: -8.520795822143555
    4. 'fail' → logprob: -10.520795822143555
    5. ' ' → logprob: -11.270795822143555
    6. '!' → logprob: -12.520795822143555
    7. ' no' → logprob: -12.770795822143555
    8. '   ' → logprob: -13.270795822143555
    9. '	not' → logprob: -13.395795822143555
    10. 'n' → logprob: -13.520795822143555

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01076104398816824
    2. '==' → logprob: -4.635761260986328
    3. ':
' → logprob: -7.635761260986328
    4. ' ==' → logprob: -8.510761260986328
    5. '   ' → logprob: -9.135761260986328
    6. ' continue' → logprob: -9.635761260986328
    7. '=' → logprob: -9.635761260986328
    8. 'continue' → logprob: -10.010761260986328
    9. '       ' → logprob: -11.135761260986328
    10. '):' → logprob: -12.385761260986328

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04151611775159836
    2. '   ' → logprob: -3.291516065597534
    3. 'continue' → logprob: -6.041516304016113
    4. ' continue' → logprob: -6.916516304016113
    5. '	continue' → logprob: -10.041516304016113
    6. '```' → logprob: -10.166516304016113
    7. ' ' → logprob: -12.291516304016113
    8. '           ' → logprob: -12.416516304016113
    9. '	   ' → logprob: -13.166516304016113
    10. '_continue' → logprob: -13.541516304016113

Token 202: ' count' (ID: 3605)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5082471966743469
    2. '   ' → logprob: -1.6332471370697021
    3. ' continue' → logprob: -1.6332471370697021
    4. '       ' → logprob: -5.508247375488281
    5. 'count' (adapté à ' count') → logprob: -5.758247375488281
    6. ' count' → logprob: -8.258247375488281
    7. '	continue' → logprob: -8.758247375488281
    8. ' ' → logprob: -9.883247375488281
    9. '    ' → logprob: -10.133247375488281
    10. 'pass' → logprob: -10.883247375488281

Token 203: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.013080820441246033
    2. ' +=' → logprob: -4.388080596923828
    3. '+' → logprob: -7.638080596923828
    4. '-=' → logprob: -9.763080596923828
    5. '=' → logprob: -11.013080596923828
    6. ']+=' → logprob: -11.638080596923828
    7. ' -=' → logprob: -13.013080596923828
    8. '+=(' → logprob: -13.638080596923828
    9. '   ' → logprob: -14.013080596923828
    10. '+='' → logprob: -14.638080596923828

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018518301658332348
    2. ' ' → logprob: -8.625185012817383
    3. '0' → logprob: -12.500185012817383
    4. '-' → logprob: -13.500185012817383
    5. ' -' → logprob: -16.125185012817383
    6. '   ' → logprob: -16.500185012817383
    7. '10' → logprob: -16.625185012817383
    8. '2' → logprob: -16.750185012817383
    9. '  ' → logprob: -17.125185012817383
    10. '100' → logprob: -17.250185012817383

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -12.25001049041748
    3. '0' → logprob: -12.37501049041748
    4. '-' → logprob: -14.00001049041748
    5. '10' → logprob: -15.87501049041748
    6. '2' → logprob: -16.250009536743164
    7. '100' → logprob: -17.000009536743164
    8. '   ' → logprob: -17.500009536743164
    9. '+' → logprob: -17.875009536743164
    10. '```' → logprob: -17.937509536743164

Token 206: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.466968650580384e-05
    2. ' print' → logprob: -9.875054359436035
    3. '
' → logprob: -13.125054359436035
    4. ')' → logprob: -14.125054359436035
    5. '<|end|>' → logprob: -15.750054359436035
    6. '(print' → logprob: -16.25005531311035
    7. 'count' → logprob: -17.00005531311035
    8. '```' → logprob: -17.12505531311035
    9. '.print' → logprob: -17.75005531311035
    10. '#print' → logprob: -18.12505531311035

Token 207: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022117885237094015
    2. '
' → logprob: -9.125221252441406
    3. ' print' → logprob: -9.750221252441406
    4. ')' → logprob: -10.000221252441406
    5. '(print' → logprob: -12.750221252441406
    6. '<|end|>' → logprob: -13.000221252441406
    7. '+' → logprob: -14.000221252441406
    8. 'count' → logprob: -14.625221252441406
    9. '.print' → logprob: -15.000221252441406
    10. '```' → logprob: -15.000221252441406

Token 208: ' continue' (ID: 4901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00034023032640106976
    2. ' print' → logprob: -8.500340461730957
    3. 'continue' (adapté à ' continue') → logprob: -9.125340461730957
    4. 'else' → logprob: -11.250340461730957
    5. '
' → logprob: -13.125340461730957
    6. 'ss' → logprob: -13.375340461730957
    7. 'pr' → logprob: -13.375340461730957
    8. '   ' → logprob: -13.625340461730957
    9. 'for' → logprob: -13.750340461730957
    10. ' continue' → logprob: -13.875340461730957

Token 209: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24710029363632202
    2. '   ' → logprob: -1.8721003532409668
    3. '#' → logprob: -3.372100353240967
    4. '
' → logprob: -4.622100353240967
    5. 'for' → logprob: -5.497100353240967
    6. '    
' → logprob: -5.747100353240967
    7. '<|end|>' → logprob: -5.747100353240967
    8. ' print' → logprob: -6.122100353240967
    9. 'ss' → logprob: -6.247100353240967
    10. '  ' → logprob: -7.247100353240967

Token 210: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0985603928565979
    2. '#' → logprob: -2.598560333251953
    3. '   ' → logprob: -4.348560333251953
    4. 'for' → logprob: -5.848560333251953
    5. ' print' → logprob: -7.098560333251953
    6. ' #' → logprob: -7.473560333251953
    7. '#print' → logprob: -7.848560333251953
    8. '<|end|>' → logprob: -7.848560333251953
    9. '    
' → logprob: -7.973560333251953
    10. 'ss' → logprob: -8.348560333251953

Token 211: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.08348386734724045
    2. '   ' → logprob: -2.583483934402466
    3. 'for' → logprob: -5.583483695983887
    4. ' #' → logprob: -8.333483695983887
    5. ' ' → logprob: -8.583483695983887
    6. 'print' → logprob: -8.583483695983887
    7. '+' → logprob: -10.333483695983887
    8. '  ' → logprob: -10.583483695983887
    9. '    
' → logprob: -10.833483695983887
    10. ' for' → logprob: -11.458483695983887

Token 212: ' Trans' (ID: 5515)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35316404700279236
    2. 'Double' → logprob: -1.4781640768051147
    3. 'Two' → logprob: -2.978163957595825
    4. 'double' → logprob: -4.353164196014404
    5. 'two' → logprob: -6.478164196014404
    6. 'for' → logprob: -6.603164196014404
    7. ' #' → logprob: -7.978164196014404
    8. 'digit' → logprob: -7.978164196014404
    9. 'Adjacent' → logprob: -8.353163719177246
    10. 'Multiple' → logprob: -8.603163719177246

Token 213: 'pose' (ID: 4397)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.34220224618911743
    2. 'pose' → logprob: -1.3422021865844727
    3. 'ition' → logprob: -4.592202186584473
    4. 'positions' → logprob: -4.717202186584473
    5. 'osition' → logprob: -5.467202186584473
    6. '#' → logprob: -6.217202186584473
    7. 'p' → logprob: -6.967202186584473
    8. 'pos' → logprob: -7.342202186584473
    9. 'for' → logprob: -8.092202186584473
    10. '
' → logprob: -8.592202186584473

Token 214: ' adjacent' (ID: 39069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39020687341690063
    2. 'for' → logprob: -1.3902068138122559
    3. ' =' → logprob: -3.015206813812256
    4. 'count' → logprob: -4.765206813812256
    5. ' count' → logprob: -5.390206813812256
    6. ' error' → logprob: -6.140206813812256
    7. ' ' → logprob: -6.390206813812256
    8. 'fail' → logprob: -6.515206813812256
    9. '_count' → logprob: -6.765206813812256
    10. 'error' → logprob: -7.515206813812256

Token 215: ' digits' (ID: 37806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7987743020057678
    2. 'digits' → logprob: -1.298774242401123
    3. ' for' → logprob: -2.798774242401123
    4. ' error' → logprob: -3.048774242401123
    5. ' digits' → logprob: -3.048774242401123
    6. 'digit' → logprob: -3.173774242401123
    7. 'error' → logprob: -3.173774242401123
    8. 'errors' → logprob: -5.048774242401123
    9. ' errors' → logprob: -5.423774242401123
    10. ' digit' → logprob: -5.673774242401123

Token 216: ' error' (ID: 2915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038338206708431244
    2. ' for' → logprob: -3.2883381843566895
    3. 'for' → logprob: -8.163338661193848
    4. ',' → logprob: -12.663338661193848
    5. '<|end|>' → logprob: -13.288338661193848
    6. ' in' → logprob: -13.788338661193848
    7. ' to' → logprob: -13.913338661193848
    8. '	for' → logprob: -14.413338661193848
    9. ' with' → logprob: -14.788338661193848
    10. ' of' → logprob: -14.788338661193848

Token 217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019645852968096733
    2. ' for' → logprob: -4.019645690917969
    3. 'for' → logprob: -6.519645690917969
    4. '<|end|>' → logprob: -11.644645690917969
    5. ' ' → logprob: -12.894645690917969
    6. '	for' → logprob: -13.144645690917969
    7. 's' → logprob: -13.394645690917969
    8. '  ' → logprob: -13.894645690917969
    9. ',' → logprob: -14.269645690917969
    10. '<|end|>' → logprob: -14.519645690917969

Token 218: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24624258279800415
    2. '   ' → logprob: -1.9962425231933594
    3. 'for' → logprob: -2.4962425231933594
    4. '	for' → logprob: -11.37124252319336
    5. ' ' → logprob: -12.12124252319336
    6. ' i' → logprob: -12.87124252319336
    7. 's' → logprob: -13.12124252319336
    8. '  ' → logprob: -13.49624252319336
    9. 'i' → logprob: -13.62124252319336
    10. ',' → logprob: -13.99624252319336

Token 219: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005938636604696512
    2. ' for' → logprob: -5.130938529968262
    3. 'fail' → logprob: -12.130938529968262
    4. '   ' → logprob: -12.630938529968262
    5. 'i' → logprob: -14.880938529968262
    6. 'found' → logprob: -15.505938529968262
    7. 'trans' → logprob: -15.755938529968262
    8. 'ss' → logprob: -15.755938529968262
    9. 'f' → logprob: -15.755938529968262
    10. 'fo' → logprob: -16.755939483642578

Token 220: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07890686392784119
    2. ' i' → logprob: -2.578906774520874
    3. 'j' → logprob: -11.203907012939453
    4. ' j' → logprob: -13.328907012939453
    5. '	i' → logprob: -13.953907012939453
    6. ' ' → logprob: -14.703907012939453
    7. '```' → logprob: -15.703907012939453
    8. '   ' → logprob: -16.078907012939453
    9. '  ' → logprob: -16.578907012939453
    10. '_i' → logprob: -16.953907012939453

Token 221: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010456704767420888
    2. 'in' → logprob: -6.8760457038879395
    3. 'range' → logprob: -11.501045227050781
    4. ' ' → logprob: -13.501045227050781
    5. '(' → logprob: -14.626045227050781
    6. ' range' → logprob: -14.876045227050781
    7. '(range' → logprob: -15.751045227050781
    8. 'In' → logprob: -16.62604522705078
    9. '```' → logprob: -16.75104522705078
    10. '1' → logprob: -16.87604522705078

Token 222: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858816787600517
    2. ' range' → logprob: -3.048588275909424
    3. '0' → logprob: -14.673587799072266
    4. ' ' → logprob: -15.798587799072266
    5. '(range' → logprob: -16.298587799072266
    6. '4' → logprob: -16.298587799072266
    7. '5' → logprob: -19.298587799072266
    8. '
' → logprob: -19.548587799072266
    9. '	range' → logprob: -19.548587799072266
    10. '[' → logprob: -19.798587799072266

Token 223: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6286106983898208e-05
    2. '4' → logprob: -11.125016212463379
    3. ' ' → logprob: -13.750016212463379
    4. '(len' → logprob: -15.125016212463379
    5. '(
' → logprob: -16.875017166137695
    6. ' (' → logprob: -18.000017166137695
    7. '   ' → logprob: -19.250017166137695
    8. '
' → logprob: -19.500017166137695
    9. '5' → logprob: -20.875017166137695
    10. '  ' → logprob: -21.125017166137695

Token 224: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.047134305234067e-05
    2. '5' → logprob: -10.500030517578125
    3. ' ' → logprob: -13.000030517578125
    4. 'len' → logprob: -14.875030517578125
    5. '1' → logprob: -16.812530517578125
    6. '```' → logprob: -17.437530517578125
    7. '   ' → logprob: -17.625030517578125
    8. '9' → logprob: -18.937530517578125
    9. '-' → logprob: -19.187530517578125
    10. '0' → logprob: -19.250030517578125

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6949677467346191
    2. '):' → logprob: -0.6949677467346191
    3. ':' → logprob: -6.444967746734619
    4. ':
' → logprob: -9.069967269897461
    5. '   ' → logprob: -9.944967269897461
    6. ' ):' → logprob: -11.194967269897461
    7. '1' → logprob: -11.444967269897461
    8. '):
' → logprob: -11.819967269897461
    9. ' ):
' → logprob: -11.819967269897461
    10. '):

' → logprob: -12.319967269897461

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01319611631333828
    2. '   ' → logprob: -4.513195991516113
    3. ' original' → logprob: -6.263195991516113
    4. ',' → logprob: -9.888195991516113
    5. 'original' → logprob: -9.888195991516113
    6. ' if' → logprob: -10.013195991516113
    7. '<|end|>' → logprob: -10.638195991516113
    8. ':' → logprob: -11.513195991516113
    9. ' s' → logprob: -11.638195991516113
    10. 'Original' → logprob: -11.763195991516113

Token 227: ' if' (ID: 538)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46578601002693176
    2. 'original' → logprob: -1.2157859802246094
    3. 'if' (adapté à ' if') → logprob: -3.9657859802246094
    4. 'ss' → logprob: -3.9657859802246094
    5. ' original' → logprob: -4.215785980224609
    6. ' s' → logprob: -4.465785980224609
    7. 'a' → logprob: -5.215785980224609
    8. 'sw' → logprob: -5.965785980224609
    9. '   ' → logprob: -6.590785980224609
    10. ' if' → logprob: -6.965785980224609

Token 228: ' ss' (ID: 20928)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8819460272789001
    2. 'ss' → logprob: -1.131946086883545
    3. ' not' → logprob: -2.131946086883545
    4. 'fail' → logprob: -2.506946086883545
    5. 'check' → logprob: -3.381946086883545
    6. ' fail' → logprob: -4.506946086883545
    7. ' ss' → logprob: -4.631946086883545
    8. ' check' → logprob: -5.506946086883545
    9. 'abs' → logprob: -6.006946086883545
    10. 'count' → logprob: -7.381946086883545

Token 229: 'n' (ID: 77)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.12127808178775e-05
    2. 's' → logprob: -10.000051498413086
    3. '[s' → logprob: -12.875051498413086
    4. '[' → logprob: -13.125051498413086
    5. 'i' → logprob: -14.250051498413086
    6. 'n' → logprob: -16.125051498413086
    7. 'ss' → logprob: -16.500051498413086
    8. '
' → logprob: -16.750051498413086
    9. '(i' → logprob: -17.375051498413086
    10. '[j' → logprob: -17.625051498413086

Token 230: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -12.125008583068848
    3. 'i' → logprob: -13.875008583068848
    4. '[I' → logprob: -15.000008583068848
    5. '[
' → logprob: -15.125008583068848
    6. ' i' → logprob: -16.12500762939453
    7. '[j' → logprob: -16.12500762939453
    8. '(i' → logprob: -16.50000762939453
    9. '<|end|>' → logprob: -16.50000762939453
    10. '
' → logprob: -16.50000762939453

Token 231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.359365850687027
    2. ']!=' → logprob: -1.7343658208847046
    3. ']>' → logprob: -2.359365940093994
    4. ']==' → logprob: -3.609365940093994
    5. '>' → logprob: -5.859365940093994
    6. '!=' → logprob: -7.734365940093994
    7. '+' → logprob: -8.484365463256836
    8. ' ]' → logprob: -9.734365463256836
    9. ']>=' → logprob: -9.859365463256836
    10. 'd' → logprob: -9.984365463256836

Token 232: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5059470534324646
    2. '!=' → logprob: -1.0059471130371094
    3. ' !=' → logprob: -4.130947113037109
    4. '==' → logprob: -4.505947113037109
    5. ' >' → logprob: -6.005947113037109
    6. ' ==' → logprob: -7.630947113037109
    7. 's' → logprob: -8.00594711303711
    8. '>s' → logprob: -8.38094711303711
    9. '>d' → logprob: -9.13094711303711
    10. 'd' → logprob: -9.25594711303711

Token 233: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.0008078443352133036
    2. ' ss' → logprob: -7.125807762145996
    3. '	ss' → logprob: -13.625807762145996
    4. ' ' → logprob: -14.000807762145996
    5. '
' → logprob: -15.000807762145996
    6. '   ' → logprob: -15.500807762145996
    7. '9' → logprob: -15.875807762145996
    8. 'ssid' → logprob: -15.875807762145996
    9. '0' → logprob: -16.125808715820312
    10. '(ss' → logprob: -16.250808715820312

Token 234: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.2020991056924686e-05
    2. 'N' → logprob: -11.375032424926758
    3. '[' → logprob: -11.750032424926758
    4. 's' → logprob: -11.875032424926758
    5. 'ss' → logprob: -13.750032424926758
    6. '[i' → logprob: -14.375032424926758
    7. 'н' → logprob: -14.375032424926758
    8. '
' → logprob: -14.500032424926758
    9. ' ' → logprob: -14.750032424926758
    10. '   ' → logprob: -15.250032424926758

Token 235: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016057010740041733
    2. 'i' → logprob: -4.141057014465332
    3. '[' → logprob: -11.516057014465332
    4. '
' → logprob: -12.641057014465332
    5. '{i' → logprob: -13.141057014465332
    6. '+' → logprob: -13.266057014465332
    7. ' i' → logprob: -13.516057014465332
    8. '```' → logprob: -13.766057014465332
    9. ' [' → logprob: -13.891057014465332
    10. '[
' → logprob: -14.266057014465332

Token 236: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00529257720336318
    2. '+i' → logprob: -5.7552924156188965
    3. 'i' → logprob: -6.5052924156188965
    4. '[i' → logprob: -8.005292892456055
    5. ' +' → logprob: -8.380292892456055
    6. '1' → logprob: -10.255292892456055
    7. ' i' → logprob: -11.755292892456055
    8. '{i' → logprob: -13.130292892456055
    9. ']+' → logprob: -13.255292892456055
    10. '```' → logprob: -13.380292892456055

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.780830830801278e-05
    2. ' ' → logprob: -9.37508773803711
    3. '   ' → logprob: -14.00008773803711
    4. '
' → logprob: -14.62508773803711
    5. '```' → logprob: -14.68758773803711
    6. '  ' → logprob: -15.37508773803711
    7. '0' → logprob: -15.43758773803711
    8. ']' → logprob: -15.87508773803711
    9. '+' → logprob: -16.00008773803711
    10. 'i' → logprob: -16.56258773803711

Token 238: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11102043837308884
    2. ':' → logprob: -3.23602032661438
    3. ']:
' → logprob: -3.36102032661438
    4. ' and' → logprob: -3.86102032661438
    5. '):
' → logprob: -4.986020565032959
    6. 'and' → logprob: -6.361020565032959
    7. ']:' → logprob: -7.611020565032959
    8. '       ' → logprob: -7.736020565032959
    9. ' :
' → logprob: -8.8610200881958
    10. '           ' → logprob: -9.7360200881958

Token 239: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41688045859336853
    2. '           ' → logprob: -1.166880488395691
    3. ':' → logprob: -3.9168803691864014
    4. ' and' → logprob: -5.7918806076049805
    5. '       ' → logprob: -6.0418806076049805
    6. ' s' → logprob: -6.1668806076049805
    7. ',' → logprob: -7.2918806076049805
    8. 's' → logprob: -8.04188060760498
    9. ':

' → logprob: -8.16688060760498
    10. '):
' → logprob: -8.79188060760498

Token 240: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03150850906968117
    2. 's' (adapté à ' s') → logprob: -3.531508445739746
    3. '           ' → logprob: -7.031508445739746
    4. '       ' → logprob: -7.656508445739746
    5. '               ' → logprob: -8.531508445739746
    6. ' swapped' → logprob: -9.156508445739746
    7. '
' → logprob: -10.031508445739746
    8. ' t' → logprob: -10.781508445739746
    9. 't' → logprob: -11.656508445739746
    10. '   ' → logprob: -12.156508445739746

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519705891609192
    2. '=' → logprob: -1.5019705295562744
    3. 's' → logprob: -10.501970291137695
    4. '=s' → logprob: -11.376970291137695
    5. '[' → logprob: -14.501970291137695
    6. ' ' → logprob: -14.501970291137695
    7. ',' → logprob: -15.251970291137695
    8. '=
' → logprob: -16.001970291137695
    9. 't' → logprob: -16.126970291137695
    10. '<|end|>' → logprob: -16.251970291137695

Token 242: ' ss' (ID: 20928)
  Prédit: ' ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.4740796387195587
    2. 'ss' → logprob: -0.9740796089172363
    3. 's' → logprob: -14.099080085754395
    4. '	ss' → logprob: -14.474080085754395
    5. '(ss' → logprob: -14.724080085754395
    6. ' ' → logprob: -15.099080085754395
    7. '_ss' → logprob: -15.724080085754395
    8. 'ssid' → logprob: -15.724080085754395
    9. 'sss' → logprob: -16.349079132080078
    10. '.ss' → logprob: -16.599079132080078

Token 243: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.611323624383658e-05
    2. 'sn' → logprob: -9.750065803527832
    3. 's' → logprob: -13.250065803527832
    4. 'ss' → logprob: -13.500065803527832
    5. 'N' → logprob: -14.125065803527832
    6. '[' → logprob: -14.125065803527832
    7. 'ns' → logprob: -14.250065803527832
    8. 'н' → logprob: -15.125065803527832
    9. 'nn' → logprob: -15.687565803527832
    10. '``' → logprob: -15.750065803527832

Token 244: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.02975083328783512
    2. '[:' → logprob: -3.5297508239746094
    3. '[]' → logprob: -15.65475082397461
    4. '[:-' → logprob: -15.90475082397461
    5. ':' → logprob: -16.52975082397461
    6. '[' → logprob: -17.77975082397461
    7. '[i' → logprob: -18.02975082397461
    8. '+' → logprob: -19.02975082397461
    9. '.copy' → logprob: -20.27975082397461
    10. '```' → logprob: -21.02975082397461

Token 245: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4303126335144043
    2. ']
' → logprob: -1.0553126335144043
    3. 's' → logprob: -6.805312633514404
    4. ']

' → logprob: -8.180313110351562
    5. ']
' → logprob: -8.680313110351562
    6. '<|end|>' → logprob: -11.930313110351562
    7. ' ]' → logprob: -12.055313110351562
    8. 'i' → logprob: -12.305313110351562
    9. ']()
' → logprob: -12.305313110351562
    10. '```' → logprob: -12.805313110351562

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05252761393785477
    2. 's' → logprob: -3.552527666091919
    3. ' s' → logprob: -3.802527666091919
    4. '[s' → logprob: -10.05252742767334
    5. '          ' → logprob: -10.55252742767334
    6. '       ' → logprob: -10.67752742767334
    7. '[' → logprob: -11.17752742767334
    8. '[i' → logprob: -11.42752742767334
    9. '   ' → logprob: -11.67752742767334
    10. '	       ' → logprob: -11.80252742767334

Token 247: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0008450066088698804
    2. ' s' → logprob: -7.125844955444336
    3. '           ' → logprob: -10.125844955444336
    4. 't' → logprob: -16.250844955444336
    5. 'tmp' → logprob: -16.375844955444336
    6. '```' → logprob: -16.750844955444336
    7. 'x' → logprob: -17.125844955444336
    8. '{s' → logprob: -17.375844955444336
    9. '	s' → logprob: -17.500844955444336
    10. '               ' → logprob: -17.750844955444336

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -13.12500286102295
    3. ',i' → logprob: -15.87500286102295
    4. '           ' → logprob: -16.000001907348633
    5. '(i' → logprob: -16.375001907348633
    6. '=i' → logprob: -16.500001907348633
    7. '=' → logprob: -16.750001907348633
    8. '   ' → logprob: -17.000001907348633
    9. ' =' → logprob: -17.750001907348633
    10. '```' → logprob: -17.875001907348633

Token 249: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.004594607278704643
    2. '+' → logprob: -5.504594802856445
    3. ',i' → logprob: -8.129594802856445
    4. ',' → logprob: -8.879594802856445
    5. '],
' → logprob: -10.254594802856445
    6. ']' → logprob: -10.504594802856445
    7. ']+=' → logprob: -12.254594802856445
    8. '[i' → logprob: -13.004594802856445
    9. '+i' → logprob: -13.129594802856445
    10. ' ],' → logprob: -13.879594802856445

Token 250: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002280030632391572
    2. ' s' → logprob: -6.252280235290527
    3. 'ss' → logprob: -8.002280235290527
    4. ' ss' → logprob: -11.502280235290527
    5. '<|end|>' → logprob: -12.002280235290527
    6. 'ssp' → logprob: -15.877280235290527
    7. '           ' → logprob: -16.50227928161621
    8. ' ' → logprob: -17.12727928161621
    9. '	ss' → logprob: -17.25227928161621
    10. '=' → logprob: -17.37727928161621

Token 251: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. 'i' → logprob: -13.25000286102295
    3. '[' → logprob: -15.25000286102295
    4. 's' → logprob: -15.50000286102295
    5. '[
' → logprob: -16.250001907348633
    6. '[s' → logprob: -17.000001907348633
    7. '
' → logprob: -17.000001907348633
    8. '```' → logprob: -17.500001907348633
    9. ' [' → logprob: -18.375001907348633
    10. '...' → logprob: -19.500001907348633

Token 252: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.895480277715251e-06
    2. '+]' → logprob: -11.750008583068848
    3. ' +' → logprob: -14.750008583068848
    4. '1' → logprob: -15.125008583068848
    5. '+i' → logprob: -15.250008583068848
    6. '+
' → logprob: -16.625009536743164
    7. ']' → logprob: -17.500009536743164
    8. '+s' → logprob: -18.125009536743164
    9. '[' → logprob: -18.250009536743164
    10. '+"]' → logprob: -18.250009536743164

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '+' → logprob: -16.125
    4. '```' → logprob: -17.5
    5. '<|end|>' → logprob: -18.5
    6. '
' → logprob: -19.375
    7. '[' → logprob: -19.75
    8. '   ' → logprob: -19.9375
    9. 'i' → logprob: -20.0
    10. ']' → logprob: -20.25

Token 254: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011059731245040894
    2. ' =' → logprob: -4.511059761047363
    3. '=s' → logprob: -11.511059761047363
    4. 's' → logprob: -13.636059761047363
    5. '<|end|>' → logprob: -14.511059761047363
    6. '=
' → logprob: -15.886059761047363
    7. ']=' → logprob: -16.386058807373047
    8. ']' → logprob: -17.011058807373047
    9. '=

' → logprob: -17.136058807373047
    10. ')=' → logprob: -18.261058807373047

Token 255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014191361144185066
    2. ' =' → logprob: -4.264191150665283
    3. '=s' → logprob: -10.514191627502441
    4. '=
' → logprob: -15.014191627502441
    5. 's' → logprob: -15.764191627502441
    6. ',' → logprob: -16.264190673828125
    7. '.=' → logprob: -16.639190673828125
    8. '<|end|>' → logprob: -17.139190673828125
    9. '=

' → logprob: -17.264190673828125
    10. '＝' → logprob: -18.764190673828125

Token 256: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03376026451587677
    2. ' s' → logprob: -3.4087603092193604
    3. 'ss' → logprob: -9.158760070800781
    4. ' ss' → logprob: -11.658760070800781
    5. ' ' → logprob: -15.783760070800781
    6. '	s' → logprob: -16.22126007080078
    7. ' ' → logprob: -17.03376007080078
    8. '   ' → logprob: -17.15876007080078
    9. 'sss' → logprob: -17.28376007080078
    10. '  ' → logprob: -17.40876007080078

Token 257: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004922058433294296
    2. 's' → logprob: -5.504921913146973
    3. 'i' → logprob: -7.129921913146973
    4. 'ss' → logprob: -10.129921913146973
    5. '[s' → logprob: -14.254921913146973
    6. '(i' → logprob: -14.504921913146973
    7. '[' → logprob: -14.504921913146973
    8. ' s' → logprob: -15.754921913146973
    9. '_ss' → logprob: -16.12992286682129
    10. 'a' → logprob: -16.25492286682129

Token 258: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013834515120834112
    2. '[i' → logprob: -6.876383304595947
    3. 'i' → logprob: -8.251383781433105
    4. '+i' → logprob: -9.501383781433105
    5. '(i' → logprob: -11.376383781433105
    6. ',i' → logprob: -13.876383781433105
    7. ' +' → logprob: -14.251383781433105
    8. '{i' → logprob: -14.751383781433105
    9. '   ' → logprob: -15.251383781433105
    10. ' i' → logprob: -15.876383781433105

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.375017166137695
    3. 'i' → logprob: -12.625017166137695
    4. '+' → logprob: -13.000017166137695
    5. 's' → logprob: -14.875017166137695
    6. '
' → logprob: -17.625017166137695
    7. '   ' → logprob: -17.750017166137695
    8. ' i' → logprob: -17.750017166137695
    9. '```' → logprob: -18.000017166137695
    10. '(i' → logprob: -18.375017166137695

Token 260: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047082986566238105
    2. ',s' → logprob: -7.7504706382751465
    3. ' ,' → logprob: -10.250471115112305
    4. 's' → logprob: -12.500471115112305
    5. '],' → logprob: -14.500471115112305
    6. ',
' → logprob: -15.250471115112305
    7. ']' → logprob: -15.625471115112305
    8. ' s' → logprob: -16.000471115112305
    9. ',i' → logprob: -17.000471115112305
    10. ',

' → logprob: -17.750471115112305

Token 261: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1003061980009079
    2. ' s' → logprob: -2.350306272506714
    3. 'ss' → logprob: -9.225306510925293
    4. ' ss' → logprob: -14.475306510925293
    5. ' ' → logprob: -15.350306510925293
    6. '<|end|>' → logprob: -16.350305557250977
    7. '
' → logprob: -17.350305557250977
    8. '_s' → logprob: -17.350305557250977
    9. '	s' → logprob: -17.475305557250977
    10. 'ssp' → logprob: -17.725305557250977

Token 262: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04975403845310211
    2. 's' → logprob: -3.0497541427612305
    3. 'i' → logprob: -6.7997541427612305
    4. '[s' → logprob: -10.04975414276123
    5. 'ss' → logprob: -12.17475414276123
    6. '[' → logprob: -13.29975414276123
    7. ' s' → logprob: -14.29975414276123
    8. '```' → logprob: -14.54975414276123
    9. ' i' → logprob: -15.29975414276123
    10. '(i' → logprob: -16.049753189086914

Token 263: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02411620505154133
    2. ']
' → logprob: -3.774116277694702
    3. '<|end|>' → logprob: -7.649116039276123
    4. 's' → logprob: -8.274116516113281
    5. ' ]' → logprob: -9.774116516113281
    6. ']

' → logprob: -9.899116516113281
    7. '
' → logprob: -11.524116516113281
    8. ']
' → logprob: -12.274116516113281
    9. '           ' → logprob: -12.524116516113281
    10. '       ' → logprob: -13.274116516113281

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009124171338044107
    2. 'if' → logprob: -7.375912189483643
    3. ' if' → logprob: -8.6259126663208
    4. '
' → logprob: -10.0009126663208
    5. '       ' → logprob: -10.0009126663208
    6. '   ' → logprob: -12.1259126663208
    7. '               ' → logprob: -12.5009126663208
    8. '          ' → logprob: -12.7509126663208
    9. '                   ' → logprob: -14.0009126663208
    10. '```' → logprob: -14.5009126663208

Token 265: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3170977532863617
    2. ' if' → logprob: -1.317097783088684
    3. '           ' → logprob: -5.5670976638793945
    4. '       ' → logprob: -13.192097663879395
    5. '   ' → logprob: -13.317097663879395
    6. '```' → logprob: -14.067097663879395
    7. '          ' → logprob: -14.442097663879395
    8. '               ' → logprob: -14.567097663879395
    9. ' ' → logprob: -14.692097663879395
    10. '
' → logprob: -15.317097663879395

Token 266: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.31326499581336975
    2. 'check' → logprob: -1.3132649660110474
    3. '(check' → logprob: -13.063264846801758
    4. ' ' → logprob: -15.063264846801758
    5. '	check' → logprob: -15.063264846801758
    6. '   ' → logprob: -15.188264846801758
    7. '.check' → logprob: -16.438264846801758
    8. '           ' → logprob: -16.563264846801758
    9. ' not' → logprob: -17.188264846801758
    10. '  ' → logprob: -17.313264846801758

Token 267: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -4.0484450437361374e-05
    2. '_s' → logprob: -10.500040054321289
    3. 'ss' → logprob: -11.375040054321289
    4. '(ss' → logprob: -13.625040054321289
    5. '```' → logprob: -16.50004005432129
    6. 's' → logprob: -17.25004005432129
    7. '_(' → logprob: -18.37504005432129
    8. '_sn' → logprob: -18.37504005432129
    9. '	ss' → logprob: -18.37504005432129
    10. '_' → logprob: -18.75004005432129

Token 268: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007610413245856762
    2. 's' → logprob: -5.382610321044922
    3. '_s' → logprob: -6.382610321044922
    4. '_ss' → logprob: -7.257610321044922
    5. 'ss' → logprob: -7.757610321044922
    6. '_n' → logprob: -9.507610321044922
    7. 'r' → logprob: -10.132610321044922
    8. '(s' → logprob: -10.632610321044922
    9. 'm' → logprob: -12.257610321044922
    10. 'd' → logprob: -12.382610321044922

Token 269: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.7697225252486533e-06
    2. 's' → logprob: -13.000003814697266
    3. '(' → logprob: -14.250003814697266
    4. ' (' → logprob: -14.375003814697266
    5. '(ss' → logprob: -16.000003814697266
    6. ')' → logprob: -18.000003814697266
    7. '[s' → logprob: -18.125003814697266
    8. '(
' → logprob: -18.125003814697266
    9. '((' → logprob: -18.750003814697266
    10. '
' → logprob: -19.125003814697266

Token 270: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021778015419840813
    2. '()' → logprob: -4.521778106689453
    3. ' ==' → logprob: -5.396778106689453
    4. '==' → logprob: -5.521778106689453
    5. ')==' → logprob: -6.271778106689453
    6. '()==' → logprob: -9.146778106689453
    7. ' )' → logprob: -9.396778106689453
    8. ']' → logprob: -10.771778106689453
    9. '   ' → logprob: -11.396778106689453
    10. ']==' → logprob: -11.896778106689453

Token 271: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2523486614227295
    2. '==' → logprob: -1.5023486614227295
    3. '()==' → logprob: -8.502348899841309
    4. '()' → logprob: -9.502348899841309
    5. ')' → logprob: -9.627348899841309
    6. ' !=' → logprob: -10.002348899841309
    7. ')==' → logprob: -11.002348899841309
    8. '!=' → logprob: -11.627348899841309
    9. ']==' → logprob: -13.252348899841309
    10. ' ' → logprob: -13.877348899841309

Token 272: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003600782947614789
    2. ' ' → logprob: -5.628600597381592
    3. '   ' → logprob: -14.37860107421875
    4. '  ' → logprob: -16.25360107421875
    5. ' ' → logprob: -17.37860107421875
    6. '۰' → logprob: -17.50360107421875
    7. '    ' → logprob: -18.44110107421875
    8. '00' → logprob: -18.81610107421875
    9. '[' → logprob: -19.00360107421875
    10. '	' → logprob: -19.31610107421875

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '1' → logprob: -18.187519073486328
    4. '۰' → logprob: -18.187519073486328
    5. '   ' → logprob: -18.250019073486328
    6. '  ' → logprob: -18.875019073486328
    7. '00' → logprob: -19.125019073486328
    8. '[' → logprob: -19.312519073486328
    9. '```' → logprob: -19.750019073486328
    10. '000' → logprob: -19.812519073486328

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08918798714876175
    2. ':
' → logprob: -2.4641880989074707
    3. '               ' → logprob: -8.589187622070312
    4. '           ' → logprob: -10.339187622070312
    5. '=' → logprob: -12.089187622070312
    6. ',' → logprob: -12.214187622070312
    7. ':

' → logprob: -12.464187622070312
    8. ' and' → logprob: -12.589187622070312
    9. '):
' → logprob: -12.964187622070312
    10. ':
' → logprob: -13.089187622070312

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026867598295211792
    2. ' fail' → logprob: -4.276867389678955
    3. 'fail' → logprob: -4.401867389678955
    4. '           ' → logprob: -8.151867866516113
    5. '              ' → logprob: -10.776867866516113
    6. 'count' → logprob: -11.526867866516113
    7. ':
' → logprob: -11.776867866516113
    8. '                   ' → logprob: -11.901867866516113
    9. '             ' → logprob: -12.151867866516113
    10. '                
' → logprob: -12.151867866516113

Token 276: ' fail' (ID: 7111)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' (adapté à ' fail') → logprob: -0.34276053309440613
    2. ' fail' → logprob: -1.8427605628967285
    3. '       ' → logprob: -2.8427605628967285
    4. '           ' → logprob: -3.0927605628967285
    5. 'count' → logprob: -3.7177605628967285
    6. ' count' → logprob: -6.4677605628967285
    7. '   ' → logprob: -6.5927605628967285
    8. '               ' → logprob: -7.0927605628967285
    9. '	fail' → logprob: -10.34276008605957
    10. 'continue' → logprob: -11.34276008605957

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026809811592102
    2. ' =' → logprob: -1.9102680683135986
    3. '=True' → logprob: -10.03526782989502
    4. 'True' → logprob: -17.410268783569336
    5. ' ' → logprob: -18.160268783569336
    6. '=
' → logprob: -18.285268783569336
    7. '=

' → logprob: -18.285268783569336
    8. '   ' → logprob: -19.035268783569336
    9. ' =
' → logprob: -19.035268783569336
    10. '[' → logprob: -19.035268783569336

Token 278: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '=True' → logprob: -18.626171112060547
    4. '(True' → logprob: -20.251171112060547
    5. 'False' → logprob: -23.626171112060547
    6. '.True' → logprob: -24.001171112060547
    7. 'Tr' → logprob: -24.126171112060547
    8. '   ' → logprob: -24.501171112060547
    9. '1' → logprob: -24.876171112060547
    10. ' ' → logprob: -25.001171112060547

Token 279: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001367977005429566
    2. '<|end|>' → logprob: -6.751368045806885
    3. '           ' → logprob: -10.001367568969727
    4. '			' → logprob: -10.126367568969727
    5. '                   ' → logprob: -10.251367568969727
    6. '
' → logprob: -11.126367568969727
    7. '                
' → logprob: -11.251367568969727
    8. '       ' → logprob: -11.501367568969727
    9. '              ' → logprob: -11.751367568969727
    10. '<|end|>' → logprob: -12.001367568969727

Token 280: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007616263465024531
    2. '<|end|>' → logprob: -8.000761985778809
    3. '       ' → logprob: -8.500761985778809
    4. '           ' → logprob: -8.875761985778809
    5. '			' → logprob: -10.625761985778809
    6. '                   ' → logprob: -11.500761985778809
    7. '		       ' → logprob: -11.750761985778809
    8. '	' → logprob: -11.875761985778809
    9. '```' → logprob: -11.875761985778809
    10. '              ' → logprob: -12.250761985778809

Token 281: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.9708360433578491
    2. 'break' (adapté à ' break') → logprob: -0.9708360433578491
    3. '               ' → logprob: -1.4708360433578491
    4. '           ' → logprob: -4.595836162567139
    5. '       ' → logprob: -5.970836162567139
    6. '   ' → logprob: -9.72083568572998
    7. '	break' → logprob: -11.59583568572998
    8. '                   ' → logprob: -11.84583568572998
    9. '              ' → logprob: -12.72083568572998
    10. '             ' → logprob: -13.34583568572998

Token 282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002259806264191866
    2. 'if' → logprob: -6.127259731292725
    3. ' if' → logprob: -10.627260208129883
    4. '```' → logprob: -10.627260208129883
    5. '<|end|>' → logprob: -11.877260208129883
    6. '       ' → logprob: -12.002260208129883
    7. ')' → logprob: -12.627260208129883
    8. 'continue' → logprob: -12.877260208129883
    9. 'count' → logprob: -13.127260208129883
    10. '
' → logprob: -13.627260208129883

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04043127968907356
    2. 'if' → logprob: -3.290431261062622
    3. ' if' → logprob: -6.165431499481201
    4. ')' → logprob: -8.790431022644043
    5. '<|end|>' → logprob: -10.040431022644043
    6. '```' → logprob: -10.540431022644043
    7. '       ' → logprob: -10.665431022644043
    8. ')
' → logprob: -11.415431022644043
    9. '
' → logprob: -12.040431022644043
    10. '    
' → logprob: -12.290431022644043

Token 284: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005283685750328004
    2. ' if' → logprob: -8.125528335571289
    3. '   ' → logprob: -8.375528335571289
    4. '```' → logprob: -14.625528335571289
    5. ')' → logprob: -15.125528335571289
    6. 'If' → logprob: -15.125528335571289
    7. ' ' → logprob: -15.250528335571289
    8. '<|end|>' → logprob: -15.500528335571289
    9. 'else' → logprob: -15.625528335571289
    10. '	if' → logprob: -15.875528335571289

Token 285: ' fail' (ID: 7111)
  Prédit: ' fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fail' → logprob: -0.01850154623389244
    2. 'fail' → logprob: -4.0185017585754395
    3. ' not' → logprob: -8.018501281738281
    4. 'not' → logprob: -11.393501281738281
    5. ' ' → logprob: -12.143501281738281
    6. '	fail' → logprob: -12.643501281738281
    7. '.fail' → logprob: -14.393501281738281
    8. '_fail' → logprob: -14.518501281738281
    9. ' ' → logprob: -14.768501281738281
    10. ' fails' → logprob: -15.518501281738281

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004126842133700848
    2. ':
' → logprob: -5.504127025604248
    3. '==' → logprob: -10.75412654876709
    4. '=' → logprob: -11.62912654876709
    5. '   ' → logprob: -12.12912654876709
    6. '       ' → logprob: -12.25412654876709
    7. ':return' → logprob: -13.50412654876709
    8. ' :' → logprob: -13.62912654876709
    9. ' ==' → logprob: -13.62912654876709
    10. ':

' → logprob: -13.75412654876709

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010069658746942878
    2. 'count' → logprob: -7.126007080078125
    3. '   ' → logprob: -8.876007080078125
    4. ' count' → logprob: -10.001007080078125
    5. '           ' → logprob: -12.001007080078125
    6. 'continue' → logprob: -12.501007080078125
    7. '      ' → logprob: -13.626007080078125
    8. 'break' → logprob: -14.126007080078125
    9. '```' → logprob: -14.251007080078125
    10. '	count' → logprob: -14.626007080078125

Token 288: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9072925448417664
    2. 'count' (adapté à ' count') → logprob: -0.9072925448417664
    3. ' count' → logprob: -2.157292604446411
    4. '   ' → logprob: -2.657292604446411
    5. 'continue' → logprob: -5.532292366027832
    6. ' continue' → logprob: -5.907292366027832
    7. ' ' → logprob: -8.782292366027832
    8. '	count' → logprob: -9.907292366027832
    9. '           ' → logprob: -10.157292366027832
    10. '```' → logprob: -10.532292366027832

Token 289: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47415491938591003
    2. ' +=' → logprob: -0.9741549491882324
    3. '+' → logprob: -9.474154472351074
    4. ']+=' → logprob: -14.599154472351074
    5. ' +' → logprob: -15.224154472351074
    6. '+="' → logprob: -15.724154472351074
    7. '+='' → logprob: -16.34915542602539
    8. '+=(' → logprob: -17.09915542602539
    9. '   ' → logprob: -17.34915542602539
    10. ' ' → logprob: -17.59915542602539

Token 290: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.514163970947266
    4. '```' → logprob: -16.514163970947266
    5. '0' → logprob: -17.264163970947266
    6. '
' → logprob: -18.514163970947266
    7. '10' → logprob: -18.639163970947266
    8. '       ' → logprob: -18.764163970947266
    9. '  ' → logprob: -18.889163970947266
    10. '2' → logprob: -18.889163970947266

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -20.00000762939453
    4. '0' → logprob: -20.50000762939453
    5. '   ' → logprob: -20.50000762939453
    6. '-' → logprob: -20.50000762939453
    7. 'continue' → logprob: -20.87500762939453
    8. '
' → logprob: -20.87500762939453
    9. '2' → logprob: -21.37500762939453
    10. '100' → logprob: -21.50000762939453

Token 292: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006232033483684063
    2. '
' → logprob: -7.5006232261657715
    3. 'continue' → logprob: -9.875622749328613
    4. ' print' → logprob: -11.625622749328613
    5. '       ' → logprob: -12.875622749328613
    6. '        
' → logprob: -13.125622749328613
    7. '   ' → logprob: -13.125622749328613
    8. '    
' → logprob: -13.500622749328613
    9. ' 
' → logprob: -14.750622749328613
    10. 'else' → logprob: -14.875622749328613

Token 293: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.572941179503687e-05
    2. 'else' → logprob: -10.375045776367188
    3. '
' → logprob: -11.750045776367188
    4. ' print' → logprob: -12.125045776367188
    5. '```' → logprob: -14.000045776367188
    6. ' else' → logprob: -15.750045776367188
    7. '    
' → logprob: -16.875045776367188
    8. ')' → logprob: -17.000045776367188
    9. ')
' → logprob: -17.750045776367188
    10. '   ' → logprob: -18.625045776367188

Token 294: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.875003814697266
    3. 'count' → logprob: -14.000003814697266
    4. '(len' → logprob: -17.500003814697266
    5. ',count' → logprob: -18.875003814697266
    6. '(cnt' → logprob: -19.500003814697266
    7. '('' → logprob: -19.500003814697266
    8. ' (' → logprob: -19.750003814697266
    9. '=count' → logprob: -19.750003814697266
    10. '<count' → logprob: -20.000003814697266

Token 295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. '+' → logprob: -12.000008583068848
    3. ' )' → logprob: -14.375008583068848
    4. '))' → logprob: -14.750008583068848
    5. '()' → logprob: -14.875008583068848
    6. ')
' → logprob: -15.125008583068848
    7. ')`' → logprob: -15.375008583068848
    8. '())' → logprob: -15.500008583068848
    9. '**' → logprob: -16.12500762939453
    10. '*' → logprob: -16.62500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 293
Tokens correctement prédits (1ère position, stricte): 128
Tokens correctement prédits (1ère position, avec adaptation): 141
Tokens correctement prédits (top 10): 249
Précision stricte (1ère position): 43.69%
Précision adaptée (1ère position): 48.12%
Précision (top 10): 84.98%
================================================================================
