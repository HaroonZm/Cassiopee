================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from fractions import Fraction

def modinv(a, m):
    # inverse of a mod m
    b, u, v = m, 1, 0
    while b:
        t = a // b
        a -= t * b
        a, b = b, a
        u -= t * v
        u, v = v, u
    return u % m

def gcd(a,b):
    while b:
        a,b = b, a%b
    return a

def solve_case(n,k,m,r):
    if n == 1:
        # only one mountain, always success
        p = Fraction(1,1)
    else:
        # probability of failure without restart (m=0)
        # p_fail_no_restart = 1/n^k  (prob that all k sets put card 1 in mountain 1,
        # actually the problem reduces to probability no fail)
        # But from problem analysis:
        # The chain of draws is success iff there is no "dead end".
        # The only failure without restart is if the chain breaks before all cards drawn.
        # Actually from editorial: probability success without restart = k/n^k * (n-1)^k

        # This problem is complex in combinatorics,
        # but given the constraints and from editorial (see below),
        # we use the formula given:

        # From editorial and problem discussion:
        # Probability that the game succeeds without restart:
        # p1 = k^n / (n^(k*n)) ?? But this is complex.

        # Instead, note that cards are shuffled randomly and independently.
        # The probability that the first draw is 1 is k/nk = 1/n (pick one card with number 1 among kn cards),
        # but it's more complex due to structure.

        # Fortunately, the problem is well known (AtCoder Grand Contest 043 C)
        # and editorial states that the answer is:

        # Without restart:
        # the probability of success is (k/n)^n.

        # With restart m=1:
        # success probability = 1 - (1 - (k/n)^n)^2 = (k/n)^n * (2 - (k/n)^n)

        # Let's follow these formulas.

        p_no_restart = Fraction(k,n)**n

        if m == 0:
            p = p_no_restart
        else:
            p = 1 - (1 - p_no_restart)**2

    # output p as decimal with r digits after decimal point
    # print with trailing zeros up to r decimal places

    # convert fraction to decimal string
    # p is Fraction

    # get integer part and fractional part separately
    integer_part = p.numerator // p.denominator
    remainder = p.numerator % p.denominator

    decimal_digits = []
    for _ in range(r):
        remainder *= 10
        decimal_digit = remainder // p.denominator
        remainder = remainder % p.denominator
        decimal_digits.append(str(decimal_digit))
    # rounding not needed according to problem statement

    print(str(integer_part) + '.' + ''.join(decimal_digits))

def main():
    for line in sys.stdin:
        if not line.strip():
            continue
        n,k,m,r = map(int,line.split())
        if n == 0 and k ==0 and m==0 and r==0:
            break
        solve_case(n,k,m,r)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32055988907814026
    2. '.' → logprob: -1.4455598592758179
    3. 'import' → logprob: -4.570559978485107
    4. '\' → logprob: -4.570559978485107
    5. 'newline' → logprob: -5.195559978485107
    6. '<|end|>' → logprob: -5.320559978485107
    7. '
' → logprob: -6.570559978485107
    8. '```' → logprob: -7.070559978485107
    9. '<|end|>' → logprob: -7.195559978485107
    10. '\r' → logprob: -7.195559978485107

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00029947367147542536
    2. 'os' → logprob: -8.125299453735352
    3. ' math' → logprob: -13.625299453735352
    4. ' re' → logprob: -14.000299453735352
    5. '"os' → logprob: -14.625299453735352
    6. ' json' → logprob: -14.875299453735352
    7. '_os' → logprob: -15.625299453735352
    8. '	os' → logprob: -16.12529945373535
    9. ' ' → logprob: -16.50029945373535
    10. ' ' → logprob: -16.75029945373535

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13568931818008423
    2. 'import' → logprob: -3.2606892585754395
    3. '\' → logprob: -3.5106892585754395
    4. '\n' → logprob: -3.8856892585754395
    5. '
' → logprob: -4.1356892585754395
    6. '

' → logprob: -5.1356892585754395
    7. '```' → logprob: -5.3856892585754395
    8. '<|end|>' → logprob: -5.5106892585754395
    9. ',' → logprob: -6.0106892585754395
    10. '<|end|>' → logprob: -7.0106892585754395

Token 6: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3643665313720703
    2. '\n' → logprob: -1.4893665313720703
    3. '.' → logprob: -1.6143665313720703
    4. 'import' → logprob: -2.2393665313720703
    5. '

' → logprob: -2.3643665313720703
    6. '\' → logprob: -2.9893665313720703
    7. '```' → logprob: -3.2393665313720703
    8. '<|end|>' → logprob: -5.11436653137207
    9. ',' → logprob: -5.36436653137207
    10. '' → logprob: -5.61436653137207

Token 7: ' fractions' (ID: 110523)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6536146402359009
    2. ' os' → logprob: -0.7786146402359009
    3. 'collections' → logprob: -4.903614521026611
    4. 'os' → logprob: -5.278614521026611
    5. ' datetime' → logprob: -5.778614521026611
    6. ' itertools' → logprob: -6.653614521026611
    7. ' typing' → logprob: -6.778614521026611
    8. ' numpy' → logprob: -7.528614521026611
    9. ' statistics' → logprob: -7.653614521026611
    10. ' math' → logprob: -7.778614521026611

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023274600505828857
    2. 'import' → logprob: -3.7732746601104736
    3. ' ' → logprob: -11.398274421691895
    4. '	import' → logprob: -11.898274421691895
    5. '<|end|>' → logprob: -12.648274421691895
    6. '_import' → logprob: -13.148274421691895
    7. '.' → logprob: -13.148274421691895
    8. '<|end|>' → logprob: -13.898274421691895
    9. ' ' → logprob: -14.773274421691895
    10. ' importar' → logprob: -14.898274421691895

Token 9: ' Fraction' (ID: 112108)
  Prédit: ' Fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.11284605413675308
    2. 'Fraction' → logprob: -2.2378461360931396
    3. ' gcd' → logprob: -11.487846374511719
    4. ' fractions' → logprob: -11.862846374511719
    5. 'Fra' → logprob: -13.112846374511719
    6. ' Fra' → logprob: -13.987846374511719
    7. '_fraction' → logprob: -13.987846374511719
    8. ' fraction' → logprob: -14.362846374511719
    9. ' ' → logprob: -14.862846374511719
    10. ' ' → logprob: -14.987846374511719

Token 10: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.34866073727607727
    2. 'import' → logprob: -2.098660707473755
    3. '```' → logprob: -3.223660707473755
    4. '\' → logprob: -3.473660707473755
    5. '<|end|>' → logprob: -3.848660707473755
    6. '
' → logprob: -3.973660707473755
    7. 'a' → logprob: -4.598660945892334
    8. '.' → logprob: -4.848660945892334
    9. 'def' → logprob: -4.973660945892334
    10. ',' → logprob: -5.348660945892334

Token 11: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7651782631874084
    2. '\' → logprob: -1.6401782035827637
    3. 'def' → logprob: -1.8901782035827637
    4. 'import' → logprob: -3.2651782035827637
    5. 'a' → logprob: -3.3901782035827637
    6. '```' → logprob: -3.8901782035827637
    7. '
' → logprob: -4.015178203582764
    8. 'x' → logprob: -4.015178203582764
    9. ',' → logprob: -4.515178203582764
    10. '

' → logprob: -4.640178203582764

Token 12: ' mod' (ID: 1812)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.8045374751091003
    2. ' gcd' → logprob: -1.6795375347137451
    3. ' ' → logprob: -1.9295375347137451
    4. ' factor' → logprob: -3.054537534713745
    5. ' factorial' → logprob: -3.429537534713745
    6. ' space' → logprob: -3.554537534713745
    7. '_' → logprob: -4.179537296295166
    8. '_factor' → logprob: -4.304537296295166
    9. ' add' → logprob: -4.429537296295166
    10. ' find' → logprob: -4.929537296295166

Token 13: 'inv' (ID: 31086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0324288047850132
    2. ' _' → logprob: -4.532428741455078
    3. '(' → logprob: -4.907428741455078
    4. 'ular' → logprob: -5.782428741455078
    5. '_factor' → logprob: -6.282428741455078
    6. '_exp' → logprob: -6.782428741455078
    7. '_space' → logprob: -6.907428741455078
    8. 'ulo' → logprob: -7.532428741455078
    9. 'ulu' → logprob: -7.657428741455078
    10. '_pow' → logprob: -7.782428741455078

Token 14: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003301016695331782
    2. ' (' → logprob: -8.500329971313477
    3. '<|end|>' → logprob: -10.250329971313477
    4. '(n' → logprob: -10.875329971313477
    5. '(
' → logprob: -11.375329971313477
    6. '(a' → logprob: -11.500329971313477
    7. '_' → logprob: -11.500329971313477
    8. '(x' → logprob: -12.125329971313477
    9. '<|end|>' → logprob: -12.125329971313477
    10. '(token' → logprob: -12.125329971313477

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.244413766078651e-05
    2. ' ,' → logprob: -10.000082015991211
    3. ',a' → logprob: -10.625082015991211
    4. ')' → logprob: -11.750082015991211
    5. 'a' → logprob: -13.750082015991211
    6. ',n' → logprob: -14.125082015991211
    7. ',
' → logprob: -14.375082015991211
    8. ',b' → logprob: -14.375082015991211
    9. ',

' → logprob: -14.375082015991211
    10. ',)' → logprob: -14.625082015991211

Token 16: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25413423776626587
    2. ' m' → logprob: -1.504134178161621
    3. 'b' → logprob: -6.629134178161621
    4. ' b' → logprob: -7.629134178161621
    5. 'n' → logprob: -8.379134178161621
    6. ' n' → logprob: -9.504134178161621
    7. 'mod' → logprob: -10.129134178161621
    8. ' ' → logprob: -11.004134178161621
    9. '   ' → logprob: -11.754134178161621
    10. ' mod' → logprob: -11.754134178161621

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1269853264093399
    2. ')' → logprob: -2.1269853115081787
    3. ' ):' → logprob: -10.251985549926758
    4. '):
' → logprob: -11.501985549926758
    5. ' )' → logprob: -12.251985549926758
    6. ':' → logprob: -12.876985549926758
    7. ')：' → logprob: -13.751985549926758
    8. ')=' → logprob: -14.501985549926758
    9. ' ' → logprob: -14.751985549926758
    10. '):
' → logprob: -14.876985549926758

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6162334680557251
    2. '   ' → logprob: -0.9912334680557251
    3. ' :' → logprob: -3.1162333488464355
    4. '):' → logprob: -3.4912333488464355
    5. ' ' → logprob: -5.3662333488464355
    6. ' ):' → logprob: -6.4912333488464355
    7. ')' → logprob: -6.4912333488464355
    8. ':**' → logprob: -6.7412333488464355
    9. '():' → logprob: -7.1162333488464355
    10. ':return' → logprob: -7.2412333488464355

Token 19: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33504554629325867
    2. ' return' → logprob: -1.835045576095581
    3. '    ' → logprob: -2.335045576095581
    4. ' x' → logprob: -4.960045337677002
    5. ' ' → logprob: -5.460045337677002
    6. 'def' → logprob: -5.710045337677002
    7. 'return' → logprob: -5.960045337677002
    8. ' b' → logprob: -6.335045337677002
    9. ' pass' → logprob: -6.835045337677002
    10. ' """' → logprob: -6.835045337677002

Token 20: ' inverse' (ID: 53743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4523620903491974
    2. ' return' → logprob: -1.827362060546875
    3. ' space' → logprob: -2.952362060546875
    4. '    ' → logprob: -3.327362060546875
    5. ' try' → logprob: -3.452362060546875
    6. ' a' → logprob: -3.952362060546875
    7. ' ' → logprob: -4.202362060546875
    8. ' x' → logprob: -4.452362060546875
    9. ' """' → logprob: -5.327362060546875
    10. 'def' → logprob: -5.452362060546875

Token 21: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20668797194957733
    2. '_' → logprob: -3.0816879272460938
    3. ')' → logprob: -3.3316879272460938
    4. ' )' → logprob: -3.9566879272460938
    5. ' =' → logprob: -3.9566879272460938
    6. 'a' → logprob: -4.081687927246094
    7. '<|end|>' → logprob: -4.081687927246094
    8. '  ' → logprob: -5.206687927246094
    9. ' a' → logprob: -5.581687927246094
    10. '   ' → logprob: -5.706687927246094

Token 22: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47411152720451355
    2. ' a' → logprob: -0.9741115570068359
    3. ' ' → logprob: -10.349111557006836
    4. '	a' → logprob: -13.724111557006836
    5. ' `' → logprob: -14.724111557006836
    6. 'mod' → logprob: -15.474111557006836
    7. ' ' → logprob: -15.599111557006836
    8. ' modulo' → logprob: -15.724111557006836
    9. ' the' → logprob: -16.474111557006836
    10. '   ' → logprob: -16.599111557006836

Token 23: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034905221313238144
    2. ' %' → logprob: -3.784905195236206
    3. ')' → logprob: -5.534905433654785
    4. '%' → logprob: -6.034905433654785
    5. ' )' → logprob: -6.534905433654785
    6. ' mod' → logprob: -6.784905433654785
    7. ' modulo' → logprob: -6.909905433654785
    8. ',' → logprob: -7.409905433654785
    9. 'mod' → logprob: -8.409905433654785
    10. ' %=' → logprob: -8.534905433654785

Token 24: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.293864369392395
    2. ' ' → logprob: -1.543864369392395
    3. 'm' → logprob: -3.2938642501831055
    4. ' a' → logprob: -5.9188642501831055
    5. 'a' → logprob: -8.043864250183105
    6. '  ' → logprob: -8.543864250183105
    7. '<|end|>' → logprob: -9.043864250183105
    8. ' ' → logprob: -9.293864250183105
    9. ' `' → logprob: -9.543864250183105
    10. ' )' → logprob: -9.918864250183105

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35217344760894775
    2. ':' → logprob: -1.6021734476089478
    3. ' :' → logprob: -3.102173328399658
    4. ' ' → logprob: -4.477173328399658
    5. ' =' → logprob: -4.727173328399658
    6. '    ' → logprob: -4.977173328399658
    7. ' return' → logprob: -5.227173328399658
    8. '=' → logprob: -5.477173328399658
    9. '  ' → logprob: -5.977173328399658
    10. ',' → logprob: -6.477173328399658

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29467883706092834
    2. ':' → logprob: -1.419678807258606
    3. ' :' → logprob: -4.919678688049316
    4. ' ' → logprob: -7.044678688049316
    5. ' return' → logprob: -7.169678688049316
    6. ' =' → logprob: -7.294678688049316
    7. ',' → logprob: -7.419678688049316
    8. '    ' → logprob: -7.544678688049316
    9. '  ' → logprob: -7.794678688049316
    10. '=' → logprob: -7.919678688049316

Token 27: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042026739567518234
    2. '    ' → logprob: -4.042026519775391
    3. ' return' → logprob: -4.292026519775391
    4. ':' → logprob: -5.917026519775391
    5. ' ' → logprob: -6.042026519775391
    6. 'return' → logprob: -6.167026519775391
    7. ' :' → logprob: -6.917026519775391
    8. '       ' → logprob: -7.792026519775391
    9. '  ' → logprob: -8.41702651977539
    10. ' try' → logprob: -8.54202651977539

Token 28: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20615129172801971
    2. ',' → logprob: -1.8311512470245361
    3. '=' → logprob: -4.206151485443115
    4. ' ,' → logprob: -4.581151485443115
    5. ' ' → logprob: -7.081151485443115
    6. ',e' → logprob: -11.206151008605957
    7. '   ' → logprob: -11.331151008605957
    8. '  ' → logprob: -11.456151008605957
    9. ')' → logprob: -11.956151008605957
    10. 'e' → logprob: -12.206151008605957

Token 29: ' u' (ID: 337)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6666980981826782
    2. 'a' → logprob: -1.5416980981826782
    3. ' m' → logprob: -1.7916980981826782
    4. ' a' → logprob: -3.0416979789733887
    5. ' ' → logprob: -4.416697978973389
    6. '   ' → logprob: -4.416697978973389
    7. '<|end|>' → logprob: -4.416697978973389
    8. 'e' → logprob: -5.041697978973389
    9. '=' → logprob: -5.291697978973389
    10. '    ' → logprob: -5.666697978973389

Token 30: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8305835723876953
    2. ',' → logprob: -1.2055835723876953
    3. ' =' → logprob: -1.3305835723876953
    4. ' ,' → logprob: -8.330583572387695
    5. ' ' → logprob: -10.205583572387695
    6. '   ' → logprob: -10.330583572387695
    7. '  ' → logprob: -11.580583572387695
    8. ',v' → logprob: -11.705583572387695
    9. '    ' → logprob: -12.080583572387695
    10. 's' → logprob: -12.580583572387695

Token 31: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012542732991278172
    2. ' v' → logprob: -4.387542724609375
    3. ' ' → logprob: -11.887542724609375
    4. '  ' → logprob: -12.137542724609375
    5. 'b' → logprob: -12.512542724609375
    6. 'u' → logprob: -12.512542724609375
    7. '	v' → logprob: -12.637542724609375
    8. '    ' → logprob: -13.512542724609375
    9. '   ' → logprob: -13.512542724609375
    10. 'd' → logprob: -13.637542724609375

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859384149312973
    2. '=' → logprob: -3.048593759536743
    3. ',' → logprob: -12.048593521118164
    4. ' ' → logprob: -15.048593521118164
    5. '   ' → logprob: -16.298593521118164
    6. '  ' → logprob: -16.423593521118164
    7. '=int' → logprob: -16.923593521118164
    8. ' ,' → logprob: -17.298593521118164
    9. '    ' → logprob: -17.548593521118164
    10. '=b' → logprob: -18.173593521118164

Token 33: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03972740098834038
    2. ' m' → logprob: -3.4147274494171143
    3. '0' → logprob: -5.164727210998535
    4. 'b' → logprob: -8.789727210998535
    5. ' ' → logprob: -9.539727210998535
    6. 'a' → logprob: -9.789727210998535
    7. '1' → logprob: -9.914727210998535
    8. ' b' → logprob: -11.539727210998535
    9. '   ' → logprob: -12.664727210998535
    10. ' a' → logprob: -13.664727210998535

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014220036566257477
    2. ' ,' → logprob: -4.264220237731934
    3. ',a' → logprob: -10.514220237731934
    4. ' ' → logprob: -10.764220237731934
    5. ',b' → logprob: -12.514220237731934
    6. 'a' → logprob: -13.264220237731934
    7. '=' → logprob: -14.139220237731934
    8. ' =' → logprob: -15.014220237731934
    9. ',u' → logprob: -15.264220237731934
    10. ',
' → logprob: -15.389220237731934

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004473540757317096
    2. ' ' → logprob: -7.7504472732543945
    3. '0' → logprob: -11.250447273254395
    4. 'a' → logprob: -12.625447273254395
    5. ' a' → logprob: -15.375447273254395
    6. '```' → logprob: -16.00044822692871
    7. '   ' → logprob: -17.00044822692871
    8. '  ' → logprob: -17.62544822692871
    9. '    ' → logprob: -19.12544822692871
    10. '１' → logprob: -19.12544822692871

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006721756421029568
    2. 'a' → logprob: -5.0067219734191895
    3. ' a' → logprob: -12.381721496582031
    4. ' ' → logprob: -13.756721496582031
    5. '0' → logprob: -13.756721496582031
    6. '```' → logprob: -16.13172149658203
    7. '	a' → logprob: -18.50672149658203
    8. 'а' → logprob: -20.00672149658203
    9. '   ' → logprob: -20.13172149658203
    10. ',a' → logprob: -20.25672149658203

Token 37: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07479994744062424
    2. ',' → logprob: -2.9498000144958496
    3. ' ' → logprob: -3.9498000144958496
    4. ' ,' → logprob: -7.94980001449585
    5. '1' → logprob: -10.574799537658691
    6. 'a' → logprob: -10.824799537658691
    7. '-' → logprob: -11.199799537658691
    8. '  ' → logprob: -11.449799537658691
    9. '```' → logprob: -11.574799537658691
    10. '    ' → logprob: -11.574799537658691

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '1' → logprob: -16.125051498413086
    4. '۰' → logprob: -19.125051498413086
    5. '```' → logprob: -20.875051498413086
    6. '  ' → logprob: -21.125051498413086
    7. '   ' → logprob: -21.750051498413086
    8. '<|end|>' → logprob: -22.000051498413086
    9. '０' → logprob: -22.125051498413086
    10. '০' → logprob: -22.812551498413086

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -19.625
    4. '1' → logprob: -20.875
    5. '０' → logprob: -22.5
    6. '০' → logprob: -23.625
    7. '٠' → logprob: -23.875
    8. '<|end|>' → logprob: -24.25
    9. '०' → logprob: -25.0
    10. '```' → logprob: -25.25

Token 40: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6963200569152832
    2. ' ' → logprob: -2.196320056915283
    3. ' ,' → logprob: -2.321320056915283
    4. ' 
' → logprob: -2.446320056915283
    5. ' while' → logprob: -2.696320056915283
    6. 'while' → logprob: -3.446320056915283
    7. '
' → logprob: -3.571320056915283
    8. '     
' → logprob: -3.946320056915283
    9. '   
' → logprob: -4.446320056915283
    10. ',
' → logprob: -5.196320056915283

Token 41: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8036309480667114
    2. ',' → logprob: -1.6786309480667114
    3. 'while' → logprob: -2.428630828857422
    4. ' ' → logprob: -2.553630828857422
    5. '   ' → logprob: -2.803630828857422
    6. ' ,' → logprob: -3.178630828857422
    7. '
' → logprob: -4.553630828857422
    8. 'a' → logprob: -4.928630828857422
    9. '```' → logprob: -4.928630828857422
    10. '  ' → logprob: -5.053630828857422

Token 42: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3128468692302704
    2. ' ' → logprob: -1.9378468990325928
    3. 'while' (adapté à ' while') → logprob: -3.0628468990325928
    4. '   ' → logprob: -3.6878468990325928
    5. ',' → logprob: -4.437846660614014
    6. '    ' → logprob: -4.562846660614014
    7. '	while' → logprob: -5.187846660614014
    8. 'a' → logprob: -5.312846660614014
    9. '```' → logprob: -6.062846660614014
    10. '     
' → logprob: -6.312846660614014

Token 43: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1303112953901291
    2. 'a' → logprob: -2.7553112506866455
    3. ' b' → logprob: -2.8803112506866455
    4. ' a' → logprob: -6.005311489105225
    5. 'u' → logprob: -13.005311012268066
    6. ' ' → logprob: -13.755311012268066
    7. ' u' → logprob: -14.130311012268066
    8. '   ' → logprob: -14.630311012268066
    9. '	b' → logprob: -14.880311012268066
    10. ' not' → logprob: -15.505311012268066

Token 44: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5427859425544739
    2. ' >' → logprob: -1.167785882949829
    3. '>' → logprob: -2.542785882949829
    4. '!=' → logprob: -3.917785882949829
    5. ':' → logprob: -5.417786121368408
    6. ' ' → logprob: -5.542786121368408
    7. ' and' → logprob: -7.917786121368408
    8. ' !' → logprob: -9.04278564453125
    9. ' :' → logprob: -9.54278564453125
    10. '!' → logprob: -9.66778564453125

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6564793586730957
    2. '       ' → logprob: -1.5314793586730957
    3. ' =' → logprob: -2.1564793586730957
    4. '    ' → logprob: -2.7814793586730957
    5. ' ' → logprob: -3.0314793586730957
    6. '=' → logprob: -4.531479358673096
    7. '```' → logprob: -5.281479358673096
    8. '    
' → logprob: -5.656479358673096
    9. ':' → logprob: -5.906479358673096
    10. '     ' → logprob: -6.031479358673096

Token 46: ' t' (ID: 260)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5627304911613464
    2. ' ' → logprob: -1.8127305507659912
    3. ' q' → logprob: -2.312730550765991
    4. '   ' → logprob: -2.687730550765991
    5. 'q' → logprob: -2.812730550765991
    6. 'r' → logprob: -4.562730312347412
    7. ' t' → logprob: -5.187730312347412
    8. 'a' → logprob: -5.562730312347412
    9. ' r' → logprob: -5.687730312347412
    10. '     ' → logprob: -5.812730312347412

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08940166980028152
    2. '=' → logprob: -2.5894017219543457
    3. ',' → logprob: -4.589401721954346
    4. ' ,' → logprob: -8.339401245117188
    5. ' ' → logprob: -10.214401245117188
    6. '=int' → logprob: -12.839401245117188
    7. '    ' → logprob: -12.839401245117188
    8. '  ' → logprob: -12.964401245117188
    9. '=a' → logprob: -13.089401245117188
    10. '   ' → logprob: -13.089401245117188

Token 48: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.350180447101593
    2. 'a' → logprob: -1.2251803874969482
    3. ' b' → logprob: -7.475180625915527
    4. ' ' → logprob: -7.600180625915527
    5. ' u' → logprob: -7.975180625915527
    6. 'b' → logprob: -8.475180625915527
    7. 'u' → logprob: -9.225180625915527
    8. '	a' → logprob: -11.350180625915527
    9. '  ' → logprob: -13.850180625915527
    10. '   ' → logprob: -14.350180625915527

Token 49: ' //' (ID: 602)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7937033176422119
    2. ' %' → logprob: -1.418703317642212
    3. ' //' → logprob: -1.918703317642212
    4. ' ' → logprob: -2.043703317642212
    5. '//' → logprob: -3.668703317642212
    6. '%b' → logprob: -5.668703079223633
    7. '```' → logprob: -9.418703079223633
    8. ' b' → logprob: -10.293703079223633
    9. ')' → logprob: -10.418703079223633
    10. '
' → logprob: -10.543703079223633

Token 50: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '	b' → logprob: -19.501928329467773
    4. ' ' → logprob: -19.626928329467773
    5. '>b' → logprob: -21.376928329467773
    6. '*b' → logprob: -21.626928329467773
    7. ' ' → logprob: -22.376928329467773
    8. ')b' → logprob: -22.376928329467773
    9. '   ' → logprob: -23.126928329467773
    10. ' б' → logprob: -23.501928329467773

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0508577823638916
    2. '<|end|>' → logprob: -1.1758577823638916
    3. ',' → logprob: -2.1758577823638916
    4. ' ' → logprob: -2.3008577823638916
    5. 'a' → logprob: -2.6758577823638916
    6. ' 
' → logprob: -4.1758575439453125
    7. '<|end|>' → logprob: -4.4258575439453125
    8. 'b' → logprob: -5.0508575439453125
    9. ',
' → logprob: -5.1758575439453125
    10. '' → logprob: -5.9258575439453125

Token 52: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.006718571297824383
    2. ' a' → logprob: -5.006718635559082
    3. 'u' → logprob: -13.381718635559082
    4. '	a' → logprob: -13.881718635559082
    5. 'b' → logprob: -15.006718635559082
    6. '`' → logprob: -16.256717681884766
    7. ' ' → logprob: -16.381717681884766
    8. '_a' → logprob: -16.631717681884766
    9. '```' → logprob: -16.881717681884766
    10. ' b' → logprob: -18.256717681884766

Token 54: ' -=' (ID: 12583)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3756314516067505
    2. ' ' → logprob: -2.000631332397461
    3. ',' → logprob: -2.500631332397461
    4. '%' → logprob: -2.750631332397461
    5. ' ,' → logprob: -3.875631332397461
    6. ' %=' → logprob: -5.500631332397461
    7. '%b' → logprob: -5.625631332397461
    8. ' b' → logprob: -6.875631332397461
    9. ' -' → logprob: -7.125631332397461
    10. ',b' → logprob: -7.250631332397461

Token 55: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.47410401701927185
    2. 't' → logprob: -0.9741040468215942
    3. '	t' → logprob: -10.724103927612305
    4. '`t' → logprob: -12.224103927612305
    5. ' ' → logprob: -16.724103927612305
    6. ')t' → logprob: -17.474103927612305
    7. '```' → logprob: -18.599103927612305
    8. ' т' → logprob: -18.724103927612305
    9. '<t' → logprob: -18.724103927612305
    10. 'b' → logprob: -18.849103927612305

Token 56: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09522497653961182
    2. ' *' → logprob: -2.4702248573303223
    3. ' ' → logprob: -6.345224857330322
    4. '*b' → logprob: -6.595224857330322
    5. '<|end|>' → logprob: -6.595224857330322
    6. '`' → logprob: -6.720224857330322
    7. '	' → logprob: -9.72022533416748
    8. ',' → logprob: -9.84522533416748
    9. '**' → logprob: -9.84522533416748
    10. '  ' → logprob: -10.09522533416748

Token 57: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014209231361746788
    2. ' b' → logprob: -4.264209270477295
    3. '<|end|>' → logprob: -10.014208793640137
    4. ' ' → logprob: -14.514208793640137
    5. '`' → logprob: -16.139209747314453
    6. '	b' → logprob: -16.389209747314453
    7. '<|end|>' → logprob: -16.514209747314453
    8. 'u' → logprob: -17.014209747314453
    9. ')b' → logprob: -17.014209747314453
    10. 'v' → logprob: -17.139209747314453

Token 58: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41975051164627075
    2. '
' → logprob: -1.669750452041626
    3. ',
' → logprob: -2.794750452041626
    4. 'b' → logprob: -3.294750452041626
    5. '       ' → logprob: -3.294750452041626
    6. '<|end|>' → logprob: -5.169750690460205
    7. '   ' → logprob: -5.794750690460205
    8. 'a' → logprob: -6.419750690460205
    9. ',b' → logprob: -6.669750690460205
    10. '    
' → logprob: -6.794750690460205

Token 59: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12888850271701813
    2. 'a' → logprob: -3.3788886070251465
    3. ',a' → logprob: -3.3788886070251465
    4. ',
' → logprob: -4.3788886070251465
    5. '<|end|>' → logprob: -4.3788886070251465
    6. 'b' → logprob: -4.7538886070251465
    7. ',b' → logprob: -5.1288886070251465
    8. ' ' → logprob: -5.8788886070251465
    9. ' ,' → logprob: -6.2538886070251465
    10. ' a' → logprob: -6.5038886070251465

Token 60: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00938580185174942
    2. 'a' (adapté à ' a') → logprob: -5.259385585784912
    3. ' b' → logprob: -5.634385585784912
    4. ',' → logprob: -8.13438606262207
    5. ',b' → logprob: -9.00938606262207
    6. '<|end|>' → logprob: -9.50938606262207
    7. ' a' → logprob: -11.25938606262207
    8. '```' → logprob: -11.38438606262207
    9. ' ' → logprob: -11.50938606262207
    10. '	b' → logprob: -11.50938606262207

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35149163007736206
    2. '=' → logprob: -1.2264916896820068
    3. '%' → logprob: -7.101491451263428
    4. ' ,' → logprob: -7.851491451263428
    5. ',b' → logprob: -7.976491451263428
    6. ' =' → logprob: -8.226491928100586
    7. '<|end|>' → logprob: -8.601491928100586
    8. '>' → logprob: -8.726491928100586
    9. ',v' → logprob: -8.976491928100586
    10. ')' → logprob: -8.976491928100586

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006726144813001156
    2. ' b' → logprob: -5.006726264953613
    3. '<|end|>' → logprob: -11.506726264953613
    4. '	b' → logprob: -14.631726264953613
    5. ' ' → logprob: -16.381725311279297
    6. '>b' → logprob: -16.756725311279297
    7. '=b' → logprob: -17.131725311279297
    8. ',b' → logprob: -17.131725311279297
    9. '<|end|>' → logprob: -17.506725311279297
    10. ')b' → logprob: -18.756725311279297

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146410167217255
    2. '=' → logprob: -1.701464056968689
    3. '=b' → logprob: -10.07646369934082
    4. ',' → logprob: -12.20146369934082
    5. 'b' → logprob: -13.45146369934082
    6. ' ' → logprob: -13.57646369934082
    7. ' b' → logprob: -14.82646369934082
    8. '=
' → logprob: -15.82646369934082
    9. ' =
' → logprob: -15.95146369934082
    10. '＝' → logprob: -16.57646369934082

Token 64: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132629096508026
    2. ' b' → logprob: -1.313262939453125
    3. '	b' → logprob: -14.438262939453125
    4. ' ' → logprob: -15.063262939453125
    5. '(b' → logprob: -15.563262939453125
    6. ' ' → logprob: -15.813262939453125
    7. '>b' → logprob: -17.438262939453125
    8. ')b' → logprob: -17.438262939453125
    9. '   ' → logprob: -17.563262939453125
    10. '(' → logprob: -18.688262939453125

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010919966734945774
    2. ',a' → logprob: -7.251091957092285
    3. ' ,' → logprob: -8.251091957092285
    4. 'a' → logprob: -9.251091957092285
    5. ',
' → logprob: -11.251091957092285
    6. ' a' → logprob: -11.751091957092285
    7. ',b' → logprob: -13.001091957092285
    8. '<|end|>' → logprob: -14.501091957092285
    9. '<|end|>' → logprob: -15.501091957092285
    10. '
' → logprob: -15.876091957092285

Token 66: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00317783304490149
    2. ' a' → logprob: -5.753177642822266
    3. '	a' → logprob: -16.628177642822266
    4. ' ' → logprob: -16.753177642822266
    5. '   ' → logprob: -19.253177642822266
    6. '0' → logprob: -19.628177642822266
    7. '-a' → logprob: -20.128177642822266
    8. '<|end|>' → logprob: -20.878177642822266
    9. '(a' → logprob: -21.003177642822266
    10. '  ' → logprob: -21.128177642822266

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6081601977348328
    2. 'u' → logprob: -0.9831601977348328
    3. ',' → logprob: -3.7331602573394775
    4. ',u' → logprob: -3.9831602573394775
    5. ' u' → logprob: -4.608160018920898
    6. '   ' → logprob: -5.233160018920898
    7. ',
' → logprob: -5.358160018920898
    8. 'v' → logprob: -5.483160018920898
    9. '
' → logprob: -5.858160018920898
    10. '    
' → logprob: -5.858160018920898

Token 68: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.08860154449939728
    2. 'v' → logprob: -2.588601589202881
    3. ' u' → logprob: -5.088601589202881
    4. ',u' → logprob: -6.963601589202881
    5. '   ' → logprob: -7.588601589202881
    6. ',' → logprob: -7.588601589202881
    7. ' v' → logprob: -7.713601589202881
    8. ',v' → logprob: -7.838601589202881
    9. '
' → logprob: -8.713601112365723
    10. ' ' → logprob: -9.213601112365723

Token 69: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.004137649200856686
    2. ' u' → logprob: -5.5041375160217285
    3. '   ' → logprob: -10.879137992858887
    4. 'v' → logprob: -10.879137992858887
    5. ',u' → logprob: -11.504137992858887
    6. '	u' → logprob: -12.254137992858887
    7. '    ' → logprob: -13.254137992858887
    8. '       ' → logprob: -13.379137992858887
    9. '  ' → logprob: -13.629137992858887
    10. ',' → logprob: -14.504137992858887

Token 70: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7201606035232544
    2. '-=' → logprob: -1.0951606035232544
    3. ',' → logprob: -1.9701606035232544
    4. '-' → logprob: -3.345160484313965
    5. ' ,' → logprob: -6.595160484313965
    6. ' -' → logprob: -7.095160484313965
    7. '    ' → logprob: -7.345160484313965
    8. '=' → logprob: -7.845160484313965
    9. ' ' → logprob: -8.220160484313965
    10. ',-' → logprob: -8.345160484313965

Token 71: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2014293223619461
    2. ' t' → logprob: -1.7014293670654297
    3. '	t' → logprob: -11.32642936706543
    4. '   ' → logprob: -12.95142936706543
    5. '`t' → logprob: -14.32642936706543
    6. '    ' → logprob: -14.95142936706543
    7. ' ' → logprob: -15.07642936706543
    8. '<|end|>' → logprob: -15.95142936706543
    9. '       ' → logprob: -16.45142936706543
    10. '_t' → logprob: -16.82642936706543

Token 72: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0958758071064949
    2. '*v' → logprob: -2.5958757400512695
    3. 'v' → logprob: -4.9708757400512695
    4. '*' → logprob: -5.0958757400512695
    5. ' v' → logprob: -5.7208757400512695
    6. '*u' → logprob: -7.8458757400512695
    7. '	v' → logprob: -9.84587574005127
    8. ' ' → logprob: -10.47087574005127
    9. 'u' → logprob: -11.59587574005127
    10. '    ' → logprob: -12.34587574005127

Token 73: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0013540448853746057
    2. ' v' → logprob: -6.751354217529297
    3. 'u' → logprob: -8.626354217529297
    4. '	v' → logprob: -13.001354217529297
    5. ' u' → logprob: -13.751354217529297
    6. '<|end|>' → logprob: -14.626354217529297
    7. '-v' → logprob: -15.501354217529297
    8. '_v' → logprob: -15.501354217529297
    9. ' ' → logprob: -16.126354217529297
    10. '*v' → logprob: -16.626354217529297

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4890294373035431
    2. '       ' → logprob: -1.6140294075012207
    3. 'u' → logprob: -3.3640294075012207
    4. '<|end|>' → logprob: -3.6140294075012207
    5. ',v' → logprob: -3.6140294075012207
    6. '	v' → logprob: -3.8640294075012207
    7. '   ' → logprob: -4.239029407501221
    8. 'v' → logprob: -4.364029407501221
    9. '	u' → logprob: -4.614029407501221
    10. ' ' → logprob: -4.739029407501221

Token 76: ' u' (ID: 337)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.25193122029304504
    2. ' v' → logprob: -1.5019311904907227
    3. '	v' → logprob: -14.001931190490723
    4. 'u' (adapté à ' u') → logprob: -14.001931190490723
    5. ' u' → logprob: -15.251931190490723
    6. ' ' → logprob: -16.62693214416504
    7. '    ' → logprob: -16.87693214416504
    8. ',v' → logprob: -17.00193214416504
    9. ')v' → logprob: -17.62693214416504
    10. '<|end|>' → logprob: -18.00193214416504

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023774817236699164
    2. ',v' → logprob: -9.000237464904785
    3. ' ,' → logprob: -9.625237464904785
    4. '=' → logprob: -10.125237464904785
    5. ',u' → logprob: -12.500237464904785
    6. ',
' → logprob: -13.500237464904785
    7. ',s' → logprob: -14.250237464904785
    8. ' ' → logprob: -14.750237464904785
    9. '+=' → logprob: -15.375237464904785
    10. ',b' → logprob: -15.375237464904785

Token 78: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009117019944824278
    2. ' v' → logprob: -7.000911712646484
    3. '	v' → logprob: -15.875911712646484
    4. '<|end|>' → logprob: -17.250911712646484
    5. 'u' → logprob: -19.375911712646484
    6. ')v' → logprob: -20.375911712646484
    7. '_v' → logprob: -20.375911712646484
    8. ' ' → logprob: -20.500911712646484
    9. 'vq' → logprob: -20.625911712646484
    10. '$v' → logprob: -20.750911712646484

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018808331340551376
    2. ' =' → logprob: -4.143808364868164
    3. ',' → logprob: -5.893808364868164
    4. '=v' → logprob: -12.018808364868164
    5. ',v' → logprob: -12.393808364868164
    6. ' ,' → logprob: -12.893808364868164
    7. ' v' → logprob: -14.518808364868164
    8. ' ' → logprob: -15.268808364868164
    9. 'v' → logprob: -16.393808364868164
    10. '<|end|>' → logprob: -16.893808364868164

Token 80: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006717267446219921
    2. ' v' → logprob: -5.006717205047607
    3. '	v' → logprob: -13.506717681884766
    4. '(v' → logprob: -15.131717681884766
    5. 'vj' → logprob: -16.381717681884766
    6. ')v' → logprob: -16.506717681884766
    7. ',v' → logprob: -17.381717681884766
    8. 'vq' → logprob: -17.631717681884766
    9. '<|end|>' → logprob: -18.006717681884766
    10. '<v' → logprob: -18.131717681884766

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05624360591173172
    2. '<|end|>' → logprob: -3.056243658065796
    3. ',u' → logprob: -5.431243419647217
    4. '<|end|>' → logprob: -5.806243419647217
    5. ',v' → logprob: -9.056243896484375
    6. 'u' → logprob: -10.306243896484375
    7. ',
' → logprob: -10.556243896484375
    8. ' ,' → logprob: -11.056243896484375
    9. ',user' → logprob: -11.181243896484375
    10. ' u' → logprob: -12.056243896484375

Token 82: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0017033906187862158
    2. ' u' → logprob: -6.376703262329102
    3. '<|end|>' → logprob: -14.251703262329102
    4. '	u' → logprob: -14.876703262329102
    5. '-u' → logprob: -16.0017032623291
    6. ' ' → logprob: -17.3767032623291
    7. ''u' → logprob: -17.3767032623291
    8. '_u' → logprob: -17.5017032623291
    9. '*u' → logprob: -18.2517032623291
    10. '```' → logprob: -19.1267032623291

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6393453478813171
    2. '<|end|>' → logprob: -0.7643453478813171
    3. '<|end|>' → logprob: -6.389345169067383
    4. '```' → logprob: -6.514345169067383
    5. '\n' → logprob: -6.889345169067383
    6. '
' → logprob: -7.014345169067383
    7. ' ' → logprob: -8.139345169067383
    8. '    
' → logprob: -8.514345169067383
    9. ' return' → logprob: -8.764345169067383
    10. ' 
' → logprob: -8.889345169067383

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2819138169288635
    2. '<|end|>' → logprob: -1.5319137573242188
    3. '```' → logprob: -4.781913757324219
    4. ' ' → logprob: -5.406913757324219
    5. ' return' → logprob: -5.406913757324219
    6. ')' → logprob: -5.781913757324219
    7. '\n' → logprob: -6.281913757324219
    8. 'return' → logprob: -6.656913757324219
    9. '  ' → logprob: -6.906913757324219
    10. '<|end|>' → logprob: -7.031913757324219

Token 85: ' return' (ID: 622)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.362409770488739
    2. '%' → logprob: -1.3624098300933838
    3. ')' → logprob: -3.987409830093384
    4. ' ' → logprob: -4.612409591674805
    5. '   ' → logprob: -5.362409591674805
    6. '0' → logprob: -5.737409591674805
    7. ' return' → logprob: -5.737409591674805
    8. ' %=' → logprob: -6.237409591674805
    9. '<|end|>' → logprob: -6.737409591674805
    10. 'return' (adapté à ' return') → logprob: -7.237409591674805

Token 86: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.34866267442703247
    2. ' u' → logprob: -1.2236626148223877
    3. '(u' → logprob: -8.723662376403809
    4. ' (' → logprob: -10.848662376403809
    5. ' ' → logprob: -11.098662376403809
    6. '	u' → logprob: -11.723662376403809
    7. '   ' → logprob: -12.223662376403809
    8. '(' → logprob: -13.348662376403809
    9. 'None' → logprob: -13.598662376403809
    10. '[u' → logprob: -13.723662376403809

Token 87: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011369526386260986
    2. '%' → logprob: -4.511369705200195
    3. ' ' → logprob: -8.261369705200195
    4. ' %=' → logprob: -11.011369705200195
    5. ' %#' → logprob: -11.261369705200195
    6. '<|end|>' → logprob: -11.511369705200195
    7. ' if' → logprob: -12.011369705200195
    8. ' `%' → logprob: -12.261369705200195
    9. ' %+' → logprob: -12.636369705200195
    10. ' %
' → logprob: -13.011369705200195

Token 88: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12692883610725403
    2. ' m' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.50192928314209
    4. '	m' → logprob: -16.376928329467773
    5. ' м' → logprob: -16.751928329467773
    6. ' ' → logprob: -17.501928329467773
    7. '#m' → logprob: -17.751928329467773
    8. '%m' → logprob: -18.126928329467773
    9. '   ' → logprob: -18.376928329467773
    10. '(m' → logprob: -18.501928329467773

Token 89: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06316932290792465
    2. '<|end|>' → logprob: -3.688169240951538
    3. 'def' → logprob: -4.188169479370117
    4. ')' → logprob: -5.188169479370117
    5. '#' → logprob: -5.313169479370117
    6. '```' → logprob: -5.688169479370117
    7. '

' → logprob: -6.438169479370117
    8. 'n' → logprob: -7.063169479370117
    9. 'a' → logprob: -7.313169479370117
    10. '\n' → logprob: -7.563169479370117

Token 90: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7305626273155212
    2. '#' → logprob: -1.980562686920166
    3. ':' → logprob: -2.230562686920166
    4. ' ' → logprob: -2.355562686920166
    5. '
' → logprob: -3.230562686920166
    6. '   ' → logprob: -3.355562686920166
    7. 'def' → logprob: -3.730562686920166
    8. '```' → logprob: -3.730562686920166
    9. '<|end|>' → logprob: -4.480562686920166
    10. 'u' → logprob: -5.105562686920166

Token 91: ' gcd' (ID: 106918)
  Prédit: ' crt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crt' → logprob: -0.6329888105392456
    2. ' chinese' → logprob: -1.2579888105392456
    3. ' solve' → logprob: -2.382988929748535
    4. ' main' → logprob: -3.882988929748535
    5. ' gcd' → logprob: -4.007988929748535
    6. ' mod' → logprob: -4.132988929748535
    7. ' l' → logprob: -5.257988929748535
    8. ' combine' → logprob: -5.257988929748535
    9. ' factorial' → logprob: -5.757988929748535
    10. ' add' → logprob: -6.132988929748535

Token 92: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3489360213279724
    2. '(a' → logprob: -1.2239360809326172
    3. ' (' → logprob: -8.098936080932617
    4. '(x' → logprob: -9.348936080932617
    5. '_(' → logprob: -11.223936080932617
    6. 'def' → logprob: -11.348936080932617
    7. '```' → logprob: -11.348936080932617
    8. '_' → logprob: -11.848936080932617
    9. '(n' → logprob: -11.973936080932617
    10. '(_' → logprob: -12.598936080932617

Token 93: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006573928403668106
    2. ' ,' → logprob: -7.750657558441162
    3. ',b' → logprob: -9.000657081604004
    4. ',a' → logprob: -9.250657081604004
    5. ',n' → logprob: -13.375657081604004
    6. ',int' → logprob: -14.625657081604004
    7. ',
' → logprob: -14.625657081604004
    8. ',s' → logprob: -14.750657081604004
    9. '(a' → logprob: -14.875657081604004
    10. ',A' → logprob: -15.000657081604004

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005877026706002653
    2. ')' → logprob: -7.6255879402160645
    3. '):
' → logprob: -9.875587463378906
    4. ' ):' → logprob: -10.375587463378906
    5. ':' → logprob: -11.125587463378906
    6. ')：' → logprob: -14.625587463378906
    7. '   ' → logprob: -15.125587463378906
    8. ',' → logprob: -15.125587463378906
    9. '):
' → logprob: -15.250587463378906
    10. '=' → logprob: -15.625587463378906

Token 95: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.39985227584838867
    2. '   ' → logprob: -1.8998522758483887
    3. ' :' → logprob: -2.7748522758483887
    4. ':' → logprob: -3.2748522758483887
    5. '(' → logprob: -3.8998522758483887
    6. '<|end|>' → logprob: -4.399852275848389
    7. '```' → logprob: -4.524852275848389
    8. ' ' → logprob: -4.649852275848389
    9. '    ' → logprob: -4.899852275848389
    10. ' (' → logprob: -5.524852275848389

Token 96: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6029146313667297
    2. ' return' → logprob: -1.602914571762085
    3. ' if' → logprob: -1.727914571762085
    4. ' while' → logprob: -3.227914571762085
    5. '    ' → logprob: -3.727914571762085
    6. ' ' → logprob: -5.102914810180664
    7. ' 
' → logprob: -6.352914810180664
    8. ' a' → logprob: -7.477914810180664
    9. '```' → logprob: -7.477914810180664
    10. '
' → logprob: -8.477914810180664

Token 97: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47600680589675903
    2. 'b' → logprob: -0.976006805896759
    3. 'a' → logprob: -6.726006984710693
    4. ' a' → logprob: -7.226006984710693
    5. '	b' → logprob: -14.351006507873535
    6. ' ' → logprob: -15.351006507873535
    7. '(b' → logprob: -15.851006507873535
    8. '   ' → logprob: -17.10100746154785
    9. '>b' → logprob: -17.22600746154785
    10. '_b' → logprob: -17.47600746154785

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23341090977191925
    2. ' and' → logprob: -2.1084108352661133
    3. ':
' → logprob: -3.1084108352661133
    4. ' !=' → logprob: -3.8584108352661133
    5. '!=' → logprob: -4.233410835266113
    6. '>' → logprob: -5.483410835266113
    7. 'and' → logprob: -6.358410835266113
    8. '<|end|>' → logprob: -8.608410835266113
    9. ' :' → logprob: -9.108410835266113
    10. ',' → logprob: -9.983410835266113

Token 99: '       ' (ID: 309)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4508580267429352
    2. ' !=' → logprob: -1.5758579969406128
    3. ':' → logprob: -2.9508581161499023
    4. ':
' → logprob: -3.2008581161499023
    5. '>' → logprob: -3.3258581161499023
    6. '   ' → logprob: -4.450858116149902
    7. ')!=' → logprob: -5.450858116149902
    8. '```' → logprob: -6.075858116149902
    9. '):
' → logprob: -6.575858116149902
    10. '<|end|>' → logprob: -6.575858116149902

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.03808600828051567
    2. ' a' → logprob: -3.2880859375
    3. '	a' → logprob: -10.6630859375
    4. '   ' → logprob: -10.7880859375
    5. '>a' → logprob: -15.0380859375
    6. '```' → logprob: -15.9130859375
    7. ',a' → logprob: -17.0380859375
    8. ' ' → logprob: -17.1630859375
    9. '       ' → logprob: -17.9130859375
    10. '<|end|>' → logprob: -18.2880859375

Token 101: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012295132502913475
    2. '%' → logprob: -4.887295246124268
    3. '%=' → logprob: -6.137295246124268
    4. ' %=' → logprob: -6.762295246124268
    5. '%,' → logprob: -7.512295246124268
    6. '%b' → logprob: -7.887295246124268
    7. ',b' → logprob: -8.38729476928711
    8. ' %' → logprob: -9.26229476928711
    9. ' ,' → logprob: -9.38729476928711
    10. ',%' → logprob: -11.26229476928711

Token 102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06803104281425476
    2. ' =' → logprob: -2.818031072616577
    3. ',' → logprob: -5.193030834197998
    4. ' ,' → logprob: -8.068031311035156
    5. '%=' → logprob: -10.068031311035156
    6. '=a' → logprob: -10.568031311035156
    7. ' ' → logprob: -10.693031311035156
    8. '<|end|>' → logprob: -10.693031311035156
    9. ' %=' → logprob: -10.818031311035156
    10. '=b' → logprob: -11.443031311035156

Token 103: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07888989895582199
    2. 'b' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.828889846801758
    4. '	b' → logprob: -17.203889846801758
    5. '(b' → logprob: -17.578889846801758
    6. '>b' → logprob: -18.078889846801758
    7. '   ' → logprob: -18.453889846801758
    8. '<|end|>' → logprob: -18.453889846801758
    9. ')b' → logprob: -18.828889846801758
    10. '    ' → logprob: -19.453889846801758

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002593130338937044
    2. ',a' → logprob: -9.000259399414062
    3. ' ,' → logprob: -9.125259399414062
    4. ',b' → logprob: -10.625259399414062
    5. ',
' → logprob: -14.000259399414062
    6. 'a' → logprob: -14.375259399414062
    7. '<|end|>' → logprob: -14.875259399414062
    8. ',user' → logprob: -15.250259399414062
    9. ',n' → logprob: -15.875259399414062
    10. ' a' → logprob: -16.125259399414062

Token 105: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141343772411346
    2. ' a' → logprob: -1.7014133930206299
    3. '	a' → logprob: -16.576414108276367
    4. ' ' → logprob: -16.951414108276367
    5. '>a' → logprob: -17.701414108276367
    6. '   ' → logprob: -19.451414108276367
    7. '<|end|>' → logprob: -19.451414108276367
    8. '(a' → logprob: -19.826414108276367
    9. ')a' → logprob: -19.826414108276367
    10. '0' → logprob: -20.451414108276367

Token 106: '%b' (ID: 148937)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8619987368583679
    2. '%b' → logprob: -0.8619987368583679
    3. '%' → logprob: -1.8619987964630127
    4. '%i' → logprob: -13.361998558044434
    5. '%B' → logprob: -13.986998558044434
    6. '%s' → logprob: -14.861998558044434
    7. '%
' → logprob: -15.111998558044434
    8. '%d' → logprob: -15.236998558044434
    9. '%c' → logprob: -15.736998558044434
    10. '%e' → logprob: -15.861998558044434

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003613497130572796
    2. 'return' → logprob: -6.378613471984863
    3. ' return' → logprob: -6.378613471984863
    4. '
' → logprob: -9.128613471984863
    5. '<|end|>' → logprob: -10.253613471984863
    6. '	return' → logprob: -10.753613471984863
    7. 'a' → logprob: -11.503613471984863
    8. '    
' → logprob: -11.628613471984863
    9. 'def' → logprob: -11.753613471984863
    10. ':return' → logprob: -12.378613471984863

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16374672949314117
    2. 'return' → logprob: -1.91374671459198
    3. ' return' → logprob: -5.6637468338012695
    4. 'def' → logprob: -10.66374683380127
    5. '	return' → logprob: -11.16374683380127
    6. ':return' → logprob: -12.53874683380127
    7. '```' → logprob: -13.03874683380127
    8. '
' → logprob: -13.16374683380127
    9. 'eturn' → logprob: -15.16374683380127
    10. ')return' → logprob: -15.28874683380127

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0387444943189621
    2. ' return' → logprob: -3.2887444496154785
    3. '   ' → logprob: -7.2887444496154785
    4. '	return' → logprob: -11.163744926452637
    5. ' ' → logprob: -13.038744926452637
    6. ':return' → logprob: -13.538744926452637
    7. 'eturn' → logprob: -13.913744926452637
    8. '```' → logprob: -14.913744926452637
    9. '{return' → logprob: -15.038744926452637
    10. 'def' → logprob: -15.788744926452637

Token 110: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004078401252627373
    2. ' a' → logprob: -5.504078388214111
    3. '	a' → logprob: -17.379077911376953
    4. ' ' → logprob: -19.379077911376953
    5. '   ' → logprob: -19.879077911376953
    6. '_a' → logprob: -20.504077911376953
    7. 'abs' → logprob: -20.629077911376953
    8. 'int' → logprob: -21.129077911376953
    9. '```' → logprob: -21.129077911376953
    10. 'а' → logprob: -21.754077911376953

Token 111: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027667906135320663
    2. '
' → logprob: -3.652667999267578
    3. '

' → logprob: -7.402667999267578
    4. '```' → logprob: -7.777667999267578
    5. '<|end|>' → logprob: -9.277667999267578
    6. '  
' → logprob: -10.277667999267578
    7. '#' → logprob: -10.402667999267578
    8. '
' → logprob: -10.402667999267578
    9. ' def' → logprob: -10.527667999267578
    10. '\' → logprob: -11.152667999267578

Token 113: ' solve' (ID: 17722)
  Prédit: ' crt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crt' → logprob: -0.7722293734550476
    2. ' solve' → logprob: -1.2722294330596924
    3. 'crt' → logprob: -2.7722294330596924
    4. ' l' → logprob: -3.0222294330596924
    5. ' chinese' → logprob: -3.1472294330596924
    6. 'solve' → logprob: -3.7722294330596924
    7. ' extended' → logprob: -3.8972294330596924
    8. ' mod' → logprob: -4.397229194641113
    9. 'ch' → logprob: -4.897229194641113
    10. ' ext' → logprob: -5.022229194641113

Token 114: '_case' (ID: 43667)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005788362585008144
    2. '(a' → logprob: -5.755788326263428
    3. '():' → logprob: -6.380788326263428
    4. '(n' → logprob: -8.505788803100586
    5. '(A' → logprob: -8.755788803100586
    6. '(N' → logprob: -9.380788803100586
    7. '_' → logprob: -9.755788803100586
    8. '(x' → logprob: -10.005788803100586
    9. '(nums' → logprob: -10.005788803100586
    10. ' (' → logprob: -10.255788803100586

Token 115: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09748554229736328
    2. '(n' → logprob: -2.5974855422973633
    3. '(a' → logprob: -4.722485542297363
    4. '():' → logprob: -5.097485542297363
    5. '(case' → logprob: -6.472485542297363
    6. '(s' → logprob: -8.597485542297363
    7. '(N' → logprob: -8.597485542297363
    8. '(i' → logprob: -8.847485542297363
    9. '(x' → logprob: -8.847485542297363
    10. ' (' → logprob: -8.972485542297363

Token 116: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055509500205516815
    2. '):' → logprob: -2.930509567260742
    3. ' ,' → logprob: -7.805509567260742
    4. ',n' → logprob: -9.555509567260742
    5. ' ):' → logprob: -9.555509567260742
    6. '):
' → logprob: -10.430509567260742
    7. ':' → logprob: -11.055509567260742
    8. ')' → logprob: -11.305509567260742
    9. ',int' → logprob: -11.930509567260742
    10. ',
' → logprob: -12.930509567260742

Token 117: ',m' (ID: 26648)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5770768523216248
    2. ',' → logprob: -0.8270768523216248
    3. ',n' → logprob: -6.9520769119262695
    4. ')' → logprob: -9.70207691192627
    5. ',a' → logprob: -10.45207691192627
    6. '):
' → logprob: -11.07707691192627
    7. ',k' → logprob: -11.57707691192627
    8. ',s' → logprob: -11.70207691192627
    9. ',int' → logprob: -11.70207691192627
    10. ',p' → logprob: -11.82707691192627

Token 118: ',r' (ID: 33654)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002012740820646286
    2. ')' → logprob: -6.752012729644775
    3. ',' → logprob: -7.127012729644775
    4. '):
' → logprob: -11.252013206481934
    5. ' ):' → logprob: -11.627013206481934
    6. ':' → logprob: -11.877013206481934
    7. '=' → logprob: -13.252013206481934
    8. ',n' → logprob: -13.502013206481934
    9. ''):' → logprob: -13.627013206481934
    10. '   ' → logprob: -14.252013206481934

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006502442411147058
    2. ')' → logprob: -7.875650405883789
    3. '):
' → logprob: -8.375650405883789
    4. ',' → logprob: -10.875650405883789
    5. ':' → logprob: -11.750650405883789
    6. '_' → logprob: -12.250650405883789
    7. ' ):' → logprob: -12.750650405883789
    8. '=' → logprob: -13.250650405883789
    9. '):
' → logprob: -13.500650405883789
    10. 'e' → logprob: -14.000650405883789

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005273242015391588
    2. '    
' → logprob: -5.630273342132568
    3. '    ' → logprob: -7.755273342132568
    4. ':' → logprob: -8.00527286529541
    5. '       ' → logprob: -8.38027286529541
    6. ' 
' → logprob: -8.75527286529541
    7. '<|end|>' → logprob: -9.13027286529541
    8. '
' → logprob: -9.75527286529541
    9. '\n' → logprob: -10.13027286529541
    10. '\' → logprob: -10.13027286529541

Token 121: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0977340936660767
    2. '   ' → logprob: -1.4727340936660767
    3. 'if' (adapté à ' if') → logprob: -1.7227340936660767
    4. ' x' → logprob: -2.847733974456787
    5. ' if' → logprob: -3.097733974456787
    6. '#' → logprob: -3.597733974456787
    7. 'res' → logprob: -3.722733974456787
    8. 'dp' → logprob: -3.972733974456787
    9. ' res' → logprob: -4.472733974456787
    10. 'a' → logprob: -4.472733974456787

Token 122: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6590263843536377
    2. ' k' → logprob: -0.7840263843536377
    3. ' r' → logprob: -3.9090263843536377
    4. ' (' → logprob: -6.034026145935059
    5. ' ' → logprob: -6.284026145935059
    6. 'n' → logprob: -7.534026145935059
    7. 'k' → logprob: -7.909026145935059
    8. ' not' → logprob: -8.034026145935059
    9. ' m' → logprob: -8.159026145935059
    10. ' gcd' → logprob: -9.034026145935059

Token 123: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6637428402900696
    2. '<' → logprob: -1.6637427806854248
    3. '%' → logprob: -2.538742780685425
    4. ' ==' → logprob: -2.913742780685425
    5. '==' → logprob: -3.038742780685425
    6. ' <=' → logprob: -3.163742780685425
    7. '<=' → logprob: -3.788742780685425
    8. ' %' → logprob: -4.163743019104004
    9. '>' → logprob: -4.413743019104004
    10. ' >=' → logprob: -4.788743019104004

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29051098227500916
    2. ' ' → logprob: -2.040510892868042
    3. '1' → logprob: -2.790510892868042
    4. 'k' → logprob: -2.915510892868042
    5. ' k' → logprob: -5.165511131286621
    6. 'm' → logprob: -7.540511131286621
    7. 'r' → logprob: -8.915511131286621
    8. ' m' → logprob: -9.165511131286621
    9. '2' → logprob: -10.540511131286621
    10. ' r' → logprob: -10.540511131286621

Token 125: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38016441464424133
    2. '1' → logprob: -1.380164384841919
    3. 'k' → logprob: -2.755164384841919
    4. 'm' → logprob: -7.380164623260498
    5. ' ' → logprob: -8.00516414642334
    6. 'r' → logprob: -9.50516414642334
    7. '2' → logprob: -11.13016414642334
    8. '100' → logprob: -11.13016414642334
    9. ' k' → logprob: -11.38016414642334
    10. '-' → logprob: -12.94266414642334

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1387036293745041
    2. ':
' → logprob: -2.1387035846710205
    3. ':return' → logprob: -4.7637038230896
    4. ' and' → logprob: -5.8887038230896
    5. ' or' → logprob: -8.513703346252441
    6. 'and' → logprob: -9.013703346252441
    7. '   ' → logprob: -9.763703346252441
    8. ' :' → logprob: -11.888703346252441
    9. ':
' → logprob: -12.138703346252441
    10. ' :
' → logprob: -13.013703346252441

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03314336761832237
    2. ':' → logprob: -4.283143520355225
    3. '   ' → logprob: -4.658143520355225
    4. ':
' → logprob: -5.283143520355225
    5. ' and' → logprob: -5.908143520355225
    6. ':return' → logprob: -7.533143520355225
    7. '	' → logprob: -7.908143520355225
    8. ' return' → logprob: -8.283143043518066
    9. ',' → logprob: -9.658143043518066
    10. '	   ' → logprob: -10.033143043518066

Token 128: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.275972455739975
    2. 'return' → logprob: -1.5259724855422974
    3. '       ' → logprob: -4.400972366333008
    4. '   ' → logprob: -5.400972366333008
    5. ' print' → logprob: -6.025972366333008
    6. ' if' → logprob: -6.150972366333008
    7. 'print' → logprob: -7.025972366333008
    8. '    ' → logprob: -7.275972366333008
    9. 'if' → logprob: -8.525972366333008
    10. '
' → logprob: -8.650972366333008

Token 129: ' only' (ID: 1606)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1585843414068222
    2. 'return' → logprob: -2.0335843563079834
    3. ' if' → logprob: -4.408584117889404
    4. 'if' → logprob: -6.533584117889404
    5. ' print' → logprob: -6.533584117889404
    6. 'print' → logprob: -7.658584117889404
    7. '   ' → logprob: -9.908584594726562
    8. '    ' → logprob: -10.283584594726562
    9. ' ' → logprob: -10.783584594726562
    10. '
' → logprob: -11.158584594726562

Token 130: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.03949398547410965
    2. ' r' → logprob: -4.414494037628174
    3. 'one' → logprob: -4.789494037628174
    4. ' k' → logprob: -5.289494037628174
    5. ' return' → logprob: -5.789494037628174
    6. ' ' → logprob: -5.789494037628174
    7. ' a' → logprob: -6.664494037628174
    8. ' element' → logprob: -6.914494037628174
    9. ' possible' → logprob: -7.039494037628174
    10. ' the' → logprob: -7.164494037628174

Token 131: ' mountain' (ID: 21689)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.2811908423900604
    2. ' ' → logprob: -2.406190872192383
    3. ' number' → logprob: -3.031190872192383
    4. ' return' → logprob: -3.406190872192383
    5. '   ' → logprob: -3.781190872192383
    6. 'element' → logprob: -4.156190872192383
    7. '    ' → logprob: -5.156190872192383
    8. ' value' → logprob: -5.156190872192383
    9. ' line' → logprob: -5.781190872192383
    10. ' n' → logprob: -6.281190872192383

Token 132: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21421203017234802
    2. ':' → logprob: -2.339211940765381
    3. '   ' → logprob: -3.089211940765381
    4. ':
' → logprob: -3.839211940765381
    5. ',' → logprob: -4.589211940765381
    6. ' and' → logprob: -4.964211940765381
    7. ':return' → logprob: -5.214211940765381
    8. ' if' → logprob: -6.214211940765381
    9. 'return' → logprob: -6.464211940765381
    10. ' return' → logprob: -6.839211940765381

Token 133: ' always' (ID: 3324)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2705506980419159
    2. ' return' → logprob: -1.5205507278442383
    3. 'print' → logprob: -4.270550727844238
    4. 'if' → logprob: -6.395550727844238
    5. ' print' → logprob: -6.520550727844238
    6. ' if' → logprob: -7.020550727844238
    7. '   ' → logprob: -7.895550727844238
    8. '       ' → logprob: -11.145550727844238
    9. '	return' → logprob: -11.395550727844238
    10. '#' → logprob: -11.520550727844238

Token 134: ' success' (ID: 3505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16381552815437317
    2. ' r' → logprob: -2.913815498352051
    3. '0' → logprob: -3.038815498352051
    4. 'possible' → logprob: -3.413815498352051
    5. ' possible' → logprob: -5.663815498352051
    6. 'print' → logprob: -6.288815498352051
    7. 'k' → logprob: -6.413815498352051
    8. 'return' → logprob: -6.538815498352051
    9. 'valid' → logprob: -7.038815498352051
    10. 'ok' → logprob: -7.163815498352051

Token 135: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007095166016370058
    2. '   ' → logprob: -5.3820953369140625
    3. 'return' → logprob: -6.3820953369140625
    4. ' return' → logprob: -7.6320953369140625
    5. ',' → logprob: -9.257095336914062
    6. '\n' → logprob: -9.507095336914062
    7. '           ' → logprob: -10.257095336914062
    8. '
' → logprob: -10.507095336914062
    9. '	return' → logprob: -11.132095336914062
    10. ':' → logprob: -11.757095336914062

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029712803661823273
    2. '   ' → logprob: -6.377971172332764
    3. '
' → logprob: -8.002971649169922
    4. ' return' → logprob: -8.127971649169922
    5. ',' → logprob: -9.002971649169922
    6. '           ' → logprob: -9.127971649169922
    7. ':' → logprob: -9.252971649169922
    8. 'return' → logprob: -9.502971649169922
    9. ' if' → logprob: -9.502971649169922
    10. '\n' → logprob: -10.252971649169922

Token 137: ' p' (ID: 275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05109325423836708
    2. 'print' → logprob: -3.676093339920044
    3. ' return' → logprob: -3.926093339920044
    4. '   ' → logprob: -5.676093101501465
    5. 'if' → logprob: -7.176093101501465
    6. ' print' → logprob: -7.801093101501465
    7. '       ' → logprob: -9.176093101501465
    8. ' if' → logprob: -10.551093101501465
    9. ' ' → logprob: -11.801093101501465
    10. '	return' → logprob: -11.926093101501465

Token 138: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8397390246391296
    2. ' =' → logprob: -1.0897390842437744
    3. '=' → logprob: -1.4647390842437744
    4. ' ' → logprob: -8.714738845825195
    5. '=r' → logprob: -8.964738845825195
    6. '_' → logprob: -9.714738845825195
    7. 'er' → logprob: -9.839738845825195
    8. 'a' → logprob: -9.964738845825195
    9. '_r' → logprob: -10.339738845825195
    10. ',' → logprob: -10.714738845825195

Token 139: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.08170455694198608
    2. '1' → logprob: -2.581704616546631
    3. ' Fraction' → logprob: -6.581704616546631
    4. 'r' → logprob: -7.081704616546631
    5. '(' → logprob: -9.081704139709473
    6. '"' → logprob: -9.206704139709473
    7. ' ' → logprob: -9.206704139709473
    8. '   ' → logprob: -9.706704139709473
    9. '0' → logprob: -10.206704139709473
    10. 'm' → logprob: -10.456704139709473

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07335606217384338
    2. '(r' → logprob: -2.6983561515808105
    3. '1' → logprob: -6.5733561515808105
    4. '(m' → logprob: -6.8233561515808105
    5. '(k' → logprob: -7.4483561515808105
    6. 'r' → logprob: -8.073355674743652
    7. 'm' → logprob: -10.948355674743652
    8. '((' → logprob: -11.948355674743652
    9. 'k' → logprob: -12.698355674743652
    10. '(n' → logprob: -13.448355674743652

Token 141: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13258002698421478
    2. '1' → logprob: -2.132580041885376
    3. 'm' → logprob: -5.507579803466797
    4. 'k' → logprob: -6.757579803466797
    5. '0' → logprob: -8.632579803466797
    6. '(' → logprob: -9.507579803466797
    7. ' r' → logprob: -9.632579803466797
    8. ' ' → logprob: -10.632579803466797
    9. '   ' → logprob: -10.757579803466797
    10. '100' → logprob: -11.382579803466797

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42966488003730774
    2. ')' → logprob: -1.0546648502349854
    3. ',r' → logprob: -7.6796650886535645
    4. ',k' → logprob: -8.304664611816406
    5. ' ,' → logprob: -9.804664611816406
    6. ',m' → logprob: -10.304664611816406
    7. ' )' → logprob: -10.804664611816406
    8. ' if' → logprob: -11.054664611816406
    9. ',n' → logprob: -11.179664611816406
    10. ',)' → logprob: -11.179664611816406

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015969875967130065
    2. 'k' → logprob: -6.751596927642822
    3. 'm' → logprob: -8.50159740447998
    4. ' ' → logprob: -9.00159740447998
    5. '2' → logprob: -10.12659740447998
    6. 'r' → logprob: -10.25159740447998
    7. 'n' → logprob: -11.50159740447998
    8. ' k' → logprob: -12.00159740447998
    9. ' m' → logprob: -13.50159740447998
    10. '   ' → logprob: -13.62659740447998

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007287554908543825
    2. ')
' → logprob: -7.250728607177734
    3. ' )' → logprob: -11.250728607177734
    4. ')
' → logprob: -13.750728607177734
    5. ')n' → logprob: -14.000728607177734
    6. '))' → logprob: -14.625728607177734
    7. '   ' → logprob: -14.625728607177734
    8. '),' → logprob: -14.750728607177734
    9. ')

' → logprob: -14.750728607177734
    10. ')return' → logprob: -15.250728607177734

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2528378665447235
    2. '       ' → logprob: -1.502837896347046
    3. 'else' → logprob: -8.002838134765625
    4. ' else' → logprob: -8.252838134765625
    5. 'return' → logprob: -8.877838134765625
    6. ' ' → logprob: -10.127838134765625
    7. ' return' → logprob: -10.127838134765625
    8. 'elif' → logprob: -10.752838134765625
    9. '```' → logprob: -11.377838134765625
    10. '
' → logprob: -11.502838134765625

Token 146: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2484816312789917
    2. ' else' → logprob: -2.2484817504882812
    3. 'elif' → logprob: -2.2484817504882812
    4. ' elif' → logprob: -5.248481750488281
    5. '   ' → logprob: -5.623481750488281
    6. ' ' → logprob: -11.873481750488281
    7. 'el' → logprob: -11.998481750488281
    8. '	elif' → logprob: -12.123481750488281
    9. '	else' → logprob: -12.373481750488281
    10. '  ' → logprob: -13.373481750488281

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032253677491098642
    2. ':
' → logprob: -5.753225326538086
    3. ',' → logprob: -10.878225326538086
    4. '       ' → logprob: -11.128225326538086
    5. ' :' → logprob: -11.878225326538086
    6. '   ' → logprob: -13.128225326538086
    7. ':

' → logprob: -13.253225326538086
    8. '    ' → logprob: -13.628225326538086
    9. ' if' → logprob: -14.128225326538086
    10. ' :
' → logprob: -15.253225326538086

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005441620480269194
    2. ' p' → logprob: -5.380441665649414
    3. '   ' → logprob: -7.380441665649414
    4. '    ' → logprob: -9.255441665649414
    5. 'p' → logprob: -10.130441665649414
    6. ' if' → logprob: -11.380441665649414
    7. '     ' → logprob: -11.880441665649414
    8. ' ' → logprob: -12.005441665649414
    9. '```' → logprob: -12.380441665649414
    10. '      ' → logprob: -12.380441665649414

Token 149: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4774039387702942
    2. ' p' → logprob: -1.7274038791656494
    3. 'd' → logprob: -3.2274038791656494
    4. '#' (adapté à ' #') → logprob: -3.6024038791656494
    5. 'x' → logprob: -4.2274041175842285
    6. ' if' → logprob: -4.4774041175842285
    7. ' d' → logprob: -4.4774041175842285
    8. '       ' → logprob: -4.6024041175842285
    9. 'total' → logprob: -4.6024041175842285
    10. ' denom' → logprob: -4.6024041175842285

Token 150: ' probability' (ID: 34933)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8249673843383789
    2. 'if' → logprob: -2.199967384338379
    3. 'd' → logprob: -2.324967384338379
    4. '#' → logprob: -2.574967384338379
    5. ' p' → logprob: -2.699967384338379
    6. 'g' → logprob: -2.824967384338379
    7. ' if' → logprob: -2.949967384338379
    8. ' d' → logprob: -4.074967384338379
    9. ' #' → logprob: -4.449967384338379
    10. ' g' → logprob: -4.574967384338379

Token 151: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020600629970431328
    2. '=' → logprob: -3.8956005573272705
    3. ' ' → logprob: -11.145600318908691
    4. '(' → logprob: -11.645600318908691
    5. ',' → logprob: -12.145600318908691
    6. '_space' → logprob: -12.270600318908691
    7. 's' → logprob: -12.395600318908691
    8. 'p' → logprob: -12.770600318908691
    9. ' +=' → logprob: -13.020600318908691
    10. '_' → logprob: -13.270600318908691

Token 152: ' failure' (ID: 14090)
  Prédit: 'success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'success' → logprob: -0.530268669128418
    2. 'k' → logprob: -2.030268669128418
    3. 'not' → logprob: -2.280268669128418
    4. 'failure' → logprob: -3.405268669128418
    5. 'r' → logprob: -4.030268669128418
    6. 'no' → logprob: -4.155268669128418
    7. ' success' → logprob: -4.655268669128418
    8. 're' → logprob: -5.155268669128418
    9. 'h' → logprob: -5.155268669128418
    10. 'collision' → logprob: -5.280268669128418

Token 153: ' without' (ID: 2935)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018812811467796564
    2. '=' → logprob: -6.501881122589111
    3. 'p' → logprob: -8.25188159942627
    4. ' p' → logprob: -9.37688159942627
    5. ' ' → logprob: -10.50188159942627
    6. ',' → logprob: -14.00188159942627
    7. ' ' → logprob: -14.75188159942627
    8. ' =
' → logprob: -14.75188159942627
    9. 's' → logprob: -14.87688159942627
    10. '=p' → logprob: -14.87688159942627

Token 154: ' restart' (ID: 33437)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.7243565320968628
    2. 'any' → logprob: -2.0993566513061523
    3. ' replacement' → logprob: -2.7243566513061523
    4. 'replacement' → logprob: -2.8493566513061523
    5. 'k' → logprob: -3.4743566513061523
    6. ' the' → logprob: -3.5993566513061523
    7. 'r' → logprob: -3.7243566513061523
    8. ' k' → logprob: -3.9743566513061523
    9. 'the' → logprob: -4.724356651306152
    10. ' a' → logprob: -4.849356651306152

Token 155: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07844605296850204
    2. ' p' → logprob: -2.82844614982605
    3. '=' → logprob: -4.453445911407471
    4. 'p' → logprob: -5.453445911407471
    5. ' ' → logprob: -8.078446388244629
    6. ':' → logprob: -11.328446388244629
    7. ',' → logprob: -11.578446388244629
    8. ' f' → logprob: -11.578446388244629
    9. ' is' → logprob: -11.578446388244629
    10. '=p' → logprob: -11.828446388244629

Token 156: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8619487285614014
    2. 'k' → logprob: -1.8619487285614014
    3. ' (' → logprob: -2.2369487285614014
    4. 'p' → logprob: -2.4869487285614014
    5. ' k' → logprob: -2.4869487285614014
    6. ' p' → logprob: -2.7369487285614014
    7. '1' → logprob: -2.7369487285614014
    8. '(' → logprob: -2.7369487285614014
    9. ' =' → logprob: -3.2369487285614014
    10. 'r' → logprob: -3.3619487285614014

Token 157: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3022956848144531
    2. ' >' → logprob: -1.3022956848144531
    3. ' )' → logprob: -1.9272956848144531
    4. '-' → logprob: -2.427295684814453
    5. ' -' → logprob: -3.052295684814453
    6. '+' → logprob: -3.427295684814453
    7. '>' → logprob: -3.677295684814453
    8. ' ==' → logprob: -4.052295684814453
    9. ' *' → logprob: -4.427295684814453
    10. ' >=' → logprob: -4.427295684814453

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4541306495666504
    2. '1' → logprob: -1.5791306495666504
    3. 'n' → logprob: -2.5791306495666504
    4. ' ' → logprob: -3.3291306495666504
    5. 'k' → logprob: -3.7041306495666504
    6. '-' → logprob: -5.20413064956665
    7. ' n' → logprob: -5.45413064956665
    8. 'r' → logprob: -5.57913064956665
    9. '2' → logprob: -6.32913064956665
    10. ')' → logprob: -6.70413064956665

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014124833978712559
    2. ' )' → logprob: -4.764124870300293
    3. '):' → logprob: -5.514124870300293
    4. ')
' → logprob: -7.014124870300293
    5. '   ' → logprob: -9.014124870300293
    6. ',' → logprob: -9.264124870300293
    7. '):
' → logprob: -9.389124870300293
    8. ')

' → logprob: -9.639124870300293
    9. ' )
' → logprob: -10.014124870300293
    10. ':' → logprob: -10.764124870300293

Token 160: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0392825603485107
    2. '       ' → logprob: -1.1642825603485107
    3. ':' → logprob: -1.9142825603485107
    4. ' p' → logprob: -2.2892825603485107
    5. '=' → logprob: -3.5392825603485107
    6. ',' → logprob: -4.66428279876709
    7. '   ' → logprob: -4.78928279876709
    8. '
' → logprob: -4.78928279876709
    9. ':
' → logprob: -5.28928279876709
    10. 'p' → logprob: -5.41428279876709

Token 161: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.21342279016971588
    2. ' p' → logprob: -1.9634227752685547
    3. 'q' → logprob: -3.7134227752685547
    4. 'f' → logprob: -4.963422775268555
    5. ' q' → logprob: -5.088422775268555
    6. 'prob' → logprob: -5.713422775268555
    7. 'fail' → logprob: -5.838422775268555
    8. ' f' → logprob: -6.338422775268555
    9. 'total' → logprob: -6.588422775268555
    10. ' total' → logprob: -7.213422775268555

Token 162: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.42144137620925903
    2. ' p' → logprob: -2.2964413166046143
    3. 'q' → logprob: -2.5464413166046143
    4. 'fail' → logprob: -3.2964413166046143
    5. 'prob' → logprob: -3.5464413166046143
    6. ' q' → logprob: -3.7964413166046143
    7. 'if' → logprob: -4.171441555023193
    8. 'f' → logprob: -4.546441555023193
    9. 'total' → logprob: -5.421441555023193
    10. '#' → logprob: -5.421441555023193

Token 163: '_fail' (ID: 54184)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06877148896455765
    2. '_fail' → logprob: -3.8187716007232666
    3. '_failure' → logprob: -4.1937713623046875
    4. '=' → logprob: -4.1937713623046875
    5. '_' → logprob: -5.0687713623046875
    6. 'f' → logprob: -5.4437713623046875
    7. '_f' → logprob: -6.4437713623046875
    8. 'fail' → logprob: -7.1937713623046875
    9. 'r' → logprob: -7.9437713623046875
    10. '0' → logprob: -7.9437713623046875

Token 164: '_no' (ID: 13575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22589880228042603
    2. '=' → logprob: -1.6008987426757812
    3. '_' → logprob: -7.850898742675781
    4. ',' → logprob: -10.975898742675781
    5. ' _' → logprob: -11.100898742675781
    6. '_fail' → logprob: -11.350898742675781
    7. '_=' → logprob: -11.350898742675781
    8. ')' → logprob: -11.600898742675781
    9. '_failure' → logprob: -12.100898742675781
    10. '_space' → logprob: -12.350898742675781

Token 165: '_restart' (ID: 182180)
  Prédit: '_restart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_restart' → logprob: -0.23379351198673248
    2. '_' → logprob: -1.6087934970855713
    3. ' =' → logprob: -6.10879373550415
    4. '_r' → logprob: -6.23379373550415
    5. '=' → logprob: -6.60879373550415
    6. 'restart' → logprob: -6.73379373550415
    7. 'r' → logprob: -7.48379373550415
    8. '_re' → logprob: -7.98379373550415
    9. '_rest' → logprob: -8.233793258666992
    10. '_reset' → logprob: -8.983793258666992

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04311748966574669
    2. '=' → logprob: -3.1681175231933594
    3. ')' → logprob: -9.29311752319336
    4. ' )' → logprob: -11.29311752319336
    5. ' ' → logprob: -12.16811752319336
    6. ',' → logprob: -12.54311752319336
    7. ' ' → logprob: -13.66811752319336
    8. '_' → logprob: -14.29311752319336
    9. 'space' → logprob: -14.79311752319336
    10. '_space' → logprob: -14.79311752319336

Token 167: ' ' (ID: 220)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.5730730295181274
    2. '(' → logprob: -1.1980730295181274
    3. 'pow' → logprob: -3.073072910308838
    4. '1' → logprob: -3.823072910308838
    5. '(k' → logprob: -4.198072910308838
    6. 'math' → logprob: -4.323072910308838
    7. '(F' → logprob: -4.573072910308838
    8. '((' → logprob: -5.198072910308838
    9. '(n' → logprob: -5.448072910308838
    10. 'k' → logprob: -5.698072910308838

Token 168: '1' (ID: 16)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.5927259922027588
    2. '(' → logprob: -1.3427259922027588
    3. 'pow' → logprob: -2.467725992202759
    4. '(F' → logprob: -3.467725992202759
    5. '1' → logprob: -3.967725992202759
    6. 'math' → logprob: -4.46772575378418
    7. '(k' → logprob: -4.46772575378418
    8. '(n' → logprob: -5.21772575378418
    9. '((' → logprob: -5.46772575378418
    10. 'k' → logprob: -5.46772575378418

Token 169: '/n' (ID: 18292)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020923476666212082
    2. '-' → logprob: -3.895923376083374
    3. '+' → logprob: -9.145923614501953
    4. ' ' → logprob: -9.395923614501953
    5. ' +' → logprob: -9.770923614501953
    6. ' *' → logprob: -10.020923614501953
    7. ',' → logprob: -11.145923614501953
    8. ')' → logprob: -11.145923614501953
    9. '*' → logprob: -11.145923614501953
    10. ' /' → logprob: -11.520923614501953

Token 170: '^' (ID: 61)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37125182151794434
    2. ')' → logprob: -1.4962518215179443
    3. '   ' → logprob: -4.246252059936523
    4. ' 
' → logprob: -4.246252059936523
    5. ')
' → logprob: -4.371252059936523
    6. '<|end|>' → logprob: -4.871252059936523
    7. '       ' → logprob: -5.121252059936523
    8. '**' → logprob: -5.746252059936523
    9. '#' → logprob: -5.746252059936523
    10. ' ' → logprob: -5.871252059936523

Token 171: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05582927167415619
    2. '2' → logprob: -2.9308292865753174
    3. ' k' → logprob: -7.805829048156738
    4. '(' → logprob: -7.930829048156738
    5. 'n' → logprob: -9.430829048156738
    6. '(k' → logprob: -10.180829048156738
    7. ')' → logprob: -11.305829048156738
    8. ' ' → logprob: -11.305829048156738
    9. '(n' → logprob: -11.305829048156738
    10. 'm' → logprob: -11.805829048156738

Token 172: ' ' (ID: 220)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.13693171739578247
    2. ' **' → logprob: -2.2619316577911377
    3. ' *' → logprob: -5.011931896209717
    4. ')' → logprob: -5.136931896209717
    5. '
' → logprob: -5.761931896209717
    6. '*' → logprob: -6.511931896209717
    7. ' ' → logprob: -6.886931896209717
    8. '[' → logprob: -6.886931896209717
    9. ')**' → logprob: -6.886931896209717
    10. '**
' → logprob: -7.011931896209717

Token 173: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23804058134555817
    2. '**' → logprob: -1.738040566444397
    3. '
' → logprob: -4.488040447235107
    4. ')
' → logprob: -4.488040447235107
    5. ')**' → logprob: -5.113040447235107
    6. '   ' → logprob: -6.488040447235107
    7. ' **' → logprob: -6.488040447235107
    8. ' )' → logprob: -6.738040447235107
    9. 'p' → logprob: -7.988040447235107
    10. ',' → logprob: -8.363040924072266

Token 174: 'prob' (ID: 29823)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1306273639202118
    2. ' )' → logprob: -2.505627393722534
    3. '(' → logprob: -4.255627155303955
    4. '**' → logprob: -4.630627155303955
    5. '(n' → logprob: -5.630627155303955
    6. ' (' → logprob: -5.755627155303955
    7. 'n' → logprob: -5.880627155303955
    8. ' n' → logprob: -6.005627155303955
    9. ')n' → logprob: -7.005627155303955
    10. ' **' → logprob: -7.255627155303955

Token 175: ' that' (ID: 484)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.383033037185669
    2. '=' → logprob: -1.383033037185669
    3. ' =' → logprob: -1.883033037185669
    4. 'ability' → logprob: -1.883033037185669
    5. '**' → logprob: -2.383033037185669
    6. ')' → logprob: -3.008033037185669
    7. ' of' → logprob: -4.75803279876709
    8. '   ' → logprob: -5.25803279876709
    9. 'of' → logprob: -5.25803279876709
    10. '[' → logprob: -5.38303279876709

Token 176: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.12228845059871674
    2. 'all' → logprob: -2.872288465499878
    3. ' k' → logprob: -3.872288465499878
    4. 'k' → logprob: -4.247288227081299
    5. 'r' → logprob: -5.872288227081299
    6. 'm' → logprob: -5.997288227081299
    7. 'n' → logprob: -6.247288227081299
    8. ' the' → logprob: -6.372288227081299
    9. ' n' → logprob: -6.497288227081299
    10. ')' → logprob: -6.747288227081299

Token 177: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1516328603029251
    2. 'r' → logprob: -3.026632785797119
    3. 'choices' → logprob: -3.651632785797119
    4. ' k' → logprob: -3.776632785797119
    5. 'mount' → logprob: -4.901632785797119
    6. 'fail' → logprob: -5.276632785797119
    7. 'chosen' → logprob: -5.776632785797119
    8. 'm' → logprob: -5.776632785797119
    9. 'pe' → logprob: -6.276632785797119
    10. ' choices' → logprob: -6.276632785797119

Token 178: ' sets' (ID: 11982)
  Prédit: ' clim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clim' → logprob: -1.1703532934188843
    2. 'attempt' → logprob: -2.545353412628174
    3. ' choices' → logprob: -3.170353412628174
    4. 'cl' → logprob: -3.170353412628174
    5. 't' → logprob: -3.482853412628174
    6. 'choices' → logprob: -3.545353412628174
    7. 'fail' → logprob: -3.607853412628174
    8. 'steps' → logprob: -3.670353412628174
    9. 'r' → logprob: -3.795353412628174
    10. 'samples' → logprob: -3.982853412628174

Token 179: ' put' (ID: 3006)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5967527627944946
    2. ' of' → logprob: -2.346752643585205
    3. ' have' → logprob: -2.846752643585205
    4. 'choose' → logprob: -3.221752643585205
    5. ' choose' → logprob: -3.346752643585205
    6. 'are' → logprob: -3.471752643585205
    7. ' fail' → logprob: -3.596752643585205
    8. 'of' → logprob: -4.596752643585205
    9. 'have' → logprob: -4.596752643585205
    10. ' pick' → logprob: -4.596752643585205

Token 180: ' card' (ID: 4766)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.6913847327232361
    2. 'their' → logprob: -2.191384792327881
    3. ' the' → logprob: -2.316384792327881
    4. ' all' → logprob: -2.941384792327881
    5. ' tokens' → logprob: -3.316384792327881
    6. ' ' → logprob: -3.691384792327881
    7. ' on' → logprob: -4.066384792327881
    8. '(' → logprob: -4.066384792327881
    9. 'tokens' → logprob: -4.066384792327881
    10. ' them' → logprob: -4.191384792327881

Token 181: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1496860682964325
    2. ' in' → logprob: -2.899686098098755
    3. ' on' → logprob: -3.024686098098755
    4. ' s' → logprob: -3.899686098098755
    5. 'in' → logprob: -5.399685859680176
    6. 'on' → logprob: -5.899685859680176
    7. ' ' → logprob: -6.024685859680176
    8. '=' → logprob: -6.649685859680176
    9. ' not' → logprob: -7.024685859680176
    10. ' into' → logprob: -7.399685859680176

Token 182: '1' (ID: 16)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.9942294955253601
    2. 'in' → logprob: -1.3692295551300049
    3. ' on' → logprob: -1.8692295551300049
    4. ' in' → logprob: -2.494229555130005
    5. 's' → logprob: -3.119229555130005
    6. '1' → logprob: -3.369229555130005
    7. ' ' → logprob: -3.619229555130005
    8. ' into' → logprob: -4.869229316711426
    9. 'into' → logprob: -5.369229316711426
    10. '=' → logprob: -5.744229316711426

Token 183: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0342531204223633
    2. ' in' → logprob: -1.5342531204223633
    3. '**' → logprob: -1.5342531204223633
    4. ' on' → logprob: -2.7842531204223633
    5. ' **' → logprob: -2.9092531204223633
    6. ' )' → logprob: -3.4092531204223633
    7. ' ' → logprob: -4.909253120422363
    8. ')**' → logprob: -4.909253120422363
    9. ' to' → logprob: -5.284253120422363
    10. 'in' → logprob: -5.534253120422363

Token 184: ' mountain' (ID: 21689)
  Prédit: 'mount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mount' → logprob: -1.197654128074646
    2. 'the' → logprob: -1.447654128074646
    3. ' mountain' → logprob: -2.1976542472839355
    4. 'positions' → logprob: -2.4476542472839355
    5. 'position' → logprob: -2.5726542472839355
    6. ' the' → logprob: -3.3226542472839355
    7. 'all' → logprob: -3.8226542472839355
    8. 'each' → logprob: -4.0726542472839355
    9. ' position' → logprob: -4.3226542472839355
    10. ' all' → logprob: -4.8226542472839355

Token 185: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4763999879360199
    2. '**' → logprob: -1.6014000177383423
    3. ' **' → logprob: -3.1013998985290527
    4. '[' → logprob: -3.6013998985290527
    5. ')**' → logprob: -3.6013998985290527
    6. ' ' → logprob: -3.8513998985290527
    7. 's' → logprob: -3.9763998985290527
    8. ' )' → logprob: -4.976399898529053
    9. '_' → logprob: -5.101399898529053
    10. '1' → logprob: -5.226399898529053

Token 186: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6138721704483032
    2. ')' → logprob: -1.3638721704483032
    3. '**' → logprob: -2.3638720512390137
    4. '[' → logprob: -3.7388720512390137
    5. ' ' → logprob: -3.8638720512390137
    6. '0' → logprob: -3.9888720512390137
    7. '1' → logprob: -4.363872051239014
    8. ' **' → logprob: -5.488872051239014
    9. ')**' → logprob: -5.738872051239014
    10. '^' → logprob: -5.863872051239014

Token 187: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006177982781082392
    2. '**' → logprob: -5.88117790222168
    3. '   ' → logprob: -6.75617790222168
    4. ' )' → logprob: -7.13117790222168
    5. ')
' → logprob: -7.38117790222168
    6. ')**' → logprob: -7.88117790222168
    7. ')^' → logprob: -10.00617790222168
    8. '^' → logprob: -10.25617790222168
    9. ' **' → logprob: -10.38117790222168
    10. '#' → logprob: -10.38117790222168

Token 188: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.089614637196064
    2. ' )' → logprob: -3.2146146297454834
    3. '    ' → logprob: -4.4646148681640625
    4. ' which' → logprob: -4.8396148681640625
    5. ' ' → logprob: -5.0896148681640625
    6. 'n' → logprob: -5.7146148681640625
    7. ' or' → logprob: -6.0896148681640625
    8. ' as' → logprob: -6.4646148681640625
    9. '   ' → logprob: -6.5896148681640625
    10. ' so' → logprob: -6.8396148681640625

Token 189: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25713643431663513
    2. ' which' → logprob: -2.382136344909668
    3. 'which' → logprob: -3.507136344909668
    4. ' )' → logprob: -4.007136344909668
    5. ' or' → logprob: -4.132136344909668
    6. ' so' → logprob: -4.132136344909668
    7. '#' (adapté à ' #') → logprob: -4.257136344909668
    8. ' and' → logprob: -5.257136344909668
    9. '   ' → logprob: -5.507136344909668
    10. '2' → logprob: -5.882136344909668

Token 190: ' actually' (ID: 4771)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.8749507665634155
    2. ' so' → logprob: -1.2499507665634155
    3. 'which' → logprob: -3.124950885772705
    4. ' or' → logprob: -3.374950885772705
    5. ')' → logprob: -3.499950885772705
    6. ' but' → logprob: -3.999950885772705
    7. ' p' → logprob: -4.124950885772705
    8. ' and' → logprob: -4.249950885772705
    9. '#' → logprob: -4.249950885772705
    10. ' since' → logprob: -4.374950885772705

Token 191: ' the' (ID: 290)
  Prédit: ' it's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it's' → logprob: -1.434473991394043
    2. ' p' → logprob: -1.559473991394043
    3. ' it' → logprob: -1.559473991394043
    4. 'p' → logprob: -2.809473991394043
    5. ' n' → logprob: -2.809473991394043
    6. ' the' → logprob: -2.934473991394043
    7. 'it' → logprob: -3.559473991394043
    8. '1' → logprob: -3.934473991394043
    9. ' ' → logprob: -3.934473991394043
    10. 'n' → logprob: -4.684473991394043

Token 192: ' problem' (ID: 4792)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.0368777513504028
    2. ' ' → logprob: -1.7868777513504028
    3. ' )' → logprob: -2.6618776321411133
    4. ' probability' → logprob: -2.6618776321411133
    5. ' **' → logprob: -2.7868776321411133
    6. ')' → logprob: -3.1618776321411133
    7. '1' → logprob: -3.4118776321411133
    8. ' k' → logprob: -3.5368776321411133
    9. '**' → logprob: -3.6618776321411133
    10. ' code' → logprob: -3.6618776321411133

Token 193: ' reduces' (ID: 38566)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2591915428638458
    2. ' is' → logprob: -2.5091915130615234
    3. '<|end|>' → logprob: -2.7591915130615234
    4. ' )' → logprob: -3.5091915130615234
    5. ',' → logprob: -4.759191513061523
    6. ' continues' → logprob: -4.884191513061523
    7. '#' → logprob: -5.134191513061523
    8. '<|end|>' → logprob: -5.509191513061523
    9. ' has' → logprob: -6.134191513061523
    10. ' explains' → logprob: -6.259191513061523

Token 194: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1135546937584877
    2. 'to' → logprob: -2.2385547161102295
    3. ')' → logprob: -8.488554954528809
    4. '   ' → logprob: -8.488554954528809
    5. ' ' → logprob: -9.488554954528809
    6. '       ' → logprob: -9.738554954528809
    7. ',' → logprob: -10.238554954528809
    8. ' the' → logprob: -10.863554954528809
    9. ' p' → logprob: -10.988554954528809
    10. '           ' → logprob: -11.113554954528809

Token 195: ' probability' (ID: 34933)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.398516297340393
    2. ' Fraction' → logprob: -2.1485161781311035
    3. '(' → logprob: -2.2735161781311035
    4. 'Fraction' → logprob: -2.2735161781311035
    5. 'p' → logprob: -2.6485161781311035
    6. ' p' → logprob: -2.8985161781311035
    7. ' ' → logprob: -3.1485161781311035
    8. ' the' → logprob: -3.1485161781311035
    9. ' n' → logprob: -3.1485161781311035
    10. ' (' → logprob: -3.3985161781311035

Token 196: ' no' (ID: 860)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.16969339549541473
    2. ' of' → logprob: -2.4196934700012207
    3. 'that' → logprob: -3.2946934700012207
    4. ' =' → logprob: -5.169693470001221
    5. ')' → logprob: -5.419693470001221
    6. ' ' → logprob: -5.669693470001221
    7. '=' → logprob: -5.794693470001221
    8. '(' → logprob: -6.044693470001221
    9. ' )' → logprob: -6.294693470001221
    10. ' (' → logprob: -6.919693470001221

Token 197: ' fail' (ID: 7111)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -1.404284119606018
    2. ' mountain' → logprob: -1.654284119606018
    3. ' one' → logprob: -2.0292840003967285
    4. ' rest' → logprob: -3.0292840003967285
    5. '_restart' → logprob: -3.0292840003967285
    6. ' restart' → logprob: -3.2792840003967285
    7. ')' → logprob: -3.6542840003967285
    8. ' card' → logprob: -3.7792840003967285
    9. 'space' → logprob: -4.0292840003967285
    10. ' failure' → logprob: -4.1542840003967285

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03649744763970375
    2. ' )' → logprob: -4.286497592926025
    3. '   ' → logprob: -5.411497592926025
    4. ' that' → logprob: -5.536497592926025
    5. '),' → logprob: -6.286497592926025
    6. ',' → logprob: -6.411497592926025
    7. '_n' → logprob: -7.161497592926025
    8. ')
' → logprob: -7.286497592926025
    9. ' for' → logprob: -7.536497592926025
    10. '<|end|>' → logprob: -7.536497592926025

Token 199: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15947341918945312
    2. ')' → logprob: -2.034473419189453
    3. '       ' → logprob: -5.534473419189453
    4. '
' → logprob: -6.659473419189453
    5. ' ' → logprob: -6.659473419189453
    6. ')
' → logprob: -6.784473419189453
    7. '<|end|>' → logprob: -6.784473419189453
    8. ',' → logprob: -6.909473419189453
    9. ' =' → logprob: -7.034473419189453
    10. '    
' → logprob: -7.284473419189453

Token 200: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.39574700593948364
    2. ' p' → logprob: -1.1457469463348389
    3. '   ' → logprob: -5.645747184753418
    4. '       ' → logprob: -6.020747184753418
    5. ' n' → logprob: -7.395747184753418
    6. 'n' → logprob: -7.645747184753418
    7. 'prob' → logprob: -8.145747184753418
    8. 'pow' → logprob: -8.270747184753418
    9. 'fail' → logprob: -8.895747184753418
    10. ' denominator' → logprob: -8.895747184753418

Token 201: ' But' (ID: 3072)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.368203729391098
    2. ' p' → logprob: -1.2432037591934204
    3. 'prob' → logprob: -5.743203639984131
    4. '       ' → logprob: -5.993203639984131
    5. ' denominator' → logprob: -6.118203639984131
    6. 'pow' → logprob: -6.618203639984131
    7. 'n' → logprob: -6.618203639984131
    8. ' denom' → logprob: -6.868203639984131
    9. '   ' → logprob: -6.993203639984131
    10. '#' → logprob: -6.993203639984131

Token 202: ' from' (ID: 591)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.22901694476604462
    2. ' if' → logprob: -3.4790170192718506
    3. ' n' → logprob: -3.6040170192718506
    4. ' the' → logprob: -3.6040170192718506
    5. 'p' → logprob: -3.8540170192718506
    6. ' we' → logprob: -3.9790170192718506
    7. ' for' → logprob: -4.3540167808532715
    8. ' let's' → logprob: -4.8540167808532715
    9. 'the' → logprob: -5.1040167808532715
    10. 'n' → logprob: -5.3540167808532715

Token 203: ' problem' (ID: 4792)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8281344175338745
    2. ' here' → logprob: -1.7031344175338745
    3. ' the' → logprob: -1.9531344175338745
    4. 'the' → logprob: -2.703134536743164
    5. 'math' → logprob: -3.328134536743164
    6. 'here' → logprob: -3.703134536743164
    7. ' n' → logprob: -4.203134536743164
    8. ' k' → logprob: -4.453134536743164
    9. ' your' → logprob: -4.703134536743164
    10. ' previous' → logprob: -4.953134536743164

Token 204: ' analysis' (ID: 8450)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7332994341850281
    2. ',' → logprob: -1.3582994937896729
    3. '):' → logprob: -2.358299493789673
    4. ':' → logprob: -2.733299493789673
    5. '   ' → logprob: -3.983299493789673
    6. '):
' → logprob: -4.858299255371094
    7. ' context' → logprob: -5.233299255371094
    8. ' ' → logprob: -5.483299255371094
    9. '<|end|>' → logprob: -5.483299255371094
    10. '_' → logprob: -5.608299255371094

Token 205: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37821853160858154
    2. ':' → logprob: -1.3782185316085815
    3. '   ' → logprob: -4.003218650817871
    4. '       ' → logprob: -4.003218650817871
    5. ' ' → logprob: -5.503218650817871
    6. ' ,' → logprob: -5.753218650817871
    7. ',
' → logprob: -6.003218650817871
    8. '    ' → logprob: -6.128218650817871
    9. ' p' → logprob: -6.503218650817871
    10. ')' → logprob: -6.503218650817871

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49019554257392883
    2. ' p' → logprob: -1.2401955127716064
    3. ' n' → logprob: -3.1151955127716064
    4. '        ' → logprob: -3.6151955127716064
    5. ' ' → logprob: -4.9901957511901855
    6. 'p' → logprob: -5.3651957511901855
    7. 'n' → logprob: -5.8651957511901855
    8. ')' → logprob: -6.8651957511901855
    9. '    ' → logprob: -6.8651957511901855
    10. '        
' → logprob: -6.9901957511901855

Token 207: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.24272212386131287
    2. ' p' → logprob: -1.8677221536636353
    3. 'prob' → logprob: -4.242722034454346
    4. ' total' → logprob: -4.742722034454346
    5. '#' (adapté à ' #') → logprob: -4.867722034454346
    6. 'total' → logprob: -5.242722034454346
    7. '   ' → logprob: -5.867722034454346
    8. 'pass' → logprob: -5.992722034454346
    9. 'if' → logprob: -6.117722034454346
    10. ' if' → logprob: -6.117722034454346

Token 208: ' The' (ID: 623)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3940688669681549
    2. ' p' → logprob: -1.6440688371658325
    3. 'prob' → logprob: -3.144068956375122
    4. 'total' → logprob: -3.894068956375122
    5. '#' → logprob: -4.269068717956543
    6. ' total' → logprob: -4.269068717956543
    7. ' denominator' → logprob: -4.769068717956543
    8. ' denom' → logprob: -4.894068717956543
    9. 'den' → logprob: -5.394068717956543
    10. 'if' → logprob: -5.769068717956543

Token 209: ' chain' (ID: 13464)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6822026968002319
    2. 'p' → logprob: -1.682202696800232
    3. ' next' → logprob: -2.6822028160095215
    4. ' probability' → logprob: -2.8072028160095215
    5. ' ' → logprob: -2.9322028160095215
    6. 'prob' → logprob: -3.6822028160095215
    7. ' #' → logprob: -4.0572028160095215
    8. ' problem' → logprob: -4.3072028160095215
    9. ' =' → logprob: -4.9322028160095215
    10. ' n' → logprob: -5.1822028160095215

Token 210: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9093880653381348
    2. ' is' → logprob: -1.7843880653381348
    3. ' ' → logprob: -2.0343880653381348
    4. 's' → logprob: -2.6593880653381348
    5. '   ' → logprob: -2.7843880653381348
    6. ' =' → logprob: -3.4093880653381348
    7. '    ' → logprob: -3.6593880653381348
    8. '  ' → logprob: -4.034388065338135
    9. ' p' → logprob: -4.284388065338135
    10. ' s' → logprob: -4.284388065338135

Token 211: ' draws' (ID: 41314)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.5770326852798462
    2. 'p' → logprob: -2.0770325660705566
    3. 'multip' → logprob: -2.4520325660705566
    4. 'mount' → logprob: -2.9520325660705566
    5. 'fail' → logprob: -3.0770325660705566
    6. ' failures' → logprob: -3.2020325660705566
    7. 'success' → logprob: -3.3270325660705566
    8. ' multip' → logprob: -3.4520325660705566
    9. ' p' → logprob: -3.4520325660705566
    10. ' mountains' → logprob: -3.5770325660705566

Token 212: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: ' success' (ID: 3505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7909437417984009
    2. ' n' → logprob: -2.9159436225891113
    3. ' ' → logprob: -3.0409436225891113
    4. ' p' → logprob: -3.1659436225891113
    5. '1' → logprob: -3.2909436225891113
    6. ' (' → logprob: -3.2909436225891113
    7. ' exactly' → logprob: -3.5409436225891113
    8. ' the' → logprob: -3.7909436225891113
    9. ' not' → logprob: -3.7909436225891113
    10. 'a' → logprob: -3.9784436225891113

Token 214: ' iff' (ID: 165577)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5922924280166626
    2. ' with' → logprob: -1.8422924280166626
    3. ' probability' → logprob: -2.467292308807373
    4. ' or' → logprob: -3.217292308807373
    5. ',' → logprob: -3.842292308807373
    6. 'with' → logprob: -3.967292308807373
    7. ' ' → logprob: -4.217292308807373
    8. ' =' → logprob: -4.217292308807373
    9. 'prob' → logprob: -4.342292308807373
    10. '   ' → logprob: -4.342292308807373

Token 215: ' there' (ID: 1354)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.19500474631786346
    2. ' not' → logprob: -3.32000470161438
    3. 'all' → logprob: -3.44500470161438
    4. ' k' → logprob: -4.445004940032959
    5. ' any' → logprob: -4.445004940032959
    6. ' no' → logprob: -4.445004940032959
    7. ' the' → logprob: -4.570004940032959
    8. 'not' → logprob: -4.820004940032959
    9. ' at' → logprob: -4.945004940032959
    10. '1' → logprob: -4.945004940032959

Token 216: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.035791825503110886
    2. 'is' → logprob: -3.7857918739318848
    3. ' exists' → logprob: -5.160791873931885
    4. ''s' → logprob: -5.535791873931885
    5. ' are' → logprob: -6.535791873931885
    6. 'exists' → logprob: -7.535791873931885
    7. ' ' → logprob: -8.035791397094727
    8. ' isn't' → logprob: -9.160791397094727
    9. 'are' → logprob: -9.785791397094727
    10. ' does' → logprob: -9.785791397094727

Token 217: ' no' (ID: 860)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.2648235261440277
    2. ' a' → logprob: -2.2648234367370605
    3. ' no' → logprob: -2.5148234367370605
    4. 'at' → logprob: -3.7648234367370605
    5. 'a' → logprob: -4.5148234367370605
    6. ' any' → logprob: -5.2648234367370605
    7. 'no' → logprob: -5.3898234367370605
    8. ' ' → logprob: -6.5148234367370605
    9. ' an' → logprob: -7.2648234367370605
    10. ' some' → logprob: -7.6398234367370605

Token 218: ' "' (ID: 392)
  Prédit: ' failure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' failure' → logprob: -0.7176662683486938
    2. ' mountain' → logprob: -1.5926662683486938
    3. ' ' → logprob: -1.7176662683486938
    4. 'failure' → logprob: -3.3426661491394043
    5. ' break' → logprob: -3.4676661491394043
    6. ' space' → logprob: -4.842666149139404
    7. 'mount' → logprob: -5.092666149139404
    8. ' sequence' → logprob: -5.592666149139404
    9. 'fail' → logprob: -5.592666149139404
    10. ' block' → logprob: -5.592666149139404

Token 219: 'dead' (ID: 69891)
  Prédit: 'mount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mount' → logprob: -1.4021446704864502
    2. 'failure' → logprob: -1.6521446704864502
    3. '1' → logprob: -1.9021446704864502
    4. ' mountain' → logprob: -2.27714467048645
    5. ' ' → logprob: -3.02714467048645
    6. 'collision' → logprob: -3.15214467048645
    7. 'fail' → logprob: -3.40214467048645
    8. ' failure' → logprob: -3.77714467048645
    9. 'break' → logprob: -4.277144432067871
    10. 'repeat' → logprob: -4.277144432067871

Token 220: ' end' (ID: 1268)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.3179483413696289
    2. 'end' → logprob: -2.067948341369629
    3. ' end' → logprob: -2.942948341369629
    4. ' ' → logprob: -3.192948341369629
    5. '_' → logprob: -3.567948341369629
    6. '_end' → logprob: -4.067948341369629
    7. ' _' → logprob: -6.442948341369629
    8. '   ' → logprob: -6.817948341369629
    9. '  ' → logprob: -7.317948341369629
    10. 'locks' → logprob: -7.692948341369629

Token 221: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25285619497299194
    2. ' "' → logprob: -1.5028562545776367
    3. ' ' → logprob: -9.002856254577637
    4. '_"' → logprob: -9.252856254577637
    5. ',"' → logprob: -9.752856254577637
    6. '_' → logprob: -9.877856254577637
    7. 's' → logprob: -10.002856254577637
    8. '."' → logprob: -10.002856254577637
    9. ')"' → logprob: -10.002856254577637
    10. ' in' → logprob: -10.127856254577637

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7975376844406128
    2. ' ' → logprob: -1.1725376844406128
    3. '   ' → logprob: -2.4225378036499023
    4. '<|end|>' → logprob: -2.7975378036499023
    5. '    ' → logprob: -3.2975378036499023
    6. ')' → logprob: -4.172537803649902
    7. ' 
' → logprob: -4.422537803649902
    8. '        ' → logprob: -5.297537803649902
    9. '        
' → logprob: -5.547537803649902
    10. '    
' → logprob: -6.172537803649902

Token 223: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.44904446601867676
    2. '       ' → logprob: -1.3240444660186768
    3. 'p' → logprob: -2.8240444660186768
    4. 'prob' → logprob: -4.824044227600098
    5. ' prob' → logprob: -5.199044227600098
    6. ' total' → logprob: -5.324044227600098
    7. '#' (adapté à ' #') → logprob: -5.949044227600098
    8. ' #' → logprob: -6.199044227600098
    9. ' n' → logprob: -6.324044227600098
    10. ' pass' → logprob: -6.449044227600098

Token 224: ' The' (ID: 623)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7357284426689148
    2. '       ' → logprob: -0.7357284426689148
    3. '   ' → logprob: -5.2357282638549805
    4. ' #' → logprob: -5.4857282638549805
    5. ' probability' → logprob: -5.6107282638549805
    6. ' 
' → logprob: -5.7357282638549805
    7. '        
' → logprob: -6.1107282638549805
    8. ' prob' → logprob: -6.2357282638549805
    9. ' next' → logprob: -6.2357282638549805
    10. 'p' → logprob: -6.2357282638549805

Token 225: ' only' (ID: 1606)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.7244716882705688
    2. ' probability' → logprob: -1.8494716882705688
    3. ' rest' → logprob: -2.0994715690612793
    4. ' chain' → logprob: -2.3494715690612793
    5. ' p' → logprob: -2.4744715690612793
    6. ' code' → logprob: -2.8494715690612793
    7. ' #' → logprob: -2.9744715690612793
    8. ' ' → logprob: -3.0994715690612793
    9. ' def' → logprob: -3.3494715690612793
    10. ' n' → logprob: -3.9744715690612793

Token 226: ' failure' (ID: 14090)
  Prédit: ' way'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' way' → logprob: -1.0972545146942139
    2. ' remaining' → logprob: -2.097254514694214
    3. ' thing' → logprob: -2.722254514694214
    4. ' valid' → logprob: -2.847254514694214
    5. ' possibility' → logprob: -2.972254514694214
    6. ' failure' → logprob: -2.972254514694214
    7. ' possible' → logprob: -2.972254514694214
    8. ' ' → logprob: -3.097254514694214
    9. ' chance' → logprob: -4.097254753112793
    10. ' token' → logprob: -4.222254753112793

Token 227: ' without' (ID: 2935)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.640576183795929
    2. ' probability' → logprob: -2.265576124191284
    3. ' ' → logprob: -2.515576124191284
    4. ' occurs' → logprob: -2.640576124191284
    5. ' possibility' → logprob: -2.765576124191284
    6. ' case' → logprob: -3.515576124191284
    7. ' possible' → logprob: -4.015576362609863
    8. ' token' → logprob: -4.140576362609863
    9. ' =' → logprob: -4.640576362609863
    10. ' scenario' → logprob: -4.890576362609863

Token 228: ' restart' (ID: 33437)
  Prédit: 'restart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'restart' → logprob: -0.28591135144233704
    2. ' restart' → logprob: -1.4109113216400146
    3. '_restart' → logprob: -6.535911560058594
    4. ' rest' → logprob: -6.910911560058594
    5. 'rest' → logprob: -7.410911560058594
    6. ' a' → logprob: -7.910911560058594
    7. ' any' → logprob: -8.535911560058594
    8. 'r' → logprob: -9.035911560058594
    9. ' restarting' → logprob: -9.035911560058594
    10. 'dead' → logprob: -9.160911560058594

Token 229: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10135860741138458
    2. ' =' → logprob: -3.101358652114868
    3. ')' → logprob: -4.476358413696289
    4. ' occurs' → logprob: -4.976358413696289
    5. ' probability' → logprob: -5.101358413696289
    6. '=' → logprob: -5.351358413696289
    7. ':' → logprob: -5.351358413696289
    8. ',' → logprob: -5.351358413696289
    9. ' ' → logprob: -5.851358413696289
    10. ' )' → logprob: -6.476358413696289

Token 230: ' if' (ID: 538)
  Prédit: ' when'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' when' → logprob: -1.168700098991394
    2. ' all' → logprob: -1.793700098991394
    3. ' that' → logprob: -1.793700098991394
    4. ' Fraction' → logprob: -1.918700098991394
    5. ' ' → logprob: -2.5437002182006836
    6. ' n' → logprob: -2.6687002182006836
    7. '1' → logprob: -4.043700218200684
    8. ' p' → logprob: -4.793700218200684
    9. 'Fraction' → logprob: -4.793700218200684
    10. ' the' → logprob: -4.793700218200684

Token 231: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.08065222948789597
    2. 'all' → logprob: -2.7056522369384766
    3. ' the' → logprob: -5.330652236938477
    4. ' ' → logprob: -6.205652236938477
    5. '1' → logprob: -6.830652236938477
    6. ' k' → logprob: -7.330652236938477
    7. 'the' → logprob: -7.455652236938477
    8. ' mountain' → logprob: -8.205652236938477
    9. ' each' → logprob: -8.580652236938477
    10. ' a' → logprob: -9.330652236938477

Token 232: ' chain' (ID: 13464)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8078705072402954
    2. 'first' → logprob: -1.8078705072402954
    3. ' next' → logprob: -2.432870388031006
    4. 'k' → logprob: -3.182870388031006
    5. 'r' → logprob: -3.432870388031006
    6. 'mount' → logprob: -3.432870388031006
    7. ' first' → logprob: -3.932870388031006
    8. 'code' → logprob: -3.932870388031006
    9. 'chain' → logprob: -4.057870388031006
    10. '1' → logprob: -4.182870388031006

Token 233: ' breaks' (ID: 29617)
  Prédit: ' ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ends' → logprob: -0.7960018515586853
    2. ' is' → logprob: -1.67100191116333
    3. ' continues' → logprob: -2.92100191116333
    4. ' stops' → logprob: -3.04600191116333
    5. 'fails' → logprob: -3.17100191116333
    6. 'contin' → logprob: -3.29600191116333
    7. '   ' → logprob: -3.79600191116333
    8. 'is' → logprob: -3.92100191116333
    9. 'ends' → logprob: -4.04600191116333
    10. ' fails' → logprob: -4.17100191116333

Token 234: ' before' (ID: 2254)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.43355098366737366
    2. '   ' → logprob: -1.8085509538650513
    3. '       ' → logprob: -2.183551073074341
    4. ',' → logprob: -3.808551073074341
    5. ' due' → logprob: -4.558550834655762
    6. ' because' → logprob: -4.683550834655762
    7. ' in' → logprob: -5.058550834655762
    8. '.' → logprob: -5.558550834655762
    9. ' and' → logprob: -5.558550834655762
    10. '<|end|>' → logprob: -6.183550834655762

Token 235: ' all' (ID: 722)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.4603176712989807
    2. ' reaching' → logprob: -1.710317611694336
    3. 'length' → logprob: -2.585317611694336
    4. 'k' → logprob: -3.960317611694336
    5. ' length' → logprob: -3.960317611694336
    6. 'com' → logprob: -4.085317611694336
    7. 'completion' → logprob: -4.085317611694336
    8. 'the' → logprob: -4.585317611694336
    9. ' k' → logprob: -5.210317611694336
    10. ' the' → logprob: -5.460317611694336

Token 236: ' cards' (ID: 10541)
  Prédit: ' mountains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mountains' → logprob: -0.32358309626579285
    2. 'mount' → logprob: -1.5735831260681152
    3. ' n' → logprob: -3.9485831260681152
    4. 'n' → logprob: -4.198583126068115
    5. ' k' → logprob: -4.573583126068115
    6. ' mountain' → logprob: -5.073583126068115
    7. 'k' → logprob: -5.198583126068115
    8. ' steps' → logprob: -6.198583126068115
    9. 'm' → logprob: -6.823583126068115
    10. 'steps' → logprob: -6.948583126068115

Token 237: ' drawn' (ID: 25279)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.07935436069965363
    2. '.' → logprob: -3.8293542861938477
    3. ',' → logprob: -4.204354286193848
    4. '   ' → logprob: -4.829354286193848
    5. 'are' → logprob: -5.579354286193848
    6. ' in' → logprob: -5.579354286193848
    7. ' ' → logprob: -5.704354286193848
    8. ' is' → logprob: -5.704354286193848
    9. ' have' → logprob: -5.829354286193848
    10. '<|end|>' → logprob: -5.954354286193848

Token 238: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6666618585586548
    2. '   ' → logprob: -1.4166618585586548
    3. ',' → logprob: -2.0416617393493652
    4. '.' → logprob: -2.6666617393493652
    5. ':' → logprob: -4.791661739349365
    6. ')' → logprob: -5.041661739349365
    7. '<|end|>' → logprob: -5.041661739349365
    8. '    ' → logprob: -5.791661739349365
    9. ' ,' → logprob: -6.166661739349365
    10. ',
' → logprob: -6.416661739349365

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00987980142235756
    2. '<|end|>' → logprob: -6.1348795890808105
    3. ')' → logprob: -6.2598795890808105
    4. '        
' → logprob: -6.6348795890808105
    5. '
' → logprob: -6.8848795890808105
    6. '   ' → logprob: -7.0098795890808105
    7. ',' → logprob: -7.1348795890808105
    8. ' ' → logprob: -8.259880065917969
    9. '<|end|>' → logprob: -8.759880065917969
    10. ')
' → logprob: -9.009880065917969

Token 240: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6003696322441101
    2. '       ' → logprob: -0.9753696322441101
    3. 'p' → logprob: -2.975369691848755
    4. '   ' → logprob: -4.600369453430176
    5. ' n' → logprob: -5.975369453430176
    6. ' if' → logprob: -6.600369453430176
    7. '
' → logprob: -6.725369453430176
    8. ')' → logprob: -6.725369453430176
    9. ' ' → logprob: -6.850369453430176
    10. 'prob' → logprob: -7.100369453430176

Token 241: ' Actually' (ID: 50557)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6663275361061096
    2. 'p' → logprob: -1.4163274765014648
    3. '       ' → logprob: -1.6663274765014648
    4. 'prob' → logprob: -4.416327476501465
    5. ' total' → logprob: -4.541327476501465
    6. 'total' → logprob: -5.041327476501465
    7. ' prob' → logprob: -5.541327476501465
    8. ' if' → logprob: -5.666327476501465
    9. '   ' → logprob: -5.666327476501465
    10. ' n' → logprob: -6.041327476501465

Token 242: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4138236939907074
    2. ' n' → logprob: -2.4138236045837402
    3. ' ' → logprob: -2.7888236045837402
    4. ' p' → logprob: -2.9138236045837402
    5. '        ' → logprob: -3.4138236045837402
    6. '   ' → logprob: -3.9138236045837402
    7. ',' → logprob: -3.9138236045837402
    8. '    ' → logprob: -4.03882360458374
    9. 'n' → logprob: -4.53882360458374
    10. '<|end|>' → logprob: -5.66382360458374

Token 243: ' editorial' (ID: 37857)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4093402326107025
    2. 'math' → logprob: -1.534340262413025
    3. 'the' → logprob: -3.5343401432037354
    4. ' here' → logprob: -3.5343401432037354
    5. ' fractions' → logprob: -3.7843401432037354
    6. ' the' → logprob: -3.9093401432037354
    7. ' problem' → logprob: -5.4093403816223145
    8. 'collections' → logprob: -6.2843403816223145
    9. 'here' → logprob: -6.4093403816223145
    10. 'sym' → logprob: -6.9093403816223145

Token 244: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4537307322025299
    2. ',' → logprob: -1.8287307024002075
    3. '<|end|>' → logprob: -2.453730821609497
    4. '   ' → logprob: -2.953730821609497
    5. '<|end|>' → logprob: -3.578730821609497
    6. ')' → logprob: -5.328730583190918
    7. ':
' → logprob: -5.328730583190918
    8. ' ' → logprob: -5.703730583190918
    9. ' :' → logprob: -5.703730583190918
    10. ' ,' → logprob: -5.953730583190918

Token 245: ' probability' (ID: 34933)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.06875713169574738
    2. '       ' → logprob: -4.068757057189941
    3. 'p' → logprob: -4.318757057189941
    4. ' pass' → logprob: -4.318757057189941
    5. ' q' → logprob: -5.693757057189941
    6. ' #' → logprob: -5.818757057189941
    7. 'prob' → logprob: -6.068757057189941
    8. '#' → logprob: -6.318757057189941
    9. ' return' → logprob: -6.568757057189941
    10. ' n' → logprob: -6.818757057189941

Token 246: ' success' (ID: 3505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4003680944442749
    2. '=' → logprob: -2.1503682136535645
    3. '(' → logprob: -2.2753682136535645
    4. ' that' → logprob: -3.4003682136535645
    5. ' of' → logprob: -3.7753682136535645
    6. ' ' → logprob: -4.1503682136535645
    7. ' (' → logprob: -4.5253682136535645
    8. ')' → logprob: -4.6503682136535645
    9. '<|end|>' → logprob: -5.7753682136535645
    10. ',' → logprob: -6.1503682136535645

Token 247: ' without' (ID: 2935)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03829462453722954
    2. '=' → logprob: -3.288294553756714
    3. ')' → logprob: -9.413294792175293
    4. ' is' → logprob: -10.538294792175293
    5. '   ' → logprob: -10.663294792175293
    6. ' ' → logprob: -10.913294792175293
    7. '_' → logprob: -11.413294792175293
    8. ',' → logprob: -11.413294792175293
    9. '_no' → logprob: -11.913294792175293
    10. '[' → logprob: -11.913294792175293

Token 248: ' restart' (ID: 33437)
  Prédit: 'restart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'restart' → logprob: -0.2346605658531189
    2. ' restart' → logprob: -1.6096606254577637
    3. '_restart' → logprob: -4.859660625457764
    4. 'fail' → logprob: -8.234660148620605
    5. 'r' → logprob: -8.609660148620605
    6. ' failure' → logprob: -8.609660148620605
    7. 'failure' → logprob: -8.859660148620605
    8. 'retry' → logprob: -9.109660148620605
    9. ' ' → logprob: -9.734660148620605
    10. ' fail' → logprob: -9.859660148620605

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014806069433689117
    2. '=' → logprob: -4.389806270599365
    3. ')' → logprob: -6.514806270599365
    4. ' is' → logprob: -8.014805793762207
    5. ' ' → logprob: -8.889805793762207
    6. ' )' → logprob: -9.639805793762207
    7. ' p' → logprob: -9.889805793762207
    8. '   ' → logprob: -10.639805793762207
    9. ' (' → logprob: -10.889805793762207
    10. 'p' → logprob: -11.014805793762207

Token 250: ' k' (ID: 372)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.2164606750011444
    2. ' Fraction' → logprob: -2.216460704803467
    3. '(' → logprob: -3.841460704803467
    4. '1' → logprob: -4.216460704803467
    5. ' (' → logprob: -4.716460704803467
    6. 'pow' → logprob: -4.716460704803467
    7. '(n' → logprob: -4.841460704803467
    8. ' n' → logprob: -4.966460704803467
    9. 'n' → logprob: -5.591460704803467
    10. ' ' → logprob: -5.716460704803467

Token 251: '/n' (ID: 18292)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.0007781982421875
    2. ' /' → logprob: -1.3757781982421875
    3. ' **' → logprob: -1.6257781982421875
    4. '/n' → logprob: -2.3757781982421875
    5. ' *' → logprob: -3.5007781982421875
    6. ')' → logprob: -4.3757781982421875
    7. '/' → logprob: -4.3757781982421875
    8. ' ' → logprob: -5.2507781982421875
    9. '/N' → logprob: -5.7507781982421875
    10. ' +' → logprob: -6.1257781982421875

Token 252: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.8943392038345337
    2. '**' → logprob: -1.1443392038345337
    3. ' *' → logprob: -1.8943392038345337
    4. ')' → logprob: -2.519339084625244
    5. ' /' → logprob: -4.769339084625244
    6. ',' → logprob: -4.769339084625244
    7. '   ' → logprob: -5.394339084625244
    8. ' ' → logprob: -5.644339084625244
    9. '*' → logprob: -5.769339084625244
    10. '
' → logprob: -6.269339084625244

Token 253: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.200166469876422e-06
    2. ' k' → logprob: -12.500004768371582
    3. '(' → logprob: -13.875004768371582
    4. '(k' → logprob: -16.0000057220459
    5. 'r' → logprob: -16.1250057220459
    6. 'n' → logprob: -16.3750057220459
    7. '**' → logprob: -16.8750057220459
    8. '```' → logprob: -17.1250057220459
    9. '1' → logprob: -17.3750057220459
    10. '{k' → logprob: -17.7500057220459

Token 254: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.0445224046707153
    2. ' **' → logprob: -1.2945224046707153
    3. '**' → logprob: -1.4195224046707153
    4. ')' → logprob: -3.044522285461426
    5. '   ' → logprob: -3.919522285461426
    6. ',' → logprob: -4.044522285461426
    7. ' ' → logprob: -4.544522285461426
    8. '*' → logprob: -4.794522285461426
    9. '
' → logprob: -5.294522285461426
    10. '

' → logprob: -6.294522285461426

Token 255: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.540911078453064
    2. '(' → logprob: -1.415911078453064
    3. '(k' → logprob: -2.6659111976623535
    4. '(n' → logprob: -3.0409111976623535
    5. 'n' → logprob: -4.1659111976623535
    6. 'Fraction' → logprob: -4.6659111976623535
    7. 'math' → logprob: -5.1659111976623535
    8. ' (' → logprob: -5.2909111976623535
    9. '1' → logprob: -5.5409111976623535
    10. 'r' → logprob: -5.7909111976623535

Token 256: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2047051191329956
    2. '(' → logprob: -1.4547051191329956
    3. '(k' → logprob: -1.5797051191329956
    4. '(n' → logprob: -1.9547051191329956
    5. '1' → logprob: -3.579705238342285
    6. 'n' → logprob: -3.579705238342285
    7. 'r' → logprob: -4.079705238342285
    8. 'm' → logprob: -4.329705238342285
    9. ' (' → logprob: -4.704705238342285
    10. '(r' → logprob: -4.954705238342285

Token 257: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5954265594482422
    2. ')' → logprob: -1.4704265594482422
    3. '**' → logprob: -1.9704265594482422
    4. ' -' → logprob: -2.720426559448242
    5. ')**' → logprob: -5.720426559448242
    6. '+' → logprob: -5.845426559448242
    7. ' **' → logprob: -5.845426559448242
    8. '^' → logprob: -6.845426559448242
    9. '-k' → logprob: -7.220426559448242
    10. '<|end|>' → logprob: -7.470426559448242

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005811501177959144
    2. ' ' → logprob: -7.87558126449585
    3. 'k' → logprob: -8.625580787658691
    4. '   ' → logprob: -12.500580787658691
    5. ' k' → logprob: -12.625580787658691
    6. ')' → logprob: -12.688080787658691
    7. 'r' → logprob: -13.000580787658691
    8. '(' → logprob: -13.938080787658691
    9. '```' → logprob: -13.938080787658691
    10. '-' → logprob: -14.250580787658691

Token 259: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3164586126804352
    2. ')/' → logprob: -1.4414585828781128
    3. ')/(' → logprob: -3.6914587020874023
    4. ')**' → logprob: -5.066458702087402
    5. '/' → logprob: -7.191458702087402
    6. ')^' → logprob: -7.441458702087402
    7. ' )' → logprob: -7.691458702087402
    8. '),' → logprob: -7.941458702087402
    9. '**' → logprob: -8.066458702087402
    10. '+' → logprob: -8.316458702087402

Token 260: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005454786121845245
    2. ' k' → logprob: -5.630455017089844
    3. '1' → logprob: -6.755455017089844
    4. '(' → logprob: -8.005455017089844
    5. '-k' → logprob: -9.005455017089844
    6. 'n' → logprob: -9.380455017089844
    7. '-' → logprob: -10.005455017089844
    8. '(k' → logprob: -10.630455017089844
    9. ' (' → logprob: -11.005455017089844
    10. '(-' → logprob: -11.630455017089844

Token 261: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45159876346588135
    2. '**' → logprob: -2.201598644256592
    3. ' *' → logprob: -2.326598644256592
    4. '   ' → logprob: -3.451598644256592
    5. ')
' → logprob: -3.576598644256592
    6. ' **' → logprob: -3.576598644256592
    7. '
' → logprob: -4.326598644256592
    8. ',' → logprob: -4.576598644256592
    9. '*' → logprob: -4.701598644256592
    10. ' )' → logprob: -5.576598644256592

Token 262: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6597029566764832
    2. ' *' → logprob: -1.534703016281128
    3. '   ' → logprob: -2.034703016281128
    4. '*' → logprob: -2.909703016281128
    5. '**' → logprob: -4.034702777862549
    6. '(' → logprob: -4.659702777862549
    7. '*(' → logprob: -4.659702777862549
    8. ' (' → logprob: -5.409702777862549
    9. ',' → logprob: -5.409702777862549
    10. ' ' → logprob: -5.534702777862549

Token 263: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5563823580741882
    2. 'p' → logprob: -0.9313823580741882
    3. '       ' → logprob: -3.806382417678833
    4. ' numerator' → logprob: -5.306382179260254
    5. 'prob' → logprob: -5.931382179260254
    6. 'n' → logprob: -7.806382179260254
    7. ' n' → logprob: -8.056382179260254
    8. 'success' → logprob: -8.306382179260254
    9. ' prob' → logprob: -8.431382179260254
    10. ' denom' → logprob: -8.556382179260254

Token 264: ' This' (ID: 1328)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5022270679473877
    2. ' p' → logprob: -1.0022270679473877
    3. 'prob' → logprob: -4.752226829528809
    4. '       ' → logprob: -5.627226829528809
    5. 'pow' → logprob: -6.002226829528809
    6. 'n' → logprob: -6.127226829528809
    7. ' numerator' → logprob: -6.252226829528809
    8. '   ' → logprob: -6.502226829528809
    9. ' n' → logprob: -6.627226829528809
    10. ' prob' → logprob: -7.252226829528809

Token 265: ' problem' (ID: 4792)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136404752731323
    2. '=' → logprob: -1.8136404752731323
    3. ' is' → logprob: -3.563640594482422
    4. 'p' → logprob: -4.063640594482422
    5. ' p' → logprob: -4.563640594482422
    6. ' ' → logprob: -4.563640594482422
    7. '_' → logprob: -4.813640594482422
    8. '.' → logprob: -4.938640594482422
    9. '#' → logprob: -6.063640594482422
    10. ')' → logprob: -6.313640594482422

Token 266: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3629168272018433
    2. ' =' → logprob: -1.3629168272018433
    3. ' is' → logprob: -2.237916946411133
    4. '=' → logprob: -2.237916946411133
    5. '   ' → logprob: -3.112916946411133
    6. '#' → logprob: -3.237916946411133
    7. '       ' → logprob: -3.612916946411133
    8. ' continues' → logprob: -3.612916946411133
    9. '
' → logprob: -3.737916946411133
    10. ':' → logprob: -3.987916946411133

Token 267: ' complex' (ID: 8012)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.089940309524536
    2. ' quite' → logprob: -2.214940309524536
    3. ' incomplete' → logprob: -2.214940309524536
    4. ' tricky' → logprob: -2.339940309524536
    5. ' complex' → logprob: -2.714940309524536
    6. ' complicated' → logprob: -2.964940309524536
    7. 'complex' → logprob: -2.964940309524536
    8. ' not' → logprob: -3.214940309524536
    9. '#' → logprob: -3.339940309524536
    10. 'not' → logprob: -3.339940309524536

Token 268: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0744777917861938
    2. '<|end|>' → logprob: -1.4494777917861938
    3. '   ' → logprob: -1.5744777917861938
    4. ' p' → logprob: -3.4494776725769043
    5. '<|end|>' → logprob: -3.4494776725769043
    6. ',' → logprob: -3.4494776725769043
    7. ')' → logprob: -3.5744776725769043
    8. '...' → logprob: -3.5744776725769043
    9. '       ' → logprob: -4.074477672576904
    10. '    ' → logprob: -4.574477672576904

Token 269: ' combin' (ID: 25307)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.246718168258667
    2. 'com' → logprob: -1.496718168258667
    3. 'prob' → logprob: -2.246718168258667
    4. 'terms' → logprob: -2.371718168258667
    5. 'progress' → logprob: -2.996718168258667
    6. 'code' → logprob: -3.121718168258667
    7. 'detail' → logprob: -3.621718168258667
    8. '```' → logprob: -3.621718168258667
    9. 'details' → logprob: -3.746718168258667
    10. 'nature' → logprob: -4.496718406677246

Token 270: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.48589521646499634
    2. 'atorial' → logprob: -0.9858952164649963
    3. 'ations' → logprob: -4.985895156860352
    4. 'ation' → logprob: -5.860895156860352
    5. 'plex' → logprob: -7.235895156860352
    6. 'ational' → logprob: -8.360895156860352
    7. 'binations' → logprob: -8.610895156860352
    8. 'bin' → logprob: -8.735895156860352
    9. 'e' → logprob: -9.360895156860352
    10. '```' → logprob: -9.485895156860352

Token 271: 'ics' (ID: 1541)
  Prédit: 'ics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ics' → logprob: -0.00046856500557623804
    2. 'cs' → logprob: -8.750468254089355
    3. '```' → logprob: -9.125468254089355
    4. 'al' → logprob: -9.625468254089355
    5. 'ic' → logprob: -10.375468254089355
    6. '
' → logprob: -10.875468254089355
    7. 'ial' → logprob: -11.000468254089355
    8. 's' → logprob: -11.000468254089355
    9. 'e' → logprob: -11.250468254089355
    10. 'ials' → logprob: -11.625468254089355

Token 272: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06408680230379105
    2. ')' → logprob: -3.5640869140625
    3. '        ' → logprob: -4.3140869140625
    4. ' ' → logprob: -4.6890869140625
    5. '    ' → logprob: -5.9390869140625
    6. ' but' → logprob: -6.3140869140625
    7. '   ' → logprob: -6.4390869140625
    8. '...' → logprob: -6.9390869140625
    9. ' so' → logprob: -7.3140869140625
    10. ' )' → logprob: -7.5640869140625

Token 274: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01607918180525303
    2. ' p' → logprob: -5.766078948974609
    3. ')' → logprob: -5.891078948974609
    4. '        ' → logprob: -6.141078948974609
    5. ' but' → logprob: -6.516078948974609
    6. '   ' → logprob: -6.516078948974609
    7. '        
' → logprob: -6.891078948974609
    8. ' ' → logprob: -7.016078948974609
    9. ' so' → logprob: -7.266078948974609
    10. '    ' → logprob: -7.266078948974609

Token 275: ' but' (ID: 889)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4610232412815094
    2. 'p' → logprob: -1.336023211479187
    3. '#' → logprob: -2.8360233306884766
    4. '       ' → logprob: -4.086023330688477
    5. ' numerator' → logprob: -4.711023330688477
    6. ' n' → logprob: -4.836023330688477
    7. ' so' → logprob: -5.836023330688477
    8. 'n' → logprob: -5.961023330688477
    9. ' #' → logprob: -5.961023330688477
    10. ' but' → logprob: -6.961023330688477

Token 276: ' given' (ID: 4335)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10833125561475754
    2. '       ' → logprob: -3.1083312034606934
    3. 'p' → logprob: -3.7333312034606934
    4. '    ' → logprob: -4.733331203460693
    5. ' n' → logprob: -4.733331203460693
    6. '   ' → logprob: -5.108331203460693
    7. ' if' → logprob: -6.108331203460693
    8. '        ' → logprob: -6.608331203460693
    9. ' ' → logprob: -7.108331203460693
    10. 'n' → logprob: -7.483331203460693

Token 277: ' the' (ID: 290)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5383341908454895
    2. ' n' → logprob: -1.9133341312408447
    3. ' the' → logprob: -2.0383341312408447
    4. ' m' → logprob: -2.2883341312408447
    5. ' r' → logprob: -4.788334369659424
    6. ' that' → logprob: -5.038334369659424
    7. 'k' → logprob: -5.163334369659424
    8. 'm' → logprob: -5.413334369659424
    9. ' your' → logprob: -5.788334369659424
    10. 'the' → logprob: -5.788334369659424

Token 278: ' constraints' (ID: 31060)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7215935587882996
    2. ' k' → logprob: -0.8465935587882996
    3. ' n' → logprob: -3.2215936183929443
    4. 'n' → logprob: -4.846593379974365
    5. 'm' → logprob: -4.971593379974365
    6. ' r' → logprob: -4.971593379974365
    7. 'r' → logprob: -5.221593379974365
    8. ' m' → logprob: -5.221593379974365
    9. ' math' → logprob: -6.221593379974365
    10. ' rest' → logprob: -6.471593379974365

Token 279: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.767157256603241
    2. '<|end|>' → logprob: -1.0171573162078857
    3. '<|end|>' → logprob: -2.5171573162078857
    4. '   ' → logprob: -3.2671573162078857
    5. ' ,' → logprob: -4.267157077789307
    6. ')' → logprob: -4.892157077789307
    7. '=' → logprob: -5.017157077789307
    8. ' =' → logprob: -5.392157077789307
    9. ' ' → logprob: -5.517157077789307
    10. ' and' → logprob: -5.642157077789307

Token 280: ' from' (ID: 591)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.178531289100647
    2. ' the' → logprob: -1.678531289100647
    3. ' r' → logprob: -1.803531289100647
    4. ' m' → logprob: -2.4285311698913574
    5. 'k' → logprob: -2.5535311698913574
    6. 'm' → logprob: -2.9285311698913574
    7. 'r' → logprob: -3.1785311698913574
    8. ' code' → logprob: -3.9285311698913574
    9. ' n' → logprob: -4.178531169891357
    10. ' logic' → logprob: -4.428531169891357

Token 281: ' editorial' (ID: 37857)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.34672603011131287
    2. 'sym' → logprob: -2.7217259407043457
    3. 'math' → logprob: -2.9717259407043457
    4. ' problem' → logprob: -3.0967259407043457
    5. 'the' → logprob: -3.4717259407043457
    6. ' the' → logprob: -3.4717259407043457
    7. ' editorial' → logprob: -4.346725940704346
    8. ' sym' → logprob: -4.346725940704346
    9. ' previous' → logprob: -4.596725940704346
    10. ' functools' → logprob: -5.346725940704346

Token 282: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13896633684635162
    2. ':' → logprob: -2.7639663219451904
    3. '   ' → logprob: -3.5139663219451904
    4. ',
' → logprob: -4.7639665603637695
    5. '       ' → logprob: -5.5139665603637695
    6. ')' → logprob: -5.5139665603637695
    7. '...' → logprob: -5.6389665603637695
    8. '<|end|>' → logprob: -5.7639665603637695
    9. ' p' → logprob: -5.8889665603637695
    10. '<|end|>' → logprob: -6.1389665603637695

Token 283: 'see' (ID: 6667)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1772686392068863
    2. ' p' → logprob: -3.0522687435150146
    3. ' )' → logprob: -3.5522687435150146
    4. '),' → logprob: -3.6772687435150146
    5. 'p' → logprob: -4.5522685050964355
    6. ' n' → logprob: -5.1772685050964355
    7. 'Fraction' → logprob: -5.1772685050964355
    8. ' the' → logprob: -5.3022685050964355
    9. ' Fraction' → logprob: -5.4272685050964355
    10. 'n' → logprob: -5.8022685050964355

Token 284: ' below' (ID: 4895)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.3305996656417847
    2. ' previous' → logprob: -1.4555996656417847
    3. ' the' → logprob: -1.7055996656417847
    4. ' comments' → logprob: -3.080599784851074
    5. ' code' → logprob: -3.330599784851074
    6. ' rest' → logprob: -3.580599784851074
    7. ' )' → logprob: -3.705599784851074
    8. ' problem' → logprob: -3.830599784851074
    9. ' https' → logprob: -3.955599784851074
    10. ')' → logprob: -3.955599784851074

Token 285: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.2260726690292358
    2. '       ' → logprob: -1.4760726690292358
    3. '):
' → logprob: -1.6010726690292358
    4. '):' → logprob: -2.1010727882385254
    5. ')' → logprob: -2.8510727882385254
    6. '   ' → logprob: -3.7260727882385254
    7. ' for' → logprob: -3.8510727882385254
    8. ',' → logprob: -3.8510727882385254
    9. '),
' → logprob: -4.726072788238525
    10. '):

' → logprob: -4.976072788238525

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12742473185062408
    2. '        ' → logprob: -2.252424716949463
    3. ')' → logprob: -5.252424716949463
    4. ' p' → logprob: -6.002424716949463
    5. ' ' → logprob: -6.752424716949463
    6. '    ' → logprob: -7.002424716949463
    7. '...' → logprob: -7.502424716949463
    8. '<|end|>' → logprob: -7.502424716949463
    9. ' ' → logprob: -7.502424716949463
    10. ' n' → logprob: -7.627424716949463

Token 287: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32691875100135803
    2. ' p' → logprob: -1.5769187211990356
    3. 'p' → logprob: -3.826918840408325
    4. ' ' → logprob: -3.951918840408325
    5. '        ' → logprob: -4.076918601989746
    6. '   ' → logprob: -5.076918601989746
    7. '    ' → logprob: -5.951918601989746
    8. ')' → logprob: -6.826918601989746
    9. '           ' → logprob: -7.201918601989746
    10. '        
' → logprob: -7.201918601989746

Token 288: ' we' (ID: 581)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.08625337481498718
    2. 'p' → logprob: -2.7112534046173096
    3. '       ' → logprob: -4.2112531661987305
    4. '#' → logprob: -7.8362531661987305
    5. ' n' → logprob: -8.58625316619873
    6. '        ' → logprob: -8.71125316619873
    7. '   ' → logprob: -8.83625316619873
    8. ' #' → logprob: -8.83625316619873
    9. '           ' → logprob: -9.58625316619873
    10. 'n' → logprob: -10.21125316619873

Token 289: ' use' (ID: 1199)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1748133897781372
    2. ' continue' → logprob: -1.1748133897781372
    3. ' can' → logprob: -1.6748133897781372
    4. '   ' → logprob: -2.4248132705688477
    5. ' =' → logprob: -3.2998132705688477
    6. 'continue' → logprob: -4.174813270568848
    7. '=' → logprob: -4.799813270568848
    8. '    ' → logprob: -4.924813270568848
    9. 'import' → logprob: -5.174813270568848
    10. ' import' → logprob: -5.549813270568848

Token 290: ' the' (ID: 290)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.09009373933076859
    2. 'Fraction' → logprob: -2.9650938510894775
    3. '   ' → logprob: -4.590093612670898
    4. ' p' → logprob: -5.215093612670898
    5. ' n' → logprob: -5.215093612670898
    6. ' (' → logprob: -5.340093612670898
    7. ' math' → logprob: -6.340093612670898
    8. ' pow' → logprob: -6.465093612670898
    9. '(' → logprob: -6.465093612670898
    10. ' k' → logprob: -6.590093612670898

Token 291: ' formula' (ID: 20690)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.6280956268310547
    2. ' Fraction' → logprob: -0.8780956268310547
    3. ' math' → logprob: -4.378095626831055
    4. 'pow' → logprob: -5.378095626831055
    5. ' k' → logprob: -5.503095626831055
    6. ' following' → logprob: -5.753095626831055
    7. ' rest' → logprob: -5.753095626831055
    8. '```' → logprob: -6.003095626831055
    9. ' formula' → logprob: -6.378095626831055
    10. ' code' → logprob: -6.503095626831055

Token 292: ' given' (ID: 4335)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.0839613676071167
    2. '   ' → logprob: -1.7089613676071167
    3. '       ' → logprob: -2.3339614868164062
    4. ' =' → logprob: -2.3339614868164062
    5. ':' → logprob: -2.4589614868164062
    6. '<|end|>' → logprob: -3.3339614868164062
    7. ' ' → logprob: -3.7089614868164062
    8. ',' → logprob: -4.083961486816406
    9. ' *' → logprob: -4.208961486816406
    10. 'p' → logprob: -4.333961486816406

Token 293: ':

' (ID: 1402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7074400186538696
    2. '       ' → logprob: -1.0824400186538696
    3. ' p' → logprob: -2.83243989944458
    4. ':' → logprob: -3.20743989944458
    5. ',' → logprob: -4.58243989944458
    6. ' *' → logprob: -4.58243989944458
    7. ' =' → logprob: -4.95743989944458
    8. ' for' → logprob: -5.20743989944458
    9. '(p' → logprob: -5.33243989944458
    10. '    ' → logprob: -5.33243989944458

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06093466281890869
    2. ' p' → logprob: -2.935934543609619
    3. 'p' → logprob: -5.560934543609619
    4. '   ' → logprob: -6.935934543609619
    5. '    ' → logprob: -8.435935020446777
    6. '        ' → logprob: -8.685935020446777
    7. ' ' → logprob: -8.810935020446777
    8. '           ' → logprob: -8.935935020446777
    9. '        
' → logprob: -9.310935020446777
    10. ' 
' → logprob: -9.560935020446777

Token 295: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16882994771003723
    2. ' p' → logprob: -1.9188299179077148
    3. '       ' → logprob: -5.293829917907715
    4. '   ' → logprob: -6.293829917907715
    5. ' numerator' → logprob: -7.168829917907715
    6. 'prob' → logprob: -8.668829917907715
    7. 'numer' → logprob: -8.668829917907715
    8. 'if' → logprob: -9.418829917907715
    9. 'n' → logprob: -9.668829917907715
    10. ' if' → logprob: -10.043829917907715

Token 296: ' From' (ID: 7217)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07123812288045883
    2. ' p' → logprob: -3.4462380409240723
    3. 'if' → logprob: -4.196238040924072
    4. 'prob' → logprob: -4.946238040924072
    5. ' numerator' → logprob: -5.321238040924072
    6. ' if' → logprob: -5.821238040924072
    7. 'numer' → logprob: -5.946238040924072
    8. '       ' → logprob: -6.196238040924072
    9. '   ' → logprob: -7.696238040924072
    10. 'num' → logprob: -7.821238040924072

Token 297: ' editorial' (ID: 37857)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5605323910713196
    2. 'math' → logprob: -0.9355323910713196
    3. 'Fraction' → logprob: -3.685532331466675
    4. ' Fraction' → logprob: -6.060532569885254
    5. ' fractions' → logprob: -6.435532569885254
    6. 'r' → logprob: -6.685532569885254
    7. 'sys' → logprob: -7.310532569885254
    8. 'n' → logprob: -7.310532569885254
    9. 'the' → logprob: -7.685532569885254
    10. 'm' → logprob: -7.810532569885254

Token 298: ' and' (ID: 326)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6713433265686035
    2. '   ' → logprob: -1.6713433265686035
    3. '       ' → logprob: -2.0463433265686035
    4. ':' → logprob: -2.1713433265686035
    5. ',' → logprob: -4.2963433265686035
    6. ' =' → logprob: -4.2963433265686035
    7. '
' → logprob: -4.9213433265686035
    8. 'p' → logprob: -5.5463433265686035
    9. '```' → logprob: -6.0463433265686035
    10. ':
' → logprob: -6.1713433265686035

Token 299: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.7608001828193665
    2. ' problem' → logprob: -1.6358001232147217
    3. 'examples' → logprob: -2.0108001232147217
    4. 'prob' → logprob: -3.1358001232147217
    5. 'discussion' → logprob: -3.7608001232147217
    6. 'code' → logprob: -3.7608001232147217
    7. ' examples' → logprob: -4.135800361633301
    8. 'analysis' → logprob: -4.260800361633301
    9. 'comments' → logprob: -4.385800361633301
    10. ' code' → logprob: -4.510800361633301

Token 300: ' discussion' (ID: 14266)
  Prédit: ' statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' statement' → logprob: -0.4269295334815979
    2. ' analysis' → logprob: -2.176929473876953
    3. ' description' → logprob: -2.426929473876953
    4. 'statement' → logprob: -2.801929473876953
    5. 'analysis' → logprob: -3.801929473876953
    6. 'description' → logprob: -4.426929473876953
    7. ':' → logprob: -5.176929473876953
    8. '#' → logprob: -5.176929473876953
    9. '_description' → logprob: -5.301929473876953
    10. '=' → logprob: -5.426929473876953

Token 301: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3714440166950226
    2. ':' → logprob: -1.3714439868927002
    3. ' p' → logprob: -3.3714439868927
    4. ',' → logprob: -5.121444225311279
    5. '   ' → logprob: -5.121444225311279
    6. ':
' → logprob: -5.121444225311279
    7. ' =' → logprob: -6.496444225311279
    8. 'p' → logprob: -7.746444225311279
    9. '           ' → logprob: -7.871444225311279
    10. ':

' → logprob: -8.371443748474121

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05960247293114662
    2. ' p' → logprob: -2.9346024990081787
    3. 'p' → logprob: -5.4346022605896
    4. ' if' → logprob: -9.184602737426758
    5. '   ' → logprob: -9.809602737426758
    6. '        ' → logprob: -10.184602737426758
    7. '```' → logprob: -10.934602737426758
    8. '      ' → logprob: -11.059602737426758
    9. '           ' → logprob: -11.184602737426758
    10. 'if' → logprob: -11.184602737426758

Token 303: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6640522480010986
    2. 'p' → logprob: -0.7890522480010986
    3. '       ' → logprob: -4.1640520095825195
    4. ' numerator' → logprob: -4.5390520095825195
    5. 'numer' → logprob: -6.7890520095825195
    6. 'prob' → logprob: -6.9140520095825195
    7. ' if' → logprob: -7.5390520095825195
    8. '#' (adapté à ' #') → logprob: -8.03905200958252
    9. 'if' → logprob: -8.16405200958252
    10. 'num' → logprob: -8.53905200958252

Token 304: ' Probability' (ID: 194171)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19206802546977997
    2. ' p' → logprob: -2.192068099975586
    3. 'prob' → logprob: -3.692068099975586
    4. ' numerator' → logprob: -3.942068099975586
    5. 'numer' → logprob: -5.192068099975586
    6. 'num' → logprob: -5.817068099975586
    7. 'success' → logprob: -6.067068099975586
    8. '       ' → logprob: -6.067068099975586
    9. '#' → logprob: -6.942068099975586
    10. ' success' → logprob: -7.067068099975586

Token 305: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2719530165195465
    2. '=' → logprob: -1.6469529867172241
    3. '_success' → logprob: -3.3969531059265137
    4. '(' → logprob: -5.521953105926514
    5. 'success' → logprob: -5.896953105926514
    6. '(success' → logprob: -6.521953105926514
    7. '_' → logprob: -6.521953105926514
    8. ' of' → logprob: -6.896953105926514
    9. ' success' → logprob: -7.646953105926514
    10. '_of' → logprob: -8.521952629089355

Token 306: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.2672287225723267
    2. ' the' → logprob: -1.8922287225723267
    3. 'success' → logprob: -1.8922287225723267
    4. 'the' → logprob: -1.8922287225723267
    5. 'all' → logprob: -2.642228603363037
    6. ' k' → logprob: -3.267228603363037
    7. ' success' → logprob: -3.642228603363037
    8. 'k' → logprob: -3.892228603363037
    9. ' p' → logprob: -3.892228603363037
    10. 'r' → logprob: -4.142228603363037

Token 307: ' game' (ID: 2813)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.2256135940551758
    2. 'next' → logprob: -1.8506135940551758
    3. ' chain' → logprob: -2.100613594055176
    4. ' next' → logprob: -2.350613594055176
    5. 'k' → logprob: -2.475613594055176
    6. 'first' → logprob: -2.725613594055176
    7. ' k' → logprob: -3.350613594055176
    8. ' first' → logprob: -3.600613594055176
    9. 'rest' → logprob: -4.100613594055176
    10. 'success' → logprob: -4.100613594055176

Token 308: ' succeeds' (ID: 110559)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.048952579498291
    2. ' is' → logprob: -1.548952579498291
    3. ' succeeds' → logprob: -2.048952579498291
    4. ' continues' → logprob: -2.923952579498291
    5. '_s' → logprob: -3.048952579498291
    6. ' ends' → logprob: -3.673952579498291
    7. 'fails' → logprob: -3.673952579498291
    8. 'is' → logprob: -3.923952579498291
    9. '=' → logprob: -3.923952579498291
    10. ' fails' → logprob: -4.173952579498291

Token 309: ' without' (ID: 2935)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.359456330537796
    2. '=' → logprob: -1.2344563007354736
    3. ' is' → logprob: -4.859456539154053
    4. ' at' → logprob: -6.984456539154053
    5. 'is' → logprob: -7.359456539154053
    6. 'without' → logprob: -7.734456539154053
    7. ' without' → logprob: -8.109456062316895
    8. ' with' → logprob: -8.234456062316895
    9. 'with' → logprob: -8.359456062316895
    10. ' p' → logprob: -9.859456062316895

Token 310: ' restart' (ID: 33437)
  Prédit: 'restart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'restart' → logprob: -0.09515126794576645
    2. ' restart' → logprob: -2.47015118598938
    3. 'r' → logprob: -6.345151424407959
    4. 'fail' → logprob: -6.720151424407959
    5. 'rest' → logprob: -6.720151424407959
    6. ' rest' → logprob: -7.470151424407959
    7. 'failure' → logprob: -7.970151424407959
    8. ' failure' → logprob: -8.2201509475708
    9. 'reset' → logprob: -8.7201509475708
    10. 're' → logprob: -8.7201509475708

Token 311: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044992201030254364
    2. '=' → logprob: -3.169992208480835
    3. ' is' → logprob: -6.544991970062256
    4. ' p' → logprob: -8.044992446899414
    5. ')' → logprob: -9.419992446899414
    6. ' ' → logprob: -10.544992446899414
    7. '=p' → logprob: -10.544992446899414
    8. 'p' → logprob: -10.669992446899414
    9. ',' → logprob: -11.169992446899414
    10. '   ' → logprob: -11.544992446899414

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5474692583084106
    2. ' p' → logprob: -2.047469139099121
    3. ' Fraction' → logprob: -2.047469139099121
    4. ' (' → logprob: -2.922469139099121
    5. ' =' → logprob: -3.297469139099121
    6. '        ' → logprob: -4.172469139099121
    7. 'Fraction' → logprob: -4.297469139099121
    8. '    ' → logprob: -4.797469139099121
    9. '```' → logprob: -4.797469139099121
    10. '   ' → logprob: -5.297469139099121

Token 313: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7739112973213196
    2. 'p' → logprob: -1.2739112377166748
    3. 'Fraction' → logprob: -2.148911237716675
    4. ' Fraction' → logprob: -2.648911237716675
    5. ' (' → logprob: -4.023911476135254
    6. ' k' → logprob: -4.398911476135254
    7. '   ' → logprob: -4.523911476135254
    8. 'pow' → logprob: -4.773911476135254
    9. 'k' → logprob: -5.023911476135254
    10. '(' → logprob: -5.648911476135254

Token 314: ' p' (ID: 275)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.2991791069507599
    2. ' Fraction' → logprob: -2.1741790771484375
    3. 'p' → logprob: -3.4241790771484375
    4. ' (' → logprob: -3.7991790771484375
    5. 'pow' → logprob: -3.9241790771484375
    6. '(' → logprob: -4.4241790771484375
    7. ' p' → logprob: -4.5491790771484375
    8. 'k' → logprob: -4.5491790771484375
    9. '(k' → logprob: -4.6741790771484375
    10. '   ' → logprob: -4.6741790771484375

Token 315: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9613869190216064
    2. '_success' → logprob: -1.4613869190216064
    3. '_fail' → logprob: -1.7113869190216064
    4. '_s' → logprob: -2.0863869190216064
    5. '=' → logprob: -3.0863869190216064
    6. '_' → logprob: -3.4613869190216064
    7. 's' → logprob: -6.836386680603027
    8. '_no' → logprob: -7.211386680603027
    9. ' _' → logprob: -8.086386680603027
    10. 'success' → logprob: -8.086386680603027

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016038591042160988
    2. '=' → logprob: -4.141038417816162
    3. ')' → logprob: -13.39103889465332
    4. ' ' → logprob: -13.89103889465332
    5. ',' → logprob: -14.39103889465332
    6. 's' → logprob: -15.76603889465332
    7. '_' → logprob: -15.76603889465332
    8. ' =(' → logprob: -16.14103889465332
    9. '_fail' → logprob: -16.26603889465332
    10. '```' → logprob: -16.39103889465332

Token 317: ' k' (ID: 372)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.012607370503246784
    2. 'k' → logprob: -5.262607574462891
    3. ' Fraction' → logprob: -5.387607574462891
    4. '(F' → logprob: -6.637607574462891
    5. '(k' → logprob: -6.887607574462891
    6. '(' → logprob: -9.01260757446289
    7. '(n' → logprob: -9.38760757446289
    8. 'pow' → logprob: -9.63760757446289
    9. ' (' → logprob: -10.01260757446289
    10. ' k' → logprob: -10.01260757446289

Token 318: '^' (ID: 61)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1367565393447876
    2. ' /' → logprob: -2.886756420135498
    3. '*' → logprob: -3.136756420135498
    4. '/n' → logprob: -4.136756420135498
    5. '/' → logprob: -4.386756420135498
    6. '*(' → logprob: -10.011756896972656
    7. '*n' → logprob: -10.136756896972656
    8. ',' → logprob: -10.636756896972656
    9. '/k' → logprob: -11.011756896972656
    10. '**' → logprob: -11.261756896972656

Token 319: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12673373520374298
    2. '(-' → logprob: -2.8767337799072266
    3. '1' → logprob: -4.001733779907227
    4. '-' → logprob: -4.126733779907227
    5. 'n' → logprob: -4.376733779907227
    6. '-k' → logprob: -5.376733779907227
    7. '-n' → logprob: -5.626733779907227
    8. '2' → logprob: -6.001733779907227
    9. '(' → logprob: -6.126733779907227
    10. '-F' → logprob: -7.126733779907227

Token 320: ' /' (ID: 820)
  Prédit: '/n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/n' → logprob: -1.0657023191452026
    2. '**' → logprob: -1.4407023191452026
    3. ' /' → logprob: -1.8157023191452026
    4. ' **' → logprob: -2.065702438354492
    5. ' *' → logprob: -2.815702438354492
    6. ')' → logprob: -3.440702438354492
    7. '-' → logprob: -5.190702438354492
    8. '/' → logprob: -5.190702438354492
    9. ' -' → logprob: -5.190702438354492
    10. '*' → logprob: -5.815702438354492

Token 321: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5636070966720581
    2. '(n' → logprob: -0.9386070966720581
    3. 'pow' → logprob: -4.188607215881348
    4. 'Fraction' → logprob: -4.563607215881348
    5. ' n' → logprob: -5.438607215881348
    6. ' (' → logprob: -5.688607215881348
    7. '(' → logprob: -6.063607215881348
    8. '(pow' → logprob: -7.188607215881348
    9. 'math' → logprob: -7.313607215881348
    10. '(F' → logprob: -7.313607215881348

Token 322: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010279636830091476
    2. '(n' → logprob: -4.760279655456543
    3. ' n' → logprob: -6.635279655456543
    4. '(' → logprob: -8.510279655456543
    5. 'Fraction' → logprob: -10.135279655456543
    6. ' (' → logprob: -10.260279655456543
    7. 'pow' → logprob: -10.760279655456543
    8. 'math' → logprob: -11.635279655456543
    9. ')n' → logprob: -11.885279655456543
    10. '(math' → logprob: -12.260279655456543

Token 323: '^(' (ID: 32612)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.07080131024122238
    2. '^' → logprob: -2.695801258087158
    3. ' **' → logprob: -7.570801258087158
    4. ')' → logprob: -8.320801734924316
    5. '^{' → logprob: -10.195801734924316
    6. ')**' → logprob: -10.820801734924316
    7. '**)' → logprob: -11.195801734924316
    8. '^)' → logprob: -11.695801734924316
    9. ')^' → logprob: -11.820801734924316
    10. '```' → logprob: -12.070801734924316

Token 324: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2674664855003357
    2. '(n' → logprob: -2.1424665451049805
    3. '(k' → logprob: -2.8924665451049805
    4. 'n' → logprob: -3.3924665451049805
    5. '(' → logprob: -3.8924665451049805
    6. 'nk' → logprob: -5.5174665451049805
    7. ' (' → logprob: -6.1424665451049805
    8. ')' → logprob: -7.8924665451049805
    9. ' k' → logprob: -8.14246654510498
    10. 'kn' → logprob: -8.39246654510498

Token 325: '*n' (ID: 58470)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21863919496536255
    2. ')' → logprob: -2.3436391353607178
    3. '*n' → logprob: -2.5936391353607178
    4. '*' → logprob: -4.718639373779297
    5. '**' → logprob: -4.843639373779297
    6. ' n' → logprob: -5.343639373779297
    7. ')n' → logprob: -6.718639373779297
    8. 'k' → logprob: -7.718639373779297
    9. '))' → logprob: -7.843639373779297
    10. ' )' → logprob: -7.843639373779297

Token 326: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4290718734264374
    2. '))' → logprob: -1.0540719032287598
    3. ' )' → logprob: -9.054071426391602
    4. '*' → logprob: -10.304071426391602
    5. '**' → logprob: -10.304071426391602
    6. ')
' → logprob: -10.429071426391602
    7. ' ))' → logprob: -10.429071426391602
    8. ')))' → logprob: -10.804071426391602
    9. ')*' → logprob: -10.804071426391602
    10. '))*' → logprob: -10.929071426391602

Token 327: ' ??' (ID: 16605)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7224692106246948
    2. ')' → logprob: -0.8474692106246948
    3. '
' → logprob: -2.8474693298339844
    4. '   ' → logprob: -4.847469329833984
    5. ')
' → logprob: -5.097469329833984
    6. '<|end|>' → logprob: -5.597469329833984
    7. ' **' → logprob: -6.472469329833984
    8. ' ' → logprob: -7.222469329833984
    9. ')**' → logprob: -7.222469329833984
    10. '.' → logprob: -7.347469329833984

Token 328: ' But' (ID: 3072)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22462494671344757
    2. '<|end|>' → logprob: -2.2246248722076416
    3. '
' → logprob: -2.8496248722076416
    4. '[' → logprob: -4.724625110626221
    5. '#' → logprob: -5.349625110626221
    6. '<|end|>' → logprob: -6.099625110626221
    7. '^' → logprob: -6.349625110626221
    8. ']' → logprob: -6.349625110626221
    9. '_' → logprob: -6.599625110626221
    10. ')
' → logprob: -6.599625110626221

Token 329: ' this' (ID: 495)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0938546285033226
    2. ' n' → logprob: -3.4688546657562256
    3. '<|end|>' → logprob: -4.8438544273376465
    4. '(' → logprob: -4.9688544273376465
    5. 'n' → logprob: -5.0938544273376465
    6. ' (' → logprob: -5.3438544273376465
    7. ')' → logprob: -5.3438544273376465
    8. ''' → logprob: -5.5938544273376465
    9. ' p' → logprob: -5.5938544273376465
    10. '    ' → logprob: -6.5938544273376465

Token 330: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5824581384658813
    2. ')' → logprob: -1.0824581384658813
    3. '<|end|>' → logprob: -3.332458019256592
    4. ' continues' → logprob: -4.957458019256592
    5. ' ' → logprob: -5.082458019256592
    6. ' isn't' → logprob: -5.332458019256592
    7. ' **' → logprob: -5.332458019256592
    8. ' )' → logprob: -5.707458019256592
    9. '=' → logprob: -5.707458019256592
    10. ':' → logprob: -5.957458019256592

Token 331: ' complex' (ID: 8012)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.7312297821044922
    2. ' not' → logprob: -1.3562297821044922
    3. 'False' → logprob: -1.9812297821044922
    4. ' Fraction' → logprob: -3.356229782104492
    5. 'n' → logprob: -3.606229782104492
    6. 'Fraction' → logprob: -4.731229782104492
    7. ' ' → logprob: -4.856229782104492
    8. ' false' → logprob: -4.856229782104492
    9. ' n' → logprob: -4.856229782104492
    10. ')' → logprob: -5.106229782104492

Token 332: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28153112530708313
    2. ')' → logprob: -2.1565310955047607
    3. '   ' → logprob: -2.9065310955047607
    4. ' ' → logprob: -3.4065310955047607
    5. '    ' → logprob: -4.28153133392334
    6. ' )' → logprob: -4.40653133392334
    7. ' 
' → logprob: -5.78153133392334
    8. '        ' → logprob: -6.15653133392334
    9. '(' → logprob: -6.65653133392334
    10. ' p' → logprob: -6.65653133392334

Token 334: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09864074736833572
    2. ' p' → logprob: -2.5986406803131104
    3. 'p' → logprob: -4.2236409187316895
    4. '   ' → logprob: -6.0986409187316895
    5. ' 
' → logprob: -6.9736409187316895
    6. '        
' → logprob: -7.5986409187316895
    7. '        ' → logprob: -7.7236409187316895
    8. '           ' → logprob: -8.848640441894531
    9. '    ' → logprob: -8.973640441894531
    10. ' ' → logprob: -9.473640441894531

Token 335: ' Instead' (ID: 21050)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.024943141266703606
    2. ' p' → logprob: -3.8999431133270264
    3. '#' → logprob: -5.6499433517456055
    4. '       ' → logprob: -7.7749433517456055
    5. 'return' → logprob: -8.774943351745605
    6. ' #' → logprob: -9.149943351745605
    7. 'n' → logprob: -9.774943351745605
    8. '   ' → logprob: -10.524943351745605
    9. 'result' → logprob: -10.774943351745605
    10. 'pass' → logprob: -10.774943351745605

Token 336: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18845227360725403
    2. ' p' → logprob: -2.4384522438049316
    3. ':' → logprob: -2.8134522438049316
    4. ',' → logprob: -4.438452243804932
    5. 'p' → logprob: -4.813452243804932
    6. ' we' → logprob: -6.438452243804932
    7. 'we' → logprob: -7.188452243804932
    8. '        ' → logprob: -7.313452243804932
    9. '        
' → logprob: -8.06345272064209
    10. ':
' → logprob: -8.43845272064209

Token 337: ' note' (ID: 7477)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5785561203956604
    2. 'p' → logprob: -0.8285561203956604
    3. '       ' → logprob: -6.703556060791016
    4. '#' → logprob: -6.828556060791016
    5. ' #' → logprob: -8.828556060791016
    6. '   ' → logprob: -10.578556060791016
    7. ' n' → logprob: -10.578556060791016
    8. 'return' → logprob: -11.203556060791016
    9. '        ' → logprob: -11.328556060791016
    10. 'n' → logprob: -11.328556060791016

Token 338: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9116305708885193
    2. ' that' → logprob: -1.411630630493164
    3. ' =' → logprob: -2.036630630493164
    4. '(' → logprob: -3.411630630493164
    5. '=' → logprob: -3.661630630493164
    6. ' (' → logprob: -3.786630630493164
    7. '   ' → logprob: -3.911630630493164
    8. ' p' → logprob: -3.911630630493164
    9. '_' → logprob: -4.161630630493164
    10. '        ' → logprob: -4.161630630493164

Token 339: ' cards' (ID: 10541)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7175653576850891
    2. ' k' → logprob: -1.2175652980804443
    3. 'p' → logprob: -2.3425652980804443
    4. 'k' → logprob: -2.7175652980804443
    5. ' n' → logprob: -3.3425652980804443
    6. 'n' → logprob: -4.467565536499023
    7. ' r' → logprob: -6.967565536499023
    8. '(' → logprob: -6.967565536499023
    9. 'r' → logprob: -7.092565536499023
    10. ' ' → logprob: -7.217565536499023

Token 340: ' are' (ID: 553)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7354180216789246
    2. ' are' → logprob: -1.1104180812835693
    3. '1' → logprob: -2.4854180812835693
    4. '_' → logprob: -3.4854180812835693
    5. ' =' → logprob: -4.11041784286499
    6. '[' → logprob: -4.98541784286499
    7. '  ' → logprob: -4.98541784286499
    8. '<|end|>' → logprob: -5.23541784286499
    9. ',' → logprob: -5.61041784286499
    10. 's' → logprob: -5.61041784286499

Token 341: ' shuffled' (ID: 163424)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'draw' → logprob: -1.1804261207580566
    2. ' placed' → logprob: -1.6804261207580566
    3. ' drawn' → logprob: -1.8054261207580566
    4. 'distributed' → logprob: -2.5554261207580566
    5. 'placed' → logprob: -3.0554261207580566
    6. ' distributed' → logprob: -3.0554261207580566
    7. 'ind' → logprob: -3.6804261207580566
    8. ' dealt' → logprob: -3.8054261207580566
    9. ' independent' → logprob: -3.9304261207580566
    10. ' not' → logprob: -4.555426120758057

Token 342: ' randomly' (ID: 50104)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5576655864715576
    2. ' and' → logprob: -1.9326655864715576
    3. ' ' → logprob: -2.5576655864715576
    4. ' ,' → logprob: -2.9326655864715576
    5. ')' → logprob: -3.5576655864715576
    6. '_' → logprob: -3.8076655864715576
    7. ' randomly' → logprob: -3.9326655864715576
    8. '   ' → logprob: -4.432665824890137
    9. ' )' → logprob: -4.557665824890137
    10. '    ' → logprob: -4.682665824890137

Token 343: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23072539269924164
    2. '<|end|>' → logprob: -2.2307252883911133
    3. ' and' → logprob: -3.1057252883911133
    4. ' ,' → logprob: -4.230725288391113
    5. ')' → logprob: -4.355725288391113
    6. '.' → logprob: -4.480725288391113
    7. ' ' → logprob: -5.355725288391113
    8. '<|end|>' → logprob: -5.980725288391113
    9. ' )' → logprob: -6.480725288391113
    10. ',
' → logprob: -6.980725288391113

Token 344: ' independently' (ID: 38341)
  Prédit: ' placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.6978561878204346
    2. ' each' → logprob: -1.8228561878204346
    3. 'each' → logprob: -2.4478561878204346
    4. ' the' → logprob: -2.8228561878204346
    5. ' distributed' → logprob: -2.8228561878204346
    6. ' all' → logprob: -3.1978561878204346
    7. 'placed' → logprob: -4.0728559494018555
    8. ' drawn' → logprob: -4.3228559494018555
    9. 'distributed' → logprob: -4.5728559494018555
    10. 'all' → logprob: -4.9478559494018555

Token 345: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22154386341571808
    2. ',' → logprob: -3.346543788909912
    3. ' p' → logprob: -3.346543788909912
    4. '   ' → logprob: -3.596543788909912
    5. ')' → logprob: -3.721543788909912
    6. ' 
' → logprob: -4.221543788909912
    7. '       ' → logprob: -4.596543788909912
    8. '    ' → logprob: -4.846543788909912
    9. '<|end|>' → logprob: -4.971543788909912
    10. ''' → logprob: -5.596543788909912

Token 347: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13943733274936676
    2. ' p' → logprob: -2.764437437057495
    3. ' ' → logprob: -3.139437437057495
    4. '        ' → logprob: -5.389437198638916
    5. ' n' → logprob: -5.389437198638916
    6. 'p' → logprob: -5.514437198638916
    7. '   ' → logprob: -6.139437198638916
    8. 'n' → logprob: -6.264437198638916
    9. ')' → logprob: -6.639437198638916
    10. '    ' → logprob: -6.889437198638916

Token 348: ' The' (ID: 623)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.24681861698627472
    2. 'p' → logprob: -2.3718185424804688
    3. '       ' → logprob: -2.4968185424804688
    4. '   ' → logprob: -3.7468185424804688
    5. ')' → logprob: -5.371818542480469
    6. ' n' → logprob: -5.371818542480469
    7. '    ' → logprob: -6.621818542480469
    8. 'n' → logprob: -6.621818542480469
    9. ' #' → logprob: -6.746818542480469
    10. ' ' → logprob: -6.746818542480469

Token 349: ' probability' (ID: 34933)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6903485655784607
    2. 'p' → logprob: -1.9403486251831055
    3. ' next' → logprob: -1.9403486251831055
    4. ')' → logprob: -3.8153486251831055
    5. ' rest' → logprob: -3.8153486251831055
    6. ' #' → logprob: -3.8153486251831055
    7. '#' → logprob: -3.9403486251831055
    8. ' ' → logprob: -4.1903486251831055
    9. ' probability' → logprob: -4.3153486251831055
    10. ' =' → logprob: -4.5653486251831055

Token 350: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0175566673278809
    2. ' ' → logprob: -1.3925566673278809
    3. ' that' → logprob: -1.6425566673278809
    4. '=' → logprob: -2.267556667327881
    5. ' of' → logprob: -3.017556667327881
    6. ' )' → logprob: -4.517556667327881
    7. ' is' → logprob: -5.267556667327881
    8. ' space' → logprob: -5.392556667327881
    9. ')' → logprob: -6.017556667327881
    10. ' +=' → logprob: -6.017556667327881

Token 351: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.27602845430374146
    2. 'all' → logprob: -2.2760283946990967
    3. ' the' → logprob: -2.7760283946990967
    4. 'the' → logprob: -3.2760283946990967
    5. ' next' → logprob: -4.401028633117676
    6. 'each' → logprob: -5.401028633117676
    7. ' each' → logprob: -5.776028633117676
    8. 'next' → logprob: -5.776028633117676
    9. ' card' → logprob: -5.901028633117676
    10. ' ' → logprob: -5.901028633117676

Token 352: ' first' (ID: 1577)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3423856198787689
    2. 'next' → logprob: -2.0923855304718018
    3. ' first' → logprob: -2.8423855304718018
    4. ' chain' → logprob: -2.9673855304718018
    5. 'first' → logprob: -3.7173855304718018
    6. ' k' → logprob: -4.842385768890381
    7. 'chain' → logprob: -4.842385768890381
    8. 'k' → logprob: -5.342385768890381
    9. ' ' → logprob: -6.217385768890381
    10. ' cards' → logprob: -6.592385768890381

Token 353: ' draw' (ID: 6174)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -1.0092415809631348
    2. ' ' → logprob: -1.7592415809631348
    3. ' k' → logprob: -2.0092415809631348
    4. '_' → logprob: -2.6342415809631348
    5. ' token' → logprob: -3.2592415809631348
    6. ' draw' → logprob: -3.2592415809631348
    7. ' set' → logprob: -3.2592415809631348
    8. ' mountain' → logprob: -3.5092415809631348
    9. ' space' → logprob: -4.134241580963135
    10. ' _' → logprob: -4.134241580963135

Token 354: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6320688128471375
    2. ' is' → logprob: -1.5070688724517822
    3. '<|end|>' → logprob: -3.1320688724517822
    4. ' ==' → logprob: -3.2570688724517822
    5. ' )' → logprob: -3.5070688724517822
    6. '[' → logprob: -3.6320688724517822
    7. ')' → logprob: -3.6320688724517822
    8. 's' → logprob: -4.382068634033203
    9. '  ' → logprob: -4.507068634033203
    10. ',' → logprob: -5.132068634033203

Token 355: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7314853072166443
    2. ' not' → logprob: -1.856485366821289
    3. ' all' → logprob: -2.606485366821289
    4. '1' → logprob: -2.981485366821289
    5. ' the' → logprob: -2.981485366821289
    6. 'not' → logprob: -3.231485366821289
    7. ' exactly' → logprob: -3.356485366821289
    8. ' mountain' → logprob: -3.481485366821289
    9. ' n' → logprob: -4.356485366821289
    10. 'all' → logprob: -4.356485366821289

Token 356: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0461825132369995
    2. ' not' → logprob: -1.5461825132369995
    3. 'not' → logprob: -2.171182632446289
    4. '1' → logprob: -2.421182632446289
    5. ' the' → logprob: -2.921182632446289
    6. 'the' → logprob: -3.546182632446289
    7. ' mountain' → logprob: -4.046182632446289
    8. ' a' → logprob: -4.171182632446289
    9. 'from' → logprob: -4.296182632446289
    10. ' k' → logprob: -4.671182632446289

Token 357: ' is' (ID: 382)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -1.0383249521255493
    2. ')' → logprob: -1.7883249521255493
    3. '/n' → logprob: -2.0383248329162598
    4. ' )' → logprob: -2.2883248329162598
    5. ',' → logprob: -2.6633248329162598
    6. '<|end|>' → logprob: -2.7883248329162598
    7. ' is' → logprob: -3.0383248329162598
    8. '/' → logprob: -3.9133248329162598
    9. ' ,' → logprob: -4.16332483291626
    10. ' ' → logprob: -5.41332483291626

Token 358: ' k' (ID: 372)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.4607482850551605
    2. 'Fraction' → logprob: -1.710748314857483
    3. ' k' → logprob: -1.960748314857483
    4. 'k' → logprob: -4.210748195648193
    5. ' (' → logprob: -4.335748195648193
    6. ' ' → logprob: -4.710748195648193
    7. '1' → logprob: -5.085748195648193
    8. '(' → logprob: -6.835748195648193
    9. ' n' → logprob: -6.960748195648193
    10. '(k' → logprob: -7.710748195648193

Token 359: '/n' (ID: 18292)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.555478572845459
    2. '/' → logprob: -1.055478572845459
    3. '/n' → logprob: -2.555478572845459
    4. ' ' → logprob: -9.180479049682617
    5. ' /
' → logprob: -9.430479049682617
    6. '**' → logprob: -9.555479049682617
    7. '/k' → logprob: -9.680479049682617
    8. '/
' → logprob: -10.305479049682617
    9. ' **' → logprob: -10.430479049682617
    10. '^' → logprob: -10.430479049682617

Token 360: 'k' (ID: 74)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5798371434211731
    2. '**' → logprob: -1.3298370838165283
    3. '<|end|>' → logprob: -1.9548370838165283
    4. ',' → logprob: -4.204837322235107
    5. '
' → logprob: -4.829837322235107
    6. '),' → logprob: -5.954837322235107
    7. '#' → logprob: -6.329837322235107
    8. '^' → logprob: -6.579837322235107
    9. ')
' → logprob: -7.204837322235107
    10. '```' → logprob: -7.329837322235107

Token 361: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6051838994026184
    2. '**' → logprob: -0.8551838994026184
    3. '^' → logprob: -4.605184078216553
    4. '<|end|>' → logprob: -4.855184078216553
    5. '
' → logprob: -5.730184078216553
    6. '_' → logprob: -6.480184078216553
    7. ',' → logprob: -6.480184078216553
    8. ' **' → logprob: -7.105184078216553
    9. '#' → logprob: -7.355184078216553
    10. ' )' → logprob: -7.480184078216553

Token 362: ' ' (ID: 220)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.8979682326316833
    2. '1' → logprob: -1.1479682922363281
    3. ' Fraction' → logprob: -2.397968292236328
    4. ' k' → logprob: -2.522968292236328
    5. 'k' → logprob: -2.897968292236328
    6. ' ' → logprob: -3.147968292236328
    7. '0' → logprob: -5.647968292236328
    8. '(' → logprob: -7.022968292236328
    9. '(k' → logprob: -7.397968292236328
    10. ' (' → logprob: -7.772968292236328

Token 363: '1' (ID: 16)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.5401071906089783
    2. 'k' → logprob: -1.665107250213623
    3. ' Fraction' → logprob: -2.165107250213623
    4. ' k' → logprob: -2.790107250213623
    5. '1' → logprob: -3.165107250213623
    6. ' ' → logprob: -5.165107250213623
    7. '(' → logprob: -6.790107250213623
    8. '(k' → logprob: -6.915107250213623
    9. '0' → logprob: -7.290107250213623
    10. ' (' → logprob: -7.665107250213623

Token 364: '/n' (ID: 18292)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.09399375319480896
    2. ')' → logprob: -2.968993663787842
    3. '^' → logprob: -4.093993663787842
    4. '/' → logprob: -4.968993663787842
    5. ' **' → logprob: -5.468993663787842
    6. '/n' → logprob: -5.593993663787842
    7. ' /' → logprob: -6.718993663787842
    8. ',' → logprob: -6.968993663787842
    9. '#' → logprob: -7.093993663787842
    10. '
' → logprob: -7.343993663787842

Token 365: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: 'pick' (ID: 46093)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009345895610749722
    2. ' )' → logprob: -4.759346008300781
    3. ')
' → logprob: -7.759346008300781
    4. '
' → logprob: -9.009346008300781
    5. ',' → logprob: -9.759346008300781
    6. '),' → logprob: -10.759346008300781
    7. ' )
' → logprob: -11.134346008300781
    8. ')n' → logprob: -11.134346008300781
    9. ').' → logprob: -11.509346008300781
    10. '#' → logprob: -11.634346008300781

Token 367: ' one' (ID: 1001)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.39809921383857727
    2. ')' → logprob: -1.7730991840362549
    3. ' a' → logprob: -2.648099184036255
    4. ' ' → logprob: -3.273099184036255
    5. ' the' → logprob: -4.523099422454834
    6. '1' → logprob: -4.648099422454834
    7. ' k' → logprob: -4.648099422454834
    8. ' space' → logprob: -6.273099422454834
    9. ' first' → logprob: -6.273099422454834
    10. '[' → logprob: -6.398099422454834

Token 368: ' card' (ID: 4766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3317682445049286
    2. ' )' → logprob: -1.331768274307251
    3. '/' → logprob: -5.206768035888672
    4. ' of' → logprob: -6.206768035888672
    5. ' /' → logprob: -6.331768035888672
    6. ' ' → logprob: -6.456768035888672
    7. '_' → logprob: -6.581768035888672
    8. '/n' → logprob: -6.581768035888672
    9. ' card' → logprob: -6.956768035888672
    10. '/k' → logprob: -8.081768035888672

Token 369: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13908937573432922
    2. ' at' → logprob: -3.264089345932007
    3. ' from' → logprob: -3.389089345932007
    4. ' )' → logprob: -3.639089345932007
    5. '<|end|>' → logprob: -4.764089584350586
    6. 'from' → logprob: -5.014089584350586
    7. ' in' → logprob: -5.014089584350586
    8. ' out' → logprob: -6.264089584350586
    9. '),' → logprob: -6.639089584350586
    10. ' first' → logprob: -6.764089584350586

Token 370: ' number' (ID: 2086)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.11134106665849686
    2. 'number' → logprob: -2.9863409996032715
    3. ' value' → logprob: -3.4863409996032715
    4. 'rank' → logprob: -4.2363409996032715
    5. 'face' → logprob: -5.8613409996032715
    6. 'label' → logprob: -6.8613409996032715
    7. ' number' → logprob: -6.9863409996032715
    8. 'prob' → logprob: -7.2363409996032715
    9. ' rank' → logprob: -7.6113409996032715
    10. 'k' → logprob: -7.7363409996032715

Token 371: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5775985717773438
    2. '1' → logprob: -0.8275985717773438
    3. '=' → logprob: -7.202598571777344
    4. ')' → logprob: -8.952598571777344
    5. ' '' → logprob: -8.952598571777344
    6. ' from' → logprob: -9.577598571777344
    7. ' k' → logprob: -9.577598571777344
    8. 'from' → logprob: -9.702598571777344
    9. ' "' → logprob: -10.202598571777344
    10. '`' → logprob: -10.202598571777344

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03414525091648102
    2. ' ' → logprob: -3.4091453552246094
    3. ''' → logprob: -8.15914535522461
    4. '`' → logprob: -9.53414535522461
    5. '"' → logprob: -9.65914535522461
    6. ' one' → logprob: -11.03414535522461
    7. ' '' → logprob: -11.28414535522461
    8. 'from' → logprob: -11.90914535522461
    9. '  ' → logprob: -12.15914535522461
    10. ')' → logprob: -12.15914535522461

Token 373: ' among' (ID: 6200)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02080310322344303
    2. ' )' → logprob: -3.895803213119507
    3. ')
' → logprob: -9.145803451538086
    4. '),' → logprob: -10.270803451538086
    5. ',' → logprob: -10.895803451538086
    6. '   ' → logprob: -11.520803451538086
    7. '`)' → logprob: -11.645803451538086
    8. '1' → logprob: -11.770803451538086
    9. ' )
' → logprob: -11.770803451538086
    10. ' from' → logprob: -11.895803451538086

Token 374: ' kn' (ID: 1313)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.0541833639144897
    2. ' nk' → logprob: -1.1791833639144897
    3. 'nk' → logprob: -2.0541834831237793
    4. ' n' → logprob: -2.9291834831237793
    5. 'all' → logprob: -3.1791834831237793
    6. 'k' → logprob: -3.3041834831237793
    7. ' k' → logprob: -3.5541834831237793
    8. 'n' → logprob: -3.6791834831237793
    9. ' the' → logprob: -4.179183483123779
    10. 'kn' → logprob: -4.929183483123779

Token 375: ' cards' (ID: 10541)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06148073077201843
    2. ' )' → logprob: -3.186480760574341
    3. 'cards' → logprob: -4.686480522155762
    4. ' cards' → logprob: -5.436480522155762
    5. 'k' → logprob: -5.686480522155762
    6. 's' → logprob: -8.436480522155762
    7. ')^' → logprob: -8.436480522155762
    8. '),' → logprob: -8.561480522155762
    9. ').' → logprob: -9.186480522155762
    10. ')**' → logprob: -9.436480522155762

Token 376: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023760391399264336
    2. ' )' → logprob: -3.7737603187561035
    3. ')
' → logprob: -8.523760795593262
    4. ',' → logprob: -9.648760795593262
    5. '   ' → logprob: -9.648760795593262
    6. '.' → logprob: -10.398760795593262
    7. '
' → logprob: -10.523760795593262
    8. ' ' → logprob: -10.648760795593262
    9. ' )
' → logprob: -10.773760795593262
    10. '       ' → logprob: -11.148760795593262

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0701223835349083
    2. ' and' → logprob: -4.070122241973877
    3. ' ' → logprob: -4.195122241973877
    4. ')' → logprob: -4.820122241973877
    5. ' then' → logprob: -5.195122241973877
    6. ' but' → logprob: -5.445122241973877
    7. '#' → logprob: -5.820122241973877
    8. '   ' → logprob: -5.945122241973877
    9. '        ' → logprob: -6.320122241973877
    10. '    ' → logprob: -6.695122241973877

Token 378: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07397521287202835
    2. ' and' → logprob: -3.8239753246307373
    3. ' then' → logprob: -3.9489753246307373
    4. ' but' → logprob: -4.573975086212158
    5. 'and' → logprob: -5.323975086212158
    6. ' ' → logprob: -5.948975086212158
    7. '   ' → logprob: -6.073975086212158
    8. ')' → logprob: -6.323975086212158
    9. ' so' → logprob: -6.323975086212158
    10. 'but' → logprob: -6.573975086212158

Token 379: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32722729444503784
    2. ' then' → logprob: -2.7022273540496826
    3. ' ' → logprob: -2.9522273540496826
    4. ' and' → logprob: -3.2022273540496826
    5. ' p' → logprob: -3.2022273540496826
    6. ')' → logprob: -4.5772271156311035
    7. '#' → logprob: -4.8272271156311035
    8. '...' → logprob: -4.9522271156311035
    9. ' but' → logprob: -5.0772271156311035
    10. '        ' → logprob: -5.0772271156311035

Token 380: ' it's' (ID: 4275)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2795332372188568
    2. 'the' → logprob: -2.1545331478118896
    3. ' p' → logprob: -3.4045331478118896
    4. ' then' → logprob: -4.404533386230469
    5. ' let's' → logprob: -4.404533386230469
    6. ' we' → logprob: -4.779533386230469
    7. ' since' → logprob: -5.029533386230469
    8. ' here' → logprob: -5.279533386230469
    9. ' k' → logprob: -5.404533386230469
    10. ' for' → logprob: -5.654533386230469

Token 381: ' more' (ID: 945)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5088523626327515
    2. 'not' → logprob: -1.0088523626327515
    3. ' more' → logprob: -5.258852481842041
    4. ' actually' → logprob: -5.633852481842041
    5. ' tricky' → logprob: -5.633852481842041
    6. 'actually' → logprob: -5.758852481842041
    7. ' quite' → logprob: -6.133852481842041
    8. 'n' → logprob: -6.258852481842041
    9. ' complicated' → logprob: -6.508852481842041
    10. 'more' → logprob: -6.633852481842041

Token 382: ' complex' (ID: 8012)
  Prédit: ' complex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complex' → logprob: -0.03657583147287369
    2. 'complex' → logprob: -3.5365757942199707
    3. ' complicated' → logprob: -5.411575794219971
    4. ' subtle' → logprob: -7.286575794219971
    5. ' likely' → logprob: -7.411575794219971
    6. ' than' → logprob: -7.911575794219971
    7. ' nuanced' → logprob: -8.661576271057129
    8. 'comp' → logprob: -9.286576271057129
    9. 'likely' → logprob: -9.786576271057129
    10. ' precise' → logprob: -9.786576271057129

Token 383: ' due' (ID: 5192)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25481733679771423
    2. 'to' → logprob: -1.5048173666000366
    3. 'To' → logprob: -7.004817485809326
    4. '_to' → logprob: -7.254817485809326
    5. ' ' → logprob: -8.004817008972168
    6. '_' → logprob: -8.129817008972168
    7. 't' → logprob: -8.629817008972168
    8. '=' → logprob: -9.504817008972168
    9. ' ' → logprob: -9.879817008972168
    10. 'n' → logprob: -10.004817008972168

Token 385: ' structure' (ID: 8866)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.38600558042526245
    2. ' rest' → logprob: -2.1360056400299072
    3. 'the' → logprob: -2.7610056400299072
    4. ' dependencies' → logprob: -3.0110056400299072
    5. ' spaces' → logprob: -4.636005401611328
    6. ' chains' → logprob: -4.761005401611328
    7. ' multiple' → logprob: -5.011005401611328
    8. ' permutations' → logprob: -5.261005401611328
    9. ' constraints' → logprob: -5.511005401611328
    10. ' independence' → logprob: -5.511005401611328

Token 386: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21540603041648865
    2. ' ' → logprob: -2.4654059410095215
    3. ')' → logprob: -2.8404059410095215
    4. '   ' → logprob: -3.9654059410095215
    5. '    ' → logprob: -4.8404059410095215
    6. ' )' → logprob: -5.0904059410095215
    7. '        ' → logprob: -5.2154059410095215
    8. '#' → logprob: -5.9654059410095215
    9. 'n' → logprob: -6.3404059410095215
    10. ' 
' → logprob: -6.7154059410095215

Token 388: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0367700532078743
    2. '   ' → logprob: -4.161769866943359
    3. ' 
' → logprob: -4.911769866943359
    4. ' p' → logprob: -5.786769866943359
    5. ' ' → logprob: -6.286769866943359
    6. 'p' → logprob: -6.286769866943359
    7. '        
' → logprob: -6.661769866943359
    8. '        ' → logprob: -6.911769866943359
    9. ')' → logprob: -7.161769866943359
    10. '    ' → logprob: -7.286769866943359

Token 389: ' Fortunately' (ID: 59523)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.050356362015008926
    2. ' p' → logprob: -3.550356388092041
    3. '       ' → logprob: -4.175356388092041
    4. '#' → logprob: -6.050356388092041
    5. '   ' → logprob: -7.050356388092041
    6. 'return' → logprob: -7.300356388092041
    7. 'n' → logprob: -8.300355911254883
    8. ')' → logprob: -8.800355911254883
    9. 'pass' → logprob: -9.050355911254883
    10. ' #' → logprob: -9.175355911254883

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.067561149597168
    2. '<|end|>' → logprob: -1.567561149597168
    3. '       ' → logprob: -1.692561149597168
    4. '<|end|>' → logprob: -2.192561149597168
    5. '   ' → logprob: -2.317561149597168
    6. ' ' → logprob: -3.692561149597168
    7. '    ' → logprob: -5.192561149597168
    8. ' p' → logprob: -5.692561149597168
    9. ')' → logprob: -5.817561149597168
    10. '        ' → logprob: -6.067561149597168

Token 391: ' the' (ID: 290)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.22469092905521393
    2. 'p' → logprob: -2.3496909141540527
    3. '<|end|>' → logprob: -3.0996909141540527
    4. ' return' → logprob: -4.099690914154053
    5. ' ' → logprob: -4.724690914154053
    6. ' #' → logprob: -4.849690914154053
    7. 'return' → logprob: -4.974690914154053
    8. '#' → logprob: -5.099690914154053
    9. '<|end|>' → logprob: -5.474690914154053
    10. '       ' → logprob: -5.849690914154053

Token 392: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -1.1343331336975098
    2. ' code' → logprob: -2.1343331336975098
    3. '#' → logprob: -2.2593331336975098
    4. 'problem' → logprob: -2.8843331336975098
    5. ' p' → logprob: -3.1343331336975098
    6. ' rest' → logprob: -3.2593331336975098
    7. ' user' → logprob: -3.3843331336975098
    8. 'def' → logprob: -3.5093331336975098
    9. ' editor' → logprob: -3.7593331336975098
    10. ' #' → logprob: -3.7593331336975098

Token 393: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9809669256210327
    2. ' continues' → logprob: -1.6059669256210327
    3. '<|end|>' → logprob: -1.8559669256210327
    4. 'contin' → logprob: -3.3559670448303223
    5. '.' → logprob: -3.4809670448303223
    6. 'is' → logprob: -3.8559670448303223
    7. ':' → logprob: -3.9809670448303223
    8. ' was' → logprob: -4.105967044830322
    9. '<|end|>' → logprob: -4.230967044830322
    10. '...' → logprob: -4.355967044830322

Token 394: ' well' (ID: 1775)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.49546048045158386
    2. 'cut' → logprob: -2.1204605102539062
    3. ' incomplete' → logprob: -2.7454605102539062
    4. 'not' → logprob: -2.7454605102539062
    5. 'tr' → logprob: -3.1204605102539062
    6. 'unfinished' → logprob: -3.1204605102539062
    7. ' truncated' → logprob: -4.120460510253906
    8. 'too' → logprob: -4.245460510253906
    9. ' cut' → logprob: -4.370460510253906
    10. 'continued' → logprob: -6.120460510253906

Token 395: ' known' (ID: 5542)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.8437185883522034
    2. '-defined' → logprob: -1.4687185287475586
    3. '-known' → logprob: -1.7187185287475586
    4. 'defined' → logprob: -2.0937185287475586
    5. '```' → logprob: -4.343718528747559
    6. 'comment' → logprob: -5.218718528747559
    7. '#' → logprob: -5.843718528747559
    8. ' known' → logprob: -6.218718528747559
    9. 'f' → logprob: -6.593718528747559
    10. '   ' → logprob: -6.718718528747559

Token 396: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: 'At' (ID: 2243)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18412739038467407
    2. ' and' → logprob: -3.0591273307800293
    3. ' )' → logprob: -3.5591273307800293
    4. 'and' → logprob: -4.059127330780029
    5. '...' → logprob: -4.059127330780029
    6. '<|end|>' → logprob: -4.309127330780029
    7. ' the' → logprob: -4.934127330780029
    8. ' p' → logprob: -5.059127330780029
    9. ' so' → logprob: -5.184127330780029
    10. 'the' → logprob: -5.559127330780029

Token 398: 'Coder' (ID: 72183)
  Prédit: 'coder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coder' → logprob: -0.9065539240837097
    2. 'least' → logprob: -1.2815539836883545
    3. ' least' → logprob: -2.2815539836883545
    4. 't' → logprob: -2.4065539836883545
    5. 'most' → logprob: -4.656553745269775
    6. 'tention' → logprob: -4.781553745269775
    7. ')' → logprob: -5.156553745269775
    8. 'tribution' → logprob: -5.156553745269775
    9. 'e' → logprob: -5.156553745269775
    10. '_le' → logprob: -5.406553745269775

Token 399: ' Grand' (ID: 13824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1814366579055786
    2. ' Beginner' → logprob: -1.4314366579055786
    3. 'Grand' → logprob: -1.9314366579055786
    4. '<|end|>' → logprob: -2.181436538696289
    5. 'DP' → logprob: -3.431436538696289
    6. ' Grand' → logprob: -3.806436538696289
    7. 'ABC' → logprob: -3.931436538696289
    8. 'Begin' → logprob: -4.056436538696289
    9. 'Contest' → logprob: -4.181436538696289
    10. ' DP' → logprob: -4.681436538696289

Token 400: ' Contest' (ID: 66690)
  Prédit: 'Contest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Contest' → logprob: -0.5199897289276123
    2. 'Tour' → logprob: -1.5199897289276123
    3. 'Prix' → logprob: -2.8949897289276123
    4. ')' → logprob: -4.019989967346191
    5. 'contest' → logprob: -4.144989967346191
    6. 'Final' → logprob: -4.519989967346191
    7. ' ' → logprob: -4.519989967346191
    8. 'Challenge' → logprob: -4.769989967346191
    9. '}' → logprob: -5.394989967346191
    10. 'prix' → logprob: -5.394989967346191

Token 401: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30645737051963806
    2. ' ' → logprob: -2.556457281112671
    3. 'ABC' → logprob: -3.681457281112671
    4. 'F' → logprob: -3.806457281112671
    5. 'G' → logprob: -4.05645751953125
    6. '(' → logprob: -4.30645751953125
    7. '<|end|>' → logprob: -4.55645751953125
    8. '-' → logprob: -4.55645751953125
    9. 'E' → logprob: -4.68145751953125
    10. ' (' → logprob: -4.68145751953125

Token 402: '043' (ID: 31619)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5530669689178467
    2. '<|end|>' → logprob: -1.6780669689178467
    3. ' ' → logprob: -2.4280669689178467
    4. '#' → logprob: -3.4280669689178467
    5. '),' → logprob: -4.428067207336426
    6. '</' → logprob: -4.553067207336426
    7. '25' → logprob: -4.928067207336426
    8. '(' → logprob: -5.303067207336426
    9. '014' → logprob: -5.303067207336426
    10. '
' → logprob: -5.678067207336426

Token 403: ' C' (ID: 363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04200295731425285
    2. 'E' → logprob: -4.042003154754639
    3. '),' → logprob: -4.917003154754639
    4. 'D' → logprob: -5.667003154754639
    5. ' )' → logprob: -5.792003154754639
    6. '):' → logprob: -5.917003154754639
    7. '<|end|>' → logprob: -6.042003154754639
    8. ').' → logprob: -7.292003154754639
    9. ' E' → logprob: -7.292003154754639
    10. ',' → logprob: -7.542003154754639

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0065139289945364
    2. ' )' → logprob: -5.381514072418213
    3. '):' → logprob: -7.006514072418213
    4. '<|end|>' → logprob: -7.631514072418213
    5. '
' → logprob: -9.756513595581055
    6. ')
' → logprob: -10.006513595581055
    7. ':' → logprob: -10.131513595581055
    8. '),' → logprob: -10.131513595581055
    9. '#' → logprob: -10.256513595581055
    10. '_' → logprob: -10.381513595581055

Token 405: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0260337591171265
    2. '<|end|>' → logprob: -1.0260337591171265
    3. ')' → logprob: -1.5260337591171265
    4. '       ' → logprob: -4.026033878326416
    5. ':' → logprob: -4.401033878326416
    6. ' ' → logprob: -4.401033878326416
    7. '<|end|>' → logprob: -4.401033878326416
    8. '
' → logprob: -6.276033878326416
    9. '):' → logprob: -6.526033878326416
    10. ',' → logprob: -6.651033878326416

Token 406: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5556264519691467
    2. '   ' → logprob: -1.305626392364502
    3. '       ' → logprob: -2.680626392364502
    4. ' ' → logprob: -3.805626392364502
    5. '<|end|>' → logprob: -3.805626392364502
    6. ':' → logprob: -4.180626392364502
    7. '    ' → logprob: -5.555626392364502
    8. 'n' → logprob: -5.930626392364502
    9. '):' → logprob: -6.055626392364502
    10. ' )' → logprob: -6.305626392364502

Token 407: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5983054041862488
    2. '   ' → logprob: -1.3483054637908936
    3. '       ' → logprob: -2.0983054637908936
    4. ' p' → logprob: -3.8483054637908936
    5. 'n' → logprob: -4.4733052253723145
    6. ' ' → logprob: -4.9733052253723145
    7. 'p' → logprob: -5.0983052253723145
    8. '    ' → logprob: -5.2233052253723145
    9. ' )' → logprob: -5.5983052253723145
    10. ' n' → logprob: -6.3483052253723145

Token 408: ' editorial' (ID: 37857)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.46033981442451477
    2. 'p' → logprob: -1.8353397846221924
    3. ' the' → logprob: -2.8353397846221924
    4. '#' → logprob: -3.0853397846221924
    5. '       ' → logprob: -3.4603397846221924
    6. 'the' → logprob: -3.5853397846221924
    7. '   ' → logprob: -4.3353400230407715
    8. 'return' → logprob: -4.5853400230407715
    9. ' #' → logprob: -5.2103400230407715
    10. '
' → logprob: -5.3353400230407715

Token 409: ' states' (ID: 9407)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1196454763412476
    2. '<|end|>' → logprob: -1.2446454763412476
    3. ')' → logprob: -2.244645595550537
    4. ':' → logprob: -2.744645595550537
    5. '
' → logprob: -2.744645595550537
    6. '<|end|>' → logprob: -2.994645595550537
    7. ' ' → logprob: -4.119645595550537
    8. '#' → logprob: -4.244645595550537
    9. ' =' → logprob: -4.369645595550537
    10. ',' → logprob: -4.619645595550537

Token 410: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3282570540904999
    2. '   ' → logprob: -2.3282570838928223
    3. ' ' → logprob: -2.4532570838928223
    4. '<|end|>' → logprob: -3.4532570838928223
    5. ':' → logprob: -4.328257083892822
    6. '    ' → logprob: -4.453257083892822
    7. '<|end|>' → logprob: -4.953257083892822
    8. '        ' → logprob: -4.953257083892822
    9. 'n' → logprob: -5.578257083892822
    10. ' p' → logprob: -5.703257083892822

Token 411: ' the' (ID: 290)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.08187054097652435
    2. 'p' → logprob: -3.0818705558776855
    3. '<|end|>' → logprob: -4.3318705558776855
    4. '       ' → logprob: -5.0818705558776855
    5. ')' → logprob: -5.9568705558776855
    6. ' ' → logprob: -6.0818705558776855
    7. 'n' → logprob: -6.2068705558776855
    8. ' ' → logprob: -6.3318705558776855
    9. ' n' → logprob: -7.2068705558776855
    10. '<|end|>' → logprob: -7.3318705558776855

Token 412: ' answer' (ID: 6052)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.89914870262146
    2. ' p' → logprob: -1.27414870262146
    3. ' probability' → logprob: -1.52414870262146
    4. 'prob' → logprob: -3.27414870262146
    5. 'p' → logprob: -3.89914870262146
    6. 'next' → logprob: -4.024148941040039
    7. ' success' → logprob: -5.524148941040039
    8. 'success' → logprob: -6.024148941040039
    9. ' result' → logprob: -6.149148941040039
    10. ' final' → logprob: -6.399148941040039

Token 413: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07972605526447296
    2. '=' → logprob: -2.704725980758667
    3. ' is' → logprob: -4.954726219177246
    4. ' +=' → logprob: -6.954726219177246
    5. ' ' → logprob: -7.579726219177246
    6. ':' → logprob: -8.079726219177246
    7. ')' → logprob: -8.329726219177246
    8. '<|end|>' → logprob: -9.079726219177246
    9. '_' → logprob: -9.704726219177246
    10. '[' → logprob: -10.079726219177246

Token 414: ':

' (ID: 1402)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.41284188628196716
    2. 'Fraction' → logprob: -1.1628419160842896
    3. '   ' → logprob: -4.662841796875
    4. ' (' → logprob: -5.537841796875
    5. ' k' → logprob: -6.037841796875
    6. '(' → logprob: -6.162841796875
    7. ' p' → logprob: -6.287841796875
    8. ' n' → logprob: -6.662841796875
    9. ' pow' → logprob: -7.037841796875
    10. ' ' → logprob: -7.412841796875

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00920746847987175
    2. '   ' → logprob: -6.134207248687744
    3. ' p' → logprob: -6.384207248687744
    4. 'Fraction' → logprob: -6.384207248687744
    5. ' Fraction' → logprob: -6.759207248687744
    6. 'p' → logprob: -7.009207248687744
    7. 'return' → logprob: -8.384207725524902
    8. 'n' → logprob: -8.884207725524902
    9. ' return' → logprob: -9.259207725524902
    10. ')' → logprob: -9.384207725524902

Token 416: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05542739853262901
    2. '   ' → logprob: -4.055427551269531
    3. ' p' → logprob: -4.680427551269531
    4. 'return' → logprob: -4.805427551269531
    5. 'pow' → logprob: -5.055427551269531
    6. 'Fraction' → logprob: -5.180427551269531
    7. '       ' → logprob: -6.680427551269531
    8. 'prob' → logprob: -6.930427551269531
    9. 'result' → logprob: -7.430427551269531
    10. '#' (adapté à ' #') → logprob: -7.555427551269531

Token 417: ' Without' (ID: 25767)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.015549646690487862
    2. ' p' → logprob: -4.890549659729004
    3. '       ' → logprob: -5.640549659729004
    4. 'return' → logprob: -6.140549659729004
    5. 'if' → logprob: -7.390549659729004
    6. '   ' → logprob: -8.390549659729004
    7. 'result' → logprob: -8.640549659729004
    8. 'res' → logprob: -8.890549659729004
    9. 'ans' → logprob: -9.140549659729004
    10. 'x' → logprob: -9.265549659729004

Token 418: ' restart' (ID: 33437)
  Prédit: 'restart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'restart' → logprob: -0.5815389752388
    2. ' restart' → logprob: -1.4565389156341553
    3. '_restart' → logprob: -1.5815389156341553
    4. 'r' → logprob: -7.331539154052734
    5. '_re' → logprob: -7.831539154052734
    6. ' restarting' → logprob: -8.081539154052734
    7. ' rest' → logprob: -8.206539154052734
    8. 'rest' → logprob: -8.581539154052734
    9. '_' → logprob: -9.706539154052734
    10. 're' → logprob: -10.081539154052734

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3480924963951111
    2. ' =' → logprob: -1.9730925559997559
    3. ',' → logprob: -2.848092555999756
    4. ' p' → logprob: -3.223092555999756
    5. '=' → logprob: -3.848092555999756
    6. '_' → logprob: -4.098092555999756
    7. ':
' → logprob: -5.223092555999756
    8. 'p' → logprob: -6.223092555999756
    9. ')' → logprob: -6.348092555999756
    10. ' ' → logprob: -6.473092555999756

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20180203020572662
    2. ' p' → logprob: -1.8268020153045654
    3. 'p' → logprob: -3.9518020153045654
    4. '        ' → logprob: -7.0768022537231445
    5. '   ' → logprob: -7.2018022537231445
    6. '```' → logprob: -7.9518022537231445
    7. ' ' → logprob: -8.826802253723145
    8. '    ' → logprob: -9.201802253723145
    9. '           ' → logprob: -9.451802253723145
    10. '        
' → logprob: -9.826802253723145

Token 421: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6666293740272522
    2. 'p' → logprob: -0.7916293740272522
    3. '       ' → logprob: -3.4166293144226074
    4. '   ' → logprob: -8.166629791259766
    5. ' ' → logprob: -9.166629791259766
    6. ' 
' → logprob: -10.291629791259766
    7. '        ' → logprob: -10.416629791259766
    8. '        
' → logprob: -10.791629791259766
    9. '```' → logprob: -10.791629791259766
    10. ' ' → logprob: -11.041629791259766

Token 422: ' the' (ID: 290)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.051146600395441055
    2. ' p' → logprob: -3.0511465072631836
    3. '   ' → logprob: -7.801146507263184
    4. '       ' → logprob: -7.926146507263184
    5. 'prob' → logprob: -7.926146507263184
    6. ' numerator' → logprob: -8.176146507263184
    7. 'from' → logprob: -8.426146507263184
    8. 'pow' → logprob: -9.051146507263184
    9. '#' → logprob: -9.426146507263184
    10. 'numer' → logprob: -9.676146507263184

Token 423: ' probability' (ID: 34933)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6781045198440552
    2. 'p' → logprob: -1.1781045198440552
    3. ' probability' → logprob: -2.4281044006347656
    4. ' result' → logprob: -4.428104400634766
    5. 'prob' → logprob: -4.428104400634766
    6. ' success' → logprob: -4.428104400634766
    7. ' answer' → logprob: -4.678104400634766
    8. ' ' → logprob: -5.553104400634766
    9. ' rest' → logprob: -5.678104400634766
    10. 'n' → logprob: -5.803104400634766

Token 424: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1706656515598297
    2. '=' → logprob: -1.9206656217575073
    3. ' that' → logprob: -6.045665740966797
    4. ' ' → logprob: -6.295665740966797
    5. ' of' → logprob: -6.420665740966797
    6. '_' → logprob: -6.545665740966797
    7. ' is' → logprob: -7.295665740966797
    8. ')' → logprob: -8.170665740966797
    9. ' )' → logprob: -8.170665740966797
    10. '[' → logprob: -8.545665740966797

Token 425: ' success' (ID: 3505)
  Prédit: 'success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'success' → logprob: -0.10254988074302673
    2. ' success' → logprob: -2.3525497913360596
    3. 'failure' → logprob: -6.852550029754639
    4. ' failure' → logprob: -8.35254955291748
    5. 'successful' → logprob: -8.35254955291748
    6. 'fail' → logprob: -9.10254955291748
    7. 's' → logprob: -9.10254955291748
    8. ' no' → logprob: -9.35254955291748
    9. 'no' → logprob: -9.35254955291748
    10. '(success' → logprob: -9.97754955291748

Token 426: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0816529244184494
    2. '=' → logprob: -2.581652879714966
    3. '_' → logprob: -6.206653118133545
    4. ' ' → logprob: -8.331652641296387
    5. ')' → logprob: -8.706652641296387
    6. ' =
' → logprob: -9.706652641296387
    7. ' _' → logprob: -9.956652641296387
    8. ' is' → logprob: -9.956652641296387
    9. ' )' → logprob: -10.331652641296387
    10. '   ' → logprob: -10.706652641296387

Token 427: ' (' (ID: 350)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.31890636682510376
    2. ' Fraction' → logprob: -1.318906307220459
    3. '(' → logprob: -6.068906307220459
    4. ' (' → logprob: -6.193906307220459
    5. '   ' → logprob: -7.818906307220459
    6. 'pow' → logprob: -8.443906784057617
    7. '(k' → logprob: -8.818906784057617
    8. '(n' → logprob: -9.193906784057617
    9. ' k' → logprob: -9.693906784057617
    10. '(F' → logprob: -9.693906784057617

Token 428: 'k' (ID: 74)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.41097167134284973
    2. 'k' → logprob: -2.0359716415405273
    3. '(k' → logprob: -2.4109716415405273
    4. 'pow' → logprob: -3.4109716415405273
    5. '(' → logprob: -3.4109716415405273
    6. '(n' → logprob: -3.6609716415405273
    7. ' Fraction' → logprob: -5.035971641540527
    8. 'n' → logprob: -5.535971641540527
    9. ' (' → logprob: -5.535971641540527
    10. ' k' → logprob: -5.660971641540527

Token 429: '/n' (ID: 18292)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.47104236483573914
    2. ' **' → logprob: -1.3460423946380615
    3. ' *' → logprob: -2.5960423946380615
    4. ')' → logprob: -4.346042156219482
    5. '*' → logprob: -4.721042156219482
    6. '/n' → logprob: -4.846042156219482
    7. ' /' → logprob: -5.846042156219482
    8. ')**' → logprob: -5.971042156219482
    9. '*n' → logprob: -6.221042156219482
    10. '^' → logprob: -7.221042156219482

Token 430: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.4350077509880066
    2. '**' → logprob: -1.1850078105926514
    3. ')' → logprob: -3.0600078105926514
    4. ')^' → logprob: -9.43500804901123
    5. '**)' → logprob: -11.43500804901123
    6. ' )' → logprob: -11.68500804901123
    7. ' **' → logprob: -12.56000804901123
    8. '^' → logprob: -13.18500804901123
    9. ')*' → logprob: -13.31000804901123
    10. ')
' → logprob: -14.31000804901123

Token 431: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00013917774776928127
    2. 'n' → logprob: -9.750139236450195
    3. '(' → logprob: -10.375139236450195
    4. '(k' → logprob: -10.500139236450195
    5. 'r' → logprob: -11.750139236450195
    6. '(n' → logprob: -12.000139236450195
    7. ' k' → logprob: -13.000139236450195
    8. '1' → logprob: -13.500139236450195
    9. '(F' → logprob: -13.500139236450195
    10. 'Fraction' → logprob: -14.000139236450195

Token 432: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20846472680568695
    2. '
' → logprob: -2.9584646224975586
    3. '**' → logprob: -2.9584646224975586
    4. ')' → logprob: -3.2084646224975586
    5. '       ' → logprob: -4.458464622497559
    6. ' **' → logprob: -5.083464622497559
    7. ')
' → logprob: -5.083464622497559
    8. ' *' → logprob: -5.333464622497559
    9. ' p' → logprob: -5.833464622497559
    10. ',' → logprob: -6.083464622497559

Token 433: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7267287373542786
    2. '   ' → logprob: -0.7267287373542786
    3. '       ' → logprob: -3.976728677749634
    4. '\n' → logprob: -5.851728916168213
    5. ' p' → logprob: -5.851728916168213
    6. ' )' → logprob: -6.226728916168213
    7. '(' → logprob: -6.851728916168213
    8. ' ' → logprob: -7.351728916168213
    9. ')
' → logprob: -7.476728916168213
    10. '    ' → logprob: -7.726728916168213

Token 434: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8515022993087769
    2. 'p' → logprob: -0.9765022993087769
    3. '       ' → logprob: -1.9765022993087769
    4. '   ' → logprob: -2.8515024185180664
    5. 'return' → logprob: -9.101502418518066
    6. ' return' → logprob: -9.726502418518066
    7. '	p' → logprob: -10.476502418518066
    8. ' ' → logprob: -10.601502418518066
    9. '    ' → logprob: -10.976502418518066
    10. '        
' → logprob: -11.976502418518066

Token 435: ' With' (ID: 3813)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4208824634552002
    2. '   ' → logprob: -1.5458824634552002
    3. ' p' → logprob: -2.0458824634552
    4. '       ' → logprob: -7.670882225036621
    5. 'return' → logprob: -8.045882225036621
    6. ' return' → logprob: -9.545882225036621
    7. '```' → logprob: -9.670882225036621
    8. ')' → logprob: -9.920882225036621
    9. 'result' → logprob: -10.420882225036621
    10. '
' → logprob: -10.545882225036621

Token 436: ' restart' (ID: 33437)
  Prédit: '_restart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_restart' → logprob: -0.4879564046859741
    2. 'restart' → logprob: -1.4879564046859741
    3. ' restart' → logprob: -1.9879564046859741
    4. 'out' → logprob: -4.737956523895264
    5. ' rest' → logprob: -5.112956523895264
    6. 'r' → logprob: -6.237956523895264
    7. '_' → logprob: -6.487956523895264
    8. 'm' → logprob: -6.862956523895264
    9. ' m' → logprob: -7.112956523895264
    10. '_re' → logprob: -7.362956523895264

Token 437: ' m' (ID: 284)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07305382937192917
    2. ':
' → logprob: -2.9480538368225098
    3. ' if' → logprob: -5.19805383682251
    4. '       ' → logprob: -5.94805383682251
    5. '   ' → logprob: -5.94805383682251
    6. '**' → logprob: -6.07305383682251
    7. ' =' → logprob: -7.44805383682251
    8. '_' → logprob: -7.44805383682251
    9. ',' → logprob: -7.69805383682251
    10. ' :' → logprob: -8.073053359985352

Token 438: '=' (ID: 28)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7670134902000427
    2. '>' → logprob: -1.0170135498046875
    3. ' ==' → logprob: -2.3920135498046875
    4. '_' → logprob: -3.2670135498046875
    5. '=' → logprob: -4.2670135498046875
    6. '==' → logprob: -4.5170135498046875
    7. ')' → logprob: -5.0170135498046875
    8. ' >=' → logprob: -5.8920135498046875
    9. ' =' → logprob: -6.2670135498046875
    10. ' _' → logprob: -6.7670135498046875

Token 439: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002505743643268943
    2. '1' → logprob: -6.627505779266357
    3. ' ' → logprob: -6.752505779266357
    4. ''' → logprob: -13.0025053024292
    5. '-' → logprob: -13.1275053024292
    6. '"' → logprob: -13.6275053024292
    7. 'k' → logprob: -14.0025053024292
    8. '   ' → logprob: -14.1275053024292
    9. '  ' → logprob: -14.2525053024292
    10. '">' → logprob: -14.5025053024292

Token 440: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12202722579240799
    2. '   ' → logprob: -3.2470271587371826
    3. ':
' → logprob: -3.8720271587371826
    4. ')' → logprob: -4.622027397155762
    5. ' p' → logprob: -4.872027397155762
    6. ' if' → logprob: -4.997027397155762
    7. ',' → logprob: -5.247027397155762
    8. '**' → logprob: -5.372027397155762
    9. ' :' → logprob: -5.872027397155762
    10. '):' → logprob: -6.122027397155762

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004601249471306801
    2. ' p' → logprob: -6.12960147857666
    3. '        
' → logprob: -7.50460147857666
    4. '        ' → logprob: -7.75460147857666
    5. ' 
' → logprob: -7.87960147857666
    6. '
' → logprob: -8.37960147857666
    7. '   ' → logprob: -8.50460147857666
    8. 'p' → logprob: -9.00460147857666
    9. '```' → logprob: -9.00460147857666
    10. ' ' → logprob: -9.25460147857666

Token 442: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6947264671325684
    2. '       ' → logprob: -0.8197264671325684
    3. 'p' → logprob: -2.9447264671325684
    4. ' if' → logprob: -5.444726467132568
    5. '        ' → logprob: -7.069726467132568
    6. ' return' → logprob: -7.194726467132568
    7. '           ' → logprob: -7.444726467132568
    8. 'if' → logprob: -7.694726467132568
    9. '   ' → logprob: -8.194726943969727
    10. 'return' → logprob: -8.569726943969727

Token 443: ' success' (ID: 3505)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.48120957612991333
    2. 'p' → logprob: -0.9812095761299133
    3. ' if' → logprob: -5.731209754943848
    4. 'if' → logprob: -5.981209754943848
    5. '       ' → logprob: -8.481209754943848
    6. 'prob' → logprob: -8.856209754943848
    7. 'q' → logprob: -8.981209754943848
    8. ' q' → logprob: -9.106209754943848
    9. 'return' → logprob: -9.481209754943848
    10. ' (' → logprob: -9.481209754943848

Token 444: ' probability' (ID: 34933)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.572815477848053
    2. '_' → logprob: -1.6978154182434082
    3. '=' → logprob: -2.447815418243408
    4. ')' → logprob: -3.197815418243408
    5. ' _' → logprob: -3.197815418243408
    6. '_prob' → logprob: -4.697815418243408
    7. '**' → logprob: -4.697815418243408
    8. ':' → logprob: -4.822815418243408
    9. ' ' → logprob: -4.822815418243408
    10. ' if' → logprob: -4.947815418243408

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002666854066774249
    2. '=' → logprob: -6.00266695022583
    3. ' p' → logprob: -9.252666473388672
    4. ' is' → logprob: -10.127666473388672
    5. ' ' → logprob: -11.002666473388672
    6. ' =
' → logprob: -11.877666473388672
    7. ' if' → logprob: -12.002666473388672
    8. ')' → logprob: -12.502666473388672
    9. ' **' → logprob: -12.752666473388672
    10. 'p' → logprob: -12.877666473388672

Token 446: ' ' (ID: 220)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.45944568514823914
    2. '(' → logprob: -2.2094457149505615
    3. '(k' → logprob: -2.4594457149505615
    4. '1' → logprob: -2.5844457149505615
    5. '(F' → logprob: -3.2094457149505615
    6. '((' → logprob: -3.7094457149505615
    7. ' Fraction' → logprob: -4.334445476531982
    8. ' (' → logprob: -4.709445476531982
    9. 'pow' → logprob: -5.334445476531982
    10. '(n' → logprob: -5.459445476531982

Token 447: '1' (ID: 16)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.20619183778762817
    2. '(' → logprob: -2.4561917781829834
    3. '1' → logprob: -2.7061917781829834
    4. '(k' → logprob: -4.7061920166015625
    5. '(F' → logprob: -4.8311920166015625
    6. '((' → logprob: -4.9561920166015625
    7. 'pow' → logprob: -4.9561920166015625
    8. '(n' → logprob: -6.9561920166015625
    9. 'k' → logprob: -7.4561920166015625
    10. 'sum' → logprob: -7.8311920166015625

Token 448: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7518711090087891
    2. '   ' → logprob: -0.8768711090087891
    3. ',' → logprob: -4.126871109008789
    4. ':' → logprob: -4.501871109008789
    5. '       ' → logprob: -4.626871109008789
    6. '**' → logprob: -4.751871109008789
    7. '(' → logprob: -4.876871109008789
    8. ' if' → logprob: -5.001871109008789
    9. '#' → logprob: -5.126871109008789
    10. '(p' → logprob: -5.126871109008789

Token 449: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17208197712898254
    2. ' (' → logprob: -2.29708194732666
    3. '(F' → logprob: -3.29708194732666
    4. 'Fraction' → logprob: -4.54708194732666
    5. '(n' → logprob: -5.79708194732666
    6. '((' → logprob: -6.04708194732666
    7. ' Fraction' → logprob: -6.29708194732666
    8. 'pow' → logprob: -6.42208194732666
    9. ' ((' → logprob: -8.29708194732666
    10. '(p' → logprob: -8.42208194732666

Token 450: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5648025870323181
    2. 'Fraction' → logprob: -1.189802646636963
    3. ' (' → logprob: -3.064802646636963
    4. '1' → logprob: -3.189802646636963
    5. '(n' → logprob: -4.064802646636963
    6. ' Fraction' → logprob: -4.689802646636963
    7. '(F' → logprob: -5.064802646636963
    8. '((' → logprob: -6.064802646636963
    9. 'n' → logprob: -6.439802646636963
    10. 'pow' → logprob: -6.564802646636963

Token 451: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03484132140874863
    2. '-' → logprob: -4.034841537475586
    3. '/n' → logprob: -4.284841537475586
    4. ' /' → logprob: -6.159841537475586
    5. '/' → logprob: -8.409841537475586
    6. ')' → logprob: -8.784841537475586
    7. ' )' → logprob: -9.409841537475586
    8. '-p' → logprob: -9.784841537475586
    9. '-n' → logprob: -9.909841537475586
    10. ' ' → logprob: -10.659841537475586

Token 452: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.008410084992647171
    2. 'Fraction' → logprob: -5.5084099769592285
    3. '(F' → logprob: -6.3834099769592285
    4. ' (' → logprob: -6.6334099769592285
    5. '(n' → logprob: -7.7584099769592285
    6. 'k' → logprob: -8.383410453796387
    7. '(' → logprob: -8.383410453796387
    8. 'pow' → logprob: -8.633410453796387
    9. '((' → logprob: -9.508410453796387
    10. '(pow' → logprob: -10.008410453796387

Token 453: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.050448305904865265
    2. '(k' → logprob: -3.550448417663574
    3. 'Fraction' → logprob: -3.925448417663574
    4. ' k' → logprob: -8.550448417663574
    5. 'pow' → logprob: -8.550448417663574
    6. ' Fraction' → logprob: -9.175448417663574
    7. ' (' → logprob: -9.425448417663574
    8. '(' → logprob: -9.800448417663574
    9. 'frac' → logprob: -10.050448417663574
    10. '(F' → logprob: -10.300448417663574

Token 454: '/n' (ID: 18292)
  Prédit: '/n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/n' → logprob: -0.046103693544864655
    2. '/' → logprob: -3.1711037158966064
    3. ' /' → logprob: -5.796103477478027
    4. '/k' → logprob: -10.296103477478027
    5. '/ng' → logprob: -11.796103477478027
    6. '/N' → logprob: -12.546103477478027
    7. '/
' → logprob: -12.546103477478027
    8. '/ns' → logprob: -13.421103477478027
    9. '/code' → logprob: -13.796103477478027
    10. ')' → logprob: -14.296103477478027

Token 455: ')^' (ID: 73602)
  Prédit: ')^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')^' → logprob: -0.24741590023040771
    2. ')**' → logprob: -1.9974159002304077
    3. ')' → logprob: -2.4974160194396973
    4. '))' → logprob: -6.747416019439697
    5. '**' → logprob: -11.372415542602539
    6. ' )' → logprob: -11.747415542602539
    7. ')
' → logprob: -12.872415542602539
    8. '`)' → logprob: -13.247415542602539
    9. '```' → logprob: -14.247415542602539
    10. '   ' → logprob: -14.747415542602539

Token 456: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0076027195900678635
    2. '^' → logprob: -5.507602691650391
    3. ')' → logprob: -6.257602691650391
    4. ')n' → logprob: -7.132602691650391
    5. ')^' → logprob: -7.382602691650391
    6. '1' → logprob: -9.75760269165039
    7. ' n' → logprob: -10.13260269165039
    8. '(' → logprob: -10.50760269165039
    9. '(n' → logprob: -10.88260269165039
    10. '```' → logprob: -11.25760269165039

Token 457: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4961339235305786
    2. ')^' → logprob: -0.9961339235305786
    3. ')**' → logprob: -3.871133804321289
    4. '))' → logprob: -7.746133804321289
    5. ' )' → logprob: -7.871133804321289
    6. '**' → logprob: -9.871133804321289
    7. '`)' → logprob: -10.121133804321289
    8. ')
' → logprob: -10.621133804321289
    9. ')`' → logprob: -11.371133804321289
    10. '   ' → logprob: -11.496133804321289

Token 458: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5251672267913818
    2. '1' → logprob: -1.6501672267913818
    3. 'm' → logprob: -2.150167226791382
    4. '2' → logprob: -2.650167226791382
    5. ' (' → logprob: -4.650167465209961
    6. '(m' → logprob: -4.775167465209961
    7. '(k' → logprob: -5.775167465209961
    8. '(
' → logprob: -5.900167465209961
    9. ' ' → logprob: -6.025167465209961
    10. ' m' → logprob: -6.775167465209961

Token 459: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016263680532574654
    2. '       ' → logprob: -5.641263484954834
    3. '    
' → logprob: -5.766263484954834
    4. ' p' → logprob: -6.391263484954834
    5. ' 
' → logprob: -6.391263484954834
    6. '
' → logprob: -6.641263484954834
    7. '\n' → logprob: -7.016263484954834
    8. ')' → logprob: -7.141263484954834
    9. '  
' → logprob: -7.516263484954834
    10. ' if' → logprob: -8.141263961791992

Token 460: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1065206453204155
    2. ' (' → logprob: -2.606520652770996
    3. '1' → logprob: -4.356520652770996
    4. '(' → logprob: -4.481520652770996
    5. ' Fraction' → logprob: -6.356520652770996
    6. ' p' → logprob: -7.606520652770996
    7. 'Fraction' → logprob: -8.606520652770996
    8. ' )' → logprob: -8.856520652770996
    9. ')' → logprob: -8.856520652770996
    10. '"' → logprob: -9.106520652770996

Token 461: 'k' (ID: 74)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10499046742916107
    2. ' ' → logprob: -2.6049904823303223
    3. ' (' → logprob: -4.979990482330322
    4. 'Fraction' → logprob: -4.979990482330322
    5. '(' → logprob: -5.479990482330322
    6. ' k' → logprob: -5.979990482330322
    7. ' Fraction' → logprob: -6.104990482330322
    8. 'k' → logprob: -6.354990482330322
    9. '(k' → logprob: -7.604990482330322
    10. '2' → logprob: -7.729990482330322

Token 462: '/n' (ID: 18292)
  Prédit: '/n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/n' → logprob: -0.1804848462343216
    2. '/' → logprob: -1.8054848909378052
    3. ' /' → logprob: -7.305484771728516
    4. '/
' → logprob: -10.930484771728516
    5. '**' → logprob: -11.305484771728516
    6. '/)' → logprob: -11.305484771728516
    7. '*' → logprob: -12.180484771728516
    8. '/
' → logprob: -12.305484771728516
    9. ')' → logprob: -12.930484771728516
    10. '/k' → logprob: -13.055484771728516

Token 463: ')^' (ID: 73602)
  Prédit: ')^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')^' → logprob: -0.17028577625751495
    2. ')**' → logprob: -2.170285701751709
    3. ')' → logprob: -3.170285701751709
    4. '**' → logprob: -7.920285701751709
    5. ' )' → logprob: -10.795286178588867
    6. '^' → logprob: -10.795286178588867
    7. '```' → logprob: -11.545286178588867
    8. '`)' → logprob: -11.920286178588867
    9. ')`' → logprob: -12.670286178588867
    10. '**)' → logprob: -13.045286178588867

Token 464: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6744449138641357
    2. 'n' → logprob: -0.7994449138641357
    3. '(n' → logprob: -3.2994449138641357
    4. '2' → logprob: -6.549445152282715
    5. ' (' → logprob: -6.549445152282715
    6. ' n' → logprob: -8.049445152282715
    7. '(
' → logprob: -8.924445152282715
    8. '1' → logprob: -8.924445152282715
    9. '0' → logprob: -9.049445152282715
    10. '{' → logprob: -9.174445152282715

Token 465: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5024324059486389
    2. '**' → logprob: -1.6274323463439941
    3. '   ' → logprob: -3.002432346343994
    4. '
' → logprob: -3.502432346343994
    5. '(' → logprob: -4.377432346343994
    6. ' ' → logprob: -4.502432346343994
    7. '\n' → logprob: -4.502432346343994
    8. '(
' → logprob: -4.877432346343994
    9. ')
' → logprob: -5.002432346343994
    10. '_' → logprob: -5.002432346343994

Token 466: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006440619006752968
    2. ' (' → logprob: -5.25644063949585
    3. '2' → logprob: -6.75644063949585
    4. '(
' → logprob: -10.631440162658691
    5. '((' → logprob: -11.756440162658691
    6. ' ' → logprob: -11.881440162658691
    7. '[' → logprob: -13.506440162658691
    8. ''' → logprob: -15.131440162658691
    9. '3' → logprob: -15.256440162658691
    10. '`' → logprob: -15.631440162658691

Token 467: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1822921633720398
    2. '2' → logprob: -1.8072922229766846
    3. ' (' → logprob: -6.0572919845581055
    4. ' ' → logprob: -8.682291984558105
    5. '((' → logprob: -11.557291984558105
    6. '(
' → logprob: -11.682291984558105
    7. '[' → logprob: -12.307291984558105
    8. '1' → logprob: -12.807291984558105
    9. ')' → logprob: -12.807291984558105
    10. '  ' → logprob: -14.182291984558105

Token 468: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01407571043819189
    2. ')' → logprob: -5.389075756072998
    3. '-' → logprob: -5.389075756072998
    4. ' )' → logprob: -6.139075756072998
    5. ' +' → logprob: -6.764075756072998
    6. ' ' → logprob: -7.264075756072998
    7. '+' → logprob: -7.514075756072998
    8. '*' → logprob: -9.13907527923584
    9. ' *' → logprob: -9.13907527923584
    10. ' ' → logprob: -11.13907527923584

Token 469: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5764063000679016
    2. '(k' → logprob: -0.8264063000679016
    3. '(' → logprob: -7.701406478881836
    4. '((' → logprob: -12.201406478881836
    5. '(n' → logprob: -12.326406478881836
    6. ' ((' → logprob: -13.451406478881836
    7. '(p' → logprob: -13.826406478881836
    8. ' ' → logprob: -13.951406478881836
    9. '(K' → logprob: -14.076406478881836
    10. '\' → logprob: -15.576406478881836

Token 470: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.2519495487213135
    2. ' (' → logprob: -1.5019495487213135
    3. '(' → logprob: -11.126949310302734
    4. '((' → logprob: -13.126949310302734
    5. ' ' → logprob: -14.001949310302734
    6. '(n' → logprob: -14.126949310302734
    7. '\' → logprob: -14.501949310302734
    8. '   ' → logprob: -14.626949310302734
    9. '(p' → logprob: -14.876949310302734
    10. ' ((' → logprob: -15.376949310302734

Token 471: '/n' (ID: 18292)
  Prédit: '/n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/n' → logprob: -0.0018142868066206574
    2. '/' → logprob: -6.376814365386963
    3. ' /' → logprob: -9.126813888549805
    4. '/k' → logprob: -13.501813888549805
    5. 'n' → logprob: -14.126813888549805
    6. '/
' → logprob: -15.376813888549805
    7. ')/' → logprob: -15.751813888549805
    8. '/math' → logprob: -16.126813888549805
    9. '/
/' → logprob: -16.126813888549805
    10. '/f' → logprob: -16.876813888549805

Token 472: ')^' (ID: 73602)
  Prédit: ')^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')^' → logprob: -0.016484498977661133
    2. ')' → logprob: -4.516484260559082
    3. ')**' → logprob: -5.266484260559082
    4. '^' → logprob: -8.641484260559082
    5. ' )' → logprob: -10.391484260559082
    6. '**' → logprob: -10.641484260559082
    7. ')n' → logprob: -10.641484260559082
    8. ')
' → logprob: -13.516484260559082
    9. '```' → logprob: -14.266484260559082
    10. '#' → logprob: -14.641484260559082

Token 473: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002790935104712844
    2. ')n' → logprob: -8.500279426574707
    3. ' n' → logprob: -10.000279426574707
    4. ')' → logprob: -11.000279426574707
    5. '^' → logprob: -11.750279426574707
    6. '_n' → logprob: -12.625279426574707
    7. '	n' → logprob: -14.000279426574707
    8. '1' → logprob: -14.250279426574707
    9. ')^' → logprob: -15.750279426574707
    10. '```' → logprob: -15.750279426574707

Token 474: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026503115077503026
    2. ' )' → logprob: -8.750265121459961
    3. '))' → logprob: -9.500265121459961
    4. ')
' → logprob: -11.125265121459961
    5. '**' → logprob: -12.500265121459961
    6. ')**' → logprob: -12.500265121459961
    7. ')`' → logprob: -13.000265121459961
    8. '   ' → logprob: -13.875265121459961
    9. '`)' → logprob: -14.000265121459961
    10. ')))' → logprob: -14.125265121459961

Token 475: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10861961543560028
    2. ')' → logprob: -2.3586196899414062
    3. '       ' → logprob: -5.108619689941406
    4. ' p' → logprob: -7.233619689941406
    5. ' )' → logprob: -7.608619689941406
    6. '    
' → logprob: -9.358619689941406
    7. '(' → logprob: -9.483619689941406
    8. '```' → logprob: -9.608619689941406
    9. '#' → logprob: -9.733619689941406
    10. ')
' → logprob: -9.733619689941406

Token 476: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03017263673245907
    2. '   ' → logprob: -4.405172824859619
    3. 'p' → logprob: -4.905172824859619
    4. ' p' → logprob: -5.155172824859619
    5. 'else' → logprob: -6.280172824859619
    6. ' else' → logprob: -6.780172824859619
    7. ')' → logprob: -8.155172348022461
    8. '           ' → logprob: -8.280172348022461
    9. 'if' → logprob: -8.655172348022461
    10. 'n' → logprob: -9.280172348022461

Token 477: ' Let's' (ID: 41021)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6481843590736389
    2. '       ' → logprob: -1.6481842994689941
    3. ' p' → logprob: -1.8981842994689941
    4. '   ' → logprob: -2.148184299468994
    5. ' if' → logprob: -5.398184299468994
    6. 'x' → logprob: -5.648184299468994
    7. 'prob' → logprob: -5.773184299468994
    8. 'if' → logprob: -6.023184299468994
    9. 't' → logprob: -6.648184299468994
    10. 'q' → logprob: -7.773184299468994

Token 478: ' follow' (ID: 2622)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9678430557250977
    2. '   ' → logprob: -1.0928430557250977
    3. ' p' → logprob: -2.5928430557250977
    4. ' return' → logprob: -3.3428430557250977
    5. ' compute' → logprob: -3.4678430557250977
    6. ' calculate' → logprob: -3.4678430557250977
    7. ' try' → logprob: -3.8428430557250977
    8. 'continue' → logprob: -3.9678430557250977
    9. ' indent' → logprob: -4.717843055725098
    10. '```' → logprob: -4.717843055725098

Token 479: ' these' (ID: 1879)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.039317011833191
    2. ' the' → logprob: -1.039317011833191
    3. '   ' → logprob: -1.914317011833191
    4. '```' → logprob: -2.4143171310424805
    5. 'the' → logprob: -3.9143171310424805
    6. '    ' → logprob: -4.4143171310424805
    7. '       ' → logprob: -5.0393171310424805
    8. ' this' → logprob: -5.1643171310424805
    9. ' k' → logprob: -5.9143171310424805
    10. ' next' → logprob: -5.9143171310424805

Token 480: ' formulas' (ID: 80232)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.202755868434906
    2. ':' → logprob: -2.577755928039551
    3. ' p' → logprob: -2.952755928039551
    4. '
' → logprob: -4.952755928039551
    5. '       ' → logprob: -5.077755928039551
    6. '_' → logprob: -5.202755928039551
    7. ' ' → logprob: -5.202755928039551
    8. 'p' → logprob: -5.202755928039551
    9. ',' → logprob: -6.077755928039551
    10. ')' → logprob: -6.202755928039551

Token 481: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06497305631637573
    2. '       ' → logprob: -2.9399731159210205
    3. ' p' → logprob: -5.564972877502441
    4. '
' → logprob: -5.814972877502441
    5. 'p' → logprob: -6.314972877502441
    6. '    
' → logprob: -7.439972877502441
    7. '    ' → logprob: -8.814972877502441
    8. '        
' → logprob: -8.939972877502441
    9. '```' → logprob: -9.064972877502441
    10. ')' → logprob: -9.439972877502441

Token 482: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031360089778900146
    2. '       ' → logprob: -6.128136157989502
    3. ' p' → logprob: -7.253136157989502
    4. 'p' → logprob: -9.378135681152344
    5. '   ' → logprob: -10.003135681152344
    6. '    ' → logprob: -10.128135681152344
    7. '    
' → logprob: -10.753135681152344
    8. '   ' → logprob: -11.128135681152344
    9. '`' → logprob: -12.253135681152344
    10. '```' → logprob: -12.253135681152344

Token 483: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.8253132104873657
    2. '       ' → logprob: -1.3253132104873657
    3. ' p' → logprob: -1.7003132104873657
    4. 'x' → logprob: -2.700313091278076
    5. ' x' → logprob: -4.075313091278076
    6. '   ' → logprob: -4.450313091278076
    7. 'prob' → logprob: -5.450313091278076
    8. 'pk' → logprob: -5.700313091278076
    9. ' pk' → logprob: -5.825313091278076
    10. 'k' → logprob: -6.825313091278076

Token 484: '_no' (ID: 13575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9422915577888489
    2. '=' → logprob: -1.192291498184204
    3. ' =' → logprob: -1.567291498184204
    4. '_base' → logprob: -3.317291498184204
    5. '_val' → logprob: -3.567291498184204
    6. '_=' → logprob: -4.692291736602783
    7. '_k' → logprob: -5.317291736602783
    8. '_fail' → logprob: -5.442291736602783
    9. '_num' → logprob: -5.692291736602783
    10. '_n' → logprob: -6.067291736602783

Token 485: '_restart' (ID: 182180)
  Prédit: '_fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fail' → logprob: -0.3083966076374054
    2. '_' → logprob: -1.433396577835083
    3. '_restart' → logprob: -4.308396816253662
    4. 'fail' → logprob: -5.308396816253662
    5. ' =' → logprob: -5.683396816253662
    6. '=' → logprob: -5.808396816253662
    7. '_success' → logprob: -7.558396816253662
    8. '_failure' → logprob: -7.808396816253662
    9. ' _' → logprob: -8.308396339416504
    10. '_rest' → logprob: -8.433396339416504

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993887573480606
    2. '=' → logprob: -2.694938898086548
    3. ')' → logprob: -13.944938659667969
    4. ' ' → logprob: -14.569938659667969
    5. 'space' → logprob: -15.194938659667969
    6. ',' → logprob: -15.319938659667969
    7. '_' → logprob: -15.944938659667969
    8. '_space' → logprob: -15.944938659667969
    9. '   ' → logprob: -16.06993865966797
    10. '```' → logprob: -16.19493865966797

Token 487: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.007450683508068323
    2. '(F' → logprob: -5.007450580596924
    3. ' Fraction' → logprob: -7.257450580596924
    4. ' (' → logprob: -11.257451057434082
    5. '(k' → logprob: -12.007451057434082
    6. '(' → logprob: -12.257451057434082
    7. 'pow' → logprob: -12.507451057434082
    8. '   ' → logprob: -14.382451057434082
    9. '((' → logprob: -14.882451057434082
    10. '(pow' → logprob: -15.007451057434082

Token 488: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.023337488994002342
    2. 'k' → logprob: -3.7733376026153564
    3. '(pow' → logprob: -10.148337364196777
    4. 'pow' → logprob: -10.523337364196777
    5. '(' → logprob: -10.648337364196777
    6. '((' → logprob: -13.648337364196777
    7. '{k' → logprob: -14.148337364196777
    8. '1' → logprob: -16.148338317871094
    9. '(
' → logprob: -17.773338317871094
    10. '   ' → logprob: -18.023338317871094

Token 489: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027622558176517487
    2. ',n' → logprob: -3.7776224613189697
    3. ' ,' → logprob: -6.277622699737549
    4. ',p' → logprob: -6.527622699737549
    5. ',k' → logprob: -7.652622699737549
    6. '**' → logprob: -8.15262222290039
    7. ',/' → logprob: -9.77762222290039
    8. ',r' → logprob: -10.65262222290039
    9. ')' → logprob: -10.90262222290039
    10. ',num' → logprob: -11.02762222290039

Token 490: ')**' (ID: 80066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47488874197006226
    2. ')**' → logprob: -0.9748887419700623
    3. '**' → logprob: -7.224888801574707
    4. ')n' → logprob: -10.224888801574707
    5. ')^' → logprob: -10.474888801574707
    6. ')
' → logprob: -11.849888801574707
    7. ' )' → logprob: -11.849888801574707
    8. '**)' → logprob: -13.599888801574707
    9. ')p' → logprob: -14.349888801574707
    10. '))' → logprob: -14.849888801574707

Token 491: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -15.75
    3. '(n' → logprob: -20.375
    4. '_n' → logprob: -20.875
    5. '	n' → logprob: -21.25
    6. '   ' → logprob: -21.5
    7. '**' → logprob: -22.0
    8. '```' → logprob: -22.125
    9. ')n' → logprob: -22.25
    10. '*n' → logprob: -22.625

Token 492: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9812608361244202
    2. '
' → logprob: -1.1062607765197754
    3. '<|end|>' → logprob: -1.6062607765197754
    4. ')' → logprob: -3.1062607765197754
    5. '       ' → logprob: -3.7312607765197754
    6. '    
' → logprob: -4.356260776519775
    7. '<|end|>' → logprob: -6.106260776519775
    8. ')
' → logprob: -6.356260776519775
    9. '  
' → logprob: -6.481260776519775
    10. '        
' → logprob: -6.856260776519775

Token 493: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15986768901348114
    2. '       ' → logprob: -2.284867763519287
    3. '   ' → logprob: -3.659867763519287
    4. '        
' → logprob: -5.159867763519287
    5. '    
' → logprob: -5.284867763519287
    6. ')' → logprob: -5.784867763519287
    7. '  
' → logprob: -6.659867763519287
    8. ')
' → logprob: -7.159867763519287
    9. ' 
' → logprob: -7.284867763519287
    10. '<|end|>' → logprob: -7.409867763519287

Token 494: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011922022327780724
    2. ' if' → logprob: -4.7619218826293945
    3. 'p' → logprob: -6.1369218826293945
    4. '       ' → logprob: -6.8869218826293945
    5. '   ' → logprob: -9.261921882629395
    6. 'return' → logprob: -11.136921882629395
    7. ' p' → logprob: -12.011921882629395
    8. '
' → logprob: -13.636921882629395
    9. 'elif' → logprob: -14.011921882629395
    10. '        
' → logprob: -15.136921882629395

Token 495: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6931471824645996
    2. ' m' → logprob: -0.6931471824645996
    3. ' ' → logprob: -17.318147659301758
    4. 'r' → logprob: -17.443147659301758
    5. ' not' → logprob: -17.943147659301758
    6. '	m' → logprob: -17.943147659301758
    7. ' r' → logprob: -18.568147659301758
    8. ' ' → logprob: -19.193147659301758
    9. '   ' → logprob: -19.193147659301758
    10. '_m' → logprob: -19.693147659301758

Token 496: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0633634701371193
    2. '==' → logprob: -2.813363552093506
    3. ' >' → logprob: -7.438363552093506
    4. ' <' → logprob: -7.938363552093506
    5. '=' → logprob: -8.813363075256348
    6. ' ' → logprob: -9.313363075256348
    7. '>' → logprob: -9.688363075256348
    8. ' >=' → logprob: -9.813363075256348
    9. ' =' → logprob: -9.938363075256348
    10. ' ' → logprob: -11.688363075256348

Token 497: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008299979381263256
    2. '1' → logprob: -7.375830173492432
    3. ' ' → logprob: -8.500829696655273
    4. '=' → logprob: -16.000829696655273
    5. '
' → logprob: -18.188329696655273
    6. '2' → logprob: -18.438329696655273
    7. ' ' → logprob: -18.500829696655273
    8. '>' → logprob: -18.688329696655273
    9. '۰' → logprob: -18.813329696655273
    10. '```' → logprob: -19.313329696655273

Token 498: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008114131633192301
    2. '1' → logprob: -7.125811576843262
    3. ' ' → logprob: -11.875811576843262
    4. '=' → logprob: -17.375810623168945
    5. '2' → logprob: -18.625810623168945
    6. '
' → logprob: -19.125810623168945
    7. '   ' → logprob: -19.125810623168945
    8. '  ' → logprob: -19.375810623168945
    9. ')' → logprob: -19.500810623168945
    10. '}' → logprob: -19.750810623168945

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002477081725373864
    2. ':
' → logprob: -6.002477169036865
    3. ':
' → logprob: -14.752476692199707
    4. ':return' → logprob: -14.877476692199707
    5. ':

' → logprob: -15.377476692199707
    6. '       ' → logprob: -15.502476692199707
    7. '):' → logprob: -16.002477645874023
    8. '           ' → logprob: -16.252477645874023
    9. '=' → logprob: -16.877477645874023
    10. ' :' → logprob: -17.002477645874023

Token 500: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5416190028190613
    2. '           ' → logprob: -0.9166190028190613
    3. '
' → logprob: -4.916618824005127
    4. ':
' → logprob: -5.041618824005127
    5. ':' → logprob: -5.666618824005127
    6. '        
' → logprob: -7.916618824005127
    7. '	       ' → logprob: -9.666619300842285
    8. '{' → logprob: -9.666619300842285
    9. '        ' → logprob: -10.041619300842285
    10. '   ' → logprob: -10.041619300842285

Token 501: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2465190440416336
    2. 'return' → logprob: -1.8715190887451172
    3. 'p' (adapté à ' p') → logprob: -3.246519088745117
    4. ' return' → logprob: -4.371519088745117
    5. ' p' → logprob: -4.871519088745117
    6. '           ' → logprob: -5.621519088745117
    7. '   ' → logprob: -6.621519088745117
    8. '
' → logprob: -7.871519088745117
    9. '               ' → logprob: -11.371519088745117
    10. ' ' → logprob: -11.496519088745117

Token 502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03026018850505352
    2. ' =' → logprob: -3.5302600860595703
    3. '_' → logprob: -7.78026008605957
    4. '=p' → logprob: -10.53026008605957
    5. ' ' → logprob: -10.65526008605957
    6. 'p' → logprob: -11.15526008605957
    7. '=_' → logprob: -11.53026008605957
    8. '_=' → logprob: -11.65526008605957
    9. 'return' → logprob: -13.28026008605957
    10. '_p' → logprob: -13.40526008605957

Token 503: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011703446507453918
    2. ' p' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.501171112060547
    4. '	p' → logprob: -17.501171112060547
    5. '       ' → logprob: -17.751171112060547
    6. '           ' → logprob: -17.876171112060547
    7. ' ' → logprob: -19.251171112060547
    8. 'Fraction' → logprob: -19.501171112060547
    9. '<p' → logprob: -20.126171112060547
    10. ' ' → logprob: -20.376171112060547

Token 504: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -5.512236498361744e-07
    2. 'no' → logprob: -16.0
    3. 'No' → logprob: -16.625
    4. '_' → logprob: -17.125
    5. '_fail' → logprob: -17.375
    6. '_not' → logprob: -17.5
    7. '\' → logprob: -17.625
    8. '```' → logprob: -17.875
    9. '_No' → logprob: -18.0
    10. '_NO' → logprob: -18.125

Token 505: '_restart' (ID: 182180)
  Prédit: '_restart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_restart' → logprob: -7.672236824873835e-05
    2. 'restart' → logprob: -9.750076293945312
    3. '_stop' → logprob: -12.000076293945312
    4. '_start' → logprob: -12.250076293945312
    5. '_no' → logprob: -12.750076293945312
    6. '_fail' → logprob: -13.125076293945312
    7. '_' → logprob: -13.500076293945312
    8. '_finish' → logprob: -15.500076293945312
    9. '_retry' → logprob: -15.625076293945312
    10. '_reset' → logprob: -15.875076293945312

Token 506: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008827757090330124
    2. '
' → logprob: -5.5088276863098145
    3. 'else' → logprob: -5.7588276863098145
    4. '   ' → logprob: -7.5088276863098145
    5. ' else' → logprob: -7.7588276863098145
    6. '<|end|>' → logprob: -8.008828163146973
    7. 'elif' → logprob: -9.008828163146973
    8. '    
' → logprob: -10.258828163146973
    9. ')' → logprob: -10.383828163146973
    10. '<|end|>' → logprob: -11.383828163146973

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005952498875558376
    2. 'else' → logprob: -5.50595235824585
    3. ' else' → logprob: -6.75595235824585
    4. 'elif' → logprob: -7.75595235824585
    5. '<|end|>' → logprob: -9.130952835083008
    6. '   ' → logprob: -9.255952835083008
    7. ')' → logprob: -10.755952835083008
    8. ' elif' → logprob: -10.880952835083008
    9. '	else' → logprob: -12.505952835083008
    10. '	elif' → logprob: -12.630952835083008

Token 508: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6413236260414124
    2. '       ' → logprob: -1.3913235664367676
    3. ' else' → logprob: -1.7663235664367676
    4. 'elif' → logprob: -3.0163235664367676
    5. ' elif' → logprob: -5.766323566436768
    6. '   ' → logprob: -6.516323566436768
    7. '	else' → logprob: -10.266324043273926
    8. '	elif' → logprob: -10.766324043273926
    9. '    ' → logprob: -11.141324043273926
    10. 'el' → logprob: -11.516324043273926

Token 509: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03534684330224991
    2. ':
' → logprob: -3.410346746444702
    3. '           ' → logprob: -6.410346984863281
    4. '       ' → logprob: -11.035346984863281
    5. '[' → logprob: -11.910346984863281
    6. ' :' → logprob: -11.910346984863281
    7. '        ' → logprob: -12.035346984863281
    8. '{' → logprob: -12.285346984863281
    9. '=' → logprob: -12.410346984863281
    10. '          ' → logprob: -13.285346984863281

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4743303656578064
    2. '       ' → logprob: -0.9743303656578064
    3. '        ' → logprob: -8.724329948425293
    4. '   ' → logprob: -10.599329948425293
    5. '	       ' → logprob: -11.224329948425293
    6. '         ' → logprob: -11.599329948425293
    7. '               ' → logprob: -11.849329948425293
    8. '		' → logprob: -12.224329948425293
    9. ' p' → logprob: -12.474329948425293
    10. ' ' → logprob: -12.724329948425293

Token 511: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6058077812194824
    2. 'p' (adapté à ' p') → logprob: -0.9808077812194824
    3. '       ' → logprob: -2.8558077812194824
    4. 'x' → logprob: -4.730807781219482
    5. ' x' → logprob: -5.355807781219482
    6. '           ' → logprob: -6.730807781219482
    7. 'q' → logprob: -6.855807781219482
    8. ' t' → logprob: -6.980807781219482
    9. ' q' → logprob: -7.105807781219482
    10. 't' → logprob: -7.605807781219482

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777611732483
    2. '=' → logprob: -0.9740777611732483
    3. '_' → logprob: -14.474078178405762
    4. '_=' → logprob: -16.724077224731445
    5. '=p' → logprob: -16.974077224731445
    6. ' ' → logprob: -17.099077224731445
    7. '>' → logprob: -17.849077224731445
    8. ')' → logprob: -18.099077224731445
    9. '＝' → logprob: -18.224077224731445
    10. 's' → logprob: -18.599077224731445

Token 513: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03996212035417557
    2. 'Fraction' → logprob: -3.28996205329895
    3. ' ' → logprob: -6.664962291717529
    4. ' Fraction' → logprob: -7.414962291717529
    5. '   ' → logprob: -10.789961814880371
    6. '(' → logprob: -11.664961814880371
    7. 'p' → logprob: -12.289961814880371
    8. '(F' → logprob: -13.039961814880371
    9. 'Frac' → logprob: -13.414961814880371
    10. 'Decimal' → logprob: -14.039961814880371

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04347696155309677
    2. 'Fraction' → logprob: -3.1684770584106445
    3. 'p' → logprob: -8.043477058410645
    4. ' Fraction' → logprob: -9.793477058410645
    5. ' ' → logprob: -9.918477058410645
    6. '(' → logprob: -10.293477058410645
    7. '(F' → logprob: -11.668477058410645
    8. 'Frac' → logprob: -13.293477058410645
    9. '   ' → logprob: -13.418477058410645
    10. 'Decimal' → logprob: -13.543477058410645

Token 515: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0015175960725173354
    2. '-' → logprob: -6.5015177726745605
    3. ')' → logprob: -12.501517295837402
    4. '-p' → logprob: -13.126517295837402
    5. ' ' → logprob: -13.251517295837402
    6. ',' → logprob: -13.251517295837402
    7. '+' → logprob: -13.626517295837402
    8. ' +' → logprob: -13.751517295837402
    9. ' *' → logprob: -14.001517295837402
    10. ' -
' → logprob: -14.501517295837402

Token 516: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007633958477526903
    2. ' (' → logprob: -4.882634162902832
    3. '(F' → logprob: -11.257634162902832
    4. '(p' → logprob: -11.507634162902832
    5. '((' → logprob: -13.132634162902832
    6. 'Fraction' → logprob: -13.257634162902832
    7. '(
' → logprob: -15.132634162902832
    8. '   ' → logprob: -15.382634162902832
    9. ' ' → logprob: -15.632634162902832
    10. 'p' → logprob: -15.757634162902832

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02346593327820301
    2. '(' → logprob: -3.773465871810913
    3. 'Fraction' → logprob: -8.523466110229492
    4. ' (' → logprob: -11.398466110229492
    5. '(F' → logprob: -12.148466110229492
    6. '(p' → logprob: -13.273466110229492
    7. 'p' → logprob: -13.773466110229492
    8. '   ' → logprob: -14.273466110229492
    9. ' ' → logprob: -14.273466110229492
    10. '(
' → logprob: -14.898466110229492

Token 518: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5231720209121704
    2. '-' → logprob: -0.8981720209121704
    3. '-p' → logprob: -10.398172378540039
    4. ' ' → logprob: -12.398172378540039
    5. ')' → logprob: -12.523172378540039
    6. 'p' → logprob: -13.273172378540039
    7. '[' → logprob: -13.773172378540039
    8. ' ' → logprob: -13.773172378540039
    9. 'minus' → logprob: -13.773172378540039
    10. '*' → logprob: -14.148172378540039

Token 519: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009117019944824278
    2. ' p' → logprob: -7.000911712646484
    3. ')p' → logprob: -16.125911712646484
    4. '(p' → logprob: -17.500911712646484
    5. ')' → logprob: -18.500911712646484
    6. '	p' → logprob: -19.250911712646484
    7. ' ' → logprob: -20.000911712646484
    8. '_p' → logprob: -20.125911712646484
    9. '<p' → logprob: -20.750911712646484
    10. 'Fraction' → logprob: -20.750911712646484

Token 520: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.750000953674316
    3. 'No' → logprob: -16.5
    4. 'no' → logprob: -16.5
    5. ')_' → logprob: -16.625
    6. ')' → logprob: -16.875
    7. '_not' → logprob: -17.0
    8. '_No' → logprob: -17.375
    9. '_NO' → logprob: -19.0
    10. '_
' → logprob: -19.375

Token 521: '_restart' (ID: 182180)
  Prédit: '_restart'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_restart' → logprob: -0.0019394654082134366
    2. 'restart' → logprob: -6.251939296722412
    3. '_start' → logprob: -11.62693977355957
    4. 'start' → logprob: -14.62693977355957
    5. 'Restart' → logprob: -14.87693977355957
    6. '_rest' → logprob: -14.87693977355957
    7. '_stop' → logprob: -15.25193977355957
    8. '_retry' → logprob: -15.50193977355957
    9. ' restart' → logprob: -16.00193977355957
    10. 'rest' → logprob: -16.37693977355957

Token 522: ')**' (ID: 80066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6934388875961304
    2. ')**' → logprob: -0.6934388875961304
    3. ' )' → logprob: -8.193438529968262
    4. ')*' → logprob: -12.068438529968262
    5. '**' → logprob: -12.818438529968262
    6. ')^' → logprob: -12.943438529968262
    7. ' ' → logprob: -13.443438529968262
    8. '   ' → logprob: -13.693438529968262
    9. '**)' → logprob: -14.193438529968262
    10. '）' → logprob: -15.568438529968262

Token 523: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7666464447975159
    2. '(m' → logprob: -1.266646385192871
    3. '2' → logprob: -1.391646385192871
    4. '(F' → logprob: -5.391646385192871
    5. 'm' → logprob: -8.766646385192871
    6. '(min' → logprob: -9.266646385192871
    7. ' (' → logprob: -10.016646385192871
    8. '((' → logprob: -10.266646385192871
    9. '(k' → logprob: -11.016646385192871
    10. '(pow' → logprob: -11.141646385192871

Token 524: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04000047966837883
    2. '<|end|>' → logprob: -3.9150004386901855
    3. '
' → logprob: -4.2900004386901855
    4. '    
' → logprob: -6.2900004386901855
    5. '	return' → logprob: -6.7900004386901855
    6. ' return' → logprob: -7.2900004386901855
    7. '<|end|>' → logprob: -7.5400004386901855
    8. ')' → logprob: -8.165000915527344
    9. 'return' → logprob: -8.415000915527344
    10. ' ' → logprob: -8.790000915527344

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19785542786121368
    2. '<|end|>' → logprob: -1.9478554725646973
    3. '
' → logprob: -4.822855472564697
    4. '	return' → logprob: -5.072855472564697
    5. 'return' → logprob: -5.572855472564697
    6. ')' → logprob: -5.697855472564697
    7. ' ' → logprob: -5.697855472564697
    8. ' return' → logprob: -5.697855472564697
    9. '    
' → logprob: -5.822855472564697
    10. '<|end|>' → logprob: -5.947855472564697

Token 526: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5193960666656494
    2. '   ' → logprob: -1.0193960666656494
    3. 'return' → logprob: -3.2693960666656494
    4. '	return' → logprob: -5.76939582824707
    5. ' ' → logprob: -6.26939582824707
    6. '
' → logprob: -7.14439582824707
    7. '    
' → logprob: -8.76939582824707
    8. ' 
' → logprob: -9.76939582824707
    9. 'eturn' → logprob: -10.01939582824707
    10. '  ' → logprob: -10.14439582824707

Token 527: ' output' (ID: 4733)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3140438199043274
    2. 'return' → logprob: -1.3140437602996826
    3. '   ' → logprob: -7.189043998718262
    4. '	return' → logprob: -11.439043998718262
    5. '
' → logprob: -12.064043998718262
    6. ' 
' → logprob: -13.064043998718262
    7. ' p' → logprob: -13.064043998718262
    8. ' ' → logprob: -13.189043998718262
    9. ' ' → logprob: -13.564043998718262
    10. 'r' → logprob: -14.814043998718262

Token 528: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30322757363319397
    2. ' return' → logprob: -1.4282275438308716
    3. '
' → logprob: -4.803227424621582
    4. 'return' → logprob: -4.928227424621582
    5. ' print' → logprob: -5.428227424621582
    6. 'print' → logprob: -7.178227424621582
    7. ' 
' → logprob: -8.303227424621582
    8. '    
' → logprob: -8.428227424621582
    9. ' ' → logprob: -8.803227424621582
    10. '\' → logprob: -8.928227424621582

Token 529: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00712689571082592
    2. '
' → logprob: -5.382126808166504
    3. 'return' → logprob: -6.632126808166504
    4. ' return' → logprob: -7.007126808166504
    5. '    
' → logprob: -9.132126808166504
    6. '	return' → logprob: -10.257126808166504
    7. ',' → logprob: -10.507126808166504
    8. '\' → logprob: -10.632126808166504
    9. '\n' → logprob: -10.757126808166504
    10. ')' → logprob: -11.257126808166504

Token 530: ' decimal' (ID: 26964)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.24490545690059662
    2. 'Fraction' → logprob: -2.369905471801758
    3. 'p' → logprob: -2.619905471801758
    4. 'str' → logprob: -3.494905471801758
    5. ' f' → logprob: -4.244905471801758
    6. 'print' → logprob: -5.869905471801758
    7. ' p' → logprob: -6.369905471801758
    8. ' str' → logprob: -7.994905471801758
    9. ' Fraction' → logprob: -7.994905471801758
    10. 'numer' → logprob: -8.119905471801758

Token 531: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48095250129699707
    2. '   ' → logprob: -1.105952501296997
    3. '    
' → logprob: -4.480952262878418
    4. ',' → logprob: -4.980952262878418
    5. 'print' → logprob: -4.980952262878418
    6. '\n' → logprob: -5.355952262878418
    7. ' 
' → logprob: -5.980952262878418
    8. ' =' → logprob: -5.980952262878418
    9. '\' → logprob: -6.105952262878418
    10. 'return' → logprob: -6.105952262878418

Token 532: ' r' (ID: 428)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -1.3445565700531006
    2. ' ' → logprob: -1.7195565700531006
    3. '12' → logprob: -1.7195565700531006
    4. '10' → logprob: -1.8445565700531006
    5. '15' → logprob: -2.4695565700531006
    6. '6' → logprob: -2.7195565700531006
    7. '20' → logprob: -3.0945565700531006
    8. ''' → logprob: -4.71955680847168
    9. 'print' → logprob: -4.96955680847168
    10. '7' → logprob: -5.84455680847168

Token 533: ' digits' (ID: 37806)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.058148812502622604
    2. 'f' → logprob: -3.6831488609313965
    3. ' f' → logprob: -4.5581488609313965
    4. '.quant' → logprob: -4.5581488609313965
    5. ' .' → logprob: -5.1831488609313965
    6. 'quant' → logprob: -6.8081488609313965
    7. '.prec' → logprob: -7.3081488609313965
    8. '.f' → logprob: -7.9331488609313965
    9. ''.' → logprob: -8.058148384094238
    10. 'format' → logprob: -8.183148384094238

Token 534: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6582546234130859
    2. '
' → logprob: -1.533254623413086
    3. ',' → logprob: -2.908254623413086
    4. '    
' → logprob: -3.533254623413086
    5. '\' → logprob: -3.658254623413086
    6. ':' → logprob: -3.658254623413086
    7. '\n' → logprob: -4.283254623413086
    8. 'result' → logprob: -4.658254623413086
    9. 'return' → logprob: -4.658254623413086
    10. ' =' → logprob: -4.658254623413086

Token 535: ' decimal' (ID: 26964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05410177633166313
    2. ''.' → logprob: -3.4291017055511475
    3. 'decimal' → logprob: -4.179101943969727
    4. '"."' → logprob: -5.929101943969727
    5. 'point' → logprob: -7.179101943969727
    6. '   ' → logprob: -7.554101943969727
    7. ' decimal' → logprob: -8.054101943969727
    8. '=' → logprob: -8.929101943969727
    9. 'the' → logprob: -9.304101943969727
    10. 'Decimal' → logprob: -9.554101943969727

Token 536: ' point' (ID: 2438)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9157019257545471
    2. '   ' → logprob: -0.9157019257545471
    3. '    
' → logprob: -2.4157018661499023
    4. '  
' → logprob: -4.290701866149902
    5. ',' → logprob: -4.665701866149902
    6. 'result' → logprob: -4.790701866149902
    7. 'output' → logprob: -4.915701866149902
    8. ' 
' → logprob: -5.040701866149902
    9. ' =' → logprob: -5.040701866149902
    10. ':' → logprob: -5.165701866149902

Token 537: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16813987493515015
    2. '
' → logprob: -2.168139934539795
    3. '    
' → logprob: -4.668139934539795
    4. 'output' → logprob: -4.668139934539795
    5. '```' → logprob: -5.668139934539795
    6. 'result' → logprob: -5.793139934539795
    7. ':' → logprob: -5.918139934539795
    8. 'p' → logprob: -6.293139934539795
    9. 'import' → logprob: -6.293139934539795
    10. ',' → logprob: -6.543139934539795

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02593643218278885
    2. '```' → logprob: -4.650936603546143
    3. '    
' → logprob: -5.150936603546143
    4. '
' → logprob: -5.400936603546143
    5. ' return' → logprob: -6.650936603546143
    6. ' p' → logprob: -6.650936603546143
    7. 'return' → logprob: -7.025936603546143
    8. ' 
' → logprob: -7.650936603546143
    9. 'p' → logprob: -8.150936126708984
    10. '``' → logprob: -8.275936126708984

Token 539: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14142775535583496
    2. ' p' → logprob: -3.141427755355835
    3. 'p' → logprob: -3.641427755355835
    4. 'result' → logprob: -4.016427993774414
    5. ' s' → logprob: -5.016427993774414
    6. ' result' → logprob: -5.141427993774414
    7. 'res' → logprob: -5.266427993774414
    8. 'val' → logprob: -6.016427993774414
    9. ' res' → logprob: -6.141427993774414
    10. 's' → logprob: -6.391427993774414

Token 540: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5785303115844727
    2. 'p' → logprob: -1.8285303115844727
    3. 's' → logprob: -1.9535303115844727
    4. 'val' → logprob: -2.3285303115844727
    5. 'res' → logprob: -2.4535303115844727
    6. 'result' → logprob: -2.7035303115844727
    7. 'q' → logprob: -2.8285303115844727
    8. 'decimal' → logprob: -2.8285303115844727
    9. 'num' → logprob: -3.9535303115844727
    10. 'dec' → logprob: -4.203530311584473

Token 541: ' with' (ID: 483)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.06250254809856415
    2. '(' → logprob: -3.43750262260437
    3. '(round' → logprob: -4.062502384185791
    4. '(format' → logprob: -5.312502384185791
    5. '("{' → logprob: -5.937502384185791
    6. '('{' → logprob: -6.562502384185791
    7. '(str' → logprob: -6.937502384185791
    8. '("' → logprob: -7.312502384185791
    9. '('' → logprob: -7.937502384185791
    10. '((' → logprob: -9.56250286102295

Token 542: ' trailing' (ID: 57985)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.11229811608791351
    2. 'format' → logprob: -2.362298011779785
    3. 'print' → logprob: -4.737298011779785
    4. '"{' → logprob: -6.612298011779785
    5. ''{' → logprob: -7.362298011779785
    6. ''' → logprob: -7.862298011779785
    7. ' f' → logprob: -8.362298011779785
    8. ''.' → logprob: -8.487298011779785
    9. '"' → logprob: -8.737298011779785
    10. '(f' → logprob: -9.362298011779785

Token 543: ' zeros' (ID: 42274)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4748813807964325
    2. '.' → logprob: -1.7248814105987549
    3. '_' → logprob: -2.224881410598755
    4. ' f' → logprob: -3.724881410598755
    5. '_fraction' → logprob: -4.099881172180176
    6. ''' → logprob: -4.599881172180176
    7. ' ' → logprob: -4.849881172180176
    8. '0' → logprob: -5.099881172180176
    9. '_format' → logprob: -5.599881172180176
    10. ' =' → logprob: -5.724881172180176

Token 544: ' up' (ID: 869)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6663605570793152
    2. '
' → logprob: -1.29136061668396
    3. ':' → logprob: -3.16636061668396
    4. ' =' → logprob: -3.79136061668396
    5. 'result' → logprob: -4.041360378265381
    6. '.' → logprob: -4.291360378265381
    7. ',' → logprob: -4.291360378265381
    8. '=' → logprob: -4.416360378265381
    9. 'output' → logprob: -4.416360378265381
    10. 'return' → logprob: -4.541360378265381

Token 545: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.910102367401123
    2. '   ' → logprob: -2.285102367401123
    3. 'f' → logprob: -2.535102367401123
    4. ':' → logprob: -2.535102367401123
    5. '('' → logprob: -2.660102367401123
    6. '=' → logprob: -3.035102367401123
    7. ' =' → logprob: -3.285102367401123
    8. '"' → logprob: -3.660102367401123
    9. '```' → logprob: -3.660102367401123
    10. 'print' → logprob: -4.035102367401123

Token 546: ' r' (ID: 428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12060777842998505
    2. 'r' → logprob: -2.370607852935791
    3. 'format' → logprob: -4.870607852935791
    4. '"."' → logprob: -5.370607852935791
    5. ''.' → logprob: -5.495607852935791
    6. '.' → logprob: -6.245607852935791
    7. '{' → logprob: -7.620607852935791
    8. '"{' → logprob: -8.120607376098633
    9. ' f' → logprob: -8.245607376098633
    10. ''{' → logprob: -8.870607376098633

Token 547: ' decimal' (ID: 26964)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6584505438804626
    2. '
' → logprob: -0.9084505438804626
    3. 'print' → logprob: -4.533450603485107
    4. '    
' → logprob: -4.783450603485107
    5. '```' → logprob: -4.908450603485107
    6. ',' → logprob: -5.033450603485107
    7. 'import' → logprob: -5.283450603485107
    8. 'def' → logprob: -5.408450603485107
    9. 'p' → logprob: -5.408450603485107
    10. 'output' → logprob: -5.408450603485107

Token 548: ' places' (ID: 9610)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0150030851364136
    2. '   ' → logprob: -1.3900030851364136
    3. '_format' → logprob: -2.640003204345703
    4. '.
' → logprob: -3.140003204345703
    5. '```' → logprob: -3.390003204345703
    6. ' =' → logprob: -3.640003204345703
    7. '=' → logprob: -3.890003204345703
    8. ')' → logprob: -3.890003204345703
    9. '_str' → logprob: -3.890003204345703
    10. '_output' → logprob: -4.140003204345703

Token 549: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29902583360671997
    2. '
' → logprob: -1.6740257740020752
    3. 'print' → logprob: -3.549025774002075
    4. '```' → logprob: -4.299026012420654
    5. '    
' → logprob: -5.049026012420654
    6. ',' → logprob: -5.549026012420654
    7. ':' → logprob: -5.674026012420654
    8. ':
' → logprob: -5.674026012420654
    9. 'output' → logprob: -6.424026012420654
    10. ')' → logprob: -6.799026012420654

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014874311164021492
    2. '```' → logprob: -5.389874458312988
    3. 'result' → logprob: -5.514874458312988
    4. 'output' → logprob: -6.264874458312988
    5. '
' → logprob: -6.389874458312988
    6. '    
' → logprob: -7.139874458312988
    7. 'return' → logprob: -7.764874458312988
    8. 'p' → logprob: -8.389874458312988
    9. 'format' → logprob: -8.514874458312988
    10. 'out' → logprob: -8.514874458312988

Token 551: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6454360485076904
    2. 'num' → logprob: -2.0204360485076904
    3. 'q' → logprob: -2.7704360485076904
    4. '   ' → logprob: -2.8954360485076904
    5. 'res' → logprob: -3.0204360485076904
    6. 'val' → logprob: -3.3954360485076904
    7. 'decimal' → logprob: -3.5204360485076904
    8. 'den' → logprob: -3.7704360485076904
    9. 'numer' → logprob: -3.7704360485076904
    10. 'result' → logprob: -4.1454362869262695

Token 552: ' convert' (ID: 8452)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8686863780021667
    2. '   ' → logprob: -2.3686864376068115
    3. 'val' → logprob: -2.6186864376068115
    4. 'num' → logprob: -2.8686864376068115
    5. 'scale' → logprob: -2.9936864376068115
    6. 'res' → logprob: -3.1186864376068115
    7. 's' → logprob: -3.2436864376068115
    8. 'q' → logprob: -3.2436864376068115
    9. 'value' → logprob: -3.3686864376068115
    10. 'den' → logprob: -3.3686864376068115

Token 553: ' fraction' (ID: 33763)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9500271081924438
    2. 'val' → logprob: -1.8250271081924438
    3. 'value' → logprob: -2.2000269889831543
    4. 'num' → logprob: -2.3250269889831543
    5. 'numer' → logprob: -2.7000269889831543
    6. 'dec' → logprob: -2.9500269889831543
    7. 'decimal' → logprob: -3.5750269889831543
    8. '   ' → logprob: -3.8250269889831543
    9. ' numerator' → logprob: -4.200026988983154
    10. 'result' → logprob: -4.700026988983154

Token 554: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0987482070922852
    2. ' =' → logprob: -1.5987482070922852
    3. 'numer' → logprob: -2.473748207092285
    4. 'num' → logprob: -2.598748207092285
    5. '_num' → logprob: -2.973748207092285
    6. '_n' → logprob: -3.098748207092285
    7. 'p' → logprob: -3.223748207092285
    8. 'value' → logprob: -3.598748207092285
    9. '_decimal' → logprob: -3.848748207092285
    10. 'to' → logprob: -4.098748207092285

Token 555: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.5765520930290222
    2. 'Decimal' → logprob: -0.8265520930290222
    3. 'float' → logprob: -8.076552391052246
    4. 'p' → logprob: -8.951552391052246
    5. 'dec' → logprob: -9.576552391052246
    6. ' decimal' → logprob: -10.326552391052246
    7. ' Decimal' → logprob: -10.701552391052246
    8. 'value' → logprob: -10.701552391052246
    9. '_decimal' → logprob: -11.451552391052246
    10. 'numer' → logprob: -12.576552391052246

Token 556: ' string' (ID: 1621)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.7529234886169434
    2. 'num' → logprob: -1.7529234886169434
    3. ' =' → logprob: -2.3779234886169434
    4. 'decimal' → logprob: -2.7529234886169434
    5. '=' → logprob: -2.8779234886169434
    6. '   ' → logprob: -3.5029234886169434
    7. ' numerator' → logprob: -3.7529234886169434
    8. 'value' → logprob: -4.002923488616943
    9. '()' → logprob: -4.127923488616943
    10. 'p' → logprob: -4.752923488616943

Token 557: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04543961212038994
    2. 'num' → logprob: -4.545439720153809
    3. 'numer' → logprob: -4.545439720153809
    4. 'decimal' → logprob: -5.545439720153809
    5. ')' → logprob: -5.670439720153809
    6. ')
' → logprob: -5.920439720153809
    7. '    
' → logprob: -6.045439720153809
    8. '```' → logprob: -6.170439720153809
    9. 'value' → logprob: -6.420439720153809
    10. '
' → logprob: -6.545439720153809

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07169527560472488
    2. 'numer' → logprob: -3.571695327758789
    3. 'num' → logprob: -3.821695327758789
    4. '```' → logprob: -5.571695327758789
    5. 'decimal' → logprob: -5.696695327758789
    6. ' numerator' → logprob: -6.571695327758789
    7. 'd' → logprob: -6.946695327758789
    8. ')' → logprob: -6.946695327758789
    9. 'result' → logprob: -7.071695327758789
    10. 'p' → logprob: -7.196695327758789

Token 559: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.46228185296058655
    2. 'q' → logprob: -1.9622818231582642
    3. 'numer' → logprob: -2.0872819423675537
    4. 'decimal' → logprob: -3.8372819423675537
    5. '   ' → logprob: -4.087281703948975
    6. ' numerator' → logprob: -4.212281703948975
    7. 'den' → logprob: -4.212281703948975
    8. 'integer' → logprob: -4.337281703948975
    9. 'from' → logprob: -5.212281703948975
    10. 'p' → logprob: -5.712281703948975

Token 560: ' p' (ID: 275)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0470008850097656
    2. 'numer' → logprob: -1.1720008850097656
    3. 'q' → logprob: -1.7970008850097656
    4. 'decimal' → logprob: -2.5470008850097656
    5. 'from' → logprob: -3.4220008850097656
    6. 'integer' → logprob: -3.9220008850097656
    7. 'p' → logprob: -4.297000885009766
    8. 'den' → logprob: -4.547000885009766
    9. 'dec' → logprob: -5.297000885009766
    10. 'value' → logprob: -5.672000885009766

Token 561: ' is' (ID: 382)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.5508132576942444
    2. '_n' → logprob: -1.5508131980895996
    3. '_float' → logprob: -2.5508131980895996
    4. '_decimal' → logprob: -2.5508131980895996
    5. '=' → logprob: -3.8008131980895996
    6. ' =' → logprob: -4.6758131980896
    7. 'num' → logprob: -5.3008131980896
    8. '_val' → logprob: -5.5508131980896
    9. '_value' → logprob: -5.8008131980896
    10. '_dec' → logprob: -5.8008131980896

Token 562: ' Fraction' (ID: 112108)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3469725251197815
    2. ' p' → logprob: -1.3469724655151367
    3. 'Fraction' → logprob: -4.096972465515137
    4. 'float' → logprob: -5.096972465515137
    5. ' float' → logprob: -5.346972465515137
    6. 'Decimal' → logprob: -5.596972465515137
    7. ' Fraction' → logprob: -6.471972465515137
    8. ' Decimal' → logprob: -8.221972465515137
    9. '   ' → logprob: -10.096972465515137
    10. 'Float' → logprob: -10.971972465515137

Token 563: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32921770215034485
    2. 'num' → logprob: -1.9542176723480225
    3. 'numer' → logprob: -2.2042176723480225
    4. '
' → logprob: -4.454217910766602
    5. ' numerator' → logprob: -5.454217910766602
    6. '```' → logprob: -5.704217910766602
    7. 'decimal' → logprob: -6.579217910766602
    8. 'p' → logprob: -6.829217910766602
    9. '_num' → logprob: -7.079217910766602
    10. ' =' → logprob: -7.329217910766602

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1827951818704605
    2. 'num' → logprob: -2.182795286178589
    3. 'numer' → logprob: -3.182795286178589
    4. '```' → logprob: -5.93279504776001
    5. 'q' → logprob: -6.05779504776001
    6. 'decimal' → logprob: -6.18279504776001
    7. '
' → logprob: -6.80779504776001
    8. 'value' → logprob: -6.80779504776001
    9. 'p' → logprob: -7.18279504776001
    10. 'val' → logprob: -7.30779504776001

Token 565: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8392218351364136
    2. 'numer' → logprob: -1.3392218351364136
    3. 'integer' → logprob: -1.8392218351364136
    4. 'q' → logprob: -2.464221954345703
    5. 'from' → logprob: -4.214221954345703
    6. 'decimal' → logprob: -4.464221954345703
    7. '   ' → logprob: -4.839221954345703
    8. 'den' → logprob: -5.089221954345703
    9. 'get' → logprob: -5.714221954345703
    10. 'scale' → logprob: -5.839221954345703

Token 566: ' get' (ID: 717)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9571845531463623
    2. 'numer' → logprob: -1.0821845531463623
    3. 'integer' → logprob: -2.0821845531463623
    4. 'q' → logprob: -2.8321845531463623
    5. 'from' → logprob: -3.2071845531463623
    6. 'get' → logprob: -4.207184791564941
    7. 'decimal' → logprob: -4.457184791564941
    8. 'den' → logprob: -5.082184791564941
    9. '   ' → logprob: -5.207184791564941
    10. 'scale' → logprob: -5.582184791564941

Token 567: ' integer' (ID: 16336)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.24318362772464752
    2. 'num' → logprob: -1.6181836128234863
    3. 'q' → logprob: -5.493183612823486
    4. 'decimal' → logprob: -5.618183612823486
    5. '   ' → logprob: -6.243183612823486
    6. 'den' → logprob: -6.493183612823486
    7. 'integer' → logprob: -6.868183612823486
    8. ' numerator' → logprob: -6.868183612823486
    9. 'scale' → logprob: -6.993183612823486
    10. 'p' → logprob: -7.118183612823486

Token 568: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.07891997694969177
    2. 'part' → logprob: -2.5789198875427246
    3. '_p' → logprob: -10.953920364379883
    4. 'p' → logprob: -12.453920364379883
    5. '_' → logprob: -12.703920364379883
    6. ' part' → logprob: -12.828920364379883
    7. '
' → logprob: -13.328920364379883
    8. '_value' → logprob: -14.703920364379883
    9. '_port' → logprob: -14.953920364379883
    10. '_par' → logprob: -15.328920364379883

Token 569: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35965409874916077
    2. '=' → logprob: -1.3596540689468384
    3. 'i' → logprob: -4.359653949737549
    4. 'int' → logprob: -4.859653949737549
    5. '   ' → logprob: -5.109653949737549
    6. ',' → logprob: -5.734653949737549
    7. 'p' → logprob: -5.734653949737549
    8. 'num' → logprob: -5.984653949737549
    9. 'part' → logprob: -6.859653949737549
    10. '```' → logprob: -6.984653949737549

Token 570: ' fractional' (ID: 136350)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -0.4700678288936615
    2. 'decimal' → logprob: -1.5950678586959839
    3. 'frac' → logprob: -2.5950677394866943
    4. 'fraction' → logprob: -3.3450677394866943
    5. 'den' → logprob: -3.7200677394866943
    6. ' numerator' → logprob: -4.220067977905273
    7. ' remainder' → logprob: -4.470067977905273
    8. 'p' → logprob: -5.095067977905273
    9. 're' → logprob: -5.720067977905273
    10. ' decimal' → logprob: -7.220067977905273

Token 571: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.005331709049642086
    2. 'part' → logprob: -5.880331516265869
    3. '_p' → logprob: -6.630331516265869
    4. '_' → logprob: -6.880331516265869
    5. ',' → logprob: -9.130331993103027
    6. '_parts' → logprob: -11.005331993103027
    7. '=' → logprob: -11.130331993103027
    8. ' part' → logprob: -11.755331993103027
    9. 'p' → logprob: -12.255331993103027
    10. ' =' → logprob: -12.255331993103027

Token 572: ' separately' (ID: 37741)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9341829419136047
    2. 'num' → logprob: -1.43418288230896
    3. ',' → logprob: -2.05918288230896
    4. '=' → logprob: -2.05918288230896
    5. 'numer' → logprob: -3.30918288230896
    6. 'int' → logprob: -3.93418288230896
    7. '_num' → logprob: -4.559183120727539
    8. '   ' → logprob: -4.684183120727539
    9. 'p' → logprob: -4.809183120727539
    10. 'integer' → logprob: -5.059183120727539

Token 573: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.281559556722641
    2. '
' → logprob: -2.531559467315674
    3. '    
' → logprob: -2.656559467315674
    4. 'int' → logprob: -3.656559467315674
    5. 'i' → logprob: -3.781559467315674
    6. 'integer' → logprob: -4.031559467315674
    7. 'num' → logprob: -5.781559467315674
    8. '  
' → logprob: -5.781559467315674
    9. '```' → logprob: -5.906559467315674
    10. ' =' → logprob: -6.156559467315674

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020153384655714035
    2. '    
' → logprob: -5.270153522491455
    3. 'integer' → logprob: -5.395153522491455
    4. 'int' → logprob: -5.520153522491455
    5. '```' → logprob: -5.895153522491455
    6. 'num' → logprob: -6.520153522491455
    7. '
' → logprob: -7.645153522491455
    8. 'numer' → logprob: -7.895153522491455
    9. '``' → logprob: -8.020153045654297
    10. 'ip' → logprob: -8.395153045654297

Token 575: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8627291917800903
    2. 'integer' (adapté à ' integer') → logprob: -1.2377291917800903
    3. '   ' → logprob: -1.9877291917800903
    4. 'i' → logprob: -2.737729072570801
    5. 'num' → logprob: -3.612729072570801
    6. 'q' → logprob: -4.112729072570801
    7. ' integer' → logprob: -4.612729072570801
    8. 'ip' → logprob: -5.112729072570801
    9. 'numer' → logprob: -5.112729072570801
    10. '```' → logprob: -5.362729072570801

Token 576: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.013355156406760216
    2. '_' → logprob: -4.513355255126953
    3. ',' → logprob: -6.513355255126953
    4. 'part' → logprob: -8.013355255126953
    5. '_parts' → logprob: -8.763355255126953
    6. '_p' → logprob: -9.263355255126953
    7. '_val' → logprob: -10.013355255126953
    8. '_value' → logprob: -10.513355255126953
    9. '=' → logprob: -10.513355255126953
    10. ',_' → logprob: -10.638355255126953

Token 577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41982871294021606
    2. ' =' → logprob: -1.5448286533355713
    3. ',' → logprob: -2.0448286533355713
    4. '=int' → logprob: -10.669828414916992
    5. ',p' → logprob: -10.669828414916992
    6. '=p' → logprob: -10.794828414916992
    7. ' ,' → logprob: -12.419828414916992
    8. ' ' → logprob: -12.794828414916992
    9. '   ' → logprob: -13.044828414916992
    10. '=
' → logprob: -13.044828414916992

Token 578: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00015288250870071352
    2. ' p' → logprob: -9.000152587890625
    3. 'int' → logprob: -10.875152587890625
    4. 'str' → logprob: -11.500152587890625
    5. 'abs' → logprob: -15.750152587890625
    6. '0' → logprob: -15.875152587890625
    7. '   ' → logprob: -16.875152587890625
    8. '(p' → logprob: -17.500152587890625
    9. ''p' → logprob: -18.125152587890625
    10. ' ' → logprob: -18.500152587890625

Token 579: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00043519894825294614
    2. '.' → logprob: -7.8754353523254395
    3. 'numer' → logprob: -10.625434875488281
    4. '//' → logprob: -11.875434875488281
    5. '.__' → logprob: -12.000434875488281
    6. ' numerator' → logprob: -12.500434875488281
    7. '._' → logprob: -12.750434875488281
    8. '.den' → logprob: -12.875434875488281
    9. 'umerator' → logprob: -13.250434875488281
    10. '.num' → logprob: -13.625434875488281

Token 580: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.0005140714929439127
    2. 'um' → logprob: -8.125514030456543
    3. '//' → logprob: -9.125514030456543
    4. 'umer' → logprob: -9.250514030456543
    5. '```' → logprob: -11.875514030456543
    6. 'ums' → logprob: -13.250514030456543
    7. 'ominator' → logprob: -14.125514030456543
    8. '
' → logprob: -14.250514030456543
    9. '`' → logprob: -15.375514030456543
    10. '   ' → logprob: -15.375514030456543

Token 581: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.11284158378839493
    2. ' //' → logprob: -2.2378416061401367
    3. '```' → logprob: -11.487841606140137
    4. '#' → logprob: -12.862841606140137
    5. '//=' → logprob: -13.237841606140137
    6. ' ' → logprob: -13.737841606140137
    7. '`' → logprob: -14.237841606140137
    8. '//
' → logprob: -14.862841606140137
    9. 'div' → logprob: -14.987841606140137
    10. ',//' → logprob: -15.362841606140137

Token 582: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.128163257315464e-07
    2. ' p' → logprob: -15.25
    3. '	p' → logprob: -25.375
    4. '   ' → logprob: -25.5
    5. '<p' → logprob: -25.625
    6. ')p' → logprob: -26.25
    7. ' ' → logprob: -26.5
    8. '_p' → logprob: -26.75
    9. '  ' → logprob: -26.875
    10. '
' → logprob: -27.25

Token 583: '.den' (ID: 152740)
  Prédit: '.den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.den' → logprob: -0.0011859419755637646
    2. 'den' → logprob: -6.751185894012451
    3. '.p' → logprob: -11.37618637084961
    4. '.' → logprob: -13.62618637084961
    5. 'p' → logprob: -14.00118637084961
    6. 'Den' → logprob: -14.12618637084961
    7. '_den' → logprob: -14.37618637084961
    8. ' denominator' → logprob: -14.37618637084961
    9. '.d' → logprob: -15.62618637084961
    10. '_DEN' → logprob: -16.75118637084961

Token 584: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -7.040457421680912e-05
    2. 'umerator' → logprob: -9.625070571899414
    3. 'p' → logprob: -13.375070571899414
    4. 'om' → logprob: -13.375070571899414
    5. 'omin' → logprob: -14.375070571899414
    6. '```' → logprob: -15.375070571899414
    7. 'omi' → logprob: -16.500070571899414
    8. 'operator' → logprob: -16.625070571899414
    9. 'umin' → logprob: -16.875070571899414
    10. 'inator' → logprob: -17.000070571899414

Token 585: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.865704357624054
    2. 'fraction' → logprob: -0.990704357624054
    3. ',' → logprob: -2.490704298019409
    4. '```' → logprob: -3.240704298019409
    5. 'decimal' → logprob: -3.865704298019409
    6. 'print' → logprob: -4.490704536437988
    7. '   ' → logprob: -4.865704536437988
    8. ')' → logprob: -5.115704536437988
    9. 'integer' → logprob: -5.240704536437988
    10. '<|end|>' → logprob: -5.365704536437988

Token 586: '   ' (ID: 271)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.14983971416950226
    2. 'decimal' → logprob: -2.3998396396636963
    3. '```' → logprob: -4.024839878082275
    4. '.' → logprob: -4.399839878082275
    5. ' remainder' → logprob: -5.899839878082275
    6. '`' → logprob: -6.274839878082275
    7. 're' → logprob: -6.274839878082275
    8. 'rest' → logprob: -6.649839878082275
    9. 'frac' → logprob: -6.649839878082275
    10. 'result' → logprob: -6.774839878082275

Token 587: ' remainder' (ID: 47056)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.18876759707927704
    2. 'decimal' → logprob: -2.438767671585083
    3. ' remainder' → logprob: -3.063767671585083
    4. ' fractional' → logprob: -4.438767433166504
    5. 'frac' → logprob: -4.813767433166504
    6. '```' → logprob: -5.938767433166504
    7. ' decimal' → logprob: -5.938767433166504
    8. '.' → logprob: -5.938767433166504
    9. 're' → logprob: -6.063767433166504
    10. 'rem' → logprob: -6.938767433166504

Token 588: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931498050689697
    2. ' =' → logprob: -0.6931498050689697
    3. '=p' → logprob: -14.31814956665039
    4. '   ' → logprob: -14.56814956665039
    5. '```' → logprob: -14.81814956665039
    6. ')' → logprob: -15.06814956665039
    7. ' ' → logprob: -15.31814956665039
    8. ',' → logprob: -15.81814956665039
    9. '    ' → logprob: -15.94314956665039
    10. '_' → logprob: -16.69314956665039

Token 589: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02344299480319023
    2. ' p' → logprob: -3.7734429836273193
    3. '(p' → logprob: -8.773443222045898
    4. ' (' → logprob: -10.148443222045898
    5. '   ' → logprob: -13.398443222045898
    6. ' ' → logprob: -13.648443222045898
    7. '(' → logprob: -14.148443222045898
    8. '	p' → logprob: -16.3984432220459
    9. ' ' → logprob: -17.1484432220459
    10. '((' → logprob: -17.2734432220459

Token 590: '.n' (ID: 1835)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6784494519233704
    2. '.n' → logprob: -1.1784493923187256
    3. '%' → logprob: -1.9284493923187256
    4. '%n' → logprob: -3.4284493923187256
    5. 'umerator' → logprob: -5.553449630737305
    6. 'numer' → logprob: -7.053449630737305
    7. '.' → logprob: -7.428449630737305
    8. ' numerator' → logprob: -7.553449630737305
    9. ' .' → logprob: -8.178449630737305
    10. ' *' → logprob: -8.928449630737305

Token 591: 'umerator' (ID: 152035)
  Prédit: 'umerator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umerator' → logprob: -0.003324580378830433
    2. 'um' → logprob: -6.003324508666992
    3. 'umer' → logprob: -7.378324508666992
    4. 'numer' → logprob: -9.503324508666992
    5. 'den' → logprob: -9.878324508666992
    6. '%' → logprob: -10.003324508666992
    7. 'ominator' → logprob: -10.503324508666992
    8. 'ume' → logprob: -11.878324508666992
    9. 'p' → logprob: -12.003324508666992
    10. 're' → logprob: -12.253324508666992

Token 592: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2014208436012268
    2. '%' → logprob: -1.701420783996582
    3. ' ' → logprob: -12.701420783996582
    4. '```' → logprob: -13.576420783996582
    5. '%x' → logprob: -14.576420783996582
    6. '*' → logprob: -14.701420783996582
    7. '%i' → logprob: -14.701420783996582
    8. '%n' → logprob: -14.826420783996582
    9. '%s' → logprob: -14.951420783996582
    10. '%d' → logprob: -15.201420783996582

Token 593: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001234428636962548
    2. ' p' → logprob: -9.000123023986816
    3. ' ' → logprob: -20.625123977661133
    4. '(p' → logprob: -21.125123977661133
    5. '	p' → logprob: -21.750123977661133
    6. '   ' → logprob: -22.375123977661133
    7. '<p' → logprob: -23.625123977661133
    8. '  ' → logprob: -23.750123977661133
    9. ')p' → logprob: -23.750123977661133
    10. '_p' → logprob: -24.375123977661133

Token 594: '.den' (ID: 152740)
  Prédit: '.den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.den' → logprob: -3.011373155459296e-05
    2. '.p' → logprob: -11.000030517578125
    3. 'den' → logprob: -11.875030517578125
    4. 'p' → logprob: -12.625030517578125
    5. '.' → logprob: -13.375030517578125
    6. '.d' → logprob: -15.000030517578125
    7. 'umerator' → logprob: -15.125030517578125
    8. ' .' → logprob: -15.375030517578125
    9. '.n' → logprob: -15.625030517578125
    10. ' denominator' → logprob: -16.125030517578125

Token 595: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -2.0339031834737398e-05
    2. 'umerator' → logprob: -11.125020027160645
    3. 'om' → logprob: -12.750020027160645
    4. 'omin' → logprob: -13.875020027160645
    5. 'inator' → logprob: -14.000020027160645
    6. 'imator' → logprob: -15.625020027160645
    7. 'operator' → logprob: -15.875020027160645
    8. 'orm' → logprob: -16.25002098083496
    9. 'ator' → logprob: -16.62502098083496
    10. 'den' → logprob: -16.75002098083496

Token 596: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1807136535644531
    2. 'decimal' → logprob: -1.3057136535644531
    3. 'fraction' → logprob: -1.4307136535644531
    4. '   ' → logprob: -2.930713653564453
    5. 'res' → logprob: -3.430713653564453
    6. '```' → logprob: -3.430713653564453
    7. 'output' → logprob: -4.055713653564453
    8. '.' → logprob: -4.805713653564453
    9. 'integer' → logprob: -5.055713653564453
    10. ' decimal' → logprob: -5.180713653564453

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29501694440841675
    2. 'result' → logprob: -2.2950170040130615
    3. 'output' → logprob: -3.1700170040130615
    4. '```' → logprob: -3.2950170040130615
    5. 'decimal' → logprob: -3.4200170040130615
    6. '.' → logprob: -4.670016765594482
    7. '    
' → logprob: -4.920016765594482
    8. 'digits' → logprob: -5.295016765594482
    9. 'fraction' → logprob: -5.670016765594482
    10. 'r' → logprob: -6.420016765594482

Token 598: ' decimal' (ID: 26964)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.7749133706092834
    2. 'result' → logprob: -1.2749133110046387
    3. 'decimal' (adapté à ' decimal') → logprob: -1.7749133110046387
    4. 'res' → logprob: -2.5249133110046387
    5. 'digits' → logprob: -4.774913311004639
    6. 'frac' → logprob: -6.649913311004639
    7. 'dec' → logprob: -8.399913787841797
    8. '   ' → logprob: -9.399913787841797
    9. '```' → logprob: -9.399913787841797
    10. 'output' → logprob: -10.649913787841797

Token 599: '_digits' (ID: 108638)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.5622025728225708
    2. '_parts' → logprob: -1.1872025728225708
    3. '_digits' → logprob: -2.1872024536132812
    4. '_str' → logprob: -4.937202453613281
    5. '_places' → logprob: -5.937202453613281
    6. '_' → logprob: -7.062202453613281
    7. '_points' → logprob: -7.187202453613281
    8. '_point' → logprob: -8.062202453613281
    9. '_string' → logprob: -8.437202453613281
    10. 'part' → logprob: -8.812202453613281

Token 600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761582851409912
    2. ' =' → logprob: -0.8261582851409912
    3. '=[]' → logprob: -8.57615852355957
    4. '   ' → logprob: -10.57615852355957
    5. '[]' → logprob: -13.70115852355957
    6. '    ' → logprob: -14.32615852355957
    7. ',' → logprob: -14.45115852355957
    8. '_' → logprob: -14.70115852355957
    9. '=[]
' → logprob: -14.82615852355957
    10. '[:]' → logprob: -15.07615852355957

Token 601: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -6.153795766294934e-06
    2. '[]
' → logprob: -12.250005722045898
    3. '[' → logprob: -14.250005722045898
    4. ' []' → logprob: -15.250005722045898
    5. '[]}' → logprob: -16.0000057220459
    6. '[]"' → logprob: -16.3750057220459
    7. '[],' → logprob: -16.7500057220459
    8. '[]

' → logprob: -17.3750057220459
    9. '""' → logprob: -17.6250057220459
    10. '[])' → logprob: -18.2500057220459

Token 602: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004987658932805061
    2. ' for' → logprob: -5.504987716674805
    3. 'while' → logprob: -7.129987716674805
    4. '   ' → logprob: -9.629987716674805
    5. '```' → logprob: -10.629987716674805
    6. '    
' → logprob: -12.129987716674805
    7. '    ' → logprob: -12.254987716674805
    8. ' while' → logprob: -12.879987716674805
    9. '	for' → logprob: -14.004987716674805
    10. ' ' → logprob: -14.254987716674805

Token 603: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.988221684878226e-06
    2. ' for' → logprob: -12.000006675720215
    3. 'while' → logprob: -14.125006675720215
    4. '    
' → logprob: -18.25000762939453
    5. '   ' → logprob: -18.37500762939453
    6. '```' → logprob: -18.37500762939453
    7. '	for' → logprob: -18.50000762939453
    8. '  
' → logprob: -19.62500762939453
    9. ' 
' → logprob: -20.75000762939453
    10. 'den' → logprob: -21.37500762939453

Token 604: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005170515505596995
    2. '_i' → logprob: -7.625516891479492
    3. '_range' → logprob: -11.375516891479492
    4. 'i' → logprob: -11.750516891479492
    5. '_in' → logprob: -12.375516891479492
    6. ' _' → logprob: -12.875516891479492
    7. ' in' → logprob: -13.750516891479492
    8. '_
' → logprob: -14.250516891479492
    9. '_=' → logprob: -15.000516891479492
    10. ' i' → logprob: -15.875516891479492

Token 605: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.24204987287521362
    2. ' in' → logprob: -1.7420499324798584
    3. 'range' → logprob: -3.2420499324798584
    4. ' range' → logprob: -8.117050170898438
    5. ' ' → logprob: -8.742050170898438
    6. '_' → logprob: -8.992050170898438
    7. 'i' → logprob: -10.367050170898438
    8. '   ' → logprob: -10.617050170898438
    9. '0' → logprob: -10.617050170898438
    10. '1' → logprob: -10.867050170898438

Token 606: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -17.875036239624023
    4. ' ' → logprob: -18.625036239624023
    5. '   ' → logprob: -19.000036239624023
    6. 'r' → logprob: -19.250036239624023
    7. '  ' → logprob: -20.125036239624023
    8. '[' → logprob: -20.250036239624023
    9. '	range' → logprob: -20.375036239624023
    10. '    ' → logprob: -21.750036239624023

Token 607: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.696889623621246e-06
    2. ' r' → logprob: -12.87500286102295
    3. '(r' → logprob: -16.875001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '	r' → logprob: -20.375001907348633
    6. '[r' → logprob: -20.500001907348633
    7. '{' → logprob: -21.750001907348633
    8. '(' → logprob: -22.750001907348633
    9. ',r' → logprob: -22.750001907348633
    10. '{
' → logprob: -22.875001907348633

Token 608: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10036421567201614
    2. '):' → logprob: -2.3503642082214355
    3. '   ' → logprob: -9.100364685058594
    4. '):
' → logprob: -10.975364685058594
    5. ':' → logprob: -11.600364685058594
    6. '+' → logprob: -11.850364685058594
    7. '*' → logprob: -12.600364685058594
    8. '       ' → logprob: -12.725364685058594
    9. ':
' → logprob: -13.100364685058594
    10. '():
' → logprob: -13.850364685058594

Token 609: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7020435929298401
    2. '       ' → logprob: -0.7020435929298401
    3. 're' → logprob: -4.952043533325195
    4. '```' → logprob: -6.577043533325195
    5. ' remainder' → logprob: -8.077043533325195
    6. '``' → logprob: -10.577043533325195
    7. '	re' → logprob: -10.577043533325195
    8. 'rest' → logprob: -10.702043533325195
    9. '    
' → logprob: -13.077043533325195
    10. '
' → logprob: -13.327043533325195

Token 610: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0005096645909361541
    2. '   ' → logprob: -8.000509262084961
    3. ' remainder' → logprob: -8.750509262084961
    4. '	re' → logprob: -11.750509262084961
    5. '       ' → logprob: -12.625509262084961
    6. '
' → logprob: -13.250509262084961
    7. '```' → logprob: -13.375509262084961
    8. '           ' → logprob: -14.875509262084961
    9. 'rem' → logprob: -15.250509262084961
    10. 'rema' → logprob: -15.750509262084961

Token 611: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -2.7729658540920354e-05
    2. '=' → logprob: -10.625027656555176
    3. ' *=' → logprob: -13.750027656555176
    4. '<<' → logprob: -14.000027656555176
    5. '*' → logprob: -14.250027656555176
    6. '   ' → logprob: -14.500027656555176
    7. '%=' → logprob: -15.875027656555176
    8. '\' → logprob: -16.500028610229492
    9. '```' → logprob: -16.875028610229492
    10. '<' → logprob: -17.875028610229492

Token 612: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '１０' → logprob: -23.125
    3. 'Decimal' → logprob: -25.125
    4. ' ' → logprob: -26.0
    5. '```' → logprob: -26.5
    6. '
' → logprob: -26.625
    7. '۱۰' → logprob: -27.25
    8. 'decimal' → logprob: -27.625
    9. 'Fraction' → logprob: -27.625
    10. '   ' → logprob: -28.0

Token 613: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. 'Decimal' → logprob: -21.75
    3. 'Fraction' → logprob: -21.75
    4. '１０' → logprob: -23.25
    5. '```' → logprob: -23.75
    6. '
' → logprob: -23.75
    7. 'decimal' → logprob: -24.625
    8. ' ' → logprob: -24.75
    9. '{' → logprob: -25.0
    10. '`' → logprob: -25.25

Token 614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29599305987358093
    2. 'digit' → logprob: -1.4209930896759033
    3. '_digit' → logprob: -5.920992851257324
    4. ' digit' → logprob: -6.295992851257324
    5. 'div' → logprob: -6.420992851257324
    6. 'd' → logprob: -6.420992851257324
    7. '   ' → logprob: -6.420992851257324
    8. '
' → logprob: -7.045992851257324
    9. ',' → logprob: -7.170992851257324
    10. 'digits' → logprob: -7.295992851257324

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07400189340114594
    2. 'digit' → logprob: -3.3240017890930176
    3. '   ' → logprob: -3.5740017890930176
    4. 'decimal' → logprob: -5.449001789093018
    5. ' digit' → logprob: -6.699001789093018
    6. '```' → logprob: -7.824001789093018
    7. ' decimal' → logprob: -8.324002265930176
    8. 'q' → logprob: -8.574002265930176
    9. 'div' → logprob: -8.574002265930176
    10. 'd' → logprob: -8.824002265930176

Token 616: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' (adapté à ' decimal') → logprob: -0.38733971118927
    2. 'digit' → logprob: -1.13733971118927
    3. 'q' → logprob: -7.7623395919799805
    4. ' decimal' → logprob: -10.88733959197998
    5. 'quot' → logprob: -11.63733959197998
    6. 'd' → logprob: -12.26233959197998
    7. '   ' → logprob: -12.38733959197998
    8. 'dec' → logprob: -13.51233959197998
    9. 'fraction' → logprob: -13.51233959197998
    10. 'digits' → logprob: -13.76233959197998

Token 617: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.255759060382843
    2. 'digit' → logprob: -1.7557590007781982
    3. '_part' → logprob: -3.6307590007781982
    4. '_digits' → logprob: -3.8807590007781982
    5. 'part' → logprob: -5.255759239196777
    6. 'digits' → logprob: -7.630759239196777
    7. 'Digit' → logprob: -10.880759239196777
    8. ',' → logprob: -11.005759239196777
    9. '```' → logprob: -12.255759239196777
    10. ' digit' → logprob: -13.130759239196777

Token 618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804275393486023
    2. ' =' → logprob: -3.2880427837371826
    3. ',' → logprob: -13.788043022155762
    4. '   ' → logprob: -16.538042068481445
    5. ' ' → logprob: -16.663042068481445
    6. '.append' → logprob: -17.288042068481445
    7. 's' → logprob: -17.288042068481445
    8. '=int' → logprob: -17.913042068481445
    9. '+=' → logprob: -18.163042068481445
    10. ')' → logprob: -18.288042068481445

Token 619: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.006715967319905758
    2. ' remainder' → logprob: -5.006715774536133
    3. '(re' → logprob: -15.131715774536133
    4. '   ' → logprob: -16.131715774536133
    5. 'rema' → logprob: -16.131715774536133
    6. '	re' → logprob: -16.256715774536133
    7. ' ' → logprob: -17.006715774536133
    8. 'rest' → logprob: -17.381715774536133
    9. 'rem' → logprob: -17.631715774536133
    10. 'fraction' → logprob: -18.756715774536133

Token 620: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.7126891016960144
    2. ' //' → logprob: -0.8376891016960144
    3. '//=' → logprob: -2.587689161300659
    4. '=' → logprob: -6.96268892288208
    5. '#' → logprob: -8.212689399719238
    6. 'div' → logprob: -8.337689399719238
    7. '   ' → logprob: -9.337689399719238
    8. '```' → logprob: -9.962689399719238
    9. ' ' → logprob: -10.212689399719238
    10. '       ' → logprob: -10.712689399719238

Token 621: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5048530030981055e-06
    2. ' p' → logprob: -13.500001907348633
    3. '	p' → logprob: -23.625001907348633
    4. '<p' → logprob: -24.125001907348633
    5. '   ' → logprob: -24.375001907348633
    6. '(p' → logprob: -25.625001907348633
    7. ')p' → logprob: -25.750001907348633
    8. '_p' → logprob: -25.875001907348633
    9. '=p' → logprob: -26.125001907348633
    10. 'den' → logprob: -26.125001907348633

Token 622: '.den' (ID: 152740)
  Prédit: '.den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.den' → logprob: -0.0002644351334311068
    2. 'den' → logprob: -8.250264167785645
    3. '.' → logprob: -13.875264167785645
    4. ' denominator' → logprob: -13.875264167785645
    5. '_den' → logprob: -15.250264167785645
    6. ' .' → logprob: -15.375264167785645
    7. '   ' → logprob: -15.625264167785645
    8. 'p' → logprob: -16.12526512145996
    9. '```' → logprob: -16.50026512145996
    10. '[' → logprob: -16.62526512145996

Token 623: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.0002546641044318676
    2. 'umerator' → logprob: -8.50025463104248
    3. 'p' → logprob: -10.00025463104248
    4. 'om' → logprob: -13.25025463104248
    5. 'omin' → logprob: -13.50025463104248
    6. 'min' → logprob: -14.62525463104248
    7. 'imator' → logprob: -14.62525463104248
    8. 'den' → logprob: -15.25025463104248
    9. 'operator' → logprob: -15.37525463104248
    10. '```' → logprob: -15.75025463104248

Token 624: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004969981964677572
    2. '<|end|>' → logprob: -5.504970073699951
    3. '
' → logprob: -8.504969596862793
    4. '        
' → logprob: -8.754969596862793
    5. '<|end|>' → logprob: -8.879969596862793
    6. ' remainder' → logprob: -9.629969596862793
    7. ',' → logprob: -9.754969596862793
    8. '   ' → logprob: -9.879969596862793
    9. 'decimal' → logprob: -10.004969596862793
    10. '```' → logprob: -10.629969596862793

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02198713831603527
    2. ' remainder' → logprob: -4.021986961364746
    3. 're' → logprob: -6.021986961364746
    4. '```' → logprob: -7.521986961364746
    5. 'decimal' → logprob: -7.646986961364746
    6. '        
' → logprob: -9.396986961364746
    7. '<|end|>' → logprob: -9.771986961364746
    8. ' decimal' → logprob: -9.771986961364746
    9. '[' → logprob: -10.271986961364746
    10. '   ' → logprob: -10.271986961364746

Token 626: ' remainder' (ID: 47056)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' → logprob: -0.40589237213134766
    2. 're' → logprob: -1.1558923721313477
    3. ' remainder' → logprob: -4.280892372131348
    4. ' decimal' → logprob: -5.405892372131348
    5. '   ' → logprob: -8.155892372131348
    6. '       ' → logprob: -8.530892372131348
    7. '	re' → logprob: -10.905892372131348
    8. '    
' → logprob: -12.905892372131348
    9. 'rest' → logprob: -13.030892372131348
    10. '(decimal' → logprob: -13.030892372131348

Token 627: ' =' (ID: 314)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.14476750791072845
    2. '=' → logprob: -2.3947675228118896
    3. ' %=' → logprob: -3.1447675228118896
    4. '%' → logprob: -8.144767761230469
    5. ' =' → logprob: -9.019767761230469
    6. '-=' → logprob: -9.644767761230469
    7. ' -=' → logprob: -10.519767761230469
    8. '   ' → logprob: -13.769767761230469
    9. '```' → logprob: -14.894767761230469
    10. '*=' → logprob: -15.019767761230469

Token 628: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.023246755823493004
    2. ' remainder' → logprob: -3.7732467651367188
    3. 'rema' → logprob: -14.773246765136719
    4. 'rem' → logprob: -15.398246765136719
    5. 'decimal' → logprob: -15.398246765136719
    6. 'rest' → logprob: -15.648246765136719
    7. '	re' → logprob: -16.27324676513672
    8. ' ' → logprob: -16.27324676513672
    9. 'r' → logprob: -16.52324676513672
    10. '(re' → logprob: -17.39824676513672

Token 629: ' %' (ID: 1851)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.07527459412813187
    2. '%' → logprob: -3.325274705886841
    3. ' remainder' → logprob: -3.325274705886841
    4. ' %' → logprob: -7.700274467468262
    5. '%d' → logprob: -10.075274467468262
    6. 'decimal' → logprob: -10.200274467468262
    7. '	re' → logprob: -10.825274467468262
    8. '=re' → logprob: -10.950274467468262
    9. '_re' → logprob: -12.700274467468262
    10. ' decimal' → logprob: -13.075274467468262

Token 630: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.7610454708337784e-05
    2. ' p' → logprob: -10.500027656555176
    3. '   ' → logprob: -22.25002670288086
    4. '(p' → logprob: -22.75002670288086
    5. ' ' → logprob: -23.12502670288086
    6. '	p' → logprob: -23.37502670288086
    7. '_p' → logprob: -25.12502670288086
    8. '  ' → logprob: -25.75002670288086
    9. '<p' → logprob: -26.12502670288086
    10. ''p' → logprob: -26.12502670288086

Token 631: '.den' (ID: 152740)
  Prédit: '.den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.den' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.625000953674316
    3. 'den' → logprob: -15.375000953674316
    4. '_den' → logprob: -16.000001907348633
    5. '.der' → logprob: -16.250001907348633
    6. '.dem' → logprob: -16.250001907348633
    7. '.def' → logprob: -16.875001907348633
    8. ' .' → logprob: -17.625001907348633
    9. '.di' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.250001907348633

Token 632: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -3.416665640543215e-05
    2. 'p' → logprob: -10.62503433227539
    3. 'umerator' → logprob: -12.00003433227539
    4. 're' → logprob: -13.25003433227539
    5. 'om' → logprob: -14.25003433227539
    6. 'omin' → logprob: -15.12503433227539
    7. ' p' → logprob: -15.87503433227539
    8. 'imator' → logprob: -16.00003433227539
    9. 'umin' → logprob: -16.12503433227539
    10. 'den' → logprob: -16.37503433227539

Token 633: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005750744021497667
    2. '   ' → logprob: -7.625575065612793
    3. 'decimal' → logprob: -10.250575065612793
    4. '<|end|>' → logprob: -11.125575065612793
    5. '	' → logprob: -11.500575065612793
    6. ' decimal' → logprob: -12.125575065612793
    7. ',' → logprob: -12.750575065612793
    8. '           ' → logprob: -13.000575065612793
    9. '     ' → logprob: -13.125575065612793
    10. '```' → logprob: -13.125575065612793

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0066161309368908405
    2. '   ' → logprob: -5.256616115570068
    3. '	' → logprob: -6.756616115570068
    4. '	   ' → logprob: -9.381616592407227
    5. 'decimal' → logprob: -10.006616592407227
    6. '```' → logprob: -10.756616592407227
    7. ',' → logprob: -11.506616592407227
    8. '[' → logprob: -11.631616592407227
    9. '<|end|>' → logprob: -12.006616592407227
    10. ' decimal' → logprob: -12.131616592407227

Token 635: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' (adapté à ' decimal') → logprob: -0.049859289079904556
    2. ' decimal' → logprob: -3.5498592853546143
    3. '   ' → logprob: -4.549859523773193
    4. '       ' → logprob: -4.674859523773193
    5. ' ' → logprob: -12.924859046936035
    6. '(decimal' → logprob: -13.049859046936035
    7. '	' → logprob: -13.174859046936035
    8. '```' → logprob: -13.674859046936035
    9. '           ' → logprob: -13.924859046936035
    10. 'Decimal' → logprob: -14.299859046936035

Token 636: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -8.149051427608356e-05
    2. '_digit' → logprob: -9.500081062316895
    3. 'digits' → logprob: -12.125081062316895
    4. '_' → logprob: -15.000081062316895
    5. 'digit' → logprob: -15.125081062316895
    6. '_decimal' → logprob: -15.750081062316895
    7. 'Digits' → logprob: -15.875081062316895
    8. '_tokens' → logprob: -16.00008201599121
    9. '```' → logprob: -17.00008201599121
    10. '_chars' → logprob: -17.12508201599121

Token 637: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004362718027550727
    2. '.' → logprob: -7.750436305999756
    3. 'append' → logprob: -12.625435829162598
    4. '.app' → logprob: -13.375435829162598
    5. '.Append' → logprob: -15.375435829162598
    6. '+=' → logprob: -16.125436782836914
    7. ' append' → logprob: -16.250436782836914
    8. '_append' → logprob: -16.375436782836914
    9. '.push' → logprob: -16.500436782836914
    10. '.ap' → logprob: -16.875436782836914

Token 638: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.8292880058288574
    2. '(decimal' → logprob: -0.8292880058288574
    3. 'str' → logprob: -2.8292880058288574
    4. '(' → logprob: -2.8292880058288574
    5. 'decimal' → logprob: -4.954288005828857
    6. '('' → logprob: -6.329288005828857
    7. '(chr' → logprob: -8.954288482666016
    8. ' str' → logprob: -9.704288482666016
    9. '(int' → logprob: -10.079288482666016
    10. ' (' → logprob: -10.579288482666016

Token 639: '(decimal' (ID: 171225)
  Prédit: '(decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decimal' → logprob: -6.873571692267433e-05
    2. '(' → logprob: -10.125068664550781
    3. 'decimal' → logprob: -10.500068664550781
    4. '(dec' → logprob: -14.000068664550781
    5. ')' → logprob: -16.12506866455078
    6. ' (' → logprob: -16.62506866455078
    7. ' decimal' → logprob: -17.50006866455078
    8. '(
' → logprob: -17.87506866455078
    9. '(decoded' → logprob: -18.25006866455078
    10. '((' → logprob: -18.37506866455078

Token 640: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.15513983368873596
    2. '_digits' → logprob: -2.030139923095703
    3. ')' → logprob: -5.780139923095703
    4. '_decimal' → logprob: -6.155139923095703
    5. '_part' → logprob: -6.530139923095703
    6. 'decimal' → logprob: -6.655139923095703
    7. 'digit' → logprob: -7.030139923095703
    8. '[' → logprob: -7.780139923095703
    9. '   ' → logprob: -8.030139923095703
    10. '.' → logprob: -8.405139923095703

Token 641: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014164921827614307
    2. '))' → logprob: -4.264164924621582
    3. ')))' → logprob: -14.264164924621582
    4. ')
' → logprob: -15.014164924621582
    5. ' )' → logprob: -15.264164924621582
    6. ')}' → logprob: -15.889164924621582
    7. ')]' → logprob: -17.139163970947266
    8. '))
' → logprob: -17.389163970947266
    9. ' ))' → logprob: -18.139163970947266
    10. '),' → logprob: -18.139163970947266

Token 642: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6563668251037598
    2. 'result' → logprob: -1.7813668251037598
    3. 'if' → logprob: -1.9063668251037598
    4. 'return' → logprob: -2.9063668251037598
    5. '```' → logprob: -3.0313668251037598
    6. 'decimal' → logprob: -3.9063668251037598
    7. 'output' → logprob: -4.15636682510376
    8. '   ' → logprob: -4.28136682510376
    9. ' if' → logprob: -5.65636682510376
    10. '
' → logprob: -5.90636682510376

Token 643: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22708815336227417
    2. 'if' → logprob: -2.727088212966919
    3. '   ' → logprob: -2.977088212966919
    4. 'result' → logprob: -3.227088212966919
    5. 'return' → logprob: -3.602088212966919
    6. 'decimal' → logprob: -4.47708797454834
    7. 'output' → logprob: -5.97708797454834
    8. ' if' → logprob: -6.22708797454834
    9. '```' → logprob: -6.60208797454834
    10. ' print' → logprob: -6.97708797454834

Token 644: ' rounding' (ID: 112605)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1673702597618103
    2. 'return' → logprob: -2.917370319366455
    3. 'result' → logprob: -3.042370319366455
    4. 'decimal' → logprob: -3.417370319366455
    5. 'if' → logprob: -4.167370319366455
    6. '   ' → logprob: -6.292370319366455
    7. 'fraction' → logprob: -7.292370319366455
    8. 'output' → logprob: -7.292370319366455
    9. ' print' → logprob: -8.292369842529297
    10. 'res' → logprob: -8.292369842529297

Token 645: ' not' (ID: 625)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030359292402863503
    2. '   ' → logprob: -3.5303592681884766
    3. ' if' → logprob: -7.905359268188477
    4. 'i' → logprob: -9.155359268188477
    5. '```' → logprob: -9.905359268188477
    6. '
' → logprob: -10.030359268188477
    7. '    
' → logprob: -11.530359268188477
    8. '       ' → logprob: -12.405359268188477
    9. 'last' → logprob: -12.530359268188477
    10. 'carry' → logprob: -12.530359268188477

Token 646: ' needed' (ID: 6118)
  Prédit: 'implemented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'implemented' → logprob: -0.9544722437858582
    2. ' implemented' → logprob: -1.204472303390503
    3. '_needed' → logprob: -2.829472303390503
    4. ' done' → logprob: -3.579472303390503
    5. '_done' → logprob: -3.704472303390503
    6. ' yet' → logprob: -3.954472303390503
    7. ' handled' → logprob: -4.204472064971924
    8. 'needed' → logprob: -4.204472064971924
    9. 'handled' → logprob: -4.329472064971924
    10. '_required' → logprob: -4.329472064971924

Token 647: ' according' (ID: 7065)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09372676908969879
    2. '   ' → logprob: -3.218726873397827
    3. 'return' → logprob: -3.468726873397827
    4. 'result' → logprob: -4.593726634979248
    5. 'decimal' → logprob: -5.718726634979248
    6. ' print' → logprob: -6.593726634979248
    7. 'if' → logprob: -6.718726634979248
    8. 'output' → logprob: -7.218726634979248
    9. '```' → logprob: -7.468726634979248
    10. ' return' → logprob: -7.843726634979248

Token 648: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.018758263438940048
    2. ' to' → logprob: -4.018758296966553
    3. '#' → logprob: -7.893758296966553
    4. '_to' → logprob: -8.768757820129395
    5. 'ly' → logprob: -10.518757820129395
    6. '```' → logprob: -11.643757820129395
    7. '
' → logprob: -11.768757820129395
    8. '   ' → logprob: -12.018757820129395
    9. '<|end|>' → logprob: -12.393757820129395
    10. 't' → logprob: -12.893757820129395

Token 649: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.3150997459888458
    2. ' problem' → logprob: -1.4400997161865234
    3. 'the' → logprob: -4.065099716186523
    4. ' the' → logprob: -4.815099716186523
    5. 'user' → logprob: -5.940099716186523
    6. 'r' → logprob: -6.565099716186523
    7. ' user' → logprob: -6.690099716186523
    8. ' instructions' → logprob: -6.940099716186523
    9. 'instructions' → logprob: -7.440099716186523
    10. '_problem' → logprob: -8.190099716186523

Token 650: ' statement' (ID: 9710)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40756991505622864
    2. 'print' → logprob: -1.1575698852539062
    3. 'return' → logprob: -4.657569885253906
    4. ' print' → logprob: -5.907569885253906
    5. 'result' → logprob: -6.157569885253906
    6. 'output' → logprob: -6.532569885253906
    7. 'decimal' → logprob: -6.782569885253906
    8. '    
' → logprob: -6.907569885253906
    9. '
' → logprob: -6.907569885253906
    10. 'integer' → logprob: -7.782569885253906

Token 651: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36298030614852905
    2. '   ' → logprob: -1.2379803657531738
    3. 'return' → logprob: -5.362980365753174
    4. 'decimal' → logprob: -5.987980365753174
    5. '
' → logprob: -6.112980365753174
    6. 'result' → logprob: -6.612980365753174
    7. 'output' → logprob: -6.987980365753174
    8. ' print' → logprob: -7.112980365753174
    9. '    
' → logprob: -7.112980365753174
    10. 'integer' → logprob: -7.237980365753174

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7214246988296509
    2. 'print' → logprob: -0.7214246988296509
    3. 'return' → logprob: -3.9714245796203613
    4. 'decimal' → logprob: -5.596424579620361
    5. '```' → logprob: -6.346424579620361
    6. 'result' → logprob: -6.846424579620361
    7. 'integer' → logprob: -7.221424579620361
    8. 'output' → logprob: -7.471424579620361
    9. ' print' → logprob: -7.971424579620361
    10. '
' → logprob: -8.09642505645752

Token 653: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01957583613693714
    2. 'decimal' → logprob: -4.769576072692871
    3. 'result' → logprob: -5.019576072692871
    4. 'return' → logprob: -5.894576072692871
    5. ' print' → logprob: -7.394576072692871
    6. 'if' → logprob: -8.019576072692871
    7. 'output' → logprob: -8.644576072692871
    8. 'fraction' → logprob: -8.644576072692871
    9. '   ' → logprob: -9.519576072692871
    10. 'integer' → logprob: -9.769576072692871

Token 654: '(str' (ID: 7946)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.004212789703160524
    2. '(str' → logprob: -5.504212856292725
    3. '(integer' → logprob: -9.004212379455566
    4. '("{}' → logprob: -12.004212379455566
    5. '(' → logprob: -12.254212379455566
    6. '('{}' → logprob: -14.879212379455566
    7. '("{' → logprob: -16.379213333129883
    8. '("' → logprob: -16.754213333129883
    9. 'f' → logprob: -17.629213333129883
    10. '(int' → logprob: -17.879213333129883

Token 655: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.00033546582562848926
    2. 'integer' → logprob: -8.000335693359375
    3. ' integer' → logprob: -18.125335693359375
    4. ')' → logprob: -18.625335693359375
    5. '(' → logprob: -19.375335693359375
    6. '.integer' → logprob: -19.625335693359375
    7. '(decimal' → logprob: -19.875335693359375
    8. '(int' → logprob: -20.125335693359375
    9. ' (' → logprob: -20.125335693359375
    10. '(in' → logprob: -20.750335693359375

Token 656: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -2.2200749754119897e-06
    2. 'part' → logprob: -13.250001907348633
    3. '(part' → logprob: -15.375001907348633
    4. '_parts' → logprob: -16.500001907348633
    5. 'Part' → logprob: -16.750001907348633
    6. ')' → logprob: -17.375001907348633
    7. '_PART' → logprob: -18.625001907348633
    8. '	part' → logprob: -18.875001907348633
    9. ')_' → logprob: -19.000001907348633
    10. '_p' → logprob: -19.250001907348633

Token 657: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5365200638771057
    2. '+'.' → logprob: -1.786520004272461
    3. ')' → logprob: -1.911520004272461
    4. ' +' → logprob: -2.536520004272461
    5. '.' → logprob: -4.661520004272461
    6. ',' → logprob: -4.661520004272461
    7. ')+' → logprob: -7.411520004272461
    8. '+".' → logprob: -7.661520004272461
    9. '+
' → logprob: -8.286520004272461
    10. ','.' → logprob: -8.536520004272461

Token 658: ' +' (ID: 659)
  Prédit: '+'.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+'.' → logprob: -0.21995756030082703
    2. ')' → logprob: -2.4699575901031494
    3. '+' → logprob: -2.9699575901031494
    4. ''.' → logprob: -3.8449575901031494
    5. '.' → logprob: -4.59495735168457
    6. ' +' → logprob: -4.84495735168457
    7. '+".' → logprob: -4.96995735168457
    8. '("."' → logprob: -5.21995735168457
    9. '('.')' → logprob: -5.46995735168457
    10. '".' → logprob: -6.34495735168457

Token 659: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.2520652115345001
    2. '"."' → logprob: -1.5020651817321777
    3. '".' → logprob: -9.127065658569336
    4. '("."' → logprob: -10.752065658569336
    5. '.' → logprob: -12.377065658569336
    6. '"' → logprob: -14.502065658569336
    7. ' '.'' → logprob: -14.752065658569336
    8. '('.' → logprob: -14.877065658569336
    9. '('.')' → logprob: -15.002065658569336
    10. '`.`' → logprob: -16.002065658569336

Token 660: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5703164339065552
    2. 'join' → logprob: -1.8203164339065552
    3. '''.' → logprob: -1.8203164339065552
    4. '.join' → logprob: -3.6953163146972656
    5. ')' → logprob: -3.6953163146972656
    6. ' +' → logprob: -3.9453163146972656
    7. '```' → logprob: -4.195316314697266
    8. '{' → logprob: -4.570316314697266
    9. '.' → logprob: -5.070316314697266
    10. '''' → logprob: -5.820316314697266

Token 661: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.00010354319238103926
    2. ' ''.' → logprob: -9.500103950500488
    3. '('' → logprob: -11.000103950500488
    4. ''' → logprob: -11.750103950500488
    5. '"' → logprob: -12.750103950500488
    6. '''' → logprob: -13.750103950500488
    7. '''
' → logprob: -17.250102996826172
    8. ''',' → logprob: -17.500102996826172
    9. '('').' → logprob: -19.125102996826172
    10. ' "".' → logprob: -19.750102996826172

Token 662: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. 'j' → logprob: -16.25
    3. '''.' → logprob: -17.5
    4. ' join' → logprob: -17.75
    5. 'jo' → logprob: -20.0
    6. '```' → logprob: -20.5
    7. '(join' → logprob: -20.875
    8. 'joins' → logprob: -21.75
    9. 'joint' → logprob: -22.375
    10. ''.' → logprob: -22.625

Token 663: '(decimal' (ID: 171225)
  Prédit: '(decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decimal' → logprob: -6.511406809295295e-06
    2. 'decimal' → logprob: -12.000006675720215
    3. '(dec' → logprob: -15.375006675720215
    4. '(decoded' → logprob: -17.7500057220459
    5. '(' → logprob: -19.8750057220459
    6. 'Decimal' → logprob: -19.8750057220459
    7. '(de' → logprob: -20.5000057220459
    8. '(str' → logprob: -21.0000057220459
    9. '((' → logprob: -21.1250057220459
    10. '_decimal' → logprob: -21.3750057220459

Token 664: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.012887712568044662
    2. 'digits' → logprob: -4.387887477874756
    3. 'decimal' → logprob: -8.387887954711914
    4. 'igits' → logprob: -9.012887954711914
    5. 'dig' → logprob: -12.137887954711914
    6. 's' → logprob: -12.387887954711914
    7. 't' → logprob: -12.762887954711914
    8. 'Digits' → logprob: -13.262887954711914
    9. '_decimal' → logprob: -13.387887954711914
    10. '[' → logprob: -13.762887954711914

Token 665: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005237906239926815
    2. '))' → logprob: -5.255238056182861
    3. ')")' → logprob: -12.880237579345703
    4. ')))' → logprob: -14.005237579345703
    5. '})' → logprob: -15.630237579345703
    6. '())' → logprob: -16.005237579345703
    7. '')' → logprob: -16.255237579345703
    8. ')`' → logprob: -16.380237579345703
    9. ')}' → logprob: -16.630237579345703
    10. '   ' → logprob: -17.380237579345703

Token 666: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 667: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5759409070014954
    2. 'main' → logprob: -0.8259409070014954
    3. 'process' → logprob: -13.95094108581543
    4. ' process' → logprob: -16.07594108581543
    5. '	main' → logprob: -16.70094108581543
    6. 'read' → logprob: -16.82594108581543
    7. '_main' → logprob: -16.95094108581543
    8. ' ' → logprob: -16.95094108581543
    9. 'solve' → logprob: -17.20094108581543
    10. 'mod' → logprob: -17.32594108581543

Token 668: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01832704432308674
    2. '():
' → logprob: -4.018327236175537
    3. '()' → logprob: -9.268326759338379
    4. '()>' → logprob: -10.643326759338379
    5. ' ():' → logprob: -11.268326759338379
    6. '():
' → logprob: -11.393326759338379
    7. '(' → logprob: -12.143326759338379
    8. '():

' → logprob: -12.268326759338379
    9. '(argv' → logprob: -12.393326759338379
    10. '()">' → logprob: -12.643326759338379

Token 669: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05338066443800926
    2. 'import' → logprob: -3.1783807277679443
    3. ' import' → logprob: -5.428380489349365
    4. 't' → logprob: -5.803380489349365
    5. 'n' → logprob: -6.678380489349365
    6. ' n' → logprob: -6.803380489349365
    7. 'T' → logprob: -8.803380966186523
    8. ' t' → logprob: -8.928380966186523
    9. ' T' → logprob: -9.553380966186523
    10. '```' → logprob: -9.803380966186523

Token 670: ' for' (ID: 395)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8120090365409851
    2. 'T' → logprob: -1.0620090961456299
    3. ' T' → logprob: -2.31200909614563
    4. ' t' → logprob: -2.81200909614563
    5. '   ' → logprob: -3.31200909614563
    6. 'import' → logprob: -4.312008857727051
    7. ' import' → logprob: -6.687008857727051
    8. 'n' → logprob: -10.93700885772705
    9. ' input' → logprob: -12.31200885772705
    10. ' ' → logprob: -13.18700885772705

Token 671: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.009768249467015266
    2. 'line' → logprob: -5.384768486022949
    3. ' _' → logprob: -5.884768486022949
    4. '_' → logprob: -6.634768486022949
    5. '_line' → logprob: -7.009768486022949
    6. '	line' → logprob: -9.13476848602295
    7. ' ' → logprob: -11.50976848602295
    8. ' l' → logprob: -12.38476848602295
    9. '=line' → logprob: -12.88476848602295
    10. '(line' → logprob: -13.50976848602295

Token 672: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008217801805585623
    2. 'in' → logprob: -7.125821590423584
    3. '   ' → logprob: -11.625822067260742
    4. '	in' → logprob: -13.750822067260742
    5. ' line' → logprob: -13.875822067260742
    6. ' =' → logprob: -14.000822067260742
    7. ' ' → logprob: -14.125822067260742
    8. 'line' → logprob: -14.125822067260742
    9. '(line' → logprob: -14.375822067260742
    10. '_in' → logprob: -14.500822067260742

Token 673: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002478508511558175
    2. ' sys' → logprob: -6.00247859954834
    3. '=sys' → logprob: -12.87747859954834
    4. '	sys' → logprob: -15.25247859954834
    5. '(sys' → logprob: -16.002477645874023
    6. 'stdin' → logprob: -18.002477645874023
    7. '```' → logprob: -20.127477645874023
    8. '   ' → logprob: -20.877477645874023
    9. 'import' → logprob: -21.002477645874023
    10. '
' → logprob: -21.127477645874023

Token 674: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06393741071224213
    2. '.readline' → logprob: -2.9389374256134033
    3. 'stdin' → logprob: -4.813937187194824
    4. '(stdin' → logprob: -7.313937187194824
    5. '.' → logprob: -9.063937187194824
    6. '().' → logprob: -10.313937187194824
    7. '.stdout' → logprob: -10.688937187194824
    8. 'import' → logprob: -11.313937187194824
    9. '.readlines' → logprob: -11.438937187194824
    10. '```' → logprob: -11.813937187194824

Token 675: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.6576856970787048
    2. '():
' → logprob: -1.4076857566833496
    3. ' in' → logprob: -2.9076857566833496
    4. ':
' → logprob: -3.0326857566833496
    5. ':' → logprob: -3.1576857566833496
    6. '   ' → logprob: -3.6576857566833496
    7. ' =' → logprob: -4.15768575668335
    8. '.readlines' → logprob: -4.40768575668335
    9. '       ' → logprob: -4.65768575668335
    10. '():' → logprob: -5.15768575668335

Token 676: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0040970430709421635
    2. '    
' → logprob: -6.129096984863281
    3. '<|end|>' → logprob: -7.379096984863281
    4. '       ' → logprob: -7.754096984863281
    5. 'tokens' → logprob: -7.879096984863281
    6. '```' → logprob: -9.629096984863281
    7. '	token' → logprob: -9.754096984863281
    8. '<|end|>' → logprob: -9.754096984863281
    9. '	line' → logprob: -10.129096984863281
    10. ' tokens' → logprob: -10.816596984863281

Token 677: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.15130490064620972
    2. ' line' → logprob: -3.0263049602508545
    3. 'if' (adapté à ' if') → logprob: -3.4013049602508545
    4. '   ' → logprob: -3.4013049602508545
    5. ' if' → logprob: -3.9013049602508545
    6. '       ' → logprob: -5.401304721832275
    7. '	line' → logprob: -8.151305198669434
    8. '=line' → logprob: -9.651305198669434
    9. 'tokens' → logprob: -10.151305198669434
    10. '(line' → logprob: -10.276305198669434

Token 678: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.325937420129776
    2. 'not' → logprob: -1.3259373903274536
    3. 'line' → logprob: -4.575937271118164
    4. ' line' → logprob: -6.075937271118164
    5. ' ' → logprob: -13.950937271118164
    6. '=line' → logprob: -15.075937271118164
    7. '#line' → logprob: -16.075937271118164
    8. '   ' → logprob: -16.325937271118164
    9. '(line' → logprob: -16.325937271118164
    10. '	not' → logprob: -16.575937271118164

Token 679: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06196768581867218
    2. ' line' → logprob: -2.811967611312866
    3. '(line' → logprob: -18.311967849731445
    4. '	line' → logprob: -18.561967849731445
    5. '=line' → logprob: -19.186967849731445
    6. '#line' → logprob: -19.686967849731445
    7. '_line' → logprob: -21.561967849731445
    8. '[line' → logprob: -22.061967849731445
    9. ' ' → logprob: -22.561967849731445
    10. ',line' → logprob: -23.936967849731445

Token 680: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.011583062820136547
    2. '.startswith' → logprob: -5.136582851409912
    3. '.rstrip' → logprob: -6.136582851409912
    4. '.' → logprob: -6.261582851409912
    5. ':
' → logprob: -6.886582851409912
    6. 'strip' → logprob: -8.13658332824707
    7. ':' → logprob: -9.63658332824707
    8. 'startswith' → logprob: -10.13658332824707
    9. 'rstrip' → logprob: -10.38658332824707
    10. '   ' → logprob: -10.38658332824707

Token 681: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8749942183494568
    2. '():
' → logprob: -0.8749942183494568
    3. '():' → logprob: -1.9999942779541016
    4. ':
' → logprob: -3.4999942779541016
    5. '()' → logprob: -8.499994277954102
    6. ':return' → logprob: -8.499994277954102
    7. '<|end|>' → logprob: -8.874994277954102
    8. '):' → logprob: -10.249994277954102
    9. '():
' → logprob: -10.499994277954102
    10. '=' → logprob: -10.874994277954102

Token 682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029107891023159027
    2. '       ' → logprob: -5.877910614013672
    3. '	       ' → logprob: -10.002910614013672
    4. '<|end|>' → logprob: -11.127910614013672
    5. ',' → logprob: -11.627910614013672
    6. ':' → logprob: -11.752910614013672
    7. ':
' → logprob: -12.127910614013672
    8. '		' → logprob: -12.377910614013672
    9. '<|end|>' → logprob: -12.752910614013672
    10. '   ' → logprob: -13.127910614013672

Token 683: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.040437452495098114
    2. ' break' → logprob: -3.2904374599456787
    3. '       ' → logprob: -6.5404372215271
    4. '           ' → logprob: -7.4154372215271
    5. '	break' → logprob: -8.165437698364258
    6. 'return' → logprob: -9.915437698364258
    7. '               ' → logprob: -12.290437698364258
    8. '   ' → logprob: -12.665437698364258
    9. '_break' → logprob: -12.915437698364258
    10. 'continue' (adapté à ' continue') → logprob: -13.915437698364258

Token 684: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004113662056624889
    2. 'tokens' → logprob: -6.254113674163818
    3. '   ' → logprob: -6.879113674163818
    4. '<|end|>' → logprob: -7.629113674163818
    5. ' tokens' → logprob: -8.50411319732666
    6. ',' → logprob: -9.12911319732666
    7. '        
' → logprob: -9.75411319732666
    8. 'token' → logprob: -10.00411319732666
    9. '<|end|>' → logprob: -10.00411319732666
    10. '```' → logprob: -10.37911319732666

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009727401658892632
    2. '   ' → logprob: -5.384727478027344
    3. 'tokens' → logprob: -5.759727478027344
    4. 'token' → logprob: -7.634727478027344
    5. '<|end|>' → logprob: -7.759727478027344
    6. '```' → logprob: -7.884727478027344
    7. ' tokens' → logprob: -8.259727478027344
    8. '_tokens' → logprob: -9.259727478027344
    9. ',' → logprob: -9.759727478027344
    10. '<|end|>' → logprob: -9.884727478027344

Token 686: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.04097343981266022
    2. 'parts' → logprob: -4.040973663330078
    3. ' n' → logprob: -4.540973663330078
    4. 'tokens' → logprob: -5.415973663330078
    5. '       ' → logprob: -5.665973663330078
    6. 'a' → logprob: -6.415973663330078
    7. ' parts' → logprob: -7.415973663330078
    8. 't' → logprob: -7.665973663330078
    9. 'params' → logprob: -8.165973663330078
    10. 'x' → logprob: -8.290973663330078

Token 687: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931841969490051
    2. ',k' → logprob: -0.6931841969490051
    3. ' ,' → logprob: -11.068183898925781
    4. ',int' → logprob: -12.693183898925781
    5. ',n' → logprob: -12.818183898925781
    6. 'k' → logprob: -12.818183898925781
    7. ',c' → logprob: -12.943183898925781
    8. ',m' → logprob: -13.693183898925781
    9. ',K' → logprob: -13.693183898925781
    10. ',r' → logprob: -13.943183898925781

Token 688: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041360240429639816
    2. ',k' → logprob: -3.2913601398468018
    3. '=' → logprob: -6.791360378265381
    4. ',n' → logprob: -7.416360378265381
    5. ',c' → logprob: -7.916360378265381
    6. ' ,' → logprob: -8.166359901428223
    7. ',r' → logprob: -8.791359901428223
    8. ' =' → logprob: -8.916359901428223
    9. ',user' → logprob: -9.041359901428223
    10. ',m' → logprob: -9.416359901428223

Token 689: ',r' (ID: 33654)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02005968615412712
    2. ',' → logprob: -4.395059585571289
    3. ' =' → logprob: -4.895059585571289
    4. '=line' → logprob: -10.645059585571289
    5. ',k' → logprob: -12.895059585571289
    6. '=int' → logprob: -13.520059585571289
    7. ')=' → logprob: -13.645059585571289
    8. ',line' → logprob: -13.770059585571289
    9. '','=','' → logprob: -13.895059585571289
    10. ' ,' → logprob: -14.270059585571289

Token 690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890840619802475
    2. ' =' → logprob: -2.5789084434509277
    3. '=line' → logprob: -10.95390796661377
    4. '＝' → logprob: -15.07890796661377
    5. '=int' → logprob: -15.32890796661377
    6. '   ' → logprob: -15.57890796661377
    7. ',' → logprob: -16.203908920288086
    8. '=
' → logprob: -16.203908920288086
    9. '=parse' → logprob: -16.828908920288086
    10. ' ' → logprob: -16.828908920288086

Token 691: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0040785204619169235
    2. ' map' → logprob: -5.504078388214111
    3. '(map' → logprob: -16.129077911376953
    4. 'line' → logprob: -16.879077911376953
    5. 'list' → logprob: -17.504077911376953
    6. '	map' → logprob: -19.004077911376953
    7. '[' → logprob: -19.504077911376953
    8. 'm' → logprob: -20.254077911376953
    9. '_map' → logprob: -20.754077911376953
    10. '.map' → logprob: -21.504077911376953

Token 692: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003567959647625685
    2. 'int' → logprob: -8.125356674194336
    3. '(str' → logprob: -9.875356674194336
    4. '(' → logprob: -11.875356674194336
    5. '[int' → logprob: -14.375356674194336
    6. '(lambda' → logprob: -14.375356674194336
    7. '<int' → logprob: -14.625356674194336
    8. 'str' → logprob: -15.375356674194336
    9. '=int' → logprob: -15.750356674194336
    10. '```' → logprob: -16.000356674194336

Token 693: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.009768958203494549
    2. ',line' → logprob: -4.759768962860107
    3. 'line' → logprob: -7.634768962860107
    4. ',' → logprob: -7.634768962860107
    5. ' line' → logprob: -9.63476848602295
    6. '(' → logprob: -9.75976848602295
    7. '=line' → logprob: -10.63476848602295
    8. '#line' → logprob: -10.63476848602295
    9. ')' → logprob: -12.13476848602295
    10. '[line' → logprob: -12.63476848602295

Token 694: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12457218766212463
    2. '.split' → logprob: -2.624572277069092
    3. '.strip' → logprob: -3.124572277069092
    4. '.readline' → logprob: -7.874572277069092
    5. '.' → logprob: -8.999571800231934
    6. '.rstrip' → logprob: -9.874571800231934
    7. '(split' → logprob: -10.374571800231934
    8. '   ' → logprob: -11.124571800231934
    9. '('').' → logprob: -11.499571800231934
    10. '(strip' → logprob: -11.499571800231934

Token 695: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06765343248844147
    2. ')' → logprob: -2.8176534175872803
    3. '()' → logprob: -5.317653656005859
    4. '(' → logprob: -7.317653656005859
    5. '('' → logprob: -10.19265365600586
    6. '())
' → logprob: -10.56765365600586
    7. '(','' → logprob: -10.81765365600586
    8. '(),' → logprob: -11.56765365600586
    9. '()))' → logprob: -13.19265365600586
    10. '))' → logprob: -13.56765365600586

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017833561869338155
    2. '   ' → logprob: -7.00178337097168
    3. 'if' → logprob: -8.00178337097168
    4. 'solve' → logprob: -8.50178337097168
    5. '<|end|>' → logprob: -8.62678337097168
    6. 'def' → logprob: -9.50178337097168
    7. '        
' → logprob: -10.00178337097168
    8. ' if' → logprob: -11.37678337097168
    9. '```' → logprob: -11.75178337097168
    10. 'next' → logprob: -12.37678337097168

Token 697: ' if' (ID: 538)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0432356558740139
    2. '       ' → logprob: -3.6682355403900146
    3. 'if' (adapté à ' if') → logprob: -4.168235778808594
    4. ' solve' → logprob: -7.168235778808594
    5. ' if' → logprob: -7.793235778808594
    6. '   ' → logprob: -9.293235778808594
    7. '        
' → logprob: -11.543235778808594
    8. '.solve' → logprob: -11.543235778808594
    9. '<|end|>' → logprob: -12.293235778808594
    10. '```' → logprob: -12.543235778808594

Token 698: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023251067847013474
    2. 'n' → logprob: -3.7732510566711426
    3. '(n' → logprob: -12.2732515335083
    4. '   ' → logprob: -14.6482515335083
    5. ' (' → logprob: -15.1482515335083
    6. '	n' → logprob: -16.023250579833984
    7. '[n' → logprob: -16.773250579833984
    8. '(' → logprob: -17.773250579833984
    9. ' ' → logprob: -18.523250579833984
    10. ' ' → logprob: -18.648250579833984

Token 699: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.633199155330658
    2. ' ==' → logprob: -0.758199155330658
    3. '<=' → logprob: -8.383198738098145
    4. '<|end|>' → logprob: -8.758198738098145
    5. ' <=' → logprob: -9.008198738098145
    6. '=' → logprob: -10.508198738098145
    7. '==
' → logprob: -11.133198738098145
    8. ')==' → logprob: -11.383198738098145
    9. '===' → logprob: -11.383198738098145
    10. '```' → logprob: -12.258198738098145

Token 700: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. 'k' → logprob: -16.500709533691406
    4. 'm' → logprob: -18.125709533691406
    5. '
' → logprob: -18.625709533691406
    6. '-' → logprob: -19.375709533691406
    7. '=' → logprob: -19.625709533691406
    8. '   ' → logprob: -19.625709533691406
    9. '  ' → logprob: -20.000709533691406
    10. '```' → logprob: -20.250709533691406

Token 701: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -15.875000953674316
    4. '=' → logprob: -18.625
    5. 'k' → logprob: -18.625
    6. 's' → logprob: -19.625
    7. '```' → logprob: -19.875
    8. 'm' → logprob: -20.0
    9. '
' → logprob: -20.375
    10. ' -' → logprob: -20.875

Token 702: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05626421794295311
    2. 'and' → logprob: -2.9312641620635986
    3. '   ' → logprob: -7.306264400482178
    4. '	and' → logprob: -8.05626392364502
    5. ':' → logprob: -8.80626392364502
    6. '       ' → logprob: -9.18126392364502
    7. ':
' → logprob: -9.30626392364502
    8. ' ' → logprob: -10.93126392364502
    9. '           ' → logprob: -11.18126392364502
    10. '  ' → logprob: -12.68126392364502

Token 703: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.941850526549388e-06
    2. ' k' → logprob: -11.750007629394531
    3. '	k' → logprob: -22.50000762939453
    4. 'kx' → logprob: -23.37500762939453
    5. ',k' → logprob: -24.75000762939453
    6. '_k' → logprob: -25.50000762939453
    7. ' ' → logprob: -26.00000762939453
    8. '  ' → logprob: -26.37500762939453
    9. ' ' → logprob: -26.62500762939453
    10. '   ' → logprob: -26.62500762939453

Token 704: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38696157932281494
    2. ' ==' → logprob: -1.136961579322815
    3. '=' → logprob: -9.761961936950684
    4. '<|end|>' → logprob: -11.386961936950684
    5. ' =' → logprob: -12.011961936950684
    6. ' ' → logprob: -12.261961936950684
    7. ',' → logprob: -12.886961936950684
    8. '===' → logprob: -13.011961936950684
    9. '0' → logprob: -13.136961936950684
    10. 'm' → logprob: -13.636961936950684

Token 705: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '<|end|>' → logprob: -19.750709533691406
    4. '  ' → logprob: -21.625709533691406
    5. '<|end|>' → logprob: -22.000709533691406
    6. '۰' → logprob: -22.125709533691406
    7. '=' → logprob: -22.125709533691406
    8. '```' → logprob: -22.375709533691406
    9. ' and' → logprob: -22.750709533691406
    10. ' ' → logprob: -23.000709533691406

Token 706: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023249205201864243
    2. 'and' → logprob: -3.7732491493225098
    3. '0' → logprob: -13.648249626159668
    4. '	and' → logprob: -13.898249626159668
    5. ' ' → logprob: -14.398249626159668
    6. 'm' → logprob: -14.648249626159668
    7. '<|end|>' → logprob: -15.023249626159668
    8. '==' → logprob: -16.14824867248535
    9. '&&' → logprob: -16.52324867248535
    10. ' и' → logprob: -17.27324867248535

Token 707: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009115827269852161
    2. ' m' → logprob: -7.000911712646484
    3. '   ' → logprob: -19.125911712646484
    4. '0' → logprob: -19.500911712646484
    5. '	m' → logprob: -19.500911712646484
    6. ' ' → logprob: -20.375911712646484
    7. '  ' → logprob: -21.375911712646484
    8. '       ' → logprob: -21.500911712646484
    9. '    ' → logprob: -22.000911712646484
    10. ' and' → logprob: -22.125911712646484

Token 708: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1602276712656021
    2. ' ==' → logprob: -1.910227656364441
    3. '=' → logprob: -13.78522777557373
    4. '===' → logprob: -13.91022777557373
    5. '<|end|>' → logprob: -14.66022777557373
    6. '==
' → logprob: -15.03522777557373
    7. ' =' → logprob: -15.41022777557373
    8. ')==' → logprob: -15.41022777557373
    9. '=='' → logprob: -16.785226821899414
    10. '()==' → logprob: -16.785226821899414

Token 709: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. ' and' → logprob: -15.625380516052246
    4. 'and' → logprob: -17.50037956237793
    5. '=' → logprob: -18.62537956237793
    6. '۰' → logprob: -19.62537956237793
    7. '<|end|>' → logprob: -20.00037956237793
    8. '<|end|>' → logprob: -20.87537956237793
    9. '０' → logprob: -21.00037956237793
    10. ' ' → logprob: -21.37537956237793

Token 710: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020602617412805557
    2. 'and' → logprob: -3.8956027030944824
    3. '       ' → logprob: -10.520602226257324
    4. '	and' → logprob: -11.145602226257324
    5. '           ' → logprob: -12.145602226257324
    6. ':' → logprob: -12.395602226257324
    7. ':
' → logprob: -12.520602226257324
    8. '<|end|>' → logprob: -13.395602226257324
    9. '   ' → logprob: -13.520602226257324
    10. ' ' → logprob: -14.270602226257324

Token 711: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.7610454708337784e-05
    2. ' r' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.62502670288086
    4. '	r' → logprob: -20.75002670288086
    5. ' ' → logprob: -21.00002670288086
    6. '0' → logprob: -21.25002670288086
    7. '  ' → logprob: -21.25002670288086
    8. '_r' → logprob: -23.25002670288086
    9. '
' → logprob: -24.12502670288086
    10. ' ' → logprob: -24.50002670288086

Token 712: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07890157401561737
    2. ' ==' → logprob: -2.578901529312134
    3. '0' → logprob: -12.703901290893555
    4. '==
' → logprob: -12.828901290893555
    5. '=' → logprob: -13.328901290893555
    6. '()==' → logprob: -13.453901290893555
    7. ')==' → logprob: -13.828901290893555
    8. '===' → logprob: -14.203901290893555
    9. ']==' → logprob: -15.328901290893555
    10. ' ' → logprob: -15.328901290893555

Token 713: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '<|end|>' → logprob: -20.25
    4. '۰' → logprob: -21.0
    5. '   ' → logprob: -22.25
    6. '=' → logprob: -22.875
    7. '０' → logprob: -23.25
    8. '০' → logprob: -23.5
    9. '<|end|>' → logprob: -23.625
    10. '>' → logprob: -23.75

Token 714: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2664027810096741
    2. ':
' → logprob: -1.6414027214050293
    3. '       ' → logprob: -4.016402721405029
    4. '           ' → logprob: -4.016402721405029
    5. ':return' → logprob: -6.016402721405029
    6. '   ' → logprob: -6.516402721405029
    7. '<|end|>' → logprob: -9.391403198242188
    8. ',' → logprob: -10.766403198242188
    9. '<|end|>' → logprob: -10.891403198242188
    10. '():
' → logprob: -11.266403198242188

Token 715: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017268223455175757
    2. '       ' → logprob: -6.3767266273498535
    3. '	       ' → logprob: -11.626727104187012
    4. '		' → logprob: -12.001727104187012
    5. '               ' → logprob: -12.376727104187012
    6. '   ' → logprob: -13.626727104187012
    7. '          ' → logprob: -14.251727104187012
    8. '<|end|>' → logprob: -14.251727104187012
    9. 'break' → logprob: -14.376727104187012
    10. ' break' → logprob: -14.751727104187012

Token 716: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.22664158046245575
    2. '       ' → logprob: -2.2266416549682617
    3. 'return' → logprob: -2.4766416549682617
    4. ' break' → logprob: -5.101641654968262
    5. '           ' → logprob: -5.476641654968262
    6. '	break' → logprob: -7.851641654968262
    7. ' return' → logprob: -8.851641654968262
    8. '               ' → logprob: -10.226641654968262
    9. '   ' → logprob: -11.101641654968262
    10. '_break' → logprob: -11.476641654968262

Token 717: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05460397154092789
    2. '   ' → logprob: -3.1796040534973145
    3. 'solve' → logprob: -4.6796040534973145
    4. 'def' → logprob: -6.9296040534973145
    5. '        
' → logprob: -7.6796040534973145
    6. '```' → logprob: -8.054603576660156
    7. '<|end|>' → logprob: -8.804603576660156
    8. ' solve' → logprob: -8.929603576660156
    9. '    
' → logprob: -10.054603576660156
    10. '
' → logprob: -10.054603576660156

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008572964929044247
    2. '   ' → logprob: -5.008573055267334
    3. 'def' → logprob: -7.258573055267334
    4. 'solve' → logprob: -7.258573055267334
    5. '<|end|>' → logprob: -8.383572578430176
    6. '```' → logprob: -9.008572578430176
    7. ' solve' → logprob: -9.883572578430176
    8. '        
' → logprob: -11.008572578430176
    9. '.solve' → logprob: -11.883572578430176
    10. '<|end|>' → logprob: -12.008572578430176

Token 719: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.06120055541396141
    2. '       ' → logprob: -3.0612006187438965
    3. '   ' → logprob: -4.4362006187438965
    4. ' solve' → logprob: -7.3112006187438965
    5. '```' → logprob: -11.561200141906738
    6. '.solve' → logprob: -12.311200141906738
    7. 'p' → logprob: -12.936200141906738
    8. '        
' → logprob: -12.936200141906738
    9. 'prob' → logprob: -13.811200141906738
    10. 'print' → logprob: -13.936200141906738

Token 720: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. '_cases' → logprob: -17.0
    4. '\' → logprob: -17.5
    5. '_code' → logprob: -17.625
    6. '_line' → logprob: -17.75
    7. ' _' → logprob: -18.25
    8. '```' → logprob: -18.25
    9. '(_' → logprob: -18.5
    10. '_CASE' → logprob: -18.875

Token 721: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.2524021157296374e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -14.000052452087402
    4. '```' → logprob: -16.87505340576172
    5. '(
' → logprob: -17.00005340576172
    6. '\(' → logprob: -17.62505340576172
    7. '((' → logprob: -17.87505340576172
    8. '   ' → logprob: -18.12505340576172
    9. ')(' → logprob: -18.50005340576172
    10. ' ' → logprob: -19.62505340576172

Token 722: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.008181667886674404
    2. ',' → logprob: -4.883181571960449
    3. ',n' → logprob: -7.508181571960449
    4. ' ,' → logprob: -11.75818157196045
    5. '(k' → logprob: -12.25818157196045
    6. '   ' → logprob: -12.63318157196045
    7. '(n' → logprob: -13.50818157196045
    8. '<|end|>' → logprob: -13.50818157196045
    9. '`,' → logprob: -13.88318157196045
    10. 'k' → logprob: -14.13318157196045

Token 723: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.0010404328349977732
    2. ',' → logprob: -6.876040458679199
    3. ' ,' → logprob: -12.1260404586792
    4. 'm' → logprob: -13.1260404586792
    5. '   ' → logprob: -16.251039505004883
    6. ',
' → logprob: -17.626039505004883
    7. '```' → logprob: -17.626039505004883
    8. ',M' → logprob: -18.001039505004883
    9. '`,' → logprob: -18.501039505004883
    10. ' ' → logprob: -18.626039505004883

Token 724: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.018168672919273376
    2. ',' → logprob: -4.0181684494018555
    3. 'r' → logprob: -11.018168449401855
    4. ' ,' → logprob: -13.143168449401855
    5. '   ' → logprob: -15.643168449401855
    6. ')' → logprob: -16.643169403076172
    7. ',R' → logprob: -16.643169403076172
    8. ' r' → logprob: -17.143169403076172
    9. '(r' → logprob: -17.393169403076172
    10. '	r' → logprob: -18.143169403076172

Token 725: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047071068547666073
    2. '<|end|>' → logprob: -8.250471115112305
    3. ')
' → logprob: -9.250471115112305
    4. '()' → logprob: -10.125471115112305
    5. '())' → logprob: -10.125471115112305
    6. '   ' → logprob: -10.875471115112305
    7. ')}' → logprob: -13.375471115112305
    8. ')**' → logprob: -13.375471115112305
    9. '<|end|>' → logprob: -13.375471115112305
    10. ' )' → logprob: -14.000471115112305

Token 726: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01053706742823124
    2. '```' → logprob: -4.635537147521973
    3. '<|end|>' → logprob: -7.635537147521973
    4. ' if' → logprob: -8.760537147521973
    5. 'main' → logprob: -9.885537147521973
    6. '``' → logprob: -10.760537147521973
    7. '
' → logprob: -11.260537147521973
    8. '\n' → logprob: -11.260537147521973
    9. '#' → logprob: -11.510537147521973
    10. '\' → logprob: -11.635537147521973

Token 727: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.100211963057518
    2. '__' → logprob: -2.3502118587493896
    3. '_' → logprob: -12.350212097167969
    4. '___' → logprob: -14.725212097167969
    5. '_name' → logprob: -15.350212097167969
    6. '/__' → logprob: -16.47521209716797
    7. ' _' → logprob: -16.72521209716797
    8. 'name' → logprob: -16.72521209716797
    9. ' ' → logprob: -16.97521209716797
    10. ' ' → logprob: -17.47521209716797

Token 728: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02363349311053753
    2. ' ==' → logprob: -4.2736334800720215
    3. '==' → logprob: -4.7736334800720215
    4. '__.__' → logprob: -8.02363395690918
    5. 'name' → logprob: -8.64863395690918
    6. '=="' → logprob: -8.89863395690918
    7. '.__' → logprob: -9.52363395690918
    8. ' __' → logprob: -9.89863395690918
    9. '=='' → logprob: -10.14863395690918
    10. '```' → logprob: -10.27363395690918

Token 729: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00026538874953985214
    2. '__.__' → logprob: -8.375265121459961
    3. '==' → logprob: -11.375265121459961
    4. '__.' → logprob: -11.750265121459961
    5. '__
' → logprob: -12.375265121459961
    6. '__["' → logprob: -12.625265121459961
    7. '__":
' → logprob: -13.375265121459961
    8. '___' → logprob: -13.750265121459961
    9. '=="' → logprob: -13.875265121459961
    10. '__[' → logprob: -14.125265121459961

Token 730: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42575472593307495
    2. ' ==' → logprob: -1.9257547855377197
    3. '__' → logprob: -1.9257547855377197
    4. '=="' → logprob: -3.3007547855377197
    5. '=='' → logprob: -4.050754547119141
    6. '.__' → logprob: -8.30075454711914
    7. '__.__' → logprob: -8.55075454711914
    8. '==
' → logprob: -8.80075454711914
    9. '.' → logprob: -10.17575454711914
    10. '.py' → logprob: -10.30075454711914

Token 731: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38706621527671814
    2. ''' → logprob: -1.1370662450790405
    3. '__' → logprob: -8.637065887451172
    4. ' "__' → logprob: -11.387065887451172
    5. '"user' → logprob: -13.387065887451172
    6. ' '__' → logprob: -13.512065887451172
    7. ''user' → logprob: -13.762065887451172
    8. ''name' → logprob: -15.012065887451172
    9. '('__' → logprob: -15.262065887451172
    10. ''app' → logprob: -15.262065887451172

Token 732: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.023274365812540054
    2. '__' → logprob: -3.7732744216918945
    3. 'name' → logprob: -10.523274421691895
    4. '_main' → logprob: -13.398274421691895
    5. '___' → logprob: -16.398273468017578
    6. '__
' → logprob: -16.398273468017578
    7. ' main' → logprob: -17.023273468017578
    8. '```' → logprob: -17.273273468017578
    9. '__':
' → logprob: -17.398273468017578
    10. 'python' → logprob: -17.773273468017578

Token 733: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.017458204180002213
    2. '__' → logprob: -4.142458438873291
    3. '__":
' → logprob: -6.767458438873291
    4. ':' → logprob: -8.892457962036133
    5. '__:' → logprob: -9.017457962036133
    6. '_' → logprob: -12.392457962036133
    7. '':' → logprob: -12.642457962036133
    8. '':
' → logprob: -14.142457962036133
    9. '```' → logprob: -14.142457962036133
    10. ''>
' → logprob: -14.267457962036133

Token 734: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1653628647327423
    2. 'solve' → logprob: -2.16536283493042
    3. '   ' → logprob: -3.79036283493042
    4. ' main' → logprob: -4.79036283493042
    5. '	main' → logprob: -6.29036283493042
    6. '```' → logprob: -6.66536283493042
    7. ' solve' → logprob: -6.79036283493042
    8. 'run' → logprob: -7.41536283493042
    9. '__' → logprob: -7.54036283493042
    10. '<|end|>' → logprob: -7.54036283493042

Token 735: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.173704271830502e-06
    2. ' main' → logprob: -12.75000286102295
    3. '	main' → logprob: -15.50000286102295
    4. '   ' → logprob: -20.125003814697266
    5. '_main' → logprob: -20.125003814697266
    6. '(main' → logprob: -21.875003814697266
    7. '.main' → logprob: -22.000003814697266
    8. 'import' → logprob: -23.625003814697266
    9. '/main' → logprob: -24.000003814697266
    10. 'Main' → logprob: -24.500003814697266

Token 736: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 734
Tokens correctement prédits (1ère position, stricte): 183
Tokens correctement prédits (1ère position, avec adaptation): 199
Tokens correctement prédits (top 10): 482
Précision stricte (1ère position): 24.93%
Précision adaptée (1ère position): 27.11%
Précision (top 10): 65.67%
================================================================================
