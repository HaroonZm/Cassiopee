================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

H, W = map(int, input().split())
areas = []
start = goal = None

area0 = [list(input()) for _ in range(H)]
for i in range(H):
    for j in range(W):
        if area0[i][j] == 'S':
            start = (i, j)
        elif area0[i][j] == 'G':
            goal = (i, j)
areas.append(area0)

N = int(input())
times = []
for _ in range(N):
    T = int(input())
    area = [list(input()) for _ in range(H)]
    times.append(T)
    areas.append(area)

# Prepend initial time 0
times = [0] + times
max_T = times[-1]
# For convenience, add a last time after last change to handle infinity
times.append(10**9)

# Directions: up, down, left, right, stay
dirs = [(-1,0),(1,0),(0,-1),(0,1),(0,0)]

# Function to get the area index at time t
def get_area_index(t):
    # times sorted ascending with sentinel times[-1]=large number
    # t < times[i+1] and t >= times[i]
    # binary search
    l, r = 0, len(times)-1
    while l < r:
        m = (l+r)//2
        if times[m] <= t < times[m+1]:
            return m
        if t < times[m]:
            r = m
        else:
            l = m+1
    return l

from sys import maxsize

# BFS (Dijkstra-like) to find minimal steps (walking moves)
# state: (time, x, y)
# use a dist dictionary: key=(t,x,y), but t can be large
# Optimize: since grid changes only at times in times[], we can limit search

# We can implement BFS over (t, x, y) with time increasing, 
# but t can be large. Since max T is at most 200 + movement max

# We limit max time to max allowed: max times[-2]+H*W*2 (safe upper bound)
max_time = times[-2] + H*W*4

# visited[(x,y,t)] but t huge, we store minimal walking steps to reach (x,y) at time t
# Since state space can be large, we use a dict keyed by (x,y,t)
# But t up to ~1000, and H,W max 20 -> max 20*20*1000=400k states feasible

from heapq import heappush, heappop
dist = {}

hq = []
# initial state: at time 0, position start, steps 0
# heap: (steps, time, x, y)
heappush(hq, (0,0,start[0],start[1]))
dist[(start[0],start[1],0)] = 0

res = -1

while hq:
    steps, t, x, y = heappop(hq)
    if (x,y) == goal:
        res = steps
        break
    # pruning
    if dist.get((x,y,t), maxsize) < steps:
        continue
    if t >= max_time:
        continue
    area_i = get_area_index(t)
    area_i1 = get_area_index(t+1)
    grid = areas[area_i]
    grid_next = areas[area_i1]

    for dx, dy in dirs:
        nx, ny = x+dx, y+dy
        nsteps = steps + (0 if (dx,dy) == (0,0) else 1)
        nt = t+1
        if 0 <= nx < H and 0 <= ny < W:
            # Move allowed in next grid if cell is not '#'
            if grid_next[nx][ny] != '#':
                key = (nx, ny, nt)
                if dist.get(key, maxsize) > nsteps:
                    dist[key] = nsteps
                    heappush(hq, (nsteps, nt, nx, ny))

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.9342921376228333
    2. 'default' → logprob: -1.3092920780181885
    3. 'deque' → logprob: -1.6842920780181885
    4. ' defaultdict' → logprob: -2.6842920780181885
    5. 'Counter' → logprob: -2.8092920780181885
    6. ' abc' → logprob: -4.559292316436768
    7. ' Counter' → logprob: -5.434292316436768
    8. 'named' → logprob: -5.559292316436768
    9. ' deque' → logprob: -6.559292316436768
    10. '```' → logprob: -6.684292316436768

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011728105135262012
    2. '\' → logprob: -5.636728286743164
    3. '\n' → logprob: -6.386728286743164
    4. '\(' → logprob: -6.511728286743164
    5. '.' → logprob: -6.636728286743164
    6. '[' → logprob: -7.011728286743164
    7. '```' → logprob: -7.261728286743164
    8. '(
' → logprob: -7.511728286743164
    9. ' (' → logprob: -8.136728286743164
    10. '`' → logprob: -8.386728286743164

Token 5: 'H' (ID: 39)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028563495725393295
    2. '\' → logprob: -4.528563499450684
    3. '\n' → logprob: -5.403563499450684
    4. '\(' → logprob: -5.653563499450684
    5. 'a' → logprob: -6.278563499450684
    6. 'd' → logprob: -6.278563499450684
    7. '[' → logprob: -6.653563499450684
    8. 'newline' → logprob: -6.903563499450684
    9. 'import' → logprob: -7.403563499450684
    10. '.' → logprob: -7.903563499450684

Token 6: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3185512125492096
    2. '=' → logprob: -1.3185511827468872
    3. ' =' → logprob: -6.318551063537598
    4. 'E' → logprob: -6.693551063537598
    5. 'T' → logprob: -7.318551063537598
    6. ':' → logprob: -7.693551063537598
    7. 'D' → logprob: -8.318551063537598
    8. 'H' → logprob: -8.568551063537598
    9. '_' → logprob: -8.943551063537598
    10. '(' → logprob: -9.818551063537598

Token 7: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.12692873179912567
    2. 'W' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.501928329467773
    4. 'w' → logprob: -16.751928329467773
    5. '  ' → logprob: -17.876928329467773
    6. 'N' → logprob: -17.876928329467773
    7. ' N' → logprob: -18.126928329467773
    8. '	W' → logprob: -18.376928329467773
    9. ',W' → logprob: -18.501928329467773
    10. ' w' → logprob: -18.501928329467773

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10249188542366028
    2. '=' → logprob: -2.352491855621338
    3. ',' → logprob: -6.102491855621338
    4. ' ,' → logprob: -11.352492332458496
    5. ' ' → logprob: -11.477492332458496
    6. ')' → logprob: -11.727492332458496
    7. ' =
' → logprob: -11.852492332458496
    8. '<|end|>' → logprob: -12.477492332458496
    9. '=
' → logprob: -13.602492332458496
    10. ' =",' → logprob: -14.852492332458496

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4515949785709381
    2. ' ' → logprob: -1.0765949487686157
    3. 'map' → logprob: -3.8265950679779053
    4. '10' → logprob: -7.826594829559326
    5. ' input' → logprob: -9.326595306396484
    6. ' int' → logprob: -9.576595306396484
    7. '0' → logprob: -9.701595306396484
    8. ' deque' → logprob: -10.076595306396484
    9. '20' → logprob: -10.326595306396484
    10. 'int' → logprob: -10.451595306396484

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5225531458854675
    2. '(' → logprob: -1.0225532054901123
    3. '(lambda' → logprob: -3.3975532054901123
    4. '(str' → logprob: -4.647552967071533
    5. '<|end|>' → logprob: -6.522552967071533
    6. '(input' → logprob: -8.022553443908691
    7. ' (' → logprob: -8.147553443908691
    8. 'int' → logprob: -8.147553443908691
    9. '```' → logprob: -8.397553443908691
    10. '()' → logprob: -8.522553443908691

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2707909643650055
    2. '(' → logprob: -2.6457910537719727
    3. ')' → logprob: -2.7707910537719727
    4. '(input' → logprob: -3.0207910537719727
    5. '(int' → logprob: -3.6457910537719727
    6. '(str' → logprob: -5.145791053771973
    7. '<|end|>' → logprob: -5.270791053771973
    8. '```' → logprob: -5.770791053771973
    9. '(),' → logprob: -6.395791053771973
    10. ',input' → logprob: -6.520791053771973

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132679760456085
    2. 'input' → logprob: -1.3132679462432861
    3. ' ' → logprob: -12.438267707824707
    4. '(input' → logprob: -13.813267707824707
    5. ')' → logprob: -14.438267707824707
    6. ',input' → logprob: -15.313267707824707
    7. '=input' → logprob: -15.313267707824707
    8. ' )' → logprob: -16.563268661499023
    9. '	input' → logprob: -16.938268661499023
    10. '```' → logprob: -16.938268661499023

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.24542731046676636
    2. ')' → logprob: -2.120427370071411
    3. '().' → logprob: -2.995427370071411
    4. '()' → logprob: -3.120427370071411
    5. '(),' → logprob: -6.370427131652832
    6. '());' → logprob: -7.120427131652832
    7. '(' → logprob: -8.870427131652832
    8. '()>' → logprob: -8.995427131652832
    9. '`()' → logprob: -9.120427131652832
    10. '()),' → logprob: -9.370427131652832

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003396343090571463
    2. 'strip' → logprob: -8.00033950805664
    3. 'rstrip' → logprob: -12.75033950805664
    4. ')' → logprob: -14.50033950805664
    5. 'read' → logprob: -15.00033950805664
    6. '(split' → logprob: -15.50033950805664
    7. ' split' → logprob: -15.75033950805664
    8. 'spl' → logprob: -15.75033950805664
    9. '())' → logprob: -18.62533950805664
    10. '```' → logprob: -18.87533950805664

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014601160073652864
    2. '))' → logprob: -7.126460075378418
    3. '())' → logprob: -7.501460075378418
    4. '()' → logprob: -9.751460075378418
    5. '`)' → logprob: -11.126460075378418
    6. '(' → logprob: -11.751460075378418
    7. ')`' → logprob: -11.876460075378418
    8. '```' → logprob: -12.376460075378418
    9. '),' → logprob: -12.501460075378418
    10. ')))' → logprob: -13.626460075378418

Token 16: 'areas' (ID: 69250)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.42106109857559204
    2. 'field' → logprob: -1.1710610389709473
    3. 'graph' → logprob: -4.046061038970947
    4. 'maze' → logprob: -5.421061038970947
    5. 'S' → logprob: -6.046061038970947
    6. 'map' → logprob: -6.296061038970947
    7. 'board' → logprob: -6.421061038970947
    8. 's' → logprob: -6.796061038970947
    9. 'g' → logprob: -7.046061038970947
    10. 'dp' → logprob: -7.296061038970947

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016055485233664513
    2. '=' → logprob: -4.141055583953857
    3. '_' → logprob: -11.8910551071167
    4. '[' → logprob: -12.2660551071167
    5. ')' → logprob: -13.0160551071167
    6. '[]' → logprob: -13.2660551071167
    7. 's' → logprob: -13.7660551071167
    8. ',' → logprob: -14.0160551071167
    9. ' ' → logprob: -14.3910551071167
    10. '=[]' → logprob: -14.5160551071167

Token 18: ' []
' (ID: 8911)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.07377747446298599
    2. '[' → logprob: -3.323777437210083
    3. ' deque' → logprob: -3.823777437210083
    4. '[]' → logprob: -5.073777675628662
    5. ' [' → logprob: -5.198777675628662
    6. ' []' → logprob: -7.198777675628662
    7. 'de' → logprob: -8.198777198791504
    8. '[][]' → logprob: -9.448777198791504
    9. '[[' → logprob: -9.448777198791504
    10. ' ' → logprob: -9.823777198791504

Token 19: 'start' (ID: 5236)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00471848389133811
    2. ' for' → logprob: -5.37971830368042
    3. '[' → logprob: -9.254718780517578
    4. '```' → logprob: -13.629718780517578
    5. '[
' → logprob: -14.879718780517578
    6. '	for' → logprob: -14.879718780517578
    7. '\' → logprob: -16.004718780517578
    8. '``' → logprob: -16.254718780517578
    9. '`' → logprob: -16.504718780517578
    10. '\n' → logprob: -16.504718780517578

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5364259481430054
    2. '_' → logprob: -1.4114259481430054
    3. '=' → logprob: -1.7864259481430054
    4. '_pos' → logprob: -6.161426067352295
    5. ',' → logprob: -7.411426067352295
    6. ')' → logprob: -7.911426067352295
    7. '_positions' → logprob: -8.036425590515137
    8. 's' → logprob: -9.411425590515137
    9. '_position' → logprob: -9.786425590515137
    10. '_=' → logprob: -9.911425590515137

Token 21: ' goal' (ID: 8583)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1174391508102417
    2. ' None' → logprob: -2.3674392700195312
    3. '(None' → logprob: -4.742439270019531
    4. '(' → logprob: -5.242439270019531
    5. '()' → logprob: -6.117439270019531
    6. '(-' → logprob: -7.867439270019531
    7. ' ()' → logprob: -8.367439270019531
    8. ' (' → logprob: -8.742439270019531
    9. '[]' → logprob: -10.742439270019531
    10. '-' → logprob: -10.867439270019531

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28641477227211
    2. '=' → logprob: -1.4114147424697876
    3. '_' → logprob: -5.286414623260498
    4. ',' → logprob: -9.786415100097656
    5. 's' → logprob: -10.411415100097656
    6. ')' → logprob: -10.786415100097656
    7. ':' → logprob: -11.036415100097656
    8. '_positions' → logprob: -11.161415100097656
    9. ' =
' → logprob: -11.911415100097656
    10. '_idx' → logprob: -11.911415100097656

Token 23: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.18221047520637512
    2. ' None' → logprob: -1.9322104454040527
    3. '(None' → logprob: -4.557210445404053
    4. '(-' → logprob: -4.807210445404053
    5. '()' → logprob: -6.182210445404053
    6. '-' → logprob: -7.682210445404053
    7. '(' → logprob: -7.932210445404053
    8. ' (-' → logprob: -9.682210922241211
    9. ' ()' → logprob: -9.807210922241211
    10. ' (' → logprob: -11.057210922241211

Token 24: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015329777263104916
    2. ' for' → logprob: -4.265329837799072
    3. '\n' → logprob: -7.140329837799072
    4. '\' → logprob: -8.890329360961914
    5. '```' → logprob: -9.015329360961914
    6. '
' → logprob: -10.265329360961914
    7. ' 
' → logprob: -10.515329360961914
    8. '<|end|>' → logprob: -11.265329360961914
    9. '``' → logprob: -11.890329360961914
    10. '[' → logprob: -11.890329360961914

Token 25: 'area' (ID: 7502)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00033546582562848926
    2. ' for' → logprob: -8.000335693359375
    3. '	for' → logprob: -17.750335693359375
    4. '```' → logprob: -17.750335693359375
    5. 'For' → logprob: -19.250335693359375
    6. '
' → logprob: -19.750335693359375
    7. '\' → logprob: -19.875335693359375
    8. '[' → logprob: -20.125335693359375
    9. '\n' → logprob: -20.500335693359375
    10. '   ' → logprob: -20.750335693359375

Token 26: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -6.575563020305708e-05
    2. ' =' → logprob: -10.250065803527832
    3. ' s' → logprob: -11.500065803527832
    4. '=' → logprob: -11.500065803527832
    5. '.append' → logprob: -12.250065803527832
    6. '_' → logprob: -13.375065803527832
    7. '.' → logprob: -14.250065803527832
    8. '[:]' → logprob: -14.500065803527832
    9. '_s' → logprob: -14.625065803527832
    10. '[]' → logprob: -14.625065803527832

Token 27: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01138567365705967
    2. ' =' → logprob: -4.761385440826416
    3. '=' → logprob: -6.386385440826416
    4. '_' → logprob: -7.761385440826416
    5. '.append' → logprob: -7.886385440826416
    6. '[' → logprob: -9.511385917663574
    7. '_s' → logprob: -9.636385917663574
    8. '.' → logprob: -10.386385917663574
    9. '[]' → logprob: -10.761385917663574
    10. ' ' → logprob: -11.386385917663574

Token 28: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20250152051448822
    2. '[' → logprob: -2.9525015354156494
    3. ' []' → logprob: -3.3275015354156494
    4. 'input' → logprob: -3.7025015354156494
    5. 'list' → logprob: -3.9525015354156494
    6. ' [' → logprob: -4.07750129699707
    7. '[input' → logprob: -4.07750129699707
    8. 'deque' → logprob: -4.70250129699707
    9. '[int' → logprob: -5.45250129699707
    10. '[list' → logprob: -7.20250129699707

Token 29: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.46844950318336487
    2. 'input' → logprob: -1.2184494733810425
    3. 'int' → logprob: -2.718449592590332
    4. 'c' → logprob: -4.968449592590332
    5. '0' → logprob: -6.593449592590332
    6. ']' → logprob: -6.968449592590332
    7. 'ord' → logprob: -7.093449592590332
    8. 'str' → logprob: -7.593449592590332
    9. '*' → logprob: -7.968449592590332
    10. '[input' → logprob: -8.343449592590332

Token 30: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4749138057231903
    2. '(map' → logprob: -0.9749138355255127
    3. '(' → logprob: -7.224913597106934
    4. '(str' → logprob: -10.349913597106934
    5. 'input' → logprob: -10.849913597106934
    6. '()' → logprob: -10.849913597106934
    7. 'map' → logprob: -11.224913597106934
    8. '(range' → logprob: -11.349913597106934
    9. '(int' → logprob: -12.224913597106934
    10. '('' → logprob: -13.724913597106934

Token 31: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0030336864292621613
    2. '()' → logprob: -6.003033638000488
    3. '().' → logprob: -7.878033638000488
    4. '()]' → logprob: -8.753033638000488
    5. '()),' → logprob: -11.753033638000488
    6. '()))' → logprob: -12.878033638000488
    7. '());' → logprob: -13.003033638000488
    8. '(' → logprob: -13.503033638000488
    9. ' ())' → logprob: -13.628033638000488
    10. '（）' → logprob: -14.253033638000488

Token 32: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030252210795879364
    2. '()]' → logprob: -3.53025221824646
    3. 'for' → logprob: -8.155252456665039
    4. '())' → logprob: -9.655252456665039
    5. '().' → logprob: -9.780252456665039
    6. ' for' → logprob: -10.405252456665039
    7. '(' → logprob: -10.655252456665039
    8. ']' → logprob: -11.030252456665039
    9. ' ()' → logprob: -11.405252456665039
    10. '()],' → logprob: -12.530252456665039

Token 33: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17053750157356262
    2. ' _' → logprob: -2.0455374717712402
    3. ' range' → logprob: -3.6705374717712402
    4. '_range' → logprob: -6.42053747177124
    5. 'range' → logprob: -8.795537948608398
    6. ' i' → logprob: -8.920537948608398
    7. ' in' → logprob: -10.045537948608398
    8. ' ' → logprob: -10.920537948608398
    9. '(range' → logprob: -10.920537948608398
    10. '_i' → logprob: -12.045537948608398

Token 34: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4765215516090393
    2. ' in' → logprob: -0.9765215516090393
    3. 'range' → logprob: -6.1015214920043945
    4. ' ' → logprob: -8.976521492004395
    5. ' range' → logprob: -9.976521492004395
    6. '  ' → logprob: -12.351521492004395
    7. 'int' → logprob: -13.101521492004395
    8. 'n' → logprob: -13.226521492004395
    9. 'import' → logprob: -13.226521492004395
    10. ')' → logprob: -13.476521492004395

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018155446276068687
    2. ' range' → logprob: -4.018155574798584
    3. '(range' → logprob: -12.893155097961426
    4. '[' → logprob: -13.768155097961426
    5. '	range' → logprob: -14.518155097961426
    6. ' ' → logprob: -14.768155097961426
    7. 'H' → logprob: -15.643155097961426
    8. 'r' → logprob: -15.893155097961426
    9. 'rang' → logprob: -16.018156051635742
    10. ')' → logprob: -16.018156051635742

Token 36: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00036168331280350685
    2. '(' → logprob: -8.000361442565918
    3. 'H' → logprob: -11.125361442565918
    4. '(W' → logprob: -12.125361442565918
    5. '(
' → logprob: -13.000361442565918
    6. ' (' → logprob: -13.375361442565918
    7. ')' → logprob: -14.500361442565918
    8. '((' → logprob: -14.625361442565918
    9. '(int' → logprob: -14.875361442565918
    10. ' H' → logprob: -15.500361442565918

Token 37: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00041125001735053957
    2. ')' → logprob: -7.875411033630371
    3. ']' → logprob: -10.750411033630371
    4. ')]
' → logprob: -12.125411033630371
    5. ')],' → logprob: -13.875411033630371
    6. ' )' → logprob: -14.000411033630371
    7. ')])' → logprob: -14.750411033630371
    8. ')
' → logprob: -15.000411033630371
    9. ')]
' → logprob: -15.375411033630371
    10. ')]

' → logprob: -15.375411033630371

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23248909413814545
    2. ' for' → logprob: -2.3574891090393066
    3. '
' → logprob: -2.7324891090393066
    4. 'areas' → logprob: -3.8574891090393066
    5. 's' → logprob: -4.482489109039307
    6. '<|end|>' → logprob: -4.732489109039307
    7. 'area' → logprob: -5.607489109039307
    8. ' areas' → logprob: -6.857489109039307
    9. 'deque' → logprob: -7.982489109039307
    10. '```' → logprob: -8.232488632202148

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.248026043176651
    2. 'i' → logprob: -2.248026132583618
    3. ' y' → logprob: -2.498026132583618
    4. ' h' → logprob: -4.123025894165039
    5. ' r' → logprob: -4.998025894165039
    6. 'y' → logprob: -5.248025894165039
    7. 'h' → logprob: -6.373025894165039
    8. 'r' → logprob: -6.748025894165039
    9. ' ' → logprob: -8.123025894165039
    10. ' row' → logprob: -8.623025894165039

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02640317566692829
    2. 'in' → logprob: -3.6514031887054443
    3. ',' → logprob: -9.526403427124023
    4. ' ' → logprob: -11.026403427124023
    5. 'n' → logprob: -12.151403427124023
    6. ' ,' → logprob: -13.526403427124023
    7. 'range' → logprob: -13.776403427124023
    8. 's' → logprob: -13.901403427124023
    9. '_' → logprob: -13.901403427124023
    10. '0' → logprob: -13.901403427124023

Token 41: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407761216163635
    2. ' range' → logprob: -0.974077582359314
    3. '(range' → logprob: -15.099077224731445
    4. '	range' → logprob: -15.474077224731445
    5. ' xrange' → logprob: -17.099077224731445
    6. '_range' → logprob: -17.224077224731445
    7. 'r' → logprob: -17.474077224731445
    8. ' ' → logprob: -17.599077224731445
    9. '```' → logprob: -17.599077224731445
    10. '0' → logprob: -18.849077224731445

Token 42: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0008639379520900548
    2. '(' → logprob: -7.125864028930664
    3. 'H' → logprob: -10.000864028930664
    4. ' (' → logprob: -11.625864028930664
    5. '(len' → logprob: -12.750864028930664
    6. ' H' → logprob: -14.375864028930664
    7. ')' → logprob: -15.250864028930664
    8. '(
' → logprob: -15.250864028930664
    9. '(W' → logprob: -15.250864028930664
    10. '((' → logprob: -16.250864028930664

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005691178957931697
    2. '):
' → logprob: -7.6255693435668945
    3. ':' → logprob: -9.750569343566895
    4. ')' → logprob: -11.500569343566895
    5. ' ):' → logprob: -11.875569343566895
    6. ']:' → logprob: -12.625569343566895
    7. '   ' → logprob: -14.750569343566895
    8. '+' → logprob: -14.750569343566895
    9. ' ' → logprob: -15.000569343566895
    10. '}:' → logprob: -15.125569343566895

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5340346693992615
    2. ' for' → logprob: -1.0340347290039062
    3. '<|end|>' → logprob: -3.2840347290039062
    4. ' ' → logprob: -4.159034729003906
    5. '<|end|>' → logprob: -6.409034729003906
    6. '	for' → logprob: -6.659034729003906
    7. 'for' → logprob: -7.159034729003906
    8. '    ' → logprob: -7.284034729003906
    9. '```' → logprob: -9.284034729003906
    10. '  ' → logprob: -9.409034729003906

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07767216116189957
    2. 'for' (adapté à ' for') → logprob: -3.202672243118286
    3. '   ' → logprob: -3.452672243118286
    4. ' ' → logprob: -6.827672004699707
    5. '    ' → logprob: -7.077672004699707
    6. '	for' → logprob: -8.202672004699707
    7. '<|end|>' → logprob: -9.452672004699707
    8. '       ' → logprob: -9.702672004699707
    9. '```' → logprob: -10.702672004699707
    10. '  ' → logprob: -11.952672004699707

Token 46: ' j' (ID: 441)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.5438726544380188
    2. 'j' → logprob: -2.043872594833374
    3. 'W' → logprob: -2.168872594833374
    4. ' j' → logprob: -2.293872594833374
    5. ' range' → logprob: -2.918872594833374
    6. 'range' → logprob: -3.918872594833374
    7. 'w' → logprob: -7.793872833251953
    8. ' w' → logprob: -8.543872833251953
    9. ' ' → logprob: -9.168872833251953
    10. '   ' → logprob: -9.418872833251953

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011360323056578636
    2. 'in' → logprob: -4.511360168457031
    3. '    ' → logprob: -9.136360168457031
    4. '   ' → logprob: -9.261360168457031
    5. ' ' → logprob: -9.636360168457031
    6. '<|end|>' → logprob: -11.261360168457031
    7. '0' → logprob: -12.011360168457031
    8. '  ' → logprob: -12.136360168457031
    9. '```' → logprob: -13.011360168457031
    10. ',' → logprob: -13.011360168457031

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11951304227113724
    2. 'range' → logprob: -2.2445130348205566
    3. '(range' → logprob: -5.244513034820557
    4. '(W' → logprob: -7.369513034820557
    5. ' W' → logprob: -7.869513034820557
    6. '(' → logprob: -8.494513511657715
    7. 'W' → logprob: -9.369513511657715
    8. ' (' → logprob: -9.994513511657715
    9. ')' → logprob: -10.994513511657715
    10. '(len' → logprob: -11.744513511657715

Token 49: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.012822289951145649
    2. '(' → logprob: -4.387822151184082
    3. ' (' → logprob: -8.637822151184082
    4. '(H' → logprob: -9.637822151184082
    5. ')' → logprob: -10.512822151184082
    6. '(range' → logprob: -10.887822151184082
    7. '(len' → logprob: -11.512822151184082
    8. ' W' → logprob: -13.137822151184082
    9. '(s' → logprob: -13.387822151184082
    10. '(
' → logprob: -13.637822151184082

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05225905776023865
    2. ')' → logprob: -3.0522589683532715
    3. ':' → logprob: -6.1772589683532715
    4. '):
' → logprob: -7.0522589683532715
    5. ' ):' → logprob: -7.9272589683532715
    6. '   ' → logprob: -8.92725944519043
    7. 'if' → logprob: -9.67725944519043
    8. ' )' → logprob: -9.92725944519043
    9. ']:' → logprob: -10.05225944519043
    10. ' if' → logprob: -10.42725944519043

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043265216052532196
    2. '   ' → logprob: -3.6682651042938232
    3. ':' → logprob: -5.168265342712402
    4. '    ' → logprob: -6.043265342712402
    5. ' if' → logprob: -6.168265342712402
    6. '<|end|>' → logprob: -6.418265342712402
    7. '```' → logprob: -6.418265342712402
    8. ',' → logprob: -6.543265342712402
    9. ' ' → logprob: -7.543265342712402
    10. ':
' → logprob: -7.918265342712402

Token 52: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.058677516877651215
    2. ' ' → logprob: -3.8086774349212646
    3. '       ' → logprob: -3.9336774349212646
    4. 'if' (adapté à ' if') → logprob: -4.433677673339844
    5. '```' → logprob: -6.683677673339844
    6. '    ' → logprob: -7.433677673339844
    7. '        ' → logprob: -7.808677673339844
    8. '   ' → logprob: -8.308677673339844
    9. '<|end|>' → logprob: -8.933677673339844
    10. ' ' → logprob: -8.933677673339844

Token 53: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.0008095058728940785
    2. 'area' → logprob: -7.125809669494629
    3. '(area' → logprob: -12.875809669494629
    4. ' areas' → logprob: -13.375809669494629
    5. ' not' → logprob: -15.250809669494629
    6. ' ' → logprob: -16.000808715820312
    7. ' área' → logprob: -16.250808715820312
    8. ' space' → logprob: -16.375808715820312
    9. '_area' → logprob: -16.625808715820312
    10. 'Area' → logprob: -16.750808715820312

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. 's' → logprob: -12.875005722045898
    3. '```' → logprob: -13.625005722045898
    4. '[i' → logprob: -14.000005722045898
    5. '０' → logprob: -15.312505722045898
    6. ' ' → logprob: -16.0000057220459
    7. '[' → logprob: -16.0625057220459
    8. '_' → logprob: -16.0625057220459
    9. '`' → logprob: -16.3750057220459
    10. '
' → logprob: -16.5625057220459

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.32654589228332e-05
    2. '[j' → logprob: -9.750073432922363
    3. ' [' → logprob: -12.125073432922363
    4. '[I' → logprob: -12.250073432922363
    5. '[' → logprob: -13.375073432922363
    6. '   ' → logprob: -14.250073432922363
    7. '==' → logprob: -14.375073432922363
    8. '```' → logprob: -14.500073432922363
    9. '][' → logprob: -14.875073432922363
    10. '[h' → logprob: -15.125073432922363

Token 56: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5298502445220947
    2. '[j' → logprob: -0.9048502445220947
    3. '[i' → logprob: -5.279850006103516
    4. ']' → logprob: -7.654850006103516
    5. ']==' → logprob: -8.404850006103516
    6. '==' → logprob: -8.779850006103516
    7. '[' → logprob: -8.779850006103516
    8. ' ][' → logprob: -9.654850006103516
    9. '[
' → logprob: -9.779850006103516
    10. '```' → logprob: -10.029850006103516

Token 57: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6240566083070007e-06
    2. '][' → logprob: -14.375001907348633
    3. ' j' → logprob: -14.500001907348633
    4. '[j' → logprob: -15.375001907348633
    5. '	j' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '```' → logprob: -16.750001907348633
    8. ']' → logprob: -17.375001907348633
    9. ' ' → logprob: -17.625001907348633
    10. ',j' → logprob: -17.875001907348633

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015059971250593662
    2. ']==' → logprob: -4.390059947967529
    3. ']=='' → logprob: -6.515059947967529
    4. '==' → logprob: -7.140059947967529
    5. ' ==' → logprob: -9.015060424804688
    6. ' ]' → logprob: -9.140060424804688
    7. '=='' → logprob: -11.765060424804688
    8. ')' → logprob: -11.765060424804688
    9. ']=="' → logprob: -12.265060424804688
    10. ']]' → logprob: -12.390060424804688

Token 59: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2866891026496887
    2. ' ==' → logprob: -1.411689043045044
    3. '=='' → logprob: -5.411689281463623
    4. '=="' → logprob: -7.661689281463623
    5. '=' → logprob: -8.661688804626465
    6. ' =='' → logprob: -9.286688804626465
    7. ']==' → logprob: -9.536688804626465
    8. ')' → logprob: -9.661688804626465
    9. ']' → logprob: -10.661688804626465
    10. ' in' → logprob: -10.786688804626465

Token 60: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.03974457457661629
    2. ''' → logprob: -3.7897446155548096
    3. ' '' → logprob: -4.4147443771362305
    4. '"S' → logprob: -6.1647443771362305
    5. ''s' → logprob: -7.1647443771362305
    6. 'S' → logprob: -7.6647443771362305
    7. ''A' → logprob: -8.03974437713623
    8. '"' → logprob: -8.41474437713623
    9. ' ' → logprob: -9.16474437713623
    10. ''T' → logprob: -9.66474437713623

Token 61: 'S' (ID: 50)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07912749797105789
    2. 'S' → logprob: -2.579127550125122
    3. '@' → logprob: -8.704127311706543
    4. '#' → logprob: -10.579127311706543
    5. 'A' → logprob: -10.704127311706543
    6. 'o' → logprob: -12.079127311706543
    7. 'R' → logprob: -12.579127311706543
    8. ''' → logprob: -13.204127311706543
    9. 'P' → logprob: -13.579127311706543
    10. 'C' → logprob: -13.704127311706543

Token 62: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00753635261207819
    2. '':
' → logprob: -5.1325364112854
    3. ''' → logprob: -6.6325364112854
    4. ':' → logprob: -8.757535934448242
    5. '':
' → logprob: -9.382535934448242
    6. ' ':' → logprob: -11.382535934448242
    7. ''):' → logprob: -11.382535934448242
    8. '":' → logprob: -11.882535934448242
    9. '':'' → logprob: -12.007535934448242
    10. ' '' → logprob: -12.882535934448242

Token 63: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029957015067338943
    2. ':start' → logprob: -3.9049570560455322
    3. '<|end|>' → logprob: -5.779956817626953
    4. ' :' → logprob: -7.029956817626953
    5. 'start' → logprob: -7.029956817626953
    6. '       ' → logprob: -7.404956817626953
    7. ',' → logprob: -7.404956817626953
    8. ':
' → logprob: -8.029956817626953
    9. '<|end|>' → logprob: -8.154956817626953
    10. ''s' → logprob: -8.279956817626953

Token 64: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.3869791328907013
    2. 'start' (adapté à ' start') → logprob: -1.136979103088379
    3. ',start' → logprob: -10.636979103088379
    4. '[start' → logprob: -10.761979103088379
    5. '_start' → logprob: -11.386979103088379
    6. '           ' → logprob: -11.511979103088379
    7. ':start' → logprob: -11.511979103088379
    8. 's' → logprob: -11.636979103088379
    9. '=start' → logprob: -12.136979103088379
    10. '	start' → logprob: -12.261979103088379

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006718925200402737
    2. '=' → logprob: -5.00671911239624
    3. ',' → logprob: -13.131718635559082
    4. ' =(' → logprob: -13.631718635559082
    5. '=(' → logprob: -16.0067195892334
    6. ' ' → logprob: -16.3817195892334
    7. '＝' → logprob: -16.7567195892334
    8. ' =
' → logprob: -17.0067195892334
    9. ')' → logprob: -17.6317195892334
    10. ' =)' → logprob: -17.6317195892334

Token 66: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.127418652176857
    2. '(i' → logprob: -2.1274187564849854
    3. '(' → logprob: -7.627418518066406
    4. ' ' → logprob: -13.502418518066406
    5. ' i' → logprob: -13.877418518066406
    6. '[i' → logprob: -14.252418518066406
    7. '(I' → logprob: -15.752418518066406
    8. 'i' → logprob: -16.127418518066406
    9. ' ' → logprob: -16.127418518066406
    10. '(ii' → logprob: -16.377418518066406

Token 67: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7120533811976202e-05
    2. ' i' → logprob: -11.000017166137695
    3. ')i' → logprob: -14.875017166137695
    4. '   ' → logprob: -17.500017166137695
    5. ')' → logprob: -17.750017166137695
    6. '	i' → logprob: -18.875017166137695
    7. 'j' → logprob: -20.750017166137695
    8. ''i' → logprob: -21.000017166137695
    9. '(i' → logprob: -21.000017166137695
    10. '_i' → logprob: -21.250017166137695

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007522129453718662
    2. ',j' → logprob: -7.3757524490356445
    3. ' ,' → logprob: -9.000752449035645
    4. '<|end|>' → logprob: -13.625752449035645
    5. '‌,' → logprob: -15.250752449035645
    6. '   ' → logprob: -15.500752449035645
    7. ',
' → logprob: -15.625752449035645
    8. ')' → logprob: -15.750752449035645
    9. ' ' → logprob: -16.250751495361328
    10. '<|end|>' → logprob: -16.625751495361328

Token 69: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011047814972698689
    2. ' j' → logprob: -4.511047840118408
    3. ')' → logprob: -17.63604736328125
    4. '	j' → logprob: -18.13604736328125
    5. ' ' → logprob: -19.01104736328125
    6. '    ' → logprob: -19.13604736328125
    7. ' ' → logprob: -20.26104736328125
    8. '   ' → logprob: -20.63604736328125
    9. ',j' → logprob: -20.88604736328125
    10. '_j' → logprob: -20.88604736328125

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.093505099765025e-05
    2. ')
' → logprob: -10.875020980834961
    3. ' )' → logprob: -13.625020980834961
    4. '),' → logprob: -15.375020980834961
    5. '       ' → logprob: -16.50002098083496
    6. '))' → logprob: -16.87502098083496
    7. ',' → logprob: -17.00002098083496
    8. ')#' → logprob: -17.00002098083496
    9. '')' → logprob: -17.50002098083496
    10. ')

' → logprob: -17.50002098083496

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018290061503648758
    2. 'elif' → logprob: -4.643290042877197
    3. 'area' → logprob: -5.643290042877197
    4. '           ' → logprob: -6.018290042877197
    5. 'for' → logprob: -7.143290042877197
    6. '```' → logprob: -7.893290042877197
    7. ' for' → logprob: -8.143290519714355
    8. ' elif' → logprob: -8.143290519714355
    9. ' area' → logprob: -9.018290519714355
    10. 'areas' → logprob: -9.143290519714355

Token 72: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24086247384548187
    2. 'elif' (adapté à ' elif') → logprob: -1.615862488746643
    3. ' elif' → logprob: -4.2408623695373535
    4. 'if' → logprob: -8.365862846374512
    5. ' if' → logprob: -8.865862846374512
    6. '           ' → logprob: -8.865862846374512
    7. '<|end|>' → logprob: -9.740862846374512
    8. '	elif' → logprob: -9.865862846374512
    9. 'area' → logprob: -10.115862846374512
    10. 'else' → logprob: -10.115862846374512

Token 73: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.02652287296950817
    2. 'area' → logprob: -3.6515228748321533
    3. ''' → logprob: -8.776522636413574
    4. ' ' → logprob: -11.526522636413574
    5. ' ' → logprob: -11.526522636413574
    6. ' a' → logprob: -11.651522636413574
    7. ' '' → logprob: -11.901522636413574
    8. '    ' → logprob: -12.026522636413574
    9. '`' → logprob: -12.151522636413574
    10. '(area' → logprob: -12.526522636413574

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022713875398039818
    2. '[i' → logprob: -4.147713661193848
    3. '[' → logprob: -5.397713661193848
    4. '[j' → logprob: -7.272713661193848
    5. '   ' → logprob: -8.272713661193848
    6. ''' → logprob: -8.647713661193848
    7. ''[' → logprob: -9.022713661193848
    8. '`' → logprob: -9.147713661193848
    9. '```' → logprob: -9.647713661193848
    10. '['' → logprob: -9.772713661193848

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[I' → logprob: -13.37500286102295
    3. '[j' → logprob: -14.12500286102295
    4. '[' → logprob: -14.62500286102295
    5. '```' → logprob: -15.00000286102295
    6. ' [' → logprob: -17.750003814697266
    7. 'i' → logprob: -17.750003814697266
    8. '][' → logprob: -17.875003814697266
    9. '[
' → logprob: -17.875003814697266
    10. '   ' → logprob: -17.875003814697266

Token 76: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.033844735473394394
    2. '[i' → logprob: -3.9088447093963623
    3. '[j' → logprob: -4.533844947814941
    4. '[' → logprob: -7.033844947814941
    5. ']' → logprob: -7.408844947814941
    6. ''][' → logprob: -7.908844947814941
    7. ')[' → logprob: -8.908844947814941
    8. '"][' → logprob: -9.408844947814941
    9. '[
' → logprob: -9.658844947814941
    10. '[I' → logprob: -10.033844947814941

Token 77: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.086285300552845
    2. ''' → logprob: -2.586285352706909
    3. ''S' → logprob: -5.96128511428833
    4. ''g' → logprob: -5.96128511428833
    5. ''s' → logprob: -7.46128511428833
    6. ''i' → logprob: -7.58628511428833
    7. 'G' → logprob: -7.83628511428833
    8. 'g' → logprob: -8.961285591125488
    9. ''x' → logprob: -9.461285591125488
    10. ''H' → logprob: -9.586285591125488

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019834261387586594
    2. ']==' → logprob: -4.269834041595459
    3. '==' → logprob: -5.644834041595459
    4. '[j' → logprob: -6.644834041595459
    5. '[' → logprob: -8.519834518432617
    6. ' ==' → logprob: -8.644834518432617
    7. '[i' → logprob: -9.394834518432617
    8. '[]' → logprob: -9.394834518432617
    9. '][' → logprob: -9.644834518432617
    10. '']' → logprob: -9.644834518432617

Token 79: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5253867506980896
    2. ' ==' → logprob: -0.9003867506980896
    3. ''' → logprob: -7.275386810302734
    4. '=='' → logprob: -7.400386810302734
    5. '[' → logprob: -7.650386810302734
    6. ']' → logprob: -8.650386810302734
    7. ']==' → logprob: -9.150386810302734
    8. '=' → logprob: -10.150386810302734
    9. ' =='' → logprob: -10.650386810302734
    10. ' ' → logprob: -10.775386810302734

Token 80: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0897398591041565
    2. ' '' → logprob: -2.4647397994995117
    3. ''O' → logprob: -8.464739799499512
    4. ''S' → logprob: -8.839739799499512
    5. ''T' → logprob: -8.964739799499512
    6. ' ' → logprob: -9.839739799499512
    7. ' ' → logprob: -9.964739799499512
    8. ''A' → logprob: -10.339739799499512
    9. ''E' → logprob: -10.589739799499512
    10. ' G' → logprob: -10.839739799499512

Token 81: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.51371169090271
    2. ''' → logprob: -1.01371169090271
    3. '"G' → logprob: -3.88871169090271
    4. ''g' → logprob: -4.763711929321289
    5. ''.' → logprob: -5.513711929321289
    6. ''E' → logprob: -7.138711929321289
    7. '#' → logprob: -7.263711929321289
    8. ''#' → logprob: -7.513711929321289
    9. ''T' → logprob: -7.763711929321289
    10. '.G' → logprob: -7.888711929321289

Token 82: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6563115119934082
    2. '':' → logprob: -0.7813115119934082
    3. '')' → logprob: -4.156311511993408
    4. ''):' → logprob: -5.406311511993408
    5. '':
' → logprob: -6.156311511993408
    6. ''):
' → logprob: -7.406311511993408
    7. ')' → logprob: -8.28131103515625
    8. '':
' → logprob: -9.65631103515625
    9. ':' → logprob: -9.78131103515625
    10. '):' → logprob: -10.15631103515625

Token 83: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01878727599978447
    2. '=' → logprob: -4.018787384033203
    3. ' (' → logprob: -7.893787384033203
    4. '           ' → logprob: -9.018787384033203
    5. ' =(' → logprob: -10.268787384033203
    6. '=(' → logprob: -10.518787384033203
    7. ' ' → logprob: -10.768787384033203
    8. ' =
' → logprob: -11.018787384033203
    9. '            ' → logprob: -11.518787384033203
    10. ':' → logprob: -11.643787384033203

Token 84: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.47070375084877014
    2. 'goal' (adapté à ' goal') → logprob: -1.2207037210464478
    3. ' (' → logprob: -3.2207038402557373
    4. '(goal' → logprob: -3.2207038402557373
    5. '(' → logprob: -8.220704078674316
    6. '           ' → logprob: -8.595704078674316
    7. '_goal' → logprob: -10.845704078674316
    8. 'end' → logprob: -10.845704078674316
    9. 'Goal' → logprob: -11.095704078674316
    10. '.goal' → logprob: -11.470704078674316

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589982092380524
    2. '=' → logprob: -3.0485899448394775
    3. ' ' → logprob: -13.923589706420898
    4. ')' → logprob: -14.798589706420898
    5. ' ==' → logprob: -15.048589706420898
    6. ' =(' → logprob: -15.173589706420898
    7. ' =
' → logprob: -15.548589706420898
    8. '<|end|>' → logprob: -15.923589706420898
    9. '＝' → logprob: -16.0485897064209
    10. ' =)' → logprob: -16.1735897064209

Token 86: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.009917102754116058
    2. '(i' → logprob: -4.634917259216309
    3. '(' → logprob: -8.759917259216309
    4. ' ' → logprob: -12.509917259216309
    5. '(s' → logprob: -16.259916305541992
    6. ' ' → logprob: -16.384916305541992
    7. ' i' → logprob: -16.509916305541992
    8. '(I' → logprob: -16.634916305541992
    9. '(j' → logprob: -17.009916305541992
    10. '(ii' → logprob: -17.634916305541992

Token 87: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.141186450899113e-05
    2. ' i' → logprob: -11.000020980834961
    3. ')' → logprob: -12.750020980834961
    4. ')i' → logprob: -13.375020980834961
    5. ' ' → logprob: -16.37502098083496
    6. '   ' → logprob: -17.00002098083496
    7. 'I' → logprob: -17.87502098083496
    8. '(i' → logprob: -18.25002098083496
    9. '	i' → logprob: -18.50002098083496
    10. '
' → logprob: -18.50002098083496

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11004859954118729
    2. ',j' → logprob: -2.610048532485962
    3. '[' → logprob: -3.610048532485962
    4. ')' → logprob: -6.735048770904541
    5. '[j' → logprob: -6.860048770904541
    6. ' ,' → logprob: -7.360048770904541
    7. ',i' → logprob: -8.110048294067383
    8. '[i' → logprob: -8.735048294067383
    9. 'i' → logprob: -8.985048294067383
    10. ' ' → logprob: -10.235048294067383

Token 89: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06283196061849594
    2. ' j' → logprob: -2.8128318786621094
    3. 'i' → logprob: -7.312831878662109
    4. ' i' → logprob: -9.18783187866211
    5. ')' → logprob: -9.56283187866211
    6. ' ' → logprob: -11.68783187866211
    7. '0' → logprob: -12.56283187866211
    8. '   ' → logprob: -12.81283187866211
    9. '    ' → logprob: -13.18783187866211
    10. 'W' → logprob: -13.56283187866211

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ' )' → logprob: -11.500017166137695
    3. ')
' → logprob: -12.375017166137695
    4. ')}' → logprob: -14.250017166137695
    5. '}' → logprob: -15.000017166137695
    6. '))' → logprob: -15.125017166137695
    7. '),' → logprob: -15.625017166137695
    8. '   ' → logprob: -15.750017166137695
    9. ')return' → logprob: -16.000017166137695
    10. ')#' → logprob: -16.000017166137695

Token 91: 'areas' (ID: 69250)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4279937148094177
    2. 'areas' → logprob: -1.3029937744140625
    3. '<|end|>' → logprob: -3.4279937744140625
    4. ' areas' → logprob: -4.6779937744140625
    5. '   ' → logprob: -4.6779937744140625
    6. '```' → logprob: -5.5529937744140625
    7. '#' → logprob: -5.9279937744140625
    8. '[' → logprob: -6.1779937744140625
    9. 'area' → logprob: -6.4279937744140625
    10. 'for' → logprob: -6.5529937744140625

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.18128003180027008
    2. ' =' → logprob: -2.4312801361083984
    3. '.' → logprob: -2.8062801361083984
    4. '=' → logprob: -4.056280136108398
    5. '.=' → logprob: -10.056280136108398
    6. '[:]' → logprob: -10.931280136108398
    7. '.extend' → logprob: -11.306280136108398
    8. ' +=' → logprob: -11.431280136108398
    9. ' .' → logprob: -11.556280136108398
    10. '.push' → logprob: -12.056280136108398

Token 93: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.005241344682872295
    2. '(' → logprob: -5.255241394042969
    3. 'area' → logprob: -12.380241394042969
    4. '((' → logprob: -13.630241394042969
    5. ' (' → logprob: -14.005241394042969
    6. '(space' → logprob: -15.130241394042969
    7. '(
' → logprob: -15.755241394042969
    8. '(copy' → logprob: -15.880241394042969
    9. '(depth' → logprob: -15.880241394042969
    10. '(array' → logprob: -16.25524139404297

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4617256056226324e-05
    2. '[' → logprob: -11.250014305114746
    3. ')' → logprob: -14.500014305114746
    4. ' ' → logprob: -15.125014305114746
    5. '_' → logprob: -15.125014305114746
    6. '０' → logprob: -16.000015258789062
    7. '[-' → logprob: -16.500015258789062
    8. '۰' → logprob: -16.750015258789062
    9. '```' → logprob: -17.562515258789062
    10. ' [' → logprob: -18.312515258789062

Token 95: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -14.000001907348633
    3. '))' → logprob: -14.375001907348633
    4. ')
' → logprob: -14.875001907348633
    5. '）' → logprob: -17.125001907348633
    6. ')`' → logprob: -17.125001907348633
    7. ']' → logprob: -17.375001907348633
    8. '),' → logprob: -17.750001907348633
    9. ')}' → logprob: -18.000001907348633
    10. '')' → logprob: -18.125001907348633

Token 96: 'N' (ID: 45)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2925387620925903
    2. '<|end|>' → logprob: -1.5425387620925903
    3. ')' → logprob: -2.042538642883301
    4. 'd' → logprob: -2.292538642883301
    5. '#' → logprob: -2.417538642883301
    6. 'while' → logprob: -3.917538642883301
    7. 'n' → logprob: -4.292538642883301
    8. 'visited' → logprob: -4.417538642883301
    9. '[' → logprob: -4.542538642883301
    10. 'dist' → logprob: -4.667538642883301

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022839955985546112
    2. '=' → logprob: -4.6478400230407715
    3. 'ext' → logprob: -4.7728400230407715
    4. '_' → logprob: -5.6478400230407715
    5. ' ' → logprob: -8.022839546203613
    6. '_ext' → logprob: -8.522839546203613
    7. 'um' → logprob: -8.772839546203613
    8. '=int' → logprob: -9.897839546203613
    9. ',' → logprob: -10.147839546203613
    10. 'EXT' → logprob: -10.147839546203613

Token 98: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15546031296253204
    2. ' int' → logprob: -2.0304603576660156
    3. '1' → logprob: -5.530460357666016
    4. ' H' → logprob: -6.030460357666016
    5. 'H' → logprob: -6.155460357666016
    6. '3' → logprob: -6.780460357666016
    7. '0' → logprob: -6.780460357666016
    8. ' ' → logprob: -7.030460357666016
    9. 'len' → logprob: -8.530460357666016
    10. '10' → logprob: -8.655460357666016

Token 99: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008636554703116417
    2. '(' → logprob: -4.758636474609375
    3. '(int' → logprob: -12.008636474609375
    4. ' (' → logprob: -12.508636474609375
    5. '()' → logprob: -12.633636474609375
    6. 'input' → logprob: -12.883636474609375
    7. '(in' → logprob: -12.883636474609375
    8. '=input' → logprob: -13.758636474609375
    9. '(
' → logprob: -13.883636474609375
    10. '(inp' → logprob: -14.383636474609375

Token 100: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10312282294034958
    2. '()' → logprob: -2.3531227111816406
    3. ')' → logprob: -5.853122711181641
    4. '())
' → logprob: -11.35312271118164
    5. ' ())' → logprob: -11.47812271118164
    6. '(' → logprob: -11.72812271118164
    7. '()
' → logprob: -12.72812271118164
    8. '().' → logprob: -12.72812271118164
    9. '();)' → logprob: -13.35312271118164
    10. '(),' → logprob: -14.22812271118164

Token 101: 'times' (ID: 32499)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06256649643182755
    2. 'dire' → logprob: -4.18756628036499
    3. 'areas' → logprob: -4.31256628036499
    4. 'moves' → logprob: -4.93756628036499
    5. 'cost' → logprob: -5.56256628036499
    6. 'colors' → logprob: -6.43756628036499
    7. 'steps' → logprob: -6.43756628036499
    8. 'commands' → logprob: -6.56256628036499
    9. 'dist' → logprob: -6.56256628036499
    10. 'dx' → logprob: -6.56256628036499

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1435011476278305
    2. '=' → logprob: -2.643501043319702
    3. '_' → logprob: -3.143501043319702
    4. 's' → logprob: -4.143501281738281
    5. ',' → logprob: -6.518501281738281
    6. '=[]' → logprob: -7.768501281738281
    7. ')' → logprob: -8.143501281738281
    8. '_list' → logprob: -8.518501281738281
    9. '_limit' → logprob: -9.268501281738281
    10. '[' → logprob: -9.393501281738281

Token 103: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.4940310716629028
    2. 'list' → logprob: -1.7440310716629028
    3. '[]' → logprob: -1.8690310716629028
    4. '[' → logprob: -1.9940310716629028
    5. ' [' → logprob: -2.1190309524536133
    6. '[list' → logprob: -2.2440309524536133
    7. ' []' → logprob: -2.4940309524536133
    8. '[int' → logprob: -6.994030952453613
    9. '[input' → logprob: -8.619030952453613
    10. '[len' → logprob: -8.619030952453613

Token 104: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0927879586815834
    2. 'times' → logprob: -3.092787981033325
    3. 'time' → logprob: -4.467787742614746
    4. 't' → logprob: -4.842787742614746
    5. ' for' → logprob: -5.592787742614746
    6. 'd' → logprob: -6.217787742614746
    7. 'a' → logprob: -6.467787742614746
    8. 'dp' → logprob: -6.717787742614746
    9. 'dist' → logprob: -7.092787742614746
    10. 'q' → logprob: -7.092787742614746

Token 105: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01815907657146454
    2. ' _' → logprob: -4.018158912658691
    3. ' i' → logprob: -11.768158912658691
    4. '_i' → logprob: -13.768158912658691
    5. ' ' → logprob: -15.268158912658691
    6. '_=' → logprob: -16.768159866333008
    7. 'i' → logprob: -16.893159866333008
    8. ' ' → logprob: -18.143159866333008
    9. ' in' → logprob: -19.018159866333008
    10. '_n' → logprob: -19.518159866333008

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062100671231746674
    2. 'in' → logprob: -2.812100648880005
    3. ' ' → logprob: -9.312100410461426
    4. 'range' → logprob: -11.062100410461426
    5. 'n' → logprob: -11.437100410461426
    6. 'times' → logprob: -12.687100410461426
    7. 'input' → logprob: -13.312100410461426
    8. 'i' → logprob: -13.437100410461426
    9. 'time' → logprob: -13.812100410461426
    10. ' _' → logprob: -13.812100410461426

Token 107: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692904472351074
    2. ' range' → logprob: -2.1269290447235107
    3. '	range' → logprob: -14.75192928314209
    4. ' ' → logprob: -15.87692928314209
    5. '(range' → logprob: -16.001928329467773
    6. '_range' → logprob: -16.126928329467773
    7. '_' → logprob: -16.126928329467773
    8. 'r' → logprob: -16.751928329467773
    9. 'rang' → logprob: -17.501928329467773
    10. 'ran' → logprob: -18.376928329467773

Token 108: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00041577612864784896
    2. '(' → logprob: -7.875415802001953
    3. ' (' → logprob: -10.375415802001953
    4. '(n' → logprob: -13.375415802001953
    5. 'N' → logprob: -14.000415802001953
    6. '(int' → logprob: -14.375415802001953
    7. '(
' → logprob: -14.375415802001953
    8. '()' → logprob: -15.250415802001953
    9. ' N' → logprob: -15.750415802001953
    10. '(range' → logprob: -15.750415802001953

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09512698650360107
    2. '):
' → logprob: -2.9701271057128906
    3. ' ):' → logprob: -3.4701271057128906
    4. ')' → logprob: -5.345127105712891
    5. ' ):
' → logprob: -6.345127105712891
    6. ',' → logprob: -7.095127105712891
    7. ' )' → logprob: -7.470127105712891
    8. ':' → logprob: -8.72012710571289
    9. '):
' → logprob: -9.22012710571289
    10. ' times' → logprob: -10.22012710571289

Token 110: '   ' (ID: 271)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.35762447118759155
    2. 'times' → logprob: -1.3576245307922363
    3. '   ' → logprob: -3.6076245307922363
    4. ' t' → logprob: -4.982624530792236
    5. 't' → logprob: -5.607624530792236
    6. ' time' → logprob: -5.982624530792236
    7. 'time' → logprob: -6.607624530792236
    8. 'x' → logprob: -8.670124053955078
    9. ' x' → logprob: -8.732624053955078
    10. 'a' → logprob: -9.045124053955078

Token 111: ' T' (ID: 353)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.43995973467826843
    2. ' times' → logprob: -1.5649597644805908
    3. 't' → logprob: -2.439959764480591
    4. ' t' → logprob: -3.689959764480591
    5. 'x' → logprob: -4.939959526062012
    6. 'a' → logprob: -4.939959526062012
    7. 'ti' → logprob: -5.814959526062012
    8. 'time' → logprob: -5.939959526062012
    9. 's' → logprob: -6.314959526062012
    10. 'd' → logprob: -6.439959526062012

Token 112: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06409294903278351
    2. '=' → logprob: -3.9390928745269775
    3. ' =' → logprob: -4.189093112945557
    4. 'i' → logprob: -4.689093112945557
    5. ',i' → logprob: -5.564093112945557
    6. ' ,' → logprob: -6.314093112945557
    7. ',p' → logprob: -6.439093112945557
    8. ',t' → logprob: -6.814093112945557
    9. 'imes' → logprob: -7.314093112945557
    10. '_i' → logprob: -7.439093112945557

Token 113: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008038113825023174
    2. ' int' → logprob: -5.25803804397583
    3. 'input' → logprob: -6.88303804397583
    4. 'list' → logprob: -6.88303804397583
    5. 'float' → logprob: -7.63303804397583
    6. 'tuple' → logprob: -9.258038520812988
    7. '[int' → logprob: -9.633038520812988
    8. ' input' → logprob: -10.258038520812988
    9. ' list' → logprob: -10.758038520812988
    10. '(int' → logprob: -11.508038520812988

Token 114: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.704273118884885e-07
    2. 'input' → logprob: -14.875000953674316
    3. '(' → logprob: -15.500000953674316
    4. '=input' → logprob: -16.875
    5. ',input' → logprob: -17.375
    6. '(int' → logprob: -17.75
    7. '()' → logprob: -17.75
    8. ' (' → logprob: -18.125
    9. '(inp' → logprob: -18.75
    10. ' input' → logprob: -19.75

Token 115: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02609405480325222
    2. '()' → logprob: -3.7760939598083496
    3. ')' → logprob: -6.52609395980835
    4. '())
' → logprob: -6.65109395980835
    5. '()
' → logprob: -10.026094436645508
    6. '(' → logprob: -11.026094436645508
    7. ' ())' → logprob: -11.776094436645508
    8. '().' → logprob: -12.401094436645508
    9. '())

' → logprob: -12.401094436645508
    10. '();)' → logprob: -12.651094436645508

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035735808312892914
    2. 'times' → logprob: -3.785735845565796
    3. ' times' → logprob: -4.410735607147217
    4. '(times' → logprob: -8.910736083984375
    5. '  ' → logprob: -10.410736083984375
    6. ',' → logprob: -10.410736083984375
    7. '_times' → logprob: -11.160736083984375
    8. ',t' → logprob: -11.285736083984375
    9. '.times' → logprob: -11.785736083984375
    10. '	t' → logprob: -12.035736083984375

Token 117: ' area' (ID: 3624)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.033893026411533356
    2. ' times' → logprob: -3.40889310836792
    3. 'time' → logprob: -9.783892631530762
    4. '   ' → logprob: -9.908892631530762
    5. 'T' → logprob: -10.408892631530762
    6. 't' → logprob: -10.533892631530762
    7. 'areas' → logprob: -11.658892631530762
    8. 'X' → logprob: -11.783892631530762
    9. 'Q' → logprob: -12.096392631530762
    10. 'for' → logprob: -12.096392631530762

Token 118: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12021517008543015
    2. '0' → logprob: -2.2452151775360107
    3. ' =' → logprob: -5.245214939117432
    4. '=' → logprob: -6.495214939117432
    5. '_s' → logprob: -9.37021541595459
    6. '_' → logprob: -9.37021541595459
    7. '_tmp' → logprob: -9.62021541595459
    8. '1' → logprob: -9.99521541595459
    9. '_times' → logprob: -10.49521541595459
    10. '.append' → logprob: -10.49521541595459

Token 119: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.09907897561788559
    2. '[' → logprob: -3.349078893661499
    3. '[list' → logprob: -3.349078893661499
    4. '[]' → logprob: -4.349079132080078
    5. '[array' → logprob: -5.974079132080078
    6. '[len' → logprob: -6.849079132080078
    7. '[List' → logprob: -6.974079132080078
    8. ' []' → logprob: -7.224079132080078
    9. '[l' → logprob: -7.474079132080078
    10. '[next' → logprob: -7.474079132080078

Token 120: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003154432924930006
    2. ' list' → logprob: -8.62531566619873
    3. 'input' → logprob: -9.25031566619873
    4. '[list' → logprob: -10.62531566619873
    5. ']' → logprob: -12.50031566619873
    6. '[]' → logprob: -13.00031566619873
    7. '   ' → logprob: -13.00031566619873
    8. '[input' → logprob: -13.50031566619873
    9. ' ' → logprob: -13.87531566619873
    10. ')' → logprob: -14.37531566619873

Token 121: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0006320207612589002
    2. 'input' → logprob: -7.375631809234619
    3. '(' → logprob: -13.000632286071777
    4. '(area' → logprob: -13.500632286071777
    5. '(str' → logprob: -14.250632286071777
    6. '()' → logprob: -14.625632286071777
    7. ',input' → logprob: -15.500632286071777
    8. ' input' → logprob: -15.625632286071777
    9. '=input' → logprob: -16.87563133239746
    10. '(map' → logprob: -17.00063133239746

Token 122: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -7.994086627149954e-05
    2. '()' → logprob: -10.125080108642578
    3. ' ())' → logprob: -10.250080108642578
    4. '().' → logprob: -13.375080108642578
    5. '())
' → logprob: -13.750080108642578
    6. '()]' → logprob: -14.500080108642578
    7. ')' → logprob: -14.625080108642578
    8. '(' → logprob: -14.750080108642578
    9. '()
' → logprob: -15.875080108642578
    10. ' ()' → logprob: -16.000080108642578

Token 123: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6806895732879639
    2. ')' → logprob: -1.4306895732879639
    3. 'for' → logprob: -1.8056895732879639
    4. ' for' → logprob: -2.430689573287964
    5. '	for' → logprob: -6.930689811706543
    6. '   ' → logprob: -7.180689811706543
    7. ' ()' → logprob: -8.805689811706543
    8. '())' → logprob: -9.305689811706543
    9. ' ' → logprob: -9.805689811706543
    10. '(' → logprob: -10.305689811706543

Token 124: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2604888081550598
    2. 'range' → logprob: -1.510488748550415
    3. '_' → logprob: -4.885488986968994
    4. '_range' → logprob: -7.260488986968994
    5. ' _' → logprob: -8.635488510131836
    6. '(range' → logprob: -9.510488510131836
    7. ' in' → logprob: -11.760488510131836
    8. 'for' → logprob: -13.260488510131836
    9. '	range' → logprob: -13.760488510131836
    10. '   ' → logprob: -15.010488510131836

Token 125: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07891535013914108
    2. ' range' → logprob: -2.5789153575897217
    3. ' in' → logprob: -11.5789155960083
    4. '(range' → logprob: -11.5789155960083
    5. '_range' → logprob: -12.2039155960083
    6. '_' → logprob: -14.3289155960083
    7. '	range' → logprob: -14.4539155960083
    8. ' _' → logprob: -14.8289155960083
    9. 'in' → logprob: -15.7039155960083
    10. '-range' → logprob: -16.953914642333984

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868734836578369
    2. ' range' → logprob: -1.136873483657837
    3. '_' → logprob: -13.761873245239258
    4. '(range' → logprob: -14.011873245239258
    5. '_range' → logprob: -15.136873245239258
    6. ' _' → logprob: -16.511873245239258
    7. '	range' → logprob: -16.511873245239258
    8. ' ' → logprob: -17.511873245239258
    9. '   ' → logprob: -17.636873245239258
    10. '    ' → logprob: -17.761873245239258

Token 127: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.03059505484998226
    2. 'range' → logprob: -4.155594825744629
    3. ' range' → logprob: -4.405594825744629
    4. '(range' → logprob: -6.780594825744629
    5. '(W' → logprob: -7.280594825744629
    6. 'H' → logprob: -8.655594825744629
    7. ' (' → logprob: -8.905594825744629
    8. '(' → logprob: -9.780594825744629
    9. '(N' → logprob: -11.405594825744629
    10. ' H' → logprob: -11.530594825744629

Token 128: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5786139965057373
    2. ')' → logprob: -0.8286139965057373
    3. ')
' → logprob: -6.453614234924316
    4. ']' → logprob: -6.953614234924316
    5. '   ' → logprob: -10.078614234924316
    6. ')
' → logprob: -10.578614234924316
    7. ')]
' → logprob: -10.828614234924316
    8. ' )' → logprob: -11.453614234924316
    9. '))' → logprob: -11.578614234924316
    10. ')])' → logprob: -11.578614234924316

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7285441160202026
    2. 'areas' → logprob: -1.3535441160202026
    3. 'times' → logprob: -1.6035441160202026
    4. ' times' → logprob: -3.353544235229492
    5. ' areas' → logprob: -3.853544235229492
    6. 'for' → logprob: -7.228544235229492
    7. ' for' → logprob: -8.353544235229492
    8. 'area' → logprob: -8.853544235229492
    9. ' ' → logprob: -8.978544235229492
    10. '  ' → logprob: -9.478544235229492

Token 130: ' times' (ID: 4238)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.15514075756072998
    2. 'times' (adapté à ' times') → logprob: -2.1551408767700195
    3. ' areas' → logprob: -3.9051408767700195
    4. ' times' → logprob: -5.1551408767700195
    5. 'for' → logprob: -7.1551408767700195
    6. 'area' → logprob: -7.4051408767700195
    7. '   ' → logprob: -8.40514087677002
    8. ' for' → logprob: -9.28014087677002
    9. 'time' → logprob: -10.71764087677002
    10. '
' → logprob: -10.84264087677002

Token 131: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000563638168387115
    2. '.' → logprob: -7.500563621520996
    3. '.ap' → logprob: -12.125563621520996
    4. '.app' → logprob: -12.500563621520996
    5. '.extend' → logprob: -14.375563621520996
    6. ' .' → logprob: -14.375563621520996
    7. '.push' → logprob: -16.000564575195312
    8. '.add' → logprob: -16.500564575195312
    9. 'append' → logprob: -16.875564575195312
    10. '.Append' → logprob: -17.000564575195312

Token 132: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.00035810720873996615
    2. '((' → logprob: -8.125358581542969
    3. '(' → logprob: -10.125358581542969
    4. '([' → logprob: -11.500358581542969
    5. '(t' → logprob: -12.125358581542969
    6. '(area' → logprob: -12.250358581542969
    7. '(time' → logprob: -14.625358581542969
    8. '(times' → logprob: -15.750358581542969
    9. '(
' → logprob: -15.875358581542969
    10. 'T' → logprob: -16.00035858154297

Token 133: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38712435960769653
    2. ')' → logprob: -1.1371243000030518
    3. ' )
' → logprob: -8.887124061584473
    4. ')
' → logprob: -9.637124061584473
    5. ' )' → logprob: -10.262124061584473
    6. ',' → logprob: -12.012124061584473
    7. '   ' → logprob: -12.762124061584473
    8. ')

' → logprob: -13.387124061584473
    9. '
' → logprob: -13.512124061584473
    10. '),' → logprob: -15.012124061584473

Token 134: '   ' (ID: 271)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.0048275114968419075
    2. '   ' → logprob: -5.504827499389648
    3. ' areas' → logprob: -7.504827499389648
    4. 'area' → logprob: -8.754827499389648
    5. 'for' → logprob: -11.004827499389648
    6. 'if' → logprob: -12.254827499389648
    7. '#' → logprob: -12.754827499389648
    8. 'are' → logprob: -13.442327499389648
    9. '```' → logprob: -13.567327499389648
    10. 'assert' → logprob: -13.629827499389648

Token 135: ' areas' (ID: 6723)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' (adapté à ' areas') → logprob: -0.00036156410351395607
    2. ' areas' → logprob: -8.250361442565918
    3. '   ' → logprob: -9.625361442565918
    4. 'for' → logprob: -10.875361442565918
    5. 'area' → logprob: -11.375361442565918
    6. 'if' → logprob: -14.250361442565918
    7. ' ' → logprob: -14.500361442565918
    8. 'are' → logprob: -14.750361442565918
    9. 'ares' → logprob: -14.750361442565918
    10. ' for' → logprob: -15.375361442565918

Token 136: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.404745439183898e-05
    2. '.' → logprob: -10.62503433227539
    3. '.app' → logprob: -11.87503433227539
    4. '.extend' → logprob: -13.75003433227539
    5. '.ap' → logprob: -14.37503433227539
    6. 'append' → logprob: -14.75003433227539
    7. '.push' → logprob: -15.25003433227539
    8. ' .' → logprob: -15.75003433227539
    9. '.Append' → logprob: -16.62503433227539
    10. '.add' → logprob: -17.00003433227539

Token 137: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.250035285949707
    3. '(
' → logprob: -15.125035285949707
    4. '((' → logprob: -18.500036239624023
    5. 'area' → logprob: -18.500036239624023
    6. '(a' → logprob: -19.250036239624023
    7. '(space' → logprob: -19.625036239624023
    8. ' (' → logprob: -19.750036239624023
    9. '(angle' → logprob: -20.000036239624023
    10. '(interval' → logprob: -20.250036239624023

Token 138: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ' )' → logprob: -11.750008583068848
    3. ')
' → logprob: -15.000008583068848
    4. '))' → logprob: -18.00000762939453
    5. ')return' → logprob: -18.00000762939453
    6. ')`' → logprob: -18.00000762939453
    7. '#' → logprob: -18.25000762939453
    8. '`)' → logprob: -18.37500762939453
    9. '）' → logprob: -18.37500762939453
    10. '}' → logprob: -18.50000762939453

Token 139: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3404947519302368
    2. 'dp' → logprob: -1.7154947519302368
    3. 'visited' → logprob: -3.0904946327209473
    4. 'INF' → logprob: -3.5904946327209473
    5. 'def' → logprob: -4.465494632720947
    6. '#' → logprob: -5.090494632720947
    7. 'from' → logprob: -5.215494632720947
    8. 'dx' → logprob: -5.965494632720947
    9. 'q' → logprob: -6.090494632720947
    10. 'time' → logprob: -6.840494632720947

Token 140: ' Pre' (ID: 4659)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3173791766166687
    2. 'def' → logprob: -2.5673792362213135
    3. 'dist' → logprob: -3.3173792362213135
    4. ' from' → logprob: -3.5673792362213135
    5. 'dire' → logprob: -3.9423792362213135
    6. 'dx' → logprob: -3.9423792362213135
    7. '#' → logprob: -4.192378997802734
    8. 'q' → logprob: -4.317378997802734
    9. 'dp' → logprob: -4.567378997802734
    10. ' dist' → logprob: -4.692378997802734

Token 141: 'pend' (ID: 5293)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.8978376984596252
    2. 'd' → logprob: -2.0228376388549805
    3. 'vious' → logprob: -2.3978376388549805
    4. 'compute' → logprob: -2.8978376388549805
    5. 'v' → logprob: -3.1478376388549805
    6. 'f' → logprob: -3.2728376388549805
    7. 'from' → logprob: -3.3978376388549805
    8. 'pare' → logprob: -3.5228376388549805
    9. 'dict' → logprob: -3.6478376388549805
    10. 'view' → logprob: -3.6478376388549805

Token 142: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.134315624833107
    2. ' ' → logprob: -3.3843157291412354
    3. ' times' → logprob: -3.8843157291412354
    4. 'times' → logprob: -4.259315490722656
    5. '[' → logprob: -4.884315490722656
    6. '<|end|>' → logprob: -5.134315490722656
    7. 'start' → logprob: -5.384315490722656
    8. '(' → logprob: -5.634315490722656
    9. ' areas' → logprob: -5.759315490722656
    10. '-' → logprob: -5.884315490722656

Token 143: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8440896272659302
    2. '0' → logprob: -1.2190896272659302
    3. 'times' → logprob: -2.2190895080566406
    4. ' times' → logprob: -3.2190895080566406
    5. 'state' → logprob: -3.3440895080566406
    6. ' time' → logprob: -3.3440895080566406
    7. 'area' → logprob: -4.594089508056641
    8. 'start' → logprob: -4.719089508056641
    9. 'areas' → logprob: -4.719089508056641
    10. ' state' → logprob: -5.344089508056641

Token 144: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.643441379070282
    2. 'times' → logprob: -1.2684414386749268
    3. '0' → logprob: -1.7684414386749268
    4. '[' → logprob: -4.893441200256348
    5. '=' → logprob: -5.268441200256348
    6. ' =' → logprob: -5.393441200256348
    7. ' times' → logprob: -6.268441200256348
    8. 'time' → logprob: -7.518441200256348
    9. '_times' → logprob: -7.518441200256348
    10. ' ' → logprob: -8.018441200256348

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013307405635714531
    2. 'times' → logprob: -5.013307571411133
    3. '(' → logprob: -5.263307571411133
    4. '[' → logprob: -6.638307571411133
    5. '(times' → logprob: -9.888307571411133
    6. ' times' → logprob: -11.388307571411133
    7. '-' → logprob: -12.638307571411133
    8. 's' → logprob: -12.763307571411133
    9. ' ' → logprob: -12.888307571411133
    10. '([' → logprob: -13.263307571411133

Token 146: '
' (ID: 198)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.004706018604338169
    2. ' times' → logprob: -5.379705905914307
    3. '0' → logprob: -9.629706382751465
    4. '(times' → logprob: -11.879706382751465
    5. '
' → logprob: -12.254706382751465
    6. 'timestamps' → logprob: -12.754706382751465
    7. 'time' → logprob: -12.879706382751465
    8. '[' → logprob: -14.379706382751465
    9. '.times' → logprob: -14.379706382751465
    10. '```' → logprob: -14.629706382751465

Token 147: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.0023551913909614086
    2. ' times' → logprob: -6.127355098724365
    3. '0' → logprob: -8.752355575561523
    4. 'time' → logprob: -12.252355575561523
    5. '[' → logprob: -13.127355575561523
    6. '(times' → logprob: -13.877355575561523
    7. 'timestamps' → logprob: -14.002355575561523
    8. '
' → logprob: -14.127355575561523
    9. '```' → logprob: -14.377355575561523
    10. 't' → logprob: -14.877355575561523

Token 148: ' =' (ID: 314)
  Prédit: '.insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.00028541131177917123
    2. ' =' → logprob: -8.875285148620605
    3. '.' → logprob: -9.250285148620605
    4. '=' → logprob: -10.625285148620605
    5. 'insert' → logprob: -10.750285148620605
    6. '=[' → logprob: -13.250285148620605
    7. '.append' → logprob: -14.250285148620605
    8. '.unshift' → logprob: -14.750285148620605
    9. ' .' → logprob: -15.000285148620605
    10. '.Insert' → logprob: -15.750285148620605

Token 149: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017025562701746821
    2. ' [' → logprob: -6.376702785491943
    3. '([' → logprob: -15.251702308654785
    4. ' ' → logprob: -17.0017032623291
    5. ' ' → logprob: -17.6267032623291
    6. '[len' → logprob: -17.7517032623291
    7. '=[' → logprob: -18.0017032623291
    8. '[t' → logprob: -18.6267032623291
    9. '[-' → logprob: -19.3767032623291
    10. '0' → logprob: -19.6267032623291

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -15.625006675720215
    4. '   ' → logprob: -16.2500057220459
    5. '```' → logprob: -17.7500057220459
    6. ']' → logprob: -18.5625057220459
    7. '۰' → logprob: -18.7500057220459
    8. '
' → logprob: -18.8125057220459
    9. ',' → logprob: -18.8125057220459
    10. '`' → logprob: -19.0000057220459

Token 151: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029625516617670655
    2. ']+' → logprob: -8.125296592712402
    3. ',' → logprob: -16.250295639038086
    4. ' ]' → logprob: -16.625295639038086
    5. '`]' → logprob: -18.250295639038086
    6. '']' → logprob: -18.875295639038086
    7. ')' → logprob: -19.000295639038086
    8. ']+=' → logprob: -20.250295639038086
    9. '}' → logprob: -20.500295639038086
    10. '"]' → logprob: -20.500295639038086

Token 152: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020640572533011436
    2. ' +' → logprob: -3.8956406116485596
    3. ']+' → logprob: -9.52064037322998
    4. '+[' → logprob: -12.02064037322998
    5. ']' → logprob: -12.64564037322998
    6. ')+' → logprob: -12.77064037322998
    7. '+t' → logprob: -12.89564037322998
    8. '+
' → logprob: -12.89564037322998
    9. '
' → logprob: -13.52064037322998
    10. '+n' → logprob: -14.02064037322998

Token 153: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.2014147937297821
    2. ' times' → logprob: -1.7014148235321045
    3. 'time' → logprob: -13.951415061950684
    4. '(times' → logprob: -15.951415061950684
    5. 'list' → logprob: -16.201414108276367
    6. '[' → logprob: -16.326414108276367
    7. 'tim' → logprob: -16.451414108276367
    8. ' ' → logprob: -16.451414108276367
    9. '_times' → logprob: -17.326414108276367
    10. ' [' → logprob: -17.451414108276367

Token 154: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.41338688135147095
    2. 'dp' → logprob: -2.038386821746826
    3. 'visited' → logprob: -2.413386821746826
    4. '
' → logprob: -2.663386821746826
    5. 'distance' → logprob: -3.663386821746826
    6. 'time' → logprob: -5.788386821746826
    7. 'max' → logprob: -5.913386821746826
    8. '#' → logprob: -6.038386821746826
    9. 'from' → logprob: -6.038386821746826
    10. 'queue' → logprob: -6.413386821746826

Token 155: 'max' (ID: 3228)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6266109347343445
    2. 'dp' → logprob: -1.1266109943389893
    3. 'from' → logprob: -3.0016109943389893
    4. 'INF' → logprob: -3.1266109943389893
    5. '#' → logprob: -3.8766109943389893
    6. 'visited' → logprob: -4.62661075592041
    7. 'time' → logprob: -6.25161075592041
    8. 'q' → logprob: -6.37661075592041
    9. 'inf' → logprob: -6.75161075592041
    10. 'max' → logprob: -6.87661075592041

Token 156: '_T' (ID: 2154)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.026900555938482285
    2. '_t' → logprob: -4.401900768280029
    3. '_times' → logprob: -5.401900768280029
    4. '_' → logprob: -5.651900768280029
    5. 'time' → logprob: -6.401900768280029
    6. '_cost' → logprob: -6.901900768280029
    7. '_dist' → logprob: -7.276900768280029
    8. '_distance' → logprob: -7.401900768280029
    9. '_steps' → logprob: -7.901900768280029
    10. '_T' → logprob: -8.026900291442871

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009763410314917564
    2. '=' → logprob: -4.634763240814209
    3. ' ' → logprob: -12.509763717651367
    4. '=int' → logprob: -13.634763717651367
    5. ',' → logprob: -14.134763717651367
    6. '=max' → logprob: -14.634763717651367
    7. 's' → logprob: -15.134763717651367
    8. '_' → logprob: -15.634763717651367
    9. '＝' → logprob: -15.634763717651367
    10. 'x' → logprob: -15.884763717651367

Token 158: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.6444598436355591
    2. ' times' → logprob: -0.8944598436355591
    3. '10' → logprob: -2.8944597244262695
    4. ' ' → logprob: -5.3944597244262695
    5. '100' → logprob: -6.0194597244262695
    6. ' max' → logprob: -6.3944597244262695
    7. 'max' → logprob: -7.0194597244262695
    8. 'float' → logprob: -8.14445972442627
    9. 'int' → logprob: -8.64445972442627
    10. ' float' → logprob: -8.76945972442627

Token 159: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.375004768371582
    3. ' [-' → logprob: -15.000004768371582
    4. '[::-' → logprob: -17.875003814697266
    5. '[len' → logprob: -18.500003814697266
    6. '][-' → logprob: -18.625003814697266
    7. '-' → logprob: -18.750003814697266
    8. '```' → logprob: -19.000003814697266
    9. '[N' → logprob: -19.125003814697266
    10. '[
' → logprob: -19.375003814697266

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. ']' → logprob: -16.25
    4. '0' → logprob: -17.75
    5. '-' → logprob: -18.1875
    6. '１' → logprob: -18.75
    7. '```' → logprob: -19.125
    8. '(' → logprob: -19.125
    9. '2' → logprob: -19.5625
    10. ')' → logprob: -19.5625

Token 161: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.399646520614624
    2. ' +' → logprob: -1.399646520614624
    3. ']' → logprob: -2.524646520614624
    4. ' ]' → logprob: -6.649646759033203
    5. ')' → logprob: -7.274646759033203
    6. ']+' → logprob: -7.524646759033203
    7. '<|end|>' → logprob: -9.524646759033203
    8. '+]' → logprob: -10.899646759033203
    9. ' )' → logprob: -11.149646759033203
    10. ' ' → logprob: -11.399646759033203

Token 162: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3488825857639313
    2. 'dp' → logprob: -1.9738825559616089
    3. 'INF' → logprob: -2.4738826751708984
    4. 'visited' → logprob: -3.3488826751708984
    5. 'from' → logprob: -4.223882675170898
    6. '#' → logprob: -4.723882675170898
    7. 'cost' → logprob: -5.973882675170898
    8. 'time' → logprob: -6.223882675170898
    9. 'inf' → logprob: -6.223882675170898
    10. 'distance' → logprob: -6.723882675170898

Token 163: ' For' (ID: 2214)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4393247067928314
    2. 'dp' → logprob: -1.8143247365951538
    3. 'from' → logprob: -2.8143246173858643
    4. 'visited' → logprob: -3.1893246173858643
    5. 'INF' → logprob: -3.3143246173858643
    6. '#' → logprob: -3.4393246173858643
    7. 'def' → logprob: -4.939324855804443
    8. 'cost' → logprob: -6.189324855804443
    9. 'dire' → logprob: -6.314324855804443
    10. 'distance' → logprob: -6.439324855804443

Token 164: ' convenience' (ID: 24582)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.1307458877563477
    2. ' i' → logprob: -1.2557458877563477
    3. 'i' → logprob: -2.7557458877563477
    4. 't' → logprob: -2.7557458877563477
    5. ' d' → logprob: -3.0057458877563477
    6. ' dp' → logprob: -3.0057458877563477
    7. 'dp' → logprob: -4.005745887756348
    8. ' time' → logprob: -4.005745887756348
    9. ' dist' → logprob: -4.130745887756348
    10. 'd' → logprob: -4.505745887756348

Token 165: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5361862778663635
    2. 'visited' → logprob: -1.7861862182617188
    3. 'dp' → logprob: -2.6611862182617188
    4. 'times' → logprob: -3.4111862182617188
    5. ' visited' → logprob: -3.5361862182617188
    6. ' dist' → logprob: -3.5361862182617188
    7. 'distance' → logprob: -4.161186218261719
    8. ' distances' → logprob: -4.161186218261719
    9. 'max' → logprob: -4.911186218261719
    10. 'from' → logprob: -5.036186218261719

Token 166: ' add' (ID: 1147)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.1632639616727829
    2. 'max' → logprob: -3.288264036178589
    3. 'visited' → logprob: -4.28826379776001
    4. '#' → logprob: -4.41326379776001
    5. 'dp' → logprob: -4.41326379776001
    6. 'dx' → logprob: -4.53826379776001
    7. 'from' → logprob: -4.53826379776001
    8. 'dirs' → logprob: -4.66326379776001
    9. 'time' → logprob: -5.28826379776001
    10. ' directions' → logprob: -5.41326379776001

Token 167: ' a' (ID: 261)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.7860351204872131
    2. ' a' → logprob: -1.1610350608825684
    3. ' one' → logprob: -2.2860350608825684
    4. ' max' → logprob: -3.2860350608825684
    5. 'max' → logprob: -3.2860350608825684
    6. 'a' → logprob: -4.036035060882568
    7. ' the' → logprob: -4.661035060882568
    8. 'one' → logprob: -5.536035060882568
    9. ' W' → logprob: -5.911035060882568
    10. 'an' → logprob: -6.161035060882568

Token 168: ' last' (ID: 2174)
  Prédit: ' dummy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dummy' → logprob: -0.7235299348831177
    2. 'n' → logprob: -1.5985299348831177
    3. 'dummy' → logprob: -2.098529815673828
    4. ' final' → logprob: -2.223529815673828
    5. 'final' → logprob: -4.223529815673828
    6. 'sent' → logprob: -4.473529815673828
    7. ' sentinel' → logprob: -4.473529815673828
    8. ' space' → logprob: -5.598529815673828
    9. ' column' → logprob: -5.723529815673828
    10. 'space' → logprob: -5.848529815673828

Token 169: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9769098162651062
    2. 'element' → logprob: -1.976909875869751
    3. ' entry' → logprob: -2.601909875869751
    4. ' element' → logprob: -2.726909875869751
    5. 'area' → logprob: -2.726909875869751
    6. 'times' → logprob: -2.851909875869751
    7. ' area' → logprob: -2.976909875869751
    8. ' time' → logprob: -3.101909875869751
    9. 'entry' → logprob: -3.351909875869751
    10. ' times' → logprob: -3.476909875869751

Token 170: ' after' (ID: 1934)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3873707056045532
    2. ' =' → logprob: -1.2623707056045532
    3. ' times' → logprob: -3.8873705863952637
    4. '.append' → logprob: -5.512370586395264
    5. 'times' → logprob: -5.637370586395264
    6. '=max' → logprob: -5.762370586395264
    7. '+' → logprob: -6.762370586395264
    8. '+=' → logprob: -6.887370586395264
    9. 'max' → logprob: -7.012370586395264
    10. ',' → logprob: -7.387370586395264

Token 171: ' last' (ID: 2174)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02326202020049095
    2. 'times' → logprob: -4.023262023925781
    3. ' max' → logprob: -5.523262023925781
    4. ' times' → logprob: -7.523262023925781
    5. '10' → logprob: -7.648262023925781
    6. '100' → logprob: -10.023262023925781
    7. ' ' → logprob: -10.773262023925781
    8. 'the' → logprob: -12.148262023925781
    9. '1' → logprob: -12.773262023925781
    10. '_max' → logprob: -13.148262023925781

Token 172: ' change' (ID: 3343)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -1.0895214080810547
    2. 'max' → logprob: -1.2145214080810547
    3. ' times' → logprob: -1.2145214080810547
    4. 'time' → logprob: -3.5895214080810547
    5. ' max' → logprob: -4.464521408081055
    6. '_times' → logprob: -4.839521408081055
    7. '_T' → logprob: -4.964521408081055
    8. ' time' → logprob: -5.089521408081055
    9. 'T' → logprob: -6.089521408081055
    10. 's' → logprob: -6.714521408081055

Token 173: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6039584875106812
    2. 'times' → logprob: -1.7289584875106812
    3. ' =' → logprob: -2.1039586067199707
    4. ' times' → logprob: -2.7289586067199707
    5. 's' → logprob: -3.6039586067199707
    6. 'max' → logprob: -4.228958606719971
    7. '.append' → logprob: -4.228958606719971
    8. '+=' → logprob: -4.978958606719971
    9. ',' → logprob: -5.103958606719971
    10. '=max' → logprob: -5.228958606719971

Token 174: ' handle' (ID: 5318)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.196790412068367
    2. 'times' → logprob: -2.3217904567718506
    3. '10' → logprob: -3.0717904567718506
    4. '100' → logprob: -3.5717904567718506
    5. '999' → logprob: -6.1967902183532715
    6. ' max' → logprob: -6.6967902183532715
    7. 'areas' → logprob: -7.5717902183532715
    8. ' times' → logprob: -7.5717902183532715
    9. 'float' → logprob: -8.07179069519043
    10. ' ' → logprob: -8.32179069519043

Token 175: ' infinity' (ID: 103156)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1440286487340927
    2. '10' → logprob: -3.019028663635254
    3. ' max' → logprob: -3.144028663635254
    4. '100' → logprob: -4.394028663635254
    5. 'W' → logprob: -5.019028663635254
    6. 'float' → logprob: -5.394028663635254
    7. 'times' → logprob: -5.644028663635254
    8. 'areas' → logprob: -6.144028663635254
    9. 'H' → logprob: -6.269028663635254
    10. ' times' → logprob: -6.644028663635254

Token 176: '
' (ID: 198)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.013137287460267544
    2. ' times' → logprob: -4.388137340545654
    3. 's' → logprob: -7.513137340545654
    4. 'import' → logprob: -10.388136863708496
    5. '_times' → logprob: -11.388136863708496
    6. ',' → logprob: -11.763136863708496
    7. '(times' → logprob: -12.013136863708496
    8. 'time' → logprob: -12.513136863708496
    9. 'max' → logprob: -12.638136863708496
    10. '```' → logprob: -12.888136863708496

Token 177: 'times' (ID: 32499)
  Prédit: 'times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.062248315662145615
    2. ' times' → logprob: -2.8122482299804688
    3. 's' → logprob: -9.562248229980469
    4. ',' → logprob: -9.687248229980469
    5. '_times' → logprob: -10.562248229980469
    6. '```' → logprob: -10.812248229980469
    7. 'time' → logprob: -11.312248229980469
    8. 'import' → logprob: -11.312248229980469
    9. 'max' → logprob: -11.437248229980469
    10. '_' → logprob: -11.437248229980469

Token 178: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005462417611852288
    2. '+' → logprob: -7.750546455383301
    3. '.' → logprob: -9.6255464553833
    4. '=' → logprob: -10.2505464553833
    5. '+=' → logprob: -11.7505464553833
    6. '.app' → logprob: -13.3755464553833
    7. ' +=' → logprob: -13.5005464553833
    8. '+.' → logprob: -13.6255464553833
    9. '.extend' → logprob: -13.8755464553833
    10. ' +' → logprob: -14.6255464553833

Token 179: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004125061444938183
    2. '(max' → logprob: -5.879125118255615
    3. '(float' → logprob: -7.254125118255615
    4. '(int' → logprob: -7.754125118255615
    5. '10' → logprob: -8.754124641418457
    6. '(times' → logprob: -10.629124641418457
    7. '((' → logprob: -15.379124641418457
    8. '(T' → logprob: -15.879124641418457
    9. 'float' → logprob: -15.879124641418457
    10. 'max' → logprob: -16.379125595092773

Token 180: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0023706546053290367
    2. 'max' → logprob: -6.377370834350586
    3. 'float' → logprob: -8.002370834350586
    4. 'int' → logprob: -9.127370834350586
    5. '100' → logprob: -9.252370834350586
    6. '1' → logprob: -9.877370834350586
    7. ' ' → logprob: -10.002370834350586
    8. 'times' → logprob: -11.252370834350586
    9. '999' → logprob: -12.127370834350586
    10. '2' → logprob: -12.877370834350586

Token 181: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5297253131866455
    2. '9' → logprob: -1.4047253131866455
    3. '10' → logprob: -2.0297253131866455
    4. '18' → logprob: -4.154725074768066
    5. '12' → logprob: -4.654725074768066
    6. '15' → logprob: -5.029725074768066
    7. '11' → logprob: -7.029725074768066
    8. '20' → logprob: -7.279725074768066
    9. '7' → logprob: -7.654725074768066
    10. '8' → logprob: -8.904725074768066

Token 182: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5601691007614136
    2. '10' → logprob: -1.5601691007614136
    3. '15' → logprob: -1.6851691007614136
    4. '18' → logprob: -3.685169219970703
    5. '12' → logprob: -5.060169219970703
    6. '20' → logprob: -7.060169219970703
    7. '11' → logprob: -8.060169219970703
    8. '16' → logprob: -8.560169219970703
    9. '14' → logprob: -8.560169219970703
    10. '7' → logprob: -8.810169219970703

Token 183: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006651430390775204
    2. ' )' → logprob: -5.506651401519775
    3. '+' → logprob: -6.006651401519775
    4. ' +' → logprob: -9.631651878356934
    5. '+)' → logprob: -10.756651878356934
    6. ')
' → logprob: -11.631651878356934
    7. '<|end|>' → logprob: -13.006651878356934
    8. ',' → logprob: -13.256651878356934
    9. '```' → logprob: -13.631651878356934
    10. '))' → logprob: -13.756651878356934

Token 184: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.30576151609420776
    2. 'dp' → logprob: -2.0557615756988525
    3. 'visited' → logprob: -2.9307615756988525
    4. '#' → logprob: -3.5557615756988525
    5. '
' → logprob: -3.5557615756988525
    6. 'distance' → logprob: -5.305761337280273
    7. 'INF' → logprob: -5.305761337280273
    8. 'time' → logprob: -5.555761337280273
    9. 'def' → logprob: -6.305761337280273
    10. 'cost' → logprob: -6.430761337280273

Token 185: ' Directions' (ID: 85422)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.666395366191864
    2. '#' → logprob: -1.7913954257965088
    3. 'visited' → logprob: -1.7913954257965088
    4. 'dp' → logprob: -2.916395425796509
    5. 'def' → logprob: -3.666395425796509
    6. 'INF' → logprob: -3.666395425796509
    7. 'dire' → logprob: -3.916395425796509
    8. 'from' → logprob: -4.91639518737793
    9. 'dx' → logprob: -5.66639518737793
    10. 'dirs' → logprob: -5.91639518737793

Token 186: ':' (ID: 25)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.438896119594574
    2. 'dire' → logprob: -1.8138961791992188
    3. 'dirs' → logprob: -2.1888961791992188
    4. ' =' → logprob: -3.6888961791992188
    5. 'dy' → logprob: -4.063896179199219
    6. '
' → logprob: -4.188896179199219
    7. 'd' → logprob: -4.688896179199219
    8. 'DIR' → logprob: -5.813896179199219
    9. ' directions' → logprob: -6.188896179199219
    10. 'D' → logprob: -6.188896179199219

Token 187: ' up' (ID: 869)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.14156174659729
    2. 'dire' → logprob: -1.51656174659729
    3. 'dx' → logprob: -1.76656174659729
    4. ' directions' → logprob: -2.39156174659729
    5. 'dirs' → logprob: -2.76656174659729
    6. ' [(' → logprob: -3.51656174659729
    7. 'dy' → logprob: -3.64156174659729
    8. ' dx' → logprob: -4.016561508178711
    9. '[' → logprob: -4.266561508178711
    10. 'd' → logprob: -4.766561508178711

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010969298891723156
    2. 'dx' → logprob: -5.510969161987305
    3. ' ,' → logprob: -5.885969161987305
    4. 'dy' → logprob: -5.885969161987305
    5. ',
' → logprob: -7.510969161987305
    6. ',d' → logprob: -7.760969161987305
    7. ' =' → logprob: -8.760969161987305
    8. 'd' → logprob: -9.760969161987305
    9. ' dx' → logprob: -10.635969161987305
    10. ',-' → logprob: -10.760969161987305

Token 189: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.5775657892227173
    2. 'down' → logprob: -0.8275657892227173
    3. '1' → logprob: -7.202565670013428
    4. 'right' → logprob: -8.327566146850586
    5. ' right' → logprob: -8.452566146850586
    6. '(' → logprob: -8.577566146850586
    7. 'left' → logprob: -9.702566146850586
    8. '0' → logprob: -10.077566146850586
    9. ' (' → logprob: -10.327566146850586
    10. ' ' → logprob: -10.702566146850586

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028175201267004013
    2. 'dx' → logprob: -3.778175115585327
    3. ' =' → logprob: -5.653175354003906
    4. ' ,' → logprob: -7.153175354003906
    5. 'dy' → logprob: -8.528175354003906
    6. ' dx' → logprob: -8.778175354003906
    7. 'd' → logprob: -9.653175354003906
    8. '=' → logprob: -9.778175354003906
    9. 'dire' → logprob: -10.028175354003906
    10. ',d' → logprob: -11.028175354003906

Token 191: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.47426703572273254
    2. ' left' → logprob: -0.9742670059204102
    3. '0' → logprob: -9.59926700592041
    4. 'right' → logprob: -10.59926700592041
    5. ' right' → logprob: -10.84926700592041
    6. '_left' → logprob: -10.97426700592041
    7. '[' → logprob: -11.34926700592041
    8. '(-' → logprob: -11.72426700592041
    9. ',' → logprob: -11.97426700592041
    10. ',left' → logprob: -12.09926700592041

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008217496797442436
    2. ' =' → logprob: -5.2582173347473145
    3. 'dx' → logprob: -6.1332173347473145
    4. ' ,' → logprob: -7.6332173347473145
    5. ',d' → logprob: -9.383217811584473
    6. ',
' → logprob: -9.758217811584473
    7. 'd' → logprob: -9.883217811584473
    8. '=' → logprob: -9.883217811584473
    9. 'dire' → logprob: -10.508217811584473
    10. 'dy' → logprob: -11.758217811584473

Token 193: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20142094790935516
    2. ' right' → logprob: -1.7014209032058716
    3. 'up' → logprob: -12.201420783996582
    4. ',right' → logprob: -13.826420783996582
    5. '0' → logprob: -14.701420783996582
    6. ' up' → logprob: -14.826420783996582
    7. '	right' → logprob: -14.951420783996582
    8. '_right' → logprob: -15.201420783996582
    9. 'Right' → logprob: -15.451420783996582
    10. '1' → logprob: -17.5764217376709

Token 194: ',' (ID: 11)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.639320969581604
    2. 'dirs' → logprob: -1.139320969581604
    3. 'dx' → logprob: -2.2643208503723145
    4. 'dy' → logprob: -4.0143208503723145
    5. 'dir' → logprob: -4.6393208503723145
    6. '
' → logprob: -4.7643208503723145
    7. 'd' → logprob: -5.2643208503723145
    8. 'DIR' → logprob: -5.7643208503723145
    9. 'moves' → logprob: -6.5143208503723145
    10. 'D' → logprob: -6.6393208503723145

Token 195: ' stay' (ID: 5092)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.01890554279088974
    2. '(-' → logprob: -4.8939056396484375
    3. 'dire' → logprob: -5.6439056396484375
    4. ' dx' → logprob: -6.1439056396484375
    5. '(' → logprob: -6.2689056396484375
    6. 'dy' → logprob: -6.3939056396484375
    7. 'dr' → logprob: -7.5189056396484375
    8. '[' → logprob: -7.8939056396484375
    9. '(dx' → logprob: -8.018905639648438
    10. 'dirs' → logprob: -8.018905639648438

Token 196: '
' (ID: 198)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.117542028427124
    2. '
' → logprob: -1.242542028427124
    3. 'dirs' → logprob: -1.617542028427124
    4. 'dx' → logprob: -1.867542028427124
    5. 'dy' → logprob: -4.867542266845703
    6. 'DIR' → logprob: -5.117542266845703
    7. 'd' → logprob: -5.617542266845703
    8. ' directions' → logprob: -5.617542266845703
    9. 'dir' → logprob: -5.742542266845703
    10. 'moves' → logprob: -6.117542266845703

Token 197: 'dirs' (ID: 132921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.6248727440834045
    2. 'dirs' → logprob: -1.2498726844787598
    3. 'dx' → logprob: -2.1248726844787598
    4. 'moves' → logprob: -3.6248726844787598
    5. 'dy' → logprob: -4.99987268447876
    6. 'DIR' → logprob: -4.99987268447876
    7. ' directions' → logprob: -5.12487268447876
    8. 'd' → logprob: -5.24987268447876
    9. 'dir' → logprob: -5.62487268447876
    10. 'D' → logprob: -6.87487268447876

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004967942950315773
    2. '=' → logprob: -7.625496864318848
    3. '=[' → logprob: -12.250496864318848
    4. ' =[' → logprob: -12.750496864318848
    5. 's' → logprob: -14.750496864318848
    6. '=[[' → logprob: -15.250496864318848
    7. ' ' → logprob: -16.12549591064453
    8. ' =(' → logprob: -16.50049591064453
    9. '```' → logprob: -17.12549591064453
    10. ')' → logprob: -17.37549591064453

Token 199: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.25230151414871216
    2. '[' → logprob: -1.5023014545440674
    3. ' [(' → logprob: -8.502301216125488
    4. ' [' → logprob: -8.752301216125488
    5. '[-' → logprob: -11.752301216125488
    6. '[
' → logprob: -13.002301216125488
    7. '[((' → logprob: -13.877301216125488
    8. '(-' → logprob: -16.252302169799805
    9. '[[' → logprob: -17.127302169799805
    10. '[\' → logprob: -17.377302169799805

Token 200: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.004082793369889259
    2. '(' → logprob: -5.504082679748535
    3. ' (-' → logprob: -12.629082679748535
    4. '-' → logprob: -14.129082679748535
    5. '0' → logprob: -15.879082679748535
    6. ' (' → logprob: -16.12908363342285
    7. '[-' → logprob: -16.75408363342285
    8. '(up' → logprob: -17.12908363342285
    9. '   ' → logprob: -17.50408363342285
    10. '(+' → logprob: -18.25408363342285

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '-' → logprob: -18.125
    5. ',' → logprob: -19.3125
    6. ' -' → logprob: -19.375
    7. '１' → logprob: -19.375
    8. '   ' → logprob: -19.375
    9. ')' → logprob: -19.5
    10. '১' → logprob: -20.625

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011298557510599494
    2. '0' → logprob: -6.876129627227783
    3. ' ,' → logprob: -9.251130104064941
    4. '),' → logprob: -14.251130104064941
    5. ',
' → logprob: -15.751130104064941
    6. ' ' → logprob: -16.501129150390625
    7. ',),' → logprob: -16.876129150390625
    8. '1' → logprob: -17.251129150390625
    9. '```' → logprob: -17.751129150390625
    10. ',

' → logprob: -17.876129150390625

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. ')' → logprob: -16.254077911376953
    4. '  ' → logprob: -17.879077911376953
    5. '   ' → logprob: -18.004077911376953
    6. ' ' → logprob: -18.066577911376953
    7. '),' → logprob: -18.629077911376953
    8. '1' → logprob: -18.816577911376953
    9. ',' → logprob: -18.879077911376953
    10. '
' → logprob: -18.941577911376953

Token 204: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03636135905981064
    2. '),(' → logprob: -3.4113614559173584
    3. '),
' → logprob: -6.036361217498779
    4. ' ),' → logprob: -8.161361694335938
    5. ')' → logprob: -10.786361694335938
    6. '),

' → logprob: -11.661361694335938
    7. '),
' → logprob: -12.661361694335938
    8. ' ),
' → logprob: -13.161361694335938
    9. ',),' → logprob: -13.786361694335938
    10. '0' → logprob: -15.786361694335938

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.625035285949707
    3. '0' → logprob: -11.500035285949707
    4. '+' → logprob: -14.625035285949707
    5. '11' → logprob: -16.062536239624023
    6. '01' → logprob: -16.562536239624023
    7. '10' → logprob: -16.875036239624023
    8. '-' → logprob: -16.937536239624023
    9. '   ' → logprob: -17.062536239624023
    10. '```' → logprob: -17.125036239624023

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06210078299045563
    2. '0' → logprob: -2.812100887298584
    3. ' ,' → logprob: -8.937100410461426
    4. ' ' → logprob: -13.437100410461426
    5. ',
' → logprob: -16.062101364135742
    6. '```' → logprob: -16.812101364135742
    7. '   ' → logprob: -17.374601364135742
    8. '00' → logprob: -17.499601364135742
    9. ' ' → logprob: -17.937101364135742
    10. '  ' → logprob: -18.624601364135742

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. '۰' → logprob: -16.125051498413086
    4. ',' → logprob: -16.312551498413086
    5. '```' → logprob: -16.687551498413086
    6. '-' → logprob: -16.750051498413086
    7. '   ' → logprob: -17.500051498413086
    8. '00' → logprob: -17.625051498413086
    9. ')' → logprob: -17.812551498413086
    10. '０' → logprob: -17.875051498413086

Token 208: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0002787359117064625
    2. '),' → logprob: -8.50027847290039
    3. '0' → logprob: -9.62527847290039
    4. '(' → logprob: -12.50027847290039
    5. ' ),' → logprob: -12.87527847290039
    6. '),
' → logprob: -13.25027847290039
    7. ',' → logprob: -14.62527847290039
    8. ')' → logprob: -15.50027847290039
    9. ')(' → logprob: -15.62527847290039
    10. ' ' → logprob: -16.00027847290039

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4153549020411447e-05
    2. '-' → logprob: -11.12502384185791
    3. ' ' → logprob: -11.62502384185791
    4. ',' → logprob: -16.062524795532227
    5. ' -' → logprob: -16.937524795532227
    6. '```' → logprob: -16.937524795532227
    7. '00' → logprob: -17.312524795532227
    8. '   ' → logprob: -17.500024795532227
    9. '۰' → logprob: -17.812524795532227
    10. '1' → logprob: -18.187524795532227

Token 210: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020565012469887733
    2. ',-' → logprob: -3.8955650329589844
    3. ' ,' → logprob: -10.770565032958984
    4. ',
' → logprob: -14.270565032958984
    5. ',+' → logprob: -14.520565032958984
    6. ' ,-' → logprob: -14.895565032958984
    7. '1' → logprob: -15.645565032958984
    8. ',

' → logprob: -16.770565032958984
    9. ',-
' → logprob: -17.395565032958984
    10. '

' → logprob: -17.395565032958984

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.000001907348633
    3. '0' → logprob: -14.375001907348633
    4. ',' → logprob: -15.875001907348633
    5. '```' → logprob: -16.375001907348633
    6. ')' → logprob: -16.500001907348633
    7. '+' → logprob: -17.250001907348633
    8. '-' → logprob: -17.687501907348633
    9. '<|end|>' → logprob: -18.062501907348633
    10. '   ' → logprob: -19.437501907348633

Token 212: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -1.5570885807392187e-05
    2. ',(' → logprob: -12.000015258789062
    3. '),' → logprob: -12.375015258789062
    4. '(' → logprob: -12.500015258789062
    5. '0' → logprob: -14.000015258789062
    6. ',' → logprob: -14.750015258789062
    7. ' ),' → logprob: -16.625015258789062
    8. '),
' → logprob: -17.375015258789062
    9. ')(' → logprob: -18.000015258789062
    10. '1' → logprob: -18.125015258789062

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2522027790546417
    2. '1' → logprob: -1.5022027492523193
    3. ',' → logprob: -8.877202987670898
    4. ' ' → logprob: -9.002202987670898
    5. ')' → logprob: -12.127202987670898
    6. '01' → logprob: -13.377202987670898
    7. '+' → logprob: -13.627202987670898
    8. '```' → logprob: -14.002202987670898
    9. ' ,' → logprob: -15.689702987670898
    10. '),' → logprob: -15.752202987670898

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011450992315076292
    2. '1' → logprob: -9.125114440917969
    3. ' ,' → logprob: -13.000114440917969
    4. '0' → logprob: -13.625114440917969
    5. ',+' → logprob: -14.125114440917969
    6. '),(' → logprob: -14.625114440917969
    7. ',(' → logprob: -15.125114440917969
    8. ',
' → logprob: -15.250114440917969
    9. ')]' → logprob: -15.625114440917969
    10. ')' → logprob: -16.00011444091797

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04301038011908531
    2. '0' → logprob: -3.1680104732513428
    3. ' ' → logprob: -11.418010711669922
    4. '+' → logprob: -15.543010711669922
    5. '```' → logprob: -16.668010711669922
    6. ')' → logprob: -17.293010711669922
    7. '-' → logprob: -18.418010711669922
    8. '01' → logprob: -18.918010711669922
    9. '2' → logprob: -19.168010711669922
    10. '
' → logprob: -19.293010711669922

Token 216: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00033951509976759553
    2. ',(' → logprob: -8.00033950805664
    3. '(' → logprob: -13.12533950805664
    4. '),' → logprob: -13.37533950805664
    5. ',' → logprob: -14.87533950805664
    6. ')]' → logprob: -16.50033950805664
    7. ')(' → logprob: -17.75033950805664
    8. '0' → logprob: -17.87533950805664
    9. ' ),' → logprob: -17.87533950805664
    10. '):(' → logprob: -18.37533950805664

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. ')' → logprob: -15.750036239624023
    4. '۰' → logprob: -16.125036239624023
    5. '   ' → logprob: -16.875036239624023
    6. ',' → logprob: -17.437536239624023
    7. '
' → logprob: -17.625036239624023
    8. '０' → logprob: -17.875036239624023
    9. '(' → logprob: -17.937536239624023
    10. '00' → logprob: -18.125036239624023

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011188744247192517
    2. ' ,' → logprob: -10.00011157989502
    3. '0' → logprob: -10.25011157989502
    4. ')]' → logprob: -10.50011157989502
    5. ',(' → logprob: -13.12511157989502
    6. ',)' → logprob: -14.25011157989502
    7. ',
' → logprob: -15.25011157989502
    8. '),(' → logprob: -15.37511157989502
    9. ')' → logprob: -15.87511157989502
    10. ' ' → logprob: -16.500112533569336

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۰' → logprob: -17.50006675720215
    4. ')' → logprob: -17.62506675720215
    5. '00' → logprob: -17.62506675720215
    6. ')]' → logprob: -18.25006675720215
    7. '０' → logprob: -18.62506675720215
    8. ',' → logprob: -18.75006675720215
    9. '
' → logprob: -19.18756675720215
    10. '```' → logprob: -19.25006675720215

Token 220: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005673506762832403
    2. ')' → logprob: -5.755673408508301
    3. ']' → logprob: -6.005673408508301
    4. '])' → logprob: -11.3806734085083
    5. '])]' → logprob: -12.0056734085083
    6. '),' → logprob: -12.5056734085083
    7. ')])' → logprob: -12.7556734085083
    8. ' )' → logprob: -13.8806734085083
    9. ')],' → logprob: -14.1306734085083
    10. '))' → logprob: -14.1306734085083

Token 221: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.526585578918457
    2. 'from' → logprob: -1.401585578918457
    3. 'visited' → logprob: -2.151585578918457
    4. 'dp' → logprob: -4.026585578918457
    5. 'INF' → logprob: -4.276585578918457
    6. 'def' → logprob: -5.026585578918457
    7. '#' → logprob: -5.526585578918457
    8. 'import' → logprob: -6.276585578918457
    9. 'queue' → logprob: -7.276585578918457
    10. 'time' → logprob: -7.776585578918457

Token 222: ' Function' (ID: 11035)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.749179482460022
    2. 'dist' → logprob: -0.999179482460022
    3. 'visited' → logprob: -2.6241793632507324
    4. 'def' → logprob: -2.8741793632507324
    5. 'dp' → logprob: -3.9991793632507324
    6. 'import' → logprob: -5.124179363250732
    7. '#' → logprob: -5.624179363250732
    8. 'q' → logprob: -6.999179363250732
    9. 'queue' → logprob: -7.749179363250732
    10. 'INF' → logprob: -8.24917984008789

Token 223: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008358351769857109
    2. ' def' → logprob: -7.12583589553833
    3. ' bfs' → logprob: -10.875835418701172
    4. ')' → logprob: -12.375835418701172
    5. '=' → logprob: -13.000835418701172
    6. ':def' → logprob: -14.125835418701172
    7. 'de' → logprob: -14.375835418701172
    8. 'deque' → logprob: -14.375835418701172
    9. '_def' → logprob: -14.500835418701172
    10. 'b' → logprob: -14.500835418701172

Token 224: ' get' (ID: 717)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5213797092437744
    2. 'is' → logprob: -1.8963797092437744
    3. 'check' → logprob: -1.8963797092437744
    4. 'in' → logprob: -3.0213797092437744
    5. 'valid' → logprob: -3.2713797092437744
    6. 'solve' → logprob: -5.396379470825195
    7. 'can' → logprob: -5.396379470825195
    8. ' bfs' → logprob: -5.396379470825195
    9. 'inside' → logprob: -6.521379470825195
    10. 'find' → logprob: -6.771379470825195

Token 225: ' the' (ID: 290)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.2832691967487335
    2. 'def' → logprob: -1.9082691669464111
    3. ' area' → logprob: -2.783269166946411
    4. '_area' → logprob: -4.28326940536499
    5. 'cell' → logprob: -4.53326940536499
    6. ' the' → logprob: -5.65826940536499
    7. ' cell' → logprob: -6.03326940536499
    8. 'tile' → logprob: -6.65826940536499
    9. 'the' → logprob: -7.28326940536499
    10. ' def' → logprob: -7.40826940536499

Token 226: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.011485015042126179
    2. 'cell' → logprob: -5.2614850997924805
    3. 'current' → logprob: -5.5114850997924805
    4. 'tile' → logprob: -7.8864850997924805
    5. 'state' → logprob: -8.13648509979248
    6. 'def' → logprob: -8.26148509979248
    7. 'char' → logprob: -8.26148509979248
    8. ' area' → logprob: -8.38648509979248
    9. 'terrain' → logprob: -9.01148509979248
    10. 'next' → logprob: -9.13648509979248

Token 227: ' index' (ID: 3472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030501874163746834
    2. '_at' → logprob: -3.6555018424987793
    3. 'at' → logprob: -5.655501842498779
    4. '_def' → logprob: -8.530502319335938
    5. '(i' → logprob: -9.155502319335938
    6. '(' → logprob: -9.405502319335938
    7. ' at' → logprob: -9.905502319335938
    8. '(x' → logprob: -10.280502319335938
    9. ' def' → logprob: -10.655502319335938
    10. '(t' → logprob: -10.905502319335938

Token 228: ' at' (ID: 540)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01084158755838871
    2. '(' → logprob: -4.635841369628906
    3. ':' → logprob: -7.760841369628906
    4. ' def' → logprob: -8.885841369628906
    5. '_def' → logprob: -9.010841369628906
    6. '(n' → logprob: -9.510841369628906
    7. '(
' → logprob: -9.635841369628906
    8. ':def' → logprob: -9.760841369628906
    9. '(i' → logprob: -10.010841369628906
    10. ' =' → logprob: -10.260841369628906

Token 229: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.1688905507326126
    2. 't' → logprob: -2.5438904762268066
    3. 'a' → logprob: -3.5438904762268066
    4. ' time' → logprob: -3.7938904762268066
    5. 'current' → logprob: -4.043890476226807
    6. ' a' → logprob: -5.918890476226807
    7. ' t' → logprob: -6.293890476226807
    8. 'def' → logprob: -6.543890476226807
    9. ' current' → logprob: -7.168890476226807
    10. 'given' → logprob: -7.668890476226807

Token 230: ' t' (ID: 260)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.7465543746948242
    2. 'def' → logprob: -0.9965543746948242
    3. 't' → logprob: -2.746554374694824
    4. ' t' → logprob: -3.621554374694824
    5. ' (' → logprob: -3.621554374694824
    6. ' def' → logprob: -4.496554374694824
    7. '(' → logprob: -4.621554374694824
    8. '(time' → logprob: -5.121554374694824
    9. 'idx' → logprob: -5.371554374694824
    10. ' idx' → logprob: -6.496554374694824

Token 231: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006566775846295059
    2. ':' → logprob: -8.250657081604004
    3. ':def' → logprob: -9.000657081604004
    4. ' def' → logprob: -9.500657081604004
    5. '(' → logprob: -9.750657081604004
    6. '_def' → logprob: -9.875657081604004
    7. '(def' → logprob: -10.500657081604004
    8. '```' → logprob: -11.000657081604004
    9. '=' → logprob: -11.500657081604004
    10. '(t' → logprob: -11.625657081604004

Token 232: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.3458322731312364e-06
    2. ' def' → logprob: -12.250007629394531
    3. '```' → logprob: -13.375007629394531
    4. '
' → logprob: -14.125007629394531
    5. ':def' → logprob: -17.00000762939453
    6. '``' → logprob: -17.00000762939453
    7. 'ndef' → logprob: -17.12500762939453
    8. 'de' → logprob: -17.62500762939453
    9. 'd' → logprob: -17.87500762939453
    10. '-def' → logprob: -18.00000762939453

Token 233: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1303754299879074
    2. ' get' → logprob: -2.255375385284424
    3. 'area' → logprob: -4.255375385284424
    4. ' area' → logprob: -5.755375385284424
    5. 'time' → logprob: -11.755375862121582
    6. 'find' → logprob: -11.755375862121582
    7. '_area' → logprob: -12.005375862121582
    8. ' find' → logprob: -12.255375862121582
    9. 'current' → logprob: -12.505375862121582
    10. '_get' → logprob: -12.880375862121582

Token 234: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.007065812591463327
    2. 'area' → logprob: -5.007065773010254
    3. '_index' → logprob: -8.507065773010254
    4. 'Area' → logprob: -9.257065773010254
    5. 'index' → logprob: -11.132065773010254
    6. 'idx' → logprob: -11.632065773010254
    7. '_idx' → logprob: -11.757065773010254
    8. '_current' → logprob: -12.132065773010254
    9. '_time' → logprob: -12.507065773010254
    10. ' area' → logprob: -13.007065773010254

Token 235: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.021209577098488808
    2. '(t' → logprob: -4.396209716796875
    3. '_idx' → logprob: -4.771209716796875
    4. 'index' → logprob: -9.146209716796875
    5. '_id' → logprob: -11.021209716796875
    6. '(i' → logprob: -11.021209716796875
    7. 'idx' → logprob: -11.271209716796875
    8. '(' → logprob: -11.771209716796875
    9. '(_' → logprob: -11.771209716796875
    10. 'Index' → logprob: -11.896209716796875

Token 236: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0001705246395431459
    2. '(' → logprob: -8.750170707702637
    3. '(time' → logprob: -11.500170707702637
    4. ' (' → logprob: -13.250170707702637
    5. '(
' → logprob: -16.12516975402832
    6. '(T' → logprob: -17.00016975402832
    7. 't' → logprob: -17.75016975402832
    8. '(times' → logprob: -18.50016975402832
    9. '(timestamp' → logprob: -18.50016975402832
    10. '(s' → logprob: -18.62516975402832

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024989593657664955
    2. '):
' → logprob: -8.375249862670898
    3. ')' → logprob: -11.125249862670898
    4. ' ):' → logprob: -12.750249862670898
    5. '):
' → logprob: -14.000249862670898
    6. ':' → logprob: -14.625249862670898
    7. '=' → logprob: -15.375249862670898
    8. ',' → logprob: -15.875249862670898
    9. '):

' → logprob: -16.8752498626709
    10. ')：' → logprob: -17.8752498626709

Token 238: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7443888187408447
    2. '   ' → logprob: -1.1193888187408447
    3. ' for' → logprob: -1.7443888187408447
    4. ':' → logprob: -5.369388580322266
    5. 'idx' → logprob: -5.494388580322266
    6. 'import' → logprob: -5.869388580322266
    7. '```' → logprob: -5.869388580322266
    8. 'ind' → logprob: -6.494388580322266
    9. 'i' → logprob: -6.619388580322266
    10. ',' → logprob: -6.744388580322266

Token 239: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17620882391929626
    2. 'for' → logprob: -2.551208734512329
    3. 'from' → logprob: -2.676208734512329
    4. 'left' → logprob: -4.676208972930908
    5. 'l' → logprob: -6.176208972930908
    6. 'i' → logprob: -6.301208972930908
    7. 'idx' → logprob: -7.676208972930908
    8. 'lo' → logprob: -8.17620849609375
    9. 'def' → logprob: -8.17620849609375
    10. 'low' → logprob: -9.05120849609375

Token 240: ' times' (ID: 4238)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3844398260116577
    2. 'left' → logprob: -2.0094399452209473
    3. 'l' → logprob: -2.5094399452209473
    4. 'for' → logprob: -2.6344399452209473
    5. 'from' → logprob: -4.134439945220947
    6. 'lo' → logprob: -4.884439945220947
    7. 'low' → logprob: -4.884439945220947
    8. '#' → logprob: -8.134439468383789
    9. '```' → logprob: -8.259439468383789
    10. 'idx' → logprob: -8.759439468383789

Token 241: ' sorted' (ID: 20099)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6346805691719055
    2. '=' → logprob: -1.6346805095672607
    3. 'for' → logprob: -1.8846805095672607
    4. 'def' → logprob: -2.7596805095672607
    5. 'from' → logprob: -4.38468074798584
    6. ' =' → logprob: -4.50968074798584
    7. 'idx' → logprob: -5.13468074798584
    8. 'bis' → logprob: -5.25968074798584
    9. '[' → logprob: -5.50968074798584
    10. 'index' → logprob: -5.63468074798584

Token 242: ' ascending' (ID: 75564)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2794275283813477
    2. ' =' → logprob: -1.5294275283813477
    3. 'idx' → logprob: -2.4044275283813477
    4. '_idx' → logprob: -2.5294275283813477
    5. 'def' → logprob: -2.7794275283813477
    6. '
' → logprob: -2.7794275283813477
    7. 'import' → logprob: -3.4044275283813477
    8. '   ' → logprob: -3.7794275283813477
    9. 'index' → logprob: -3.7794275283813477
    10. 'for' → logprob: -3.9044275283813477

Token 243: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7780848741531372
    2. '   ' → logprob: -1.4030848741531372
    3. '
' → logprob: -1.6530848741531372
    4. ' for' → logprob: -3.5280847549438477
    5. 'for' → logprob: -3.7780847549438477
    6. ':
' → logprob: -4.028084754943848
    7. ',' → logprob: -4.528084754943848
    8. '<|end|>' → logprob: -5.028084754943848
    9. '  
' → logprob: -6.028084754943848
    10. '=' → logprob: -6.278084754943848

Token 244: ' sentinel' (ID: 180334)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9845549464225769
    2. 'for' → logprob: -1.8595550060272217
    3. 'bis' → logprob: -2.2345550060272217
    4. 't' → logprob: -2.7345550060272217
    5. 'return' → logprob: -2.9845550060272217
    6. ' for' → logprob: -3.2345550060272217
    7. 'binary' → logprob: -3.2345550060272217
    8. 'times' → logprob: -3.8595550060272217
    9. '
' → logprob: -4.359554767608643
    10. ' t' → logprob: -4.484554767608643

Token 245: ' times' (ID: 4238)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.969114363193512
    2. '   ' → logprob: -1.4691143035888672
    3. 'for' → logprob: -2.094114303588867
    4. ' for' → logprob: -2.344114303588867
    5. ' =' → logprob: -3.094114303588867
    6. '=' → logprob: -3.219114303588867
    7. ':
' → logprob: -3.844114303588867
    8. ',' → logprob: -3.969114303588867
    9. '
' → logprob: -4.344114303588867
    10. 'def' → logprob: -4.469114303588867

Token 246: '[-' (ID: 17503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.540827751159668
    2. '   ' → logprob: -2.040827751159668
    3. ' for' → logprob: -2.665827751159668
    4. 'for' → logprob: -2.790827751159668
    5. ':
' → logprob: -3.165827751159668
    6. ',' → logprob: -3.415827751159668
    7. '
' → logprob: -3.915827751159668
    8. ' =' → logprob: -3.915827751159668
    9. '=' → logprob: -4.040827751159668
    10. 'def' → logprob: -4.915827751159668

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.947715832618997e-05
    2. '2' → logprob: -10.000089645385742
    3. '-' → logprob: -11.125089645385742
    4. ']' → logprob: -12.000089645385742
    5. ' ' → logprob: -12.000089645385742
    6. '0' → logprob: -12.500089645385742
    7. '
' → logprob: -12.937589645385742
    8. 't' → logprob: -13.375089645385742
    9. '10' → logprob: -13.375089645385742
    10. '```' → logprob: -14.000089645385742

Token 248: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7017027139663696
    2. ')' → logprob: -1.4517027139663696
    3. ')
' → logprob: -3.32670259475708
    4. '
' → logprob: -3.57670259475708
    5. '])' → logprob: -3.70170259475708
    6. 'if' → logprob: -3.82670259475708
    7. ',' → logprob: -3.82670259475708
    8. '<=' → logprob: -4.07670259475708
    9. '=' → logprob: -4.20170259475708
    10. ']
' → logprob: -4.20170259475708

Token 249: 'large' (ID: 32551)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.580929347255733e-05
    2. 'float' → logprob: -12.125016212463379
    3. '100' → logprob: -12.625016212463379
    4. ' ' → logprob: -12.625016212463379
    5. 'int' → logprob: -13.250016212463379
    6. '1' → logprob: -13.500016212463379
    7. 't' → logprob: -15.875016212463379
    8. '999' → logprob: -16.125015258789062
    9. '(' → logprob: -16.375015258789062
    10. ' ' → logprob: -17.000015258789062

Token 250: ' number' (ID: 2086)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3046283721923828
    2. 'index' → logprob: -1.3046283721923828
    3. 't' → logprob: -2.304628372192383
    4. 'while' → logprob: -2.304628372192383
    5. '_index' → logprob: -3.054628372192383
    6. ' while' → logprob: -3.554628372192383
    7. '=' → logprob: -3.804628372192383
    8. 'idx' → logprob: -4.554628372192383
    9. 'def' → logprob: -4.679628372192383
    10. '
' → logprob: -4.804628372192383

Token 251: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.35573893785476685
    2. 'def' → logprob: -1.730738878250122
    3. '
' → logprob: -3.480738878250122
    4. 'for' → logprob: -3.480738878250122
    5. '   ' → logprob: -4.230739116668701
    6. ',' → logprob: -4.855739116668701
    7. 'left' → logprob: -4.855739116668701
    8. ':' → logprob: -4.980739116668701
    9. '```' → logprob: -5.355739116668701
    10. ' for' → logprob: -5.355739116668701

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41332927346229553
    2. 'import' → logprob: -2.1633293628692627
    3. 'l' → logprob: -2.2883293628692627
    4. 'left' → logprob: -2.6633293628692627
    5. '```' → logprob: -4.413329124450684
    6. 'for' → logprob: -4.663329124450684
    7. ' for' → logprob: -4.913329124450684
    8. ' left' → logprob: -5.288329124450684
    9. 'from' → logprob: -5.788329124450684
    10. 'def' → logprob: -5.788329124450684

Token 253: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08624987304210663
    2. 'l' → logprob: -3.211249828338623
    3. 'left' → logprob: -3.836249828338623
    4. 'from' → logprob: -4.711249828338623
    5. 'low' → logprob: -5.711249828338623
    6. 'def' → logprob: -5.836249828338623
    7. 'lo' → logprob: -5.961249828338623
    8. 'for' → logprob: -6.211249828338623
    9. '
' → logprob: -7.836249828338623
    10. '```' → logprob: -8.211250305175781

Token 254: ' t' (ID: 260)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8004587292671204
    2. 'left' → logprob: -1.4254586696624756
    3. 'l' → logprob: -1.9254586696624756
    4. 'for' → logprob: -2.0504586696624756
    5. 'low' → logprob: -4.175458908081055
    6. 'from' → logprob: -4.300458908081055
    7. 'lo' → logprob: -5.050458908081055
    8. '#' → logprob: -8.675458908081055
    9. 'idx' → logprob: -9.050458908081055
    10. '   ' → logprob: -9.050458908081055

Token 255: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1082424595952034
    2. '<=' → logprob: -2.6082425117492676
    3. '>=' → logprob: -4.983242511749268
    4. '=' → logprob: -5.108242511749268
    5. 'for' → logprob: -5.233242511749268
    6. ' <' → logprob: -5.358242511749268
    7. 'import' → logprob: -5.983242511749268
    8. ' <=' → logprob: -7.358242511749268
    9. '_index' → logprob: -7.858242511749268
    10. '<len' → logprob: -7.858242511749268

Token 256: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.38775745034217834
    2. ' times' → logprob: -1.137757420539856
    3. '
' → logprob: -8.762757301330566
    4. '=' → logprob: -8.762757301330566
    5. '10' → logprob: -9.012757301330566
    6. 'len' → logprob: -9.512757301330566
    7. 'imes' → logprob: -9.637757301330566
    8. 't' → logprob: -10.012757301330566
    9. 'time' → logprob: -10.012757301330566
    10. '_times' → logprob: -10.637757301330566

Token 257: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5020096302032471
    2. '[-' → logprob: -1.877009630203247
    3. '[i' → logprob: -2.252009630203247
    4. 'index' → logprob: -3.502009630203247
    5. '.index' → logprob: -3.502009630203247
    6. '[t' → logprob: -4.502009391784668
    7. '=' → logprob: -4.877009391784668
    8. '[index' → logprob: -5.127009391784668
    9. '[next' → logprob: -5.252009391784668
    10. 'import' → logprob: -5.377009391784668

Token 258: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1401970237493515
    2. ']:' → logprob: -2.1401970386505127
    3. '+' → logprob: -5.765196800231934
    4. '[i' → logprob: -6.265196800231934
    5. '])' → logprob: -6.390196800231934
    6. ' and' → logprob: -6.640196800231934
    7. 'and' → logprob: -7.265196800231934
    8. ']==' → logprob: -7.640196800231934
    9. '],' → logprob: -7.765196800231934
    10. ']:
' → logprob: -8.015196800231934

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006671638693660498
    2. ']' → logprob: -7.500667095184326
    3. ' ' → logprob: -9.250667572021484
    4. '-' → logprob: -12.375667572021484
    5. '
' → logprob: -12.750667572021484
    6. '+' → logprob: -13.000667572021484
    7. '   ' → logprob: -13.125667572021484
    8. '```' → logprob: -13.250667572021484
    9. 'i' → logprob: -13.750667572021484
    10. '0' → logprob: -14.250667572021484

Token 260: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5162874460220337
    2. ']' → logprob: -1.0162874460220337
    3. 'and' → logprob: -4.016287326812744
    4. ']:' → logprob: -4.516287326812744
    5. ')' → logprob: -5.391287326812744
    6. '])' → logprob: -5.641287326812744
    7. ':' → logprob: -6.641287326812744
    8. ' ]' → logprob: -7.016287326812744
    9. '):' → logprob: -7.891287326812744
    10. ' or' → logprob: -8.266287803649902

Token 261: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7264108657836914
    2. 'for' → logprob: -1.1014108657836914
    3. 'def' → logprob: -2.9764108657836914
    4. ':' → logprob: -3.2264108657836914
    5. '   ' → logprob: -3.7264108657836914
    6. ' =' → logprob: -3.9764108657836914
    7. '<|end|>' → logprob: -4.226410865783691
    8. '<|end|>' → logprob: -4.601410865783691
    9. 'import' → logprob: -5.351410865783691
    10. ' and' → logprob: -5.476410865783691

Token 262: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.49370577931404114
    2. 't' → logprob: -1.2437057495117188
    3. ' times' → logprob: -2.7437057495117188
    4. 'times' → logprob: -3.3687057495117188
    5. '   ' → logprob: -6.743705749511719
    6. ' i' → logprob: -7.743705749511719
    7. 'i' → logprob: -8.118705749511719
    8. 'return' → logprob: -8.368705749511719
    9. ' return' → logprob: -8.618705749511719
    10. '	t' → logprob: -9.493705749511719

Token 263: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4082540273666382
    2. ' <' → logprob: -1.6582540273666382
    3. ' <=' → logprob: -2.4082541465759277
    4. '>=' → logprob: -3.1582541465759277
    5. '<' → logprob: -5.158254146575928
    6. '<=' → logprob: -5.283254146575928
    7. '[' → logprob: -7.908254146575928
    8. ' ' → logprob: -8.15825366973877
    9. '[i' → logprob: -8.90825366973877
    10. ' ==' → logprob: -9.28325366973877

Token 264: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.3132699131965637
    2. 'times' → logprob: -1.313269853591919
    3. '(times' → logprob: -12.56326961517334
    4. '   ' → logprob: -13.06326961517334
    5. ' ' → logprob: -14.43826961517334
    6. '
' → logprob: -14.56326961517334
    7. '.times' → logprob: -15.06326961517334
    8. '_times' → logprob: -15.18826961517334
    9. 't' → logprob: -15.56326961517334
    10. '```' → logprob: -15.93826961517334

Token 265: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05117480084300041
    2. '[' → logprob: -4.051174640655518
    3. 'index' → logprob: -5.176174640655518
    4. '_index' → logprob: -5.301174640655518
    5. '.index' → logprob: -5.926174640655518
    6. 'i' → logprob: -5.926174640655518
    7. ']' → logprob: -6.176174640655518
    8. '[index' → logprob: -6.176174640655518
    9. '_i' → logprob: -6.426174640655518
    10. ')' → logprob: -6.676174640655518

Token 266: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8340293765068054
    2. ']:' → logprob: -0.9590293765068054
    3. '   ' → logprob: -2.58402943611145
    4. '):' → logprob: -2.83402943611145
    5. ')' → logprob: -4.459029197692871
    6. ':' → logprob: -4.584029197692871
    7. '])' → logprob: -5.334029197692871
    8. ']==' → logprob: -5.709029197692871
    9. ']:
' → logprob: -5.709029197692871
    10. '[i' → logprob: -5.834029197692871

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10017281770706177
    2. 'def' → logprob: -2.725172758102417
    3. ' for' → logprob: -4.225172996520996
    4. 'for' → logprob: -4.975172996520996
    5. ' =' → logprob: -5.975172996520996
    6. ' def' → logprob: -6.850172996520996
    7. '```' → logprob: -6.850172996520996
    8. '    
' → logprob: -7.350172996520996
    9. 'import' → logprob: -7.725172996520996
    10. ':' → logprob: -7.725172996520996

Token 268: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4025840163230896
    2. ' for' → logprob: -2.1525840759277344
    3. 'l' → logprob: -2.4025840759277344
    4. 'for' → logprob: -3.7775840759277344
    5. ' left' → logprob: -3.9025840759277344
    6. 'left' → logprob: -4.027584075927734
    7. 'def' → logprob: -4.277584075927734
    8. ' lo' → logprob: -4.402584075927734
    9. ' l' → logprob: -4.402584075927734
    10. ' low' → logprob: -4.527584075927734

Token 269: ' binary' (ID: 15600)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.42471668124198914
    2. 'l' → logprob: -1.4247167110443115
    3. 'import' → logprob: -2.9247167110443115
    4. 'for' → logprob: -3.7997167110443115
    5. 'low' → logprob: -3.9247167110443115
    6. 'lo' → logprob: -4.924716472625732
    7. 'def' → logprob: -6.799716472625732
    8. 'from' → logprob: -7.299716472625732
    9. '   ' → logprob: -7.924716472625732
    10. '```' → logprob: -9.29971694946289

Token 270: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.23997235298156738
    2. '_search' → logprob: -2.2399723529815674
    3. 'search' → logprob: -2.2399723529815674
    4. '_' → logprob: -8.489972114562988
    5. ' _' → logprob: -8.864972114562988
    6. ' ' → logprob: -9.614972114562988
    7. ' def' → logprob: -12.239972114562988
    8. 'def' → logprob: -13.739972114562988
    9. 'Search' → logprob: -13.864972114562988
    10. ' ' → logprob: -13.989972114562988

Token 271: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0226821899414062
    2. '   ' → logprob: -1.2726821899414062
    3. ':' → logprob: -1.6476821899414062
    4. 'import' → logprob: -2.2726821899414062
    5. ' def' → logprob: -3.3976821899414062
    6. ',' → logprob: -4.272682189941406
    7. ' ' → logprob: -5.272682189941406
    8. ':
' → logprob: -5.897682189941406
    9. ' import' → logprob: -6.272682189941406
    10. '
' → logprob: -6.897682189941406

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4630577564239502
    2. 'def' → logprob: -1.5880577564239502
    3. ' low' → logprob: -3.08805775642395
    4. 'import' → logprob: -3.58805775642395
    5. 'l' → logprob: -3.71305775642395
    6. ' left' → logprob: -3.96305775642395
    7. ' lo' → logprob: -4.463057518005371
    8. ' l' → logprob: -4.713057518005371
    9. ' def' → logprob: -4.713057518005371
    10. 'low' → logprob: -4.838057518005371

Token 273: ' l' (ID: 305)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6922038197517395
    2. 'l' (adapté à ' l') → logprob: -1.4422037601470947
    3. 'lo' → logprob: -2.4422037601470947
    4. 'low' → logprob: -2.4422037601470947
    5. 'import' → logprob: -2.6922037601470947
    6. ' left' → logprob: -4.692203998565674
    7. ' lo' → logprob: -5.067203998565674
    8. '   ' → logprob: -5.942203998565674
    9. ' l' → logprob: -6.567203998565674
    10. ' low' → logprob: -7.067203998565674

Token 274: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7701305747032166
    2. ',' → logprob: -1.1451306343078613
    3. '=' → logprob: -1.5201306343078613
    4. ' ,' → logprob: -9.020130157470703
    5. ',b' → logprob: -10.895130157470703
    6. 'eft' → logprob: -11.395130157470703
    7. ' ' → logprob: -12.395130157470703
    8. 'ow' → logprob: -12.395130157470703
    9. ',
' → logprob: -12.645130157470703
    10. ',r' → logprob: -12.895130157470703

Token 275: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03804149478673935
    2. ' r' → logprob: -3.288041591644287
    3. ',r' → logprob: -18.413042068481445
    4. '	r' → logprob: -18.663042068481445
    5. 'u' → logprob: -19.163042068481445
    6. '_r' → logprob: -20.163042068481445
    7. '=r' → logprob: -21.038042068481445
    8. '
' → logprob: -21.788042068481445
    9. ' =' → logprob: -22.413042068481445
    10. '.r' → logprob: -22.538042068481445

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407999634742737
    2. ' =' → logprob: -0.974079966545105
    3. ',' → logprob: -12.974080085754395
    4. ' ' → logprob: -14.349080085754395
    5. '＝' → logprob: -16.474079132080078
    6. '=len' → logprob: -17.349079132080078
    7. ')' → logprob: -18.224079132080078
    8. '=l' → logprob: -18.224079132080078
    9. '=int' → logprob: -18.849079132080078
    10. '0' → logprob: -18.849079132080078

Token 277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '-' → logprob: -20.000019073486328
    4. '
' → logprob: -20.750019073486328
    5. '۰' → logprob: -20.875019073486328
    6. '00' → logprob: -21.125019073486328
    7. 'len' → logprob: -21.250019073486328
    8. '000' → logprob: -21.500019073486328
    9. '(' → logprob: -21.625019073486328
    10. '  ' → logprob: -21.875019073486328

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'len' → logprob: -15.750001907348633
    4. '-' → logprob: -15.750001907348633
    5. '1' → logprob: -18.875001907348633
    6. '
' → logprob: -19.250001907348633
    7. '```' → logprob: -19.500001907348633
    8. '000' → logprob: -19.625001907348633
    9. '00' → logprob: -19.750001907348633
    10. ' -' → logprob: -20.625001907348633

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09186980128288269
    2. ' ,' → logprob: -2.966869831085205
    3. ',len' → logprob: -3.341869831085205
    4. ' ' → logprob: -7.841869831085205
    5. ',l' → logprob: -7.841869831085205
    6. ' len' → logprob: -10.216869354248047
    7. ',length' → logprob: -10.466869354248047
    8. ',r' → logprob: -10.591869354248047
    9. ',n' → logprob: -10.966869354248047
    10. '=len' → logprob: -11.341869354248047

Token 280: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.6087021473795176e-05
    2. ' len' → logprob: -10.000045776367188
    3. 'N' → logprob: -14.250045776367188
    4. '(len' → logprob: -16.750045776367188
    5. '   ' → logprob: -19.625045776367188
    6. '=len' → logprob: -19.625045776367188
    7. '[len' → logprob: -19.750045776367188
    8. '	len' → logprob: -20.000045776367188
    9. ',len' → logprob: -21.000045776367188
    10. ' ' → logprob: -21.875045776367188

Token 281: '(times' (ID: 135653)
  Prédit: '(times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(times' → logprob: -4.961759259458631e-06
    2. 'times' → logprob: -12.250004768371582
    3. ' times' → logprob: -17.0000057220459
    4. '(time' → logprob: -17.5000057220459
    5. '(' → logprob: -18.3750057220459
    6. '(t' → logprob: -20.3750057220459
    7. '.times' → logprob: -20.5000057220459
    8. ' (' → logprob: -20.8750057220459
    9. '_times' → logprob: -21.6250057220459
    10. 'Times' → logprob: -22.3750057220459

Token 282: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07029952108860016
    2. ')-' → logprob: -2.8202996253967285
    3. '-' → logprob: -5.1952996253967285
    4. ' -' → logprob: -5.9452996253967285
    5. ' )' → logprob: -8.94529914855957
    6. '-)' → logprob: -12.82029914855957
    7. ' ' → logprob: -14.19529914855957
    8. '```' → logprob: -14.82029914855957
    9. '[' → logprob: -15.07029914855957
    10. ']-' → logprob: -15.32029914855957

Token 283: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02997691184282303
    2. '1' → logprob: -3.5299768447875977
    3. ' ' → logprob: -8.404976844787598
    4. '```' → logprob: -13.404976844787598
    5. '-' → logprob: -14.154976844787598
    6. '   ' → logprob: -16.279977798461914
    7. ' -' → logprob: -16.654977798461914
    8. '  ' → logprob: -16.842477798461914
    9. ')' → logprob: -16.842477798461914
    10. '3' → logprob: -17.404977798461914

Token 284: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10331182926893234
    2. ' while' → logprob: -3.353311777114868
    3. ' 
' → logprob: -3.728311777114868
    4. 'while' → logprob: -4.228312015533447
    5. '   ' → logprob: -4.978312015533447
    6. '  
' → logprob: -5.103312015533447
    7. ' ' → logprob: -5.228312015533447
    8. ',' → logprob: -6.728312015533447
    9. '<|end|>' → logprob: -6.728312015533447
    10. '    
' → logprob: -6.978312015533447

Token 285: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6170534491539001
    2. '   ' → logprob: -1.242053508758545
    3. 'while' → logprob: -2.867053508758545
    4. '
' → logprob: -2.992053508758545
    5. '	while' → logprob: -3.742053508758545
    6. '<|end|>' → logprob: -4.492053508758545
    7. ' ' → logprob: -4.617053508758545
    8. ' 
' → logprob: -4.867053508758545
    9. '```' → logprob: -5.367053508758545
    10. '  
' → logprob: -6.117053508758545

Token 286: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.07085760682821274
    2. 'while' (adapté à ' while') → logprob: -2.695857524871826
    3. ' ' → logprob: -7.320857524871826
    4. ' 
' → logprob: -8.570858001708984
    5. '   ' → logprob: -10.445858001708984
    6. '	while' → logprob: -11.070858001708984
    7. 'While' → logprob: -11.695858001708984
    8. '
' → logprob: -12.320858001708984
    9. '  
' → logprob: -12.820858001708984
    10. '```' → logprob: -13.070858001708984

Token 287: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5206851959228516
    2. 'l' → logprob: -1.2706851959228516
    3. ' l' → logprob: -2.7706851959228516
    4. ' r' → logprob: -2.7706851959228516
    5. '	l' → logprob: -12.020685195922852
    6. '	r' → logprob: -13.770685195922852
    7. ' ' → logprob: -14.145685195922852
    8. '1' → logprob: -15.020685195922852
    9. '```' → logprob: -15.895685195922852
    10. '_l' → logprob: -15.958185195922852

Token 288: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.19132055342197418
    2. '<=' → logprob: -2.0663206577301025
    3. '+' → logprob: -3.1913206577301025
    4. ' <' → logprob: -5.441320419311523
    5. ' <=' → logprob: -6.441320419311523
    6. '<int' → logprob: -8.691320419311523
    7. '<len' → logprob: -10.191320419311523
    8. '<m' → logprob: -10.441320419311523
    9. ' ' → logprob: -10.441320419311523
    10. '<n' → logprob: -10.816320419311523

Token 289: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00023059594968799502
    2. ' r' → logprob: -8.37523078918457
    3. '
' → logprob: -17.25023078918457
    4. ' ' → logprob: -17.37523078918457
    5. '	r' → logprob: -19.00023078918457
    6. '   ' → logprob: -19.87523078918457
    7. '_r' → logprob: -20.00023078918457
    8. '
' → logprob: -20.12523078918457
    9. '```' → logprob: -20.25023078918457
    10. '

' → logprob: -20.62523078918457

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5276467204093933
    2. ':
' → logprob: -0.9026467204093933
    3. '<|end|>' → logprob: -6.277646541595459
    4. '):
' → logprob: -6.402646541595459
    5. ')' → logprob: -8.027647018432617
    6. '):' → logprob: -8.527647018432617
    7. '<|end|>' → logprob: -8.902647018432617
    8. ' :
' → logprob: -9.027647018432617
    9. '   ' → logprob: -9.902647018432617
    10. ' :' → logprob: -9.902647018432617

Token 291: '       ' (ID: 309)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9576649069786072
    2. ' m' → logprob: -1.457664966583252
    3. '   ' → logprob: -1.457664966583252
    4. ' mid' → logprob: -2.082664966583252
    5. 'mid' → logprob: -4.207664966583252
    6. '       ' → logprob: -4.957664966583252
    7. ' ' → logprob: -6.457664966583252
    8. '	m' → logprob: -7.457664966583252
    9. ' mids' → logprob: -7.457664966583252
    10. '    ' → logprob: -8.332664489746094

Token 292: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.009841318242251873
    2. 'mid' → logprob: -5.259841442108154
    3. ' m' → logprob: -5.509841442108154
    4. ' mid' → logprob: -7.509841442108154
    5. 'c' → logprob: -13.634840965270996
    6. '(mid' → logprob: -14.884840965270996
    7. 'mi' → logprob: -15.009840965270996
    8. '	m' → logprob: -15.259840965270996
    9. '(m' → logprob: -15.634840965270996
    10. '   ' → logprob: -16.009841918945312

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038269609212875366
    2. '=' → logprob: -3.288269519805908
    3. '=l' → logprob: -9.163269996643066
    4. '=int' → logprob: -10.163269996643066
    5. '=(' → logprob: -10.663269996643066
    6. '<|end|>' → logprob: -11.038269996643066
    7. ',' → logprob: -11.413269996643066
    8. '=m' → logprob: -11.538269996643066
    9. ' =(' → logprob: -12.038269996643066
    10. ' ' → logprob: -12.413269996643066

Token 294: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0008067715098150074
    2. ' (' → logprob: -7.12580680847168
    3. '(' → logprob: -13.62580680847168
    4. 'l' → logprob: -15.00080680847168
    5. '(L' → logprob: -15.25080680847168
    6. '(m' → logprob: -15.87580680847168
    7. '
' → logprob: -16.75080680847168
    8. '(ll' → logprob: -16.87580680847168
    9. ' ' → logprob: -17.25080680847168
    10. '(r' → logprob: -17.37580680847168

Token 295: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.935296834039036e-06
    2. ' l' → logprob: -12.75000286102295
    3. '	l' → logprob: -17.125003814697266
    4. '(l' → logprob: -18.625003814697266
    5. '```' → logprob: -19.375003814697266
    6. ')' → logprob: -20.000003814697266
    7. '_l' → logprob: -20.125003814697266
    8. '   ' → logprob: -21.125003814697266
    9. '
' → logprob: -21.250003814697266
    10. ' ' → logprob: -21.375003814697266

Token 296: '+r' (ID: 133712)
  Prédit: '+l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.058930639177560806
    2. ' +' → logprob: -3.3089306354522705
    3. '+' → logprob: -4.30893087387085
    4. '+r' → logprob: -4.93393087387085
    5. '+m' → logprob: -10.808930397033691
    6. 'l' → logprob: -13.183930397033691
    7. ' l' → logprob: -13.808930397033691
    8. '+
' → logprob: -14.308930397033691
    9. 'r' → logprob: -15.058930397033691
    10. '```' → logprob: -15.308930397033691

Token 297: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.12710878252983093
    2. ')' → logprob: -2.1271088123321533
    3. ')>>' → logprob: -8.627108573913574
    4. ' )' → logprob: -13.502108573913574
    5. '+' → logprob: -16.75210952758789
    6. '//' → logprob: -16.87710952758789
    7. ')#' → logprob: -18.12710952758789
    8. ')
' → logprob: -18.25210952758789
    9. ')/' → logprob: -18.25210952758789
    10. '）' → logprob: -18.87710952758789

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۲' → logprob: -20.250009536743164
    4. '２' → logprob: -21.125009536743164
    5. '1' → logprob: -21.375009536743164
    6. '२' → logprob: -21.500009536743164
    7. '```' → logprob: -22.250009536743164
    8. '   ' → logprob: -22.250009536743164
    9. '₂' → logprob: -22.875009536743164
    10. '٢' → logprob: -22.875009536743164

Token 299: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049005853943526745
    2. '<|end|>' → logprob: -5.7549004554748535
    3. ' if' → logprob: -6.8799004554748535
    4. '   ' → logprob: -9.004900932312012
    5. '<|end|>' → logprob: -9.004900932312012
    6. ')' → logprob: -9.504900932312012
    7. ' ' → logprob: -9.879900932312012
    8. 'if' → logprob: -10.129900932312012
    9. ',' → logprob: -10.129900932312012
    10. '	' → logprob: -10.254900932312012

Token 301: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3135565519332886
    2. ' if' → logprob: -1.3135565519332886
    3. '       ' → logprob: -8.563556671142578
    4. '
' → logprob: -10.313556671142578
    5. 'If' → logprob: -11.063556671142578
    6. '	if' → logprob: -11.313556671142578
    7. ';if' → logprob: -11.313556671142578
    8. 'm' → logprob: -12.563556671142578
    9. '<|end|>' → logprob: -12.563556671142578
    10. ')' → logprob: -12.688556671142578

Token 302: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.02173055335879326
    2. ' times' → logprob: -4.271730422973633
    3. 't' → logprob: -4.896730422973633
    4. ' t' → logprob: -9.896730422973633
    5. 'time' → logprob: -11.396730422973633
    6. 'tim' → logprob: -13.271730422973633
    7. '	t' → logprob: -13.396730422973633
    8. '   ' → logprob: -13.521730422973633
    9. '(times' → logprob: -15.021730422973633
    10. '
' → logprob: -15.646730422973633

Token 303: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -3.786196975852363e-05
    2. 'm' → logprob: -10.250038146972656
    3. '[
' → logprob: -13.625038146972656
    4. '[' → logprob: -14.750038146972656
    5. '<=' → logprob: -15.000038146972656
    6. '	m' → logprob: -15.875038146972656
    7. '
' → logprob: -15.875038146972656
    8. '[l' → logprob: -17.125038146972656
    9. '[++' → logprob: -17.250038146972656
    10. '<m' → logprob: -17.500038146972656

Token 304: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.05198657140135765
    2. ' <=' → logprob: -3.4269864559173584
    3. '>' → logprob: -4.3019866943359375
    4. ']<=' → logprob: -5.6769866943359375
    5. ')<=' → logprob: -7.4269866943359375
    6. ']' → logprob: -7.8019866943359375
    7. ')' → logprob: -9.176986694335938
    8. 'le' → logprob: -9.801986694335938
    9. ' >' → logprob: -10.801986694335938
    10. '+' → logprob: -12.301986694335938

Token 305: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.031640876084566116
    2. ' <=' → logprob: -3.5316407680511475
    3. '>' → logprob: -6.281641006469727
    4. ' >' → logprob: -11.281641006469727
    5. 'le' → logprob: -13.281641006469727
    6. ']<=' → logprob: -13.656641006469727
    7. ')<=' → logprob: -14.156641006469727
    8. 't' → logprob: -14.281641006469727
    9. '[' → logprob: -14.531641006469727
    10. '<' → logprob: -15.156641006469727

Token 306: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141597092151642
    2. ' t' → logprob: -1.701416015625
    3. '	t' → logprob: -13.201416015625
    4. '`t' → logprob: -14.326416015625
    5. '
' → logprob: -16.326416015625
    6. '_t' → logprob: -16.326416015625
    7. '   ' → logprob: -17.076416015625
    8. ' ' → logprob: -17.451416015625
    9. ' ' → logprob: -17.451416015625
    10. ')t' → logprob: -18.201416015625

Token 307: ' <' (ID: 464)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3304198384284973
    2. ':
' → logprob: -1.3304197788238525
    3. ':l' → logprob: -4.080420017242432
    4. ' :' → logprob: -10.580419540405273
    5. ' :
' → logprob: -10.955419540405273
    6. '):
' → logprob: -11.205419540405273
    7. ' l' → logprob: -11.330419540405273
    8. ',l' → logprob: -11.705419540405273
    9. ':
' → logprob: -11.955419540405273
    10. 'l' → logprob: -12.080419540405273

Token 308: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.00861528143286705
    2. ' times' → logprob: -4.758615493774414
    3. '   ' → logprob: -15.133615493774414
    4. '(times' → logprob: -15.883615493774414
    5. 'time' → logprob: -16.008615493774414
    6. '.times' → logprob: -16.883615493774414
    7. '10' → logprob: -17.008615493774414
    8. '
' → logprob: -17.258615493774414
    9. ' ' → logprob: -17.383615493774414
    10. '`' → logprob: -18.258615493774414

Token 309: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.3663626305060461e-05
    2. 'm' → logprob: -11.25001335144043
    3. '[' → logprob: -14.87501335144043
    4. ' [' → logprob: -16.00001335144043
    5. '[
' → logprob: -17.37501335144043
    6. '   ' → logprob: -17.50001335144043
    7. '][' → logprob: -17.87501335144043
    8. '```' → logprob: -18.37501335144043
    9. '
' → logprob: -18.62501335144043
    10. '	m' → logprob: -18.87501335144043

Token 310: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07038051635026932
    2. '[m' → logprob: -2.695380449295044
    3. '+m' → logprob: -8.695380210876465
    4. 'm' → logprob: -8.695380210876465
    5. ' +' → logprob: -9.945380210876465
    6. '[' → logprob: -10.070380210876465
    7. ']' → logprob: -11.820380210876465
    8. '+
' → logprob: -12.945380210876465
    9. '[next' → logprob: -13.445380210876465
    10. '(m' → logprob: -13.695380210876465

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.333223139634356e-05
    2. '0' → logprob: -10.375033378601074
    3. 'm' → logprob: -14.000033378601074
    4. ']' → logprob: -14.500033378601074
    5. ' ' → logprob: -14.875033378601074
    6. '```' → logprob: -15.500033378601074
    7. ')' → logprob: -15.750033378601074
    8. '[' → logprob: -16.625032424926758
    9. '   ' → logprob: -17.250032424926758
    10. '<|end|>' → logprob: -18.125032424926758

Token 312: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.646603524684906
    2. ']:
' → logprob: -0.896603524684906
    3. ':' → logprob: -3.146603584289551
    4. ':
' → logprob: -4.021603584289551
    5. '):
' → logprob: -5.396603584289551
    6. '):' → logprob: -6.896603584289551
    7. ']' → logprob: -7.146603584289551
    8. ']:
' → logprob: -7.771603584289551
    9. '       ' → logprob: -7.896603584289551
    10. '   ' → logprob: -10.52160358428955

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006653206888586283
    2. '       ' → logprob: -5.756653308868408
    3. ' l' → logprob: -6.631653308868408
    4. ' r' → logprob: -6.881653308868408
    5. 'r' → logprob: -7.256653308868408
    6. ':' → logprob: -8.75665283203125
    7. '
' → logprob: -10.50665283203125
    8. ',' → logprob: -10.50665283203125
    9. 'm' → logprob: -10.50665283203125
    10. ':
' → logprob: -10.75665283203125

Token 314: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06364449113607407
    2. ' return' → logprob: -3.3136444091796875
    3. '           ' → logprob: -3.6886444091796875
    4. '       ' → logprob: -8.688644409179688
    5. '   ' → logprob: -9.938644409179688
    6. '	return' → logprob: -10.188644409179688
    7. 'r' → logprob: -12.188644409179688
    8. '
' → logprob: -12.438644409179688
    9. '               ' → logprob: -12.438644409179688
    10. ' ' → logprob: -13.688644409179688

Token 315: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00033546582562848926
    2. ' m' → logprob: -8.000335693359375
    3. '	m' → logprob: -17.875335693359375
    4. ' ' → logprob: -21.500335693359375
    5. ')m' → logprob: -22.875335693359375
    6. '   ' → logprob: -23.375335693359375
    7. 'ｍ' → logprob: -23.750335693359375
    8. '[m' → logprob: -24.125335693359375
    9. '       ' → logprob: -24.375335693359375
    10. ',m' → logprob: -24.625335693359375

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003733542689587921
    2. '<|end|>' → logprob: -9.125372886657715
    3. '
' → logprob: -9.875372886657715
    4. '   ' → logprob: -10.250372886657715
    5. 'elif' → logprob: -10.625372886657715
    6. '        
' → logprob: -10.750372886657715
    7. ' else' → logprob: -10.875372886657715
    8. 'm' → logprob: -11.000372886657715
    9. '\n' → logprob: -11.375372886657715
    10. 'n' → logprob: -11.375372886657715

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002666999935172498
    2. '<|end|>' → logprob: -9.125267028808594
    3. 'elif' → logprob: -10.375267028808594
    4. ')' → logprob: -10.750267028808594
    5. 'm' → logprob: -11.000267028808594
    6. ' elif' → logprob: -11.125267028808594
    7. 'else' → logprob: -11.375267028808594
    8. '   ' → logprob: -11.375267028808594
    9. ' else' → logprob: -11.375267028808594
    10. '	' → logprob: -11.875267028808594

Token 318: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7131112217903137
    2. 'elif' → logprob: -0.8381112217903137
    3. ' elif' → logprob: -3.338111162185669
    4. 'if' (adapté à ' if') → logprob: -3.713111162185669
    5. ' if' → logprob: -4.338111400604248
    6. '   ' → logprob: -6.088111400604248
    7. 'm' → logprob: -6.588111400604248
    8. '	elif' → logprob: -8.96311092376709
    9. '
' → logprob: -9.58811092376709
    10. ')' → logprob: -9.96311092376709

Token 319: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01959511823952198
    2. 'times' → logprob: -4.144595146179199
    3. ' t' → logprob: -5.769595146179199
    4. ' times' → logprob: -7.769595146179199
    5. 'time' → logprob: -12.1445951461792
    6. '	t' → logprob: -12.7695951461792
    7. 'tim' → logprob: -13.6445951461792
    8. '`t' → logprob: -14.7070951461792
    9. ' ' → logprob: -15.6445951461792
    10. '   ' → logprob: -15.8320951461792

Token 320: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6033050417900085
    2. '<m' → logprob: -0.9783050417900085
    3. ' >=' → logprob: -3.3533051013946533
    4. '>=' → logprob: -3.8533051013946533
    5. '[m' → logprob: -4.228304862976074
    6. '<' → logprob: -5.228304862976074
    7. '>' → logprob: -8.103304862976074
    8. '[mid' → logprob: -8.603304862976074
    9. ' >' → logprob: -8.853304862976074
    10. 'm' → logprob: -9.103304862976074

Token 321: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.6931481957435608
    2. 'times' → logprob: -0.6931481957435608
    3. 'time' → logprob: -15.443148612976074
    4. 't' → logprob: -15.818148612976074
    5. '(times' → logprob: -15.943148612976074
    6. 'tim' → logprob: -16.443147659301758
    7. '.times' → logprob: -16.443147659301758
    8. 'm' → logprob: -16.693147659301758
    9. ' ' → logprob: -16.818147659301758
    10. '_times' → logprob: -16.943147659301758

Token 322: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -7.684157026233152e-05
    2. 'm' → logprob: -9.500077247619629
    3. 'times' → logprob: -14.625077247619629
    4. '[l' → logprob: -14.625077247619629
    5. '[' → logprob: -15.625077247619629
    6. ',m' → logprob: -15.625077247619629
    7. ')' → logprob: -15.625077247619629
    8. '(m' → logprob: -15.875077247619629
    9. '[r' → logprob: -16.375076293945312
    10. '	m' → logprob: -16.625076293945312

Token 323: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0172741413116455
    2. ']:' → logprob: -1.2672741413116455
    3. '):' → logprob: -1.2672741413116455
    4. ']:
' → logprob: -3.0172741413116455
    5. ':' → logprob: -3.8922741413116455
    6. ':
' → logprob: -6.392273902893066
    7. ']):
' → logprob: -6.642273902893066
    8. ']' → logprob: -7.017273902893066
    9. ']):' → logprob: -7.267273902893066
    10. 'm' → logprob: -7.767273902893066

Token 324: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4854240417480469
    2. ' r' → logprob: -0.9854240417480469
    3. '       ' → logprob: -4.610424041748047
    4. '           ' → logprob: -6.735424041748047
    5. '
' → logprob: -9.235424041748047
    6. '   ' → logprob: -11.235424041748047
    7. ',' → logprob: -11.985424041748047
    8. ',r' → logprob: -12.235424041748047
    9. ' l' → logprob: -12.485424041748047
    10. '	r' → logprob: -12.485424041748047

Token 325: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0019286326132714748
    2. ' r' → logprob: -6.251928806304932
    3. '	r' → logprob: -18.626928329467773
    4. '   ' → logprob: -18.751928329467773
    5. '           ' → logprob: -19.126928329467773
    6. '```' → logprob: -20.751928329467773
    7. '       ' → logprob: -21.001928329467773
    8. '
' → logprob: -21.251928329467773
    9. '_r' → logprob: -21.876928329467773
    10. '    ' → logprob: -22.751928329467773

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763921737670898
    2. ' =' → logprob: -0.8263921737670898
    3. '=m' → logprob: -7.70139217376709
    4. 'm' → logprob: -15.95139217376709
    5. ',' → logprob: -16.076393127441406
    6. '=
' → logprob: -16.201393127441406
    7. ' =
' → logprob: -17.201393127441406
    8. '＝' → logprob: -17.701393127441406
    9. ',m' → logprob: -18.326393127441406
    10. '=l' → logprob: -18.451393127441406

Token 327: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005535095697268844
    2. ' m' → logprob: -7.500553607940674
    3. '	m' → logprob: -14.500553131103516
    4. '   ' → logprob: -19.375553131103516
    5. '```' → logprob: -21.250553131103516
    6. ' м' → logprob: -21.625553131103516
    7. '    ' → logprob: -21.625553131103516
    8. ' ' → logprob: -21.875553131103516
    9. '
' → logprob: -21.875553131103516
    10. ',m' → logprob: -22.375553131103516

Token 328: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.716881513595581
    2. ' m' → logprob: -1.466881513595581
    3. '-' → logprob: -1.966881513595581
    4. ' -' → logprob: -2.841881513595581
    5. '=m' → logprob: -3.591881513595581
    6. ' =' → logprob: -3.841881513595581
    7. '=' → logprob: -4.09188175201416
    8. '
' → logprob: -5.21688175201416
    9. ' ' → logprob: -5.46688175201416
    10. ',m' → logprob: -6.09188175201416

Token 329: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5298592448234558
    2. ' else' → logprob: -1.2798593044281006
    3. '       ' → logprob: -2.5298593044281006
    4. '   ' → logprob: -3.0298593044281006
    5. '```' → logprob: -5.4048590660095215
    6. 'l' → logprob: -8.27985954284668
    7. ' l' → logprob: -8.65485954284668
    8. '	else' → logprob: -9.52985954284668
    9. '
' → logprob: -9.90485954284668
    10. '           ' → logprob: -10.02985954284668

Token 330: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.589614987373352
    2. ' else' → logprob: -0.839614987373352
    3. '       ' → logprob: -4.3396148681640625
    4. '   ' → logprob: -7.7146148681640625
    5. '	else' → logprob: -9.339614868164062
    6. 'elif' → logprob: -13.464614868164062
    7. '```' → logprob: -13.589614868164062
    8. '           ' → logprob: -13.714614868164062
    9. '     ' → logprob: -14.214614868164062
    10. 'l' → logprob: -14.464614868164062

Token 331: ':
' (ID: 734)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06250490248203278
    2. 'l' → logprob: -3.437505006790161
    3. '           ' → logprob: -3.562505006790161
    4. '   ' → logprob: -10.562504768371582
    5. '	l' → logprob: -10.687504768371582
    6. '       ' → logprob: -11.312504768371582
    7. ',l' → logprob: -11.937504768371582
    8. ':l' → logprob: -12.437504768371582
    9. ' ' → logprob: -13.812504768371582
    10. ':' → logprob: -13.937504768371582

Token 332: '           ' (ID: 352)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018531618639826775
    2. ' l' → logprob: -4.018531799316406
    3. '           ' → logprob: -8.393531799316406
    4. '	l' → logprob: -8.893531799316406
    5. '   ' → logprob: -11.643531799316406
    6. '       ' → logprob: -11.768531799316406
    7. ',l' → logprob: -14.768531799316406
    8. '               ' → logprob: -15.143531799316406
    9. ':l' → logprob: -15.393531799316406
    10. '		' → logprob: -15.643531799316406

Token 333: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.735893965815194e-05
    2. ' l' → logprob: -11.000017166137695
    3. '	l' → logprob: -14.875017166137695
    4. '   ' → logprob: -15.375017166137695
    5. '       ' → logprob: -18.875017166137695
    6. '    ' → logprob: -20.375017166137695
    7. ',l' → logprob: -20.625017166137695
    8. ':l' → logprob: -20.875017166137695
    9. ' л' → logprob: -21.375017166137695
    10. '           ' → logprob: -21.375017166137695

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861669983714819
    2. ' =' → logprob: -4.758616924285889
    3. '=m' → logprob: -13.13361644744873
    4. 'm' → logprob: -15.88361644744873
    5. ' m' → logprob: -18.883617401123047
    6. '=
' → logprob: -19.758617401123047
    7. '+=' → logprob: -19.758617401123047
    8. '＝' → logprob: -20.133617401123047
    9. '+' → logprob: -20.883617401123047
    10. '=}' → logprob: -21.508617401123047

Token 335: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02975071594119072
    2. ' m' → logprob: -3.5297508239746094
    3. '	m' → logprob: -15.27975082397461
    4. 'r' → logprob: -17.52975082397461
    5. '    ' → logprob: -18.02975082397461
    6. ' ' → logprob: -18.27975082397461
    7. '   ' → logprob: -18.27975082397461
    8. '[m' → logprob: -20.15475082397461
    9. '     ' → logprob: -20.52975082397461
    10. '```' → logprob: -20.65475082397461

Token 336: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16124020516872406
    2. '       ' → logprob: -2.7862401008605957
    3. ' +' → logprob: -3.4112401008605957
    4. '+=' → logprob: -4.286240100860596
    5. '   ' → logprob: -4.411240100860596
    6. '=' → logprob: -5.286240100860596
    7. ' +=' → logprob: -5.411240100860596
    8. '1' → logprob: -5.536240100860596
    9. '+
' → logprob: -5.661240100860596
    10. '
' → logprob: -5.786240100860596

Token 337: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0011860613012686372
    2. ' m' → logprob: -7.126185894012451
    3. '1' → logprob: -7.876185894012451
    4. 'r' → logprob: -13.75118637084961
    5. '+' → logprob: -15.25118637084961
    6. '   ' → logprob: -16.00118637084961
    7. 'l' → logprob: -16.25118637084961
    8. ' ' → logprob: -16.25118637084961
    9. '	m' → logprob: -16.62618637084961
    10. '```' → logprob: -16.75118637084961

Token 338: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012621245346963406
    2. '<|end|>' → logprob: -4.6376214027404785
    3. '       ' → logprob: -7.0126214027404785
    4. '	return' → logprob: -7.2626214027404785
    5. ')' → logprob: -7.7626214027404785
    6. 'return' → logprob: -7.8876214027404785
    7. '<|end|>' → logprob: -8.88762092590332
    8. ' return' → logprob: -9.51262092590332
    9. ':return' → logprob: -10.38762092590332
    10. '    ' → logprob: -10.51262092590332

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002526076277717948
    2. 'return' → logprob: -6.12752628326416
    3. ' return' → logprob: -8.37752628326416
    4. '	return' → logprob: -9.50252628326416
    5. '       ' → logprob: -11.00252628326416
    6. '<|end|>' → logprob: -11.75252628326416
    7. ':return' → logprob: -13.50252628326416
    8. ')' → logprob: -13.62752628326416
    9. 'eturn' → logprob: -13.75252628326416
    10. '```' → logprob: -13.87752628326416

Token 340: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002851232886314392
    2. '   ' → logprob: -6.0028510093688965
    3. ' return' → logprob: -8.002851486206055
    4. '	return' → logprob: -11.627851486206055
    5. '```' → logprob: -11.627851486206055
    6. 'raise' → logprob: -11.877851486206055
    7. ':return' → logprob: -12.627851486206055
    8. 'None' → logprob: -12.877851486206055
    9. '#' → logprob: -13.627851486206055
    10. ')' → logprob: -13.627851486206055

Token 341: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0046498957090079784
    2. '0' → logprob: -5.754650115966797
    3. '-' → logprob: -7.129650115966797
    4. 'None' → logprob: -7.379650115966797
    5. '-l' → logprob: -10.629650115966797
    6. ' l' → logprob: -11.379650115966797
    7. 'r' → logprob: -12.129650115966797
    8. 'len' → logprob: -12.629650115966797
    9. ' -' → logprob: -14.004650115966797
    10. ' ' → logprob: -15.379650115966797

Token 342: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.048749059438705444
    2. 'visited' → logprob: -3.5487489700317383
    3. 'def' → logprob: -4.298748970031738
    4. 'queue' → logprob: -5.923748970031738
    5. 'dist' → logprob: -7.548748970031738
    6. 'deque' → logprob: -7.673748970031738
    7. 'import' → logprob: -7.798748970031738
    8. '#' → logprob: -8.048748970031738
    9. 'INF' → logprob: -8.173748970031738
    10. '```' → logprob: -8.923748970031738

Token 343: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3410467207431793
    2. 'visited' → logprob: -1.466046690940857
    3. ' visited' → logprob: -4.0910468101501465
    4. ':' → logprob: -4.2160468101501465
    5. ')' → logprob: -4.9660468101501465
    6. '#' → logprob: -5.0910468101501465
    7. '```' → logprob: -6.3410468101501465
    8. 'dist' → logprob: -6.7160468101501465
    9. 't' → logprob: -6.7160468101501465
    10. 'steps' → logprob: -6.8410468101501465

Token 344: ' sys' (ID: 12228)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.039274975657463074
    2. 'sys' → logprob: -3.7892749309539795
    3. 'heap' → logprob: -5.039275169372559
    4. 'bis' → logprob: -5.289275169372559
    5. 'math' → logprob: -5.539275169372559
    6. 'copy' → logprob: -8.539275169372559
    7. ' collections' → logprob: -8.914275169372559
    8. 'queue' → logprob: -9.414275169372559
    9. 'typing' → logprob: -10.914275169372559
    10. 'operator' → logprob: -12.789275169372559

Token 345: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.005269214976578951
    2. 'import' → logprob: -5.2552690505981445
    3. '	import' → logprob: -10.505269050598145
    4. '<|end|>' → logprob: -12.130269050598145
    5. ' imports' → logprob: -14.630269050598145
    6. '<|end|>' → logprob: -14.755269050598145
    7. ' importar' → logprob: -14.880269050598145
    8. ' ' → logprob: -15.505269050598145
    9. ' input' → logprob: -15.505269050598145
    10. ' impor' → logprob: -15.505269050598145

Token 346: ' max' (ID: 2999)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.01814105547964573
    2. 'exit' → logprob: -4.768141269683838
    3. 'set' → logprob: -5.268141269683838
    4. 'max' → logprob: -6.268141269683838
    5. 'stdout' → logprob: -6.393141269683838
    6. 'stderr' → logprob: -8.14314079284668
    7. 'import' → logprob: -9.14314079284668
    8. 'deque' → logprob: -9.51814079284668
    9. 'stdlib' → logprob: -9.64314079284668
    10. '.stdin' → logprob: -9.76814079284668

Token 347: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07085361331701279
    2. 'int' → logprob: -2.6958537101745605
    3. 'depth' → logprob: -7.0708537101745605
    4. '_int' → logprob: -11.070853233337402
    5. 'rec' → logprob: -11.320853233337402
    6. 'max' → logprob: -11.820853233337402
    7. 'import' → logprob: -11.945853233337402
    8. '```' → logprob: -12.070853233337402
    9. 'set' → logprob: -12.195853233337402
    10. '_size' → logprob: -12.945853233337402

Token 348: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08594264090061188
    2. 'dist' → logprob: -3.2109427452087402
    3. 'visited' → logprob: -4.21094274520874
    4. 'def' → logprob: -5.33594274520874
    5. 'import' → logprob: -5.46094274520874
    6. '
' → logprob: -5.58594274520874
    7. 'queue' → logprob: -5.83594274520874
    8. 'distance' → logprob: -6.08594274520874
    9. 'INF' → logprob: -6.21094274520874
    10. '

' → logprob: -6.46094274520874

Token 349: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1736239641904831
    2. 'INF' → logprob: -3.048624038696289
    3. 'visited' → logprob: -3.173624038696289
    4. 'def' → logprob: -3.423624038696289
    5. 'from' → logprob: -3.673624038696289
    6. 'queue' → logprob: -4.923624038696289
    7. '#' → logprob: -6.298624038696289
    8. 'import' → logprob: -6.798624038696289
    9. 'q' → logprob: -7.298624038696289
    10. 'dp' → logprob: -7.798624038696289

Token 350: ' BFS' (ID: 190016)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7792696952819824
    2. 'def' → logprob: -1.0292696952819824
    3. 'visited' → logprob: -2.2792696952819824
    4. 'from' → logprob: -2.7792696952819824
    5. 'queue' → logprob: -4.529269695281982
    6. 'q' → logprob: -5.529269695281982
    7. 'INF' → logprob: -6.529269695281982
    8. 'dq' → logprob: -6.529269695281982
    9. 'import' → logprob: -7.404269695281982
    10. '#' → logprob: -7.529269695281982

Token 351: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5765053033828735
    2. 'queue' → logprob: -1.3265053033828735
    3. 'def' → logprob: -2.826505184173584
    4. 'q' → logprob: -2.826505184173584
    5. 'visited' → logprob: -3.076505184173584
    6. 'dist' → logprob: -5.201505184173584
    7. '
' → logprob: -6.326505184173584
    8. 'que' → logprob: -8.201505661010742
    9. 'import' → logprob: -8.451505661010742
    10. 'deque' → logprob: -8.826505661010742

Token 352: 'D' (ID: 35)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26397013664245605
    2. 'start' → logprob: -2.388970136642456
    3. 'queue' → logprob: -2.638970136642456
    4. 'def' → logprob: -3.513970136642456
    5. 'q' → logprob: -4.263970375061035
    6. 'visited' → logprob: -4.763970375061035
    7. 'deque' → logprob: -4.888970375061035
    8. 'from' → logprob: -6.138970375061035
    9. '(start' → logprob: -6.388970375061035
    10. 'que' → logprob: -6.763970375061035

Token 353: 'ijkstra' (ID: 124290)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3716510832309723
    2. 'e' → logprob: -1.24665105342865
    3. 'E' → logprob: -4.9966511726379395
    4. 'ef' → logprob: -5.3716511726379395
    5. ' )' → logprob: -5.6216511726379395
    6. 'FS' → logprob: -6.9966511726379395
    7. '=' → logprob: -7.1216511726379395
    8. 'Q' → logprob: -7.2466511726379395
    9. 'EF' → logprob: -7.3716511726379395
    10. 'ep' → logprob: -7.6216511726379395

Token 354: '-like' (ID: 22085)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3638743758201599
    2. 'from' → logprob: -1.3638744354248047
    3. 'import' → logprob: -3.2388744354248047
    4. ' )' → logprob: -5.863874435424805
    5. ' from' → logprob: -5.988874435424805
    6. '-like' → logprob: -7.113874435424805
    7. '):' → logprob: -7.363874435424805
    8. ''s' → logprob: -7.988874435424805
    9. 'for' → logprob: -8.363874435424805
    10. 'with' → logprob: -8.363874435424805

Token 355: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21768736839294434
    2. 'from' → logprob: -2.7176873683929443
    3. ' )' → logprob: -3.0926873683929443
    4. 'import' → logprob: -3.5926873683929443
    5. '):' → logprob: -4.342687606811523
    6. ')
' → logprob: -4.592687606811523
    7. 'def' → logprob: -4.842687606811523
    8. ' from' → logprob: -5.092687606811523
    9. 'queue' → logprob: -5.842687606811523
    10. '
' → logprob: -5.967687606811523

Token 356: ' to' (ID: 316)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11190158128738403
    2. 'from' → logprob: -2.3619015216827393
    3. 'dist' → logprob: -5.361901760101318
    4. 'visited' → logprob: -5.736901760101318
    5. 'def' → logprob: -6.361901760101318
    6. 'queue' → logprob: -6.611901760101318
    7. 'q' → logprob: -7.861901760101318
    8. '
' → logprob: -9.73690128326416
    9. 'distance' → logprob: -10.23690128326416
    10. 'pq' → logprob: -10.23690128326416

Token 357: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.006796490401029587
    2. ' find' → logprob: -5.631796360015869
    3. 'solve' → logprob: -6.381796360015869
    4. 'def' → logprob: -7.506796360015869
    5. 'import' → logprob: -8.381796836853027
    6. 'search' → logprob: -9.006796836853027
    7. '
' → logprob: -9.006796836853027
    8. 'min' → logprob: -9.256796836853027
    9. 'from' → logprob: -9.381796836853027
    10. 'reach' → logprob: -10.131796836853027

Token 358: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4852040410041809
    2. 'minimum' → logprob: -1.6102039813995361
    3. 'short' → logprob: -2.360203981399536
    4. 'min' → logprob: -3.735203981399536
    5. 'minimal' → logprob: -4.110204219818115
    6. 'from' → logprob: -4.235204219818115
    7. 'def' → logprob: -4.235204219818115
    8. ' the' → logprob: -5.110204219818115
    9. 'import' → logprob: -5.485204219818115
    10. 'a' → logprob: -6.110204219818115

Token 359: ' steps' (ID: 10331)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.13913366198539734
    2. 'cost' → logprob: -2.2641336917877197
    3. '_time' → logprob: -4.264133453369141
    4. 'import' → logprob: -5.014133453369141
    5. ' time' → logprob: -6.514133453369141
    6. 'dist' → logprob: -6.764133453369141
    7. 'distance' → logprob: -7.139133453369141
    8. '_cost' → logprob: -7.639133453369141
    9. ' cost' → logprob: -7.764133453369141
    10. 't' → logprob: -8.01413345336914

Token 360: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9316355586051941
    2. 'from' → logprob: -1.4316356182098389
    3. 'import' → logprob: -1.6816356182098389
    4. 'dist' → logprob: -2.556635618209839
    5. 'queue' → logprob: -3.306635618209839
    6. 'visited' → logprob: -3.931635618209839
    7. '
' → logprob: -4.05663537979126
    8. 'q' → logprob: -4.55663537979126
    9. 'distance' → logprob: -5.55663537979126
    10. '_queue' → logprob: -5.93163537979126

Token 361: 'walking' (ID: 157563)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03487217426300049
    2. 'from' → logprob: -4.034872055053711
    3. 'to' → logprob: -5.534872055053711
    4. 'visited' → logprob: -5.784872055053711
    5. 'start' → logprob: -6.284872055053711
    6. 'time' → logprob: -6.409872055053711
    7. 'def' → logprob: -6.659872055053711
    8. 'import' → logprob: -7.159872055053711
    9. ')
' → logprob: -7.284872055053711
    10. 't' → logprob: -7.284872055053711

Token 362: ' moves' (ID: 19523)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17460843920707703
    2. 'cost' → logprob: -3.0496084690093994
    3. 'time' → logprob: -3.1746084690093994
    4. 'from' → logprob: -4.17460823059082
    5. ' )' → logprob: -4.54960823059082
    6. ',' → logprob: -4.79960823059082
    7. '+' → logprob: -5.04960823059082
    8. 'to' → logprob: -5.42460823059082
    9. ' to' → logprob: -5.54960823059082
    10. '=' → logprob: -5.79960823059082

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03236221894621849
    2. ',' → logprob: -4.28236198425293
    3. ' )' → logprob: -5.03236198425293
    4. 'to' → logprob: -5.40736198425293
    5. ' to' → logprob: -6.03236198425293
    6. '+' → logprob: -7.15736198425293
    7. 'from' → logprob: -7.40736198425293
    8. 'for' → logprob: -7.78236198425293
    9. ')
' → logprob: -7.78236198425293
    10. '=' → logprob: -7.90736198425293

Token 364: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7859576940536499
    2. 'dist' → logprob: -1.53595769405365
    3. 'import' → logprob: -1.91095769405365
    4. 'visited' → logprob: -2.5359578132629395
    5. 'queue' → logprob: -2.9109578132629395
    6. 'def' → logprob: -3.2859578132629395
    7. 'q' → logprob: -4.7859578132629395
    8. 'dq' → logprob: -7.6609578132629395
    9. 'dp' → logprob: -8.535957336425781
    10. 'que' → logprob: -8.660957336425781

Token 365: ' state' (ID: 2608)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9718807935714722
    2. 'from' → logprob: -0.9718807935714722
    3. 'def' → logprob: -1.9718807935714722
    4. 'dist' → logprob: -2.8468809127807617
    5. 'visited' → logprob: -3.3468809127807617
    6. 'queue' → logprob: -4.721880912780762
    7. 'q' → logprob: -6.846880912780762
    8. 'dq' → logprob: -8.221880912780762
    9. 'start' → logprob: -8.971880912780762
    10. 'heap' → logprob: -9.346880912780762

Token 366: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09841693937778473
    2. '=' → logprob: -2.973417043685913
    3. ',' → logprob: -3.723417043685913
    4. '_queue' → logprob: -4.848416805267334
    5. 'from' → logprob: -5.723416805267334
    6. ')' → logprob: -6.098416805267334
    7. 'queue' → logprob: -6.848416805267334
    8. '_' → logprob: -7.598416805267334
    9. '_space' → logprob: -7.598416805267334
    10. ':' → logprob: -7.723416805267334

Token 367: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.44553831219673157
    2. '(i' → logprob: -1.6955382823944092
    3. '(time' → logprob: -2.570538282394409
    4. '(t' → logprob: -3.320538282394409
    5. 'from' → logprob: -3.945538282394409
    6. 'time' → logprob: -4.195538520812988
    7. ' time' → logprob: -4.820538520812988
    8. 'deque' → logprob: -5.320538520812988
    9. '(queue' → logprob: -5.570538520812988
    10. '(y' → logprob: -6.320538520812988

Token 368: 'time' (ID: 4580)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09863504022359848
    2. 't' → logprob: -3.223634958267212
    3. 'time' → logprob: -3.723634958267212
    4. 'x' → logprob: -4.098635196685791
    5. ')' → logprob: -4.598635196685791
    6. ' i' → logprob: -7.598635196685791
    7. ')i' → logprob: -7.598635196685791
    8. 'h' → logprob: -8.098634719848633
    9. 'y' → logprob: -8.223634719848633
    10. 'current' → logprob: -8.348634719848633

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005351874511688948
    2. ' ,' → logprob: -5.630352020263672
    3. '+' → logprob: -7.130352020263672
    4. ')' → logprob: -8.130352020263672
    5. ',t' → logprob: -8.630352020263672
    6. ' +' → logprob: -9.505352020263672
    7. ',x' → logprob: -9.505352020263672
    8. ',n' → logprob: -10.130352020263672
    9. ',i' → logprob: -10.255352020263672
    10. ',
' → logprob: -10.505352020263672

Token 370: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3866989016532898
    2. 'i' → logprob: -1.2616989612579346
    3. 'y' → logprob: -4.3866987228393555
    4. 'row' → logprob: -4.6366987228393555
    5. ' x' → logprob: -4.8866987228393555
    6. ' i' → logprob: -5.3866987228393555
    7. ' y' → logprob: -6.8866987228393555
    8. 'position' → logprob: -7.3866987228393555
    9. 'h' → logprob: -7.8866987228393555
    10. ')' → logprob: -8.261698722839355

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036787090357393026
    2. ',y' → logprob: -8.000368118286133
    3. ' ,' → logprob: -10.750368118286133
    4. ',
' → logprob: -12.375368118286133
    5. 'y' → logprob: -12.625368118286133
    6. '_,' → logprob: -13.625368118286133
    7. ')' → logprob: -13.625368118286133
    8. ',next' → logprob: -15.875368118286133
    9. '0' → logprob: -16.250368118286133
    10. ' y' → logprob: -16.375368118286133

Token 372: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004078401252627373
    2. ' y' → logprob: -5.504078388214111
    3. ',y' → logprob: -18.254077911376953
    4. '	y' → logprob: -18.254077911376953
    5. ')' → logprob: -19.129077911376953
    6. ',' → logprob: -20.004077911376953
    7. '   ' → logprob: -20.254077911376953
    8. ')y' → logprob: -20.754077911376953
    9. 'Y' → logprob: -21.754077911376953
    10. '_y' → logprob: -22.004077911376953

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001639354508370161
    2. ',' → logprob: -6.501639366149902
    3. ')
' → logprob: -9.126639366149902
    4. ' )' → logprob: -11.876639366149902
    5. '):' → logprob: -12.376639366149902
    6. '),' → logprob: -12.751639366149902
    7. ')`' → logprob: -12.876639366149902
    8. ')
' → logprob: -13.251639366149902
    9. ',)' → logprob: -13.626639366149902
    10. ')_' → logprob: -13.751639366149902

Token 374: '#' (ID: 2)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.0368895530700684
    2. 'from' → logprob: -1.4118895530700684
    3. 'dist' → logprob: -2.2868895530700684
    4. 'q' → logprob: -2.2868895530700684
    5. 'import' → logprob: -2.5368895530700684
    6. 'visited' → logprob: -2.6618895530700684
    7. 'def' → logprob: -3.1618895530700684
    8. 'dq' → logprob: -6.036889553070068
    9. 'que' → logprob: -6.661889553070068
    10. 'dp' → logprob: -7.036889553070068

Token 375: ' use' (ID: 1199)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7203066945075989
    2. 'queue' → logprob: -1.720306634902954
    3. 'visited' → logprob: -1.970306634902954
    4. 'import' → logprob: -2.220306634902954
    5. 'q' → logprob: -3.220306634902954
    6. 'dist' → logprob: -3.470306634902954
    7. 'def' → logprob: -4.845306873321533
    8. 'dq' → logprob: -5.220306873321533
    9. 'que' → logprob: -7.345306873321533
    10. 'dp' → logprob: -7.845306873321533

Token 376: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3362923264503479
    2. 'deque' → logprob: -1.4612922668457031
    3. 'import' → logprob: -3.211292266845703
    4. 'visited' → logprob: -4.836292266845703
    5. '```' → logprob: -6.336292266845703
    6. ' from' → logprob: -6.836292266845703
    7. ' deque' → logprob: -6.961292266845703
    8. 'queue' → logprob: -7.336292266845703
    9. 'dist' → logprob: -8.336292266845703
    10. 'heap' → logprob: -8.586292266845703

Token 377: ' dist' (ID: 3601)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.016635166481137276
    2. 'from' → logprob: -4.266634941101074
    3. 'import' → logprob: -7.391634941101074
    4. ' deque' → logprob: -7.516634941101074
    5. 'heap' → logprob: -7.641634941101074
    6. 'visited' → logprob: -8.016634941101074
    7. 'queue' → logprob: -8.016634941101074
    8. 'dist' → logprob: -10.141634941101074
    9. 'priority' → logprob: -10.516634941101074
    10. 'que' → logprob: -10.641634941101074

Token 378: ' dictionary' (ID: 22131)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16891984641551971
    2. 'ance' → logprob: -2.043919801712036
    3. '=' → logprob: -3.918919801712036
    4. '=[[' → logprob: -6.418920040130615
    5. 'ances' → logprob: -7.043920040130615
    6. '[' → logprob: -7.043920040130615
    7. '=[' → logprob: -7.293920040130615
    8. '=[]' → logprob: -7.418920040130615
    9. ',' → logprob: -8.418919563293457
    10. 'import' → logprob: -9.043919563293457

Token 379: ':' (ID: 25)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.016153432428836823
    2. ' =' → logprob: -5.516153335571289
    3. 'visited' → logprob: -5.641153335571289
    4. 'import' → logprob: -5.766153335571289
    5. '
' → logprob: -6.016153335571289
    6. '=' → logprob: -6.391153335571289
    7. 'from' → logprob: -7.516153335571289
    8. '=
' → logprob: -8.391153335571289
    9. ' dist' → logprob: -8.891153335571289
    10. ',' → logprob: -9.141153335571289

Token 380: ' key' (ID: 2140)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0032796678133308887
    2. 'from' → logprob: -6.503279685974121
    3. ' dist' → logprob: -6.628279685974121
    4. 'import' → logprob: -7.753279685974121
    5. '
' → logprob: -11.253279685974121
    6. 'deque' → logprob: -12.503279685974121
    7. 'visited' → logprob: -13.128279685974121
    8. '{' → logprob: -13.253279685974121
    9. ' from' → logprob: -13.753279685974121
    10. '```' → logprob: -14.253279685974121

Token 381: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6345964670181274
    2. ' =' → logprob: -0.7595964670181274
    3. ',' → logprob: -7.384596347808838
    4. '=(' → logprob: -7.509596347808838
    5. '=
' → logprob: -8.009596824645996
    6. 'import' → logprob: -9.134596824645996
    7. 'from' → logprob: -9.384596824645996
    8. ')' → logprob: -9.509596824645996
    9. 's' → logprob: -10.134596824645996
    10. ' =
' → logprob: -10.259596824645996

Token 382: 't' (ID: 83)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34783023595809937
    2. 'time' → logprob: -1.9728302955627441
    3. '0' → logprob: -2.847830295562744
    4. ')' → logprob: -3.097830295562744
    5. 't' → logprob: -3.847830295562744
    6. '(' → logprob: -4.722830295562744
    7. '(x' → logprob: -4.722830295562744
    8. 'get' → logprob: -5.472830295562744
    9. ' (' → logprob: -6.222830295562744
    10. 'times' → logprob: -6.847830295562744

Token 383: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.31703224778175354
    2. ',' → logprob: -1.3170322179794312
    3. 'x' → logprob: -5.817032337188721
    4. ' ,' → logprob: -7.692032337188721
    5. ',t' → logprob: -9.067031860351562
    6. ',y' → logprob: -10.067031860351562
    7. ',i' → logprob: -10.317031860351562
    8. ',time' → logprob: -10.692031860351562
    9. '(x' → logprob: -11.317031860351562
    10. '(' → logprob: -11.442031860351562

Token 384: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.029780110344290733
    2. ',' → logprob: -3.529780149459839
    3. ',x' → logprob: -11.154780387878418
    4. 'y' → logprob: -11.904780387878418
    5. ' ,' → logprob: -12.779780387878418
    6. ',t' → logprob: -13.779780387878418
    7. ',Y' → logprob: -14.029780387878418
    8. ',
' → logprob: -14.279780387878418
    9. ',j' → logprob: -14.404780387878418
    10. ',n' → logprob: -14.529780387878418

Token 385: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7018810510635376
    2. '),' → logprob: -0.7018810510635376
    3. ')
' → logprob: -5.451880931854248
    4. ',' → logprob: -5.701880931854248
    5. '),
' → logprob: -8.451881408691406
    6. '),(' → logprob: -8.451881408691406
    7. ',y' → logprob: -8.826881408691406
    8. ',)' → logprob: -9.326881408691406
    9. ' ),' → logprob: -9.451881408691406
    10. ',x' → logprob: -9.576881408691406

Token 386: ' but' (ID: 889)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.002236139727756381
    2. ' value' → logprob: -6.752236366271973
    3. 'values' → logprob: -7.627236366271973
    4. ')' → logprob: -8.127236366271973
    5. 'val' → logprob: -9.002236366271973
    6. '#' → logprob: -9.502236366271973
    7. '0' → logprob: -10.877236366271973
    8. 'dist' → logprob: -11.377236366271973
    9. ''value' → logprob: -11.877236366271973
    10. '
' → logprob: -12.127236366271973

Token 387: ' t' (ID: 260)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.8942173719406128
    2. ' key' → logprob: -2.3942174911499023
    3. 'we' → logprob: -2.7692174911499023
    4. ' we' → logprob: -3.1442174911499023
    5. 'using' → logprob: -3.1442174911499023
    6. 'since' → logprob: -3.2692174911499023
    7. 't' → logprob: -3.5192174911499023
    8. ' use' → logprob: -3.5192174911499023
    9. 'x' → logprob: -3.6442174911499023
    10. '#' → logprob: -3.8942174911499023

Token 388: ' can' (ID: 665)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.494396835565567
    2. '=' → logprob: -1.3693968057632446
    3. ')' → logprob: -3.369396924972534
    4. '_key' → logprob: -3.744396924972534
    5. ' =' → logprob: -4.619396686553955
    6. 'is' → logprob: -4.744396686553955
    7. 's' → logprob: -5.119396686553955
    8. '>' → logprob: -5.494396686553955
    9. 'key' → logprob: -5.494396686553955
    10. ' is' → logprob: -5.494396686553955

Token 389: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6595484614372253
    2. ' be' → logprob: -0.7845484614372253
    3. '=' → logprob: -4.159548282623291
    4. 'not' → logprob: -5.909548282623291
    5. 'range' → logprob: -6.534548282623291
    6. 'key' → logprob: -6.659548282623291
    7. 'only' → logprob: -7.034548282623291
    8. ',' → logprob: -7.409548282623291
    9. 'x' → logprob: -7.659548282623291
    10. ' only' → logprob: -8.15954875946045

Token 390: ' large' (ID: 4410)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.6874632835388184
    2. 'ignored' → logprob: -1.0624632835388184
    3. 'sk' → logprob: -2.5624632835388184
    4. 'int' → logprob: -3.5624632835388184
    5. '0' → logprob: -3.9374632835388184
    6. 'discard' → logprob: -5.187463283538818
    7. 'large' → logprob: -5.562463283538818
    8. 'None' → logprob: -5.812463283538818
    9. 'dis' → logprob: -5.937463283538818
    10. 'limited' → logprob: -6.187463283538818

Token 391: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.33908727765083313
    2. 'visited' → logprob: -2.0890872478485107
    3. 'from' → logprob: -2.3390872478485107
    4. 'import' → logprob: -3.0890872478485107
    5. '
' → logprob: -4.58908748626709
    6. ',' → logprob: -5.71408748626709
    7. '#' → logprob: -5.96408748626709
    8. ' dist' → logprob: -6.96408748626709
    9. '_dist' → logprob: -7.46408748626709
    10. ' from' → logprob: -7.58908748626709

Token 392: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22631147503852844
    2. 'from' → logprob: -2.101311445236206
    3. 'visited' → logprob: -2.726311445236206
    4. 'import' → logprob: -4.476311683654785
    5. '#' → logprob: -6.601311683654785
    6. ')' → logprob: -7.101311683654785
    7. 'distance' → logprob: -8.601311683654785
    8. ' dist' → logprob: -8.601311683654785
    9. 'max' → logprob: -9.351311683654785
    10. ' visited' → logprob: -9.351311683654785

Token 393: ' Optimize' (ID: 167174)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.42463207244873047
    2. 'from' → logprob: -1.5496320724487305
    3. 'import' → logprob: -2.1746320724487305
    4. 'visited' → logprob: -4.0496320724487305
    5. '#' → logprob: -6.1746320724487305
    6. '
' → logprob: -9.29963207244873
    7. 'queue' → logprob: -9.67463207244873
    8. 'seen' → logprob: -10.04963207244873
    9. 'heap' → logprob: -10.04963207244873
    10. 'deque' → logprob: -10.04963207244873

Token 394: ':' (ID: 25)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6167314052581787
    2. 'import' → logprob: -1.2417314052581787
    3. 'visited' → logprob: -2.3667314052581787
    4. 'dist' → logprob: -2.6167314052581787
    5. ' visited' → logprob: -6.991731643676758
    6. 'by' → logprob: -7.366731643676758
    7. ' dist' → logprob: -7.366731643676758
    8. ' from' → logprob: -7.491731643676758
    9. ' by' → logprob: -7.991731643676758
    10. 'seen' → logprob: -8.366731643676758

Token 395: ' since' (ID: 3630)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5615795254707336
    2. 'dist' → logprob: -1.3115794658660889
    3. 'visited' → logprob: -2.311579465866089
    4. '#' → logprob: -3.811579465866089
    5. 'use' → logprob: -3.936579465866089
    6. 'import' → logprob: -4.686579704284668
    7. 'Use' → logprob: -5.561579704284668
    8. 'We' → logprob: -6.561579704284668
    9. 'def' → logprob: -6.936579704284668
    10. '
' → logprob: -6.936579704284668

Token 396: ' grid' (ID: 10586)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7072641253471375
    2. 'area' → logprob: -1.2072641849517822
    3. 'areas' → logprob: -1.9572641849517822
    4. 'time' → logprob: -3.8322641849517822
    5. ' the' → logprob: -4.707263946533203
    6. 'we' → logprob: -5.582263946533203
    7. ' area' → logprob: -5.707263946533203
    8. 'movement' → logprob: -5.707263946533203
    9. 't' → logprob: -5.957263946533203
    10. 'only' → logprob: -6.082263946533203

Token 397: ' changes' (ID: 6629)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.572896122932434
    2. 'size' → logprob: -1.572896122932434
    3. 'is' → logprob: -1.697896122932434
    4. '=' → logprob: -2.6978960037231445
    5. 'states' → logprob: -2.6978960037231445
    6. ',' → logprob: -2.9478960037231445
    7. 'time' → logprob: -4.0728960037231445
    8. ' size' → logprob: -4.0728960037231445
    9. 'sizes' → logprob: -4.1978960037231445
    10. '<|end|>' → logprob: -4.1978960037231445

Token 398: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.310626745223999
    2. 'only' → logprob: -1.310626745223999
    3. 'every' → logprob: -1.435626745223999
    4. 'over' → logprob: -2.685626745223999
    5. ' every' → logprob: -2.810626745223999
    6. 'state' → logprob: -4.435626983642578
    7. 'states' → logprob: -4.685626983642578
    8. 'at' → logprob: -4.935626983642578
    9. ' over' → logprob: -5.060626983642578
    10. ' rarely' → logprob: -5.060626983642578

Token 399: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.09906406700611115
    2. ' at' → logprob: -2.9740641117095947
    3. 'every' → logprob: -3.4740641117095947
    4. 'when' → logprob: -5.224063873291016
    5. ' every' → logprob: -6.349063873291016
    6. 'times' → logprob: -6.724063873291016
    7. 'K' → logprob: -7.224063873291016
    8. 'after' → logprob: -7.849063873291016
    9. 'between' → logprob: -8.099063873291016
    10. '
' → logprob: -8.349063873291016

Token 400: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.052883848547935486
    2. 'change' → logprob: -4.177883625030518
    3. 'the' → logprob: -4.927883625030518
    4. ' times' → logprob: -5.052883625030518
    5. 'time' → logprob: -5.302883625030518
    6. 'area' → logprob: -5.427883625030518
    7. 'each' → logprob: -5.927883625030518
    8. 'certain' → logprob: -5.927883625030518
    9. 'known' → logprob: -6.427883625030518
    10. 'specific' → logprob: -6.552883625030518

Token 401: ' in' (ID: 306)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.8284038305282593
    2. 'indices' → logprob: -2.328403949737549
    3. '[]' → logprob: -2.453403949737549
    4. ']' → logprob: -2.453403949737549
    5. 'import' → logprob: -2.703403949737549
    6. '[i' → logprob: -2.953403949737549
    7. ' =' → logprob: -3.078403949737549
    8. '#' → logprob: -3.078403949737549
    9. ',' → logprob: -3.203403949737549
    10. ')' → logprob: -3.328403949737549

Token 402: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.0002585978072602302
    2. ' times' → logprob: -8.750258445739746
    3. 'the' → logprob: -10.000258445739746
    4. 'sorted' → logprob: -10.875258445739746
    5. '[]' → logprob: -11.875258445739746
    6. 'time' → logprob: -12.500258445739746
    7. '(times' → logprob: -12.625258445739746
    8. '[' → logprob: -12.625258445739746
    9. '
' → logprob: -12.750258445739746
    10. '`' → logprob: -12.875258445739746

Token 403: '[],' (ID: 25409)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6550003886222839
    2. 'visited' → logprob: -1.5300004482269287
    3. 'from' → logprob: -3.0300004482269287
    4. 'import' → logprob: -3.0300004482269287
    5. 'dist' → logprob: -3.1550004482269287
    6. '#' → logprob: -3.1550004482269287
    7. ',
' → logprob: -3.1550004482269287
    8. '
' → logprob: -4.15500020980835
    9. ')' → logprob: -5.28000020980835
    10. 'def' → logprob: -5.40500020980835

Token 404: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9913223385810852
    2. 'from' → logprob: -1.2413222789764404
    3. 'dist' → logprob: -1.4913222789764404
    4. 'visited' → logprob: -2.4913222789764404
    5. 'import' → logprob: -3.9913222789764404
    6. '
' → logprob: -5.3663225173950195
    7. 'use' → logprob: -6.7413225173950195
    8. 'max' → logprob: -6.8663225173950195
    9. 'we' → logprob: -7.1163225173950195
    10. ' from' → logprob: -7.1163225173950195

Token 405: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.1768181324005127
    2. ' can' → logprob: -2.6768181324005127
    3. '#' → logprob: -2.8018181324005127
    4. 'only' → logprob: -4.176817893981934
    5. 'use' → logprob: -5.426817893981934
    6. ' only' → logprob: -6.051817893981934
    7. 'consider' → logprob: -6.176817893981934
    8. 'will' → logprob: -6.301817893981934
    9. 'need' → logprob: -6.676817893981934
    10. 'should' → logprob: -6.676817893981934

Token 406: ' limit' (ID: 5967)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.5278869867324829
    2. 'limit' → logprob: -2.2778868675231934
    3. '#' → logprob: -2.7778868675231934
    4. 'opt' → logprob: -2.9028868675231934
    5. 'consider' → logprob: -3.2778868675231934
    6. 'from' → logprob: -3.6528868675231934
    7. 'only' → logprob: -3.7778868675231934
    8. 'store' → logprob: -3.9028868675231934
    9. 'keep' → logprob: -4.027886867523193
    10. 'track' → logprob: -4.902886867523193

Token 407: ' search' (ID: 3684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0486373901367188
    2. 'visited' → logprob: -1.5486373901367188
    3. 'time' → logprob: -2.0486373901367188
    4. 'state' → logprob: -2.5486373901367188
    5. 't' → logprob: -2.7986373901367188
    6. ' the' → logprob: -3.1736373901367188
    7. 'states' → logprob: -3.4236373901367188
    8. 'search' → logprob: -3.7986373901367188
    9. 'steps' → logprob: -4.173637390136719
    10. 'max' → logprob: -4.298637390136719

Token 408: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.064313530921936
    2. 'visited' → logprob: -1.189313530921936
    3. 'import' → logprob: -1.439313530921936
    4. 'dist' → logprob: -3.0643134117126465
    5. 'to' → logprob: -4.4393134117126465
    6. 'distance' → logprob: -4.6893134117126465
    7. ')' → logprob: -4.8143134117126465
    8. 'queue' → logprob: -5.0643134117126465
    9. ' to' → logprob: -5.3143134117126465
    10. ',' → logprob: -5.6893134117126465

Token 409: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09636645019054413
    2. 'import' → logprob: -3.0963664054870605
    3. 'from' → logprob: -3.0963664054870605
    4. 'visited' → logprob: -6.7213664054870605
    5. 'INF' → logprob: -8.971366882324219
    6. 'def' → logprob: -10.596366882324219
    7. '#' → logprob: -10.721366882324219
    8. 'queue' → logprob: -11.221366882324219
    9. 'dp' → logprob: -11.846366882324219
    10. '
' → logprob: -12.221366882324219

Token 410: ' We' (ID: 1416)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16109095513820648
    2. 'from' → logprob: -2.411090850830078
    3. 'import' → logprob: -3.411090850830078
    4. 'visited' → logprob: -3.786090850830078
    5. 'INF' → logprob: -6.411090850830078
    6. 'def' → logprob: -7.411090850830078
    7. 'queue' → logprob: -7.536090850830078
    8. '#' → logprob: -8.286090850830078
    9. 'max' → logprob: -9.411090850830078
    10. 'dp' → logprob: -9.786090850830078

Token 411: ' can' (ID: 665)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4644087851047516
    2. 'import' → logprob: -1.7144087553024292
    3. 'dist' → logprob: -1.9644087553024292
    4. 'visited' → logprob: -3.0894088745117188
    5. 'def' → logprob: -7.089408874511719
    6. ' from' → logprob: -7.339408874511719
    7. 'dp' → logprob: -7.714408874511719
    8. 'use' → logprob: -7.714408874511719
    9. 'continue' → logprob: -7.964408874511719
    10. '
' → logprob: -7.964408874511719

Token 412: ' implement' (ID: 6365)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.24966587126255035
    2. 'from' → logprob: -2.2496659755706787
    3. 'dist' → logprob: -3.1246659755706787
    4. 'import' → logprob: -3.7496659755706787
    5. 'define' → logprob: -4.7496657371521
    6. ' use' → logprob: -4.7496657371521
    7. 'continue' → logprob: -4.7496657371521
    8. 'initialize' → logprob: -5.9996657371521
    9. 'implement' → logprob: -6.1246657371521
    10. 'limit' → logprob: -6.2496657371521

Token 413: ' BFS' (ID: 190016)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3686819076538086
    2. 'from' → logprob: -1.8686819076538086
    3. 'import' → logprob: -2.6186819076538086
    4. 'a' → logprob: -3.4936819076538086
    5. 'def' → logprob: -3.6186819076538086
    6. 'visited' → logprob: -3.8686819076538086
    7. ' dist' → logprob: -6.993681907653809
    8. ' a' → logprob: -7.368681907653809
    9. 'deque' → logprob: -7.868681907653809
    10. 'distance' → logprob: -8.743681907653809

Token 414: ' over' (ID: 1072)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5408201813697815
    2. 'queue' → logprob: -1.0408201217651367
    3. 'q' → logprob: -3.1658201217651367
    4. 'visited' → logprob: -4.665820121765137
    5. 'dist' → logprob: -5.665820121765137
    6. 'deque' → logprob: -6.040820121765137
    7. 'import' → logprob: -6.165820121765137
    8. 'def' → logprob: -6.665820121765137
    9. ' from' → logprob: -7.290820121765137
    10. ' queue' → logprob: -7.415820121765137

Token 415: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0232115983963013
    2. 'a' → logprob: -1.5232115983963013
    3. 'time' → logprob: -1.6482115983963013
    4. 'the' → logprob: -2.1482114791870117
    5. 'deque' → logprob: -3.5232114791870117
    6. 'queue' → logprob: -3.7732114791870117
    7. 'states' → logprob: -3.8982114791870117
    8. '(time' → logprob: -4.148211479187012
    9. '(t' → logprob: -5.023211479187012
    10. '(queue' → logprob: -5.648211479187012

Token 416: 't' (ID: 83)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0505479574203491
    2. 't' → logprob: -1.1755479574203491
    3. 'time' → logprob: -1.1755479574203491
    4. 'H' → logprob: -4.050548076629639
    5. ')' → logprob: -4.550548076629639
    6. '0' → logprob: -6.800548076629639
    7. ')t' → logprob: -6.925548076629639
    8. ' x' → logprob: -7.800548076629639
    9. ' t' → logprob: -7.925548076629639
    10. ' time' → logprob: -7.925548076629639

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07872497290372849
    2. ',x' → logprob: -2.7037248611450195
    3. '+' → logprob: -4.9537248611450195
    4. ' ,' → logprob: -7.8287248611450195
    5. ')' → logprob: -7.9537248611450195
    6. 'import' → logprob: -8.32872486114502
    7. 'x' → logprob: -8.32872486114502
    8. ' +' → logprob: -8.95372486114502
    9. '
' → logprob: -10.32872486114502
    10. ',q' → logprob: -10.45372486114502

Token 418: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00027813989436253905
    2. ' x' → logprob: -8.75027847290039
    3. 'i' → logprob: -9.12527847290039
    4. 'H' → logprob: -12.12527847290039
    5. ')' → logprob: -12.87527847290039
    6. 'y' → logprob: -14.25027847290039
    7. '   ' → logprob: -14.75027847290039
    8. ')x' → logprob: -14.75027847290039
    9. '
' → logprob: -15.75027847290039
    10. 'r' → logprob: -15.87527847290039

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014495177892968059
    2. ',y' → logprob: -6.7514495849609375
    3. '+' → logprob: -8.501449584960938
    4. ' ,' → logprob: -9.626449584960938
    5. ')' → logprob: -13.001449584960938
    6. ',
' → logprob: -13.376449584960938
    7. ' +' → logprob: -13.626449584960938
    8. '+,' → logprob: -13.876449584960938
    9. ',x' → logprob: -14.376449584960938
    10. '
' → logprob: -14.376449584960938

Token 420: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009114635176956654
    2. ' y' → logprob: -7.000911235809326
    3. ',y' → logprob: -18.375911712646484
    4. ')' → logprob: -18.875911712646484
    5. ',' → logprob: -19.000911712646484
    6. '	y' → logprob: -20.125911712646484
    7. ' ' → logprob: -20.500911712646484
    8. ')y' → logprob: -20.500911712646484
    9. '   ' → logprob: -20.750911712646484
    10. '  ' → logprob: -21.750911712646484

Token 421: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005395700572989881
    2. ',' → logprob: -7.875539779663086
    3. '):' → logprob: -9.375539779663086
    4. ' )' → logprob: -10.625539779663086
    5. '),' → logprob: -10.875539779663086
    6. ')
' → logprob: -11.000539779663086
    7. '):
' → logprob: -13.375539779663086
    8. ').' → logprob: -13.750539779663086
    9. ')
' → logprob: -13.750539779663086
    10. '))' → logprob: -14.125539779663086

Token 422: ' with' (ID: 483)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7017180919647217
    2. 'dist' → logprob: -1.2017180919647217
    3. 'visited' → logprob: -2.3267180919647217
    4. 'queue' → logprob: -2.8267180919647217
    5. '
' → logprob: -4.326718330383301
    6. 'q' → logprob: -4.576718330383301
    7. 'import' → logprob: -4.826718330383301
    8. ')' → logprob: -5.576718330383301
    9. 'def' → logprob: -5.826718330383301
    10. ',' → logprob: -6.451718330383301

Token 423: ' time' (ID: 1058)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.20734739303588867
    2. 'a' → logprob: -1.7073473930358887
    3. 'queue' → logprob: -6.082347393035889
    4. 'heap' → logprob: -6.332347393035889
    5. 'from' → logprob: -6.707347393035889
    6. ' a' → logprob: -8.332347869873047
    7. ' deque' → logprob: -8.457347869873047
    8. '```' → logprob: -9.707347869873047
    9. 'import' → logprob: -9.957347869873047
    10. 'priority' → logprob: -10.707347869873047

Token 424: ' increasing' (ID: 11293)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1417109966278076
    2. '=' → logprob: -1.3917109966278076
    3. 'import' → logprob: -2.1417109966278076
    4. ' =' → logprob: -2.2667109966278076
    5. '_queue' → logprob: -3.0167109966278076
    6. ')' → logprob: -3.3917109966278076
    7. ',' → logprob: -3.6417109966278076
    8. '_limit' → logprob: -4.266711235046387
    9. 'dist' → logprob: -4.266711235046387
    10. '
' → logprob: -4.391711235046387

Token 425: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7763002514839172
    2. 'dist' → logprob: -1.0263001918792725
    3. 'visited' → logprob: -2.2763001918792725
    4. 'queue' → logprob: -3.0263001918792725
    5. '
' → logprob: -4.651300430297852
    6. ')' → logprob: -5.151300430297852
    7. 'q' → logprob: -5.776300430297852
    8. 'import' → logprob: -5.776300430297852
    9. 'def' → logprob: -6.151300430297852
    10. ',' → logprob: -6.401300430297852

Token 426: ' 
' (ID: 793)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3465765118598938
    2. 'visited' → logprob: -1.846576452255249
    3. 'dist' → logprob: -2.096576452255249
    4. 'queue' → logprob: -5.096576690673828
    5. 'import' → logprob: -5.846576690673828
    6. 'deque' → logprob: -6.971576690673828
    7. 'q' → logprob: -7.471576690673828
    8. ' visited' → logprob: -7.846576690673828
    9. ' from' → logprob: -8.096576690673828
    10. '#' → logprob: -8.096576690673828

Token 427: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8961901068687439
    2. 'from' → logprob: -1.0211901664733887
    3. 'dist' → logprob: -2.1461901664733887
    4. '#' → logprob: -2.6461901664733887
    5. 'queue' → logprob: -3.6461901664733887
    6. 'import' → logprob: -4.896190166473389
    7. ')' → logprob: -5.771190166473389
    8. ' visited' → logprob: -6.646190166473389
    9. 'q' → logprob: -6.771190166473389
    10. 'deque' → logprob: -6.896190166473389

Token 428: ' but' (ID: 889)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.29541856050491333
    2. 'visited' → logprob: -1.7954185009002686
    3. '#' → logprob: -2.9204185009002686
    4. 'dist' → logprob: -4.295418739318848
    5. 'queue' → logprob: -4.545418739318848
    6. 'import' → logprob: -4.920418739318848
    7. 'q' → logprob: -6.920418739318848
    8. 'deque' → logprob: -7.045418739318848
    9. 'max' → logprob: -7.795418739318848
    10. 'que' → logprob: -7.795418739318848

Token 429: ' t' (ID: 260)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5540271997451782
    2. '#' → logprob: -2.1790270805358887
    3. 'import' → logprob: -2.3040270805358887
    4. 'queue' → logprob: -3.0540270805358887
    5. 'we' → logprob: -3.3040270805358887
    6. 'the' → logprob: -4.054027080535889
    7. 'dist' → logprob: -4.054027080535889
    8. '
' → logprob: -4.179027080535889
    9. 'since' → logprob: -4.554027080535889
    10. 't' → logprob: -5.304027080535889

Token 430: ' can' (ID: 665)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8843095898628235
    2. ' +=' → logprob: -1.1343095302581787
    3. ')' → logprob: -2.2593095302581787
    4. '+' → logprob: -2.5093095302581787
    5. '=' → logprob: -3.5093095302581787
    6. ' =' → logprob: -4.259309768676758
    7. 'import' → logprob: -5.009309768676758
    8. 'increment' → logprob: -5.134309768676758
    9. ',' → logprob: -6.259309768676758
    10. 'max' → logprob: -6.259309768676758

Token 431: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.9377822875976562
    2. '+=' → logprob: -1.0627822875976562
    3. '+' → logprob: -2.5627822875976562
    4. 'be' → logprob: -3.0627822875976562
    5. ' not' → logprob: -3.1877822875976562
    6. 'not' → logprob: -3.6877822875976562
    7. '=' → logprob: -4.187782287597656
    8. ' +=' → logprob: -4.437782287597656
    9. 'increase' → logprob: -4.687782287597656
    10. 'continue' → logprob: -4.937782287597656

Token 432: ' large' (ID: 4410)
  Prédit: 'very'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'very' → logprob: -0.8233019709587097
    2. '10' → logprob: -1.3233020305633545
    3. 'large' → logprob: -1.4483020305633545
    4. 'H' → logprob: -3.5733020305633545
    5. 'hu' → logprob: -4.198301792144775
    6. 'max' → logprob: -5.448301792144775
    7. 'up' → logprob: -5.823301792144775
    8. ' very' → logprob: -5.948301792144775
    9. 'too' → logprob: -6.323301792144775
    10. ' large' → logprob: -6.698301792144775

Token 433: '.' (ID: 13)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.38279199600219727
    2. 'dist' → logprob: -2.1327919960021973
    3. 'visited' → logprob: -2.7577919960021973
    4. 'import' → logprob: -3.2577919960021973
    5. ',' → logprob: -3.7577919960021973
    6. '#' → logprob: -3.8827919960021973
    7. ')' → logprob: -4.132791996002197
    8. '
' → logprob: -4.507791996002197
    9. ' from' → logprob: -5.132791996002197
    10. '.' → logprob: -5.757791996002197

Token 434: ' Since' (ID: 12265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8832221627235413
    2. 'visited' → logprob: -1.0082221031188965
    3. 'from' → logprob: -1.6332221031188965
    4. 'queue' → logprob: -4.8832221031188965
    5. 'import' → logprob: -5.0082221031188965
    6. '#' → logprob: -5.5082221031188965
    7. 'q' → logprob: -6.3832221031188965
    8. 'deque' → logprob: -6.3832221031188965
    9. 'dp' → logprob: -7.1332221031188965
    10. 'def' → logprob: -7.2582221031188965

Token 435: ' max' (ID: 2999)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6865997910499573
    2. 'grid' → logprob: -2.0615997314453125
    3. 'area' → logprob: -2.3115997314453125
    4. 'time' → logprob: -2.4365997314453125
    5. 'we' → logprob: -3.3115997314453125
    6. 'areas' → logprob: -3.5615997314453125
    7. 'each' → logprob: -3.8115997314453125
    8. 'changes' → logprob: -4.4365997314453125
    9. 't' → logprob: -4.5615997314453125
    10. 'waiting' → logprob: -4.8115997314453125

Token 436: ' T' (ID: 353)
  Prédit: '_T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.002093518851324916
    2. 'size' → logprob: -6.752093315124512
    3. 'time' → logprob: -7.877093315124512
    4. 'T' → logprob: -8.877093315124512
    5. 'times' → logprob: -8.877093315124512
    6. '```' → logprob: -9.502093315124512
    7. '_' → logprob: -10.127093315124512
    8. '_time' → logprob: -10.252093315124512
    9. ')' → logprob: -10.877093315124512
    10. '_TIME' → logprob: -11.127093315124512

Token 437: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.365800142288208
    2. ' is' → logprob: -2.365800142288208
    3. ')' → logprob: -2.490800142288208
    4. '
' → logprob: -3.615800142288208
    5. ' +' → logprob: -3.990800142288208
    6. 'is' → logprob: -4.490799903869629
    7. '=' → logprob: -4.490799903869629
    8. 's' → logprob: -4.990799903869629
    9. '++' → logprob: -5.365799903869629
    10. ']' → logprob: -5.615799903869629

Token 438: ' at' (ID: 540)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.3175168037414551
    2. 'max' → logprob: -1.692516803741455
    3. '10' → logprob: -2.567516803741455
    4. '100' → logprob: -5.192516803741455
    5. ' times' → logprob: -7.317516803741455
    6. 'limited' → logprob: -7.317516803741455
    7. 'at' → logprob: -7.567516803741455
    8. '
' → logprob: -7.567516803741455
    9. '0' → logprob: -7.692516803741455
    10. 'small' → logprob: -7.942516803741455

Token 439: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.418428897857666
    2. 'max' → logprob: -1.793428897857666
    3. 'imes' → logprob: -2.543428897857666
    4. 'times' → logprob: -2.543428897857666
    5. '0' → logprob: -5.668428897857666
    6. ' most' → logprob: -5.918428897857666
    7. '10' → logprob: -5.918428897857666
    8. 'areas' → logprob: -6.168428897857666
    9. 'ime' → logprob: -6.418428897857666
    10. 'least' → logprob: -6.668428897857666

Token 440: ' ' (ID: 220)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.505831241607666
    2. '10' → logprob: -1.255831241607666
    3. 'max' → logprob: -2.380831241607666
    4. ' times' → logprob: -4.755831241607666
    5. '100' → logprob: -5.130831241607666
    6. ' max' → logprob: -5.755831241607666
    7. ' ' → logprob: -7.380831241607666
    8. 'sum' → logprob: -7.505831241607666
    9. '```' → logprob: -8.630830764770508
    10. '
' → logprob: -9.130830764770508

Token 441: '200' (ID: 1179)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6402449011802673
    2. 'max' → logprob: -1.265244960784912
    3. 'times' → logprob: -1.890244960784912
    4. '100' → logprob: -3.265244960784912
    5. 'sum' → logprob: -8.015244483947754
    6. '1' → logprob: -8.140244483947754
    7. ' max' → logprob: -8.390244483947754
    8. ' times' → logprob: -9.015244483947754
    9. 'N' → logprob: -9.390244483947754
    10. ' ' → logprob: -9.765244483947754

Token 442: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.365101158618927
    2. '0' → logprob: -1.3651010990142822
    3. '000' → logprob: -3.7401010990142822
    4. '+' → logprob: -4.740101337432861
    5. '
' → logprob: -5.740101337432861
    6. ')' → logprob: -6.240101337432861
    7. 'import' → logprob: -6.615101337432861
    8. 'from' → logprob: -6.615101337432861
    9. '00' → logprob: -6.990101337432861
    10. 'def' → logprob: -7.240101337432861

Token 443: ' movement' (ID: 12772)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9806114435195923
    2. 'H' → logprob: -1.4806114435195923
    3. '100' → logprob: -2.1056113243103027
    4. 'max' → logprob: -2.2306113243103027
    5. '1' → logprob: -2.7306113243103027
    6. 'N' → logprob: -2.9806113243103027
    7. 'W' → logprob: -4.230611324310303
    8. '200' → logprob: -4.480611324310303
    9. 'len' → logprob: -5.105611324310303
    10. '2' → logprob: -5.355611324310303

Token 444: ' max' (ID: 2999)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.1587584018707275
    2. 'time' → logprob: -1.9087584018707275
    3. 's' → logprob: -2.0337584018707275
    4. 'steps' → logprob: -2.1587584018707275
    5. ',' → logprob: -2.1587584018707275
    6. 'limit' → logprob: -3.1587584018707275
    7. ' steps' → logprob: -3.7837584018707275
    8. 'times' → logprob: -4.158758163452148
    9. 'count' → logprob: -4.283758163452148
    10. ' cost' → logprob: -4.908758163452148

Token 445: '

' (ID: 279)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.335663080215454
    2. 'steps' → logprob: -2.085663080215454
    3. ',' → logprob: -2.210663080215454
    4. 'time' → logprob: -2.835663080215454
    5. 'cost' → logprob: -3.210663080215454
    6. '_steps' → logprob: -3.210663080215454
    7. ' steps' → logprob: -3.335663080215454
    8. 'distance' → logprob: -3.460663080215454
    9. 'dist' → logprob: -3.585663080215454
    10. 'moves' → logprob: -3.835663080215454

Token 446: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11188963800668716
    2. 'from' → logprob: -2.861889600753784
    3. 'visited' → logprob: -3.236889600753784
    4. 'queue' → logprob: -5.736889839172363
    5. 'import' → logprob: -5.986889839172363
    6. 'def' → logprob: -6.736889839172363
    7. 'deque' → logprob: -7.361889839172363
    8. 'q' → logprob: -7.861889839172363
    9. '#' → logprob: -7.861889839172363
    10. 'dp' → logprob: -8.486889839172363

Token 447: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.37016141414642334
    2. 'dist' → logprob: -1.3701614141464233
    3. 'import' → logprob: -2.995161533355713
    4. 'visited' → logprob: -5.620161533355713
    5. 'queue' → logprob: -7.495161533355713
    6. '#' → logprob: -7.620161533355713
    7. 'deque' → logprob: -8.995161056518555
    8. 'dp' → logprob: -9.245161056518555
    9. 'INF' → logprob: -9.245161056518555
    10. 'q' → logprob: -9.370161056518555

Token 448: ' limit' (ID: 5967)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7478647232055664
    2. '=' → logprob: -0.8728647232055664
    3. ' can' → logprob: -3.6228647232055664
    4. 'continue' → logprob: -3.9978647232055664
    5. '#' → logprob: -4.622864723205566
    6. ')' → logprob: -4.872864723205566
    7. 'can' → logprob: -4.872864723205566
    8. 'import' → logprob: -4.997864723205566
    9. ' continue' → logprob: -5.122864723205566
    10. 'max' → logprob: -5.497864723205566

Token 449: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18537583947181702
    2. 'the' → logprob: -2.810375928878784
    3. 't' → logprob: -2.935375928878784
    4. 'time' → logprob: -3.185375928878784
    5. ' max' → logprob: -5.560375690460205
    6. 'T' → logprob: -5.810375690460205
    7. ' the' → logprob: -6.560375690460205
    8. '_time' → logprob: -6.810375690460205
    9. '_max' → logprob: -6.810375690460205
    10. 'import' → logprob: -7.560375690460205

Token 450: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.16783420741558075
    2. '_T' → logprob: -2.6678342819213867
    3. '_t' → logprob: -2.9178342819213867
    4. 'time' → logprob: -4.167834281921387
    5. 'T' → logprob: -4.667834281921387
    6. 't' → logprob: -5.667834281921387
    7. '_step' → logprob: -6.667834281921387
    8. '_move' → logprob: -7.042834281921387
    9. '_steps' → logprob: -8.542834281921387
    10. 'step' → logprob: -9.542834281921387

Token 451: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1864235401153564
    2. '=' → logprob: -1.4364235401153564
    3. 'max' → logprob: -2.1864235401153564
    4. '_limit' → logprob: -2.1864235401153564
    5. '_max' → logprob: -2.4364235401153564
    6. '_MAX' → logprob: -3.0614235401153564
    7. 'MAX' → logprob: -3.0614235401153564
    8. '_time' → logprob: -4.186423301696777
    9. '_LIMIT' → logprob: -4.436423301696777
    10. 'limit' → logprob: -4.686423301696777

Token 452: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05177774652838707
    2. 'H' → logprob: -3.6767778396606445
    3. '200' → logprob: -4.8017778396606445
    4. ' max' → logprob: -4.9267778396606445
    5. '300' → logprob: -5.8017778396606445
    6. '10' → logprob: -6.1767778396606445
    7. '100' → logprob: -6.4267778396606445
    8. '500' → logprob: -6.8017778396606445
    9. '400' → logprob: -7.0517778396606445
    10. 'times' → logprob: -8.051777839660645

Token 453: ' allowed' (ID: 9279)
  Prédit: '_T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.03486020117998123
    2. '_time' → logprob: -3.534860134124756
    3. 'time' → logprob: -6.534860134124756
    4. 'T' → logprob: -6.534860134124756
    5. 'size' → logprob: -7.159860134124756
    6. 'max' → logprob: -8.034860610961914
    7. '_t' → logprob: -8.534860610961914
    8. '=max' → logprob: -9.284860610961914
    9. '_limit' → logprob: -9.409860610961914
    10. 'Time' → logprob: -9.534860610961914

Token 454: ':' (ID: 25)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.001859749318100512
    2. ' =' → logprob: -7.376859664916992
    3. 'time' → logprob: -7.751859664916992
    4. '_t' → logprob: -8.376859664916992
    5. '=' → logprob: -8.501859664916992
    6. '_T' → logprob: -9.126859664916992
    7. '_limit' → logprob: -9.876859664916992
    8. '_TIME' → logprob: -10.126859664916992
    9. 'Time' → logprob: -10.251859664916992
    10. 'T' → logprob: -10.501859664916992

Token 455: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02140468917787075
    2. 'MAX' → logprob: -4.14640474319458
    3. ' max' → logprob: -5.52140474319458
    4. 'limit' → logprob: -7.39640474319458
    5. '200' → logprob: -8.021404266357422
    6. '250' → logprob: -8.521404266357422
    7. ' MAX' → logprob: -10.396404266357422
    8. 'from' → logprob: -10.521404266357422
    9. '300' → logprob: -10.771404266357422
    10. '
' → logprob: -10.771404266357422

Token 456: ' times' (ID: 4238)
  Prédit: '_T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_T' → logprob: -0.026393309235572815
    2. '_time' → logprob: -3.776393413543701
    3. 'T' → logprob: -6.401393413543701
    4. 'time' → logprob: -7.401393413543701
    5. '_allowed' → logprob: -8.901392936706543
    6. '_limit' → logprob: -9.026392936706543
    7. 'max' → logprob: -9.276392936706543
    8. '_t' → logprob: -9.276392936706543
    9. '_move' → logprob: -10.026392936706543
    10. '_steps' → logprob: -10.026392936706543

Token 457: '[-' (ID: 17503)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.970485508441925
    2. 'max' → logprob: -1.9704854488372803
    3. '[-' → logprob: -1.9704854488372803
    4. '+' → logprob: -2.3454854488372803
    5. '[max' → logprob: -3.0954854488372803
    6. 'limit' → logprob: -3.2204854488372803
    7. '_max' → logprob: -3.3454854488372803
    8. ')' → logprob: -3.5954854488372803
    9. ']' → logprob: -3.7204854488372803
    10. '.append' → logprob: -3.9704854488372803

Token 458: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009860326535999775
    2. '1' → logprob: -4.634860515594482
    3. '3' → logprob: -9.509860038757324
    4. '-' → logprob: -10.509860038757324
    5. '4' → logprob: -14.384860038757324
    6. '5' → logprob: -14.822360038757324
    7. '0' → logprob: -15.134860038757324
    8. '
' → logprob: -15.509860038757324
    9. '   ' → logprob: -15.572360038757324
    10. '```' → logprob: -15.697360038757324

Token 459: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10444478690624237
    2. ']+' → logprob: -2.479444742202759
    3. ']-' → logprob: -5.604444980621338
    4. ']
' → logprob: -5.729444980621338
    5. '])' → logprob: -5.979444980621338
    6. '+' → logprob: -6.229444980621338
    7. '-' → logprob: -6.604444980621338
    8. ')' → logprob: -6.979444980621338
    9. ')]' → logprob: -7.854444980621338
    10. ' ]' → logprob: -7.979444980621338

Token 460: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.13063374161720276
    2. '(H' → logprob: -2.38063383102417
    3. '200' → logprob: -4.50563383102417
    4. '100' → logprob: -5.13063383102417
    5. ' H' → logprob: -5.88063383102417
    6. '(' → logprob: -5.88063383102417
    7. '2' → logprob: -6.50563383102417
    8. '500' → logprob: -6.50563383102417
    9. ' (' → logprob: -6.75563383102417
    10. 'max' → logprob: -7.38063383102417

Token 461: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03294844925403595
    2. ' +' → logprob: -3.5329484939575195
    3. '*' → logprob: -5.9079484939575195
    4. 'W' → logprob: -8.53294849395752
    5. '
' → logprob: -8.53294849395752
    6. ' *' → logprob: -11.03294849395752
    7. '```' → logprob: -11.15794849395752
    8. '   ' → logprob: -11.65794849395752
    9. '+
' → logprob: -11.78294849395752
    10. '

' → logprob: -12.40794849395752

Token 462: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00010902655776590109
    2. '+' → logprob: -9.87510871887207
    3. ' W' → logprob: -9.87510871887207
    4. '(W' → logprob: -13.37510871887207
    5. ' ' → logprob: -13.50010871887207
    6. 'max' → logprob: -13.87510871887207
    7. ' +' → logprob: -15.00010871887207
    8. '   ' → logprob: -15.00010871887207
    9. '*' → logprob: -15.12510871887207
    10. '  ' → logprob: -15.62510871887207

Token 463: '*' (ID: 9)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25120168924331665
    2. '+' → logprob: -2.126201629638672
    3. '
' → logprob: -3.126201629638672
    4. 'MAX' → logprob: -3.876201629638672
    5. '_max' → logprob: -4.626201629638672
    6. ')' → logprob: -5.126201629638672
    7. ' +' → logprob: -5.501201629638672
    8. '_MAX' → logprob: -5.876201629638672
    9. 'limit' → logprob: -6.126201629638672
    10. ' max' → logprob: -6.126201629638672

Token 464: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5315900444984436
    2. '10' → logprob: -1.5315899848937988
    3. 'max' → logprob: -2.906589984893799
    4. 'H' → logprob: -3.031589984893799
    5. '5' → logprob: -3.781589984893799
    6. '100' → logprob: -4.031589984893799
    7. '200' → logprob: -4.281589984893799
    8. '4' → logprob: -4.406589984893799
    9. 'W' → logprob: -4.531589984893799
    10. '3' → logprob: -5.156589984893799

Token 465: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06791175901889801
    2. 'MAX' → logprob: -3.3179118633270264
    3. '
' → logprob: -4.192911624908447
    4. '_max' → logprob: -5.192911624908447
    5. '+' → logprob: -5.817911624908447
    6. '_MAX' → logprob: -7.067911624908447
    7. 'limit' → logprob: -7.067911624908447
    8. ')' → logprob: -7.317911624908447
    9. ' max' → logprob: -7.317911624908447
    10. ',' → logprob: -7.442911624908447

Token 466: 'safe' (ID: 46891)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05961820110678673
    2. '+' → logprob: -2.9346182346343994
    3. ' +' → logprob: -6.18461799621582
    4. ')
' → logprob: -6.55961799621582
    5. ' )' → logprob: -7.43461799621582
    6. ')+' → logprob: -8.18461799621582
    7. '*' → logprob: -9.68461799621582
    8. '+)' → logprob: -9.80961799621582
    9. '))' → logprob: -10.18461799621582
    10. 'max' → logprob: -10.55961799621582

Token 467: ' upper' (ID: 13057)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2917497754096985
    2. ')' → logprob: -1.5417497158050537
    3. ')
' → logprob: -4.791749954223633
    4. ')+' → logprob: -4.916749954223633
    5. ' +' → logprob: -5.041749954223633
    6. '_T' → logprob: -5.166749954223633
    7. '
' → logprob: -5.791749954223633
    8. '_' → logprob: -6.916749954223633
    9. ' )' → logprob: -7.291749954223633
    10. 'times' → logprob: -7.291749954223633

Token 468: ' bound' (ID: 11608)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.40382540225982666
    2. 'bound' → logprob: -1.4038254022598267
    3. 'limit' → logprob: -3.028825283050537
    4. '_limit' → logprob: -3.403825283050537
    5. ' bound' → logprob: -5.653825283050537
    6. ' limit' → logprob: -7.903825283050537
    7. ')' → logprob: -8.153825759887695
    8. '_' → logprob: -8.778825759887695
    9. '_b' → logprob: -8.903825759887695
    10. '_bounds' → logprob: -9.153825759887695

Token 469: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04358116164803505
    2. ')
' → logprob: -3.668581247329712
    3. 'max' → logprob: -4.793581008911133
    4. '+' → logprob: -5.543581008911133
    5. ')

' → logprob: -6.918581008911133
    6. '
' → logprob: -7.168581008911133
    7. ' )' → logprob: -7.293581008911133
    8. ')
' → logprob: -7.418581008911133
    9. ' +' → logprob: -8.293581008911133
    10. '#' → logprob: -8.418581008911133

Token 470: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.26128914952278137
    2. 'from' → logprob: -1.886289119720459
    3. 'dist' → logprob: -2.761289119720459
    4. 'limit' → logprob: -4.761289119720459
    5. 'visited' → logprob: -6.136289119720459
    6. 'MAX' → logprob: -6.261289119720459
    7. 'import' → logprob: -7.386289119720459
    8. 'INF' → logprob: -7.511289119720459
    9. 'queue' → logprob: -8.386289596557617
    10. 'dp' → logprob: -8.386289596557617

Token 471: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.02341807633638382
    2. '_T' → logprob: -3.7734181880950928
    3. '_t' → logprob: -9.523418426513672
    4. 'time' → logprob: -9.898418426513672
    5. '_allowed' → logprob: -10.898418426513672
    6. '_Time' → logprob: -11.648418426513672
    7. 'T' → logprob: -11.773418426513672
    8. '_TIME' → logprob: -12.398418426513672
    9. 'Time' → logprob: -12.648418426513672
    10. '_times' → logprob: -13.023418426513672

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. '＝' → logprob: -15.95141315460205
    4. '_=' → logprob: -16.951414108276367
    5. '=max' → logprob: -17.076414108276367
    6. ')' → logprob: -17.451414108276367
    7. '_' → logprob: -17.576414108276367
    8. ',' → logprob: -18.076414108276367
    9. ' ' → logprob: -18.326414108276367
    10. '=

' → logprob: -18.451414108276367

Token 473: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.00038682064041495323
    2. ' times' → logprob: -7.875386714935303
    3. 'max' → logprob: -12.125387191772461
    4. '(times' → logprob: -13.875387191772461
    5. '10' → logprob: -15.250387191772461
    6. '   ' → logprob: -16.25038719177246
    7. 'time' → logprob: -17.87538719177246
    8. ' max' → logprob: -18.12538719177246
    9. ' ' → logprob: -18.62538719177246
    10. '.times' → logprob: -19.00038719177246

Token 474: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.729906196298543e-06
    2. '
' → logprob: -12.500009536743164
    3. '-' → logprob: -13.000009536743164
    4. '```' → logprob: -13.625009536743164
    5. '[' → logprob: -13.750009536743164
    6. '[len' → logprob: -15.000009536743164
    7. ' [-' → logprob: -15.500009536743164
    8. 'len' → logprob: -15.500009536743164
    9. '`' → logprob: -16.000009536743164
    10. 'index' → logprob: -16.125009536743164

Token 475: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0564331205387134e-05
    2. '3' → logprob: -12.12501049041748
    3. '1' → logprob: -12.50001049041748
    4. '-' → logprob: -15.25001049041748
    5. ' ' → logprob: -15.68751049041748
    6. '
' → logprob: -15.93751049041748
    7. '   ' → logprob: -16.250011444091797
    8. '```' → logprob: -16.437511444091797
    9. '(' → logprob: -16.812511444091797
    10. '

' → logprob: -16.875011444091797

Token 476: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6875097751617432
    2. ']' → logprob: -1.6875097751617432
    3. ']+' → logprob: -1.6875097751617432
    4. ' +' → logprob: -2.062509775161743
    5. ' ]' → logprob: -10.062509536743164
    6. '+]' → logprob: -10.687509536743164
    7. ')+' → logprob: -12.187509536743164
    8. '}+' → logprob: -13.062509536743164
    9. ')' → logprob: -13.187509536743164
    10. ']+=' → logprob: -14.312509536743164

Token 477: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22547970712184906
    2. ' +' → logprob: -1.6004797220230103
    3. '+
' → logprob: -10.350480079650879
    4. '
' → logprob: -11.350480079650879
    5. '+B' → logprob: -12.350480079650879
    6. '#' → logprob: -12.725480079650879
    7. '+D' → logprob: -12.975480079650879
    8. 'import' → logprob: -13.475480079650879
    9. '*' → logprob: -13.600480079650879
    10. ' +
' → logprob: -13.975480079650879

Token 478: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0002112886286340654
    2. ' H' → logprob: -9.000211715698242
    3. '2' → logprob: -9.375211715698242
    4. '(H' → logprob: -13.125211715698242
    5. ' ' → logprob: -14.250211715698242
    6. '   ' → logprob: -15.125211715698242
    7. '	H' → logprob: -16.625211715698242
    8. '200' → logprob: -17.375211715698242
    9. '10' → logprob: -17.500211715698242
    10. '  ' → logprob: -17.500211715698242

Token 479: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00014454191841650754
    2. ' *' → logprob: -8.875144958496094
    3. '**' → logprob: -13.500144958496094
    4. '*w' → logprob: -14.375144958496094
    5. '```' → logprob: -14.500144958496094
    6. '*(' → logprob: -14.750144958496094
    7. '   ' → logprob: -15.000144958496094
    8. 'W' → logprob: -15.625144958496094
    9. ''*' → logprob: -15.750144958496094
    10. ' ' → logprob: -15.750144958496094

Token 480: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00022392053506337106
    2. '2' → logprob: -8.750224113464355
    3. ' W' → logprob: -9.750224113464355
    4. '*' → logprob: -12.250224113464355
    5. ' ' → logprob: -13.875224113464355
    6. '(' → logprob: -14.625224113464355
    7. '   ' → logprob: -15.125224113464355
    8. '1' → logprob: -16.00022315979004
    9. '	W' → logprob: -16.12522315979004
    10. '  ' → logprob: -16.37522315979004

Token 481: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0005576779949478805
    2. '2' → logprob: -7.500557899475098
    3. ' *' → logprob: -13.250557899475098
    4. '**' → logprob: -13.875557899475098
    5. '```' → logprob: -14.250557899475098
    6. '
' → logprob: -14.375557899475098
    7. '   ' → logprob: -14.500557899475098
    8. ''*' → logprob: -16.50055694580078
    9. '"*' → logprob: -16.62555694580078
    10. ' ' → logprob: -17.12555694580078

Token 482: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1689596148207784e-05
    2. '3' → logprob: -11.250051498413086
    3. '20' → logprob: -11.250051498413086
    4. ' ' → logprob: -11.625051498413086
    5. '4' → logprob: -12.125051498413086
    6. '200' → logprob: -12.375051498413086
    7. '*' → logprob: -12.750051498413086
    8. '10' → logprob: -13.125051498413086
    9. '   ' → logprob: -14.625051498413086
    10. '5' → logprob: -14.750051498413086

Token 483: '

' (ID: 279)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20404362678527832
    2. 'visited' → logprob: -2.2040436267852783
    3. 'from' → logprob: -3.2040436267852783
    4. '
' → logprob: -3.4540436267852783
    5. 'queue' → logprob: -7.454043388366699
    6. 'dp' → logprob: -7.954043388366699
    7. 'deque' → logprob: -8.2040433883667
    8. 'import' → logprob: -8.2040433883667
    9. 'distance' → logprob: -8.9540433883667
    10. 'seen' → logprob: -9.5790433883667

Token 484: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4773974120616913
    2. 'dist' → logprob: -0.9773974418640137
    3. 'visited' → logprob: -5.977397441864014
    4. 'import' → logprob: -7.477397441864014
    5. 'deque' → logprob: -9.352396965026855
    6. 'queue' → logprob: -9.352396965026855
    7. 'q' → logprob: -11.477396965026855
    8. 'dp' → logprob: -11.727396965026855
    9. '
' → logprob: -12.477396965026855
    10. '```' → logprob: -12.477396965026855

Token 485: ' visited' (ID: 18416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.25662311911582947
    2. 'dist' → logprob: -1.5066231489181519
    3. 'import' → logprob: -5.756623268127441
    4. 'visited' → logprob: -6.506623268127441
    5. 'deque' → logprob: -11.756623268127441
    6. '#' → logprob: -12.006623268127441
    7. 'queue' → logprob: -12.381623268127441
    8. 'INF' → logprob: -13.006623268127441
    9. 'dp' → logprob: -13.256623268127441
    10. 'start' → logprob: -13.256623268127441

Token 486: '[(' (ID: 20542)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11285361647605896
    2. ' =' → logprob: -2.237853527069092
    3. '=set' → logprob: -10.48785400390625
    4. '```' → logprob: -14.36285400390625
    5. '=[' → logprob: -14.73785400390625
    6. 'set' → logprob: -14.86285400390625
    7. '=[[' → logprob: -15.11285400390625
    8. 'visited' → logprob: -15.36285400390625
    9. '[' → logprob: -15.36285400390625
    10. '={}' → logprob: -15.61285400390625

Token 487: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.590339183807373
    2. 't' → logprob: -1.090339183807373
    3. ')' → logprob: -3.215339183807373
    4. '0' → logprob: -3.465339183807373
    5. 'time' → logprob: -4.215339183807373
    6. ')]' → logprob: -5.340339183807373
    7. '_t' → logprob: -5.465339183807373
    8. '(x' → logprob: -6.090339183807373
    9. ' (' → logprob: -6.465339183807373
    10. '(' → logprob: -6.590339183807373

Token 488: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03816301375627518
    2. ',y' → logprob: -3.28816294670105
    3. ' ,' → logprob: -9.413163185119629
    4. ',Y' → logprob: -11.288163185119629
    5. ',
' → logprob: -11.663163185119629
    6. ',x' → logprob: -11.788163185119629
    7. '),(' → logprob: -13.538163185119629
    8. 'y' → logprob: -13.663163185119629
    9. '
' → logprob: -13.788163185119629
    10. ')][' → logprob: -14.288163185119629

Token 489: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1656947284936905
    2. ')]' → logprob: -1.9156947135925293
    3. ',x' → logprob: -5.915694713592529
    4. ')][' → logprob: -6.665694713592529
    5. ',t' → logprob: -8.165695190429688
    6. ' ,' → logprob: -8.540695190429688
    7. ']' → logprob: -8.540695190429688
    8. ',
' → logprob: -8.790695190429688
    9. ',y' → logprob: -8.915695190429688
    10. ')' → logprob: -8.915695190429688

Token 490: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03892509639263153
    2. ',' → logprob: -3.2889251708984375
    3. ']' → logprob: -7.9139251708984375
    4. ')' → logprob: -8.913925170898438
    5. ' )' → logprob: -9.413925170898438
    6. ')][' → logprob: -9.663925170898438
    7. '])' → logprob: -9.788925170898438
    8. ',x' → logprob: -10.038925170898438
    9. '])]' → logprob: -10.538925170898438
    10. ' ,' → logprob: -10.538925170898438

Token 491: ' but' (ID: 889)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3491802513599396
    2. ' =' → logprob: -1.2241802215576172
    3. 'visited' → logprob: -7.474180221557617
    4. ']' → logprob: -9.474180221557617
    5. ')' → logprob: -9.849180221557617
    6. ',' → logprob: -11.599180221557617
    7. ']=' → logprob: -12.474180221557617
    8. '}' → logprob: -12.974180221557617
    9. '_' → logprob: -13.099180221557617
    10. '
' → logprob: -13.099180221557617

Token 492: ' t' (ID: 260)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.021068228408694267
    2. '#' → logprob: -4.896068096160889
    3. ' visited' → logprob: -6.271068096160889
    4. '=' → logprob: -6.271068096160889
    5. '(x' → logprob: -6.396068096160889
    6. 'False' → logprob: -6.521068096160889
    7. 'x' → logprob: -7.146068096160889
    8. '{}' → logprob: -7.396068096160889
    9. '[(' → logprob: -7.521068096160889
    10. ' (' → logprob: -7.646068096160889

Token 493: ' huge' (ID: 9560)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40310758352279663
    2. ',' → logprob: -1.9031076431274414
    3. 'visited' → logprob: -2.9031076431274414
    4. ' =' → logprob: -3.0281076431274414
    5. ')' → logprob: -3.7781076431274414
    6. 'is' → logprob: -4.153107643127441
    7. ']' → logprob: -4.778107643127441
    8. 'will' → logprob: -5.653107643127441
    9. 'should' → logprob: -5.778107643127441
    10. '[(' → logprob: -6.028107643127441

Token 494: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21467861533164978
    2. ' =' → logprob: -1.7146786451339722
    3. 'visited' → logprob: -4.464678764343262
    4. '_' → logprob: -7.464678764343262
    5. ')' → logprob: -7.964678764343262
    6. ',' → logprob: -8.089678764343262
    7. ']' → logprob: -8.839678764343262
    8. '=
' → logprob: -9.839678764343262
    9. '
' → logprob: -10.089678764343262
    10. 'from' → logprob: -10.964678764343262

Token 495: ' we' (ID: 581)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03182819113135338
    2. '#' → logprob: -4.1568284034729
    3. ' visited' → logprob: -4.9068284034729
    4. 'from' → logprob: -6.1568284034729
    5. '(x' → logprob: -6.7818284034729
    6. 'import' → logprob: -7.2818284034729
    7. ' =' → logprob: -7.2818284034729
    8. '=' → logprob: -7.7818284034729
    9. 'x' → logprob: -7.7818284034729
    10. '(' → logprob: -8.031827926635742

Token 496: ' store' (ID: 4897)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.2412447929382324
    2. 'will' → logprob: -1.2412447929382324
    3. ' can' → logprob: -1.9912447929382324
    4. ''ll' → logprob: -2.3662447929382324
    5. ' will' → logprob: -2.6162447929382324
    6. 'visited' → logprob: -3.2412447929382324
    7. '#' → logprob: -3.8662447929382324
    8. 'cannot' → logprob: -4.116244792938232
    9. '=' → logprob: -4.866244792938232
    10. ']' → logprob: -4.991244792938232

Token 497: ' minimal' (ID: 19957)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.002846602350473404
    2. ' visited' → logprob: -6.252846717834473
    3. 'only' → logprob: -7.752846717834473
    4. '[(' → logprob: -8.627846717834473
    5. '=' → logprob: -9.502846717834473
    6. ' =' → logprob: -10.127846717834473
    7. 'as' → logprob: -10.252846717834473
    8. ' only' → logprob: -10.627846717834473
    9. 'a' → logprob: -10.627846717834473
    10. 'dist' → logprob: -10.752846717834473

Token 498: ' walking' (ID: 15015)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2781964838504791
    2. 'dist' → logprob: -1.6531964540481567
    3. 'time' → logprob: -3.7781965732574463
    4. ' visited' → logprob: -4.403196334838867
    5. 'distance' → logprob: -5.528196334838867
    6. 't' → logprob: -5.778196334838867
    7. 'steps' → logprob: -5.778196334838867
    8. 'times' → logprob: -6.278196334838867
    9. 'import' → logprob: -6.528196334838867
    10. 'from' → logprob: -7.903196334838867

Token 499: ' steps' (ID: 10331)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.261897325515747
    2. 'dist' → logprob: -1.261897325515747
    3. 'steps' → logprob: -1.636897325515747
    4. '_time' → logprob: -2.886897325515747
    5. 'cost' → logprob: -3.011897325515747
    6. 'distance' → logprob: -3.761897325515747
    7. 'times' → logprob: -3.761897325515747
    8. 'visited' → logprob: -3.886897325515747
    9. '=' → logprob: -4.011897087097168
    10. '_steps' → logprob: -4.136897087097168

Token 500: ' to' (ID: 316)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4218559265136719
    2. '=' → logprob: -1.6718559265136719
    3. ' =' → logprob: -1.9218559265136719
    4. 'dist' → logprob: -6.421855926513672
    5. ']' → logprob: -6.671855926513672
    6. '_' → logprob: -6.921855926513672
    7. ',' → logprob: -7.046855926513672
    8. ' visited' → logprob: -7.171855926513672
    9. '
' → logprob: -7.171855926513672
    10. ')' → logprob: -7.296855926513672

Token 501: ' reach' (ID: 7627)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07000356912612915
    2. '(x' → logprob: -3.1950035095214844
    3. 'x' → logprob: -4.320003509521484
    4. 'reach' → logprob: -5.445003509521484
    5. 'visit' → logprob: -5.695003509521484
    6. '(' → logprob: -6.445003509521484
    7. '[x' → logprob: -7.445003509521484
    8. '
' → logprob: -7.445003509521484
    9. 'go' → logprob: -7.820003509521484
    10. '#' → logprob: -7.945003509521484

Token 502: ' (' (ID: 350)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2949713468551636
    2. ' =' → logprob: -1.9199713468551636
    3. ']' → logprob: -3.794971466064453
    4. '=' → logprob: -4.169971466064453
    5. 'steps' → logprob: -4.294971466064453
    6. 'dist' → logprob: -5.044971466064453
    7. '
' → logprob: -5.294971466064453
    8. 'time' → logprob: -5.419971466064453
    9. '_time' → logprob: -5.419971466064453
    10. '{}' → logprob: -5.419971466064453

Token 503: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015327775850892067
    2. '(x' → logprob: -4.7653279304504395
    3. ')' → logprob: -6.1403279304504395
    4. ' x' → logprob: -6.6403279304504395
    5. ',' → logprob: -6.7653279304504395
    6. ' (' → logprob: -6.7653279304504395
    7. ',x' → logprob: -7.6403279304504395
    8. '),' → logprob: -9.265327453613281
    9. ')x' → logprob: -9.515327453613281
    10. '
' → logprob: -9.515327453613281

Token 504: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.3142547011375427
    2. ',' → logprob: -1.3142547607421875
    3. 'y' → logprob: -7.3142547607421875
    4. ')' → logprob: -8.814254760742188
    5. ',
' → logprob: -10.064254760742188
    6. ' ,' → logprob: -10.189254760742188
    7. ',Y' → logprob: -10.814254760742188
    8. '),(' → logprob: -11.689254760742188
    9. ',x' → logprob: -11.814254760742188
    10. '
' → logprob: -11.939254760742188

Token 505: ')' (ID: 8)
  Prédit: ',t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.507023811340332
    2. ',' → logprob: -1.007023811340332
    3. ')' → logprob: -3.882023811340332
    4. ')]' → logprob: -5.007023811340332
    5. 't' → logprob: -6.757023811340332
    6. ',time' → logprob: -6.882023811340332
    7. ')][' → logprob: -7.507023811340332
    8. 'at' → logprob: -8.507023811340332
    9. ',state' → logprob: -8.507023811340332
    10. ')t' → logprob: -8.632023811340332

Token 506: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.16913902759552
    2. 'visited' → logprob: -1.16913902759552
    3. '=' → logprob: -1.66913902759552
    4. ',' → logprob: -2.7941389083862305
    5. '_' → logprob: -2.9191389083862305
    6. ')' → logprob: -3.2941389083862305
    7. ']' → logprob: -4.1691389083862305
    8. '_steps' → logprob: -5.2941389083862305
    9. 'steps' → logprob: -6.4191389083862305
    10. ']=' → logprob: -6.5441389083862305

Token 507: ' time' (ID: 1058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.383836567401886
    2. 'each' → logprob: -2.258836507797241
    3. 'time' → logprob: -2.508836507797241
    4. 'a' → logprob: -3.633836507797241
    5. ' t' → logprob: -3.883836507797241
    6. ' (' → logprob: -4.38383674621582
    7. 'visited' → logprob: -4.63383674621582
    8. 'different' → logprob: -4.75883674621582
    9. 'x' → logprob: -4.88383674621582
    10. '(x' → logprob: -5.00883674621582

Token 508: ' t' (ID: 260)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0846081972122192
    2. 'visited' → logprob: -1.4596081972122192
    3. ')' → logprob: -1.7096081972122192
    4. '=' → logprob: -3.2096080780029297
    5. ']' → logprob: -3.4596080780029297
    6. 't' → logprob: -3.5846080780029297
    7. '_' → logprob: -3.7096080780029297
    8. ' =' → logprob: -4.33460807800293
    9. '
' → logprob: -4.70960807800293
    10. '(' → logprob: -4.70960807800293

Token 509: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.04867229983210564
    2. ' =' → logprob: -3.7986721992492676
    3. '=' → logprob: -4.173672199249268
    4. ']' → logprob: -5.423672199249268
    5. ')' → logprob: -6.173672199249268
    6. ',' → logprob: -6.923672199249268
    7. ' visited' → logprob: -7.173672199249268
    8. '_' → logprob: -7.923672199249268
    9. 'dist' → logprob: -8.548672676086426
    10. 'import' → logprob: -9.048672676086426

Token 510: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0010980613296851516
    2. 'from' → logprob: -7.001098155975342
    3. 'import' → logprob: -9.251097679138184
    4. 'dist' → logprob: -9.626097679138184
    5. ' visited' → logprob: -11.626097679138184
    6. '```' → logprob: -12.001097679138184
    7. ')' → logprob: -12.626097679138184
    8. '#' → logprob: -13.001097679138184
    9. '
' → logprob: -13.876097679138184
    10. ']' → logprob: -14.751097679138184

Token 511: ' Since' (ID: 12265)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.006455655209720135
    2. 'from' → logprob: -5.256455421447754
    3. 'import' → logprob: -6.881455421447754
    4. 'dist' → logprob: -8.631455421447754
    5. ' visited' → logprob: -11.506455421447754
    6. 'dp' → logprob: -12.881455421447754
    7. '```' → logprob: -13.881455421447754
    8. '#' → logprob: -14.006455421447754
    9. 'seen' → logprob: -14.631455421447754
    10. 'deque' → logprob: -15.506455421447754

Token 512: ' state' (ID: 2608)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8623936176300049
    2. 't' → logprob: -1.4873936176300049
    3. 'the' → logprob: -2.737393617630005
    4. 'W' → logprob: -2.862393617630005
    5. 'time' → logprob: -3.112393617630005
    6. 'max' → logprob: -3.112393617630005
    7. 'H' → logprob: -3.362393617630005
    8. 'we' → logprob: -3.487393617630005
    9. 'x' → logprob: -3.862393617630005
    10. 'areas' → logprob: -4.862393379211426

Token 513: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.6860309839248657
    2. ' =' → logprob: -1.8110309839248657
    3. ')' → logprob: -2.061030864715576
    4. '=' → logprob: -2.311030864715576
    5. ' is' → logprob: -2.686030864715576
    6. '_space' → logprob: -2.936030864715576
    7. ',' → logprob: -3.061030864715576
    8. ' space' → logprob: -3.061030864715576
    9. 'visited' → logprob: -3.061030864715576
    10. 's' → logprob: -3.186030864715576

Token 514: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.654767632484436
    2. ' =' → logprob: -1.529767632484436
    3. 'visited' → logprob: -2.6547675132751465
    4. ')' → logprob: -3.0297675132751465
    5. 'is' → logprob: -3.1547675132751465
    6. 'size' → logprob: -3.4047675132751465
    7. ' is' → logprob: -3.6547675132751465
    8. ':' → logprob: -4.6547675132751465
    9. '=(' → logprob: -5.1547675132751465
    10. '_size' → logprob: -5.2797675132751465

Token 515: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.3260728716850281
    2. ' be' → logprob: -1.8260729312896729
    3. 'explode' → logprob: -2.951072931289673
    4. 'expand' → logprob: -3.701072931289673
    5. ' become' → logprob: -4.451072692871094
    6. 'expl' → logprob: -5.326072692871094
    7. ' explode' → logprob: -5.451072692871094
    8. '(x' → logprob: -5.701072692871094
    9. 'grow' → logprob: -5.826072692871094
    10. 'x' → logprob: -6.201072692871094

Token 516: ' large' (ID: 4410)
  Prédit: 'hu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hu' → logprob: -0.74826979637146
    2. 'large' → logprob: -0.99826979637146
    3. 'too' → logprob: -1.87326979637146
    4. 'very' → logprob: -6.123270034790039
    5. 'big' → logprob: -7.248270034790039
    6. '
' → logprob: -7.498270034790039
    7. ' huge' → logprob: -7.623270034790039
    8. 'H' → logprob: -8.123270034790039
    9. ' large' → logprob: -9.498270034790039
    10. 'vast' → logprob: -9.748270034790039

Token 517: ',' (ID: 11)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00687119085341692
    2. 'import' → logprob: -6.131871223449707
    3. 'from' → logprob: -6.631871223449707
    4. '
' → logprob: -6.756871223449707
    5. ',' → logprob: -6.881871223449707
    6. ' visited' → logprob: -8.131871223449707
    7. ')' → logprob: -8.381871223449707
    8. '#' → logprob: -8.506871223449707
    9. 'dist' → logprob: -8.631871223449707
    10. ',
' → logprob: -8.631871223449707

Token 518: ' we' (ID: 581)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.032762158662080765
    2. 'from' → logprob: -4.032762050628662
    3. '#' → logprob: -4.907762050628662
    4. 'dist' → logprob: -5.657762050628662
    5. 'import' → logprob: -5.782762050628662
    6. ' visited' → logprob: -8.15776252746582
    7. 'print' → logprob: -9.15776252746582
    8. '
' → logprob: -10.15776252746582
    9. 'dp' → logprob: -10.65776252746582
    10. 'distance' → logprob: -10.78276252746582

Token 519: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.21733538806438446
    2. 'will' → logprob: -3.3423354625701904
    3. 'can' → logprob: -3.3423354625701904
    4. 'store' → logprob: -3.5923354625701904
    5. 'import' → logprob: -3.7173354625701904
    6. 'implement' → logprob: -3.8423354625701904
    7. 'limit' → logprob: -4.342335224151611
    8. '#' → logprob: -4.967335224151611
    9. 'continue' → logprob: -4.967335224151611
    10. 'from' → logprob: -5.592335224151611

Token 520: ' a' (ID: 261)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7003512382507324
    2. 'deque' → logprob: -0.9503512382507324
    3. 'dist' → logprob: -3.2003512382507324
    4. '{}' → logprob: -3.5753512382507324
    5. 'dict' → logprob: -3.7003512382507324
    6. 'set' → logprob: -3.9503512382507324
    7. 'from' → logprob: -6.575351238250732
    8. '{' → logprob: -6.950351238250732
    9. 'a' → logprob: -7.450351238250732
    10. 'collections' → logprob: -7.575351238250732

Token 521: ' dict' (ID: 11878)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.03667305409908295
    2. 'dict' → logprob: -3.536673069000244
    3. 'set' → logprob: -6.161673069000244
    4. 'dictionary' → logprob: -6.411673069000244
    5. 'visited' → logprob: -6.661673069000244
    6. 'queue' → logprob: -7.536673069000244
    7. 'list' → logprob: -7.911673069000244
    8. '3' → logprob: -8.036672592163086
    9. 'from' → logprob: -8.161672592163086
    10. ' deque' → logprob: -8.911672592163086

Token 522: ' keyed' (ID: 199197)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0004255508247297257
    2. 'from' → logprob: -8.750425338745117
    3. 'dist' → logprob: -9.000425338745117
    4. 'import' → logprob: -9.750425338745117
    5. '
' → logprob: -9.875425338745117
    6. ' visited' → logprob: -10.500425338745117
    7. ')' → logprob: -13.500425338745117
    8. ',' → logprob: -13.625425338745117
    9. ' =' → logprob: -14.625425338745117
    10. '=' → logprob: -14.625425338745117

Token 523: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.14464208483695984
    2. ' by' → logprob: -2.2696421146392822
    3. '(' → logprob: -5.019641876220703
    4. '(x' → logprob: -5.144641876220703
    5. 'from' → logprob: -6.019641876220703
    6. '((' → logprob: -6.144641876220703
    7. '[(' → logprob: -6.519641876220703
    8. ')' → logprob: -6.644641876220703
    9. 'with' → logprob: -6.644641876220703
    10. '#' → logprob: -7.019641876220703

Token 524: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0013677385868504643
    2. ' (' → logprob: -6.751367568969727
    3. '(' → logprob: -8.751367568969727
    4. '(t' → logprob: -10.751367568969727
    5. 'x' → logprob: -11.626367568969727
    6. '(lambda' → logprob: -12.376367568969727
    7. 'tuple' → logprob: -13.251367568969727
    8. '
' → logprob: -14.626367568969727
    9. '   ' → logprob: -14.751367568969727
    10. '(y' → logprob: -15.126367568969727

Token 525: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005268189124763012
    2. '(x' → logprob: -8.500526428222656
    3. ')' → logprob: -8.625526428222656
    4. ' x' → logprob: -9.750526428222656
    5. 't' → logprob: -10.125526428222656
    6. ')x' → logprob: -11.500526428222656
    7. '
' → logprob: -11.625526428222656
    8. '0' → logprob: -11.875526428222656
    9. 'time' → logprob: -12.625526428222656
    10. 'y' → logprob: -12.875526428222656

Token 526: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.02649989165365696
    2. ',' → logprob: -3.6514999866485596
    3. 'y' → logprob: -9.15149974822998
    4. ',t' → logprob: -9.77649974822998
    5. ',x' → logprob: -11.02649974822998
    6. '_,' → logprob: -11.90149974822998
    7. ' ,' → logprob: -13.02649974822998
    8. ',Y' → logprob: -13.40149974822998
    9. 'x' → logprob: -13.65149974822998
    10. 't' → logprob: -13.77649974822998

Token 527: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.24492888152599335
    2. ',' → logprob: -1.6199288368225098
    3. ')' → logprob: -4.24492883682251
    4. ',time' → logprob: -5.86992883682251
    5. 't' → logprob: -6.86992883682251
    6. '),' → logprob: -7.99492883682251
    7. ')t' → logprob: -8.244929313659668
    8. 'time' → logprob: -9.619929313659668
    9. ',int' → logprob: -9.994929313659668
    10. ',)' → logprob: -10.119929313659668

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008959780680015683
    2. ',' → logprob: -7.625895977020264
    3. '),' → logprob: -9.000896453857422
    4. ')
' → logprob: -9.375896453857422
    5. '))' → logprob: -10.125896453857422
    6. ')=' → logprob: -10.375896453857422
    7. ' )' → logprob: -10.375896453857422
    8. ').' → logprob: -10.750896453857422
    9. ',)' → logprob: -11.250896453857422
    10. ')]' → logprob: -11.375896453857422

Token 529: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.025497380644083023
    2. 'from' → logprob: -4.0254974365234375
    3. 'dist' → logprob: -5.0254974365234375
    4. 'import' → logprob: -7.2754974365234375
    5. 'dp' → logprob: -11.150497436523438
    6. ' visited' → logprob: -11.150497436523438
    7. 'queue' → logprob: -11.650497436523438
    8. 'distance' → logprob: -12.650497436523438
    9. 'deque' → logprob: -12.650497436523438
    10. '```' → logprob: -13.025497436523438

Token 530: ' But' (ID: 3072)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07503054291009903
    2. 'from' → logprob: -3.325030565261841
    3. 'dist' → logprob: -3.450030565261841
    4. 'import' → logprob: -5.450030326843262
    5. 'dp' → logprob: -9.825030326843262
    6. ' visited' → logprob: -10.075030326843262
    7. 'deque' → logprob: -10.075030326843262
    8. 'queue' → logprob: -10.575030326843262
    9. 'distance' → logprob: -10.825030326843262
    10. '#' → logprob: -10.825030326843262

Token 531: ' t' (ID: 260)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.773553729057312
    2. 't' → logprob: -1.773553729057312
    3. 'we' → logprob: -2.7735538482666016
    4. '(x' → logprob: -3.0235538482666016
    5. ' we' → logprob: -3.0235538482666016
    6. '#' → logprob: -3.0235538482666016
    7. 'from' → logprob: -3.6485538482666016
    8. ' visited' → logprob: -3.7735538482666016
    9. 'for' → logprob: -4.148553848266602
    10. ' (' → logprob: -4.523553848266602

Token 532: ' up' (ID: 869)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.981075644493103
    2. ',' → logprob: -1.231075644493103
    3. '=' → logprob: -2.4810757637023926
    4. '#' → logprob: -2.9810757637023926
    5. ' is' → logprob: -3.3560757637023926
    6. 'is' → logprob: -4.106075763702393
    7. 's' → logprob: -4.356075763702393
    8. '_' → logprob: -4.356075763702393
    9. '<|end|>' → logprob: -4.356075763702393
    10. ' =' → logprob: -4.606075763702393

Token 533: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.047408998012542725
    2. '<=' → logprob: -4.5474090576171875
    3. '=' → logprob: -4.6724090576171875
    4. '>' → logprob: -4.9224090576171875
    5. '_to' → logprob: -5.7974090576171875
    6. 'to' → logprob: -5.9224090576171875
    7. 'up' → logprob: -6.4224090576171875
    8. '_' → logprob: -6.6724090576171875
    9. 'per' → logprob: -6.7974090576171875
    10. 'in' → logprob: -6.9224090576171875

Token 534: ' ~' (ID: 6574)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004266796633601189
    2. ' max' → logprob: -5.504266738891602
    3. '10' → logprob: -9.004266738891602
    4. 'times' → logprob: -10.254266738891602
    5. '(max' → logprob: -11.254266738891602
    6. '100' → logprob: -12.254266738891602
    7. '[max' → logprob: -12.879266738891602
    8. ' ' → logprob: -13.254266738891602
    9. ' times' → logprob: -13.379266738891602
    10. '=max' → logprob: -14.129266738891602

Token 535: '100' (ID: 1353)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006490522064268589
    2. ' max' → logprob: -7.8756489753723145
    3. '10' → logprob: -8.875649452209473
    4. '100' → logprob: -9.750649452209473
    5. '(max' → logprob: -10.625649452209473
    6. '200' → logprob: -10.750649452209473
    7. '500' → logprob: -11.750649452209473
    8. 'times' → logprob: -12.625649452209473
    9. '300' → logprob: -13.125649452209473
    10. '(' → logprob: -13.250649452209473

Token 536: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08429263532161713
    2. '0' → logprob: -3.4592926502227783
    3. '_' → logprob: -4.459292411804199
    4. ',' → logprob: -4.959292411804199
    5. '_times' → logprob: -5.084292411804199
    6. 'times' → logprob: -5.209292411804199
    7. '000' → logprob: -6.084292411804199
    8. '[' → logprob: -6.334292411804199
    9. '#' → logprob: -6.334292411804199
    10. ']' → logprob: -6.709292411804199

Token 537: ',' (ID: 11)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8233342170715332
    2. ')' → logprob: -0.9483342170715332
    3. ',' → logprob: -3.323334217071533
    4. ':' → logprob: -3.823334217071533
    5. 'dist' → logprob: -3.823334217071533
    6. '):' → logprob: -4.073334217071533
    7. ' =' → logprob: -4.073334217071533
    8. '
' → logprob: -4.573334217071533
    9. '=' → logprob: -4.573334217071533
    10. 'from' → logprob: -4.823334217071533

Token 538: ' and' (ID: 326)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6512791514396667
    2. ')' → logprob: -1.1512792110443115
    3. ' visited' → logprob: -3.2762792110443115
    4. '#' → logprob: -3.9012792110443115
    5. ':' → logprob: -4.151278972625732
    6. 'import' → logprob: -4.401278972625732
    7. ',' → logprob: -4.651278972625732
    8. 'dist' → logprob: -4.901278972625732
    9. 'from' → logprob: -4.901278972625732
    10. '):' → logprob: -5.026278972625732

Token 539: ' H' (ID: 487)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6875523328781128
    2. 'H' → logprob: -2.4375524520874023
    3. 't' → logprob: -3.0625524520874023
    4. 'we' → logprob: -3.3125524520874023
    5. 'x' → logprob: -3.4375524520874023
    6. 'from' → logprob: -3.6875524520874023
    7. 'states' → logprob: -3.8125524520874023
    8. 'N' → logprob: -3.9375524520874023
    9. 'max' → logprob: -4.062552452087402
    10. '(x' → logprob: -4.312552452087402

Token 540: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2877005338668823
    2. ',W' → logprob: -1.5377005338668823
    3. '*' → logprob: -3.787700653076172
    4. 'W' → logprob: -4.787700653076172
    5. '
' → logprob: -6.787700653076172
    6. ' ,' → logprob: -7.037700653076172
    7. ' *' → logprob: -7.787700653076172
    8. ' W' → logprob: -7.912700653076172
    9. ' <=' → logprob: -8.662700653076172
    10. ' ' → logprob: -8.662700653076172

Token 541: ' max' (ID: 2999)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.7673055529594421
    2. '<=' → logprob: -1.267305612564087
    3. 'up' → logprob: -1.767305612564087
    4. ' <=' → logprob: -3.767305612564087
    5. ' are' → logprob: -4.392305374145508
    6. ')' → logprob: -4.392305374145508
    7. ',' → logprob: -4.517305374145508
    8. '=' → logprob: -5.267305374145508
    9. ' can' → logprob: -5.517305374145508
    10. 'are' → logprob: -5.892305374145508

Token 542: ' ' (ID: 220)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9855636954307556
    2. ' =' → logprob: -1.1105637550354004
    3. '=' → logprob: -1.8605637550354004
    4. ',' → logprob: -2.8605637550354004
    5. ')' → logprob: -3.2355637550354004
    6. ']' → logprob: -3.9855637550354004
    7. 'size' → logprob: -4.9855637550354
    8. ' visited' → logprob: -6.1105637550354
    9. '_' → logprob: -6.1105637550354
    10. ')]' → logprob: -6.2355637550354

Token 543: '20' (ID: 455)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4639635682106018
    2. '=' → logprob: -1.213963508605957
    3. '50' → logprob: -3.213963508605957
    4. '200' → logprob: -4.588963508605957
    5. '20' → logprob: -5.213963508605957
    6. '250' → logprob: -5.463963508605957
    7. '500' → logprob: -5.713963508605957
    8. ' =' → logprob: -6.213963508605957
    9. '30' → logprob: -6.588963508605957
    10. '10' → logprob: -6.713963508605957

Token 544: ' ->' (ID: 2747)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20192119479179382
    2. ')' → logprob: -2.201921224594116
    3. ',' → logprob: -3.576921224594116
    4. '
' → logprob: -4.451920986175537
    5. ')
' → logprob: -4.701920986175537
    6. 'dist' → logprob: -5.201920986175537
    7. ',
' → logprob: -5.326920986175537
    8. '):' → logprob: -6.201920986175537
    9. '),' → logprob: -6.451920986175537
    10. '):
' → logprob: -6.701920986175537

Token 545: ' max' (ID: 2999)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20061421394348145
    2. '#' → logprob: -2.4506142139434814
    3. 'from' → logprob: -3.0756142139434814
    4. '20' → logprob: -3.5756142139434814
    5. ' visited' → logprob: -5.325613975524902
    6. '
' → logprob: -5.700613975524902
    7. 'dist' → logprob: -6.200613975524902
    8. 'True' → logprob: -6.325613975524902
    9. 'import' → logprob: -6.575613975524902
    10. '100' → logprob: -6.575613975524902

Token 546: ' ' (ID: 220)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.12013747543096542
    2. '_t' → logprob: -3.8701374530792236
    3. '_state' → logprob: -4.120137691497803
    4. 'time' → logprob: -4.120137691497803
    5. 'state' → logprob: -4.370137691497803
    6. '_' → logprob: -4.995137691497803
    7. 't' → logprob: -4.995137691497803
    8. 'visited' → logprob: -5.370137691497803
    9. 'size' → logprob: -5.495137691497803
    10. ' _' → logprob: -5.745137691497803

Token 547: '20' (ID: 455)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.2465847730636597
    2. 'time' → logprob: -1.3715847730636597
    3. '100' → logprob: -2.121584892272949
    4. 'visited' → logprob: -2.621584892272949
    5. '20' → logprob: -2.871584892272949
    6. 'size' → logprob: -2.996584892272949
    7. 'steps' → logprob: -2.996584892272949
    8. 't' → logprob: -3.621584892272949
    9. 'times' → logprob: -3.996584892272949
    10. 'state' → logprob: -4.496584892272949

Token 548: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14641796052455902
    2. '*' → logprob: -3.0214178562164307
    3. '+' → logprob: -3.2714178562164307
    4. '0' → logprob: -3.3964178562164307
    5. ' ,' → logprob: -5.89641809463501
    6. ',H' → logprob: -6.02141809463501
    7. ' *' → logprob: -6.52141809463501
    8. ' +' → logprob: -6.52141809463501
    9. ')' → logprob: -6.64641809463501
    10. '20' → logprob: -6.77141809463501

Token 549: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.00032151900813914835
    2. 'W' → logprob: -8.750321388244629
    3. ' ' → logprob: -8.750321388244629
    4. 'max' → logprob: -12.750321388244629
    5. ' W' → logprob: -14.125321388244629
    6. '40' → logprob: -15.375321388244629
    7. '30' → logprob: -15.875321388244629
    8. 'H' → logprob: -16.125322341918945
    9. '
' → logprob: -16.250322341918945
    10. '100' → logprob: -16.375322341918945

Token 550: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008234292268753052
    2. ')' → logprob: -5.88323450088501
    3. ',' → logprob: -6.00823450088501
    4. '+' → logprob: -7.13323450088501
    5. ' *' → logprob: -7.75823450088501
    6. '<|end|>' → logprob: -8.008234024047852
    7. 'times' → logprob: -8.133234024047852
    8. '*(' → logprob: -8.508234024047852
    9. '0' → logprob: -8.758234024047852
    10. '
' → logprob: -9.508234024047852

Token 551: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3612760901451111
    2. '(max' → logprob: -1.6112761497497559
    3. 'max' → logprob: -2.361276149749756
    4. '(' → logprob: -4.986276149749756
    5. '110' → logprob: -7.986276149749756
    6. '101' → logprob: -7.986276149749756
    7. '200' → logprob: -8.111275672912598
    8. '20' → logprob: -8.361275672912598
    9. ' max' → logprob: -8.611275672912598
    10. '120' → logprob: -8.986275672912598

Token 552: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076737068593502045
    2. '1' → logprob: -5.132673740386963
    3. ')' → logprob: -6.882673740386963
    4. '_' → logprob: -7.632673740386963
    5. '000' → logprob: -8.757673263549805
    6. '00' → logprob: -10.632673263549805
    7. '```' → logprob: -11.945173263549805
    8. '   ' → logprob: -12.257673263549805
    9. '2' → logprob: -12.382673263549805
    10. ' ' → logprob: -12.507673263549805

Token 553: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16379095613956451
    2. 'visited' → logprob: -3.1637909412384033
    3. ' =' → logprob: -3.5387909412384033
    4. '=' → logprob: -3.7887909412384033
    5. '):' → logprob: -4.538791179656982
    6. 'dist' → logprob: -4.788791179656982
    7. ')=' → logprob: -4.788791179656982
    8. ']' → logprob: -5.038791179656982
    9. ',' → logprob: -5.288791179656982
    10. ':' → logprob: -5.913791179656982

Token 554: '400' (ID: 4812)
  Prédit: '800'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '800' → logprob: -4.954393079970032e-05
    2. '400' → logprob: -10.250049591064453
    3. ' ' → logprob: -11.250049591064453
    4. '8' → logprob: -14.000049591064453
    5. 'int' → logprob: -16.750049591064453
    6. '   ' → logprob: -17.000049591064453
    7. '100' → logprob: -17.125049591064453
    8. '  ' → logprob: -17.375049591064453
    9. '80' → logprob: -17.375049591064453
    10. 'max' → logprob: -18.250049591064453

Token 555: 'k' (ID: 74)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2650470435619354
    2. '0' → logprob: -1.5150470733642578
    3. '00' → logprob: -4.765047073364258
    4. '{' → logprob: -6.140047073364258
    5. 'from' → logprob: -7.640047073364258
    6. ')' → logprob: -8.140047073364258
    7. 'import' → logprob: -8.390047073364258
    8. '+' → logprob: -8.390047073364258
    9. '100' → logprob: -8.765047073364258
    10. '500' → logprob: -9.015047073364258

Token 556: ' states' (ID: 9407)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2493346482515335
    2. ')' → logprob: -2.1243345737457275
    3. '
' → logprob: -3.2493345737457275
    4. 'dist' → logprob: -3.4993345737457275
    5. 'from' → logprob: -4.999334812164307
    6. ' visited' → logprob: -5.249334812164307
    7. 'import' → logprob: -5.624334812164307
    8. ']' → logprob: -5.749334812164307
    9. ')
' → logprob: -5.999334812164307
    10. 'queue' → logprob: -6.499334812164307

Token 557: ' feasible' (ID: 58866)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6764699220657349
    2. 'visited' → logprob: -1.0514699220657349
    3. 'dist' → logprob: -2.1764698028564453
    4. 'import' → logprob: -4.051469802856445
    5. ')' → logprob: -5.176469802856445
    6. 'queue' → logprob: -5.676469802856445
    7. '
' → logprob: -7.801469802856445
    8. 'q' → logprob: -7.926469802856445
    9. 'deque' → logprob: -8.051469802856445
    10. '#' → logprob: -8.926469802856445

Token 558: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5920137763023376
    2. 'dist' → logprob: -1.4670138359069824
    3. 'visited' → logprob: -1.5920138359069824
    4. 'import' → logprob: -4.717013835906982
    5. 'queue' → logprob: -6.092013835906982
    6. 'deque' → logprob: -7.717013835906982
    7. 'q' → logprob: -7.967013835906982
    8. ')' → logprob: -8.717013359069824
    9. 'dp' → logprob: -8.842013359069824
    10. '```' → logprob: -9.467013359069824

Token 559: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.41379818320274353
    2. 'dist' → logprob: -1.163798213005066
    3. 'visited' → logprob: -3.9137980937957764
    4. 'import' → logprob: -5.0387983322143555
    5. 'queue' → logprob: -10.038798332214355
    6. 'deque' → logprob: -10.163798332214355
    7. '```' → logprob: -11.038798332214355
    8. 'dp' → logprob: -11.788798332214355
    9. ' from' → logprob: -12.663798332214355
    10. 'q' → logprob: -12.913798332214355

Token 560: ' heap' (ID: 37237)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0031784253660589457
    2. 'heap' → logprob: -5.753178596496582
    3. 'queue' → logprob: -14.753178596496582
    4. ' collections' → logprob: -15.378178596496582
    5. '_' → logprob: -16.378177642822266
    6. '_heap' → logprob: -16.628177642822266
    7. 'sys' → logprob: -17.003177642822266
    8. 'bis' → logprob: -18.503177642822266
    9. 'math' → logprob: -18.753177642822266
    10. 'collection' → logprob: -19.003177642822266

Token 561: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0683535037969705e-05
    2. 'queue' → logprob: -11.62501049041748
    3. 'import' → logprob: -13.75001049041748
    4. 'que' → logprob: -14.37501049041748
    5. 's' → logprob: -17.250011444091797
    6. 'dict' → logprob: -17.625011444091797
    7. 'ify' → logprob: -17.750011444091797
    8. 'queues' → logprob: -18.000011444091797
    9. 'ques' → logprob: -18.375011444091797
    10. 'u' → logprob: -18.500011444091797

Token 562: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.016037069261074066
    2. 'import' → logprob: -4.1410369873046875
    3. '	import' → logprob: -13.641036987304688
    4. ' ' → logprob: -14.266036987304688
    5. '_import' → logprob: -15.266036987304688
    6. ' ' → logprob: -15.266036987304688
    7. '<|end|>' → logprob: -16.141036987304688
    8. ' im' → logprob: -16.266036987304688
    9. ' importar' → logprob: -16.766036987304688
    10. ' impor' → logprob: -17.391036987304688

Token 563: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.00037204305408522487
    2. ' he' → logprob: -8.000371932983398
    3. 'heap' → logprob: -10.250371932983398
    4. '.he' → logprob: -13.625371932983398
    5. 'import' → logprob: -16.7503719329834
    6. '_he' → logprob: -18.1253719329834
    7. '```' → logprob: -18.3753719329834
    8. 'h' → logprob: -18.7503719329834
    9. 'hq' → logprob: -19.1253719329834
    10. '*' → logprob: -20.1253719329834

Token 564: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.7729658540920354e-05
    2. 'ap' → logprob: -10.500027656555176
    3. 'a' → logprob: -16.875028610229492
    4. '```' → logprob: -19.000028610229492
    5. 'ап' → logprob: -19.125028610229492
    6. 'appen' → logprob: -19.500028610229492
    7. 'pp' → logprob: -19.750028610229492
    8. 'appe' → logprob: -20.625028610229492
    9. '	app' → logprob: -20.875028610229492
    10. ' app' → logprob: -21.000028610229492

Token 565: 'ush' (ID: 1776)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.15303631126880646
    2. 'e' → logprob: -2.90303635597229
    3. 'ap' → logprob: -2.90303635597229
    4. 'op' → logprob: -3.90303635597229
    5. 'p' → logprob: -4.778036117553711
    6. 'ush' → logprob: -6.278036117553711
    7. 'ea' → logprob: -7.653036117553711
    8. 'push' → logprob: -7.778036117553711
    9. 'q' → logprob: -8.153036117553711
    10. 'ep' → logprob: -8.278036117553711

Token 566: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6871436834335327
    2. ',' → logprob: -0.8121436834335327
    3. 'he' → logprob: -2.9371438026428223
    4. 'import' → logprob: -10.937143325805664
    5. ',
' → logprob: -11.437143325805664
    6. ' from' → logprob: -11.562143325805664
    7. ' he' → logprob: -12.437143325805664
    8. 'heap' → logprob: -12.687143325805664
    9. '```' → logprob: -12.687143325805664
    10. ')' → logprob: -12.937143325805664

Token 567: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.981667537620524e-06
    2. ' he' → logprob: -13.250001907348633
    3. 'heap' → logprob: -15.875001907348633
    4. '.he' → logprob: -21.000001907348633
    5. '
' → logprob: -21.750001907348633
    6. '```' → logprob: -21.875001907348633
    7. 'hep' → logprob: -22.625001907348633
    8. 'hev' → logprob: -22.750001907348633
    9. '_he' → logprob: -22.750001907348633
    10. 'hew' → logprob: -22.750001907348633

Token 568: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.088346359931165e-07
    2. 'ap' → logprob: -14.000000953674316
    3. ' app' → logprob: -18.75
    4. '(app' → logprob: -19.0
    5. 'a' → logprob: -19.25
    6. 'appen' → logprob: -19.375
    7. 'appe' → logprob: -20.5
    8. 'APP' → logprob: -20.5
    9. 'ап' → logprob: -20.625
    10. '	app' → logprob: -20.625

Token 569: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0015066476771607995
    2. 'op' → logprob: -6.501506805419922
    3. 'app' → logprob: -13.001506805419922
    4. 'push' → logprob: -13.626506805419922
    5. 'p' → logprob: -15.126506805419922
    6. 'he' → logprob: -15.376506805419922
    7. 'ap' → logprob: -16.876506805419922
    8. 'sh' → logprob: -16.876506805419922
    9. 'u' → logprob: -17.001506805419922
    10. '```' → logprob: -17.251506805419922

Token 570: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09880805015563965
    2. 'heap' → logprob: -3.0988080501556396
    3. 'visited' → logprob: -3.3488080501556396
    4. 'queue' → logprob: -5.098808288574219
    5. 'pq' → logprob: -5.848808288574219
    6. 'def' → logprob: -5.848808288574219
    7. 'q' → logprob: -7.723808288574219
    8. 'import' → logprob: -7.848808288574219
    9. 'he' → logprob: -8.223808288574219
    10. 'INF' → logprob: -8.348808288574219

Token 571: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.022733105346560478
    2. 'heap' → logprob: -4.397733211517334
    3. 'visited' → logprob: -4.772733211517334
    4. 'queue' → logprob: -7.647733211517334
    5. 'def' → logprob: -7.772733211517334
    6. 'pq' → logprob: -7.772733211517334
    7. 'import' → logprob: -8.397732734680176
    8. 'dp' → logprob: -10.397732734680176
    9. 'q' → logprob: -10.522732734680176
    10. 'start' → logprob: -10.772732734680176

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20165814459323883
    2. '=' → logprob: -1.7016581296920776
    3. '[(' → logprob: -9.326658248901367
    4. ')' → logprob: -10.201658248901367
    5. '={}' → logprob: -10.326658248901367
    6. '={(' → logprob: -10.451658248901367
    7. '[' → logprob: -10.701658248901367
    8. ',' → logprob: -11.576658248901367
    9. '={' → logprob: -12.076658248901367
    10. '{' → logprob: -12.326658248901367

Token 573: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0002043748099822551
    2. '{' → logprob: -8.750204086303711
    3. 'dict' → logprob: -10.000204086303711
    4. '{})' → logprob: -15.375204086303711
    5. '{}
' → logprob: -16.37520408630371
    6. ' {}' → logprob: -16.75020408630371
    7. '{}

' → logprob: -16.87520408630371
    8. 'default' → logprob: -17.00020408630371
    9. '{}\' → logprob: -17.87520408630371
    10. '{},' → logprob: -18.37520408630371

Token 574: 'hq' (ID: 156668)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5080958008766174
    2. 'pq' → logprob: -1.5080957412719727
    3. 'hq' → logprob: -1.7580957412719727
    4. 'q' → logprob: -6.258095741271973
    5. 'queue' → logprob: -6.258095741271973
    6. 'h' → logprob: -7.508095741271973
    7. 'start' → logprob: -8.758095741271973
    8. 'que' → logprob: -9.258095741271973
    9. 'import' → logprob: -11.883095741271973
    10. 'Q' → logprob: -11.883095741271973

Token 575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1043989360332489
    2. 'he' → logprob: -2.7293989658355713
    3. '=[]' → logprob: -3.7293989658355713
    4. '.he' → logprob: -5.479398727416992
    5. ' =' → logprob: -6.104398727416992
    6. ')' → logprob: -7.354398727416992
    7. '<|end|>' → logprob: -7.354398727416992
    8. '.append' → logprob: -7.479398727416992
    9. '.' → logprob: -7.604398727416992
    10. ' he' → logprob: -7.854398727416992

Token 576: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07893451303243637
    2. '[(' → logprob: -2.57893443107605
    3. '[]
' → logprob: -10.078934669494629
    4. '[]

' → logprob: -13.078934669494629
    5. '[' → logprob: -15.453934669494629
    6. '[]}' → logprob: -15.703934669494629
    7. '[](' → logprob: -15.828934669494629
    8. '[]"' → logprob: -16.078933715820312
    9. '[])' → logprob: -16.453933715820312
    10. '[],' → logprob: -17.078933715820312

Token 577: '#' (ID: 2)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -6.704273118884885e-07
    2. 'start' → logprob: -14.625000953674316
    3. 'for' → logprob: -16.25
    4. '```' → logprob: -17.25
    5. ' he' → logprob: -18.625
    6. 'heap' → logprob: -19.5
    7. '#' → logprob: -20.25
    8. 'if' → logprob: -20.625
    9. 'dist' → logprob: -20.75
    10. 'import' → logprob: -21.0

Token 578: ' initial' (ID: 4871)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -8.73314929776825e-05
    2. 'start' → logprob: -9.37508773803711
    3. 'for' → logprob: -13.25008773803711
    4. '#' → logprob: -15.12508773803711
    5. 'if' → logprob: -16.37508773803711
    6. 'S' → logprob: -16.62508773803711
    7. 's' → logprob: -17.25008773803711
    8. 'def' → logprob: -17.37508773803711
    9. 'initial' → logprob: -17.37508773803711
    10. 'dist' → logprob: -17.37508773803711

Token 579: ' state' (ID: 2608)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0013911888236179948
    2. ' he' → logprob: -6.876391410827637
    3. 'state' → logprob: -8.251391410827637
    4. 'x' → logprob: -10.626391410827637
    5. 'time' → logprob: -10.751391410827637
    6. 't' → logprob: -11.126391410827637
    7. 'start' → logprob: -12.376391410827637
    8. 'position' → logprob: -12.501391410827637
    9. 'steps' → logprob: -12.751391410827637
    10. 'te' → logprob: -13.001391410827637

Token 580: ':' (ID: 25)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.7432603272027336e-06
    2. ' he' → logprob: -13.375001907348633
    3. '=' → logprob: -17.500001907348633
    4. '```' → logprob: -18.375001907348633
    5. '_he' → logprob: -18.625001907348633
    6. ' =' → logprob: -18.750001907348633
    7. '0' → logprob: -18.875001907348633
    8. 'heap' → logprob: -19.250001907348633
    9. ')' → logprob: -19.250001907348633
    10. '(' → logprob: -19.625001907348633

Token 581: ' at' (ID: 540)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.625006675720215
    3. '0' → logprob: -12.875006675720215
    4. ' he' → logprob: -13.625006675720215
    5. '```' → logprob: -17.25000762939453
    6. '   ' → logprob: -18.50000762939453
    7. 'heap' → logprob: -19.75000762939453
    8. 'start' → logprob: -20.12500762939453
    9. 'He' → logprob: -20.37500762939453
    10. '_he' → logprob: -20.37500762939453

Token 582: ' time' (ID: 1058)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03177310526371002
    2. 'he' → logprob: -4.031773090362549
    3. 'start' → logprob: -4.531773090362549
    4. '(' → logprob: -6.531773090362549
    5. '(start' → logprob: -7.906773090362549
    6. ' ' → logprob: -8.031773567199707
    7. 'times' → logprob: -8.406773567199707
    8. ' he' → logprob: -9.406773567199707
    9. ' (' → logprob: -9.531773567199707
    10. 'time' → logprob: -9.906773567199707

Token 583: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020242815371602774
    2. ' ' → logprob: -7.002024173736572
    3. ',' → logprob: -7.377024173736572
    4. '=' → logprob: -8.00202465057373
    5. '(' → logprob: -9.75202465057373
    6. ' =' → logprob: -10.25202465057373
    7. 'times' → logprob: -11.50202465057373
    8. 'he' → logprob: -11.62702465057373
    9. '```' → logprob: -11.87702465057373
    10. ' (' → logprob: -12.25202465057373

Token 584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.947715832618997e-05
    2. '(' → logprob: -9.875089645385742
    3. ' ' → logprob: -11.250089645385742
    4. 'start' → logprob: -12.250089645385742
    5. '=' → logprob: -12.500089645385742
    6. ',' → logprob: -12.500089645385742
    7. 'he' → logprob: -13.375089645385742
    8. ' (' → logprob: -13.625089645385742
    9. '[' → logprob: -14.125089645385742
    10. 'max' → logprob: -14.187589645385742

Token 585: ',' (ID: 11)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0005138330743648112
    2. ',' → logprob: -7.875514030456543
    3. '(' → logprob: -9.125514030456543
    4. '=' → logprob: -11.750514030456543
    5. ' he' → logprob: -12.375514030456543
    6. '0' → logprob: -12.500514030456543
    7. ',(' → logprob: -13.000514030456543
    8. ' =' → logprob: -13.750514030456543
    9. '```' → logprob: -13.875514030456543
    10. '=(' → logprob: -14.625514030456543

Token 586: ' position' (ID: 4010)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.23614390194416046
    2. 'x' → logprob: -1.611143946647644
    3. 'start' → logprob: -5.486144065856934
    4. ' he' → logprob: -5.611144065856934
    5. ' x' → logprob: -6.611144065856934
    6. '   ' → logprob: -7.236144065856934
    7. 'i' → logprob: -8.736144065856934
    8. ' start' → logprob: -8.861144065856934
    9. 'sx' → logprob: -8.861144065856934
    10. 'S' → logprob: -9.486144065856934

Token 587: ' start' (ID: 1604)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.210531085729599
    2. '0' → logprob: -2.585530996322632
    3. 'start' → logprob: -2.835530996322632
    4. '(' → logprob: -4.460531234741211
    5. ' =' → logprob: -4.460531234741211
    6. ' he' → logprob: -4.710531234741211
    7. ',' → logprob: -4.710531234741211
    8. '=' → logprob: -4.960531234741211
    9. '(start' → logprob: -5.835531234741211
    10. '=start' → logprob: -6.710531234741211

Token 588: ',' (ID: 11)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.01869496889412403
    2. ',' → logprob: -4.518694877624512
    3. ' he' → logprob: -5.893694877624512
    4. ')' → logprob: -7.018694877624512
    5. '=' → logprob: -7.018694877624512
    6. ' =' → logprob: -7.143694877624512
    7. ')
' → logprob: -7.518694877624512
    8. '
' → logprob: -7.643694877624512
    9. '(' → logprob: -8.893694877624512
    10. '),' → logprob: -8.893694877624512

Token 589: ' steps' (ID: 10331)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0004658233083318919
    2. 'x' → logprob: -7.7504658699035645
    3. 'sx' → logprob: -12.000465393066406
    4. 'i' → logprob: -12.125465393066406
    5. 'start' → logprob: -12.375465393066406
    6. '0' → logprob: -12.500465393066406
    7. '(x' → logprob: -12.750465393066406
    8. 'S' → logprob: -12.750465393066406
    9. '   ' → logprob: -12.750465393066406
    10. ' he' → logprob: -13.000465393066406

Token 590: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5191417932510376
    2. 'he' → logprob: -1.1441417932510376
    3. ' =' → logprob: -2.519141674041748
    4. ' he' → logprob: -6.019141674041748
    5. '=(' → logprob: -6.394141674041748
    6. 'steps' → logprob: -7.894141674041748
    7. '0' → logprob: -8.019142150878906
    8. ',' → logprob: -8.019142150878906
    9. ')' → logprob: -8.894142150878906
    10. '(' → logprob: -9.144142150878906

Token 591: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06459551304578781
    2. '0' → logprob: -3.4395954608917236
    3. ' =' → logprob: -3.6895954608917236
    4. 'he' → logprob: -5.314595699310303
    5. ',' → logprob: -8.814595222473145
    6. 'steps' → logprob: -9.064595222473145
    7. ' he' → logprob: -9.189595222473145
    8. '(' → logprob: -10.064595222473145
    9. ' ' → logprob: -10.314595222473145
    10. '=(' → logprob: -10.439595222473145

Token 592: '
' (ID: 198)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: 0.0
    2. '```' → logprob: -20.125
    3. ' he' → logprob: -20.5
    4. '0' → logprob: -22.875
    5. '

' → logprob: -23.25
    6. '`' → logprob: -23.25
    7. '
' → logprob: -23.375
    8. '_he' → logprob: -23.5
    9. 'heap' → logprob: -23.625
    10. ')' → logprob: -23.75

Token 593: '#' (ID: 2)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: 0.0
    2. ' he' → logprob: -18.375
    3. '```' → logprob: -19.625
    4. 'heap' → logprob: -21.875
    5. 'h' → logprob: -23.375
    6. '  
' → logprob: -23.5
    7. '`' → logprob: -23.75
    8. '_he' → logprob: -23.875
    9. '
' → logprob: -24.25
    10. '    
' → logprob: -24.375

Token 594: ' heap' (ID: 37237)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: 0.0
    2. ' he' → logprob: -20.0
    3. '   ' → logprob: -21.375
    4. '```' → logprob: -21.375
    5. 'heap' → logprob: -21.375
    6. 'initial' → logprob: -21.75
    7. 'h' → logprob: -22.125
    8. '

' → logprob: -22.25
    9. 'start' → logprob: -22.625
    10. '#' → logprob: -22.75

Token 595: ':' (ID: 25)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.06754523515701294
    2. ' =' → logprob: -3.442545175552368
    3. '=' → logprob: -4.692545413970947
    4. ' he' → logprob: -4.942545413970947
    5. 'push' → logprob: -5.067545413970947
    6. '.he' → logprob: -5.442545413970947
    7. 'q' → logprob: -6.192545413970947
    8. '=(' → logprob: -6.942545413970947
    9. '.append' → logprob: -7.692545413970947
    10. 'entry' → logprob: -7.817545413970947

Token 596: ' (' (ID: 350)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0007264905725605786
    2. ' he' → logprob: -7.250726699829102
    3. '[]' → logprob: -11.750726699829102
    4. '[(' → logprob: -11.875726699829102
    5. '(' → logprob: -14.125726699829102
    6. 'heap' → logprob: -14.250726699829102
    7. 'push' → logprob: -16.2507266998291
    8. '```' → logprob: -16.8757266998291
    9. '[](' → logprob: -16.8757266998291
    10. '[' → logprob: -17.3757266998291

Token 597: 'steps' (ID: 27176)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -9.875075340270996
    3. ')' → logprob: -11.500075340270996
    4. 'steps' → logprob: -11.875075340270996
    5. ' ' → logprob: -13.250075340270996
    6. 'time' → logprob: -13.875075340270996
    7. 'dist' → logprob: -14.000075340270996
    8. 'he' → logprob: -14.250075340270996
    9. '```' → logprob: -14.250075340270996
    10. 't' → logprob: -15.125075340270996

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011796683247666806
    2. ' ,' → logprob: -10.000118255615234
    3. '0' → logprob: -10.750118255615234
    4. ',t' → logprob: -10.875118255615234
    5. ')' → logprob: -11.625118255615234
    6. ',x' → logprob: -12.125118255615234
    7. ',start' → logprob: -12.875118255615234
    8. ',(' → logprob: -13.250118255615234
    9. ',time' → logprob: -13.250118255615234
    10. '(' → logprob: -13.625118255615234

Token 599: ' time' (ID: 1058)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -6.945094355614856e-05
    2. 'time' → logprob: -10.250069618225098
    3. ' ' → logprob: -11.375069618225098
    4. 't' → logprob: -11.500069618225098
    5. ')' → logprob: -11.625069618225098
    6. 'times' → logprob: -13.625069618225098
    7. '10' → logprob: -15.000069618225098
    8. '```' → logprob: -15.125069618225098
    9. 'start' → logprob: -15.250069618225098
    10. ',' → logprob: -15.375069618225098

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012296605564188212
    2. ',start' → logprob: -9.625123023986816
    3. ',x' → logprob: -10.125123023986816
    4. ' ,' → logprob: -12.125123023986816
    5. ')' → logprob: -12.250123023986816
    6. ',
' → logprob: -13.625123023986816
    7. ',next' → logprob: -14.000123023986816
    8. '+' → logprob: -14.125123023986816
    9. ',n' → logprob: -14.250123023986816
    10. ',time' → logprob: -14.375123023986816

Token 601: ' x' (ID: 1215)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00017040544480551034
    2. ')' → logprob: -9.125170707702637
    3. ' start' → logprob: -10.500170707702637
    4. '*' → logprob: -11.000170707702637
    5. 'x' → logprob: -11.375170707702637
    6. ')+' → logprob: -13.125170707702637
    7. '[start' → logprob: -13.625170707702637
    8. '(start' → logprob: -14.750170707702637
    9. '```' → logprob: -15.125170707702637
    10. '*(' → logprob: -15.250170707702637

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012362991692498326
    2. ',y' → logprob: -6.751236438751221
    3. ')' → logprob: -9.876235961914062
    4. ' ,' → logprob: -12.251235961914062
    5. 'y' → logprob: -12.751235961914062
    6. ',start' → logprob: -13.626235961914062
    7. ',user' → logprob: -14.251235961914062
    8. '),' → logprob: -14.376235961914062
    9. ',
' → logprob: -14.376235961914062
    10. ',x' → logprob: -14.751235961914062

Token 603: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011703446507453918
    2. ' y' → logprob: -6.7511701583862305
    3. 'start' → logprob: -15.87617015838623
    4. ',y' → logprob: -17.626171112060547
    5. ',' → logprob: -18.876171112060547
    6. ')' → logprob: -19.001171112060547
    7. ')y' → logprob: -19.001171112060547
    8. 'yj' → logprob: -19.876171112060547
    9. '	y' → logprob: -20.126171112060547
    10. '_y' → logprob: -20.376171112060547

Token 604: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005949417594820261
    2. ')
' → logprob: -5.1309494972229
    3. ',' → logprob: -11.505949020385742
    4. ')
' → logprob: -13.005949020385742
    5. '),' → logprob: -13.255949020385742
    6. ')=' → logprob: -13.380949020385742
    7. 'he' → logprob: -14.005949020385742
    8. ')`' → logprob: -14.255949020385742
    9. '))' → logprob: -14.630949020385742
    10. '[' → logprob: -14.630949020385742

Token 605: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: 0.0
    2. '```' → logprob: -16.75
    3. ' he' → logprob: -19.375
    4. 'steps' → logprob: -20.0
    5. '`' → logprob: -21.125
    6. '0' → logprob: -21.25
    7. '
' → logprob: -22.625
    8. 'heap' → logprob: -22.625
    9. '
' → logprob: -22.75
    10. '_he' → logprob: -23.375

Token 606: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.1279553291387856e-05
    2. 'ap' → logprob: -11.625011444091797
    3. 'push' → logprob: -13.125011444091797
    4. 'pp' → logprob: -16.500011444091797
    5. 'a' → logprob: -17.000011444091797
    6. ' app' → logprob: -17.125011444091797
    7. '```' → logprob: -17.500011444091797
    8. 'he' → logprob: -17.875011444091797
    9. 'append' → logprob: -18.125011444091797
    10. 'p' → logprob: -18.125011444091797

Token 607: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.572941179503687e-05
    2. 'push' → logprob: -10.000045776367188
    3. 'op' → logprob: -16.000045776367188
    4. 'sh' → logprob: -16.500045776367188
    5. 'he' → logprob: -18.000045776367188
    6. '```' → logprob: -19.000045776367188
    7. 'Push' → logprob: -19.125045776367188
    8. 'us' → logprob: -19.125045776367188
    9. 'u' → logprob: -19.250045776367188
    10. 'ut' → logprob: -19.875045776367188

Token 608: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. '(q' → logprob: -17.25
    4. 'h' → logprob: -18.875
    5. '(d' → logprob: -19.875
    6. ',h' → logprob: -20.625
    7. '```' → logprob: -20.625
    8. '[h' → logprob: -20.75
    9. ' (' → logprob: -21.375
    10. '	h' → logprob: -21.625

Token 609: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. 'p' → logprob: -14.875000953674316
    3. 'Q' → logprob: -16.000001907348633
    4. '[' → logprob: -16.375001907348633
    5. 'hq' → logprob: -16.750001907348633
    6. '(h' → logprob: -16.875001907348633
    7. '```' → logprob: -17.000001907348633
    8. ')' → logprob: -17.000001907348633
    9. 'qh' → logprob: -17.125001907348633
    10. 'qs' → logprob: -17.250001907348633

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.295307457447052
    2. '(' → logprob: -1.4203073978424072
    3. ',(' → logprob: -4.295307636260986
    4. ' (' → logprob: -8.420307159423828
    5. ' ,' → logprob: -9.545307159423828
    6. ')' → logprob: -9.670307159423828
    7. '((' → logprob: -9.795307159423828
    8. ')(' → logprob: -12.295307159423828
    9. ' ' → logprob: -12.670307159423828
    10. '   ' → logprob: -13.295307159423828

Token 611: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001238004770129919
    2. '0' → logprob: -9.000123977661133
    3. ' (' → logprob: -14.875123977661133
    4. ')' → logprob: -17.000123977661133
    5. '   ' → logprob: -17.375123977661133
    6. ' ' → logprob: -17.875123977661133
    7. '[' → logprob: -18.250123977661133
    8. '{' → logprob: -20.375123977661133
    9. ')(' → logprob: -20.750123977661133
    10. '(
' → logprob: -20.875123977661133

Token 612: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '(' → logprob: -19.625
    4. '۰' → logprob: -19.625
    5. ')' → logprob: -20.75
    6. '   ' → logprob: -21.5
    7. '০' → logprob: -21.75
    8. '000' → logprob: -22.0
    9. '०' → logprob: -22.25
    10. '00' → logprob: -22.5

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6060808522743173e-05
    2. ' ,' → logprob: -10.875025749206543
    3. '0' → logprob: -12.000025749206543
    4. ',
' → logprob: -14.500025749206543
    5. '
' → logprob: -15.250025749206543
    6. '```' → logprob: -16.87502670288086
    7. ' ' → logprob: -17.75002670288086
    8. '<|end|>' → logprob: -17.87502670288086
    9. ')' → logprob: -18.00002670288086
    10. '‌,' → logprob: -18.00002670288086

Token 614: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. ')' → logprob: -16.875
    4. '   ' → logprob: -19.875
    5. 'start' → logprob: -20.0
    6. '00' → logprob: -20.375
    7. '```' → logprob: -20.375
    8. '۰' → logprob: -20.5
    9. ',' → logprob: -20.75
    10. '`' → logprob: -21.6875

Token 615: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.577007532119751
    2. ',start' → logprob: -0.827007532119751
    3. 'start' → logprob: -6.952007293701172
    4. ')' → logprob: -10.077007293701172
    5. '[start' → logprob: -10.327007293701172
    6. ',*' → logprob: -11.202007293701172
    7. '```' → logprob: -12.702007293701172
    8. '*' → logprob: -12.827007293701172
    9. ',user' → logprob: -12.952007293701172
    10. ' ,' → logprob: -13.327007293701172

Token 616: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.392824874026701e-05
    2. '0' → logprob: -10.62503433227539
    3. '[
' → logprob: -11.87503433227539
    4. ')' → logprob: -13.50003433227539
    5. '```' → logprob: -14.87503433227539
    6. ',' → logprob: -15.50003433227539
    7. ' [' → logprob: -15.75003433227539
    8. '<|end|>' → logprob: -16.12503433227539
    9. 'x' → logprob: -16.25003433227539
    10. '
' → logprob: -16.75003433227539

Token 617: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.875
    3. '1' → logprob: -17.25
    4. ' ' → logprob: -17.25
    5. '```' → logprob: -17.25
    6. '۰' → logprob: -18.625
    7. '[' → logprob: -19.0
    8. '   ' → logprob: -19.5625
    9. '])' → logprob: -19.8125
    10. ']' → logprob: -19.875

Token 618: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3893052041530609
    2. ',start' → logprob: -1.1393052339553833
    3. '],' → logprob: -6.139305114746094
    4. '],[' → logprob: -9.639305114746094
    5. ' ,' → logprob: -9.764305114746094
    6. '])' → logprob: -10.139305114746094
    7. ']' → logprob: -10.514305114746094
    8. '),' → logprob: -11.014305114746094
    9. '[start' → logprob: -11.014305114746094
    10. 'start' → logprob: -11.389305114746094

Token 619: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.320199877838604e-07
    2. ' start' → logprob: -14.875
    3. '[start' → logprob: -20.0
    4. 'star' → logprob: -22.0
    5. '	start' → logprob: -22.125
    6. '(start' → logprob: -22.875
    7. '=start' → logprob: -22.875
    8. 's' → logprob: -23.0
    9. ':start' → logprob: -23.375
    10. ',start' → logprob: -23.75

Token 620: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6789137084269896e-05
    2. '1' → logprob: -10.25003719329834
    3. '][' → logprob: -15.00003719329834
    4. '```' → logprob: -15.12503719329834
    5. '])' → logprob: -15.62503719329834
    6. '[
' → logprob: -15.62503719329834
    7. ']' → logprob: -16.375036239624023
    8. '-' → logprob: -16.625036239624023
    9. ')' → logprob: -16.875036239624023
    10. ' ' → logprob: -17.125036239624023

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. '```' → logprob: -15.875000953674316
    4. '
' → logprob: -17.125
    5. '0' → logprob: -17.3125
    6. '``' → logprob: -18.4375
    7. '-' → logprob: -18.6875
    8. ']' → logprob: -18.75
    9. ' ' → logprob: -18.75
    10. '۱' → logprob: -18.9375

Token 622: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009300446254201233
    2. ')' → logprob: -7.000929832458496
    3. ')))' → logprob: -11.250929832458496
    4. '))
' → logprob: -12.250929832458496
    5. ' ))' → logprob: -15.000929832458496
    6. '),' → logprob: -16.625930786132812
    7. ')
' → logprob: -16.750930786132812
    8. '))

' → logprob: -17.000930786132812
    9. '));' → logprob: -17.000930786132812
    10. '))
' → logprob: -17.375930786132812

Token 623: 'dist' (ID: 24126)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1274547427892685
    2. 'dist' → logprob: -2.1274547576904297
    3. ' while' → logprob: -8.25245475769043
    4. 'visited' → logprob: -8.62745475769043
    5. '```' → logprob: -10.25245475769043
    6. '
' → logprob: -11.00245475769043
    7. ')' → logprob: -11.12745475769043
    8. '(dist' → logprob: -11.75245475769043
    9. ' dist' → logprob: -12.75245475769043
    10. 'While' → logprob: -13.62745475769043

Token 624: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0005251537077128887
    2. '[start' → logprob: -7.625524997711182
    3. '[' → logprob: -10.25052547454834
    4. '[((' → logprob: -14.00052547454834
    5. '```' → logprob: -15.25052547454834
    6. 'start' → logprob: -15.50052547454834
    7. ' =' → logprob: -15.75052547454834
    8. '=(' → logprob: -16.125524520874023
    9. '[
' → logprob: -16.625524520874023
    10. '=' → logprob: -17.250524520874023

Token 625: 'start' (ID: 5236)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4746154546737671
    2. 'start' → logprob: -0.9746154546737671
    3. '(start' → logprob: -7.974615573883057
    4. '(' → logprob: -8.599615097045898
    5. ' start' → logprob: -12.224615097045898
    6. ' ' → logprob: -13.349615097045898
    7. '[start' → logprob: -14.224615097045898
    8. ',start' → logprob: -14.787115097045898
    9. '=start' → logprob: -15.349615097045898
    10. ')' → logprob: -15.724615097045898

Token 626: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.523948907968588e-05
    2. '0' → logprob: -10.875035285949707
    3. ')]' → logprob: -11.625035285949707
    4. ')][' → logprob: -12.625035285949707
    5. ')])' → logprob: -13.875035285949707
    6. ')' → logprob: -14.000035285949707
    7. '(' → logprob: -14.500035285949707
    8. '```' → logprob: -15.000035285949707
    9. '
' → logprob: -15.625035285949707
    10. '

' → logprob: -16.00003433227539

Token 627: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.500001907348633
    3. '2' → logprob: -14.625001907348633
    4. '
' → logprob: -15.250001907348633
    5. ' ' → logprob: -15.625001907348633
    6. '```' → logprob: -16.937501907348633
    7. '1' → logprob: -17.125001907348633
    8. '(' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '
' → logprob: -18.000001907348633

Token 628: '],' (ID: 2155)
  Prédit: ',start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',start' → logprob: -0.029789254069328308
    2. ',' → logprob: -3.5297892093658447
    3. '[start' → logprob: -11.029788970947266
    4. ' ,' → logprob: -11.779788970947266
    5. ',end' → logprob: -12.529788970947266
    6. '),(' → logprob: -13.029788970947266
    7. 'start' → logprob: -13.404788970947266
    8. ',state' → logprob: -13.529788970947266
    9. '],[' → logprob: -14.404788970947266
    10. '),' → logprob: -14.404788970947266

Token 629: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.3856492842023727e-06
    2. ' start' → logprob: -13.625000953674316
    3. '[start' → logprob: -17.000001907348633
    4. '(start' → logprob: -19.000001907348633
    5. '
' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '	start' → logprob: -20.125001907348633
    8. ' ' → logprob: -20.875001907348633
    9. ',start' → logprob: -20.875001907348633
    10. '=start' → logprob: -20.875001907348633

Token 630: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.266944157890975e-05
    2. '1' → logprob: -10.000072479248047
    3. 'start' → logprob: -11.000072479248047
    4. '[start' → logprob: -11.875072479248047
    5. '][' → logprob: -14.250072479248047
    6. ',' → logprob: -14.375072479248047
    7. ',start' → logprob: -14.375072479248047
    8. '0' → logprob: -14.750072479248047
    9. '(' → logprob: -14.875072479248047
    10. '[
' → logprob: -15.500072479248047

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007418032735586166
    2. 'start' → logprob: -5.257418155670166
    3. '0' → logprob: -6.132418155670166
    4. '[' → logprob: -12.757417678833008
    5. ' ' → logprob: -12.882417678833008
    6. '[start' → logprob: -13.382417678833008
    7. ' start' → logprob: -13.507417678833008
    8. '
' → logprob: -14.382417678833008
    9. '-' → logprob: -14.507417678833008
    10. '(start' → logprob: -15.007417678833008

Token 632: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005133562372066081
    2. '0' → logprob: -7.625513553619385
    3. ' ,' → logprob: -10.625513076782227
    4. '),' → logprob: -14.500513076782227
    5. ',
' → logprob: -15.625513076782227
    6. ')]' → logprob: -16.250513076782227
    7. '],' → logprob: -16.625513076782227
    8. ')][' → logprob: -17.000513076782227
    9. '`,' → logprob: -17.375513076782227
    10. ')' → logprob: -17.500513076782227

Token 633: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. ')' → logprob: -21.375
    4. '۰' → logprob: -21.75
    5. '```' → logprob: -22.125
    6. '   ' → logprob: -22.25
    7. '00' → logprob: -22.875
    8. '０' → logprob: -23.25
    9. '﻿' → logprob: -23.5625
    10. '000' → logprob: -23.625

Token 634: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007326744962483644
    2. ')' → logprob: -7.375732898712158
    3. ' )' → logprob: -9.625732421875
    4. ']' → logprob: -10.500732421875
    5. '])' → logprob: -11.750732421875
    6. '0' → logprob: -13.000732421875
    7. ')])' → logprob: -14.250732421875
    8. '))' → logprob: -15.000732421875
    9. ',' → logprob: -15.000732421875
    10. ']=' → logprob: -15.250732421875

Token 635: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005390756763517857
    2. ' =' → logprob: -5.255390644073486
    3. ']=' → logprob: -9.380391120910645
    4. ']' → logprob: -9.630391120910645
    5. ')=' → logprob: -12.255391120910645
    6. ')' → logprob: -13.255391120910645
    7. '=
' → logprob: -16.005390167236328
    8. '0' → logprob: -16.380390167236328
    9. '}=' → logprob: -16.380390167236328
    10. '=}' → logprob: -17.630390167236328

Token 636: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۰' → logprob: -19.5
    4. '０' → logprob: -22.375
    5. '000' → logprob: -22.625
    6. '০' → logprob: -22.875
    7. '00' → logprob: -22.875
    8. '   ' → logprob: -23.25
    9. '०' → logprob: -23.5625
    10. '٠' → logprob: -24.0

Token 637: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '۰' → logprob: -19.25
    4. '０' → logprob: -21.5
    5. '০' → logprob: -22.125
    6. '000' → logprob: -22.375
    7. '00' → logprob: -22.625
    8. '०' → logprob: -22.75
    9. '{' → logprob: -23.0
    10. '(' → logprob: -23.3125

Token 638: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0006762159755453467
    2. ' while' → logprob: -7.625676155090332
    3. ')' → logprob: -9.250676155090332
    4. '
' → logprob: -10.250676155090332
    5. 'While' → logprob: -10.250676155090332
    6. '<|end|>' → logprob: -11.625676155090332
    7. '```' → logprob: -11.750676155090332
    8. '	while' → logprob: -12.750676155090332
    9. 'steps' → logprob: -14.750676155090332
    10. ',' → logprob: -15.375676155090332

Token 639: 'res' (ID: 430)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1875571544806007e-05
    2. ' while' → logprob: -11.375011444091797
    3. 'While' → logprob: -15.375011444091797
    4. '```' → logprob: -17.500011444091797
    5. '	while' → logprob: -17.625011444091797
    6. 'steps' → logprob: -18.000011444091797
    7. 'visited' → logprob: -18.125011444091797
    8. ')' → logprob: -18.500011444091797
    9. 'wh' → logprob: -19.375011444091797
    10. '
' → logprob: -19.625011444091797

Token 640: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759646892547607
    2. '=' → logprob: -0.8259646892547607
    3. 'ult' → logprob: -11.20096492767334
    4. 's' → logprob: -12.32596492767334
    5. ' ' → logprob: -13.82596492767334
    6. '=None' → logprob: -13.82596492767334
    7. ',' → logprob: -13.82596492767334
    8. '=[]' → logprob: -13.95096492767334
    9. 'ults' → logprob: -14.32596492767334
    10. '_' → logprob: -14.57596492767334

Token 641: ' -' (ID: 533)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08394413441419601
    2. '-' → logprob: -2.583944082260132
    3. '-max' → logprob: -5.583944320678711
    4. 'None' → logprob: -6.708944320678711
    5. 'float' → logprob: -10.833944320678711
    6. ' -' → logprob: -10.958944320678711
    7. ' max' → logprob: -11.208944320678711
    8. '-m' → logprob: -12.208944320678711
    9. '10' → logprob: -13.083944320678711
    10. '0' → logprob: -13.208944320678711

Token 642: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. 'max' → logprob: -14.000001907348633
    3. ' ' → logprob: -15.125001907348633
    4. '2' → logprob: -15.375001907348633
    5. '10' → logprob: -17.000001907348633
    6. '999' → logprob: -18.125001907348633
    7. '99' → logprob: -18.250001907348633
    8. ' max' → logprob: -18.375001907348633
    9. '```' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.625001907348633

Token 643: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -2.935296834039036e-06
    2. ' while' → logprob: -13.12500286102295
    3. '
' → logprob: -14.12500286102295
    4. '```' → logprob: -16.375003814697266
    5. 'While' → logprob: -16.875003814697266
    6. ')' → logprob: -19.875003814697266
    7. '``' → logprob: -20.000003814697266
    8. '	while' → logprob: -20.375003814697266
    9. '

' → logprob: -21.000003814697266
    10. 'wh' → logprob: -21.250003814697266

Token 644: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1472419600977446e-06
    2. ' while' → logprob: -13.750000953674316
    3. '```' → logprob: -17.625001907348633
    4. 'While' → logprob: -18.000001907348633
    5. '	while' → logprob: -19.125001907348633
    6. '
' → logprob: -23.500001907348633
    7. '``' → logprob: -23.875001907348633
    8. ')' → logprob: -24.125001907348633
    9. 'wh' → logprob: -24.250001907348633
    10. ' While' → logprob: -24.250001907348633

Token 645: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -2.546478935983032e-05
    2. ' h' → logprob: -10.750025749206543
    3. 'h' → logprob: -12.625025749206543
    4. '(h' → logprob: -14.625025749206543
    5. 'len' → logprob: -16.375024795532227
    6. '	h' → logprob: -16.500024795532227
    7. '```' → logprob: -18.875024795532227
    8. '[h' → logprob: -19.000024795532227
    9. '
' → logprob: -19.625024795532227
    10. '   ' → logprob: -19.875024795532227

Token 646: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.2200749754119897e-06
    2. 'hq' → logprob: -13.750001907348633
    3. 'qh' → logprob: -15.625001907348633
    4. '
' → logprob: -15.750001907348633
    5. '(q' → logprob: -15.750001907348633
    6. 'Q' → logprob: -16.250001907348633
    7. 'qs' → logprob: -16.500001907348633
    8. '(' → logprob: -17.000001907348633
    9. '

' → logprob: -17.250001907348633
    10. 'qc' → logprob: -17.500001907348633

Token 647: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020317768212407827
    2. ':
' → logprob: -6.3770318031311035
    3. '[' → logprob: -8.502031326293945
    4. '!=' → logprob: -9.502031326293945
    5. '):' → logprob: -10.877031326293945
    6. ',' → logprob: -11.752031326293945
    7. '=' → logprob: -12.002031326293945
    8. '>:' → logprob: -12.502031326293945
    9. '==' → logprob: -13.127031326293945
    10. '):
' → logprob: -13.252031326293945

Token 648: '   ' (ID: 271)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.031111547723412514
    2. ' steps' → logprob: -3.531111478805542
    3. 'step' → logprob: -6.781111717224121
    4. '   ' → logprob: -9.031111717224121
    5. '0' → logprob: -10.281111717224121
    6. '```' → logprob: -10.781111717224121
    7. ',' → logprob: -11.781111717224121
    8. ' step' → logprob: -12.031111717224121
    9. 's' → logprob: -12.031111717224121
    10. '_steps' → logprob: -12.031111717224121

Token 649: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -5.872261317563243e-05
    2. 'step' → logprob: -10.375059127807617
    3. ' steps' → logprob: -11.000059127807617
    4. '   ' → logprob: -12.375059127807617
    5. 's' → logprob: -12.875059127807617
    6. 'cur' → logprob: -13.000059127807617
    7. '```' → logprob: -15.000059127807617
    8. 'st' → logprob: -15.125059127807617
    9. 'c' → logprob: -15.375059127807617
    10. '_steps' → logprob: -15.625059127807617

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007222028798423707
    2. ',time' → logprob: -7.250722408294678
    3. ',t' → logprob: -11.87572193145752
    4. ' ,' → logprob: -12.62572193145752
    5. 'time' → logprob: -14.00072193145752
    6. ',current' → logprob: -14.50072193145752
    7. ',c' → logprob: -15.12572193145752
    8. ',
' → logprob: -15.87572193145752
    9. '_,' → logprob: -17.500722885131836
    10. ',tp' → logprob: -17.875722885131836

Token 651: ' t' (ID: 260)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.10027934610843658
    2. 't' → logprob: -2.3502793312072754
    3. ' time' → logprob: -9.850279808044434
    4. ' t' → logprob: -10.850279808044434
    5. 'cur' → logprob: -15.975279808044434
    6. '   ' → logprob: -15.975279808044434
    7. 'current' → logprob: -16.100278854370117
    8. 'curr' → logprob: -16.350278854370117
    9. '```' → logprob: -16.475278854370117
    10. 'ti' → logprob: -17.475278854370117

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000204851632588543
    2. ',x' → logprob: -8.875205039978027
    3. '=' → logprob: -10.625205039978027
    4. ' ,' → logprob: -10.875205039978027
    5. '   ' → logprob: -11.875205039978027
    6. ',t' → logprob: -12.375205039978027
    7. 'x' → logprob: -12.750205039978027
    8. '_,' → logprob: -12.750205039978027
    9. ',next' → logprob: -13.500205039978027
    10. ' =' → logprob: -14.625205039978027

Token 653: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.696889623621246e-06
    2. ' x' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.000001907348633
    4. '```' → logprob: -17.250001907348633
    5. '
' → logprob: -18.875001907348633
    6. '	x' → logprob: -19.125001907348633
    7. '    
' → logprob: -19.875001907348633
    8. '

' → logprob: -20.500001907348633
    9. '``' → logprob: -20.750001907348633
    10. 'i' → logprob: -21.125001907348633

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020473242329899222
    2. ',y' → logprob: -8.625205039978027
    3. ' ,' → logprob: -10.625205039978027
    4. '_,' → logprob: -14.375205039978027
    5. ',x' → logprob: -15.875205039978027
    6. '   ' → logprob: -16.62520408630371
    7. '=' → logprob: -17.87520408630371
    8. 'y' → logprob: -18.00020408630371
    9. ',j' → logprob: -18.00020408630371
    10. ',w' → logprob: -18.50020408630371

Token 655: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.872261317563243e-05
    2. ' y' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.125059127807617
    4. '    ' → logprob: -17.625059127807617
    5. ' ' → logprob: -18.125059127807617
    6. '  ' → logprob: -18.750059127807617
    7. '	y' → logprob: -19.250059127807617
    8. '    
' → logprob: -20.375059127807617
    9. '
' → logprob: -20.500059127807617
    10. 'x' → logprob: -20.500059127807617

Token 656: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693534791469574
    2. ' =' → logprob: -2.1269352436065674
    3. ')' → logprob: -12.501935005187988
    4. '   ' → logprob: -12.751935005187988
    5. ')=' → logprob: -15.126935005187988
    6. ' ' → logprob: -15.751935005187988
    7. '=
' → logprob: -16.001935958862305
    8. ',' → logprob: -16.376935958862305
    9. 'tokens' → logprob: -17.751935958862305
    10. '=line' → logprob: -17.751935958862305

Token 657: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -3.7697225252486533e-06
    2. ' he' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.625003814697266
    4. 'heap' → logprob: -19.625003814697266
    5. 'h' → logprob: -22.125003814697266
    6. 'He' → logprob: -23.250003814697266
    7. '  ' → logprob: -23.500003814697266
    8. ' ' → logprob: -24.125003814697266
    9. 'ha' → logprob: -24.250003814697266
    10. '.he' → logprob: -24.375003814697266

Token 658: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.054500666621607e-06
    2. 'ap' → logprob: -12.87500286102295
    3. 'q' → logprob: -15.12500286102295
    4. 'pp' → logprob: -16.500003814697266
    5. 'p' → logprob: -18.125003814697266
    6. '```' → logprob: -18.875003814697266
    7. 'a' → logprob: -19.250003814697266
    8. ' app' → logprob: -19.500003814697266
    9. '
' → logprob: -19.750003814697266
    10. 'appe' → logprob: -20.125003814697266

Token 659: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.013266702182590961
    2. 'app' → logprob: -4.513266563415527
    3. 'ap' → logprob: -6.638266563415527
    4. 'pop' → logprob: -7.013266563415527
    5. 'p' → logprob: -12.138266563415527
    6. 'q' → logprob: -14.888266563415527
    7. 'ush' → logprob: -15.263266563415527
    8. 'pp' → logprob: -15.388266563415527
    9. '```' → logprob: -15.388266563415527
    10. 'Pop' → logprob: -15.513266563415527

Token 660: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.451116051815916e-05
    2. 'hq' → logprob: -12.250024795532227
    3. '   ' → logprob: -12.375024795532227
    4. '(
' → logprob: -12.875024795532227
    5. ')' → logprob: -13.000024795532227
    6. '(' → logprob: -13.125024795532227
    7. ',h' → logprob: -13.125024795532227
    8. '
' → logprob: -13.250024795532227
    9. ' (' → logprob: -13.500024795532227
    10. ',' → logprob: -13.500024795532227

Token 661: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. ')' → logprob: -17.375
    3. '_q' → logprob: -18.0
    4. '
' → logprob: -19.5
    5. ')
' → logprob: -19.625
    6. '	q' → logprob: -20.0
    7. '(' → logprob: -20.375
    8. ' q' → logprob: -20.5
    9. 'qs' → logprob: -20.625
    10. 'Q' → logprob: -20.875

Token 662: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011135188862681389
    2. ')
' → logprob: -4.511135101318359
    3. '   ' → logprob: -9.38613510131836
    4. ')
' → logprob: -13.13613510131836
    5. ')

' → logprob: -14.01113510131836
    6. ' )' → logprob: -16.01113510131836
    7. ')`' → logprob: -16.26113510131836
    8. '),' → logprob: -16.63613510131836
    9. '
' → logprob: -16.63613510131836
    10. ')`
' → logprob: -16.88613510131836

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25305652618408203
    2. 'if' → logprob: -1.503056526184082
    3. ' if' → logprob: -6.878056526184082
    4. '    
' → logprob: -9.378056526184082
    5. '
' → logprob: -12.378056526184082
    6. '```' → logprob: -12.878056526184082
    7. '	if' → logprob: -13.503056526184082
    8. '#' → logprob: -13.628056526184082
    9. '  ' → logprob: -14.753056526184082
    10. '       ' → logprob: -14.878056526184082

Token 664: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07914622128009796
    2. 'key' → logprob: -2.579146146774292
    3. 'state' → logprob: -8.829146385192871
    4. '   ' → logprob: -9.204146385192871
    5. ' if' → logprob: -12.579146385192871
    6. '#' → logprob: -12.829146385192871
    7. 'pos' → logprob: -13.579146385192871
    8. ' key' → logprob: -14.329146385192871
    9. '    
' → logprob: -14.579146385192871
    10. 'area' → logprob: -14.954146385192871

Token 665: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001410850090906024
    2. '(t' → logprob: -9.125141143798828
    3. ' (' → logprob: -10.500141143798828
    4. 'x' → logprob: -13.375141143798828
    5. '(' → logprob: -13.875141143798828
    6. '   ' → logprob: -14.250141143798828
    7. '(start' → logprob: -15.000141143798828
    8. '(res' → logprob: -15.375141143798828
    9. 't' → logprob: -15.500141143798828
    10. '(goal' → logprob: -15.500141143798828

Token 666: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033832306507974863
    2. '(x' → logprob: -8.000338554382324
    3. ' x' → logprob: -12.875338554382324
    4. ' (' → logprob: -15.750338554382324
    5. '   ' → logprob: -17.375337600708008
    6. '
' → logprob: -17.625337600708008
    7. 't' → logprob: -17.625337600708008
    8. '(t' → logprob: -18.125337600708008
    9. '	x' → logprob: -19.000337600708008
    10. ')x' → logprob: -19.125337600708008

Token 667: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1269662231206894
    2. ',y' → logprob: -2.1269662380218506
    3. ' ,' → logprob: -11.25196647644043
    4. '==' → logprob: -11.37696647644043
    5. ' ==' → logprob: -12.12696647644043
    6. ',x' → logprob: -12.50196647644043
    7. 'y' → logprob: -13.00196647644043
    8. '   ' → logprob: -14.37696647644043
    9. ',
' → logprob: -14.62696647644043
    10. ',n' → logprob: -15.75196647644043

Token 668: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012697174213826656
    2. ')==' → logprob: -4.387697219848633
    3. '==' → logprob: -8.637697219848633
    4. ' )' → logprob: -12.262697219848633
    5. ' ==' → logprob: -12.762697219848633
    6. ']==' → logprob: -13.762697219848633
    7. ',' → logprob: -14.762697219848633
    8. ',)' → logprob: -15.137697219848633
    9. '）' → logprob: -15.387697219848633
    10. ')
' → logprob: -15.512697219848633

Token 669: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16865432262420654
    2. ' ==' → logprob: -1.9186543226242065
    3. ')==' → logprob: -5.043654441833496
    4. ')' → logprob: -6.293654441833496
    5. ']==' → logprob: -9.543654441833496
    6. '==(' → logprob: -10.918654441833496
    7. '==
' → logprob: -12.543654441833496
    8. '```' → logprob: -13.668654441833496
    9. ',' → logprob: -14.168654441833496
    10. ']' → logprob: -15.043654441833496

Token 670: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.0020033421460539103
    2. ' goal' → logprob: -6.252003192901611
    3. '(goal' → logprob: -9.50200366973877
    4. '   ' → logprob: -16.877002716064453
    5. '.goal' → logprob: -18.377002716064453
    6. '_goal' → logprob: -18.502002716064453
    7. 'go' → logprob: -19.377002716064453
    8. 'Goal' → logprob: -20.002002716064453
    9. ' ' → logprob: -20.752002716064453
    10. '(' → logprob: -21.002002716064453

Token 671: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.27347996830940247
    2. 'and' → logprob: -1.52347993850708
    3. ':' → logprob: -3.89847993850708
    4. ':
' → logprob: -7.52347993850708
    5. '   ' → logprob: -7.64847993850708
    6. '	and' → logprob: -11.273480415344238
    7. ':return' → logprob: -12.398480415344238
    8. ' ' → logprob: -12.648480415344238
    9. '       ' → logprob: -12.773480415344238
    10. ' :' → logprob: -13.023480415344238

Token 672: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.127460315823555
    2. '       ' → logprob: -2.127460241317749
    3. 'res' → logprob: -8.377460479736328
    4. ' res' → logprob: -8.502460479736328
    5. ' and' → logprob: -9.377460479736328
    6. ' if' → logprob: -12.252460479736328
    7. '```' → logprob: -12.752460479736328
    8. '	res' → logprob: -13.502460479736328
    9. 'and' → logprob: -13.502460479736328
    10. ':' → logprob: -13.627460479736328

Token 673: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0002614550176076591
    2. '   ' → logprob: -8.250261306762695
    3. ' res' → logprob: -15.750261306762695
    4. 'if' → logprob: -16.875261306762695
    5. '	res' → logprob: -18.500261306762695
    6. '```' → logprob: -18.750261306762695
    7. '_res' → logprob: -20.750261306762695
    8. '``' → logprob: -21.375261306762695
    9. '       ' → logprob: -21.500261306762695
    10. '
' → logprob: -21.625261306762695

Token 674: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=
' → logprob: -17.380233764648438
    4. '＝' → logprob: -17.755233764648438
    5. '=

' → logprob: -17.880233764648438
    6. '   ' → logprob: -18.630233764648438
    7. '=}' → logprob: -19.130233764648438
    8. '=int' → logprob: -20.005233764648438
    9. ',' → logprob: -20.130233764648438
    10. '=True' → logprob: -20.380233764648438

Token 675: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -5.264322317088954e-05
    2. ' steps' → logprob: -9.875052452087402
    3. 'step' → logprob: -14.250052452087402
    4. '   ' → logprob: -14.750052452087402
    5. '0' → logprob: -17.00005340576172
    6. 'Steps' → logprob: -18.37505340576172
    7. '`' → logprob: -19.37505340576172
    8. '_steps' → logprob: -19.37505340576172
    9. '```' → logprob: -19.50005340576172
    10. '.steps' → logprob: -20.00005340576172

Token 676: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025473623536527157
    2. '   ' → logprob: -6.002547264099121
    3. '
' → logprob: -9.627547264099121
    4. '           ' → logprob: -13.377547264099121
    5. '	' → logprob: -13.502547264099121
    6. '	break' → logprob: -14.627547264099121
    7. ',' → logprob: -14.877547264099121
    8. '      ' → logprob: -15.002547264099121
    9. '    
' → logprob: -15.252547264099121
    10. ' ' → logprob: -15.502547264099121

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001955990679562092
    2. '   ' → logprob: -6.251955986022949
    3. 'break' → logprob: -11.00195598602295
    4. ' break' → logprob: -11.87695598602295
    5. '	break' → logprob: -13.12695598602295
    6. '           ' → logprob: -14.12695598602295
    7. '	' → logprob: -14.87695598602295
    8. '
' → logprob: -15.00195598602295
    9. '     ' → logprob: -15.75195598602295
    10. '      ' → logprob: -15.87695598602295

Token 678: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2057560235261917
    2. '   ' → logprob: -1.7057560682296753
    3. '       ' → logprob: -5.455756187438965
    4. ' break' → logprob: -9.955756187438965
    5. '	break' → logprob: -11.330756187438965
    6. '           ' → logprob: -13.455756187438965
    7. '    
' → logprob: -15.705756187438965
    8. '
' → logprob: -16.08075523376465
    9. '     ' → logprob: -16.20575523376465
    10. '  ' → logprob: -16.45575523376465

Token 679: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005210278555750847
    2. '    
' → logprob: -5.7552103996276855
    3. 'if' → logprob: -7.1302103996276855
    4. '
' → logprob: -7.2552103996276855
    5. 'for' → logprob: -8.130209922790527
    6. ' if' → logprob: -9.880209922790527
    7. 'next' → logprob: -10.130209922790527
    8. '  
' → logprob: -10.630209922790527
    9. ' for' → logprob: -11.005209922790527
    10. ' 
' → logprob: -11.005209922790527

Token 680: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7010718584060669
    2. 'for' → logprob: -0.9510718584060669
    3. '   ' → logprob: -2.2010717391967773
    4. 'current' → logprob: -5.826071739196777
    5. 'next' → logprob: -6.326071739196777
    6. '#' → logprob: -7.451071739196777
    7. 'key' → logprob: -7.576071739196777
    8. '```' → logprob: -7.826071739196777
    9. '    
' → logprob: -8.576071739196777
    10. ' for' → logprob: -8.951071739196777

Token 681: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10670258849859238
    2. 'if' → logprob: -2.4817025661468506
    3. 'area' → logprob: -4.73170280456543
    4. 'idx' → logprob: -5.10670280456543
    5. 'current' → logprob: -7.48170280456543
    6. 'ti' → logprob: -7.73170280456543
    7. 'curr' → logprob: -7.85670280456543
    8. 'next' → logprob: -8.10670280456543
    9. 'index' → logprob: -8.23170280456543
    10. 'i' → logprob: -8.48170280456543

Token 682: ' pruning' (ID: 135775)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026743881404399872
    2. 'if' → logprob: -3.6517438888549805
    3. 'area' → logprob: -8.90174388885498
    4. 'idx' → logprob: -9.40174388885498
    5. 'next' → logprob: -9.77674388885498
    6. 'current' → logprob: -9.90174388885498
    7. '   ' → logprob: -10.02674388885498
    8. 'curr' → logprob: -11.02674388885498
    9. 't' → logprob: -11.27674388885498
    10. '#' → logprob: -11.52674388885498

Token 683: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005983081646263599
    2. 'if' → logprob: -7.625598430633545
    3. ' if' → logprob: -9.250597953796387
    4. '    
' → logprob: -11.875597953796387
    5. '
' → logprob: -12.000597953796387
    6. '   ' → logprob: -15.125597953796387
    7. '	if' → logprob: -15.375597953796387
    8. ',' → logprob: -16.000598907470703
    9. '       ' → logprob: -16.250598907470703
    10. '  ' → logprob: -16.625598907470703

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012953972443938255
    2. 'if' → logprob: -4.387953758239746
    3. ' if' → logprob: -7.762953758239746
    4. 'key' → logprob: -11.262953758239746
    5. ' key' → logprob: -13.387953758239746
    6. '```' → logprob: -13.512953758239746
    7. '    
' → logprob: -13.762953758239746
    8. 'for' → logprob: -14.137953758239746
    9. '   ' → logprob: -14.387953758239746
    10. '
' → logprob: -14.762953758239746

Token 685: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.049414850771427155
    2. 'key' → logprob: -3.049414873123169
    3. '   ' → logprob: -7.29941463470459
    4. 'state' → logprob: -8.92441463470459
    5. ' if' → logprob: -11.54941463470459
    6. '    
' → logprob: -12.54941463470459
    7. 'current' → logprob: -13.67441463470459
    8. ' key' → logprob: -13.67441463470459
    9. '```' → logprob: -14.29941463470459
    10. 'time' → logprob: -14.79941463470459

Token 686: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011553130112588406
    2. '(dist' → logprob: -5.1365532875061035
    3. '(x' → logprob: -6.1365532875061035
    4. '(' → logprob: -6.5115532875061035
    5. 'steps' → logprob: -7.2615532875061035
    6. '(t' → logprob: -7.2615532875061035
    7. 't' → logprob: -7.7615532875061035
    8. '((' → logprob: -9.636552810668945
    9. ' dist' → logprob: -10.511552810668945
    10. 'visited' → logprob: -11.761552810668945

Token 687: '.get' (ID: 775)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.31326761841773987
    2. '.get' → logprob: -1.3132675886154175
    3. '(x' → logprob: -12.688267707824707
    4. '   ' → logprob: -13.563267707824707
    5. '[x' → logprob: -14.688267707824707
    6. '((' → logprob: -14.813267707824707
    7. 'get' → logprob: -15.563267707824707
    8. '[' → logprob: -15.938267707824707
    9. '(' → logprob: -16.06326675415039
    10. '```' → logprob: -16.06326675415039

Token 688: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002587192924693227
    2. '(x' → logprob: -6.00258731842041
    3. '(' → logprob: -9.12758731842041
    4. '   ' → logprob: -13.37758731842041
    5. ' ' → logprob: -14.75258731842041
    6. ' ((' → logprob: -15.12758731842041
    7. '  ' → logprob: -15.62758731842041
    8. ' (' → logprob: -15.87758731842041
    9. '[(' → logprob: -16.002586364746094
    10. '(key' → logprob: -16.377586364746094

Token 689: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.438573680294212e-06
    2. '(x' → logprob: -12.375005722045898
    3. ' x' → logprob: -13.625005722045898
    4. ')x' → logprob: -18.7500057220459
    5. '	x' → logprob: -20.0000057220459
    6. '   ' → logprob: -20.3750057220459
    7. '
' → logprob: -20.3750057220459
    8. ',x' → logprob: -20.8750057220459
    9. '{x' → logprob: -21.3750057220459
    10. '[x' → logprob: -21.8750057220459

Token 690: ',y' (ID: 16103)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5429231524467468
    2. ',y' → logprob: -1.2929232120513916
    3. ',' → logprob: -2.1679232120513916
    4. 'x' → logprob: -3.9179232120513916
    5. ',x' → logprob: -4.7929229736328125
    6. 'y' → logprob: -7.1679229736328125
    7. ',t' → logprob: -7.9179229736328125
    8. '0' → logprob: -8.292922973632812
    9. ' ,' → logprob: -9.417922973632812
    10. '(x' → logprob: -9.792922973632812

Token 691: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.023276465013623238
    2. ',' → logprob: -3.7732765674591064
    3. ' ,' → logprob: -10.773276329040527
    4. '),' → logprob: -11.898276329040527
    5. '   ' → logprob: -13.773276329040527
    6. 't' → logprob: -14.648276329040527
    7. '
' → logprob: -15.523276329040527
    8. '  ' → logprob: -16.148277282714844
    9. ',k' → logprob: -16.148277282714844
    10. ' ' → logprob: -16.273277282714844

Token 692: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.015144038014113903
    2. '],' → logprob: -4.265143871307373
    3. ',' → logprob: -7.515143871307373
    4. ')' → logprob: -8.515144348144531
    5. ',),' → logprob: -9.890144348144531
    6. '))' → logprob: -10.515144348144531
    7. '),(' → logprob: -10.765144348144531
    8. '   ' → logprob: -10.890144348144531
    9. '},' → logprob: -11.015144348144531
    10. '>,' → logprob: -11.015144348144531

Token 693: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.194596767425537
    2. '0' → logprob: -1.569596767425537
    3. '-' → logprob: -1.819596767425537
    4. 'None' → logprob: -1.944596767425537
    5. 'float' → logprob: -2.319596767425537
    6. ')<' → logprob: -3.319596767425537
    7. '<float' → logprob: -3.694596767425537
    8. 'lambda' → logprob: -4.694596767425537
    9. '<' → logprob: -5.819596767425537
    10. 'inf' → logprob: -6.069596767425537

Token 694: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -2.935296834039036e-06
    2. 'int' → logprob: -13.50000286102295
    3. ')' → logprob: -13.62500286102295
    4. 'value' → logprob: -16.875003814697266
    5. '(size' → logprob: -17.125003814697266
    6. ')>' → logprob: -17.875003814697266
    7. 'sizes' → logprob: -18.125003814697266
    8. '))' → logprob: -18.375003814697266
    9. '<size' → logprob: -18.375003814697266
    10. 'max' → logprob: -18.500003814697266

Token 695: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2087787240743637
    2. ',' → logprob: -1.708778738975525
    3. ')<' → logprob: -5.2087788581848145
    4. ')>' → logprob: -6.9587788581848145
    5. ',)' → logprob: -8.083778381347656
    6. ')!=' → logprob: -8.833778381347656
    7. '),' → logprob: -9.208778381347656
    8. '>)' → logprob: -9.208778381347656
    9. '`)' → logprob: -10.083778381347656
    10. '   ' → logprob: -10.333778381347656

Token 696: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0032221528235822916
    2. ' <' → logprob: -5.7532219886779785
    3. '<int' → logprob: -11.628222465515137
    4. '>' → logprob: -12.253222465515137
    5. '<th' → logprob: -12.503222465515137
    6. '<ll' → logprob: -12.628222465515137
    7. '<size' → logprob: -13.003222465515137
    8. '<m' → logprob: -13.003222465515137
    9. '<com' → logprob: -13.128222465515137
    10. '<w' → logprob: -13.753222465515137

Token 697: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -9.014684110297821e-06
    2. ' steps' → logprob: -11.625008583068848
    3. 'step' → logprob: -19.250009536743164
    4. '   ' → logprob: -20.125009536743164
    5. '_steps' → logprob: -20.750009536743164
    6. ' ' → logprob: -20.750009536743164
    7. '.steps' → logprob: -21.250009536743164
    8. 'Steps' → logprob: -22.000009536743164
    9. '	' → logprob: -22.375009536743164
    10. 'esteps' → logprob: -22.625009536743164

Token 698: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5858238339424133
    2. '   ' → logprob: -1.2108237743377686
    3. '       ' → logprob: -2.3358237743377686
    4. ':
' → logprob: -3.0858237743377686
    5. ' continue' → logprob: -6.585824012756348
    6. 'continue' → logprob: -6.835824012756348
    7. '	continue' → logprob: -7.835824012756348
    8. ' or' → logprob: -9.710824012756348
    9. '_continue' → logprob: -10.585824012756348
    10. ':
' → logprob: -11.710824012756348

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029829293489456177
    2. '   ' → logprob: -5.877983093261719
    3. 'continue' → logprob: -9.377983093261719
    4. ' continue' → logprob: -9.502983093261719
    5. '	continue' → logprob: -11.002983093261719
    6. '	' → logprob: -13.627983093261719
    7. '```' → logprob: -15.002983093261719
    8. '           ' → logprob: -15.877983093261719
    9. '     ' → logprob: -16.12798309326172
    10. '	   ' → logprob: -16.37798309326172

Token 700: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.005120023153722286
    2. ' continue' → logprob: -6.005119800567627
    3. '   ' → logprob: -6.255119800567627
    4. '       ' → logprob: -7.255119800567627
    5. '	continue' → logprob: -11.255120277404785
    6. 'contin' → logprob: -14.630120277404785
    7. 'continu' → logprob: -16.13011932373047
    8. '_continue' → logprob: -16.25511932373047
    9. '```' → logprob: -16.63011932373047
    10. '           ' → logprob: -18.25511932373047

Token 701: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.290753573179245
    2. '   ' → logprob: -1.5407536029815674
    3. ' for' → logprob: -3.2907536029815674
    4. '    
' → logprob: -7.665753364562988
    5. '
' → logprob: -8.790753364562988
    6. '```' → logprob: -9.165753364562988
    7. ' 
' → logprob: -10.790753364562988
    8. 'next' → logprob: -11.040753364562988
    9. 'i' → logprob: -11.165753364562988
    10. 't' → logprob: -11.165753364562988

Token 702: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025014756247401237
    2. '   ' → logprob: -4.150014877319336
    3. ' for' → logprob: -4.775014877319336
    4. 'if' → logprob: -7.775014877319336
    5. 'next' → logprob: -10.150014877319336
    6. '```' → logprob: -11.400014877319336
    7. '#' → logprob: -11.525014877319336
    8. '    
' → logprob: -11.525014877319336
    9. '	for' → logprob: -12.650014877319336
    10. 't' → logprob: -13.400014877319336

Token 703: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0030318982899188995
    2. 'if' (adapté à ' if') → logprob: -6.1280317306518555
    3. 'next' → logprob: -8.128031730651855
    4. '   ' → logprob: -8.378031730651855
    5. 'area' → logprob: -9.128031730651855
    6. 'nt' → logprob: -9.378031730651855
    7. 'current' → logprob: -10.253031730651855
    8. '#' → logprob: -10.378031730651855
    9. ' for' → logprob: -11.003031730651855
    10. 'curr' → logprob: -11.628031730651855

Token 704: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.026403989642858505
    2. ' t' → logprob: -3.6514039039611816
    3. '   ' → logprob: -9.52640438079834
    4. '(t' → logprob: -11.65140438079834
    5. ' ' → logprob: -11.90140438079834
    6. 'time' → logprob: -12.65140438079834
    7. 'steps' → logprob: -13.40140438079834
    8. ' (' → logprob: -13.52640438079834
    9. '	t' → logprob: -13.65140438079834
    10. '  ' → logprob: -13.65140438079834

Token 705: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08130888640880585
    2. ' >' → logprob: -3.2063088417053223
    3. '>=' → logprob: -3.3313088417053223
    4. ' >=' → logprob: -6.331308841705322
    5. '==' → logprob: -9.83130931854248
    6. ' ==' → logprob: -12.83130931854248
    7. '+' → logprob: -13.70630931854248
    8. '   ' → logprob: -14.45630931854248
    9. ' ' → logprob: -15.20630931854248
    10. '>
' → logprob: -15.58130931854248

Token 706: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.941850526549388e-06
    2. ' max' → logprob: -11.750007629394531
    3. '
' → logprob: -19.25000762939453
    4. '	max' → logprob: -19.62500762939453
    5. '=max' → logprob: -19.62500762939453
    6. '   ' → logprob: -19.87500762939453
    7. '(max' → logprob: -20.37500762939453
    8. '[max' → logprob: -21.62500762939453
    9. '```' → logprob: -21.87500762939453
    10. 'maxlength' → logprob: -22.00000762939453

Token 707: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.666993507067673e-05
    2. 'time' → logprob: -10.250036239624023
    3. 'max' → logprob: -13.875036239624023
    4. '_max' → logprob: -15.625036239624023
    5. '_' → logprob: -17.500036239624023
    6. '_TIME' → logprob: -17.625036239624023
    7. '_t' → logprob: -17.875036239624023
    8. '   ' → logprob: -17.875036239624023
    9. '```' → logprob: -18.000036239624023
    10. 'Time' → logprob: -18.000036239624023

Token 708: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7508152723312378
    2. '       ' → logprob: -0.8758152723312378
    3. ':
' → logprob: -2.3758153915405273
    4. '   ' → logprob: -4.000815391540527
    5. 'continue' → logprob: -9.250815391540527
    6. ',' → logprob: -10.500815391540527
    7. '	continue' → logprob: -10.625815391540527
    8. ' continue' → logprob: -10.875815391540527
    9. '	' → logprob: -11.125815391540527
    10. '           ' → logprob: -11.375815391540527

Token 709: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018520120065659285
    2. '   ' → logprob: -6.751852035522461
    3. 'continue' → logprob: -7.376852035522461
    4. ' continue' → logprob: -9.876852035522461
    5. '	continue' → logprob: -12.626852035522461
    6. '```' → logprob: -14.501852035522461
    7. '	' → logprob: -14.751852035522461
    8. '           ' → logprob: -15.501852035522461
    9. '     ' → logprob: -16.25185203552246
    10. ' ' → logprob: -16.87685203552246

Token 710: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0005916363443247974
    2. '   ' → logprob: -7.50059175491333
    3. ' continue' → logprob: -10.250591278076172
    4. '       ' → logprob: -13.000591278076172
    5. '	continue' → logprob: -14.500591278076172
    6. 'break' → logprob: -14.500591278076172
    7. '```' → logprob: -17.000591278076172
    8. ' ' → logprob: -18.250591278076172
    9. '           ' → logprob: -18.625591278076172
    10. 'contin' → logprob: -18.750591278076172

Token 711: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4215603470802307
    2. ' for' → logprob: -1.421560287475586
    3. 'for' → logprob: -2.296560287475586
    4. '    
' → logprob: -6.546560287475586
    5. '
' → logprob: -7.796560287475586
    6. '```' → logprob: -9.671560287475586
    7. '	for' → logprob: -10.171560287475586
    8. '  
' → logprob: -10.421560287475586
    9. ' 
' → logprob: -10.546560287475586
    10. '   
' → logprob: -11.421560287475586

Token 712: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18798594176769257
    2. '   ' → logprob: -1.812985897064209
    3. ' for' → logprob: -5.437985897064209
    4. 'area' → logprob: -6.437985897064209
    5. '```' → logprob: -6.937985897064209
    6. 'i' → logprob: -7.687985897064209
    7. 'idx' → logprob: -7.812985897064209
    8. 'next' → logprob: -8.937986373901367
    9. '    
' → logprob: -9.437986373901367
    10. 'index' → logprob: -9.812986373901367

Token 713: ' area' (ID: 3624)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11376920342445374
    2. 'area' (adapté à ' area') → logprob: -2.488769292831421
    3. 'ai' → logprob: -4.988769054412842
    4. 'curr' → logprob: -5.113769054412842
    5. 'current' → logprob: -5.363769054412842
    6. 'idx' → logprob: -6.363769054412842
    7. 'cur' → logprob: -6.363769054412842
    8. '   ' → logprob: -6.863769054412842
    9. 'next' → logprob: -6.988769054412842
    10. 'i' → logprob: -7.488769054412842

Token 714: '_i' (ID: 10853)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.12260454893112183
    2. '_index' → logprob: -2.4976046085357666
    3. '_i' → logprob: -3.6226046085357666
    4. ' =' → logprob: -5.7476043701171875
    5. '=' → logprob: -6.6226043701171875
    6. '_id' → logprob: -6.9976043701171875
    7. 'idx' → logprob: -7.7476043701171875
    8. '_' → logprob: -8.247604370117188
    9. 'i' → logprob: -9.622604370117188
    10. 'index' → logprob: -10.122604370117188

Token 715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143595337867737
    2. ' =' → logprob: -1.701435923576355
    3. 'x' → logprob: -11.576436042785645
    4. 'idx' → logprob: -12.451436042785645
    5. '_idx' → logprob: -12.826436042785645
    6. '=get' → logprob: -12.826436042785645
    7. 'ex' → logprob: -13.826436042785645
    8. 'index' → logprob: -13.951436042785645
    9. '=index' → logprob: -14.451436042785645
    10. '_index' → logprob: -14.451436042785645

Token 716: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -5.836499985889532e-05
    2. ' get' → logprob: -9.7500581741333
    3. '
' → logprob: -19.625059127807617
    4. '[get' → logprob: -20.000059127807617
    5. '	get' → logprob: -20.625059127807617
    6. '=get' → logprob: -20.750059127807617
    7. '(get' → logprob: -21.875059127807617
    8. '.get' → logprob: -22.125059127807617
    9. '0' → logprob: -22.375059127807617
    10. 'areas' → logprob: -23.250059127807617

Token 717: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -8.017927029868588e-05
    2. 'area' → logprob: -9.500080108642578
    3. '(area' → logprob: -12.500080108642578
    4. 'Area' → logprob: -14.750080108642578
    5. '_AREA' → logprob: -15.000080108642578
    6. '\' → logprob: -15.625080108642578
    7. ' area' → logprob: -15.750080108642578
    8. 'get' → logprob: -16.750080108642578
    9. '(' → logprob: -16.750080108642578
    10. '_time' → logprob: -17.000080108642578

Token 718: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -7.171581091824919e-05
    2. 'index' → logprob: -9.62507152557373
    3. '_i' → logprob: -12.62507152557373
    4. 'Index' → logprob: -13.75007152557373
    5. 'i' → logprob: -15.25007152557373
    6. '```' → logprob: -15.50007152557373
    7. '   ' → logprob: -16.000072479248047
    8. '_INDEX' → logprob: -16.375072479248047
    9. '0' → logprob: -16.750072479248047
    10. '`' → logprob: -17.125072479248047

Token 719: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0014805786777287722
    2. 't' → logprob: -7.001480579376221
    3. '(' → logprob: -7.501480579376221
    4. ' (' → logprob: -11.626480102539062
    5. '```' → logprob: -12.876480102539062
    6. '[t' → logprob: -13.376480102539062
    7. '(time' → logprob: -14.376480102539062
    8. 'def' → logprob: -14.376480102539062
    9. ' ' → logprob: -15.001480102539062
    10. '​' → logprob: -15.376480102539062

Token 720: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007119550718925893
    2. ')
' → logprob: -7.375711917877197
    3. '   ' → logprob: -10.125712394714355
    4. ' )' → logprob: -10.375712394714355
    5. '+' → logprob: -12.250712394714355
    6. ')`' → logprob: -13.625712394714355
    7. ')[' → logprob: -13.750712394714355
    8. ')+' → logprob: -13.750712394714355
    9. ')t' → logprob: -13.750712394714355
    10. ']' → logprob: -14.000712394714355

Token 721: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6972318291664124
    2. '   ' → logprob: -1.3222317695617676
    3. ' for' → logprob: -1.4472317695617676
    4. '    
' → logprob: -8.697232246398926
    5. '```' → logprob: -9.947232246398926
    6. '	for' → logprob: -10.197232246398926
    7. ',' → logprob: -11.947232246398926
    8. ')' → logprob: -13.197232246398926
    9. '  
' → logprob: -13.197232246398926
    10. '<|end|>' → logprob: -13.447232246398926

Token 722: ' area' (ID: 3624)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019620591774582863
    2. ' for' → logprob: -6.501962184906006
    3. 'area' (adapté à ' area') → logprob: -8.251961708068848
    4. 'current' → logprob: -8.876961708068848
    5. '   ' → logprob: -10.251961708068848
    6. 'cur' → logprob: -11.376961708068848
    7. 'curr' → logprob: -11.501961708068848
    8. 'next' → logprob: -13.751961708068848
    9. 'if' → logprob: -15.251961708068848
    10. '    
' → logprob: -15.251961708068848

Token 723: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6393253803253174
    2. '_i' → logprob: -1.3893253803253174
    3. '=' → logprob: -1.5143253803253174
    4. '_' → logprob: -6.514325141906738
    5. '_idx' → logprob: -7.264325141906738
    6. '=_' → logprob: -8.764325141906738
    7. 'i' → logprob: -8.764325141906738
    8. '_current' → logprob: -9.139325141906738
    9. '_area' → logprob: -9.514325141906738
    10. 'current' → logprob: -9.514325141906738

Token 724: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3893878161907196
    2. ' =' → logprob: -1.139387845993042
    3. '_area' → logprob: -6.264387607574463
    4. 'area' → logprob: -8.389388084411621
    5. '+=' → logprob: -9.014388084411621
    6. ' +=' → logprob: -9.014388084411621
    7. ',' → logprob: -10.389388084411621
    8. '0' → logprob: -10.889388084411621
    9. '_' → logprob: -11.139388084411621
    10. '=current' → logprob: -11.264388084411621

Token 725: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042064756155014
    2. '=' → logprob: -3.2880420684814453
    3. ' +=' → logprob: -15.288042068481445
    4. ' ' → logprob: -15.538042068481445
    5. '   ' → logprob: -15.663042068481445
    6. '+=' → logprob: -17.038042068481445
    7. '＝' → logprob: -18.038042068481445
    8. '+' → logprob: -18.163042068481445
    9. '=i' → logprob: -18.288042068481445
    10. '=len' → logprob: -18.288042068481445

Token 726: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.04275787994265556
    2. 'area' → logprob: -3.292757987976074
    3. ' get' → logprob: -5.417757987976074
    4. 'min' → logprob: -9.042757987976074
    5. ' area' → logprob: -9.167757987976074
    6. 'max' → logprob: -10.667757987976074
    7. '0' → logprob: -12.667757987976074
    8. '   ' → logprob: -12.667757987976074
    9. '(get' → logprob: -12.792757987976074
    10. ' ' → logprob: -13.355257987976074

Token 727: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -8.2994620242971e-06
    2. 'area' → logprob: -11.750008583068848
    3. '(area' → logprob: -16.50000762939453
    4. '_AREA' → logprob: -16.62500762939453
    5. 'get' → logprob: -17.25000762939453
    6. 'Area' → logprob: -17.50000762939453
    7. '_are' → logprob: -17.62500762939453
    8. '_' → logprob: -17.75000762939453
    9. '\' → logprob: -17.87500762939453
    10. ' area' → logprob: -18.25000762939453

Token 728: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.04302510991692543
    2. 'index' → logprob: -3.168025016784668
    3. 'i' → logprob: -11.168025016784668
    4. 'Index' → logprob: -12.168025016784668
    5. 't' → logprob: -13.543025016784668
    6. '(i' → logprob: -14.168025016784668
    7. 'get' → logprob: -14.293025016784668
    8. 'area' → logprob: -14.293025016784668
    9. 'n' → logprob: -14.418025016784668
    10. '```' → logprob: -14.543025016784668

Token 729: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -2.8206473871250637e-05
    2. 't' → logprob: -10.625028610229492
    3. '(' → logprob: -12.500028610229492
    4. '((' → logprob: -17.125028610229492
    5. ' (' → logprob: -17.625028610229492
    6. '(time' → logprob: -18.250028610229492
    7. '(
' → logprob: -18.875028610229492
    8. '   ' → logprob: -19.500028610229492
    9. '	t' → logprob: -20.375028610229492
    10. ')' → logprob: -20.625028610229492

Token 730: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008649791590869427
    2. ' +' → logprob: -4.758649826049805
    3. '+
' → logprob: -11.258649826049805
    4. ')' → logprob: -11.508649826049805
    5. '+t' → logprob: -12.008649826049805
    6. 't' → logprob: -13.133649826049805
    7. '+)' → logprob: -13.258649826049805
    8. ')+' → logprob: -13.758649826049805
    9. '   ' → logprob: -14.258649826049805
    10. '
' → logprob: -16.008649826049805

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '+' → logprob: -16.25
    4. '```' → logprob: -16.375
    5. '   ' → logprob: -16.875
    6. '0' → logprob: -17.75
    7. ')' → logprob: -17.75
    8. '
' → logprob: -18.125
    9. '2' → logprob: -19.4375
    10. '  ' → logprob: -19.75

Token 732: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005822229431942105
    2. ')
' → logprob: -7.500582218170166
    3. '   ' → logprob: -10.500582695007324
    4. ' )' → logprob: -14.250582695007324
    5. '))' → logprob: -15.000582695007324
    6. ')
' → logprob: -15.500582695007324
    7. ')`' → logprob: -16.250581741333008
    8. '`)' → logprob: -16.625581741333008
    9. ')

' → logprob: -16.625581741333008
    10. ')#' → logprob: -16.875581741333008

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5268389582633972
    2. 'for' → logprob: -1.526839017868042
    3. ' for' → logprob: -1.651839017868042
    4. 'if' → logprob: -8.526839256286621
    5. '```' → logprob: -8.651839256286621
    6. ' if' → logprob: -9.276839256286621
    7. '    
' → logprob: -9.776839256286621
    8. ',' → logprob: -10.526839256286621
    9. ' ' → logprob: -11.151839256286621
    10. '	for' → logprob: -11.651839256286621

Token 734: ' grid' (ID: 10586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004984631086699665
    2. ' for' → logprob: -7.875498294830322
    3. '   ' → logprob: -9.75049877166748
    4. 'if' → logprob: -9.75049877166748
    5. '	for' → logprob: -14.87549877166748
    6. 'area' → logprob: -14.87549877166748
    7. '```' → logprob: -15.00049877166748
    8. '    
' → logprob: -15.50049877166748
    9. 'current' → logprob: -15.75049877166748
    10. '#' → logprob: -16.250497817993164

Token 735: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023264825344086
    2. '=' → logprob: -1.910232663154602
    3. '=current' → logprob: -12.535232543945312
    4. ',' → logprob: -13.035232543945312
    5. '   ' → logprob: -14.035232543945312
    6. 'current' → logprob: -14.160232543945312
    7. ' current' → logprob: -14.535232543945312
    8. '```' → logprob: -15.660232543945312
    9. '=
' → logprob: -15.910232543945312
    10. 'area' → logprob: -16.285232543945312

Token 736: ' areas' (ID: 6723)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.004620949272066355
    2. ' areas' → logprob: -5.3796210289001465
    3. '   ' → logprob: -15.254620552062988
    4. 'area' → logprob: -15.629620552062988
    5. 'ares' → logprob: -16.754621505737305
    6. '	' → logprob: -17.504621505737305
    7. ' áreas' → logprob: -17.629621505737305
    8. 'arrays' → logprob: -17.629621505737305
    9. 'Areas' → logprob: -18.004621505737305
    10. ' ' → logprob: -18.254621505737305

Token 737: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.895480277715251e-06
    2. 'area' → logprob: -12.125008583068848
    3. '=' → logprob: -13.125008583068848
    4. ' =' → logprob: -14.625008583068848
    5. '```' → logprob: -15.000008583068848
    6. ' [' → logprob: -15.375008583068848
    7. '   ' → logprob: -16.375009536743164
    8. '(area' → logprob: -16.625009536743164
    9. '[
' → logprob: -16.750009536743164
    10. '
' → logprob: -17.000009536743164

Token 738: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -1.6286106983898208e-05
    2. ' area' → logprob: -11.125016212463379
    3. '[' → logprob: -14.125016212463379
    4. '(area' → logprob: -15.375016212463379
    5. '`' → logprob: -15.875016212463379
    6. 'areas' → logprob: -16.000017166137695
    7. '```' → logprob: -16.500017166137695
    8. '0' → logprob: -16.625017166137695
    9. '
' → logprob: -16.875017166137695
    10. '   ' → logprob: -17.250017166137695

Token 739: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00038825106457807124
    2. 'i' → logprob: -7.875388145446777
    3. '[i' → logprob: -12.750388145446777
    4. '[' → logprob: -13.000388145446777
    5. 'area' → logprob: -13.375388145446777
    6. ')' → logprob: -14.875388145446777
    7. '```' → logprob: -14.875388145446777
    8. '   ' → logprob: -16.125389099121094
    9. ']' → logprob: -16.250389099121094
    10. 's' → logprob: -16.375389099121094

Token 740: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.555769145488739
    2. '][' → logprob: -1.4307692050933838
    3. ')' → logprob: -1.9307692050933838
    4. ']
' → logprob: -4.055768966674805
    5. ')[' → logprob: -4.305768966674805
    6. ')
' → logprob: -5.305768966674805
    7. '[x' → logprob: -6.180768966674805
    8. '])' → logprob: -6.180768966674805
    9. '   ' → logprob: -6.680768966674805
    10. '[y' → logprob: -8.680768966674805

Token 741: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5135513544082642
    2. ' for' → logprob: -1.0135513544082642
    3. '   ' → logprob: -3.2635512351989746
    4. '	for' → logprob: -8.138551712036133
    5. '```' → logprob: -9.763551712036133
    6. '    
' → logprob: -10.013551712036133
    7. ' 
' → logprob: -11.263551712036133
    8. '
' → logprob: -11.388551712036133
    9. ' ' → logprob: -11.888551712036133
    10. '  
' → logprob: -12.263551712036133

Token 742: ' grid' (ID: 10586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.40998875699006e-05
    2. ' for' → logprob: -9.75007438659668
    3. '   ' → logprob: -11.12507438659668
    4. 'if' → logprob: -15.25007438659668
    5. '    
' → logprob: -15.62507438659668
    6. '```' → logprob: -15.62507438659668
    7. 'next' → logprob: -16.00007438659668
    8. '	for' → logprob: -16.25007438659668
    9. 'area' → logprob: -17.12507438659668
    10. '       ' → logprob: -17.12507438659668

Token 743: '_next' (ID: 25436)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5476211905479431
    2. '=' → logprob: -1.422621250152588
    3. '_next' → logprob: -2.422621250152588
    4. 'next' → logprob: -3.422621250152588
    5. '[next' → logprob: -3.797621250152588
    6. '_' → logprob: -4.172621250152588
    7. '_cell' → logprob: -5.297621250152588
    8. ',' → logprob: -5.797621250152588
    9. 'cell' → logprob: -6.547621250152588
    10. '[' → logprob: -7.172621250152588

Token 744: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022443771362305
    2. '=' → logprob: -1.910224437713623
    3. ' ' → logprob: -16.16022491455078
    4. ',' → logprob: -16.53522491455078
    5. '＝' → logprob: -18.03522491455078
    6. '=
' → logprob: -18.03522491455078
    7. '   ' → logprob: -18.53522491455078
    8. '[' → logprob: -18.53522491455078
    9. '.' → logprob: -18.66022491455078
    10. ' =
' → logprob: -18.66022491455078

Token 745: ' areas' (ID: 6723)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.0015030752401798964
    2. ' areas' → logprob: -6.501502990722656
    3. 'area' → logprob: -15.251502990722656
    4. '   ' → logprob: -15.876502990722656
    5. 'ares' → logprob: -16.251502990722656
    6. '`' → logprob: -17.001502990722656
    7. '	' → logprob: -17.126502990722656
    8. ' áreas' → logprob: -17.751502990722656
    9. 'arrays' → logprob: -18.126502990722656
    10. 'Areas' → logprob: -18.314002990722656

Token 746: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.625000953674316
    3. 'area' → logprob: -16.25
    4. '[
' → logprob: -16.5
    5. '[get' → logprob: -17.125
    6. '```' → logprob: -18.25
    7. '(area' → logprob: -18.625
    8. '[array' → logprob: -18.875
    9. '[(' → logprob: -19.125
    10. ')[' → logprob: -19.375

Token 747: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. 'get' → logprob: -15.500000953674316
    4. ' area' → logprob: -16.375
    5. '(area' → logprob: -18.125
    6. '0' → logprob: -19.0
    7. '
' → logprob: -19.5
    8. '   ' → logprob: -19.625
    9. '[get' → logprob: -19.75
    10. '`' → logprob: -19.875

Token 748: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.08962640166282654
    2. 'area' → logprob: -2.5896263122558594
    3. 'i' → logprob: -5.089626312255859
    4. '[' → logprob: -5.464626312255859
    5. '_area' → logprob: -9.46462631225586
    6. '```' → logprob: -9.83962631225586
    7. ' area' → logprob: -10.21462631225586
    8. '(area' → logprob: -10.21462631225586
    9. '`' → logprob: -10.83962631225586
    10. '   ' → logprob: -11.46462631225586

Token 749: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7432028651237488
    2. '_i' → logprob: -0.7432028651237488
    3. 'i' → logprob: -3.3682029247283936
    4. 'area' → logprob: -4.6182026863098145
    5. '+' → logprob: -5.7432026863098145
    6. '_' → logprob: -7.7432026863098145
    7. '```' → logprob: -8.118203163146973
    8. 'I' → logprob: -9.118203163146973
    9. '_area' → logprob: -9.493203163146973
    10. ']' → logprob: -9.618203163146973

Token 750: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021035063546150923
    2. ']
' → logprob: -6.627103328704834
    3. ')' → logprob: -7.502103328704834
    4. '   ' → logprob: -9.127103805541992
    5. ' ]' → logprob: -10.002103805541992
    6. ']

' → logprob: -10.377103805541992
    7. '][' → logprob: -11.627103805541992
    8. '[' → logprob: -11.877103805541992
    9. '])' → logprob: -12.127103805541992
    10. ']
' → logprob: -12.377103805541992

Token 751: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005323022487573326
    2. ' for' → logprob: -8.125532150268555
    3. '   ' → logprob: -8.375532150268555
    4. '```' → logprob: -12.500532150268555
    5. '	for' → logprob: -13.375532150268555
    6. '    
' → logprob: -15.000532150268555
    7. '``' → logprob: -16.250532150268555
    8. '
' → logprob: -19.375532150268555
    9. '`' → logprob: -19.750532150268555
    10. 'next' → logprob: -19.750532150268555

Token 752: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2664456789934775e-06
    2. ' for' → logprob: -14.125000953674316
    3. '   ' → logprob: -14.500000953674316
    4. '    
' → logprob: -17.875001907348633
    5. 'if' → logprob: -19.750001907348633
    6. '	for' → logprob: -20.000001907348633
    7. 'found' → logprob: -20.500001907348633
    8. '```' → logprob: -21.500001907348633
    9. 'fo' → logprob: -21.750001907348633
    10. 'next' → logprob: -22.125001907348633

Token 753: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.000968156848102808
    2. ' dx' → logprob: -7.000967979431152
    3. 'dt' → logprob: -10.125967979431152
    4. '   ' → logprob: -11.250967979431152
    5. '(dx' → logprob: -13.375967979431152
    6. ' ' → logprob: -14.000967979431152
    7. 'd' → logprob: -14.750967979431152
    8. '  ' → logprob: -15.000967979431152
    9. '```' → logprob: -15.750967979431152
    10. '_dx' → logprob: -15.750967979431152

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0106015894562006
    2. ',d' → logprob: -4.63560152053833
    3. ',y' → logprob: -7.76060152053833
    4. ',n' → logprob: -9.885601997375488
    5. ' ,' → logprob: -9.885601997375488
    6. ',w' → logprob: -10.010601997375488
    7. ',x' → logprob: -10.135601997375488
    8. ' in' → logprob: -10.510601997375488
    9. ',
' → logprob: -10.885601997375488
    10. ',int' → logprob: -10.885601997375488

Token 755: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -4.5491004129871726e-05
    2. ' dy' → logprob: -10.000045776367188
    3. '.dy' → logprob: -19.250045776367188
    4. 'd' → logprob: -21.000045776367188
    5. 'Dy' → logprob: -21.000045776367188
    6. '0' → logprob: -22.250045776367188
    7. 'dym' → logprob: -22.875045776367188
    8. '```' → logprob: -23.375045776367188
    9. '   ' → logprob: -24.125045776367188
    10. '

' → logprob: -24.125045776367188

Token 756: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28101956844329834
    2. 'in' → logprob: -1.5310195684432983
    3. ',' → logprob: -3.906019687652588
    4. '<|end|>' → logprob: -5.156019687652588
    5. '   ' → logprob: -6.531019687652588
    6. ')' → logprob: -7.781019687652588
    7. ' ' → logprob: -8.03101921081543
    8. '<|end|>' → logprob: -9.03101921081543
    9. '    ' → logprob: -9.15601921081543
    10. ' ,' → logprob: -9.40601921081543

Token 757: ' dirs' (ID: 99999)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.0002043748099822551
    2. ' dirs' → logprob: -8.500204086303711
    3. 'dire' → logprob: -14.875204086303711
    4. '[(' → logprob: -15.125204086303711
    5. '[' → logprob: -15.500204086303711
    6. '   ' → logprob: -16.87520408630371
    7. '_dirs' → logprob: -17.62520408630371
    8. '[-' → logprob: -17.87520408630371
    9. 'dir' → logprob: -18.12520408630371
    10. 'dims' → logprob: -18.62520408630371

Token 758: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008391046896576881
    2. ',' → logprob: -5.5083909034729
    3. ':
' → logprob: -6.3833909034729
    4. '       ' → logprob: -7.1333909034729
    5. '<|end|>' → logprob: -7.1333909034729
    6. '   ' → logprob: -7.2583909034729
    7. '):' → logprob: -8.383391380310059
    8. '):
' → logprob: -10.758391380310059
    9. '<|end|>' → logprob: -11.008391380310059
    10. '=' → logprob: -12.258391380310059

Token 759: '       ' (ID: 309)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.703816294670105
    2. '       ' → logprob: -0.828816294670105
    3. '    ' → logprob: -3.0788164138793945
    4. ' x' → logprob: -4.8288164138793945
    5. 'nx' → logprob: -5.0788164138793945
    6. ' new' → logprob: -5.8288164138793945
    7. ' nxt' → logprob: -6.0788164138793945
    8. '   ' → logprob: -7.2038164138793945
    9. ' next' → logprob: -7.4538164138793945
    10. '(nx' → logprob: -7.7038164138793945

Token 760: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.5786973237991333
    2. ' nx' → logprob: -0.8286973237991333
    3. 'tx' → logprob: -6.203697204589844
    4. 'x' → logprob: -8.578697204589844
    5. ' ntx' → logprob: -8.828697204589844
    6. ' tx' → logprob: -8.828697204589844
    7. 'nt' → logprob: -9.078697204589844
    8. ' x' → logprob: -10.203697204589844
    9. '```' → logprob: -10.453697204589844
    10. '       ' → logprob: -10.953697204589844

Token 761: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.242445170879364
    2. ' =' → logprob: -1.6174452304840088
    3. ',' → logprob: -4.36744499206543
    4. '=n' → logprob: -6.24244499206543
    5. '=x' → logprob: -6.24244499206543
    6. '=int' → logprob: -9.24244499206543
    7. ',x' → logprob: -9.61744499206543
    8. ',n' → logprob: -9.86744499206543
    9. 'x' → logprob: -10.61744499206543
    10. '<|end|>' → logprob: -10.99244499206543

Token 762: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.5871774554252625
    2. 'ny' → logprob: -0.9621774554252625
    3. 'y' → logprob: -2.8371775150299072
    4. ' y' → logprob: -6.712177276611328
    5. 'x' → logprob: -6.837177276611328
    6. 'dy' → logprob: -7.712177276611328
    7. ' =' → logprob: -8.462177276611328
    8. ' dy' → logprob: -8.587177276611328
    9. '=' → logprob: -8.712177276611328
    10. 'n' → logprob: -10.587177276611328

Token 763: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008625093847513199
    2. ' =' → logprob: -4.758625030517578
    3. '=x' → logprob: -11.508625030517578
    4. '=n' → logprob: -15.008625030517578
    5. ',' → logprob: -16.383625030517578
    6. '=
' → logprob: -18.133625030517578
    7. '＝' → logprob: -18.258625030517578
    8. '.=' → logprob: -18.758625030517578
    9. '=ax' → logprob: -19.008625030517578
    10. '=v' → logprob: -19.133625030517578

Token 764: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.75000286102295
    3. '	x' → logprob: -21.875003814697266
    4. '(x' → logprob: -22.750003814697266
    5. '"x' → logprob: -23.625003814697266
    6. ')x' → logprob: -24.000003814697266
    7. '   ' → logprob: -24.375003814697266
    8. '$x' → logprob: -25.500003814697266
    9. ',x' → logprob: -26.250003814697266
    10. '
' → logprob: -26.375003814697266

Token 765: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20261891186237335
    2. ' +' → logprob: -1.702618956565857
    3. '+x' → logprob: -7.5776190757751465
    4. '+,' → logprob: -7.7026190757751465
    5. ',' → logprob: -9.202618598937988
    6. '+n' → logprob: -9.202618598937988
    7. '+t' → logprob: -11.452618598937988
    8. '+
' → logprob: -11.952618598937988
    9. '+d' → logprob: -12.702618598937988
    10. '+y' → logprob: -12.702618598937988

Token 766: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -7.994086627149954e-05
    2. '0' → logprob: -9.500080108642578
    3. ' dx' → logprob: -12.875080108642578
    4. '(dx' → logprob: -13.125080108642578
    5. '_dx' → logprob: -15.375080108642578
    6. '.dx' → logprob: -16.500080108642578
    7. 'd' → logprob: -16.875080108642578
    8. 'dy' → logprob: -17.125080108642578
    9. '1' → logprob: -17.250080108642578
    10. '<|end|>' → logprob: -17.500080108642578

Token 767: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0068187350407242775
    2. ',y' → logprob: -5.006818771362305
    3. ' ,' → logprob: -9.756818771362305
    4. ',n' → logprob: -10.006818771362305
    5. ',x' → logprob: -16.256818771362305
    6. '_,' → logprob: -16.506818771362305
    7. ',
' → logprob: -17.256818771362305
    8. ',w' → logprob: -17.381818771362305
    9. '<|end|>' → logprob: -17.631818771362305
    10. ',next' → logprob: -18.256818771362305

Token 768: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00861456897109747
    2. ' y' → logprob: -4.758614540100098
    3. '	y' → logprob: -18.258615493774414
    4. '   ' → logprob: -20.633615493774414
    5. 'yj' → logprob: -20.633615493774414
    6. '       ' → logprob: -21.633615493774414
    7. ')y' → logprob: -21.883615493774414
    8. '(y' → logprob: -22.133615493774414
    9. '    ' → logprob: -22.383615493774414
    10. '‘y' → logprob: -22.633615493774414

Token 769: '+' (ID: 10)
  Prédit: '+y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.4741525650024414
    2. '+' → logprob: -0.9741525650024414
    3. ' +' → logprob: -10.224152565002441
    4. ',y' → logprob: -10.974152565002441
    5. 'y' → logprob: -11.724152565002441
    6. '+x' → logprob: -12.099152565002441
    7. ',' → logprob: -12.224152565002441
    8. '+j' → logprob: -13.974152565002441
    9. '+n' → logprob: -14.099152565002441
    10. '+w' → logprob: -14.349152565002441

Token 770: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.023457085713744164
    2. 'y' → logprob: -3.7734570503234863
    3. ' dy' → logprob: -8.523457527160645
    4. '1' → logprob: -12.023457527160645
    5. '0' → logprob: -12.398457527160645
    6. 'ny' → logprob: -13.773457527160645
    7. '(y' → logprob: -14.648457527160645
    8. ' y' → logprob: -14.898457527160645
    9. 'dx' → logprob: -15.273457527160645
    10. 'Dy' → logprob: -15.273457527160645

Token 771: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015897235134616494
    2. ' if' → logprob: -7.126589775085449
    3. 'if' → logprob: -7.876589775085449
    4. '        
' → logprob: -8.37658977508545
    5. '	' → logprob: -10.12658977508545
    6. '<|end|>' → logprob: -10.25158977508545
    7. '```' → logprob: -10.87658977508545
    8. ' ' → logprob: -11.37658977508545
    9. '	if' → logprob: -11.37658977508545
    10. '[' → logprob: -11.50158977508545

Token 773: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06302561610937119
    2. ' if' → logprob: -2.813025712966919
    3. '       ' → logprob: -6.93802547454834
    4. '```' → logprob: -9.43802547454834
    5. '   ' → logprob: -12.43802547454834
    6. '	if' → logprob: -14.31302547454834
    7. '        
' → logprob: -14.31302547454834
    8. '           ' → logprob: -14.68802547454834
    9. '#' → logprob: -14.81302547454834
    10. ' 
' → logprob: -14.93802547454834

Token 774: 'steps' (ID: 27176)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.024505266919732094
    2. '_t' → logprob: -3.899505376815796
    3. ' t' → logprob: -5.899505138397217
    4. '_' → logprob: -7.899505138397217
    5. 'x' → logprob: -8.649505615234375
    6. ',' → logprob: -8.649505615234375
    7. ' =' → logprob: -8.774505615234375
    8. '_time' → logprob: -9.149505615234375
    9. '=' → logprob: -10.274505615234375
    10. ' _' → logprob: -10.274505615234375

Token 775: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868790566921234
    2. '=' → logprob: -1.1368790864944458
    3. ',' → logprob: -12.136878967285156
    4. '    ' → logprob: -13.511878967285156
    5. '   ' → logprob: -15.261878967285156
    6. ')' → logprob: -15.886878967285156
    7. ' ' → logprob: -16.011878967285156
    8. '.' → logprob: -16.261878967285156
    9. '=
' → logprob: -16.261878967285156
    10. '＝' → logprob: -16.386878967285156

Token 776: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -3.2617008400848135e-05
    2. ' steps' → logprob: -10.375032424926758
    3. 'n' → logprob: -13.750032424926758
    4. '   ' → logprob: -16.250032424926758
    5. '(' → logprob: -16.875032424926758
    6. 'step' → logprob: -17.250032424926758
    7. '0' → logprob: -18.000032424926758
    8. 'dist' → logprob: -18.125032424926758
    9. '```' → logprob: -18.250032424926758
    10. 'Steps' → logprob: -18.875032424926758

Token 777: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03605162352323532
    2. 'if' → logprob: -3.7860515117645264
    3. '+(' → logprob: -5.0360517501831055
    4. ' +' → logprob: -5.2860517501831055
    5. ' if' → logprob: -7.6610517501831055
    6. '+n' → logprob: -8.036051750183105
    7. '       ' → logprob: -9.036051750183105
    8. '
' → logprob: -9.036051750183105
    9. '+
' → logprob: -9.286051750183105
    10. '   ' → logprob: -10.786051750183105

Token 778: ' (' (ID: 350)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.2694551348686218
    2. '(' → logprob: -2.0194551944732666
    3. '1' → logprob: -2.3944551944732666
    4. '(int' → logprob: -5.3944549560546875
    5. '(abs' → logprob: -5.5194549560546875
    6. '0' → logprob: -6.2694549560546875
    7. ' (' → logprob: -7.5194549560546875
    8. '(max' → logprob: -7.8944549560546875
    9. '(nx' → logprob: -7.8944549560546875
    10. '((' → logprob: -8.894454956054688

Token 779: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2738983929157257
    2. '(dx' → logprob: -1.5238983631134033
    3. '0' → logprob: -4.148898601531982
    4. '(' → logprob: -5.898898601531982
    5. ' (' → logprob: -6.898898601531982
    6. '(nx' → logprob: -7.648898601531982
    7. ' ' → logprob: -7.773898601531982
    8. 'dx' → logprob: -7.773898601531982
    9. 'int' → logprob: -8.023898124694824
    10. '(int' → logprob: -8.148898124694824

Token 780: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4741742014884949
    2. ' if' → logprob: -0.9741742014884949
    3. '+' → logprob: -9.349174499511719
    4. '
' → logprob: -12.349174499511719
    5. ' +' → logprob: -12.974174499511719
    6. ')' → logprob: -13.474174499511719
    7. '1' → logprob: -13.724174499511719
    8. '0' → logprob: -14.849174499511719
    9. '+(' → logprob: -15.474174499511719
    10. '```' → logprob: -16.09917449951172

Token 781: ' (' (ID: 350)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.20187987387180328
    2. 'dx' → logprob: -1.701879858970642
    3. '(d' → logprob: -8.076879501342773
    4. '(' → logprob: -9.951879501342773
    5. '(nx' → logprob: -10.576879501342773
    6. '(x' → logprob: -11.326879501342773
    7. ' (' → logprob: -11.326879501342773
    8. '(t' → logprob: -11.576879501342773
    9. ' dx' → logprob: -11.826879501342773
    10. '(n' → logprob: -11.951879501342773

Token 782: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00421468960121274
    2. '(dx' → logprob: -5.504214763641357
    3. 'nx' → logprob: -9.1292142868042
    4. ' dx' → logprob: -12.0042142868042
    5. ' (' → logprob: -12.6292142868042
    6. '(' → logprob: -12.8792142868042
    7. '(nx' → logprob: -13.3792142868042
    8. '   ' → logprob: -13.5042142868042
    9. '(d' → logprob: -13.7542142868042
    10. 'abs' → logprob: -13.8792142868042

Token 783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024577973410487175
    2. '==' → logprob: -3.7745778560638428
    3. ' ==' → logprob: -6.899578094482422
    4. ',d' → logprob: -8.274578094482422
    5. ' ,' → logprob: -10.149578094482422
    6. '!=' → logprob: -11.149578094482422
    7. ',n' → logprob: -12.149578094482422
    8. ' !=' → logprob: -13.524578094482422
    9. ')==' → logprob: -13.649578094482422
    10. '```' → logprob: -13.649578094482422

Token 784: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.007987501099705696
    2. '0' → logprob: -4.8829874992370605
    3. ' dy' → logprob: -7.8829874992370605
    4. ' ' → logprob: -13.132987976074219
    5. ',' → logprob: -13.382987976074219
    6. '```' → logprob: -16.00798797607422
    7. 'dx' → logprob: -16.25798797607422
    8. '

' → logprob: -16.25798797607422
    9. '==' → logprob: -16.25798797607422
    10. '
' → logprob: -16.25798797607422

Token 785: ')' (ID: 8)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.8222944140434265
    2. '==' → logprob: -1.1972944736480713
    3. ')' → logprob: -1.4472944736480713
    4. '==(' → logprob: -3.8222944736480713
    5. ' ==' → logprob: -6.572294235229492
    6. ']==' → logprob: -10.197294235229492
    7. ')=='' → logprob: -10.822294235229492
    8. '[' → logprob: -11.572294235229492
    9. '==
' → logprob: -12.322294235229492
    10. '```' → logprob: -12.322294235229492

Token 786: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00955490954220295
    2. '==(' → logprob: -4.759554862976074
    3. ' ==' → logprob: -7.009554862976074
    4. ')==' → logprob: -10.634554862976074
    5. '==
' → logprob: -11.634554862976074
    6. '=='' → logprob: -13.509554862976074
    7. '=="' → logprob: -14.134554862976074
    8. '=' → logprob: -14.884554862976074
    9. '```' → logprob: -15.009554862976074
    10. ']==' → logprob: -15.009554862976074

Token 787: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.273621405242011e-05
    2. ' (' → logprob: -10.375032424926758
    3. '0' → logprob: -13.500032424926758
    4. ' ' → logprob: -17.500032424926758
    5. '   ' → logprob: -17.625032424926758
    6. '[' → logprob: -19.625032424926758
    7. 'dirs' → logprob: -19.875032424926758
    8. '((' → logprob: -20.375032424926758
    9. '=(' → logprob: -20.375032424926758
    10. '
' → logprob: -20.500032424926758

Token 788: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '
' → logprob: -17.875001907348633
    5. '```' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.750001907348633
    7. ')' → logprob: -19.375001907348633
    8. '۰' → logprob: -19.500001907348633
    9. '=' → logprob: -20.500001907348633
    10. ',' → logprob: -20.500001907348633

Token 789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018065694894175977
    2. '0' → logprob: -8.7501802444458
    3. ' ,' → logprob: -10.7501802444458
    4. ',
' → logprob: -14.8751802444458
    5. ')' → logprob: -15.1251802444458
    6. ' ' → logprob: -16.500181198120117
    7. '
' → logprob: -17.625181198120117
    8. '```' → logprob: -18.000181198120117
    9. '   ' → logprob: -18.375181198120117
    10. '

' → logprob: -18.625181198120117

Token 790: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -18.375024795532227
    4. '۰' → logprob: -18.375024795532227
    5. '   ' → logprob: -18.875024795532227
    6. '
' → logprob: -19.875024795532227
    7. '  ' → logprob: -20.187524795532227
    8. '```' → logprob: -20.312524795532227
    9. '

' → logprob: -20.750024795532227
    10. '０' → logprob: -20.875024795532227

Token 791: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08996540307998657
    2. ' else' → logprob: -3.089965343475342
    3. 'else' → logprob: -3.214965343475342
    4. ' )' → logprob: -8.0899658203125
    5. '       ' → logprob: -10.4649658203125
    6. '        ' → logprob: -11.3399658203125
    7. '   ' → logprob: -11.5899658203125
    8. ' ' → logprob: -11.8399658203125
    9. '         ' → logprob: -12.8399658203125
    10. '           ' → logprob: -12.9649658203125

Token 792: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07889904081821442
    2. 'else' → logprob: -2.5788991451263428
    3. '       ' → logprob: -12.203899383544922
    4. '        ' → logprob: -13.703899383544922
    5. ' ' → logprob: -14.203899383544922
    6. '           ' → logprob: -14.578899383544922
    7. '   ' → logprob: -14.578899383544922
    8. ')' → logprob: -14.953899383544922
    9. '         ' → logprob: -15.328899383544922
    10. ' or' → logprob: -15.578899383544922

Token 793: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -17.375001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '+' → logprob: -18.812501907348633
    6. ')' → logprob: -18.937501907348633
    7. '```' → logprob: -19.062501907348633
    8. '2' → logprob: -20.000001907348633
    9. '10' → logprob: -20.187501907348633
    10. '`' → logprob: -20.625001907348633

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '0' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '+' → logprob: -19.000001907348633
    6. '```' → logprob: -19.500001907348633
    7. '10' → logprob: -20.000001907348633
    8. '2' → logprob: -20.187501907348633
    9. ')' → logprob: -20.437501907348633
    10. '
' → logprob: -21.125001907348633

Token 795: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022329477593302727
    2. '       ' → logprob: -4.022329330444336
    3. ')
' → logprob: -5.772329330444336
    4. '
' → logprob: -7.522329330444336
    5. '<|end|>' → logprob: -8.147329330444336
    6. '   ' → logprob: -9.272329330444336
    7. '```' → logprob: -11.397329330444336
    8. '):
' → logprob: -11.397329330444336
    9. ' if' → logprob: -11.522329330444336
    10. 'if' → logprob: -11.647329330444336

Token 796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019693078473210335
    2. '<|end|>' → logprob: -4.144692897796631
    3. '        
' → logprob: -6.269692897796631
    4. ' if' → logprob: -7.519692897796631
    5. ',' → logprob: -7.769692897796631
    6. 'if' → logprob: -8.644693374633789
    7. '  
' → logprob: -9.144693374633789
    8. '   ' → logprob: -9.519693374633789
    9. ' 
' → logprob: -9.769693374633789
    10. ' ' → logprob: -9.769693374633789

Token 797: ' nt' (ID: 7646)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' (adapté à ' nt') → logprob: -0.5881056785583496
    2. 'if' → logprob: -0.8381056785583496
    3. 'n' → logprob: -4.46310567855835
    4. '#' → logprob: -8.338106155395508
    5. '```' → logprob: -8.963106155395508
    6. 'ntime' → logprob: -9.463106155395508
    7. ' if' → logprob: -9.588106155395508
    8. ' nt' → logprob: -11.713106155395508
    9. '``' → logprob: -11.713106155395508
    10. 'next' → logprob: -12.338106155395508

Token 798: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326404213905334
    2. ' =' → logprob: -1.313264012336731
    3. '=t' → logprob: -13.313263893127441
    4. '+=' → logprob: -15.938263893127441
    5. '＝' → logprob: -16.063264846801758
    6. '=
' → logprob: -16.188264846801758
    7. ' ' → logprob: -16.313264846801758
    8. '.=' → logprob: -17.438264846801758
    9. ',' → logprob: -17.688264846801758
    10. '+' → logprob: -17.688264846801758

Token 799: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0003361774142831564
    2. ' t' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.500336647033691
    4. '`t' → logprob: -15.250336647033691
    5. '	t' → logprob: -16.750335693359375
    6. ')t' → logprob: -19.250335693359375
    7. '(t' → logprob: -19.625335693359375
    8. ' ' → logprob: -20.375335693359375
    9. 'T' → logprob: -21.125335693359375
    10. 'next' → logprob: -21.750335693359375

Token 800: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005239326041191816
    2. ' +' → logprob: -5.255239486694336
    3. '+
' → logprob: -12.255239486694336
    4. '+n' → logprob: -14.380239486694336
    5. '+=' → logprob: -16.130239486694336
    6. ' +
' → logprob: -16.255239486694336
    7. '+[' → logprob: -17.005239486694336
    8. '1' → logprob: -17.130239486694336
    9. '()+' → logprob: -17.255239486694336
    10. '＋' → logprob: -17.255239486694336

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '+' → logprob: -18.25
    4. 'n' → logprob: -18.375
    5. 'from' → logprob: -18.75
    6. '```' → logprob: -19.25
    7. '
' → logprob: -20.3125
    8. 'nx' → logprob: -20.375
    9. 'he' → logprob: -20.75
    10. '   ' → logprob: -20.8125

Token 802: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052213799208402634
    2. '   ' → logprob: -3.5522139072418213
    3. '<|end|>' → logprob: -4.427213668823242
    4. '        
' → logprob: -5.677213668823242
    5. '
' → logprob: -5.802213668823242
    6. '  
' → logprob: -7.302213668823242
    7. '    
' → logprob: -7.302213668823242
    8. ')' → logprob: -7.427213668823242
    9. ' if' → logprob: -7.552213668823242
    10. ',' → logprob: -7.552213668823242

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023771444335579872
    2. 'if' → logprob: -4.023771286010742
    3. ' if' → logprob: -5.773771286010742
    4. '   ' → logprob: -6.023771286010742
    5. '```' → logprob: -10.148771286010742
    6. '<|end|>' → logprob: -11.148771286010742
    7. '        
' → logprob: -11.523771286010742
    8. '	if' → logprob: -12.148771286010742
    9. '#' → logprob: -12.898771286010742
    10. ')' → logprob: -13.273771286010742

Token 804: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.226628895296017e-06
    2. ' if' → logprob: -12.500007629394531
    3. '       ' → logprob: -12.875007629394531
    4. '#' → logprob: -14.625007629394531
    5. '```' → logprob: -14.875007629394531
    6. '   ' → logprob: -17.62500762939453
    7. '           ' → logprob: -18.12500762939453
    8. '	if' → logprob: -18.50000762939453
    9. '        
' → logprob: -19.37500762939453
    10. '`' → logprob: -20.87500762939453

Token 805: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003178273618686944
    2. ' ' → logprob: -8.500317573547363
    3. 'not' → logprob: -9.625317573547363
    4. ' not' → logprob: -10.625317573547363
    5. '   ' → logprob: -11.375317573547363
    6. 'nx' → logprob: -11.625317573547363
    7. '(nx' → logprob: -14.000317573547363
    8. '       ' → logprob: -14.125317573547363
    9. '           ' → logprob: -14.875317573547363
    10. 'nt' → logprob: -15.125317573547363

Token 806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.40998875699006e-05
    2. 'not' → logprob: -9.87507438659668
    3. 'nx' → logprob: -11.25007438659668
    4. ' ' → logprob: -11.87507438659668
    5. ' not' → logprob: -13.87507438659668
    6. '(nx' → logprob: -14.37507438659668
    7. 'nt' → logprob: -14.62507438659668
    8. '(' → logprob: -15.12507438659668
    9. '   ' → logprob: -16.62507438659668
    10. '
' → logprob: -16.87507438659668

Token 807: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3133118152618408
    2. '<=' → logprob: -1.3133118152618408
    3. '<' → logprob: -11.063311576843262
    4. '<n' → logprob: -11.688311576843262
    5. '(nx' → logprob: -12.063311576843262
    6. ' <' → logprob: -12.438311576843262
    7. 'x' → logprob: -12.688311576843262
    8. 'and' → logprob: -13.313311576843262
    9. 'nx' → logprob: -13.313311576843262
    10. ' and' → logprob: -13.438311576843262

Token 808: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -4.4849443838757e-06
    2. ' nx' → logprob: -12.750004768371582
    3. '(nx' → logprob: -13.625004768371582
    4. 'n' → logprob: -16.000003814697266
    5. 'ny' → logprob: -16.500003814697266
    6. 'nr' → logprob: -16.875003814697266
    7. 'nt' → logprob: -16.875003814697266
    8. 'Nx' → logprob: -18.750003814697266
    9. '
' → logprob: -18.875003814697266
    10. '```' → logprob: -19.250003814697266

Token 809: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.000746736885048449
    2. ' <' → logprob: -7.875746726989746
    3. '<n' → logprob: -8.125746726989746
    4. 'and' → logprob: -10.750746726989746
    5. '<N' → logprob: -11.000746726989746
    6. '<H' → logprob: -11.250746726989746
    7. ' and' → logprob: -11.625746726989746
    8. '<W' → logprob: -12.750746726989746
    9. '<len' → logprob: -13.125746726989746
    10. 'nx' → logprob: -13.875746726989746

Token 810: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -3.128163257315464e-07
    2. ' H' → logprob: -15.125
    3. '   ' → logprob: -21.375
    4. '	H' → logprob: -22.0
    5. 'HBox' → logprob: -23.875
    6. '_H' → logprob: -24.25
    7. '(H' → logprob: -24.25
    8. '```' → logprob: -24.5
    9. '`' → logprob: -24.75
    10. '
' → logprob: -25.0

Token 811: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31326186656951904
    2. 'and' → logprob: -1.313261866569519
    3. '	and' → logprob: -16.313261032104492
    4. ',' → logprob: -16.688261032104492
    5. ' ' → logprob: -17.063261032104492
    6. '       ' → logprob: -17.438261032104492
    7. 'if' → logprob: -18.063261032104492
    8. '<|end|>' → logprob: -18.438261032104492
    9. '```' → logprob: -18.438261032104492
    10. '   ' → logprob: -18.563261032104492

Token 812: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -20.12507438659668
    4. '
' → logprob: -20.25007438659668
    5. ' ' → logprob: -20.62507438659668
    6. '  ' → logprob: -21.00007438659668
    7. 'nx' → logprob: -22.00007438659668
    8. '    ' → logprob: -22.50007438659668
    9. '           ' → logprob: -22.50007438659668
    10. '```' → logprob: -22.87507438659668

Token 813: '0' (ID: 15)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.02536233514547348
    2. '0' → logprob: -4.025362491607666
    3. ' W' → logprob: -5.150362491607666
    4. 'ny' → logprob: -6.650362491607666
    5. ' ny' → logprob: -9.525362014770508
    6. ' ' → logprob: -11.525362014770508
    7. 'nx' → logprob: -11.775362014770508
    8. '	W' → logprob: -13.400362014770508
    9. '<W' → logprob: -13.400362014770508
    10. 'nw' → logprob: -13.650362014770508

Token 814: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47600382566452026
    2. '<' → logprob: -0.9760038256645203
    3. 'W' → logprob: -6.726003646850586
    4. '<W' → logprob: -7.851003646850586
    5. '<=' → logprob: -9.476003646850586
    6. ' <=' → logprob: -9.726003646850586
    7. '<n' → logprob: -10.226003646850586
    8. 'ny' → logprob: -10.351003646850586
    9. 'w' → logprob: -10.726003646850586
    10. 'and' → logprob: -10.851003646850586

Token 815: ' ny' (ID: 4423)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0011211648816242814
    2. 'ny' → logprob: -7.0011210441589355
    3. ' W' → logprob: -8.501121520996094
    4. ' ny' → logprob: -12.126121520996094
    5. 'nx' → logprob: -14.251121520996094
    6. '	W' → logprob: -15.751121520996094
    7. '   ' → logprob: -15.876121520996094
    8. 'Ny' → logprob: -17.001121520996094
    9. ' ' → logprob: -17.126121520996094
    10. '  ' → logprob: -18.001121520996094

Token 816: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20347507297992706
    2. '<' → logprob: -1.7034751176834106
    3. '<W' → logprob: -6.203474998474121
    4. 'W' → logprob: -10.453474998474121
    5. '<|end|>' → logprob: -12.703474998474121
    6. '<size' → logprob: -13.828474998474121
    7. ' W' → logprob: -13.953474998474121
    8. ' ' → logprob: -14.578474998474121
    9. '<len' → logprob: -14.953474998474121
    10. '<User' → logprob: -15.203474998474121

Token 817: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0005545823951251805
    2. ' W' → logprob: -7.50055456161499
    3. ' ' → logprob: -14.375555038452148
    4. '   ' → logprob: -14.500555038452148
    5. '	W' → logprob: -16.25055503845215
    6. '=W' → logprob: -16.37555503845215
    7. '
' → logprob: -16.62555503845215
    8. '  ' → logprob: -16.62555503845215
    9. '```' → logprob: -17.37555503845215
    10. '<W' → logprob: -17.37555503845215

Token 818: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14519330859184265
    2. 'and' → logprob: -2.145193338394165
    3. ':
' → logprob: -4.520193099975586
    4. ':' → logprob: -5.520193099975586
    5. '       ' → logprob: -5.770193099975586
    6. '           ' → logprob: -10.020193099975586
    7. '   ' → logprob: -10.520193099975586
    8. '```' → logprob: -12.895193099975586
    9. ' ' → logprob: -13.270193099975586
    10. ':

' → logprob: -13.395193099975586

Token 819: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026750145480036736
    2. ' if' → logprob: -4.151750087738037
    3. 'if' → logprob: -4.651750087738037
    4. '           ' → logprob: -7.401750087738037
    5. '```' → logprob: -7.651750087738037
    6. ' ' → logprob: -11.651750564575195
    7. ' and' → logprob: -12.901750564575195
    8. '   ' → logprob: -13.026750564575195
    9. '        
' → logprob: -13.026750564575195
    10. ' ' → logprob: -13.151750564575195

Token 820: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010247125755995512
    2. 'cell' → logprob: -7.5010247230529785
    3. '           ' → logprob: -8.37602424621582
    4. 'c' → logprob: -9.50102424621582
    5. '#' (adapté à ' #') → logprob: -10.00102424621582
    6. 'ch' → logprob: -10.50102424621582
    7. ' if' → logprob: -10.50102424621582
    8. '               ' → logprob: -10.62602424621582
    9. 'current' → logprob: -10.87602424621582
    10. 'cur' → logprob: -11.87602424621582

Token 821: ' Move' (ID: 25485)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0038896226324141026
    2. '#' → logprob: -6.253889560699463
    3. 'cell' → logprob: -6.753889560699463
    4. '           ' → logprob: -7.878889560699463
    5. 'c' → logprob: -8.628890037536621
    6. 'cur' → logprob: -9.628890037536621
    7. 'curr' → logprob: -10.003890037536621
    8. 'current' → logprob: -10.128890037536621
    9. '               ' → logprob: -10.503890037536621
    10. 'ch' → logprob: -10.753890037536621

Token 822: ' allowed' (ID: 9279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06316640973091125
    2. '           ' → logprob: -3.188166379928589
    3. 'and' → logprob: -4.563166618347168
    4. ' if' → logprob: -5.188166618347168
    5. '               ' → logprob: -6.438166618347168
    6. '#' → logprob: -7.188166618347168
    7. ' and' → logprob: -7.188166618347168
    8. 'is' → logprob: -7.938166618347168
    9. 'cell' → logprob: -9.688166618347168
    10. '==' → logprob: -9.688166618347168

Token 823: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0067154900170862675
    2. ' and' → logprob: -5.631715297698975
    3. ' if' → logprob: -5.881715297698975
    4. 'and' → logprob: -9.506715774536133
    5. ',' → logprob: -9.756715774536133
    6. 'if' → logprob: -10.006715774536133
    7. '<|end|>' → logprob: -10.131715774536133
    8. '               ' → logprob: -10.256715774536133
    9. ' or' → logprob: -11.506715774536133
    10. ':' → logprob: -11.506715774536133

Token 824: ' next' (ID: 2613)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.006922103464603424
    2. ' grid' → logprob: -5.756922245025635
    3. '(grid' → logprob: -6.256922245025635
    4. 'area' → logprob: -6.881922245025635
    5. 'areas' → logprob: -7.881922245025635
    6. 'if' → logprob: -9.006921768188477
    7. '
' → logprob: -9.631921768188477
    8. 'next' → logprob: -10.506921768188477
    9. 'the' → logprob: -10.631921768188477
    10. 'nx' → logprob: -10.756921768188477

Token 825: ' grid' (ID: 10586)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.31086465716362
    2. 'grid' → logprob: -1.8108646869659424
    3. '           ' → logprob: -3.0608646869659424
    4. ' area' → logprob: -3.6858646869659424
    5. ' grid' → logprob: -4.560864448547363
    6. '_area' → logprob: -4.685864448547363
    7. 'time' → logprob: -5.435864448547363
    8. '_grid' → logprob: -6.560864448547363
    9. '               ' → logprob: -6.685864448547363
    10. '   ' → logprob: -6.810864448547363

Token 826: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003369254292920232
    2. ' and' → logprob: -5.753369331359863
    3. ':' → logprob: -10.003369331359863
    4. ',' → logprob: -10.253369331359863
    5. 'and' → logprob: -10.503369331359863
    6. ' if' → logprob: -10.503369331359863
    7. ' =' → logprob: -10.628369331359863
    8. '<|end|>' → logprob: -12.003369331359863
    9. ' or' → logprob: -12.753369331359863
    10. '          ' → logprob: -12.753369331359863

Token 827: ' cell' (ID: 4206)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0007202956476248801
    2. ' grid' → logprob: -7.250720500946045
    3. '(grid' → logprob: -11.500720024108887
    4. 'area' → logprob: -16.250720977783203
    5. '           ' → logprob: -16.750720977783203
    6. '
' → logprob: -17.500720977783203
    7. '	grid' → logprob: -17.875720977783203
    8. 'areas' → logprob: -18.000720977783203
    9. '```' → logprob: -18.000720977783203
    10. '                   ' → logprob: -18.125720977783203

Token 828: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1411075592041016
    2. '=' → logprob: -2.1411075592041016
    3. ' not' → logprob: -2.1411075592041016
    4. ' in' → logprob: -2.2661075592041016
    5. ' at' → logprob: -3.0161075592041016
    6. 'not' → logprob: -3.0161075592041016
    7. ' !=' → logprob: -3.2661075592041016
    8. '[' → logprob: -3.3911075592041016
    9. ' is' → logprob: -3.3911075592041016
    10. '[n' → logprob: -3.6411075592041016

Token 829: ' not' (ID: 625)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.15449172258377075
    2. 'not' → logprob: -2.029491662979126
    3. 'grid' → logprob: -5.279491901397705
    4. ''' → logprob: -6.279491901397705
    5. ' not' → logprob: -6.529491901397705
    6. '.' → logprob: -6.904491901397705
    7. ' '.'' → logprob: -6.904491901397705
    8. ''#' → logprob: -7.529491901397705
    9. ' grid' → logprob: -9.154491424560547
    10. '('.')' → logprob: -9.279491424560547

Token 830: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.004916477482765913
    2. ''' → logprob: -5.754916667938232
    3. ' '#'' → logprob: -6.754916667938232
    4. '"#' → logprob: -8.629916191101074
    5. '`' → logprob: -9.004916191101074
    6. '#' → logprob: -9.754916191101074
    7. ''C' → logprob: -10.754916191101074
    8. ''O' → logprob: -10.879916191101074
    9. ''.' → logprob: -10.879916191101074
    10. ''ob' → logprob: -11.004916191101074

Token 831: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.056690316647291183
    2. '':
' → logprob: -3.056690216064453
    3. ''
' → logprob: -5.681690216064453
    4. ' and' → logprob: -6.056690216064453
    5. '':' → logprob: -6.556690216064453
    6. '')' → logprob: -8.806690216064453
    7. '',' → logprob: -9.181690216064453
    8. '               ' → logprob: -9.306690216064453
    9. '':

' → logprob: -9.431690216064453
    10. 'and' → logprob: -9.556690216064453

Token 832: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007043329067528248
    2. ' and' → logprob: -5.007043361663818
    3. 'and' → logprob: -8.38204288482666
    4. ' if' → logprob: -9.75704288482666
    5. '               ' → logprob: -10.50704288482666
    6. 'if' → logprob: -12.00704288482666
    7. ' or' → logprob: -12.88204288482666
    8. '```' → logprob: -13.25704288482666
    9. ',' → logprob: -13.75704288482666
    10. '       ' → logprob: -14.38204288482666

Token 833: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007859219331294298
    2. '           ' → logprob: -7.250785827636719
    3. ' if' → logprob: -9.500785827636719
    4. '               ' → logprob: -13.750785827636719
    5. 'If' → logprob: -16.87578582763672
    6. '	if' → logprob: -17.50078582763672
    7. '   ' → logprob: -17.75078582763672
    8. '                   ' → logprob: -17.87578582763672
    9. '       ' → logprob: -18.00078582763672
    10. '```' → logprob: -18.25078582763672

Token 834: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.00012451570364646614
    2. ' grid' → logprob: -9.00012493133545
    3. '(grid' → logprob: -14.37512493133545
    4. 'area' → logprob: -15.12512493133545
    5. 'areas' → logprob: -15.87512493133545
    6. '
' → logprob: -17.000123977661133
    7. '	grid' → logprob: -17.250123977661133
    8. '   ' → logprob: -17.250123977661133
    9. ' ' → logprob: -18.500123977661133
    10. 'graph' → logprob: -18.500123977661133

Token 835: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.05192817002534866
    2. '[next' → logprob: -3.4269282817840576
    3. '[n' → logprob: -4.4269280433654785
    4. 'next' → logprob: -5.6769280433654785
    5. '[' → logprob: -6.0519280433654785
    6. '```' → logprob: -9.551928520202637
    7. 'Next' → logprob: -9.926928520202637
    8. '[i' → logprob: -10.176928520202637
    9. 'nt' → logprob: -10.176928520202637
    10. '
' → logprob: -10.301928520202637

Token 836: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.392824874026701e-05
    2. '[' → logprob: -10.37503433227539
    3. '```' → logprob: -13.12503433227539
    4. ' [' → logprob: -15.50003433227539
    5. '
' → logprob: -15.75003433227539
    6. '   ' → logprob: -16.50003433227539
    7. '``' → logprob: -16.75003433227539
    8. '][' → logprob: -17.00003433227539
    9. 'nx' → logprob: -17.12503433227539
    10. '

' → logprob: -17.62503433227539

Token 837: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2664456789934775e-06
    2. 'nx' → logprob: -13.750000953674316
    3. '[x' → logprob: -17.500001907348633
    4. '(nx' → logprob: -17.875001907348633
    5. '```' → logprob: -18.125001907348633
    6. '[n' → logprob: -18.375001907348633
    7. ' nx' → logprob: -18.875001907348633
    8. 'n' → logprob: -19.250001907348633
    9. '
' → logprob: -19.250001907348633
    10. '[' → logprob: -19.250001907348633

Token 838: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022677783854305744
    2. '[' → logprob: -6.252267837524414
    3. '[n' → logprob: -8.627267837524414
    4. ']' → logprob: -9.502267837524414
    5. ''][' → logprob: -10.252267837524414
    6. '"][' → logprob: -10.252267837524414
    7. ' ][' → logprob: -11.877267837524414
    8. 'ny' → logprob: -13.752267837524414
    9. ']][' → logprob: -14.002267837524414
    10. '   ' → logprob: -14.127267837524414

Token 839: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -4.1557283111615106e-05
    2. ' ny' → logprob: -10.625041961669922
    3. 'n' → logprob: -11.500041961669922
    4. 'nj' → logprob: -12.375041961669922
    5. ']' → logprob: -13.500041961669922
    6. 'nyi' → logprob: -14.625041961669922
    7. ''ny' → logprob: -14.875041961669922
    8. 'y' → logprob: -15.875041961669922
    9. 'ney' → logprob: -16.250041961669922
    10. '

' → logprob: -17.000041961669922

Token 840: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.845626711845398
    2. '!=' → logprob: -0.970626711845398
    3. ']!=' → logprob: -1.845626711845398
    4. ' !=' → logprob: -3.7206268310546875
    5. ']!='' → logprob: -5.3456268310546875
    6. '!='' → logprob: -5.4706268310546875
    7. ')!=' → logprob: -7.8456268310546875
    8. '']' → logprob: -8.595626831054688
    9. ' ]' → logprob: -9.595626831054688
    10. ')' → logprob: -10.095626831054688

Token 841: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.023815447464585304
    2. ' !=' → logprob: -3.773815393447876
    3. '!='' → logprob: -7.523815631866455
    4. '()!=' → logprob: -11.523815155029297
    5. ')!=' → logprob: -11.648815155029297
    6. ']!=' → logprob: -11.898815155029297
    7. '==' → logprob: -13.398815155029297
    8. '!==' → logprob: -14.148815155029297
    9. '!="' → logprob: -14.773815155029297
    10. '!=-' → logprob: -14.773815155029297

Token 842: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -1.8908587662735954e-05
    2. ' '#'' → logprob: -11.125019073486328
    3. '"#' → logprob: -12.875019073486328
    4. '#' → logprob: -14.375019073486328
    5. ' '#' → logprob: -15.750019073486328
    6. '('#' → logprob: -15.750019073486328
    7. '','#' → logprob: -16.000019073486328
    8. ''' → logprob: -16.375019073486328
    9. ''*' → logprob: -16.500019073486328
    10. ''''' → logprob: -16.625019073486328

Token 843: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9449262022972107
    2. '':
' → logprob: -1.5699262619018555
    3. ' and' → logprob: -1.6949262619018555
    4. ':' → logprob: -2.0699262619018555
    5. '':' → logprob: -2.8199262619018555
    6. '):
' → logprob: -4.1949262619018555
    7. '):' → logprob: -5.5699262619018555
    8. ''):
' → logprob: -5.5699262619018555
    9. ')' → logprob: -5.9449262619018555
    10. '           ' → logprob: -6.1949262619018555

Token 844: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.685467764735222e-05
    2. ' if' → logprob: -10.125086784362793
    3. '           ' → logprob: -11.375086784362793
    4. '                
' → logprob: -12.000086784362793
    5. 'if' → logprob: -12.500086784362793
    6. ')' → logprob: -12.625086784362793
    7. '                   ' → logprob: -12.750086784362793
    8. '              ' → logprob: -12.875086784362793
    9. '<|end|>' → logprob: -12.875086784362793
    10. ' and' → logprob: -13.125086784362793

Token 845: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.30127599835395813
    2. 'state' → logprob: -1.9262759685516357
    3. 'if' → logprob: -2.1762759685516357
    4. '           ' → logprob: -7.551276206970215
    5. '   ' → logprob: -9.676276206970215
    6. ' key' → logprob: -9.801276206970215
    7. 'old' → logprob: -9.926276206970215
    8. '       ' → logprob: -10.051276206970215
    9. 'new' → logprob: -10.051276206970215
    10. 'st' → logprob: -10.426276206970215

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0620490238070488
    2. ' =' → logprob: -2.81204891204834
    3. '=(' → logprob: -9.56204891204834
    4. '(n' → logprob: -12.18704891204834
    5. '(nx' → logprob: -13.18704891204834
    6. ' =(' → logprob: -13.56204891204834
    7. ' (' → logprob: -13.68704891204834
    8. '=n' → logprob: -14.43704891204834
    9. '=
' → logprob: -14.81204891204834
    10. '(' → logprob: -15.68704891204834

Token 847: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.000741134281270206
    2. '(n' → logprob: -7.250741004943848
    3. ' (' → logprob: -10.375741004943848
    4. '   ' → logprob: -17.375741958618164
    5. '(' → logprob: -17.625741958618164
    6. '(x' → logprob: -18.500741958618164
    7. '
' → logprob: -19.000741958618164
    8. '(N' → logprob: -19.000741958618164
    9. '(ns' → logprob: -19.000741958618164
    10. '```' → logprob: -19.500741958618164

Token 848: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.001934469910338521
    2. '(nx' → logprob: -6.25193452835083
    3. ' nx' → logprob: -12.126934051513672
    4. 'n' → logprob: -15.251934051513672
    5. 'x' → logprob: -16.126934051513672
    6. '
' → logprob: -17.001934051513672
    7. 'Nx' → logprob: -17.126934051513672
    8. '   ' → logprob: -17.126934051513672
    9. ' (' → logprob: -18.376934051513672
    10. '(n' → logprob: -19.251934051513672

Token 849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3133889436721802
    2. ',n' → logprob: -1.3133889436721802
    3. ' ,' → logprob: -9.31338882446289
    4. '<|end|>' → logprob: -10.93838882446289
    5. ',
' → logprob: -11.93838882446289
    6. '(nx' → logprob: -12.31338882446289
    7. ',y' → logprob: -13.31338882446289
    8. ',num' → logprob: -13.43838882446289
    9. '[n' → logprob: -13.81338882446289
    10. ',np' → logprob: -14.43838882446289

Token 850: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -2.463036435074173e-05
    2. ' ny' → logprob: -10.625024795532227
    3. 'nyi' → logprob: -16.500024795532227
    4. 'n' → logprob: -17.000024795532227
    5. '   ' → logprob: -17.500024795532227
    6. ''ny' → logprob: -18.250024795532227
    7. '
' → logprob: -18.875024795532227
    8. 'nym' → logprob: -19.125024795532227
    9. '    ' → logprob: -19.750024795532227
    10. 'nyt' → logprob: -19.750024795532227

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017648482753429562
    2. ',n' → logprob: -8.875176429748535
    3. ',t' → logprob: -10.875176429748535
    4. 'nt' → logprob: -11.750176429748535
    5. ' ,' → logprob: -12.250176429748535
    6. ',
' → logprob: -12.875176429748535
    7. '(nt' → logprob: -14.375176429748535
    8. ')' → logprob: -14.500176429748535
    9. ',tp' → logprob: -15.750176429748535
    10. ',next' → logprob: -15.750176429748535

Token 852: ' nt' (ID: 7646)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -1.8624639324116288e-06
    2. ' nt' → logprob: -13.250001907348633
    3. '(nt' → logprob: -18.125001907348633
    4. '_nt' → logprob: -20.000001907348633
    5. 'n' → logprob: -20.625001907348633
    6. '
' → logprob: -21.625001907348633
    7. ')' → logprob: -21.875001907348633
    8. '   ' → logprob: -22.375001907348633
    9. '```' → logprob: -22.750001907348633
    10. '.nt' → logprob: -22.875001907348633

Token 853: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890212535858154
    2. ')
' → logprob: -2.578902244567871
    3. ')
' → logprob: -11.578902244567871
    4. '               ' → logprob: -13.578902244567871
    5. ')

' → logprob: -14.453902244567871
    6. '')' → logprob: -15.328902244567871
    7. ' )' → logprob: -15.578902244567871
    8. '<|end|>' → logprob: -15.578902244567871
    9. '```' → logprob: -16.328901290893555
    10. '),' → logprob: -16.703901290893555

Token 854: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02538779005408287
    2. 'if' → logprob: -4.525387763977051
    3. ' if' → logprob: -5.150387763977051
    4. '<|end|>' → logprob: -5.275387763977051
    5. '                
' → logprob: -7.275387763977051
    6. '```' → logprob: -7.275387763977051
    7. ')' → logprob: -7.275387763977051
    8. '                ' → logprob: -8.02538776397705
    9. '              ' → logprob: -8.90038776397705
    10. '=' → logprob: -8.90038776397705

Token 855: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002582402084954083
    2. 'current' → logprob: -9.375258445739746
    3. ' if' → logprob: -9.750258445739746
    4. '               ' → logprob: -10.000258445739746
    5. 'old' → logprob: -10.125258445739746
    6. 'prev' → logprob: -10.875258445739746
    7. 'cur' → logprob: -12.500258445739746
    8. '                   ' → logprob: -12.750258445739746
    9. 'curr' → logprob: -13.250258445739746
    10. 'd' → logprob: -14.250258445739746

Token 856: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11377303302288055
    2. 'key' → logprob: -2.2387731075286865
    3. ' dist' → logprob: -7.738772869110107
    4. ' key' → logprob: -8.113773345947266
    5. '(dist' → logprob: -8.863773345947266
    6. '(key' → logprob: -10.238773345947266
    7. '   ' → logprob: -10.988773345947266
    8. ' ' → logprob: -12.488773345947266
    9. 'visited' → logprob: -12.738773345947266
    10. '	dist' → logprob: -12.863773345947266

Token 857: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00015014449309092015
    2. '.setdefault' → logprob: -9.625149726867676
    3. 'get' → logprob: -10.375149726867676
    4. 'key' → logprob: -11.000149726867676
    5. '.' → logprob: -11.125149726867676
    6. '[key' → logprob: -11.875149726867676
    7. ' .' → logprob: -12.000149726867676
    8. '.key' → logprob: -12.875149726867676
    9. '   ' → logprob: -13.375149726867676
    10. '```' → logprob: -13.875149726867676

Token 858: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -1.759734732331708e-05
    2. 'key' → logprob: -11.000017166137695
    3. ' (' → logprob: -14.125017166137695
    4. ' key' → logprob: -17.000017166137695
    5. ',key' → logprob: -17.250017166137695
    6. '[key' → logprob: -17.875017166137695
    7. '((' → logprob: -20.375017166137695
    8. '(' → logprob: -20.500017166137695
    9. '```' → logprob: -22.375017166137695
    10. ':key' → logprob: -22.375017166137695

Token 859: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.317579448223114
    2. ' is' → logprob: -1.5675795078277588
    3. ')' → logprob: -3.567579507827759
    4. '>' → logprob: -3.817579507827759
    5. ' >' → logprob: -4.56757926940918
    6. 'is' → logprob: -6.81757926940918
    7. ' ,' → logprob: -7.19257926940918
    8. ',None' → logprob: -8.19257926940918
    9. '=' → logprob: -8.69257926940918
    10. ' ==' → logprob: -8.69257926940918

Token 860: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.9361264946837764e-07
    2. ' max' → logprob: -15.625
    3. '100' → logprob: -20.25
    4. '10' → logprob: -20.375
    5. '	max' → logprob: -20.625
    6. '999' → logprob: -21.75
    7. 'min' → logprob: -22.0
    8. '1' → logprob: -22.5
    9. '(max' → logprob: -22.625
    10. 'float' → logprob: -22.625

Token 861: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -6.704273118884885e-07
    2. ' size' → logprob: -15.500000953674316
    3. 'value' → logprob: -16.25
    4. 'sizes' → logprob: -16.375
    5. '<size' → logprob: -16.875
    6. 'sizei' → logprob: -17.25
    7. ')' → logprob: -17.75
    8. '_size' → logprob: -17.875
    9. '[size' → logprob: -17.875
    10. 'SIZE' → logprob: -18.75

Token 862: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024706630501896143
    2. '>' → logprob: -6.25247049331665
    3. ')>' → logprob: -7.62747049331665
    4. ' )' → logprob: -10.252470970153809
    5. ' >' → logprob: -11.377470970153809
    6. '`)' → logprob: -12.877470970153809
    7. '   ' → logprob: -13.502470970153809
    8. '>)' → logprob: -13.627470970153809
    9. '```' → logprob: -14.127470970153809
    10. '）' → logprob: -14.252470970153809

Token 863: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0006458373973146081
    2. ' >' → logprob: -7.375645637512207
    3. '<=' → logprob: -11.000645637512207
    4. '   ' → logprob: -13.500645637512207
    5. '```' → logprob: -14.875645637512207
    6. ')>' → logprob: -16.125646591186523
    7. '>
' → logprob: -16.125646591186523
    8. '>`' → logprob: -16.250646591186523
    9. '()>' → logprob: -16.500646591186523
    10. ' ' → logprob: -16.625646591186523

Token 864: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0325924449716695e-05
    2. ' n' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250009536743164
    4. '	n' → logprob: -16.875009536743164
    5. 'steps' → logprob: -18.125009536743164
    6. 'n't' → logprob: -19.750009536743164
    7. '           ' → logprob: -20.000009536743164
    8. '
' → logprob: -20.250009536743164
    9. 'nt' → logprob: -20.625009536743164
    10. '_n' → logprob: -20.625009536743164

Token 865: 'steps' (ID: 27176)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000305310997646302
    2. 'steps' → logprob: -8.12530517578125
    3. '   ' → logprob: -12.25030517578125
    4. ' n' → logprob: -13.75030517578125
    5. '       ' → logprob: -14.12530517578125
    6. '_steps' → logprob: -14.25030517578125
    7. '```' → logprob: -14.25030517578125
    8. '`' → logprob: -15.75030517578125
    9. '_n' → logprob: -15.75030517578125
    10. '(n' → logprob: -15.75030517578125

Token 866: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22583642601966858
    2. ':' → logprob: -1.6008363962173462
    3. '):
' → logprob: -8.850836753845215
    4. '=' → logprob: -9.975836753845215
    5. '                   ' → logprob: -10.100836753845215
    6. ' and' → logprob: -10.600836753845215
    7. '               ' → logprob: -10.975836753845215
    8. '():
' → logprob: -11.100836753845215
    9. '):' → logprob: -11.100836753845215
    10. '```' → logprob: -11.100836753845215

Token 867: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3573647737503052
    2. '               ' → logprob: -1.2323647737503052
    3. ' he' → logprob: -5.607364654541016
    4. 'he' → logprob: -6.607364654541016
    5. '```' → logprob: -6.857364654541016
    6. 'dist' → logprob: -6.982364654541016
    7. ' dist' → logprob: -7.232364654541016
    8. '                       ' → logprob: -7.857364654541016
    9. '           ' → logprob: -7.982364654541016
    10. '                ' → logprob: -8.482364654541016

Token 868: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.06473296135663986
    2. '                   ' → logprob: -2.8147330284118652
    3. ' dist' → logprob: -6.439733028411865
    4. 'he' → logprob: -6.814733028411865
    5. '                       ' → logprob: -10.939732551574707
    6. '```' → logprob: -11.064732551574707
    7. '                    ' → logprob: -11.439732551574707
    8. '               ' → logprob: -11.564732551574707
    9. ' he' → logprob: -12.314732551574707
    10. '   ' → logprob: -12.689732551574707

Token 869: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9361264946837764e-07
    2. '[(' → logprob: -15.875
    3. '[' → logprob: -16.75
    4. '(key' → logprob: -17.25
    5. 'key' → logprob: -18.125
    6. '[token' → logprob: -18.125
    7. ',key' → logprob: -19.5
    8. '
' → logprob: -19.625
    9. '[
' → logprob: -20.625
    10. '```' → logprob: -21.0

Token 870: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013305948814377189
    2. ' =' → logprob: -6.626330375671387
    3. '=
' → logprob: -13.251330375671387
    4. ']=' → logprob: -13.376330375671387
    5. '=n' → logprob: -14.501330375671387
    6. ']' → logprob: -15.001330375671387
    7. ')=' → logprob: -15.251330375671387
    8. ')' → logprob: -15.626330375671387
    9. '   ' → logprob: -17.126331329345703
    10. '=

' → logprob: -18.501331329345703

Token 871: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020401719666551799
    2. ' =' → logprob: -8.500204086303711
    3. '=
' → logprob: -14.750204086303711
    4. '=n' → logprob: -16.87520408630371
    5. '=

' → logprob: -18.75020408630371
    6. '＝' → logprob: -18.87520408630371
    7. '.=' → logprob: -19.50020408630371
    8. ')=' → logprob: -19.75020408630371
    9. '=k' → logprob: -20.00020408630371
    10. '=new' → logprob: -20.00020408630371

Token 872: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012451570364646614
    2. ' n' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.25012493133545
    4. '	n' → logprob: -15.75012493133545
    5. '                   ' → logprob: -16.375123977661133
    6. '           ' → logprob: -17.625123977661133
    7. '               ' → logprob: -18.250123977661133
    8. '       ' → logprob: -18.375123977661133
    9. '```' → logprob: -18.375123977661133
    10. '_n' → logprob: -18.625123977661133

Token 873: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -3.650518920039758e-06
    2. 'st' → logprob: -13.625003814697266
    3. ' steps' → logprob: -14.375003814697266
    4. 'esteps' → logprob: -14.375003814697266
    5. '_steps' → logprob: -14.500003814697266
    6. 'te' → logprob: -15.375003814697266
    7. 'n' → logprob: -15.375003814697266
    8. 's' → logprob: -16.625003814697266
    9. 'ste' → logprob: -16.750003814697266
    10. 'step' → logprob: -17.000003814697266

Token 874: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015549783129245043
    2. 'he' → logprob: -7.0015549659729
    3. ' he' → logprob: -7.6265549659729
    4. '               ' → logprob: -10.251555442810059
    5. '```' → logprob: -10.251555442810059
    6. '           ' → logprob: -11.251555442810059
    7. '   ' → logprob: -11.251555442810059
    8. ',' → logprob: -11.376555442810059
    9. '                    ' → logprob: -11.501555442810059
    10. '
' → logprob: -11.501555442810059

Token 875: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11756622791290283
    2. 'he' → logprob: -2.2425661087036133
    3. '```' → logprob: -5.992566108703613
    4. ' he' → logprob: -6.242566108703613
    5. '               ' → logprob: -9.367566108703613
    6. '                    
' → logprob: -10.367566108703613
    7. '                  ' → logprob: -10.367566108703613
    8. '                       ' → logprob: -10.617566108703613
    9. '           ' → logprob: -10.617566108703613
    10. '                    ' → logprob: -10.742566108703613

Token 876: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -9.088346359931165e-07
    2. ' he' → logprob: -14.000000953674316
    3. '```' → logprob: -19.125
    4. 'heap' → logprob: -21.125
    5. '                   ' → logprob: -22.875
    6. '   ' → logprob: -23.25
    7. '
' → logprob: -24.5
    8. 'ho' → logprob: -25.375
    9. 'He' → logprob: -25.5
    10. '                       ' → logprob: -25.625

Token 877: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.1875571544806007e-05
    2. 'ap' → logprob: -11.375011444091797
    3. 'pp' → logprob: -15.750011444091797
    4. 'he' → logprob: -16.375011444091797
    5. '```' → logprob: -16.750011444091797
    6. 'a' → logprob: -18.250011444091797
    7. 'appt' → logprob: -18.500011444091797
    8. 'push' → logprob: -19.375011444091797
    9. 'p' → logprob: -19.500011444091797
    10. '`' → logprob: -19.625011444091797

Token 878: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.723352049040841e-06
    2. 'push' → logprob: -12.375004768371582
    3. 'op' → logprob: -15.500004768371582
    4. 'sh' → logprob: -15.500004768371582
    5. '```' → logprob: -18.250003814697266
    6. 'us' → logprob: -18.750003814697266
    7. 'u' → logprob: -18.875003814697266
    8. 'p' → logprob: -19.375003814697266
    9. 'USH' → logprob: -19.625003814697266
    10. 'ushed' → logprob: -20.125003814697266

Token 879: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.282920129597187e-05
    2. 'hq' → logprob: -11.375012397766113
    3. '(' → logprob: -14.125012397766113
    4. 'h' → logprob: -14.875012397766113
    5. '(
' → logprob: -16.50001335144043
    6. '```' → logprob: -16.62501335144043
    7. ' (' → logprob: -16.75001335144043
    8. '[h' → logprob: -18.37501335144043
    9. '	h' → logprob: -18.50001335144043
    10. ',h' → logprob: -18.50001335144043

Token 880: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. '(h' → logprob: -15.250000953674316
    3. 'hq' → logprob: -15.500000953674316
    4. 'qh' → logprob: -17.0
    5. '(q' → logprob: -17.875
    6. '```' → logprob: -19.0
    7. 'Q' → logprob: -19.375
    8. 'qs' → logprob: -20.25
    9. '	q' → logprob: -20.375
    10. ')' → logprob: -20.75

Token 881: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.001501652062870562
    2. ',' → logprob: -7.126501560211182
    3. '(' → logprob: -8.00150203704834
    4. ',h' → logprob: -8.50150203704834
    5. '```' → logprob: -9.87650203704834
    6. ')' → logprob: -10.25150203704834
    7. ' (' → logprob: -10.37650203704834
    8. '(
' → logprob: -11.37650203704834
    9. '(heap' → logprob: -11.37650203704834
    10. '((' → logprob: -12.50150203704834

Token 882: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014199945144355297
    2. ' (' → logprob: -4.264199733734131
    3. '(' → logprob: -10.264200210571289
    4. '   ' → logprob: -13.639200210571289
    5. '((' → logprob: -15.139200210571289
    6. ' ' → logprob: -16.38920021057129
    7. '(nx' → logprob: -17.88920021057129
    8. '  ' → logprob: -18.26420021057129
    9. ')' → logprob: -18.63920021057129
    10. '```' → logprob: -18.76420021057129

Token 883: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.41866585687967e-06
    2. '(n' → logprob: -11.750008583068848
    3. ' n' → logprob: -15.000008583068848
    4. '   ' → logprob: -15.875008583068848
    5. '                   ' → logprob: -16.75000762939453
    6. ')n' → logprob: -17.37500762939453
    7. '	n' → logprob: -17.50000762939453
    8. '
' → logprob: -19.25000762939453
    9. '```' → logprob: -19.25000762939453
    10. '[n' → logprob: -19.50000762939453

Token 884: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.0007333897519856691
    2. 'n' → logprob: -7.250733375549316
    3. '(n' → logprob: -11.875733375549316
    4. 'esteps' → logprob: -12.125733375549316
    5. 'st' → logprob: -12.875733375549316
    6. ' steps' → logprob: -12.875733375549316
    7. '_steps' → logprob: -13.875733375549316
    8. '
' → logprob: -13.875733375549316
    9. '   ' → logprob: -14.625733375549316
    10. '```' → logprob: -14.625733375549316

Token 885: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012180940248072147
    2. ' ,' → logprob: -6.751218318939209
    3. ',n' → logprob: -10.62621784210205
    4. ',
' → logprob: -11.37621784210205
    5. ',t' → logprob: -11.75121784210205
    6. '```' → logprob: -13.75121784210205
    7. '`,' → logprob: -14.50121784210205
    8. ',key' → logprob: -14.87621784210205
    9. ',int' → logprob: -14.87621784210205
    10. ')' → logprob: -15.25121784210205

Token 886: ' nt' (ID: 7646)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.0001239196863025427
    2. ' nt' → logprob: -9.000123977661133
    3. '(nt' → logprob: -15.000123977661133
    4. '_nt' → logprob: -16.500123977661133
    5. 'n' → logprob: -19.000123977661133
    6. '.nt' → logprob: -19.500123977661133
    7. '```' → logprob: -20.125123977661133
    8. 'nts' → logprob: -20.375123977661133
    9. 'ntu' → logprob: -20.625123977661133
    10. 'ntl' → logprob: -21.000123977661133

Token 887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20243355631828308
    2. ',n' → logprob: -1.7024335861206055
    3. ',key' → logprob: -6.9524335861206055
    4. ',x' → logprob: -9.952433586120605
    5. ',node' → logprob: -12.327433586120605
    6. ' ,' → logprob: -12.577433586120605
    7. ',k' → logprob: -12.952433586120605
    8. ',next' → logprob: -13.077433586120605
    9. '(nx' → logprob: -14.077433586120605
    10. ',
' → logprob: -14.452433586120605

Token 888: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -2.2603901015827432e-05
    2. ' nx' → logprob: -10.750022888183594
    3. '(nx' → logprob: -13.750022888183594
    4. 'n' → logprob: -17.500022888183594
    5. 'Nx' → logprob: -18.500022888183594
    6. '```' → logprob: -19.250022888183594
    7. 'x' → logprob: -19.625022888183594
    8. '
' → logprob: -20.500022888183594
    9. 'NX' → logprob: -20.750022888183594
    10. 'kx' → logprob: -22.000022888183594

Token 889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.236549335066229e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',n' → logprob: -14.500021934509277
    4. ',y' → logprob: -15.375021934509277
    5. '```' → logprob: -15.625021934509277
    6. ',
' → logprob: -18.375022888183594
    7. '_,' → logprob: -19.625022888183594
    8. 'ny' → logprob: -19.750022888183594
    9. '<|end|>' → logprob: -20.125022888183594
    10. '`,' → logprob: -20.125022888183594

Token 890: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -7.493430894101039e-05
    2. ' ny' → logprob: -9.500075340270996
    3. 'n' → logprob: -16.87507438659668
    4. 'nyi' → logprob: -18.25007438659668
    5. 'ney' → logprob: -19.12507438659668
    6. 'nym' → logprob: -19.50007438659668
    7. 'nyt' → logprob: -20.25007438659668
    8. 'new' → logprob: -20.87507438659668
    9. 'nye' → logprob: -20.87507438659668
    10. 'ni' → logprob: -21.25007438659668

Token 891: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003452368837315589
    2. '))
' → logprob: -8.000345230102539
    3. ' ))' → logprob: -12.500345230102539
    4. '                   ' → logprob: -12.750345230102539
    5. ')' → logprob: -13.125345230102539
    6. ')))' → logprob: -15.250345230102539
    7. '               ' → logprob: -15.250345230102539
    8. '   ' → logprob: -15.625345230102539
    9. '                       ' → logprob: -16.37534523010254
    10. '           ' → logprob: -16.37534523010254

Token 892: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 893: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.704273118884885e-07
    2. 'res' → logprob: -14.375000953674316
    3. '(' → logprob: -19.125
    4. ' (' → logprob: -19.25
    5. '(re' → logprob: -19.25
    6. '(
' → logprob: -19.25
    7. '(result' → logprob: -19.875
    8. '(r' → logprob: -20.375
    9. ' res' → logprob: -20.75
    10. '=res' → logprob: -20.875

Token 894: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '())' → logprob: -15.875000953674316
    3. ' )' → logprob: -16.0
    4. '))' → logprob: -16.5
    5. ')`' → logprob: -17.375
    6. ')
' → logprob: -17.5
    7. '```' → logprob: -18.125
    8. '`)' → logprob: -18.125
    9. ')}' → logprob: -18.25
    10. '')' → logprob: -18.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 892
Tokens correctement prédits (1ère position, stricte): 315
Tokens correctement prédits (1ère position, avec adaptation): 339
Tokens correctement prédits (top 10): 668
Précision stricte (1ère position): 35.31%
Précision adaptée (1ère position): 38.00%
Précision (top 10): 74.89%
================================================================================
