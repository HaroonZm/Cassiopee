================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class DartScoreOptimizer:
    class ScoreParts:
        def __init__(self, scores):
            self._scores = scores
        
        def __iter__(self):
            return iter(self._scores)
        
        def __len__(self):
            return len(self._scores)
    
    class ScoreLimit:
        def __init__(self, limit):
            self.limit = limit
    
    class MaxDarts:
        def __init__(self, max_darts):
            self.count = max_darts
    
    class Result:
        def __init__(self, max_score):
            self.max_score = max_score
        
        def __str__(self):
            return str(self.max_score)
    
    class DartThrowSimulation:
        def __init__(self, parts, limit, max_darts):
            self.parts = parts
            self.limit = limit
            self.max_darts = max_darts
        
        def compute(self):
            # dp[number_of_throws][score] = possible or not
            # To avoid memory explosion, we use set of achievable sums per throw count
            achievable_scores = [set() for _ in range(self.max_darts.count + 1)]
            achievable_scores[0].add(0)
            for score in self.parts:
                for throws in range(self.max_darts.count - 1, -1, -1):
                    current_scores = achievable_scores[throws]
                    next_scores = achievable_scores[throws + 1]
                    for s in current_scores:
                        new_score = s + score
                        if new_score <= self.limit.limit:
                            next_scores.add(new_score)
            
            max_reachable = 0
            for throws in range(self.max_darts.count + 1):
                local_max = max(achievable_scores[throws]) if achievable_scores[throws] else 0
                if local_max > max_reachable:
                    max_reachable = local_max
            return DartScoreOptimizer.Result(max_reachable)
    
    def __init__(self):
        self.datasets = []
    
    def add_dataset(self, n, m, points):
        self.datasets.append((self.ScoreParts(points), self.ScoreLimit(m), self.MaxDarts(4)))
    
    def run(self):
        results = []
        for parts, limit, max_darts in self.datasets:
            simulation = self.DartThrowSimulation(parts, limit, max_darts)
            results.append(simulation.compute())
        return results


def main():
    import sys
    optimizer = DartScoreOptimizer()
    while True:
        line = ''
        while line.strip() == '':
            line = sys.stdin.readline()
            if not line:
                return
        n, m = map(int, line.strip().split())
        if n == 0 and m == 0:
            break
        points = []
        while len(points) < n:
            line = sys.stdin.readline()
            if not line:
                return
            points.extend(map(int, line.strip().split()))
        points = points[:n]
        optimizer.add_dataset(n, m, points)
    results = optimizer.run()
    for res in results:
        print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dart' (ID: 85214)
  → Token d'amorce (pas de prédiction)

Token 2: 'Score' (ID: 12357)
  → Token d'amorce (pas de prédiction)

Token 3: 'Optimizer' (ID: 120293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45099401473999023
    2. '{' → logprob: -1.2009940147399902
    3. ':' → logprob: -3.7009940147399902
    4. ' {' → logprob: -3.7009940147399902
    5. '.' → logprob: -4.57599401473999
    6. ' ' → logprob: -6.82599401473999
    7. '```' → logprob: -7.32599401473999
    8. ' (' → logprob: -8.325994491577148
    9. '({' → logprob: -9.450994491577148
    10. '[' → logprob: -9.825994491577148

Token 4: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2861495614051819
    2. '(' → logprob: -1.786149501800537
    3. ':' → logprob: -2.911149501800537
    4. '.' → logprob: -4.286149501800537
    5. ' {' → logprob: -4.411149501800537
    6. ' ' → logprob: -7.911149501800537
    7. '```' → logprob: -8.036149978637695
    8. '[' → logprob: -10.036149978637695
    9. ' (' → logprob: -10.411149978637695
    10. '_' → logprob: -10.536149978637695

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4876483082771301
    2. '(' → logprob: -0.9876483082771301
    3. '   ' → logprob: -5.1126484870910645
    4. '```' → logprob: -5.3626484870910645
    5. '.' → logprob: -6.6126484870910645
    6. '(
' → logprob: -7.7376484870910645
    7. ':
' → logprob: -8.362648010253906
    8. '[' → logprob: -8.862648010253906
    9. '():' → logprob: -9.112648010253906
    10. '{' → logprob: -9.612648010253906

Token 6: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8287962079048157
    2. ' ' → logprob: -1.453796148300171
    3. '```' → logprob: -1.828796148300171
    4. '    ' → logprob: -2.453796148300171
    5. '\' → logprob: -3.703796148300171
    6. '<|end|>' → logprob: -4.45379638671875
    7. ' 
' → logprob: -4.57879638671875
    8. '    
' → logprob: -5.07879638671875
    9. '       ' → logprob: -5.20379638671875
    10. ' ```' → logprob: -5.70379638671875

Token 7: ' Score' (ID: 30731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5655480623245239
    2. '   ' → logprob: -1.815548062324524
    3. 'D' → logprob: -2.3155479431152344
    4. '  ' → logprob: -3.1905479431152344
    5. '    ' → logprob: -3.6905479431152344
    6. ' Optim' → logprob: -3.8155479431152344
    7. '       ' → logprob: -4.190547943115234
    8. '      ' → logprob: -5.065547943115234
    9. 'Optim' → logprob: -5.190547943115234
    10. ' Score' → logprob: -5.190547943115234

Token 8: 'Parts' (ID: 35773)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04757053777575493
    2. '(' → logprob: -4.422570705413818
    3. 'Calculator' → logprob: -4.922570705413818
    4. 'Optimizer' → logprob: -5.172570705413818
    5. '():' → logprob: -5.422570705413818
    6. '   ' → logprob: -6.047570705413818
    7. 'Keeper' → logprob: -6.422570705413818
    8. '(object' → logprob: -6.547570705413818
    9. 's' → logprob: -6.547570705413818
    10. 'Type' → logprob: -6.672570705413818

Token 9: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013372798450291157
    2. '(' → logprob: -4.388372898101807
    3. ':
' → logprob: -7.638372898101807
    4. '.' → logprob: -9.013372421264648
    5. '[' → logprob: -9.263372421264648
    6. '<|end|>' → logprob: -10.388372421264648
    7. '```' → logprob: -10.763372421264648
    8. '{' → logprob: -11.263372421264648
    9. ' :' → logprob: -11.263372421264648
    10. ',' → logprob: -11.263372421264648

Token 10: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1980704665184021
    2. '   ' → logprob: -2.698070526123047
    3. '(' → logprob: -2.823070526123047
    4. '    ' → logprob: -3.698070526123047
    5. '\' → logprob: -5.073070526123047
    6. '        ' → logprob: -5.823070526123047
    7. '<|end|>' → logprob: -6.073070526123047
    8. ' (' → logprob: -6.198070526123047
    9. '.' → logprob: -6.698070526123047
    10. '[' → logprob: -6.698070526123047

Token 11: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.786819577217102
    2. '(' → logprob: -0.911819577217102
    3. '           ' → logprob: -3.4118194580078125
    4. 'class' → logprob: -4.5368194580078125
    5. '   ' → logprob: -4.6618194580078125
    6. '```' → logprob: -4.6618194580078125
    7. 'def' (adapté à ' def') → logprob: -4.7868194580078125
    8. '(
' → logprob: -4.7868194580078125
    9. '\' → logprob: -4.7868194580078125
    10. ' (' → logprob: -4.9118194580078125

Token 12: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08710216730833054
    2. '__' → logprob: -2.587102174758911
    3. ' calculate' → logprob: -5.587101936340332
    4. ' init' → logprob: -6.087101936340332
    5. ' ' → logprob: -6.712101936340332
    6. 'init' → logprob: -8.087101936340332
    7. ' ' → logprob: -8.212101936340332
    8. '_init' → logprob: -9.212101936340332
    9. 'calculate' → logprob: -9.462101936340332
    10. '_' → logprob: -9.837101936340332

Token 13: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.226628895296017e-06
    2. ' init' → logprob: -12.250007629394531
    3. 'ini' → logprob: -13.125007629394531
    4. 'in' → logprob: -15.750007629394531
    5. 'int' → logprob: -16.12500762939453
    6. 'i' → logprob: -16.37500762939453
    7. 'inti' → logprob: -16.87500762939453
    8. 'innit' → logprob: -17.50000762939453
    9. '	init' → logprob: -17.50000762939453
    10. '_init' → logprob: -17.87500762939453

Token 14: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06240210309624672
    2. '__' → logprob: -2.8124020099639893
    3. '__(
' → logprob: -8.06240177154541
    4. '(' → logprob: -9.93740177154541
    5. '__((' → logprob: -10.56240177154541
    6. '(self' → logprob: -11.06240177154541
    7. '__('' → logprob: -11.43740177154541
    8. '___' → logprob: -11.81240177154541
    9. '__(*' → logprob: -12.31240177154541
    10. '__[' → logprob: -13.43740177154541

Token 15: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003685474395751953
    2. ' self' → logprob: -5.628685474395752
    3. ')' → logprob: -10.253684997558594
    4. '(self' → logprob: -10.503684997558594
    5. 'score' → logprob: -12.003684997558594
    6. '0' → logprob: -12.503684997558594
    7. 'd' → logprob: -13.753684997558594
    8. ' ' → logprob: -13.753684997558594
    9. ',self' → logprob: -14.128684997558594
    10. 'sc' → logprob: -14.128684997558594

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0116426981985569
    2. ' ,' → logprob: -4.761642932891846
    3. 'self' → logprob: -6.011642932891846
    4. '):' → logprob: -8.261642456054688
    5. ',self' → logprob: -8.636642456054688
    6. ' self' → logprob: -10.636642456054688
    7. ',d' → logprob: -10.761642456054688
    8. ' ' → logprob: -10.886642456054688
    9. ')' → logprob: -10.886642456054688
    10. '_self' → logprob: -11.511642456054688

Token 17: ' scores' (ID: 18923)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04175945371389389
    2. 'self' → logprob: -3.791759490966797
    3. ' parts' → logprob: -4.541759490966797
    4. ' score' → logprob: -6.666759490966797
    5. ' max' → logprob: -7.041759490966797
    6. ' total' → logprob: -7.041759490966797
    7. ' darts' → logprob: -7.166759490966797
    8. ' dart' → logprob: -7.416759490966797
    9. ' base' → logprob: -7.666759490966797
    10. ' player' → logprob: -8.166759490966797

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040484048426151276
    2. ',' → logprob: -3.4154839515686035
    3. ':' → logprob: -5.5404839515686035
    4. '=' → logprob: -6.4154839515686035
    5. ' ):' → logprob: -8.040484428405762
    6. ')' → logprob: -8.165484428405762
    7. ' ,' → logprob: -9.040484428405762
    8. '=[]' → logprob: -9.040484428405762
    9. '):
' → logprob: -9.415484428405762
    10. '=None' → logprob: -9.540484428405762

Token 19: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7623857259750366
    2. ':' → logprob: -1.8873857259750366
    3. '):' → logprob: -2.387385845184326
    4. '           ' → logprob: -2.512385845184326
    5. ',' → logprob: -2.637385845184326
    6. '_' → logprob: -3.637385845184326
    7. '.' → logprob: -3.637385845184326
    8. '[' → logprob: -3.762385845184326
    9. 'self' → logprob: -3.762385845184326
    10. ')' → logprob: -4.387385845184326

Token 20: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.951213002204895
    2. '               ' → logprob: -1.201213002204895
    3. ' self' → logprob: -1.201213002204895
    4. '           ' → logprob: -4.8262128829956055
    5. ' ' → logprob: -6.9512128829956055
    6. ' ' → logprob: -7.5762128829956055
    7. '       ' → logprob: -7.7012128829956055
    8. 's' → logprob: -7.9512128829956055
    9. '   ' → logprob: -8.326212882995605
    10. '[' → logprob: -8.451212882995605

Token 21: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010496601462364197
    2. '.s' → logprob: -4.635496616363525
    3. ' =' → logprob: -7.760496616363525
    4. '=' → logprob: -9.510496139526367
    5. ' .' → logprob: -9.635496139526367
    6. '_scores' → logprob: -9.635496139526367
    7. '.score' → logprob: -10.135496139526367
    8. 'scores' → logprob: -10.260496139526367
    9. '.=' → logprob: -11.635496139526367
    10. '.points' → logprob: -12.510496139526367

Token 22: 'scores' (ID: 109945)
  Prédit: 'scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.01660972461104393
    2. '_scores' → logprob: -4.6416096687316895
    3. 'parts' → logprob: -5.8916096687316895
    4. 'score' → logprob: -6.2666096687316895
    5. 'total' → logprob: -7.7666096687316895
    6. 'values' → logprob: -8.266610145568848
    7. 'raw' → logprob: -8.516610145568848
    8. '_score' → logprob: -8.641610145568848
    9. 'sum' → logprob: -9.391610145568848
    10. 's' → logprob: -9.391610145568848

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18252089619636536
    2. '=' → logprob: -1.807520866394043
    3. ' ' → logprob: -6.182520866394043
    4. '.' → logprob: -7.932520866394043
    5. '[' → logprob: -8.307520866394043
    6. ')' → logprob: -10.307520866394043
    7. '  ' → logprob: -10.932520866394043
    8. ',' → logprob: -11.307520866394043
    9. '[:]' → logprob: -11.432520866394043
    10. '.append' → logprob: -12.307520866394043

Token 24: ' scores' (ID: 18923)
  Prédit: ' scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.11352256685495377
    2. 'scores' → logprob: -2.238522529602051
    3. '{}' → logprob: -8.73852252960205
    4. '[]' → logprob: -8.86352252960205
    5. ' []' → logprob: -9.23852252960205
    6. '(scores' → logprob: -9.48852252960205
    7. ' [' → logprob: -9.98852252960205
    8. ' {}' → logprob: -10.23852252960205
    9. '_scores' → logprob: -10.36352252960205
    10. ' ' → logprob: -10.48852252960205

Token 25: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.23717394471168518
    2. '    
' → logprob: -2.8621740341186523
    3. '
' → logprob: -3.1121740341186523
    4. '       ' → logprob: -3.4871740341186523
    5. '        
' → logprob: -3.4871740341186523
    6. '   ' → logprob: -3.6121740341186523
    7. '<|end|>' → logprob: -5.237174034118652
    8. ' def' → logprob: -5.737174034118652
    9. '    ' → logprob: -6.362174034118652
    10. ' ' → logprob: -6.612174034118652

Token 28: ' __' (ID: 2516)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.25985509157180786
    2. ' __' → logprob: -2.259855031967163
    3. ' def' → logprob: -3.509855031967163
    4. ' _' → logprob: -3.884855031967163
    5. ' calculate' → logprob: -4.509855270385742
    6. '__' → logprob: -4.884855270385742
    7. ' max' → logprob: -4.884855270385742
    8. '_' → logprob: -4.884855270385742
    9. '_scores' → logprob: -5.384855270385742
    10. ' scores' → logprob: -5.634855270385742

Token 29: 'iter' (ID: 2340)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.8598068356513977
    2. 'get' → logprob: -1.859806776046753
    3. 'getitem' → logprob: -1.859806776046753
    4. 'len' → logprob: -2.359806776046753
    5. 'eq' → logprob: -2.984806776046753
    6. 'repr' → logprob: -2.984806776046753
    7. 'iter' → logprob: -2.984806776046753
    8. 'str' → logprob: -4.484807014465332
    9. 'call' → logprob: -5.234807014465332
    10. 'contains' → logprob: -7.234807014465332

Token 30: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.010404706001281738
    2. '__' → logprob: -4.760404586791992
    3. '(' → logprob: -6.760404586791992
    4. '(self' → logprob: -7.885404586791992
    5. '__(
' → logprob: -8.885404586791992
    6. '__('' → logprob: -10.135404586791992
    7. '_' → logprob: -10.635404586791992
    8. '_(' → logprob: -11.010404586791992
    9. '__(*' → logprob: -11.510404586791992
    10. '__("' → logprob: -12.135404586791992

Token 31: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.702754474943504e-05
    2. ')' → logprob: -10.37503719329834
    3. ' self' → logprob: -12.50003719329834
    4. '):
' → logprob: -14.00003719329834
    5. '(self' → logprob: -15.12503719329834
    6. '	self' → logprob: -15.25003719329834
    7. '   ' → logprob: -15.37503719329834
    8. '):' → logprob: -15.75003719329834
    9. '       ' → logprob: -15.87503719329834
    10. ' ' → logprob: -16.000036239624023

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003577495808713138
    2. ')' → logprob: -8.625357627868652
    3. '):
' → logprob: -9.625357627868652
    4. ',' → logprob: -9.625357627868652
    5. ' ):' → logprob: -10.125357627868652
    6. '   ' → logprob: -13.500357627868652
    7. ':' → logprob: -13.625357627868652
    8. 'self' → logprob: -13.625357627868652
    9. '       ' → logprob: -14.250357627868652
    10. '):
' → logprob: -15.000357627868652

Token 33: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10155656933784485
    2. '       ' → logprob: -3.6015565395355225
    3. '\n' → logprob: -4.226556777954102
    4. '   ' → logprob: -4.726556777954102
    5. '        ' → logprob: -4.851556777954102
    6. ' ' → logprob: -5.476556777954102
    7. '            ' → logprob: -5.476556777954102
    8. ':' → logprob: -5.601556777954102
    9. ' return' → logprob: -5.851556777954102
    10. '               ' → logprob: -5.976556777954102

Token 34: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2785630226135254
    2. ' return' → logprob: -1.7785630226135254
    3. 'return' (adapté à ' return') → logprob: -2.1535630226135254
    4. ' yield' → logprob: -2.1535630226135254
    5. 'yield' → logprob: -2.2785630226135254
    6. 'r' → logprob: -2.7785630226135254
    7. ' for' → logprob: -2.7785630226135254
    8. '   ' → logprob: -3.0285630226135254
    9. 'for' → logprob: -3.7785630226135254
    10. '       ' → logprob: -4.403563022613525

Token 35: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.021721215918660164
    2. ' iter' → logprob: -3.896721124649048
    3. '(iter' → logprob: -6.771721363067627
    4. 'self' → logprob: -10.646720886230469
    5. '	iter' → logprob: -12.771720886230469
    6. '   ' → logprob: -13.021720886230469
    7. '(' → logprob: -13.896720886230469
    8. ' ' → logprob: -14.771720886230469
    9. ' (' → logprob: -14.771720886230469
    10. '(self' → logprob: -14.896720886230469

Token 36: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. '(this' → logprob: -14.751171112060547
    4. '(s' → logprob: -16.376171112060547
    5. ' (' → logprob: -17.126171112060547
    6. 'self' → logprob: -17.626171112060547
    7. '(
' → logprob: -17.751171112060547
    8. '((' → logprob: -17.876171112060547
    9. ' self' → logprob: -19.251171112060547
    10. '([' → logprob: -19.501171112060547

Token 37: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0001398929744027555
    2. '.' → logprob: -9.125140190124512
    3. ' .' → logprob: -10.625140190124512
    4. ')' → logprob: -12.875140190124512
    5. ')._' → logprob: -13.625140190124512
    6. '.__' → logprob: -13.875140190124512
    7. '_scores' → logprob: -15.250140190124512
    8. '.S' → logprob: -15.375140190124512
    9. '.)' → logprob: -15.500140190124512
    10. '   ' → logprob: -15.750140190124512

Token 38: 'scores' (ID: 109945)
  Prédit: 'scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.00011081460979767144
    2. '_scores' → logprob: -9.125110626220703
    3. 's' → logprob: -13.500110626220703
    4. ' scores' → logprob: -15.500110626220703
    5. 'score' → logprob: -15.875110626220703
    6. 'sc' → logprob: -17.125110626220703
    7. '(scores' → logprob: -17.375110626220703
    8. '_s' → logprob: -17.875110626220703
    9. 'cores' → logprob: -18.875110626220703
    10. 'Scores' → logprob: -20.375110626220703

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -14.250001907348633
    3. '       ' → logprob: -14.250001907348633
    4. ' )' → logprob: -15.375001907348633
    5. '<|end|>' → logprob: -16.000001907348633
    6. ')}}' → logprob: -16.125001907348633
    7. '   ' → logprob: -16.375001907348633
    8. '[' → logprob: -16.375001907348633
    9. '))' → logprob: -16.750001907348633
    10. '`)' → logprob: -17.250001907348633

Token 40: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6048566102981567
    2. '<|end|>' → logprob: -1.6048566102981567
    3. '        
' → logprob: -2.854856491088867
    4. '   ' → logprob: -2.979856491088867
    5. '    
' → logprob: -3.104856491088867
    6. '       ' → logprob: -3.229856491088867
    7. 'def' (adapté à ' def') → logprob: -3.354856491088867
    8. '<|end|>' → logprob: -4.604856491088867
    9. '    ' → logprob: -5.104856491088867
    10. '        ' → logprob: -5.854856491088867

Token 43: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12808148562908173
    2. '__' → logprob: -2.1280815601348877
    3. ' def' → logprob: -9.003081321716309
    4. '_scores' → logprob: -9.128081321716309
    5. '___' → logprob: -9.503081321716309
    6. ' add' → logprob: -9.503081321716309
    7. ' scores' → logprob: -9.628081321716309
    8. ' items' → logprob: -9.628081321716309
    9. ' append' → logprob: -9.753081321716309
    10. 'append' → logprob: -9.878081321716309

Token 44: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10087613761425018
    2. 'eq' → logprob: -2.8508760929107666
    3. 'getitem' → logprob: -3.4758760929107666
    4. 'contains' → logprob: -5.225876331329346
    5. 'hash' → logprob: -7.725876331329346
    6. 'repr' → logprob: -7.725876331329346
    7. 'lt' → logprob: -7.975876331329346
    8. 'next' → logprob: -8.225875854492188
    9. 'add' → logprob: -9.100875854492188
    10. 'get' → logprob: -9.225875854492188

Token 45: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13194286823272705
    2. '(self' → logprob: -2.1319427490234375
    3. '__(' → logprob: -5.5069427490234375
    4. '<|end|>' → logprob: -7.6319427490234375
    5. '__(
' → logprob: -9.631942749023438
    6. '(
' → logprob: -9.881942749023438
    7. ' (' → logprob: -10.256942749023438
    8. '__' → logprob: -10.256942749023438
    9. '("("' → logprob: -10.631942749023438
    10. '(len' → logprob: -10.881942749023438

Token 46: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00022284770966507494
    2. ')' → logprob: -8.750223159790039
    3. '(self' → logprob: -10.250223159790039
    4. ' self' → logprob: -10.500223159790039
    5. ' ' → logprob: -14.875223159790039
    6. ')(' → logprob: -15.250223159790039
    7. 's' → logprob: -15.750223159790039
    8. ' )' → logprob: -15.750223159790039
    9. '(' → logprob: -16.37522315979004
    10. '   ' → logprob: -16.50022315979004

Token 47: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035095500061288476
    2. ' )' → logprob: -8.500350952148438
    3. '(self' → logprob: -9.875350952148438
    4. '<|end|>' → logprob: -10.375350952148438
    5. 'self' → logprob: -10.500350952148438
    6. '(' → logprob: -11.625350952148438
    7. '):' → logprob: -11.750350952148438
    8. '())' → logprob: -12.500350952148438
    9. ',' → logprob: -13.000350952148438
    10. '):

' → logprob: -13.250350952148438

Token 48: '           ' (ID: 352)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.07395970821380615
    2. '(' → logprob: -3.4489598274230957
    3. ' return' → logprob: -3.4489598274230957
    4. 'return' → logprob: -6.198959827423096
    5. '(self' → logprob: -6.198959827423096
    6. ' len' → logprob: -6.573959827423096
    7. 'len' → logprob: -7.198959827423096
    8. '(
' → logprob: -7.448959827423096
    9. ' (' → logprob: -7.573959827423096
    10. '(return' → logprob: -9.198959350585938

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6163865923881531
    2. 'len' → logprob: -0.8663865923881531
    3. ' return' → logprob: -3.616386651992798
    4. ' len' → logprob: -4.366386413574219
    5. 'self' → logprob: -10.366386413574219
    6. '           ' → logprob: -11.241386413574219
    7. '```' → logprob: -11.991386413574219
    8. '(len' → logprob: -12.241386413574219
    9. '       ' → logprob: -12.366386413574219
    10. '   ' → logprob: -13.616386413574219

Token 50: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.006716436706483364
    2. 'len' → logprob: -5.006716251373291
    3. '(len' → logprob: -14.13171672821045
    4. ' self' → logprob: -15.25671672821045
    5. '=len' → logprob: -16.881715774536133
    6. '	len' → logprob: -17.006715774536133
    7. ' ' → logprob: -17.756715774536133
    8. '[len' → logprob: -18.256715774536133
    9. ' ' → logprob: -18.256715774536133
    10. 'self' → logprob: -18.381715774536133

Token 51: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12699288129806519
    2. '(' → logprob: -2.12699294090271
    3. '(this' → logprob: -10.501993179321289
    4. '(
' → logprob: -10.876993179321289
    5. '(

' → logprob: -11.501993179321289
    6. ' (' → logprob: -12.126993179321289
    7. '(s' → logprob: -13.751993179321289
    8. '('' → logprob: -15.126993179321289
    9. '(object' → logprob: -15.501993179321289
    10. 'self' → logprob: -15.876993179321289

Token 52: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.85104202805087e-05
    2. '.' → logprob: -9.875078201293945
    3. ' .' → logprob: -11.375078201293945
    4. '(' → logprob: -11.875078201293945
    5. '_scores' → logprob: -12.750078201293945
    6. '(self' → logprob: -12.875078201293945
    7. ')' → logprob: -13.750078201293945
    8. '(_' → logprob: -14.750078201293945
    9. '.S' → logprob: -15.000078201293945
    10. '_' → logprob: -15.125078201293945

Token 53: 'scores' (ID: 109945)
  Prédit: 'scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.10023050010204315
    2. '_scores' → logprob: -2.3502304553985596
    3. '(scores' → logprob: -11.97523021697998
    4. 's' → logprob: -12.35023021697998
    5. 'score' → logprob: -12.60023021697998
    6. '_s' → logprob: -12.60023021697998
    7. ' scores' → logprob: -12.85023021697998
    8. '_score' → logprob: -13.60023021697998
    9. 'sc' → logprob: -13.72523021697998
    10. 'Scores' → logprob: -14.10023021697998

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ')
' → logprob: -11.250014305114746
    3. '       ' → logprob: -14.875014305114746
    4. '   ' → logprob: -15.375014305114746
    5. '}' → logprob: -15.875014305114746
    6. '<|end|>' → logprob: -16.25001335144043
    7. ' )' → logprob: -16.37501335144043
    8. ')return' → logprob: -16.50001335144043
    9. '))' → logprob: -17.00001335144043
    10. '```' → logprob: -17.25001335144043

Token 55: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4497665762901306
    2. '<|end|>' → logprob: -1.1997666358947754
    3. '    
' → logprob: -3.6997666358947754
    4. '   ' → logprob: -3.9497666358947754
    5. '

' → logprob: -5.574766635894775
    6. '\n' → logprob: -5.824766635894775
    7. '<|end|>' → logprob: -5.949766635894775
    8. ' 
' → logprob: -6.324766635894775
    9. 'newline' → logprob: -6.324766635894775
    10. '  
' → logprob: -7.574766635894775

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0221818685531616
    2. '<|end|>' → logprob: -1.1471818685531616
    3. '    
' → logprob: -1.6471818685531616
    4. '
' → logprob: -2.272181987762451
    5. '\n' → logprob: -4.397181987762451
    6. '<|end|>' → logprob: -6.272181987762451
    7. 'def' → logprob: -6.397181987762451
    8. '    ' → logprob: -6.522181987762451
    9. ' 
' → logprob: -6.897181987762451
    10. '\' → logprob: -6.897181987762451

Token 57: ' class' (ID: 744)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7409238815307617
    2. '    
' → logprob: -1.4909238815307617
    3. 'def' → logprob: -2.2409238815307617
    4. '   ' → logprob: -2.2409238815307617
    5. '<|end|>' → logprob: -2.7409238815307617
    6. ' 
' → logprob: -5.240923881530762
    7. ' def' → logprob: -5.865923881530762
    8. '    ' → logprob: -6.240923881530762
    9. ' ' → logprob: -6.240923881530762
    10. '        
' → logprob: -6.615923881530762

Token 58: ' Score' (ID: 30731)
  Prédit: ' Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -1.4280023574829102
    2. ' Dart' → logprob: -1.4280023574829102
    3. ' Best' → logprob: -3.42800235748291
    4. ' Optim' → logprob: -3.42800235748291
    5. ' Combination' → logprob: -3.42800235748291
    6. ' Target' → logprob: -3.67800235748291
    7. ' Result' → logprob: -4.05300235748291
    8. ' Solution' → logprob: -4.17800235748291
    9. ' D' → logprob: -4.42800235748291
    10. ' Optimal' → logprob: -4.42800235748291

Token 59: 'Limit' (ID: 17176)
  Prédit: 'Parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parts' → logprob: -0.005787889007478952
    2. 'Optimizer' → logprob: -6.6307878494262695
    3. 'Ranges' → logprob: -7.0057878494262695
    4. 'Range' → logprob: -7.8807878494262695
    5. '_parts' → logprob: -8.00578784942627
    6. 'Calculator' → logprob: -8.00578784942627
    7. 's' → logprob: -8.25578784942627
    8. 'Part' → logprob: -8.50578784942627
    9. 'Options' → logprob: -8.75578784942627
    10. 'Break' → logprob: -8.88078784942627

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.829823102336377e-05
    2. ':
' → logprob: -9.87509822845459
    3. '):' → logprob: -11.00009822845459
    4. '(' → logprob: -11.12509822845459
    5. '(object' → logprob: -12.62509822845459
    6. ' :' → logprob: -12.62509822845459
    7. ':**' → logprob: -13.25009822845459
    8. ':def' → logprob: -13.62509822845459
    9. '():' → logprob: -13.75009822845459
    10. '<|end|>' → logprob: -14.00009822845459

Token 61: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20650237798690796
    2. ':
' → logprob: -2.0815024375915527
    3. '       ' → logprob: -2.9565024375915527
    4. '   ' → logprob: -4.956502437591553
    5. '(' → logprob: -7.081502437591553
    6. '<|end|>' → logprob: -7.081502437591553
    7. '(D' → logprob: -8.706501960754395
    8. '(object' → logprob: -9.331501960754395
    9. '```' → logprob: -9.331501960754395
    10. '    ' → logprob: -9.456501960754395

Token 62: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5793011784553528
    2. ' def' → logprob: -0.8293011784553528
    3. '       ' → logprob: -5.704301357269287
    4. '   ' → logprob: -11.079300880432129
    5. '	def' → logprob: -13.079300880432129
    6. '```' → logprob: -13.204300880432129
    7. '           ' → logprob: -13.454300880432129
    8. '(' → logprob: -14.454300880432129
    9. '        
' → logprob: -14.829300880432129
    10. ':' → logprob: -14.829300880432129

Token 63: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0017237268621101975
    2. '__' → logprob: -6.876723766326904
    3. '_init' → logprob: -7.376723766326904
    4. ' _' → logprob: -11.001723289489746
    5. ' init' → logprob: -11.126723289489746
    6. 'init' → logprob: -11.376723289489746
    7. ' ' → logprob: -11.626723289489746
    8. ' def' → logprob: -12.251723289489746
    9. ' ' → logprob: -12.376723289489746
    10. ' ___' → logprob: -13.376723289489746

Token 64: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00011999329581158236
    2. 'int' → logprob: -10.250120162963867
    3. 'eq' → logprob: -10.625120162963867
    4. 'iter' → logprob: -10.750120162963867
    5. 'ini' → logprob: -11.125120162963867
    6. 'in' → logprob: -11.500120162963867
    7. 'len' → logprob: -12.750120162963867
    8. 'call' → logprob: -13.250120162963867
    9. 'i' → logprob: -13.250120162963867
    10. ' init' → logprob: -14.125120162963867

Token 65: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03629111871123314
    2. '(self' → logprob: -3.5362911224365234
    3. '_(' → logprob: -5.786291122436523
    4. '(' → logprob: -6.286291122436523
    5. '__' → logprob: -7.411291122436523
    6. ' (' → logprob: -7.536291122436523
    7. 'self' → logprob: -8.786291122436523
    8. '_' → logprob: -8.786291122436523
    9. '__(
' → logprob: -9.286291122436523
    10. ')(' → logprob: -11.411291122436523

Token 66: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01604023203253746
    2. ' self' → logprob: -4.141040325164795
    3. ',' → logprob: -12.516039848327637
    4. '0' → logprob: -14.891039848327637
    5. 'score' → logprob: -14.891039848327637
    6. 'max' → logprob: -15.016039848327637
    7. '       ' → logprob: -15.391039848327637
    8. '(self' → logprob: -15.516039848327637
    9. '):
' → logprob: -15.891039848327637
    10. ' ' → logprob: -15.891039848327637

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032611307688057423
    2. ' ,' → logprob: -5.753261089324951
    3. 'self' → logprob: -10.25326156616211
    4. '_,' → logprob: -10.37826156616211
    5. ',max' → logprob: -12.62826156616211
    6. ',self' → logprob: -13.00326156616211
    7. ',s' → logprob: -13.00326156616211
    8. '):' → logprob: -13.25326156616211
    9. '__,' → logprob: -14.12826156616211
    10. ',value' → logprob: -14.25326156616211

Token 68: ' limit' (ID: 5967)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.546941876411438
    2. 'self' → logprob: -1.296941876411438
    3. ' limit' → logprob: -2.5469417572021484
    4. ' max' → logprob: -3.1719417572021484
    5. 'limit' → logprob: -3.9219417572021484
    6. 'max' → logprob: -5.296941757202148
    7. ' min' → logprob: -6.921941757202148
    8. ' value' → logprob: -7.296941757202148
    9. 'min' → logprob: -8.421941757202148
    10. ' score' → logprob: -8.671941757202148

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004628057591617107
    2. ')' → logprob: -6.3796281814575195
    3. '=' → logprob: -6.7546281814575195
    4. ',' → logprob: -7.1296281814575195
    5. ':' → logprob: -7.5046281814575195
    6. ' ):' → logprob: -8.25462818145752
    7. '):
' → logprob: -9.50462818145752
    8. '_' → logprob: -10.62962818145752
    9. '=None' → logprob: -10.87962818145752
    10. ' =' → logprob: -12.12962818145752

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00958597008138895
    2. '(limit' → logprob: -5.259585857391357
    3. ' limit' → logprob: -7.009585857391357
    4. ',' → logprob: -7.009585857391357
    5. 'limit' → logprob: -7.259585857391357
    6. ':' → logprob: -7.634585857391357
    7. '            ' → logprob: -8.009586334228516
    8. '               ' → logprob: -8.009586334228516
    9. '<|end|>' → logprob: -8.634586334228516
    10. '_limit' → logprob: -9.009586334228516

Token 71: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20143838226795197
    2. 'self' (adapté à ' self') → logprob: -1.7014384269714355
    3. ' limit' → logprob: -11.576437950134277
    4. '           ' → logprob: -12.326437950134277
    5. 'limit' → logprob: -12.826437950134277
    6. '               ' → logprob: -13.326437950134277
    7. '	self' → logprob: -13.326437950134277
    8. ' ' → logprob: -13.451437950134277
    9. ' super' → logprob: -13.576437950134277
    10. '            ' → logprob: -13.826437950134277

Token 72: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.43207043409347534
    2. '._' → logprob: -1.6820704936981201
    3. '_limit' → logprob: -2.43207049369812
    4. '.' → logprob: -3.05707049369812
    5. '=' → logprob: -3.93207049369812
    6. ' =' → logprob: -5.557070255279541
    7. ' limit' → logprob: -5.932070255279541
    8. 'limit' → logprob: -6.057070255279541
    9. ' .' → logprob: -7.182070255279541
    10. '_' → logprob: -8.1820707321167

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759457349777222
    2. ' =' → logprob: -0.8259457349777222
    3. ' ' → logprob: -12.325945854187012
    4. '<|end|>' → logprob: -13.575945854187012
    5. ' =
' → logprob: -15.200945854187012
    6. '=
' → logprob: -16.325944900512695
    7. '   ' → logprob: -16.575944900512695
    8. ')' → logprob: -17.075944900512695
    9. '=self' → logprob: -17.825944900512695
    10. '    ' → logprob: -18.075944900512695

Token 74: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.06994377076625824
    2. 'limit' → logprob: -2.69494366645813
    3. '(limit' → logprob: -12.06994342803955
    4. ' ' → logprob: -14.81994342803955
    5. 'int' → logprob: -14.81994342803955
    6. ' int' → logprob: -14.94494342803955
    7. '_limit' → logprob: -15.44494342803955
    8. ' ' → logprob: -15.81994342803955
    9. '.limit' → logprob: -16.444944381713867
    10. '    ' → logprob: -16.694944381713867

Token 75: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43910160660743713
    2. '   ' → logprob: -1.3141015768051147
    3. '    
' → logprob: -3.1891016960144043
    4. '<|end|>' → logprob: -3.1891016960144043
    5. '       ' → logprob: -6.814101696014404
    6. '<|end|>' → logprob: -7.439101696014404
    7. '        
' → logprob: -7.564101696014404
    8. 'class' → logprob: -7.939101696014404
    9. ' 
' → logprob: -8.189101219177246
    10. '    ' → logprob: -8.439101219177246

Token 77: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14865939319133759
    2. '    
' → logprob: -2.6486594676971436
    3. 'def' → logprob: -3.2736594676971436
    4. '
' → logprob: -4.1486592292785645
    5. '       ' → logprob: -5.7736592292785645
    6. '    ' → logprob: -5.8986592292785645
    7. ' ' → logprob: -6.5236592292785645
    8. ' def' → logprob: -6.5236592292785645
    9. '        
' → logprob: -6.7736592292785645
    10. '<|end|>' → logprob: -6.7736592292785645

Token 78: ' Max' (ID: 10093)
  Prédit: ' Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -0.7088282108306885
    2. ' Max' → logprob: -2.4588282108306885
    3. ' Dart' → logprob: -2.9588282108306885
    4. ' Best' → logprob: -3.2088282108306885
    5. ' Target' → logprob: -3.3338282108306885
    6. ' Optim' → logprob: -3.5838282108306885
    7. ' Limit' → logprob: -3.8338282108306885
    8. ' Result' → logprob: -3.9588282108306885
    9. ' Solution' → logprob: -4.083827972412109
    10. ' Maximum' → logprob: -4.708827972412109

Token 79: 'D' (ID: 35)
  Prédit: 'Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.1139742061495781
    2. 'imize' → logprob: -3.238974094390869
    3. 'Limit' → logprob: -3.738974094390869
    4. 'imum' → logprob: -3.988974094390869
    5. 'Value' → logprob: -5.863974094390869
    6. 'Scores' → logprob: -5.988974094390869
    7. 'Parts' → logprob: -6.113974094390869
    8. 'im' → logprob: -6.238974094390869
    9. 'Optimizer' → logprob: -6.238974094390869
    10. '_score' → logprob: -6.363974094390869

Token 80: 'arts' (ID: 8661)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.0955389067530632
    2. 'arts' → logprob: -2.720538854598999
    3. 'ouble' → logprob: -5.095539093017578
    4. 'ef' → logprob: -6.658039093017578
    5. 'score' → logprob: -6.658039093017578
    6. 'ec' → logprob: -6.720539093017578
    7. 'ist' → logprob: -6.783039093017578
    8. 'is' → logprob: -7.095539093017578
    9. 'Score' → logprob: -7.283039093017578
    10. 'e' → logprob: -7.533039093017578

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032463972456753254
    2. ':
' → logprob: -6.253246307373047
    3. 'Optimizer' → logprob: -7.878246307373047
    4. 'Count' → logprob: -8.128246307373047
    5. '):' → logprob: -9.003246307373047
    6. '(' → logprob: -9.003246307373047
    7. '():' → logprob: -9.753246307373047
    8. 'Limit' → logprob: -9.878246307373047
    9. ' :' → logprob: -9.878246307373047
    10. 'Per' → logprob: -10.003246307373047

Token 82: '       ' (ID: 309)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3741494417190552
    2. '       ' → logprob: -1.3741494417190552
    3. '   ' → logprob: -3.8741493225097656
    4. '3' → logprob: -3.9991493225097656
    5. ' ' → logprob: -4.749149322509766
    6. '<|end|>' → logprob: -5.249149322509766
    7. '5' → logprob: -6.749149322509766
    8. '(' → logprob: -6.999149322509766
    9. '6' → logprob: -7.499149322509766
    10. ' def' → logprob: -7.624149322509766

Token 83: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.9764110445976257
    2. ' def' → logprob: -1.3514111042022705
    3. '   ' → logprob: -1.9764111042022705
    4. '       ' → logprob: -2.1014111042022705
    5. ':
' → logprob: -3.2264111042022705
    6. ':' → logprob: -3.3514111042022705
    7. '(object' → logprob: -4.726410865783691
    8. '(' → logprob: -5.851410865783691
    9. 'self' → logprob: -5.976410865783691
    10. ':def' → logprob: -6.351410865783691

Token 84: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0023235564585775137
    2. '__' → logprob: -7.002323627471924
    3. ' ' → logprob: -7.127323627471924
    4. ' ' → logprob: -8.252323150634766
    5. ' _' → logprob: -8.252323150634766
    6. '_' → logprob: -10.377323150634766
    7. '_init' → logprob: -10.877323150634766
    8. '  ' → logprob: -11.127323150634766
    9. ' init' → logprob: -11.877323150634766
    10. '  ' → logprob: -12.377323150634766

Token 85: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.8041651248931885
    2. '__' → logprob: -1.4291651248931885
    3. 'i' → logprob: -1.8041651248931885
    4. '_init' → logprob: -2.5541651248931885
    5. '_' → logprob: -3.1791651248931885
    6. '_i' → logprob: -4.054164886474609
    7. 'n' → logprob: -5.554164886474609
    8. 'int' → logprob: -5.929164886474609
    9. 't' → logprob: -6.429164886474609
    10. 'in' → logprob: -7.429164886474609

Token 86: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11626507341861725
    2. '<|end|>' → logprob: -2.866265058517456
    3. '__(' → logprob: -3.741265058517456
    4. ' (' → logprob: -3.991265058517456
    5. '(self' → logprob: -4.866265296936035
    6. '_' → logprob: -6.741265296936035
    7. ' ' → logprob: -7.991265296936035
    8. '_(' → logprob: -8.241265296936035
    9. '<|end|>' → logprob: -8.491265296936035
    10. '__' → logprob: -8.616265296936035

Token 87: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014212633483111858
    2. ' self' → logprob: -4.264212608337402
    3. ',' → logprob: -10.014212608337402
    4. '(self' → logprob: -13.139212608337402
    5. ' ' → logprob: -14.014212608337402
    6. 's' → logprob: -14.764212608337402
    7. ',self' → logprob: -14.764212608337402
    8. '0' → logprob: -15.764212608337402
    9. ' ' → logprob: -16.01421356201172
    10. ' ,' → logprob: -16.13921356201172

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001242772996192798
    2. ' ,' → logprob: -9.000123977661133
    3. ',
' → logprob: -15.750123977661133
    4. '‌,' → logprob: -15.875123977661133
    5. '<|end|>' → logprob: -16.250123977661133
    6. ',int' → logprob: -16.875123977661133
    7. ',self' → logprob: -16.875123977661133
    8. 'self' → logprob: -17.000123977661133
    9. ' ' → logprob: -17.000123977661133
    10. ')' → logprob: -17.125123977661133

Token 89: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06735079735517502
    2. 'max' → logprob: -3.0673508644104004
    3. ' limit' → logprob: -5.3173508644104
    4. ' darts' → logprob: -5.4423508644104
    5. ' n' → logprob: -6.0673508644104
    6. ' value' → logprob: -6.4423508644104
    7. ' self' → logprob: -6.5673508644104
    8. ' maximum' → logprob: -6.6923508644104
    9. ' count' → logprob: -7.1923508644104
    10. ' number' → logprob: -7.5673508644104

Token 90: '_d' (ID: 1565)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006215662695467472
    2. '_d' → logprob: -5.131215572357178
    3. ' _' → logprob: -8.881216049194336
    4. 'D' → logprob: -10.256216049194336
    5. '_D' → logprob: -10.256216049194336
    6. '_)' → logprob: -10.631216049194336
    7. ' ' → logprob: -11.131216049194336
    8. ')' → logprob: -11.506216049194336
    9. 's' → logprob: -11.631216049194336
    10. '_

' → logprob: -12.631216049194336

Token 91: 'arts' (ID: 8661)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03654446080327034
    2. 'arts' → logprob: -3.4115445613861084
    3. 'ar' → logprob: -6.411544322967529
    4. 'art' → logprob: -7.161544322967529
    5. '_a' → logprob: -8.411544799804688
    6. '_' → logprob: -9.786544799804688
    7. ' a' → logprob: -9.786544799804688
    8. '```' → logprob: -10.786544799804688
    9. '	a' → logprob: -11.161544799804688
    10. 'artos' → logprob: -11.661544799804688

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009280181839130819
    2. ':' → logprob: -7.875927925109863
    3. ' ):' → logprob: -8.500927925109863
    4. '=' → logprob: -8.625927925109863
    5. '):
' → logprob: -9.625927925109863
    6. ')' → logprob: -10.000927925109863
    7. ',' → logprob: -10.375927925109863
    8. '=None' → logprob: -11.250927925109863
    9. ' ' → logprob: -13.125927925109863
    10. ':int' → logprob: -13.875927925109863

Token 93: '           ' (ID: 352)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.7850838303565979
    2. ' ' → logprob: -1.5350837707519531
    3. ' max' → logprob: -1.7850837707519531
    4. ' :' → logprob: -3.410083770751953
    5. ')' → logprob: -3.410083770751953
    6. ':' → logprob: -3.535083770751953
    7. ',' → logprob: -4.535083770751953
    8. '(' → logprob: -4.785083770751953
    9. '<|end|>' → logprob: -4.785083770751953
    10. 'max' → logprob: -4.910083770751953

Token 94: ' self' (ID: 1051)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.12813423573970795
    2. 'max' → logprob: -2.128134250640869
    3. ' self' → logprob: -7.253134250640869
    4. 'self' (adapté à ' self') → logprob: -7.628134250640869
    5. ' ' → logprob: -12.628133773803711
    6. '           ' → logprob: -13.378133773803711
    7. '_max' → logprob: -13.753133773803711
    8. '(max' → logprob: -14.003133773803711
    9. '               ' → logprob: -14.128133773803711
    10. '	max' → logprob: -14.128133773803711

Token 95: '.count' (ID: 14019)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06441288441419601
    2. '_' → logprob: -2.814412832260132
    3. '_max' → logprob: -7.189413070678711
    4. '._' → logprob: -7.439413070678711
    5. ' .' → logprob: -7.814413070678711
    6. '.max' → logprob: -7.939413070678711
    7. ' ' → logprob: -8.814413070678711
    8. ')' → logprob: -9.814413070678711
    9. ' _' → logprob: -10.439413070678711
    10. '=' → logprob: -10.439413070678711

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2524750828742981
    2. '=' → logprob: -1.5024750232696533
    3. ' ' → logprob: -7.627475261688232
    4. ' =
' → logprob: -10.252474784851074
    5. '<|end|>' → logprob: -10.877474784851074
    6. '_' → logprob: -13.752474784851074
    7. ' +=' → logprob: -14.002474784851074
    8. '  ' → logprob: -14.502474784851074
    9. '=
' → logprob: -14.877474784851074
    10. ')' → logprob: -14.877474784851074

Token 97: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.008618474006652832
    2. 'max' → logprob: -4.758618354797363
    3. ' ' → logprob: -13.258618354797363
    4. '0' → logprob: -13.633618354797363
    5. '1' → logprob: -14.758618354797363
    6. '(max' → logprob: -15.383618354797363
    7. '3' → logprob: -16.25861930847168
    8. '	max' → logprob: -16.63361930847168
    9. '=max' → logprob: -16.63361930847168
    10. '[max' → logprob: -16.75861930847168

Token 98: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.38693979382514954
    2. '_' → logprob: -1.1369397640228271
    3. '_
' → logprob: -10.386940002441406
    4. ' _' → logprob: -11.011940002441406
    5. '<|end|>' → logprob: -12.136940002441406
    6. '_

' → logprob: -12.386940002441406
    7. '_D' → logprob: -12.636940002441406
    8. '_\' → logprob: -12.761940002441406
    9. '_a' → logprob: -13.136940002441406
    10. ' ' → logprob: -14.511940002441406

Token 99: 'arts' (ID: 8661)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4772365093231201
    2. 'arts' → logprob: -0.9772365093231201
    3. 'art' → logprob: -6.852236747741699
    4. '_' → logprob: -6.852236747741699
    5. '_a' → logprob: -7.602236747741699
    6. 'ar' → logprob: -8.4772367477417
    7. ' a' → logprob: -9.3522367477417
    8. '   ' → logprob: -10.6022367477417
    9. '```' → logprob: -10.6022367477417
    10. ' ' → logprob: -10.8522367477417

Token 100: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.651580810546875
    2. '
' → logprob: -1.276580810546875
    3. '   ' → logprob: -2.651580810546875
    4. '<|end|>' → logprob: -2.901580810546875
    5. ' 
' → logprob: -3.151580810546875
    6. '  
' → logprob: -5.026580810546875
    7. '
    
' → logprob: -5.276580810546875
    8. '        
' → logprob: -5.526580810546875
    9. '   
' → logprob: -5.651580810546875
    10. '

' → logprob: -6.026580810546875

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07734870910644531
    2. '    
' → logprob: -3.2023487091064453
    3. '
' → logprob: -4.577348709106445
    4. '<|end|>' → logprob: -4.952348709106445
    5. ' 
' → logprob: -5.577348709106445
    6. '\' → logprob: -5.702348709106445
    7. '\n' → logprob: -6.452348709106445
    8. '#' → logprob: -7.077348709106445
    9. '    ' → logprob: -7.077348709106445
    10. '       ' → logprob: -7.202348709106445

Token 102: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11327660828828812
    2. '    
' → logprob: -2.613276720046997
    3. '
' → logprob: -4.363276481628418
    4. ' 
' → logprob: -4.863276481628418
    5. 'def' → logprob: -4.863276481628418
    6. '    ' → logprob: -6.738276481628418
    7. '       ' → logprob: -7.363276481628418
    8. '        
' → logprob: -7.363276481628418
    9. ' def' → logprob: -7.488276481628418
    10. '  
' → logprob: -7.488276481628418

Token 103: ' Result' (ID: 9112)
  Prédit: ' Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -0.7957325577735901
    2. ' Dart' → logprob: -1.6707324981689453
    3. ' Target' → logprob: -2.2957324981689453
    4. ' Max' → logprob: -3.1707324981689453
    5. ' Best' → logprob: -3.4207324981689453
    6. ' Result' → logprob: -3.6707324981689453
    7. ' Space' → logprob: -3.9207324981689453
    8. ' Optimal' → logprob: -4.545732498168945
    9. ' Solution' → logprob: -4.795732498168945
    10. ' ' → logprob: -5.295732498168945

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021641071361955255
    2. '(' → logprob: -8.500216484069824
    3. ':**' → logprob: -12.750216484069824
    4. '():' → logprob: -12.875216484069824
    5. ' :' → logprob: -13.875216484069824
    6. 'Colon' → logprob: -14.000216484069824
    7. ':
' → logprob: -14.250216484069824
    8. '):' → logprob: -14.500216484069824
    9. '(:' → logprob: -14.875216484069824
    10. '(object' → logprob: -15.000216484069824

Token 105: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3286738395690918
    2. '    ' → logprob: -1.5786738395690918
    3. '       ' → logprob: -1.7036738395690918
    4. '<|end|>' → logprob: -2.078673839569092
    5. ':' → logprob: -2.703673839569092
    6. '\' → logprob: -2.828673839569092
    7. '\n' → logprob: -3.328673839569092
    8. ' ' → logprob: -3.703673839569092
    9. ' 
' → logprob: -4.828673839569092
    10. '
' → logprob: -5.328673839569092

Token 106: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6769416332244873
    2. ' def' → logprob: -1.5519416332244873
    3. '    ' → logprob: -2.3019416332244873
    4. '       ' → logprob: -2.8019416332244873
    5. '   ' → logprob: -2.9269416332244873
    6. ' ' → logprob: -3.1769416332244873
    7. '        ' → logprob: -4.176941871643066
    8. '<|end|>' → logprob: -6.301941871643066
    9. '(' → logprob: -6.426941871643066
    10. ' pass' → logprob: -6.926941871643066

Token 107: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02117210626602173
    2. ' ' → logprob: -4.521172046661377
    3. '__' → logprob: -4.646172046661377
    4. '_init' → logprob: -8.896172523498535
    5. 'init' → logprob: -9.396172523498535
    6. ' init' → logprob: -9.646172523498535
    7. ' _' → logprob: -9.646172523498535
    8. '_' → logprob: -9.771172523498535
    9. ' def' → logprob: -10.646172523498535
    10. '  ' → logprob: -11.271172523498535

Token 108: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0010164948180317879
    2. 'it' → logprob: -7.626016616821289
    3. 'nit' → logprob: -8.251016616821289
    4. 'i' → logprob: -8.626016616821289
    5. 'iter' → logprob: -10.251016616821289
    6. 'in' → logprob: -11.251016616821289
    7. '__' → logprob: -11.626016616821289
    8. 'int' → logprob: -11.876016616821289
    9. '_init' → logprob: -12.001016616821289
    10. ' init' → logprob: -12.251016616821289

Token 109: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006805483717471361
    2. '__' → logprob: -5.006805419921875
    3. '__(
' → logprob: -9.756805419921875
    4. '__('' → logprob: -11.256805419921875
    5. '__((' → logprob: -11.256805419921875
    6. '(' → logprob: -13.256805419921875
    7. '__("' → logprob: -13.506805419921875
    8. '__(*' → logprob: -13.506805419921875
    9. '___' → logprob: -14.006805419921875
    10. '_(' → logprob: -14.756805419921875

Token 110: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00032747918157838285
    2. ' self' → logprob: -8.750327110290527
    3. ')' → logprob: -9.125327110290527
    4. '<|end|>' → logprob: -10.250327110290527
    5. '
' → logprob: -11.125327110290527
    6. '0' → logprob: -13.000327110290527
    7. '):
' → logprob: -13.125327110290527
    8. '(self' → logprob: -13.875327110290527
    9. ',' → logprob: -13.875327110290527
    10. ' ' → logprob: -14.625327110290527

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023123843129724264
    2. '):' → logprob: -6.502312183380127
    3. ' ,' → logprob: -7.627312183380127
    4. '<|end|>' → logprob: -8.627312660217285
    5. 'self' → logprob: -9.877312660217285
    6. '):
' → logprob: -10.377312660217285
    7. ')' → logprob: -11.752312660217285
    8. '<|end|>' → logprob: -12.002312660217285
    9. ',
' → logprob: -12.127312660217285
    10. ',data' → logprob: -12.252312660217285

Token 112: ' max' (ID: 2999)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -1.1656056642532349
    2. ' total' → logprob: -1.4156056642532349
    3. ' self' → logprob: -1.7906056642532349
    4. 'score' → logprob: -2.5406055450439453
    5. 'self' → logprob: -2.7906055450439453
    6. ' best' → logprob: -3.6656055450439453
    7. 'total' → logprob: -3.9156055450439453
    8. ' parts' → logprob: -4.040605545043945
    9. ' scores' → logprob: -4.165605545043945
    10. ')' → logprob: -4.915605545043945

Token 113: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2376069873571396
    2. '_d' → logprob: -1.6126070022583008
    3. ' _' → logprob: -4.862607002258301
    4. '_score' → logprob: -6.112607002258301
    5. '_count' → logprob: -7.362607002258301
    6. 'D' → logprob: -7.987607002258301
    7. '_s' → logprob: -7.987607002258301
    8. '_scores' → logprob: -9.4876070022583
    9. ')' → logprob: -9.6126070022583
    10. '<|end|>' → logprob: -9.6126070022583

Token 114: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06683678179979324
    2. '):' → logprob: -3.0668368339538574
    3. '=' → logprob: -4.316836833953857
    4. '=None' → logprob: -5.691836833953857
    5. ':' → logprob: -7.691836833953857
    6. ' ,' → logprob: -7.691836833953857
    7. ')' → logprob: -9.1918363571167
    8. '_possible' → logprob: -9.9418363571167
    9. '):
' → logprob: -10.1918363571167
    10. ' =' → logprob: -10.1918363571167

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8008335828781128
    2. ',' → logprob: -1.4258335828781128
    3. ':' → logprob: -1.4258335828781128
    4. '       ' → logprob: -2.9258337020874023
    5. '):' → logprob: -5.300833702087402
    6. ':
' → logprob: -5.675833702087402
    7. '<|end|>' → logprob: -5.925833702087402
    8. '):
' → logprob: -6.675833702087402
    9. ')' → logprob: -6.675833702087402
    10. ' :' → logprob: -7.175833702087402

Token 116: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08951982855796814
    2. 'self' (adapté à ' self') → logprob: -2.464519739151001
    3. '       ' → logprob: -7.58951997756958
    4. '           ' → logprob: -10.714519500732422
    5. '        ' → logprob: -11.089519500732422
    6. ' ' → logprob: -11.089519500732422
    7. ' ' → logprob: -11.339519500732422
    8. ' super' → logprob: -13.214519500732422
    9. '	self' → logprob: -13.339519500732422
    10. 'super' → logprob: -13.464519500732422

Token 117: '.max' (ID: 11883)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005960795562714338
    2. '.max' → logprob: -5.630960941314697
    3. '._' → logprob: -6.255960941314697
    4. ' .' → logprob: -8.755960464477539
    5. '_max' → logprob: -8.880960464477539
    6. 'max' → logprob: -9.380960464477539
    7. '.score' → logprob: -10.630960464477539
    8. '.best' → logprob: -11.630960464477539
    9. '.maximum' → logprob: -11.880960464477539
    10. '.Max' → logprob: -13.130960464477539

Token 118: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.005294357892125845
    2. '_' → logprob: -5.255294322967529
    3. '_scores' → logprob: -10.755294799804688
    4. '_s' → logprob: -11.130294799804688
    5. ' _' → logprob: -11.380294799804688
    6. '_sc' → logprob: -12.005294799804688
    7. 'score' → logprob: -12.380294799804688
    8. 'Score' → logprob: -13.755294799804688
    9. '_SCORE' → logprob: -14.880294799804688
    10. '_code' → logprob: -15.505294799804688

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740820825099945
    2. ' =' → logprob: -0.9740821123123169
    3. ' ' → logprob: -12.599081993103027
    4. '=self' → logprob: -14.474081993103027
    5. ' =
' → logprob: -14.974081993103027
    6. '=None' → logprob: -15.599081993103027
    7. '=
' → logprob: -16.224082946777344
    8. '=

' → logprob: -16.474082946777344
    9. ')' → logprob: -16.724082946777344
    10. '.' → logprob: -16.724082946777344

Token 120: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.10020828247070312
    2. 'max' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.600208282470703
    4. '(max' → logprob: -14.600208282470703
    5. '_max' → logprob: -15.850208282470703
    6. '	max' → logprob: -16.100208282470703
    7. ' None' → logprob: -16.225208282470703
    8. ' ' → logprob: -16.350208282470703
    9. '0' → logprob: -16.600208282470703
    10. '=max' → logprob: -16.725208282470703

Token 121: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.08016107976436615
    2. '_' → logprob: -2.5801610946655273
    3. 'Score' → logprob: -7.080161094665527
    4. '_
' → logprob: -8.455161094665527
    5. '_

' → logprob: -9.455161094665527
    6. ' _' → logprob: -10.080161094665527
    7. '_S' → logprob: -10.705161094665527
    8. '_s' → logprob: -10.705161094665527
    9. '_SCORE' → logprob: -11.580161094665527
    10. '_scores' → logprob: -12.080161094665527

Token 122: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2575819194316864
    2. '<|end|>' → logprob: -1.5075819492340088
    3. ' 
' → logprob: -6.25758171081543
    4. ':' → logprob: -7.13258171081543
    5. '\' → logprob: -7.38258171081543
    6. '\n' → logprob: -7.63258171081543
    7. '<|end|>' → logprob: -8.00758171081543
    8. '    
' → logprob: -8.00758171081543
    9. '

' → logprob: -8.63258171081543
    10. '  
' → logprob: -9.13258171081543

Token 123: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023522183299064636
    2. ' def' → logprob: -3.773522138595581
    3. '   ' → logprob: -8.64852237701416
    4. '       ' → logprob: -9.89852237701416
    5. ' ' → logprob: -11.27352237701416
    6. 'class' → logprob: -11.52352237701416
    7. '    ' → logprob: -11.64852237701416
    8. '	def' → logprob: -12.27352237701416
    9. '  ' → logprob: -12.89852237701416
    10. '
' → logprob: -13.27352237701416

Token 125: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02458471991121769
    2. '_' → logprob: -4.649584770202637
    3. ' ' → logprob: -4.649584770202637
    4. '__' → logprob: -6.024584770202637
    5. ' _' → logprob: -6.024584770202637
    6. ' def' → logprob: -9.399584770202637
    7. ' is' → logprob: -10.399584770202637
    8. ' add' → logprob: -10.649584770202637
    9. ' optimize' → logprob: -10.649584770202637
    10. '_repr' → logprob: -10.649584770202637

Token 126: 'str' (ID: 689)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.12912845611572266
    2. 'lt' → logprob: -2.8791284561157227
    3. 'repr' → logprob: -3.0041284561157227
    4. 'str' → logprob: -4.879128456115723
    5. 'le' → logprob: -5.879128456115723
    6. 'len' → logprob: -6.254128456115723
    7. 'ge' → logprob: -6.754128456115723
    8. 'bool' → logprob: -6.754128456115723
    9. 'gt' → logprob: -8.129128456115723
    10. 'iter' → logprob: -8.504128456115723

Token 127: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10099014639854431
    2. '__' → logprob: -2.350990056991577
    3. '__('' → logprob: -7.725990295410156
    4. '__(
' → logprob: -8.225990295410156
    5. '__("' → logprob: -10.475990295410156
    6. '__((' → logprob: -11.475990295410156
    7. '(' → logprob: -11.475990295410156
    8. '__(*' → logprob: -11.475990295410156
    9. '(self' → logprob: -11.850990295410156
    10. '__.__' → logprob: -12.225990295410156

Token 128: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12696054577827454
    2. ')' → logprob: -2.126960515975952
    3. ' self' → logprob: -11.751960754394531
    4. '(self' → logprob: -12.001960754394531
    5. '):' → logprob: -12.126960754394531
    6. '<|end|>' → logprob: -13.001960754394531
    7. '):
' → logprob: -13.126960754394531
    8. ')
' → logprob: -13.376960754394531
    9. ' ' → logprob: -13.501960754394531
    10. '
' → logprob: -13.751960754394531

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03842081129550934
    2. ')' → logprob: -3.2884209156036377
    3. '):
' → logprob: -8.163420677185059
    4. ' ):' → logprob: -10.163420677185059
    5. ':' → logprob: -10.913420677185059
    6. ')__' → logprob: -11.663420677185059
    7. '__' → logprob: -12.163420677185059
    8. ',' → logprob: -12.288420677185059
    9. ').__' → logprob: -12.413420677185059
    10. ' )' → logprob: -13.163420677185059

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010237987153232098
    2. '(self' → logprob: -5.760238170623779
    3. 'self' → logprob: -6.510238170623779
    4. ' return' → logprob: -6.635238170623779
    5. 'return' → logprob: -7.260238170623779
    6. ':' → logprob: -7.260238170623779
    7. ':
' → logprob: -7.510238170623779
    8. '       ' → logprob: -7.885238170623779
    9. '               ' → logprob: -8.010237693786621
    10. ')' → logprob: -8.010237693786621

Token 131: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6296800374984741
    2. 'return' (adapté à ' return') → logprob: -0.8796800374984741
    3. '           ' → logprob: -3.1296801567077637
    4. ' f' → logprob: -5.254680156707764
    5. 'f' → logprob: -6.004680156707764
    6. '       ' → logprob: -8.004679679870605
    7. '{' → logprob: -8.629679679870605
    8. '               ' → logprob: -8.879679679870605
    9. '{return' → logprob: -9.629679679870605
    10. '
' → logprob: -10.379679679870605

Token 132: ' str' (ID: 989)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.0014760562917217612
    2. ' str' → logprob: -7.001476287841797
    3. 'f' → logprob: -7.501476287841797
    4. ' ' → logprob: -11.501476287841797
    5. 'str' → logprob: -13.251476287841797
    6. ' ' → logprob: -15.001476287841797
    7. '"' → logprob: -17.626476287841797
    8. '	f' → logprob: -18.501476287841797
    9. ' F' → logprob: -19.001476287841797
    10. ' "' → logprob: -19.376476287841797

Token 133: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01105265598744154
    2. '(' → logprob: -4.51105260848999
    3. '(this' → logprob: -12.636053085327148
    4. '(
' → logprob: -14.386053085327148
    5. '(max' → logprob: -15.136053085327148
    6. '(object' → logprob: -15.261053085327148
    7. '(s' → logprob: -15.636053085327148
    8. '((' → logprob: -16.51105308532715
    9. '(

' → logprob: -16.51105308532715
    10. 'self' → logprob: -16.63605308532715

Token 134: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.007696536835283041
    2. '.' → logprob: -4.882696628570557
    3. '.Max' → logprob: -10.132696151733398
    4. ')' → logprob: -11.257696151733398
    5. ').' → logprob: -11.257696151733398
    6. ' .' → logprob: -11.382696151733398
    7. '._' → logprob: -12.507696151733398
    8. '.
' → logprob: -13.132696151733398
    9. 'max' → logprob: -13.382696151733398
    10. '.MAX' → logprob: -13.507696151733398

Token 135: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.4121114822482923e-06
    2. 'score' → logprob: -13.500003814697266
    3. '_' → logprob: -14.125003814697266
    4. '_scores' → logprob: -15.000003814697266
    5. 'Score' → logprob: -15.125003814697266
    6. '_s' → logprob: -15.125003814697266
    7. ' _' → logprob: -16.250003814697266
    8. '_SCORE' → logprob: -16.625003814697266
    9. '_code' → logprob: -17.875003814697266
    10. '_token' → logprob: -18.375003814697266

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.750012397766113
    4. '<|end|>' → logprob: -15.750012397766113
    5. ')return' → logprob: -16.25001335144043
    6. '}' → logprob: -16.25001335144043
    7. ')`' → logprob: -17.12501335144043
    8. '       ' → logprob: -17.25001335144043
    9. '   ' → logprob: -17.62501335144043
    10. '`)' → logprob: -17.87501335144043

Token 137: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03558741509914398
    2. '<|end|>' → logprob: -3.5355873107910156
    3. '    
' → logprob: -6.535587310791016
    4. '\n' → logprob: -6.535587310791016
    5. '   ' → logprob: -6.660587310791016
    6. '

' → logprob: -7.660587310791016
    7. ' 
' → logprob: -7.910587310791016
    8. '\' → logprob: -8.410587310791016
    9. '
    
' → logprob: -9.410587310791016
    10. '' → logprob: -9.535587310791016

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11148589104413986
    2. '
' → logprob: -2.4864859580993652
    3. '    
' → logprob: -4.361485958099365
    4. ' 
' → logprob: -5.361485958099365
    5. 'def' → logprob: -6.611485958099365
    6. '<|end|>' → logprob: -6.736485958099365
    7. ' ' → logprob: -7.736485958099365
    8. ' def' → logprob: -7.861485958099365
    9. '    ' → logprob: -8.111485481262207
    10. '\n' → logprob: -8.486485481262207

Token 139: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2686430811882019
    2. 'def' → logprob: -2.2686431407928467
    3. ' def' → logprob: -2.8936431407928467
    4. '    
' → logprob: -3.2686431407928467
    5. ' 
' → logprob: -4.018642902374268
    6. '
' → logprob: -4.268642902374268
    7. '    ' → logprob: -6.018642902374268
    8. ' ' → logprob: -6.143642902374268
    9. '   
' → logprob: -7.893642902374268
    10. '  
' → logprob: -8.018643379211426

Token 140: ' Dart' (ID: 85214)
  Prédit: ' Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Score' → logprob: -1.9148591756820679
    2. ' Solver' → logprob: -1.9148591756820679
    3. ' Solution' → logprob: -2.0398592948913574
    4. ' Optim' → logprob: -2.2898592948913574
    5. ' Dart' → logprob: -2.5398592948913574
    6. ' Result' → logprob: -2.7898592948913574
    7. ' Max' → logprob: -3.4148592948913574
    8. ' Invalid' → logprob: -3.7898592948913574
    9. ' Best' → logprob: -3.7898592948913574
    10. ' _' → logprob: -4.164859294891357

Token 141: 'Throw' (ID: 20546)
  Prédit: 'Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.12017615884542465
    2. '<|end|>' → logprob: -2.495176076889038
    3. 's' → logprob: -5.745176315307617
    4. '<|end|>' → logprob: -6.120176315307617
    5. 'Count' → logprob: -6.370176315307617
    6. '{' → logprob: -6.370176315307617
    7. '  ' → logprob: -6.495176315307617
    8. ':' → logprob: -6.495176315307617
    9. 'Target' → logprob: -6.495176315307617
    10. ' ' → logprob: -6.495176315307617

Token 142: 'Simulation' (ID: 71306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0044561089016497135
    2. '():' → logprob: -6.379456043243408
    3. 's' → logprob: -6.629456043243408
    4. '):' → logprob: -7.129456043243408
    5. ':
' → logprob: -8.254456520080566
    6. '(' → logprob: -8.504456520080566
    7. 'er' → logprob: -9.629456520080566
    8. ' :' → logprob: -10.629456520080566
    9. ',' → logprob: -12.129456520080566
    10. '   ' → logprob: -12.129456520080566

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003924231859855354
    2. ':
' → logprob: -8.000391960144043
    3. '(' → logprob: -10.625391960144043
    4. ' :' → logprob: -11.375391960144043
    5. '():' → logprob: -11.625391960144043
    6. '):' → logprob: -12.375391960144043
    7. '(object' → logprob: -13.125391960144043
    8. '<|end|>' → logprob: -13.250391960144043
    9. '   ' → logprob: -13.500391960144043
    10. ':def' → logprob: -13.875391960144043

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4322466552257538
    2. '
' → logprob: -2.182246685028076
    3. ':' → logprob: -2.557246685028076
    4. '<|end|>' → logprob: -2.932246685028076
    5. '   ' → logprob: -3.307246685028076
    6. ':
' → logprob: -3.932246685028076
    7. '    ' → logprob: -4.057246685028076
    8. '(' → logprob: -4.682246685028076
    9. '(n' → logprob: -5.432246685028076
    10. '        ' → logprob: -5.557246685028076

Token 145: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.13112685084342957
    2. 'def' (adapté à ' def') → logprob: -2.131126880645752
    3. '   ' → logprob: -6.006126880645752
    4. '       ' → logprob: -6.756126880645752
    5. '    ' → logprob: -8.256126403808594
    6. ' ' → logprob: -8.506126403808594
    7. '	def' → logprob: -10.631126403808594
    8. '        ' → logprob: -10.756126403808594
    9. ':' → logprob: -10.881126403808594
    10. '     ' → logprob: -11.756126403808594

Token 146: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007709788624197245
    2. '__' → logprob: -5.632709980010986
    3. ' ' → logprob: -6.007709980010986
    4. ' _' → logprob: -7.257709980010986
    5. ' def' → logprob: -7.507709980010986
    6. '_' → logprob: -8.132709503173828
    7. ' ' → logprob: -10.757709503173828
    8. '_init' → logprob: -10.882709503173828
    9. ' calculate' → logprob: -11.132709503173828
    10. 'def' → logprob: -11.757709503173828

Token 147: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0018512967508286238
    2. 'iter' → logprob: -6.6268510818481445
    3. 'call' → logprob: -7.7518510818481445
    4. 'def' → logprob: -10.501851081848145
    5. 'i' → logprob: -11.501851081848145
    6. ' init' → logprob: -11.501851081848145
    7. 'next' → logprob: -11.876851081848145
    8. 'in' → logprob: -11.876851081848145
    9. 'it' → logprob: -12.251851081848145
    10. 'ini' → logprob: -12.376851081848145

Token 148: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008036578074097633
    2. '(' → logprob: -5.0080366134643555
    3. '(self' → logprob: -7.2580366134643555
    4. '__(
' → logprob: -8.008036613464355
    5. '_(' → logprob: -8.883036613464355
    6. '__' → logprob: -9.633036613464355
    7. ' (' → logprob: -10.258036613464355
    8. '<|end|>' → logprob: -11.008036613464355
    9. '__((' → logprob: -12.133036613464355
    10. '__(*' → logprob: -12.258036613464355

Token 149: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018214326351881027
    2. ' self' → logprob: -4.018214225769043
    3. '<|end|>' → logprob: -9.893214225769043
    4. ',' → logprob: -12.268214225769043
    5. '(self' → logprob: -13.143214225769043
    6. 's' → logprob: -13.393214225769043
    7. '       ' → logprob: -13.518214225769043
    8. ' ' → logprob: -14.018214225769043
    9. '
' → logprob: -14.268214225769043
    10. '0' → logprob: -14.393214225769043

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012617830652743578
    2. ' ,' → logprob: -6.7512617111206055
    3. '):' → logprob: -10.251261711120605
    4. '<|end|>' → logprob: -10.376261711120605
    5. '):
' → logprob: -12.001261711120605
    6. '_scores' → logprob: -12.751261711120605
    7. ')' → logprob: -12.876261711120605
    8. 'self' → logprob: -12.876261711120605
    9. ',s' → logprob: -13.001261711120605
    10. ' ):' → logprob: -13.876261711120605

Token 151: ' parts' (ID: 7881)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.7614402174949646
    2. ' self' → logprob: -1.0114402770996094
    3. 'self' → logprob: -2.7614402770996094
    4. 'scores' → logprob: -3.2614402770996094
    5. ' score' → logprob: -3.5114402770996094
    6. ' max' → logprob: -4.261440277099609
    7. 'score' → logprob: -4.886440277099609
    8. ' parts' → logprob: -5.136440277099609
    9. ' optimizer' → logprob: -5.636440277099609
    10. ' darts' → logprob: -6.636440277099609

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42973414063453674
    2. '):' → logprob: -1.0547341108322144
    3. '):
' → logprob: -8.179734230041504
    4. ' ):' → logprob: -8.304734230041504
    5. ':' → logprob: -8.429734230041504
    6. ' ,' → logprob: -9.179734230041504
    7. '=None' → logprob: -9.679734230041504
    8. ')' → logprob: -10.554734230041504
    9. '   ' → logprob: -10.554734230041504
    10. '<|end|>' → logprob: -11.554734230041504

Token 153: ' limit' (ID: 5967)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.35035666823387146
    2. ' limit' → logprob: -1.4753566980361938
    3. ' limits' → logprob: -3.8503565788269043
    4. ' score' → logprob: -4.225356578826904
    5. 'max' → logprob: -4.350356578826904
    6. 'limit' → logprob: -4.350356578826904
    7. 'score' → logprob: -6.725356578826904
    8. ' ' → logprob: -7.225356578826904
    9. 'limits' → logprob: -7.600356578826904
    10. ' scores' → logprob: -7.725356578826904

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2816094756126404
    2. '):' → logprob: -1.4066095352172852
    3. '=None' → logprob: -8.906609535217285
    4. ':' → logprob: -9.281609535217285
    5. '):
' → logprob: -9.656609535217285
    6. 's' → logprob: -9.906609535217285
    7. ')' → logprob: -10.406609535217285
    8. '=' → logprob: -10.406609535217285
    9. ' ):' → logprob: -11.406609535217285
    10. ' ,' → logprob: -11.531609535217285

Token 155: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.055307164788246155
    2. 'max' → logprob: -2.930307149887085
    3. ' darts' → logprob: -8.180307388305664
    4. ' ' → logprob: -9.805307388305664
    5. '   ' → logprob: -11.180307388305664
    6. ' maximum' → logprob: -11.305307388305664
    7. '    ' → logprob: -11.680307388305664
    8. '	max' → logprob: -11.992807388305664
    9. '       ' → logprob: -12.055307388305664
    10. '  ' → logprob: -12.055307388305664

Token 156: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0008515591034665704
    2. '_' → logprob: -7.375851631164551
    3. 'd' → logprob: -9.12585163116455
    4. '<|end|>' → logprob: -9.87585163116455
    5. ')' → logprob: -10.00085163116455
    6. 'D' → logprob: -11.87585163116455
    7. ' darts' → logprob: -12.75085163116455
    8. '_)' → logprob: -13.50085163116455
    9. ')d' → logprob: -13.75085163116455
    10. ' _' → logprob: -13.87585163116455

Token 157: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -0.005150977522134781
    2. 'art' → logprob: -5.88015079498291
    3. 'a' → logprob: -6.50515079498291
    4. 'ar' → logprob: -7.38015079498291
    5. ' ' → logprob: -10.13015079498291
    6. 'artz' → logprob: -11.00515079498291
    7. ' arts' → logprob: -11.13015079498291
    8. '
' → logprob: -11.56765079498291
    9. ')' → logprob: -11.56765079498291
    10. 'artits' → logprob: -11.69265079498291

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04929003491997719
    2. ',' → logprob: -3.0492899417877197
    3. ')' → logprob: -7.674290180206299
    4. ' ):' → logprob: -9.04928970336914
    5. '):
' → logprob: -9.29928970336914
    6. ':' → logprob: -11.42428970336914
    7. ' ,' → logprob: -12.42428970336914
    8. '=None' → logprob: -12.79928970336914
    9. '<|end|>' → logprob: -13.17428970336914
    10. '=' → logprob: -13.17428970336914

Token 159: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.27479106187820435
    2. ':' → logprob: -1.6497910022735596
    3. '<|end|>' → logprob: -3.6497910022735596
    4. ')' → logprob: -4.399791240692139
    5. '):
' → logprob: -5.524791240692139
    6. ',' → logprob: -5.774791240692139
    7. '       ' → logprob: -6.524791240692139
    8. '           ' → logprob: -7.774791240692139
    9. ':
' → logprob: -8.02479076385498
    10. '<|end|>' → logprob: -8.52479076385498

Token 160: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2087065428495407
    2. ' parts' → logprob: -1.9587064981460571
    3. 'self' (adapté à ' self') → logprob: -3.4587066173553467
    4. ' ' → logprob: -5.208706378936768
    5. 'parts' → logprob: -6.083706378936768
    6. ' ' → logprob: -6.333706378936768
    7. '    ' → logprob: -6.708706378936768
    8. '        ' → logprob: -6.958706378936768
    9. '            ' → logprob: -7.583706378936768
    10. '           ' → logprob: -7.708706378936768

Token 161: '.parts' (ID: 145037)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02011260576546192
    2. '.parts' → logprob: -4.52011251449585
    3. '._' → logprob: -5.27011251449585
    4. ' .' → logprob: -5.77011251449585
    5. '_parts' → logprob: -8.645112991333008
    6. ' ' → logprob: -8.770112991333008
    7. ' parts' → logprob: -9.145112991333008
    8. '.score' → logprob: -9.770112991333008
    9. 'parts' → logprob: -10.145112991333008
    10. ',' → logprob: -10.270112991333008

Token 162: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6077949404716492
    2. ' =' → logprob: -1.107795000076294
    3. '<|end|>' → logprob: -2.357795000076294
    4. '=' → logprob: -4.107794761657715
    5. ')' → logprob: -4.732794761657715
    6. '<|end|>' → logprob: -6.107794761657715
    7. '.' → logprob: -6.982794761657715
    8. '[' → logprob: -7.232794761657715
    9. ' ,' → logprob: -7.982794761657715
    10. ' ' → logprob: -8.357794761657715

Token 163: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.00012094692647224292
    2. 'parts' → logprob: -9.125121116638184
    3. ' ' → logprob: -12.250121116638184
    4. '(parts' → logprob: -12.875121116638184
    5. ' ' → logprob: -13.125121116638184
    6. ' partes' → logprob: -14.500121116638184
    7. '_parts' → logprob: -14.625121116638184
    8. ' part' → logprob: -15.000121116638184
    9. ' scores' → logprob: -15.250121116638184
    10. '.parts' → logprob: -15.500121116638184

Token 164: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028033217415213585
    2. '<|end|>' → logprob: -4.153033256530762
    3. '
' → logprob: -4.528033256530762
    4. '            
' → logprob: -8.403033256530762
    5. '    
' → logprob: -8.778033256530762
    6. '       ' → logprob: -8.903033256530762
    7. ' 
' → logprob: -9.153033256530762
    8. '        
' → logprob: -9.403033256530762
    9. ' ' → logprob: -9.403033256530762
    10. ',' → logprob: -9.528033256530762

Token 166: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5755526423454285
    2. 'self' (adapté à ' self') → logprob: -1.3255527019500732
    3. ' limit' → logprob: -2.0755527019500732
    4. 'limit' → logprob: -3.0755527019500732
    5. '           ' → logprob: -8.325552940368652
    6. '       ' → logprob: -11.200552940368652
    7. ' ' → logprob: -11.325552940368652
    8. '   ' → logprob: -12.200552940368652
    9. '        ' → logprob: -12.450552940368652
    10. '_limit' → logprob: -13.013052940368652

Token 167: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.2946428060531616
    2. ' .' → logprob: -1.5446428060531616
    3. '.' → logprob: -3.294642925262451
    4. '.max' → logprob: -6.294642925262451
    5. '._' → logprob: -6.419642925262451
    6. ' limit' → logprob: -7.669642925262451
    7. 'limit' → logprob: -7.919642925262451
    8. '_limit' → logprob: -8.544642448425293
    9. '.l' → logprob: -10.544642448425293
    10. '.score' → logprob: -10.669642448425293

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16209785640239716
    2. '<|end|>' → logprob: -2.537097930908203
    3. '=' → logprob: -2.912097930908203
    4. ' ' → logprob: -5.162097930908203
    5. ',' → logprob: -5.287097930908203
    6. ' ,' → logprob: -6.037097930908203
    7. ' >=' → logprob: -6.662097930908203
    8. ' <=' → logprob: -7.537097930908203
    9. '<|end|>' → logprob: -7.662097930908203
    10. ' ==' → logprob: -9.162097930908203

Token 169: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.008622847497463226
    2. 'limit' → logprob: -4.758622646331787
    3. '(limit' → logprob: -12.258623123168945
    4. ' ' → logprob: -12.883623123168945
    5. '.limit' → logprob: -14.758623123168945
    6. ' ' → logprob: -15.758623123168945
    7. 'Limit' → logprob: -16.133623123168945
    8. '_limit' → logprob: -16.258623123168945
    9. '    ' → logprob: -16.758623123168945
    10. '<|end|>' → logprob: -16.883623123168945

Token 170: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029938630759716034
    2. '
' → logprob: -6.002994060516357
    3. '<|end|>' → logprob: -8.5029935836792
    4. '            
' → logprob: -9.5029935836792
    5. '    
' → logprob: -9.6279935836792
    6. '		' → logprob: -10.5029935836792
    7. '        
' → logprob: -10.7529935836792
    8. '       ' → logprob: -10.8779935836792
    9. '            ' → logprob: -11.0029935836792
    10. ',' → logprob: -11.0029935836792

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011347393738105893
    2. '
' → logprob: -7.001134872436523
    3. '       ' → logprob: -9.376134872436523
    4. '		' → logprob: -9.626134872436523
    5. 'self' → logprob: -11.251134872436523
    6. '        
' → logprob: -11.376134872436523
    7. '    
' → logprob: -11.376134872436523
    8. '               ' → logprob: -11.751134872436523
    9. '   ' → logprob: -12.376134872436523
    10. '	' → logprob: -12.376134872436523

Token 172: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.941161776310764e-05
    2. '           ' → logprob: -10.625039100646973
    3. ' self' → logprob: -11.125039100646973
    4. '       ' → logprob: -16.50004005432129
    5. '
' → logprob: -16.62504005432129
    6. '	self' → logprob: -17.87504005432129
    7. '   ' → logprob: -18.25004005432129
    8. '               ' → logprob: -19.00004005432129
    9. '         ' → logprob: -19.37504005432129
    10. ' ' → logprob: -19.50004005432129

Token 173: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.30150872468948364
    2. '.' → logprob: -1.6765086650848389
    3. ' .' → logprob: -2.676508665084839
    4. '.count' → logprob: -6.176508903503418
    5. 'max' → logprob: -6.426508903503418
    6. '._' → logprob: -8.176508903503418
    7. '_max' → logprob: -9.051508903503418
    8. ' max' → logprob: -9.426508903503418
    9. '.maximum' → logprob: -9.926508903503418
    10. '.d' → logprob: -10.176508903503418

Token 174: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.3199920178740285e-05
    2. 'd' → logprob: -11.375022888183594
    3. '_' → logprob: -11.500022888183594
    4. '_score' → logprob: -13.875022888183594
    5. '_count' → logprob: -15.625022888183594
    6. 'D' → logprob: -16.000022888183594
    7. '_s' → logprob: -17.000022888183594
    8. '_D' → logprob: -17.000022888183594
    9. '_scores' → logprob: -17.250022888183594
    10. '_a' → logprob: -17.625022888183594

Token 175: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -9.317247167928144e-05
    2. 'art' → logprob: -10.625093460083008
    3. 'a' → logprob: -11.250093460083008
    4. ' darts' → logprob: -11.250093460083008
    5. ' ' → logprob: -11.625093460083008
    6. ' arts' → logprob: -11.750093460083008
    7. '
' → logprob: -13.062593460083008
    8. 'artz' → logprob: -13.187593460083008
    9. '   ' → logprob: -13.250093460083008
    10. 'Arts' → logprob: -13.312593460083008

Token 176: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06197025999426842
    2. 'max' → logprob: -2.8119702339172363
    3. ' ' → logprob: -14.061970710754395
    4. '(max' → logprob: -14.061970710754395
    5. '	max' → logprob: -14.561970710754395
    6. '=max' → logprob: -15.811970710754395
    7. 'Max' → logprob: -16.186969757080078
    8. '.max' → logprob: -16.561969757080078
    9. '[max' → logprob: -16.936969757080078
    10. '  ' → logprob: -17.186969757080078

Token 178: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00024524700711481273
    2. 'd' → logprob: -8.750245094299316
    3. '_' → logprob: -9.625245094299316
    4. 'D' → logprob: -11.125245094299316
    5. ' _' → logprob: -12.500245094299316
    6. ' darts' → logprob: -14.125245094299316
    7. ' ' → logprob: -15.375245094299316
    8. '_D' → logprob: -15.375245094299316
    9. 's' → logprob: -15.625245094299316
    10. '\' → logprob: -15.875245094299316

Token 179: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -0.002704423386603594
    2. 'a' → logprob: -6.127704620361328
    3. 'art' → logprob: -7.877704620361328
    4. 'ar' → logprob: -9.127704620361328
    5. '```' → logprob: -13.002704620361328
    6. 'artz' → logprob: -13.127704620361328
    7. 'r' → logprob: -13.252704620361328
    8. '

' → logprob: -13.377704620361328
    9. ')' → logprob: -13.502704620361328
    10. '   ' → logprob: -13.752704620361328

Token 180: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0927550345659256
    2. '<|end|>' → logprob: -2.592755079269409
    3. '       ' → logprob: -4.46775484085083
    4. '    
' → logprob: -7.21775484085083
    5. '        
' → logprob: -7.34275484085083
    6. '<|end|>' → logprob: -7.71775484085083
    7. '   ' → logprob: -8.717755317687988
    8. '
        
' → logprob: -9.842755317687988
    9. '           ' → logprob: -9.967755317687988
    10. '
    
' → logprob: -10.217755317687988

Token 181: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2114965170621872
    2. 'def' → logprob: -2.211496591567993
    3. '
' → logprob: -2.961496591567993
    4. '       ' → logprob: -3.586496591567993
    5. ' def' → logprob: -7.086496353149414
    6. '    
' → logprob: -7.461496353149414
    7. '        
' → logprob: -9.336496353149414
    8. '	def' → logprob: -9.586496353149414
    9. ' ' → logprob: -9.961496353149414
    10. '  ' → logprob: -11.711496353149414

Token 182: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07034562528133392
    2. ' def' → logprob: -2.695345640182495
    3. '   ' → logprob: -7.820345401763916
    4. ' ' → logprob: -12.820345878601074
    5. '  ' → logprob: -13.945345878601074
    6. '
' → logprob: -13.945345878601074
    7. 'de' → logprob: -14.195345878601074
    8. '	def' → logprob: -14.570345878601074
    9. '       ' → logprob: -14.820345878601074
    10. '    ' → logprob: -14.945345878601074

Token 183: ' compute' (ID: 23864)
  Prédit: ' simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simulate' → logprob: -0.3856387436389923
    2. ' optimize' → logprob: -1.76063871383667
    3. 'simulate' → logprob: -2.51063871383667
    4. ' calculate' → logprob: -3.88563871383667
    5. ' run' → logprob: -4.13563871383667
    6. 'opt' → logprob: -4.63563871383667
    7. ' maximize' → logprob: -5.13563871383667
    8. ' max' → logprob: -5.88563871383667
    9. ' best' → logprob: -6.26063871383667
    10. ' opt' → logprob: -6.38563871383667

Token 184: '(self' (ID: 2402)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.4250252842903137
    2. '_' → logprob: -1.675025224685669
    3. '_score' → logprob: -1.925025224685669
    4. '(self' → logprob: -5.675025463104248
    5. '_next' → logprob: -5.675025463104248
    6. '(' → logprob: -6.050025463104248
    7. '_opt' → logprob: -6.425025463104248
    8. '_scores' → logprob: -7.675025463104248
    9. '()' → logprob: -7.800025463104248
    10. '_possible' → logprob: -7.925025463104248

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1767027378082275
    2. '_max' → logprob: -1.1767027378082275
    3. '_' → logprob: -2.1767027378082275
    4. ',' → logprob: -2.8017027378082275
    5. ')' → logprob: -2.9267027378082275
    6. '_score' → logprob: -2.9267027378082275
    7. '._' → logprob: -3.0517027378082275
    8. ' ):' → logprob: -4.176702499389648
    9. ' )' → logprob: -4.926702499389648
    10. '.' → logprob: -4.926702499389648

Token 186: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4339217245578766
    2. '           ' → logprob: -1.1839216947555542
    3. '        ' → logprob: -4.683921813964844
    4. '       ' → logprob: -4.808921813964844
    5. ' ' → logprob: -5.433921813964844
    6. '\' → logprob: -5.683921813964844
    7. '            ' → logprob: -5.683921813964844
    8. ' :' → logprob: -5.808921813964844
    9. '   ' → logprob: -5.933921813964844
    10. '    ' → logprob: -6.058921813964844

Token 187: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.13300998508930206
    2. ' max' → logprob: -3.258009910583496
    3. 'dp' → logprob: -3.508009910583496
    4. ' from' → logprob: -4.008009910583496
    5. '        ' → logprob: -4.508009910583496
    6. ' best' → logprob: -5.133009910583496
    7. ' #' → logprob: -5.258009910583496
    8. ' ' → logprob: -5.508009910583496
    9. ' pass' → logprob: -5.758009910583496
    10. 'from' → logprob: -6.133009910583496

Token 188: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5192743539810181
    2. ' from' → logprob: -2.2692742347717285
    3. ' max' → logprob: -2.5192742347717285
    4. ' import' → logprob: -3.2692742347717285
    5. 'dp' → logprob: -3.6442742347717285
    6. ' def' → logprob: -3.7692742347717285
    7. ' f' → logprob: -4.0192742347717285
    8. 'from' → logprob: -4.1442742347717285
    9. ' ' → logprob: -4.1442742347717285
    10. ' best' → logprob: -4.1442742347717285

Token 189: '[number' (ID: 138194)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017993181943893433
    2. '_' → logprob: -4.767992973327637
    3. '[' → logprob: -5.392992973327637
    4. '=' → logprob: -5.892992973327637
    5. ' ' → logprob: -6.767992973327637
    6. '_table' → logprob: -8.392992973327637
    7. '<|end|>' → logprob: -9.017992973327637
    8. '    ' → logprob: -9.767992973327637
    9. ')' → logprob: -9.892992973327637
    10. ',' → logprob: -10.017992973327637

Token 190: '_of' (ID: 8023)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11177568137645721
    2. '_of' → logprob: -2.4867756366729736
    3. 'of' → logprob: -4.986775875091553
    4. ' =' → logprob: -5.236775875091553
    5. ' of' → logprob: -5.736775875091553
    6. '][' → logprob: -6.986775875091553
    7. ' ]' → logprob: -6.986775875091553
    8. '_scores' → logprob: -6.986775875091553
    9. ']=' → logprob: -7.236775875091553
    10. 'Of' → logprob: -7.486775875091553

Token 191: '_' (ID: 62)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.6917424201965332
    2. ' darts' → logprob: -1.3167424201965332
    3. '_' → logprob: -1.5667424201965332
    4. ' _' → logprob: -4.941742420196533
    5. 'd' → logprob: -4.941742420196533
    6. 's' → logprob: -6.066742420196533
    7. ' throws' → logprob: -6.566742420196533
    8. ' d' → logprob: -6.816742420196533
    9. ' ' → logprob: -6.816742420196533
    10. '_scores' → logprob: -7.691742420196533

Token 192: 'throws' (ID: 12972)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.056807007640600204
    2. 'throws' → logprob: -2.931807041168213
    3. 'parts' → logprob: -7.306807041168213
    4. 'scores' → logprob: -7.556807041168213
    5. 'th' → logprob: -8.806806564331055
    6. 'dart' → logprob: -8.931806564331055
    7. 'shots' → logprob: -9.181806564331055
    8. 'used' → logprob: -9.806806564331055
    9. 'hits' → logprob: -10.056806564331055
    10. 'throw' → logprob: -10.681806564331055

Token 193: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.10650273412466049
    2. ' +' → logprob: -3.1065027713775635
    3. '+' → logprob: -3.2315027713775635
    4. ' ][' → logprob: -4.481502532958984
    5. ']' → logprob: -5.356502532958984
    6. ',' → logprob: -8.106502532958984
    7. ' =' → logprob: -9.231502532958984
    8. ' ]' → logprob: -9.481502532958984
    9. '=' → logprob: -9.481502532958984
    10. '   ' → logprob: -9.981502532958984

Token 194: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.5004750490188599
    2. ' current' → logprob: -1.7504750490188599
    3. 'current' → logprob: -1.8754750490188599
    4. ' score' → logprob: -2.7504749298095703
    5. 'max' → logprob: -7.25047492980957
    6. 'total' → logprob: -7.75047492980957
    7. ' total' → logprob: -8.25047492980957
    8. 'sum' → logprob: -8.37547492980957
    9. 'remaining' → logprob: -8.50047492980957
    10. ' max' → logprob: -8.75047492980957

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016541840508580208
    2. ']=' → logprob: -5.141541957855225
    3. '+' → logprob: -5.516541957855225
    4. '][' → logprob: -5.766541957855225
    5. ' ]' → logprob: -6.141541957855225
    6. ' +' → logprob: -7.141541957855225
    7. 's' → logprob: -9.391541481018066
    8. ']={' → logprob: -9.641541481018066
    9. '=' → logprob: -10.266541481018066
    10. ']+=' → logprob: -10.266541481018066

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00913871917873621
    2. '=' → logprob: -4.884138584136963
    3. ' ' → logprob: -7.384138584136963
    4. '[' → logprob: -8.009139060974121
    5. '<|end|>' → logprob: -8.134139060974121
    6. '           ' → logprob: -9.509139060974121
    7. '<|end|>' → logprob: -9.884139060974121
    8. '            ' → logprob: -10.384139060974121
    9. ':' → logprob: -10.509139060974121
    10. '=[]' → logprob: -11.009139060974121

Token 197: ' possible' (ID: 4149)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.8368929028511047
    2. ' max' → logprob: -0.9618929028511047
    3. 'max' → logprob: -2.71189284324646
    4. 'True' → logprob: -2.96189284324646
    5. ' maximum' → logprob: -3.08689284324646
    6. ' None' → logprob: -4.336893081665039
    7. 'None' → logprob: -6.461893081665039
    8. 'maximum' → logprob: -6.586893081665039
    9. ' -' → logprob: -6.711893081665039
    10. ' float' → logprob: -6.961893081665039

Token 198: ' or' (ID: 503)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30075669288635254
    2. '=' → logprob: -2.8007566928863525
    3. '<|end|>' → logprob: -3.0507566928863525
    4. '=True' → logprob: -3.5507566928863525
    5. 'score' → logprob: -3.6757566928863525
    6. '_' → logprob: -3.8007566928863525
    7. '_score' → logprob: -4.675756454467773
    8. ':' → logprob: -5.300756454467773
    9. ',' → logprob: -5.300756454467773
    10. '=False' → logprob: -5.550756454467773

Token 199: ' not' (ID: 625)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.21667051315307617
    2. ' False' → logprob: -2.091670513153076
    3. ' not' → logprob: -2.841670513153076
    4. 'not' → logprob: -4.466670513153076
    5. 'None' → logprob: -7.216670513153076
    6. ' None' → logprob: -8.341670989990234
    7. ' impossible' → logprob: -9.466670989990234
    8. 'True' → logprob: -9.591670989990234
    9. 'Not' → logprob: -9.591670989990234
    10. 'false' → logprob: -9.716670989990234

Token 200: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.434362530708313
    2. '<|end|>' → logprob: -1.184362530708313
    3. '[' → logprob: -4.434362411499023
    4. '<|end|>' → logprob: -4.809362411499023
    5. '           ' → logprob: -4.934362411499023
    6. ' ' → logprob: -5.059362411499023
    7. ' 
' → logprob: -5.309362411499023
    8. '\n' → logprob: -6.184362411499023
    9. '\' → logprob: -6.434362411499023
    10. '[
' → logprob: -6.809362411499023

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04498342052102089
    2. '
' → logprob: -3.669983386993408
    3. '<|end|>' → logprob: -4.919983386993408
    4. '\n' → logprob: -5.169983386993408
    5. '       ' → logprob: -6.419983386993408
    6. '               ' → logprob: -7.669983386993408
    7. '            ' → logprob: -7.794983386993408
    8. ' 
' → logprob: -7.919983386993408
    9. '\' → logprob: -7.919983386993408
    10. '   ' → logprob: -8.044983863830566

Token 202: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6211702823638916
    2. '           ' → logprob: -1.2461702823638916
    3. 'dp' → logprob: -1.8711702823638916
    4. ' self' → logprob: -5.2461700439453125
    5. ' ' → logprob: -5.6211700439453125
    6. '       ' → logprob: -5.7461700439453125
    7. '        ' → logprob: -6.3711700439453125
    8. 'self' → logprob: -6.4961700439453125
    9. '            ' → logprob: -6.4961700439453125
    10. ' ' → logprob: -6.8711700439453125

Token 203: ' To' (ID: 2514)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2051694393157959
    2. 'dp' → logprob: -1.705169439315796
    3. '           ' → logprob: -6.830169677734375
    4. ' ' → logprob: -7.955169677734375
    5. ' self' → logprob: -7.955169677734375
    6. ' d' → logprob: -8.205169677734375
    7. '            ' → logprob: -8.330169677734375
    8. ' from' → logprob: -8.455169677734375
    9. 'd' → logprob: -8.455169677734375
    10. ' ' → logprob: -8.955169677734375

Token 204: ' avoid' (ID: 8397)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.630820631980896
    2. ' optimize' → logprob: -2.2558207511901855
    3. ' maximize' → logprob: -2.5058207511901855
    4. '_' → logprob: -2.7558207511901855
    5. ' ' → logprob: -2.7558207511901855
    6. ' def' → logprob: -3.0058207511901855
    7. 'do' → logprob: -3.0058207511901855
    8. ' achieve' → logprob: -3.2558207511901855
    9. ' continue' → logprob: -3.2558207511901855
    10. '       ' → logprob: -3.3808207511901855

Token 205: ' memory' (ID: 8197)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -1.1600086688995361
    2. ' memory' → logprob: -1.5350086688995361
    3. ' Overflow' → logprob: -2.410008668899536
    4. ' Index' → logprob: -2.410008668899536
    5. 'Overflow' → logprob: -2.910008668899536
    6. 'Index' → logprob: -3.035008668899536
    7. ' the' → logprob: -3.285008668899536
    8. ' index' → logprob: -3.410008668899536
    9. ' space' → logprob: -3.535008668899536
    10. ' an' → logprob: -4.160008430480957

Token 206: ' explosion' (ID: 53199)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.062961459159851
    2. ' error' → logprob: -1.437961459159851
    3. ' overflow' → logprob: -2.3129615783691406
    4. ',' → logprob: -2.3129615783691406
    5. 'error' → logprob: -2.8129615783691406
    6. ' over' → logprob: -3.0629615783691406
    7. ' issues' → logprob: -3.6879615783691406
    8. '[' → logprob: -4.187961578369141
    9. '_error' → logprob: -4.562961578369141
    10. 'Error' → logprob: -4.687961578369141

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017903735861182213
    2. ' ,' → logprob: -4.892903804779053
    3. ',
' → logprob: -5.017903804779053
    4. '           ' → logprob: -6.767903804779053
    5. '
' → logprob: -6.892903804779053
    6. '       ' → logprob: -7.517903804779053
    7. '        ' → logprob: -8.892903327941895
    8. ' ' → logprob: -8.892903327941895
    9. 'import' → logprob: -8.892903327941895
    10. '            ' → logprob: -9.267903327941895

Token 208: ' we' (ID: 581)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9146477580070496
    2. '            ' → logprob: -1.2896478176116943
    3. ' we' → logprob: -2.0396478176116943
    4. 'self' → logprob: -2.7896478176116943
    5. '           ' → logprob: -3.1646478176116943
    6. ')' → logprob: -4.164647579193115
    7. ' use' → logprob: -4.664647579193115
    8. 'import' → logprob: -4.914647579193115
    9. 'we' → logprob: -5.414647579193115
    10. '                ' → logprob: -5.414647579193115

Token 209: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.5506479144096375
    2. ' can' → logprob: -1.8006479740142822
    3. ' ' → logprob: -2.3006479740142822
    4. ' only' → logprob: -3.0506479740142822
    5. ' will' → logprob: -3.4256479740142822
    6. '            ' → logprob: -4.425647735595703
    7. ' initialize' → logprob: -4.675647735595703
    8. '    ' → logprob: -4.800647735595703
    9. '           ' → logprob: -4.925647735595703
    10. '        ' → logprob: -5.175647735595703

Token 210: ' set' (ID: 920)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4279704988002777
    2. 'a' → logprob: -1.1779705286026
    3. ' defaultdict' → logprob: -3.3029704093933105
    4. 'default' → logprob: -7.1779704093933105
    5. ' only' → logprob: -7.4279704093933105
    6. ' two' → logprob: -7.9279704093933105
    7. ' sets' → logprob: -8.302970886230469
    8. 'dict' → logprob: -8.552970886230469
    9. 'two' → logprob: -8.552970886230469
    10. 'collections' → logprob: -8.802970886230469

Token 211: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' achievable' (ID: 118877)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.7537736892700195
    2. 'ach' → logprob: -2.0037736892700195
    3. 'possible' → logprob: -2.1287736892700195
    4. '(int' → logprob: -2.7537736892700195
    5. 'reachable' → logprob: -2.7537736892700195
    6. ' achievable' → logprob: -3.3787736892700195
    7. '(scores' → logprob: -3.6287736892700195
    8. 'current' → logprob: -4.0037736892700195
    9. 'int' → logprob: -4.6287736892700195
    10. 'previous' → logprob: -4.8787736892700195

Token 213: ' sums' (ID: 73121)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.38790392875671387
    2. ' scores' → logprob: -1.1379039287567139
    3. '_scores' → logprob: -8.512904167175293
    4. 'score' → logprob: -8.637904167175293
    5. '(scores' → logprob: -8.637904167175293
    6. '           ' → logprob: -8.762904167175293
    7. '   ' → logprob: -9.762904167175293
    8. 's' → logprob: -9.887904167175293
    9. ')' → logprob: -10.012904167175293
    10. '       ' → logprob: -10.512904167175293

Token 214: ' per' (ID: 777)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026991060003638268
    2. '
' → logprob: -5.15199089050293
    3. ',' → logprob: -5.40199089050293
    4. 'def' → logprob: -5.77699089050293
    5. '<|end|>' → logprob: -6.02699089050293
    6. 's' → logprob: -6.15199089050293
    7. '       ' → logprob: -6.27699089050293
    8. ' =' → logprob: -6.40199089050293
    9. '<|end|>' → logprob: -6.65199089050293
    10. '            
' → logprob: -7.27699089050293

Token 215: ' throw' (ID: 4268)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5184230804443359
    2. 'throws' → logprob: -1.643423080444336
    3. ' number' → logprob: -2.393423080444336
    4. 'throw' → logprob: -2.393423080444336
    5. ' throw' → logprob: -4.893423080444336
    6. ' throws' → logprob: -4.893423080444336
    7. 'step' → logprob: -6.018423080444336
    8. 'd' → logprob: -6.393423080444336
    9. 'dp' → logprob: -6.393423080444336
    10. 'depth' → logprob: -6.518423080444336

Token 216: ' count' (ID: 3605)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4546848237514496
    2. '           ' → logprob: -1.704684853553772
    3. '       ' → logprob: -2.7046847343444824
    4. '<|end|>' → logprob: -3.2046847343444824
    5. 'def' → logprob: -3.5796847343444824
    6. '<|end|>' → logprob: -4.204684734344482
    7. 's' → logprob: -4.329684734344482
    8. '        
' → logprob: -4.704684734344482
    9. ',' → logprob: -6.204684734344482
    10. '   ' → logprob: -6.454684734344482

Token 217: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020352208986878395
    2. '
' → logprob: -4.145352363586426
    3. '       ' → logprob: -6.895352363586426
    4. 'def' → logprob: -7.020352363586426
    5. ',' → logprob: -7.395352363586426
    6. '<|end|>' → logprob: -7.895352363586426
    7. 'self' → logprob: -8.270352363586426
    8. 's' → logprob: -8.270352363586426
    9. '<|end|>' → logprob: -8.770352363586426
    10. 'import' → logprob: -8.895352363586426

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4396347105503082
    2. '
' → logprob: -1.0646346807479858
    3. '       ' → logprob: -5.439634799957275
    4. '    
' → logprob: -6.439634799957275
    5. '        
' → logprob: -6.814634799957275
    6. '\n' → logprob: -7.064634799957275
    7. '            
' → logprob: -7.064634799957275
    8. '<|end|>' → logprob: -7.564634799957275
    9. '  
' → logprob: -8.064634323120117
    10. ',' → logprob: -8.064634323120117

Token 219: ' achievable' (ID: 118877)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02603725530207157
    2. ' self' → logprob: -4.526037216186523
    3. '       ' → logprob: -5.526037216186523
    4. 'def' → logprob: -5.901037216186523
    5. 'self' → logprob: -6.151037216186523
    6. ' dp' → logprob: -6.276037216186523
    7. 'dp' → logprob: -6.276037216186523
    8. '
' → logprob: -7.151037216186523
    9. ' def' → logprob: -7.776037216186523
    10. ' return' → logprob: -8.776037216186523

Token 220: '_scores' (ID: 63345)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37138375639915466
    2. '=' → logprob: -1.621383786201477
    3. '_scores' → logprob: -2.9963836669921875
    4. 's' → logprob: -3.3713836669921875
    5. '_' → logprob: -3.9963836669921875
    6. '_sets' → logprob: -4.7463836669921875
    7. '[' → logprob: -8.121383666992188
    8. 'scores' → logprob: -8.496383666992188
    9. '_s' → logprob: -8.621383666992188
    10. '_per' → logprob: -8.746383666992188

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021734237670898
    2. '=' → logprob: -2.350217342376709
    3. '[' → logprob: -12.350217819213867
    4. '=[]' → logprob: -12.725217819213867
    5. 's' → logprob: -13.350217819213867
    6. ' ' → logprob: -14.225217819213867
    7. '   ' → logprob: -15.600217819213867
    8. ':' → logprob: -15.600217819213867
    9. ' =[' → logprob: -16.100217819213867
    10. '	' → logprob: -16.350217819213867

Token 222: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0038978219963610172
    2. ' [' → logprob: -6.253897666931152
    3. '[{' → logprob: -6.253897666931152
    4. '{' → logprob: -10.378897666931152
    5. '   ' → logprob: -11.753897666931152
    6. '[class' → logprob: -14.003897666931152
    7. '       ' → logprob: -14.753897666931152
    8. '[self' → logprob: -14.878897666931152
    9. ' {' → logprob: -15.003897666931152
    10. '[array' → logprob: -15.003897666931152

Token 223: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.1269882768392563
    2. '{' → logprob: -2.126988172531128
    3. ' set' → logprob: -10.001988410949707
    4. ' {' → logprob: -11.126988410949707
    5. '   ' → logprob: -16.37698745727539
    6. '(set' → logprob: -17.25198745727539
    7. '	set' → logprob: -17.62698745727539
    8. '{s' → logprob: -18.12698745727539
    9. '=set' → logprob: -18.37698745727539
    10. '{
' → logprob: -18.75198745727539

Token 224: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4464055299758911
    2. '([' → logprob: -1.0714055299758911
    3. '()]' → logprob: -4.321405410766602
    4. '({' → logprob: -5.696405410766602
    5. '()
' → logprob: -7.446405410766602
    6. '()]
' → logprob: -9.321405410766602
    7. '{' → logprob: -10.196405410766602
    8. '(' → logprob: -10.196405410766602
    9. '(range' → logprob: -10.446405410766602
    10. '()\' → logprob: -10.821405410766602

Token 225: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6118983626365662
    2. '()' → logprob: -0.8618983626365662
    3. 'for' → logprob: -4.236898422241211
    4. ']' → logprob: -4.861898422241211
    5. '()]' → logprob: -4.986898422241211
    6. '([' → logprob: -6.736898422241211
    7. '[' → logprob: -6.736898422241211
    8. '(' → logprob: -6.736898422241211
    9. '({' → logprob: -6.986898422241211
    10. ',' → logprob: -7.361898422241211

Token 226: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.02462879568338394
    2. ' range' → logprob: -3.7746288776397705
    3. '_' → logprob: -6.649628639221191
    4. ' ' → logprob: -10.149628639221191
    5. 'range' → logprob: -10.649628639221191
    6. '_range' → logprob: -11.149628639221191
    7. ' i' → logprob: -11.649628639221191
    8. ' xrange' → logprob: -14.649628639221191
    9. ' ' → logprob: -14.649628639221191
    10. '(range' → logprob: -15.024628639221191

Token 227: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003293924732133746
    2. ' range' → logprob: -5.753293991088867
    3. 'in' → logprob: -9.753293991088867
    4. ' in' → logprob: -9.878293991088867
    5. '(range' → logprob: -13.378293991088867
    6. ' ' → logprob: -13.503293991088867
    7. '   ' → logprob: -13.628293991088867
    8. 'i' → logprob: -14.878293991088867
    9. 'x' → logprob: -14.878293991088867
    10. '  ' → logprob: -15.003293991088867

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692968547344208
    2. ' range' → logprob: -2.126929759979248
    3. '   ' → logprob: -14.00192928314209
    4. '(range' → logprob: -15.12692928314209
    5. ' ' → logprob: -15.25192928314209
    6. '	range' → logprob: -15.50192928314209
    7. '  ' → logprob: -17.001930236816406
    8. '    ' → logprob: -18.126930236816406
    9. 'rang' → logprob: -19.126930236816406
    10. '_range' → logprob: -19.126930236816406

Token 229: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005201471503823996
    2. '(' → logprob: -7.6255202293396
    3. ' (' → logprob: -10.750519752502441
    4. 'self' → logprob: -12.375519752502441
    5. ' self' → logprob: -12.750519752502441
    6. '(len' → logprob: -12.875519752502441
    7. '(s' → logprob: -14.375519752502441
    8. '(
' → logprob: -15.750519752502441
    9. '((' → logprob: -16.250520706176758
    10. 's' → logprob: -17.250520706176758

Token 230: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -5.319370302458992e-06
    2. 'max' → logprob: -12.875005722045898
    3. ' .' → logprob: -14.000005722045898
    4. '.' → logprob: -14.625005722045898
    5. '   ' → logprob: -14.750005722045898
    6. '       ' → logprob: -15.125005722045898
    7. '	max' → logprob: -15.750005722045898
    8. ').' → logprob: -16.2500057220459
    9. '.maximum' → logprob: -16.2500057220459
    10. '           ' → logprob: -16.2500057220459

Token 231: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -12.625005722045898
    3. ' _' → logprob: -13.875005722045898
    4. 'D' → logprob: -14.375005722045898
    5. 'd' → logprob: -14.750005722045898
    6. ' ' → logprob: -16.0000057220459
    7. ')_' → logprob: -16.3750057220459
    8. ')' → logprob: -17.0000057220459
    9. '   ' → logprob: -17.1250057220459
    10. '_D' → logprob: -17.5000057220459

Token 232: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -3.214019307051785e-05
    2. 'art' → logprob: -11.375032424926758
    3. 'a' → logprob: -12.500032424926758
    4. '[' → logprob: -13.625032424926758
    5. ')' → logprob: -13.687532424926758
    6. 'Arts' → logprob: -13.687532424926758
    7. 'ar' → logprob: -13.812532424926758
    8. '```' → logprob: -14.000032424926758
    9. ' ' → logprob: -14.312532424926758
    10. 'artz' → logprob: -14.437532424926758

Token 233: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.6714733242988586
    2. ' +' → logprob: -1.2964732646942139
    3. '+' → logprob: -1.5464732646942139
    4. ')]' → logprob: -6.171473503112793
    5. ' ' → logprob: -8.796473503112793
    6. ')' → logprob: -9.796473503112793
    7. 'count' → logprob: -10.046473503112793
    8. ' .' → logprob: -10.171473503112793
    9. '.' → logprob: -10.421473503112793
    10. '.size' → logprob: -10.671473503112793

Token 234: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.35456588864326477
    2. '+' → logprob: -1.2295658588409424
    3. ')]' → logprob: -5.1045660972595215
    4. ')' → logprob: -11.229565620422363
    5. ' )' → logprob: -11.979565620422363
    6. '()+' → logprob: -12.604565620422363
    7. ')]
' → logprob: -12.854565620422363
    8. ' ' → logprob: -13.104565620422363
    9. ')])' → logprob: -13.854565620422363
    10. '()' → logprob: -13.854565620422363

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.75008487701416
    4. '2' → logprob: -17.125085830688477
    5. '           ' → logprob: -18.500085830688477
    6. '       ' → logprob: -19.000085830688477
    7. '```' → logprob: -19.000085830688477
    8. '
' → logprob: -19.375085830688477
    9. '+' → logprob: -19.625085830688477
    10. '    ' → logprob: -19.875085830688477

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '2' → logprob: -17.000001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '
' → logprob: -19.625001907348633
    6. '0' → logprob: -20.000001907348633
    7. '```' → logprob: -20.000001907348633
    8. '۱' → logprob: -20.375001907348633
    9. '       ' → logprob: -20.687501907348633
    10. '           ' → logprob: -20.812501907348633

Token 237: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008208625949919224
    2. ']' → logprob: -5.133208751678467
    3. ')]
' → logprob: -6.133208751678467
    4. ']
' → logprob: -10.133208274841309
    5. ')' → logprob: -10.383208274841309
    6. ' ]' → logprob: -11.258208274841309
    7. ')]
' → logprob: -11.758208274841309
    8. '])' → logprob: -12.133208274841309
    9. ' )' → logprob: -12.383208274841309
    10. ')]

' → logprob: -12.508208274841309

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.169809490442276
    2. ' achievable' → logprob: -2.294809579849243
    3. '<|end|>' → logprob: -3.419809579849243
    4. 'ach' → logprob: -4.294809341430664
    5. '            
' → logprob: -5.669809341430664
    6. '   ' → logprob: -6.294809341430664
    7. '       ' → logprob: -6.919809341430664
    8. '<|end|>' → logprob: -7.419809341430664
    9. '[' → logprob: -7.919809341430664
    10. ' achieved' → logprob: -8.169809341430664

Token 239: ' achievable' (ID: 118877)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.04057665914297104
    2. ' achievable' → logprob: -3.290576696395874
    3. '           ' → logprob: -6.040576457977295
    4. '   ' → logprob: -9.415576934814453
    5. '       ' → logprob: -10.415576934814453
    6. '            
' → logprob: -11.665576934814453
    7. ' ach' → logprob: -12.165576934814453
    8. 'achable' → logprob: -12.665576934814453
    9. '               ' → logprob: -13.040576934814453
    10. ' achieved' → logprob: -13.040576934814453

Token 240: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -3.4121114822482923e-06
    2. 'scores' → logprob: -12.875003814697266
    3. 'Scores' → logprob: -15.250003814697266
    4. '[' → logprob: -15.875003814697266
    5. '_' → logprob: -15.875003814697266
    6. '_score' → logprob: -16.250003814697266
    7. '```' → logprob: -17.500003814697266
    8. '_s' → logprob: -17.625003814697266
    9. ' scores' → logprob: -18.000003814697266
    10. ' _' → logprob: -18.375003814697266

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -15.875000953674316
    3. '[
' → logprob: -15.875000953674316
    4. '```' → logprob: -15.875000953674316
    5. '
' → logprob: -16.375
    6. '0' → logprob: -16.5
    7. '][' → logprob: -16.75
    8. '=' → logprob: -16.75
    9. '

' → logprob: -17.5
    10. ')[' → logprob: -17.625

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '[' → logprob: -16.000003814697266
    4. '   ' → logprob: -17.312503814697266
    5. '
' → logprob: -17.375003814697266
    6. '000' → logprob: -18.312503814697266
    7. ']' → logprob: -18.437503814697266
    8. '۰' → logprob: -18.500003814697266
    9. ')' → logprob: -18.875003814697266
    10. ',' → logprob: -19.000003814697266

Token 243: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05579116567969322
    2. '.add' → logprob: -2.930791139602661
    3. ']' → logprob: -7.43079137802124
    4. '.' → logprob: -8.930790901184082
    5. ' .' → logprob: -9.305790901184082
    6. ' ].' → logprob: -9.555790901184082
    7. ' ' → logprob: -12.180790901184082
    8. 'add' → logprob: -12.305790901184082
    9. ']=' → logprob: -12.805790901184082
    10. '}.' → logprob: -13.055790901184082

Token 244: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.320199877838604e-07
    2. '.add' → logprob: -14.75
    3. ' add' → logprob: -16.875
    4. 'update' → logprob: -20.375
    5. '_add' → logprob: -20.875
    6. '	add' → logprob: -21.625
    7. '```' → logprob: -22.75
    8. 'adde' → logprob: -23.5
    9. 'Add' → logprob: -23.75
    10. '
' → logprob: -24.875

Token 245: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. '(
' → logprob: -14.625000953674316
    3. '0' → logprob: -14.875000953674316
    4. ' (' → logprob: -16.000001907348633
    5. ' ' → logprob: -20.125001907348633
    6. '(

' → logprob: -20.500001907348633
    7. '((' → logprob: -20.625001907348633
    8. '()' → logprob: -21.500001907348633
    9. '({' → logprob: -22.000001907348633
    10. '(
' → logprob: -22.500001907348633

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.125
    4. ')' → logprob: -20.25
    5. '(' → logprob: -20.875
    6. '۰' → logprob: -22.0
    7. '{' → logprob: -22.5
    8. '  ' → logprob: -22.5
    9. '```' → logprob: -22.75
    10. '
' → logprob: -22.75

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001818489981815219
    2. ')
' → logprob: -8.625182151794434
    3. '           ' → logprob: -13.875182151794434
    4. ' )' → logprob: -14.750182151794434
    5. ')
' → logprob: -15.375182151794434
    6. ')

' → logprob: -15.625182151794434
    7. ')`' → logprob: -16.125181198120117
    8. '       ' → logprob: -16.375181198120117
    9. '<|end|>' → logprob: -17.000181198120117
    10. '),' → logprob: -17.125181198120117

Token 248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6593700051307678
    2. '       ' → logprob: -1.409369945526123
    3. '<|end|>' → logprob: -2.034369945526123
    4. '
' → logprob: -3.159369945526123
    5. '        
' → logprob: -3.409369945526123
    6. '    
' → logprob: -4.784369945526123
    7. '\n' → logprob: -5.534369945526123
    8. ' for' → logprob: -5.659369945526123
    9. '  
' → logprob: -5.784369945526123
    10. ' 
' → logprob: -5.909369945526123

Token 249: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21782170236110687
    2. 'for' (adapté à ' for') → logprob: -1.842821717262268
    3. '           ' → logprob: -3.4678215980529785
    4. '       ' → logprob: -5.2178215980529785
    5. '   ' → logprob: -7.4678215980529785
    6. ' ' → logprob: -9.842822074890137
    7. '    ' → logprob: -10.342822074890137
    8. '	for' → logprob: -10.467822074890137
    9. '        ' → logprob: -11.342822074890137
    10. ' ' → logprob: -11.592822074890137

Token 250: ' score' (ID: 8429)
  Prédit: ' darts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' darts' → logprob: -0.38284119963645935
    2. ' dart' → logprob: -2.132841110229492
    3. ' throw' → logprob: -2.257841110229492
    4. ' throws' → logprob: -3.382841110229492
    5. ' d' → logprob: -4.257841110229492
    6. 'd' → logprob: -4.382841110229492
    7. ' parts' → logprob: -4.632841110229492
    8. 'throw' → logprob: -5.257841110229492
    9. ' num' → logprob: -5.382841110229492
    10. 'dart' → logprob: -5.507841110229492

Token 251: ' in' (ID: 306)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.4106968343257904
    2. ' in' → logprob: -1.2856968641281128
    3. 's' → logprob: -3.5356967449188232
    4. '_' → logprob: -4.160696983337402
    5. '_set' → logprob: -5.160696983337402
    6. '_list' → logprob: -5.410696983337402
    7. '_in' → logprob: -6.410696983337402
    8. '_parts' → logprob: -6.535696983337402
    9. 'part' → logprob: -7.660696983337402
    10. '_idx' → logprob: -8.160696983337402

Token 252: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2812529504299164
    2. ' self' → logprob: -1.4062529802322388
    3. '   ' → logprob: -9.90625286102295
    4. '	self' → logprob: -10.65625286102295
    5. ' ' → logprob: -10.90625286102295
    6. '  ' → logprob: -12.90625286102295
    7. '(self' → logprob: -13.15625286102295
    8. 'ach' → logprob: -13.90625286102295
    9. '    ' → logprob: -14.15625286102295
    10. '       ' → logprob: -14.40625286102295

Token 253: '.parts' (ID: 145037)
  Prédit: '.parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parts' → logprob: -0.00020139472326263785
    2. ' .' → logprob: -8.875201225280762
    3. '.part' → logprob: -10.500201225280762
    4. '._' → logprob: -11.250201225280762
    5. '.' → logprob: -11.375201225280762
    6. 'parts' → logprob: -12.500201225280762
    7. '   ' → logprob: -13.375201225280762
    8. '.p' → logprob: -13.750201225280762
    9. '.points' → logprob: -14.750201225280762
    10. '_parts' → logprob: -14.875201225280762

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005769816925749183
    2. ' :' → logprob: -7.625576972961426
    3. ':
' → logprob: -9.625576972961426
    4. '):' → logprob: -11.500576972961426
    5. '._' → logprob: -12.500576972961426
    6. ':_' → logprob: -13.000576972961426
    7. '_scores' → logprob: -13.375576972961426
    8. '   ' → logprob: -13.750576972961426
    9. '_:' → logprob: -14.000576972961426
    10. '[' → logprob: -14.000576972961426

Token 255: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009677992202341557
    2. ':' → logprob: -8.250967979431152
    3. '<|end|>' → logprob: -8.750967979431152
    4. '                
' → logprob: -9.000967979431152
    5. ' for' → logprob: -9.000967979431152
    6. '           ' → logprob: -9.375967979431152
    7. '                ' → logprob: -10.000967979431152
    8. '   ' → logprob: -10.000967979431152
    9. ',' → logprob: -10.875967979431152
    10. '	           ' → logprob: -11.125967979431152

Token 256: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10079067945480347
    2. 'for' (adapté à ' for') → logprob: -2.3507907390594482
    3. '           ' → logprob: -7.725790500640869
    4. '               ' → logprob: -9.725790977478027
    5. '            ' → logprob: -10.600790977478027
    6. '	for' → logprob: -10.725790977478027
    7. ' ' → logprob: -11.100790977478027
    8. '   ' → logprob: -11.475790977478027
    9. ' ' → logprob: -13.100790977478027
    10. '    ' → logprob: -13.475790977478027

Token 257: ' throws' (ID: 5114)
  Prédit: ' darts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' darts' → logprob: -1.258360743522644
    2. 'd' → logprob: -1.383360743522644
    3. ' throws' → logprob: -2.0083608627319336
    4. 'throw' → logprob: -2.0083608627319336
    5. 'throws' → logprob: -2.7583608627319336
    6. ' throw' → logprob: -3.6333608627319336
    7. 'count' → logprob: -4.008360862731934
    8. 'dart' → logprob: -4.133360862731934
    9. 't' → logprob: -4.508360862731934
    10. ' dart' → logprob: -4.508360862731934

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017988269682973623
    2. 'in' → logprob: -6.376798629760742
    3. 'count' → logprob: -10.126798629760742
    4. '_count' → logprob: -10.251798629760742
    5. ' ' → logprob: -11.376798629760742
    6. '_in' → logprob: -12.751798629760742
    7. '	in' → logprob: -12.751798629760742
    8. 'ount' → logprob: -13.126798629760742
    9. 's' → logprob: -15.126798629760742
    10. '_' → logprob: -15.751798629760742

Token 259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005241583567112684
    2. ' range' → logprob: -5.255241394042969
    3. 're' → logprob: -12.380241394042969
    4. '   ' → logprob: -12.755241394042969
    5. ' reversed' → logprob: -15.130241394042969
    6. ' ' → logprob: -15.630241394042969
    7. '	range' → logprob: -16.00524139404297
    8. '  ' → logprob: -16.13024139404297
    9. 'reverse' → logprob: -16.75524139404297
    10. '    ' → logprob: -17.25524139404297

Token 260: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4756482243537903
    2. '(self' → logprob: -0.9756482243537903
    3. '1' → logprob: -6.475648403167725
    4. 'self' → logprob: -11.225647926330566
    5. '               ' → logprob: -11.725647926330566
    6. '           ' → logprob: -12.225647926330566
    7. ' self' → logprob: -13.225647926330566
    8. '(
' → logprob: -14.225647926330566
    9. '(len' → logprob: -15.600647926330566
    10. '                   ' → logprob: -15.975647926330566

Token 261: '.max' (ID: 11883)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4782000482082367
    2. '.max' → logprob: -1.228200078010559
    3. 'self' → logprob: -2.7281999588012695
    4. 'max' → logprob: -3.8531999588012695
    5. '(self' → logprob: -8.97819995880127
    6. '.self' → logprob: -9.22819995880127
    7. ' ' → logprob: -9.35319995880127
    8. '0' → logprob: -9.47819995880127
    9. '.' → logprob: -9.72819995880127
    10. '           ' → logprob: -10.10319995880127

Token 262: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.000945172505453229
    2. 'D' → logprob: -7.250945091247559
    3. 'd' → logprob: -9.000945091247559
    4. '       ' → logprob: -10.250945091247559
    5. '-' → logprob: -11.125945091247559
    6. '           ' → logprob: -11.875945091247559
    7. '
' → logprob: -11.875945091247559
    8. ')' → logprob: -12.250945091247559
    9. ' darts' → logprob: -12.250945091247559
    10. '   ' → logprob: -12.250945091247559

Token 263: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -1.8193366486229934e-05
    2. 'art' → logprob: -12.000018119812012
    3. 'a' → logprob: -12.875018119812012
    4. ' ' → logprob: -13.500018119812012
    5. '
' → logprob: -14.000018119812012
    6. '   ' → logprob: -14.125018119812012
    7. '[' → logprob: -14.125018119812012
    8. 's' → logprob: -14.125018119812012
    9. 'r' → logprob: -14.750018119812012
    10. '

' → logprob: -14.875018119812012

Token 264: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -9.014684110297821e-06
    2. 'count' → logprob: -12.375008583068848
    3. ' .' → logprob: -13.375008583068848
    4. '1' → logprob: -13.625008583068848
    5. '.' → logprob: -13.875008583068848
    6. '   ' → logprob: -15.375008583068848
    7. '
' → logprob: -15.625008583068848
    8. '[' → logprob: -15.750008583068848
    9. ').' → logprob: -16.500009536743164
    10. '	count' → logprob: -16.500009536743164

Token 265: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7655639052391052
    2. ',' → logprob: -1.39056396484375
    3. ' -' → logprob: -2.51556396484375
    4. '):
' → logprob: -2.64056396484375
    5. ' +' → logprob: -2.76556396484375
    6. '+' → logprob: -3.64056396484375
    7. ' ):' → logprob: -4.14056396484375
    8. ' ,' → logprob: -4.14056396484375
    9. '-' → logprob: -4.64056396484375
    10. ' ' → logprob: -6.76556396484375

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000111768240458332
    2. ' ' → logprob: -9.62511157989502
    3. '0' → logprob: -10.50011157989502
    4. '-' → logprob: -11.75011157989502
    5. ' -' → logprob: -12.25011157989502
    6. 'len' → logprob: -13.12511157989502
    7. 'score' → logprob: -13.12511157989502
    8. '```' → logprob: -15.00011157989502
    9. '   ' → logprob: -15.50011157989502
    10. 'scores' → logprob: -16.000112533569336

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003371988423168659
    2. 'score' → logprob: -6.2533721923828125
    3. '0' → logprob: -7.0033721923828125
    4. 'len' → logprob: -8.003372192382812
    5. ' ' → logprob: -9.878372192382812
    6. 'scores' → logprob: -10.128372192382812
    7. '```' → logprob: -11.003372192382812
    8. '-' → logprob: -11.128372192382812
    9. '   ' → logprob: -11.378372192382812
    10. '(score' → logprob: -11.628372192382812

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004388813395053148
    2. ',-' → logprob: -6.129388809204102
    3. ' ,' → logprob: -6.129388809204102
    4. ' ,-' → logprob: -11.004388809204102
    5. '+' → logprob: -12.629388809204102
    6. '1' → logprob: -14.004388809204102
    7. ' +' → logprob: -14.004388809204102
    8. ' -' → logprob: -14.504388809204102
    9. '-' → logprob: -15.129388809204102
    10. ',
' → logprob: -15.254388809204102

Token 269: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011054305359721184
    2. ' -' → logprob: -4.511054515838623
    3. '   ' → logprob: -13.136054039001465
    4. ' ' → logprob: -13.386054039001465
    5. '  ' → logprob: -13.761054039001465
    6. '0' → logprob: -14.261054039001465
    7. '           ' → logprob: -14.761054039001465
    8. '    ' → logprob: -15.136054039001465
    9. '       ' → logprob: -16.01105499267578
    10. '     ' → logprob: -16.01105499267578

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '
' → logprob: -17.625
    4. '-' → logprob: -18.25
    5. '   ' → logprob: -18.375
    6. '2' → logprob: -18.75
    7. '

' → logprob: -19.0
    8. '```' → logprob: -19.5
    9. '  ' → logprob: -20.625
    10. ' -' → logprob: -20.625

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ',-' → logprob: -9.875066757202148
    3. ' ,' → logprob: -11.125066757202148
    4. ' ,-' → logprob: -15.375066757202148
    5. '-' → logprob: -16.62506675720215
    6. ',
' → logprob: -17.87506675720215
    7. '   ' → logprob: -18.62506675720215
    8. '_,' → logprob: -19.00006675720215
    9. ' -' → logprob: -19.25006675720215
    10. '1' → logprob: -19.50006675720215

Token 272: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38687387108802795
    2. ' -' → logprob: -1.1368738412857056
    3. ' ' → logprob: -13.136874198913574
    4. '```' → logprob: -14.761874198913574
    5. '   ' → logprob: -16.261873245239258
    6. '1' → logprob: -16.261873245239258
    7. '	' → logprob: -16.636873245239258
    8. ')' → logprob: -16.761873245239258
    9. '  ' → logprob: -17.136873245239258
    10. '0' → logprob: -17.261873245239258

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -14.875003814697266
    4. '   ' → logprob: -16.375003814697266
    5. '2' → logprob: -16.500003814697266
    6. '

' → logprob: -16.625003814697266
    7. '```' → logprob: -17.187503814697266
    8. ')' → logprob: -17.437503814697266
    9. '0' → logprob: -17.812503814697266
    10. '-' → logprob: -18.375003814697266

Token 274: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0434127002954483
    2. '):' → logprob: -3.168412685394287
    3. '):
' → logprob: -8.293413162231445
    4. ' ):
' → logprob: -9.293413162231445
    5. '                   ' → logprob: -10.793413162231445
    6. '               ' → logprob: -11.168413162231445
    7. ',' → logprob: -11.793413162231445
    8. ' ):' → logprob: -12.043413162231445
    9. '):

' → logprob: -12.293413162231445
    10. ':' → logprob: -12.418413162231445

Token 275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8413570523262024
    2. '               ' → logprob: -1.0913569927215576
    3. ':' → logprob: -1.5913569927215576
    4. ':
' → logprob: -4.716357231140137
    5. '   ' → logprob: -4.966357231140137
    6. '           ' → logprob: -4.966357231140137
    7. ',' → logprob: -6.091357231140137
    8. '                       ' → logprob: -7.216357231140137
    9. ' :' → logprob: -7.341357231140137
    10. '                ' → logprob: -7.716357231140137

Token 276: ' current' (ID: 2208)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8342430591583252
    2. 'for' → logprob: -0.8342430591583252
    3. '                   ' → logprob: -2.584243059158325
    4. '               ' → logprob: -3.709243059158325
    5. '   ' → logprob: -4.584242820739746
    6. ' new' → logprob: -4.584242820739746
    7. '                       ' → logprob: -5.334242820739746
    8. 'new' → logprob: -5.959242820739746
    9. 'if' → logprob: -6.834242820739746
    10. ' if' → logprob: -7.084242820739746

Token 277: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.012391679920256138
    2. 'scores' → logprob: -5.387391567230225
    3. ' =' → logprob: -5.762391567230225
    4. '_' → logprob: -6.512391567230225
    5. '=' → logprob: -7.012391567230225
    6. 'ach' → logprob: -7.262391567230225
    7. '_set' → logprob: -7.512391567230225
    8. '   ' → logprob: -8.262392044067383
    9. 'for' → logprob: -8.387392044067383
    10. '_s' → logprob: -8.512392044067383

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020543988794088364
    2. ' =' → logprob: -3.8955440521240234
    3. '=set' → logprob: -13.770544052124023
    4. '   ' → logprob: -15.020544052124023
    5. '=
' → logprob: -15.520544052124023
    6. 'update' → logprob: -15.770544052124023
    7. 'for' → logprob: -16.020544052124023
    8. '.update' → logprob: -16.145544052124023
    9. '=current' → logprob: -16.645544052124023
    10. ':' → logprob: -17.020544052124023

Token 279: ' achievable' (ID: 118877)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.5243722796440125
    2. ' achievable' → logprob: -0.8993722796440125
    3. ' list' → logprob: -7.774372100830078
    4. '   ' → logprob: -8.024372100830078
    5. 'list' → logprob: -9.024372100830078
    6. ' ach' → logprob: -9.149372100830078
    7. 'achable' → logprob: -10.399372100830078
    8. ' ' → logprob: -10.461872100830078
    9. '       ' → logprob: -10.899372100830078
    10. '  ' → logprob: -10.961872100830078

Token 280: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.6240566083070007e-06
    2. 'scores' → logprob: -13.500001907348633
    3. '_tokens' → logprob: -17.000001907348633
    4. '[' → logprob: -17.125001907348633
    5. '_' → logprob: -17.250001907348633
    6. '
' → logprob: -17.375001907348633
    7. 'Scores' → logprob: -17.625001907348633
    8. '_score' → logprob: -17.625001907348633
    9. ' _' → logprob: -18.500001907348633
    10. 's' → logprob: -18.875001907348633

Token 281: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.584861744660884e-05
    2. '[contains' → logprob: -10.125045776367188
    3. '	throws' → logprob: -13.375045776367188
    4. '[Serialize' → logprob: -13.500045776367188
    5. 'throws' → logprob: -14.625045776367188
    6. ' [' → logprob: -14.750045776367188
    7. '(' → logprob: -14.750045776367188
    8. '   ' → logprob: -14.875045776367188
    9. ')throws' → logprob: -15.500045776367188
    10. '[
' → logprob: -15.875045776367188

Token 282: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.00014442270912695676
    2. '[' → logprob: -9.125144004821777
    3. ' throws' → logprob: -10.750144004821777
    4. '	throws' → logprob: -11.375144004821777
    5. '   ' → logprob: -14.375144004821777
    6. ']' → logprob: -14.500144004821777
    7. ')throws' → logprob: -14.750144004821777
    8. 'Throws' → logprob: -15.500144004821777
    9. '```' → logprob: -15.875144004821777
    10. 'returns' → logprob: -15.875144004821777

Token 283: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8191652894020081
    2. ']
' → logprob: -1.0691652297973633
    3. '.copy' → logprob: -1.5691652297973633
    4. '].' → logprob: -5.694165229797363
    5. '.' → logprob: -6.319165229797363
    6. '                   ' → logprob: -7.194165229797363
    7. '           ' → logprob: -8.069165229797363
    8. '   ' → logprob: -8.319165229797363
    9. '
' → logprob: -8.819165229797363
    10. '.inter' → logprob: -8.944165229797363

Token 284: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04360616207122803
    2. 'for' → logprob: -3.4186062812805176
    3. ' for' → logprob: -4.793606281280518
    4. '               ' → logprob: -6.543606281280518
    5. '           ' → logprob: -9.91860580444336
    6. 'next' → logprob: -10.04360580444336
    7. '   ' → logprob: -10.54360580444336
    8. 'new' → logprob: -11.04360580444336
    9. '                       ' → logprob: -11.04360580444336
    10. '       ' → logprob: -11.16860580444336

Token 285: ' next' (ID: 2613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.203270822763443
    2. 'next' (adapté à ' next') → logprob: -2.45327091217041
    3. '                   ' → logprob: -2.70327091217041
    4. ' for' → logprob: -3.95327091217041
    5. ' next' → logprob: -5.20327091217041
    6. 'new' → logprob: -5.32827091217041
    7. ' new' → logprob: -6.95327091217041
    8. '               ' → logprob: -9.20327091217041
    9. '   ' → logprob: -9.32827091217041
    10. '                       ' → logprob: -9.45327091217041

Token 286: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0005763856461271644
    2. 'scores' → logprob: -8.12557601928711
    3. '_' → logprob: -9.25057601928711
    4. '_set' → logprob: -9.37557601928711
    5. ' =' → logprob: -10.50057601928711
    6. '=' → logprob: -10.87557601928711
    7. '_throw' → logprob: -10.87557601928711
    8. '_sets' → logprob: -11.87557601928711
    9. 'set' → logprob: -12.50057601928711
    10. 'throws' → logprob: -12.50057601928711

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759945511817932
    2. ' =' → logprob: -0.8259945511817932
    3. '.update' → logprob: -10.325994491577148
    4. '   ' → logprob: -11.200994491577148
    5. '=set' → logprob: -13.325994491577148
    6. '           ' → logprob: -13.575994491577148
    7. ' ' → logprob: -13.700994491577148
    8. '|' → logprob: -14.450994491577148
    9. '                   ' → logprob: -14.575994491577148
    10. '.' → logprob: -14.575994491577148

Token 288: ' achievable' (ID: 118877)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.18061880767345428
    2. ' achievable' → logprob: -1.8056187629699707
    3. '           ' → logprob: -8.555619239807129
    4. '   ' → logprob: -8.555619239807129
    5. '               ' → logprob: -8.930619239807129
    6. '                   ' → logprob: -9.055619239807129
    7. ' ach' → logprob: -10.305619239807129
    8. '       ' → logprob: -10.680619239807129
    9. 'achable' → logprob: -10.680619239807129
    10. '                       ' → logprob: -11.055619239807129

Token 289: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.306760805164231e-05
    2. 'scores' → logprob: -11.87501335144043
    3. '[' → logprob: -12.37501335144043
    4. 's' → logprob: -13.87501335144043
    5. 'Scores' → logprob: -15.12501335144043
    6. 'ach' → logprob: -15.75001335144043
    7. '   ' → logprob: -16.75001335144043
    8. 'a' → logprob: -16.87501335144043
    9. '           ' → logprob: -17.00001335144043
    10. '_s' → logprob: -17.12501335144043

Token 290: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. 'throws' → logprob: -15.250000953674316
    3. '   ' → logprob: -15.375000953674316
    4. ' [' → logprob: -16.875
    5. '
' → logprob: -17.0
    6. '[contains' → logprob: -17.0
    7. '[
' → logprob: -17.75
    8. '

' → logprob: -17.875
    9. '	throws' → logprob: -18.0
    10. '       ' → logprob: -18.375

Token 291: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -2.141186450899113e-05
    2. ' throws' → logprob: -10.875020980834961
    3. 'throw' → logprob: -14.375020980834961
    4. '[' → logprob: -14.375020980834961
    5. '   ' → logprob: -14.750020980834961
    6. '
' → logprob: -15.750020980834961
    7. 'Throws' → logprob: -15.750020980834961
    8. '	throws' → logprob: -15.750020980834961
    9. '{' → logprob: -15.875020980834961
    10. 'tries' → logprob: -16.12502098083496

Token 292: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519311308860779
    2. ' +' → logprob: -1.5019311904907227
    3. '+
' → logprob: -13.876931190490723
    4. ' +
' → logprob: -14.876931190490723
    5. ']' → logprob: -15.001931190490723
    6. '＋' → logprob: -15.376931190490723
    7. '   ' → logprob: -16.126930236816406
    8. ' ' → logprob: -16.501930236816406
    9. '+]' → logprob: -17.626930236816406
    10. '
' → logprob: -17.876930236816406

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. ']' → logprob: -16.00004005432129
    4. '   ' → logprob: -17.00004005432129
    5. '
' → logprob: -17.50004005432129
    6. ')' → logprob: -18.25004005432129
    7. '```' → logprob: -18.75004005432129
    8. '  ' → logprob: -18.87504005432129
    9. '           ' → logprob: -18.93754005432129
    10. '

' → logprob: -19.25004005432129

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. ' ' → logprob: -11.500011444091797
    3. '
' → logprob: -14.000011444091797
    4. '   ' → logprob: -17.187511444091797
    5. '```' → logprob: -17.625011444091797
    6. '0' → logprob: -17.937511444091797
    7. '

' → logprob: -18.000011444091797
    8. ']' → logprob: -18.312511444091797
    9. ')' → logprob: -18.625011444091797
    10. '۱' → logprob: -19.125011444091797

Token 295: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.11036838591098785
    2. ']' → logprob: -2.485368490219116
    3. '].' → logprob: -3.860368490219116
    4. ']

' → logprob: -10.235368728637695
    5. ']
' → logprob: -10.610368728637695
    6. '   ' → logprob: -11.110368728637695
    7. '           ' → logprob: -11.110368728637695
    8. '
' → logprob: -11.360368728637695
    9. '       ' → logprob: -11.860368728637695
    10. ']|' → logprob: -12.360368728637695

Token 296: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00248909555375576
    2. '                       ' → logprob: -6.50248908996582
    3. ' for' → logprob: -7.75248908996582
    4. '               ' → logprob: -8.62748908996582
    5. '                    
' → logprob: -9.00248908996582
    6. ' next' → logprob: -9.37748908996582
    7. 'for' → logprob: -10.00248908996582
    8. '           ' → logprob: -10.37748908996582
    9. '                    ' → logprob: -10.75248908996582
    10. '
' → logprob: -11.25248908996582

Token 297: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5422855615615845
    2. ' for' → logprob: -1.1672855615615845
    3. '                   ' → logprob: -2.792285442352295
    4. 'next' → logprob: -3.667285442352295
    5. ' next' → logprob: -4.417285442352295
    6. '               ' → logprob: -5.792285442352295
    7. '           ' → logprob: -5.917285442352295
    8. '   ' → logprob: -6.792285442352295
    9. '                       ' → logprob: -6.917285442352295
    10. '       ' → logprob: -7.917285442352295

Token 298: ' s' (ID: 265)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -1.0614944696426392
    2. 'current' → logprob: -1.1864944696426392
    3. 's' → logprob: -2.1864943504333496
    4. ' curr' → logprob: -2.8114943504333496
    5. ' current' → logprob: -2.8114943504333496
    6. ' s' → logprob: -3.1864943504333496
    7. 'cs' → logprob: -3.3114943504333496
    8. 'existing' → logprob: -4.68649435043335
    9. 'cur' → logprob: -4.81149435043335
    10. 'val' → logprob: -5.56149435043335

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004128388129174709
    2. 'in' → logprob: -5.504128456115723
    3. ' ' → logprob: -10.004128456115723
    4. 's' → logprob: -13.129128456115723
    5. '_in' → logprob: -14.254128456115723
    6. 'n' → logprob: -14.629128456115723
    7. '	in' → logprob: -14.629128456115723
    8. '<|end|>' → logprob: -15.129128456115723
    9. 'i' → logprob: -15.379128456115723
    10. ' ' → logprob: -15.629128456115723

Token 300: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004079828038811684
    2. ' current' → logprob: -5.504079818725586
    3. '   ' → logprob: -14.129079818725586
    4. ' ' → logprob: -15.254079818725586
    5. 'list' → logprob: -15.629079818725586
    6. '	current' → logprob: -16.629079818725586
    7. '[current' → logprob: -17.379079818725586
    8. '(current' → logprob: -17.879079818725586
    9. '$current' → logprob: -18.004079818725586
    10. '
' → logprob: -18.379079818725586

Token 301: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.735893965815194e-05
    2. '_' → logprob: -11.750017166137695
    3. 'scores' → logprob: -11.750017166137695
    4. '_score' → logprob: -14.375017166137695
    5. 'Scores' → logprob: -15.500017166137695
    6. '_
' → logprob: -15.750017166137695
    7. '_s' → logprob: -16.125017166137695
    8. 's' → logprob: -16.750017166137695
    9. ' scores' → logprob: -17.000017166137695
    10. '_current' → logprob: -17.125017166137695

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4522036612033844
    2. ':
' → logprob: -1.077203631401062
    3. '                       ' → logprob: -3.8272037506103516
    4. '                           ' → logprob: -7.827203750610352
    5. '                        ' → logprob: -7.827203750610352
    6. ':
' → logprob: -8.202203750610352
    7. ':

' → logprob: -9.702203750610352
    8. ' :' → logprob: -9.702203750610352
    9. ' :
' → logprob: -10.327203750610352
    10. '                   ' → logprob: -10.577203750610352

Token 303: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006047892849892378
    2. ' if' → logprob: -5.50604772567749
    3. '                        ' → logprob: -6.50604772567749
    4. ' next' → logprob: -8.756048202514648
    5. '                        
' → logprob: -9.131048202514648
    6. '                           ' → logprob: -9.631048202514648
    7. '                    ' → logprob: -10.381048202514648
    8. '                               ' → logprob: -10.631048202514648
    9. '                   ' → logprob: -11.131048202514648
    10. ' new' → logprob: -11.256048202514648

Token 304: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.13976651430130005
    2. ' if' → logprob: -2.7647664546966553
    3. 'new' (adapté à ' new') → logprob: -3.0147664546966553
    4. ' next' → logprob: -4.514766693115234
    5. 'if' → logprob: -5.639766693115234
    6. 'next' → logprob: -5.889766693115234
    7. '                           ' → logprob: -7.889766693115234
    8. '                       ' → logprob: -8.389766693115234
    9. '   ' → logprob: -8.764766693115234
    10. 'n' → logprob: -9.139766693115234

Token 305: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.002524172654375434
    2. '_s' → logprob: -6.002524375915527
    3. '_sum' → logprob: -10.502524375915527
    4. ' =' → logprob: -11.627524375915527
    5. 'score' → logprob: -12.252524375915527
    6. '_' → logprob: -13.377524375915527
    7. '_scores' → logprob: -13.377524375915527
    8. 'Score' → logprob: -13.377524375915527
    9. 's' → logprob: -13.877524375915527
    10. '=' → logprob: -13.877524375915527

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020544691011309624
    2. '=' → logprob: -3.8955447673797607
    3. 's' → logprob: -13.52054500579834
    4. ' ' → logprob: -14.14554500579834
    5. ')' → logprob: -15.77054500579834
    6. ' =
' → logprob: -15.89554500579834
    7. '=s' → logprob: -16.020544052124023
    8. ',' → logprob: -16.270544052124023
    9. '_score' → logprob: -17.020544052124023
    10. '+' → logprob: -17.395544052124023

Token 307: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3868732452392578
    2. ' s' → logprob: -1.1368732452392578
    3. '                       ' → logprob: -13.636873245239258
    4. '(s' → logprob: -15.386873245239258
    5. '                           ' → logprob: -15.761873245239258
    6. ' ' → logprob: -15.761873245239258
    7. '                        ' → logprob: -15.886873245239258
    8. ' ' → logprob: -16.886873245239258
    9. '_s' → logprob: -16.886873245239258
    10. '`s' → logprob: -16.886873245239258

Token 308: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014150768518448
    2. '+' → logprob: -1.7014150619506836
    3. '+s' → logprob: -14.576415061950684
    4. ' ' → logprob: -15.076415061950684
    5. ' +
' → logprob: -15.201415061950684
    6. ' ' → logprob: -16.326416015625
    7. ' +=' → logprob: -16.326416015625
    8. ' plus' → logprob: -16.451416015625
    9. '+self' → logprob: -16.576416015625
    10. '<|end|>' → logprob: -16.576416015625

Token 309: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0013261953135952353
    2. ' score' → logprob: -6.626326084136963
    3. '(score' → logprob: -15.876326560974121
    4. '
' → logprob: -16.501325607299805
    5. '	score' → logprob: -17.126325607299805
    6. ' ' → logprob: -17.126325607299805
    7. '   ' → logprob: -17.751325607299805
    8. 'int' → logprob: -18.126325607299805
    9. 'Score' → logprob: -19.376325607299805
    10. '```' → logprob: -19.501325607299805

Token 310: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34194415807724
    2. '                       ' → logprob: -1.3419442176818848
    3. ' 
' → logprob: -4.716944217681885
    4. '                        
' → logprob: -4.966944217681885
    5. '<|end|>' → logprob: -4.966944217681885
    6. '                        ' → logprob: -5.591944217681885
    7. '
' → logprob: -7.841944217681885
    8. '                           ' → logprob: -8.091943740844727
    9. ' if' → logprob: -8.341943740844727
    10. '  
' → logprob: -8.841943740844727

Token 311: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0025680451653897762
    2. '
' → logprob: -7.127568244934082
    3. '                        ' → logprob: -7.502568244934082
    4. '                        
' → logprob: -7.627568244934082
    5. ' if' → logprob: -8.127568244934082
    6. ' ' → logprob: -9.252568244934082
    7. '                           ' → logprob: -9.377568244934082
    8. ' 
' → logprob: -9.502568244934082
    9. '<|end|>' → logprob: -9.877568244934082
    10. '               ' → logprob: -10.627568244934082

Token 312: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6336953043937683
    2. 'if' (adapté à ' if') → logprob: -0.8836953043937683
    3. '                       ' → logprob: -2.883695363998413
    4. '                           ' → logprob: -9.883695602416992
    5. '                        ' → logprob: -10.008695602416992
    6. ' new' → logprob: -10.258695602416992
    7. 'If' → logprob: -11.383695602416992
    8. 'new' → logprob: -11.633695602416992
    9. '                        
' → logprob: -11.633695602416992
    10. '```' → logprob: -12.008695602416992

Token 313: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0699438825249672
    2. ' new' → logprob: -2.694943904876709
    3. '                           ' → logprob: -13.19494342803955
    4. '0' → logprob: -13.19494342803955
    5. '                       ' → logprob: -13.81994342803955
    6. '   ' → logprob: -14.44494342803955
    7. 'self' → logprob: -14.69494342803955
    8. '                                   ' → logprob: -14.94494342803955
    9. '                               ' → logprob: -15.44494342803955
    10. ' ' → logprob: -15.44494342803955

Token 314: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.3425219549390022e-05
    2. 'score' → logprob: -11.62501335144043
    3. '_' → logprob: -13.50001335144043
    4. 'new' → logprob: -13.87501335144043
    5. '_scores' → logprob: -14.25001335144043
    6. '_s' → logprob: -15.12501335144043
    7. '_SCORE' → logprob: -15.12501335144043
    8. '_new' → logprob: -15.50001335144043
    9. 'Score' → logprob: -15.62501335144043
    10. ' _' → logprob: -16.12501335144043

Token 315: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04859941080212593
    2. '<=' → logprob: -3.0485994815826416
    3. ')<=' → logprob: -12.173599243164062
    4. '[' → logprob: -13.173599243164062
    5. '<|end|>' → logprob: -13.298599243164062
    6. ']<=' → logprob: -14.173599243164062
    7. ' ' → logprob: -14.173599243164062
    8. ')' → logprob: -14.423599243164062
    9. ' ' → logprob: -14.423599243164062
    10. '.' → logprob: -16.423599243164062

Token 316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007614674977958202
    2. ' self' → logprob: -4.882614612579346
    3. '                   ' → logprob: -12.632615089416504
    4. '                       ' → logprob: -13.132615089416504
    5. '           ' → logprob: -13.382615089416504
    6. '               ' → logprob: -14.132615089416504
    7. '(self' → logprob: -15.007615089416504
    8. '                           ' → logprob: -15.132615089416504
    9. '
' → logprob: -16.382614135742188
    10. '=self' → logprob: -16.507614135742188

Token 317: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -9.014684110297821e-06
    2. 'limit' → logprob: -11.750008583068848
    3. ' .' → logprob: -14.375008583068848
    4. ' limit' → logprob: -15.250008583068848
    5. '.' → logprob: -15.500008583068848
    6. '.l' → logprob: -19.250009536743164
    7. 'Limit' → logprob: -19.375009536743164
    8. '_limit' → logprob: -20.250009536743164
    9. '(limit' → logprob: -21.250009536743164
    10. '-limit' → logprob: -21.500009536743164

Token 318: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.003371511586010456
    2. ':' → logprob: -6.503371715545654
    3. 'limit' → logprob: -6.878371715545654
    4. '.' → logprob: -7.878371715545654
    5. '):' → logprob: -8.753371238708496
    6. ' .' → logprob: -8.878371238708496
    7. ' limit' → logprob: -9.378371238708496
    8. ' and' → logprob: -10.378371238708496
    9. ':
' → logprob: -11.128371238708496
    10. ')' → logprob: -11.503371238708496

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3701183497905731
    2. ':
' → logprob: -1.2451183795928955
    3. ' and' → logprob: -4.245118141174316
    4. '                           ' → logprob: -5.495118141174316
    5. '                       ' → logprob: -5.995118141174316
    6. ' :' → logprob: -8.495118141174316
    7. ' :
' → logprob: -9.120118141174316
    8. '):
' → logprob: -9.995118141174316
    9. ':

' → logprob: -10.370118141174316
    10. ':
' → logprob: -10.495118141174316

Token 320: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00687000248581171
    2. ' next' → logprob: -5.631869792938232
    3. '                               ' → logprob: -6.756869792938232
    4. '                       ' → logprob: -6.756869792938232
    5. ':' → logprob: -8.00687026977539
    6. ':
' → logprob: -8.13187026977539
    7. ' and' → logprob: -9.25687026977539
    8. '                            ' → logprob: -10.13187026977539
    9. '):
' → logprob: -10.13187026977539
    10. 'next' → logprob: -10.25687026977539

Token 321: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.011049000546336174
    2. ' next' → logprob: -4.511048793792725
    3. '                               ' → logprob: -14.386049270629883
    4. '                           ' → logprob: -14.886049270629883
    5. '	next' → logprob: -16.261049270629883
    6. '               ' → logprob: -16.386049270629883
    7. '   ' → logprob: -17.261049270629883
    8. '                       ' → logprob: -17.511049270629883
    9. '[next' → logprob: -17.761049270629883
    10. '.next' → logprob: -17.761049270629883

Token 322: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -3.128163257315464e-07
    2. 'scores' → logprob: -16.375
    3. '_score' → logprob: -16.875
    4. '_' → logprob: -17.125
    5. 'Scores' → logprob: -17.625
    6. '_prices' → logprob: -18.25
    7. '```' → logprob: -18.375
    8. '
' → logprob: -18.375
    9. '[' → logprob: -18.75
    10. '_sizes' → logprob: -18.75

Token 323: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0015043864259496331
    2. '.' → logprob: -6.501504421234131
    3. ' .' → logprob: -13.376503944396973
    4. '                           ' → logprob: -14.876503944396973
    5. '                       ' → logprob: -16.25150489807129
    6. 'add' → logprob: -17.25150489807129
    7. '.Add' → logprob: -17.75150489807129
    8. '.update' → logprob: -18.12650489807129
    9. '.append' → logprob: -18.62650489807129
    10. '   ' → logprob: -18.62650489807129

Token 324: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. 'new' → logprob: -15.750001907348633
    4. '(
' → logprob: -18.875001907348633
    5. ')new' → logprob: -20.375001907348633
    6. '(New' → logprob: -21.125001907348633
    7. '((' → logprob: -21.375001907348633
    8. '[new' → logprob: -21.750001907348633
    9. ' new' → logprob: -22.000001907348633
    10. ',new' → logprob: -22.500001907348633

Token 325: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0007206532754935324
    2. 'score' → logprob: -7.250720500946045
    3. 'new' → logprob: -12.250720977783203
    4. '_token' → logprob: -13.000720977783203
    5. '_code' → logprob: -13.500720977783203
    6. '_' → logprob: -13.750720977783203
    7. '_scores' → logprob: -14.625720977783203
    8. '_new' → logprob: -15.125720977783203
    9. 'Score' → logprob: -15.625720977783203
    10. ' score' → logprob: -16.500720977783203

Token 326: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003700165543705225
    2. '<|end|>' → logprob: -8.500370025634766
    3. ')
' → logprob: -9.375370025634766
    4. '           ' → logprob: -10.875370025634766
    5. '
' → logprob: -11.250370025634766
    6. ')return' → logprob: -11.375370025634766
    7. '                       ' → logprob: -11.500370025634766
    8. ' )' → logprob: -11.875370025634766
    9. ')}' → logprob: -12.000370025634766
    10. '               ' → logprob: -12.500370025634766

Token 327: '            
' (ID: 7048)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1916438192129135
    2. '       ' → logprob: -1.8166438341140747
    3. '<|end|>' → logprob: -5.441643714904785
    4. '        ' → logprob: -6.066643714904785
    5. 'return' → logprob: -6.941643714904785
    6. '            ' → logprob: -7.316643714904785
    7. '        
' → logprob: -7.441643714904785
    8. ' return' → logprob: -7.691643714904785
    9. '    ' → logprob: -7.691643714904785
    10. '          ' → logprob: -7.691643714904785

Token 329: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.026680273935198784
    2. 'best' → logprob: -4.0266804695129395
    3. 'for' → logprob: -5.0266804695129395
    4. 'return' → logprob: -7.2766804695129395
    5. ' max' → logprob: -7.5266804695129395
    6. 'all' → logprob: -8.651679992675781
    7. '           ' → logprob: -9.151679992675781
    8. 'result' → logprob: -9.401679992675781
    9. ' best' → logprob: -9.526679992675781
    10. '       ' → logprob: -9.526679992675781

Token 330: '_re' (ID: 3067)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00012928384239785373
    2. '_' → logprob: -9.125129699707031
    3. '_possible' → logprob: -11.500129699707031
    4. 'score' → logprob: -12.625129699707031
    5. '_scores' → logprob: -12.875129699707031
    6. 'Score' → logprob: -12.875129699707031
    7. '_sum' → logprob: -14.625129699707031
    8. '_s' → logprob: -15.250129699707031
    9. '_SCORE' → logprob: -15.500129699707031
    10. '(' → logprob: -16.00012969970703

Token 331: 'achable' (ID: 82461)
  Prédit: 'achable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achable' → logprob: -0.03490682318806648
    2. '_score' → logprob: -4.28490686416626
    3. 'score' → logprob: -4.40990686416626
    4. 'ach' → logprob: -5.65990686416626
    5. 's' → logprob: -5.78490686416626
    6. 'ward' → logprob: -7.78490686416626
    7. 'ached' → logprob: -7.90990686416626
    8. '_' → logprob: -8.034906387329102
    9. 'sc' → logprob: -8.909906387329102
    10. 'al' → logprob: -9.659906387329102

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5561947822570801
    2. ' =' → logprob: -1.30619478225708
    3. '_score' → logprob: -1.93119478225708
    4. '_' → logprob: -4.55619478225708
    5. ' ' → logprob: -8.931194305419922
    6. 'score' → logprob: -9.806194305419922
    7. '_=' → logprob: -10.056194305419922
    8. '=_' → logprob: -10.556194305419922
    9. 'Score' → logprob: -11.306194305419922
    10. '=max' → logprob: -11.931194305419922

Token 333: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6388254165649414
    2. 'max' → logprob: -0.7638254165649414
    3. ' max' → logprob: -5.263825416564941
    4. '-' → logprob: -7.263825416564941
    5. ' ' → logprob: -8.763825416564941
    6. 'self' → logprob: -8.888825416564941
    7. 'None' → logprob: -10.888825416564941
    8. ' -' → logprob: -12.388825416564941
    9. '-max' → logprob: -12.638825416564941
    10. ' self' → logprob: -12.888825416564941

Token 334: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4290895164012909
    2. '0' → logprob: -1.0540895462036133
    3. ' max' → logprob: -8.304089546203613
    4. '-' → logprob: -9.304089546203613
    5. 'self' → logprob: -10.304089546203613
    6. ' ' → logprob: -11.554089546203613
    7. '(max' → logprob: -13.554089546203613
    8. 'None' → logprob: -13.679089546203613
    9. 'min' → logprob: -13.929089546203613
    10. '-max' → logprob: -13.929089546203613

Token 335: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.412753701210022
    2. '           ' → logprob: -1.162753701210022
    3. ' 
' → logprob: -4.037753582000732
    4. '            
' → logprob: -6.037753582000732
    5. '  
' → logprob: -6.412753582000732
    6. '<|end|>' → logprob: -6.912753582000732
    7. ' for' → logprob: -7.037753582000732
    8. '    
' → logprob: -7.287753582000732
    9. '        
' → logprob: -7.912753582000732
    10. '\n' → logprob: -8.03775405883789

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0060782297514379025
    2. '
' → logprob: -5.131078243255615
    3. ' 
' → logprob: -9.506077766418457
    4. ' for' → logprob: -10.631077766418457
    5. '            
' → logprob: -10.881077766418457
    6. '  
' → logprob: -11.631077766418457
    7. '    
' → logprob: -11.756077766418457
    8. '       ' → logprob: -12.506077766418457
    9. '        
' → logprob: -12.631077766418457
    10. '               ' → logprob: -13.256077766418457

Token 337: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5803746581077576
    2. '           ' → logprob: -0.8303746581077576
    3. ' for' → logprob: -5.455374717712402
    4. '       ' → logprob: -8.830374717712402
    5. '   ' → logprob: -12.830374717712402
    6. '            
' → logprob: -13.705374717712402
    7. '
' → logprob: -14.330374717712402
    8. '               ' → logprob: -14.455374717712402
    9. '	for' → logprob: -14.830374717712402
    10. '          ' → logprob: -15.580374717712402

Token 338: ' throws' (ID: 5114)
  Prédit: 'throws'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.04938546195626259
    2. 'throw' → logprob: -3.6743855476379395
    3. ' throws' → logprob: -3.9243855476379395
    4. 'd' → logprob: -6.9243855476379395
    5. 'i' → logprob: -7.7993855476379395
    6. 'count' → logprob: -8.174385070800781
    7. 't' → logprob: -8.299385070800781
    8. '   ' → logprob: -8.424385070800781
    9. ' darts' → logprob: -8.549385070800781
    10. 'num' → logprob: -8.799385070800781

Token 339: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04860871285200119
    2. 'in' → logprob: -3.0486087799072266
    3. ',' → logprob: -10.798608779907227
    4. ' ' → logprob: -14.548608779907227
    5. '	in' → logprob: -15.798608779907227
    6. 'from' → logprob: -16.298608779907227
    7. ' ' → logprob: -16.923608779907227
    8. ' ,' → logprob: -17.423608779907227
    9. 'import' → logprob: -17.673608779907227
    10. '_in' → logprob: -17.673608779907227

Token 340: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006716436706483364
    2. ' range' → logprob: -5.006716251373291
    3. '   ' → logprob: -15.25671672821045
    4. '	range' → logprob: -15.38171672821045
    5. '(range' → logprob: -15.50671672821045
    6. ' ' → logprob: -16.131715774536133
    7. 'self' → logprob: -16.756715774536133
    8. '  ' → logprob: -16.881715774536133
    9. '_range' → logprob: -18.131715774536133
    10. '    ' → logprob: -18.131715774536133

Token 341: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04862801730632782
    2. '(' → logprob: -3.048628091812134
    3. '           ' → logprob: -11.048627853393555
    4. '(len' → logprob: -11.548627853393555
    5. '1' → logprob: -11.923627853393555
    6. 'self' → logprob: -12.923627853393555
    7. ' self' → logprob: -13.548627853393555
    8. ' ' → logprob: -13.673627853393555
    9. ' (' → logprob: -14.048627853393555
    10. '[self' → logprob: -14.173627853393555

Token 342: '.max' (ID: 11883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01994551345705986
    2. 'len' → logprob: -4.8949456214904785
    3. '1' → logprob: -5.3949456214904785
    4. ' self' → logprob: -5.8949456214904785
    5. '(self' → logprob: -5.8949456214904785
    6. '.max' → logprob: -7.0199456214904785
    7. 'max' → logprob: -7.7699456214904785
    8. '.self' → logprob: -8.01994514465332
    9. '.len' → logprob: -8.76994514465332
    10. '[self' → logprob: -8.89494514465332

Token 343: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.048762910068035126
    2. 'd' → logprob: -3.423762798309326
    3. 'D' → logprob: -4.298762798309326
    4. 's' → logprob: -6.798762798309326
    5. 'self' → logprob: -9.798763275146484
    6. '   ' → logprob: -9.923763275146484
    7. '           ' → logprob: -10.548763275146484
    8. '       ' → logprob: -10.673763275146484
    9. ')' → logprob: -11.048763275146484
    10. '[' → logprob: -11.173763275146484

Token 344: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -8.77627644513268e-06
    2. 'art' → logprob: -13.625008583068848
    3. 's' → logprob: -13.750008583068848
    4. 'Arts' → logprob: -14.000008583068848
    5. '(self' → logprob: -14.125008583068848
    6. '[' → logprob: -14.250008583068848
    7. '   ' → logprob: -14.375008583068848
    8. ' ' → logprob: -14.625008583068848
    9. 'self' → logprob: -15.125008583068848
    10. '[self' → logprob: -15.250008583068848

Token 345: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0002366753324167803
    2. '.max' → logprob: -9.500236511230469
    3. '   ' → logprob: -9.750236511230469
    4. '+' → logprob: -10.125236511230469
    5. '       ' → logprob: -10.875236511230469
    6. 'count' → logprob: -11.625236511230469
    7. ' +' → logprob: -11.750236511230469
    8. '
' → logprob: -12.375236511230469
    9. '.' → logprob: -12.375236511230469
    10. ' .' → logprob: -12.625236511230469

Token 346: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693944573402405
    2. '+' → logprob: -2.126939535140991
    3. ',' → logprob: -11.62693977355957
    4. '   ' → logprob: -13.37693977355957
    5. '):
' → logprob: -15.62693977355957
    6. ' ' → logprob: -15.62693977355957
    7. '):' → logprob: -15.87693977355957
    8. '       ' → logprob: -16.00193977355957
    9. ' ,' → logprob: -16.37693977355957
    10. '
' → logprob: -16.50193977355957

Token 347: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048289015889168
    2. ' ' → logprob: -4.511048316955566
    3. '0' → logprob: -15.261048316955566
    4. '
' → logprob: -16.38604736328125
    5. '   ' → logprob: -16.38604736328125
    6. '(' → logprob: -19.01104736328125
    7. '           ' → logprob: -19.13604736328125
    8. '2' → logprob: -19.32354736328125
    9. '       ' → logprob: -19.44854736328125
    10. '```' → logprob: -19.57354736328125

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -15.500004768371582
    4. '
' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '

' → logprob: -20.000003814697266
    7. '```' → logprob: -20.500003814697266
    8. '-' → logprob: -20.625003814697266
    9. ')' → logprob: -21.187503814697266
    10. '2' → logprob: -21.375003814697266

Token 349: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06200723350048065
    2. '):' → logprob: -2.812007188796997
    3. ':' → logprob: -10.687006950378418
    4. '):
' → logprob: -11.812006950378418
    5. ':
' → logprob: -12.562006950378418
    6. ' ):
' → logprob: -13.312006950378418
    7. '       ' → logprob: -13.812006950378418
    8. '):

' → logprob: -13.937006950378418
    9. '           ' → logprob: -14.187006950378418
    10. '   ' → logprob: -14.312006950378418

Token 350: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04265325516462326
    2. '           ' → logprob: -3.2926533222198486
    3. '<|end|>' → logprob: -5.9176530838012695
    4. ' for' → logprob: -7.5426530838012695
    5. '       ' → logprob: -7.7926530838012695
    6. ':
' → logprob: -8.16765308380127
    7. '
' → logprob: -8.41765308380127
    8. '<|end|>' → logprob: -9.16765308380127
    9. ':' → logprob: -9.41765308380127
    10. ',' → logprob: -9.79265308380127

Token 351: ' local' (ID: 2698)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5337325930595398
    2. 'for' → logprob: -1.4087326526641846
    3. '               ' → logprob: -1.9087326526641846
    4. '           ' → logprob: -4.4087324142456055
    5. ' if' → logprob: -6.4087324142456055
    6. 'scores' → logprob: -6.4087324142456055
    7. ' scores' → logprob: -6.5337324142456055
    8. ' current' → logprob: -6.9087324142456055
    9. 'current' → logprob: -7.4087324142456055
    10. 'if' → logprob: -7.5337324142456055

Token 352: '_max' (ID: 13731)
  Prédit: '_scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.13060350716114044
    2. '_max' → logprob: -2.255603551864624
    3. 'scores' → logprob: -4.880603313446045
    4. 'max' → logprob: -4.880603313446045
    5. 'for' → logprob: -6.880603313446045
    6. '_best' → logprob: -7.755603313446045
    7. '_' → logprob: -8.380603790283203
    8. '_set' → logprob: -8.630603790283203
    9. ' =' → logprob: -9.005603790283203
    10. '_possible' → logprob: -9.255603790283203

Token 353: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5768330097198486
    2. '=' → logprob: -0.8268330097198486
    3. '_scores' → logprob: -7.2018327713012695
    4. 'scores' → logprob: -9.70183277130127
    5. '   ' → logprob: -10.32683277130127
    6. '=set' → logprob: -10.95183277130127
    7. '=max' → logprob: -11.32683277130127
    8. 's' → logprob: -11.57683277130127
    9. '           ' → logprob: -12.82683277130127
    10. 'for' → logprob: -13.20183277130127

Token 354: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003177952254191041
    2. ' max' → logprob: -5.753178119659424
    3. '0' → logprob: -16.128177642822266
    4. '           ' → logprob: -16.503177642822266
    5. '(max' → logprob: -17.003177642822266
    6. '	max' → logprob: -18.878177642822266
    7. '_max' → logprob: -19.378177642822266
    8. '   ' → logprob: -19.878177642822266
    9. '               ' → logprob: -20.253177642822266
    10. ' ' → logprob: -20.503177642822266

Token 355: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2723104848410003e-05
    2. 'ach' → logprob: -10.750022888183594
    3. '((' → logprob: -14.250022888183594
    4. '(
' → logprob: -14.500022888183594
    5. '([' → logprob: -16.750022888183594
    6. '({' → logprob: -17.000022888183594
    7. '(self' → logprob: -18.875022888183594
    8. '(list' → logprob: -19.000022888183594
    9. '(A' → logprob: -19.500022888183594
    10. '(a' → logprob: -19.500022888183594

Token 356: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.3868842124938965
    2. '(' → logprob: -1.1368842124938965
    3. '(
' → logprob: -11.636884689331055
    4. ')' → logprob: -12.886884689331055
    5. 'achable' → logprob: -14.011884689331055
    6. ' achievable' → logprob: -14.886884689331055
    7. '   ' → logprob: -15.886884689331055
    8. '(

' → logprob: -16.386884689331055
    9. '((' → logprob: -16.511884689331055
    10. '(a' → logprob: -16.511884689331055

Token 357: 'ievable' (ID: 45794)
  Prédit: 'ievable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ievable' → logprob: -8.65707261255011e-06
    2. 'iev' → logprob: -12.250008583068848
    3. 'ivable' → logprob: -12.875008583068848
    4. 'ie' → logprob: -14.750008583068848
    5. 'ieve' → logprob: -14.750008583068848
    6. 'ievably' → logprob: -15.125008583068848
    7. 'able' → logprob: -16.625009536743164
    8. 'reachable' → logprob: -16.750009536743164
    9. 'ieved' → logprob: -16.875009536743164
    10. 'e' → logprob: -17.625009536743164

Token 358: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.580929347255733e-05
    2. 'scores' → logprob: -11.125016212463379
    3. '(scores' → logprob: -14.125016212463379
    4. ')' → logprob: -16.250015258789062
    5. 's' → logprob: -16.750015258789062
    6. '
' → logprob: -17.125015258789062
    7. 'Scores' → logprob: -17.875015258789062
    8. '_score' → logprob: -18.000015258789062
    9. ' scores' → logprob: -18.125015258789062
    10. '(' → logprob: -18.125015258789062

Token 359: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '[contains' → logprob: -12.375005722045898
    3. '	throws' → logprob: -15.250005722045898
    4. 'throws' → logprob: -15.625005722045898
    5. ')throws' → logprob: -15.750005722045898
    6. ')' → logprob: -15.875005722045898
    7. '[Serialize' → logprob: -16.1250057220459
    8. '(' → logprob: -16.5000057220459
    9. '[assembly' → logprob: -16.7500057220459
    10. ' [' → logprob: -17.0000057220459

Token 360: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -6.921253225300461e-05
    2. '[' → logprob: -9.625069618225098
    3. ' throws' → logprob: -12.750069618225098
    4. 'throw' → logprob: -16.25006866455078
    5. '   ' → logprob: -17.62506866455078
    6. 'Throws' → logprob: -17.87506866455078
    7. 'puts' → logprob: -17.87506866455078
    8. 'raises' → logprob: -18.00006866455078
    9. 'tries' → logprob: -18.12506866455078
    10. '
' → logprob: -18.37506866455078

Token 361: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5503246784210205
    2. ']' → logprob: -1.6753246784210205
    3. ')' → logprob: -1.9253246784210205
    4. '],' → logprob: -2.4253246784210205
    5. ',' → logprob: -7.425324440002441
    6. ' or' → logprob: -7.550324440002441
    7. '),' → logprob: -8.300324440002441
    8. '])
' → logprob: -8.550324440002441
    9. ' ])' → logprob: -10.550324440002441
    10. ' )' → logprob: -10.550324440002441

Token 362: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009051493834704161
    2. ' if' → logprob: -7.2509050369262695
    3. '           ' → logprob: -9.75090503692627
    4. '                   ' → logprob: -10.00090503692627
    5. 'if' → logprob: -10.50090503692627
    6. '
' → logprob: -10.75090503692627
    7. '>' → logprob: -11.37590503692627
    8. '                
' → logprob: -11.37590503692627
    9. ',' → logprob: -12.00090503692627
    10. '       ' → logprob: -13.00090503692627

Token 363: ' achievable' (ID: 118877)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -7.159660890465602e-05
    2. ' achievable' → logprob: -9.75007152557373
    3. 'len' → logprob: -11.25007152557373
    4. 'reachable' → logprob: -15.75007152557373
    5. 'achable' → logprob: -16.125072479248047
    6. '   ' → logprob: -17.500072479248047
    7. ' ach' → logprob: -18.125072479248047
    8. 'possible' → logprob: -19.375072479248047
    9. ' len' → logprob: -20.375072479248047
    10. 'achievement' → logprob: -20.500072479248047

Token 364: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0001664717128733173
    2. 'scores' → logprob: -8.875166893005371
    3. '_' → logprob: -11.125166893005371
    4. 's' → logprob: -13.375166893005371
    5. '
' → logprob: -13.375166893005371
    6. '(scores' → logprob: -13.375166893005371
    7. '_s' → logprob: -13.500166893005371
    8. 'Scores' → logprob: -13.875166893005371
    9. 'ach' → logprob: -14.125166893005371
    10. '   ' → logprob: -14.500166893005371

Token 365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '[contains' → logprob: -12.875003814697266
    3. '	throws' → logprob: -14.500003814697266
    4. 'throws' → logprob: -15.250003814697266
    5. '[Serialize' → logprob: -16.000003814697266
    6. ')throws' → logprob: -16.125003814697266
    7. '```' → logprob: -16.125003814697266
    8. '[
' → logprob: -16.875003814697266
    9. '[assembly' → logprob: -17.125003814697266
    10. '[to' → logprob: -17.500003814697266

Token 366: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.0001996066712308675
    2. '[' → logprob: -9.000199317932129
    3. ' throws' → logprob: -9.625199317932129
    4. '	throws' → logprob: -12.750199317932129
    5. 'th' → logprob: -13.125199317932129
    6. ']' → logprob: -14.000199317932129
    7. '-' → logprob: -14.000199317932129
    8. 'Throws' → logprob: -14.500199317932129
    9. ' ' → logprob: -14.625199317932129
    10. '```' → logprob: -14.625199317932129

Token 367: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5760394334793091
    2. 'else' → logprob: -0.8260394334793091
    3. ')' → logprob: -9.32603931427002
    4. '           ' → logprob: -11.95103931427002
    5. ']' → logprob: -13.20103931427002
    6. '               ' → logprob: -13.57603931427002
    7. '       ' → logprob: -14.70103931427002
    8. '}' → logprob: -15.20103931427002
    9. ' ' → logprob: -15.95103931427002
    10. '```' → logprob: -16.076040267944336

Token 368: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20141363143920898
    2. 'else' → logprob: -1.701413631439209
    3. '           ' → logprob: -15.326414108276367
    4. ')' → logprob: -17.576414108276367
    5. ' ' → logprob: -17.576414108276367
    6. '               ' → logprob: -17.576414108276367
    7. '       ' → logprob: -17.826414108276367
    8. '!=' → logprob: -18.076414108276367
    9. ' els' → logprob: -18.201414108276367
    10. '	else' → logprob: -18.951414108276367

Token 369: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007177923689596355
    2. ' ' → logprob: -7.250717639923096
    3. '           ' → logprob: -12.750718116760254
    4. 'max' → logprob: -13.250718116760254
    5. '-' → logprob: -13.375718116760254
    6. '   ' → logprob: -14.250718116760254
    7. 'self' → logprob: -15.125718116760254
    8. ' -' → logprob: -15.125718116760254
    9. '  ' → logprob: -16.000717163085938
    10. ' max' → logprob: -16.500717163085938

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015347852604463696
    2. ' ' → logprob: -8.875153541564941
    3. 'max' → logprob: -11.875153541564941
    4. '-' → logprob: -12.250153541564941
    5. 'float' → logprob: -14.250153541564941
    6. 'None' → logprob: -14.875153541564941
    7. ' -' → logprob: -15.125153541564941
    8. 'self' → logprob: -15.500153541564941
    9. '   ' → logprob: -15.750153541564941
    10. ' max' → logprob: -16.250152587890625

Token 371: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006663294625468552
    2. '           ' → logprob: -7.75066614151001
    3. '
' → logprob: -9.125666618347168
    4. '                   ' → logprob: -9.750666618347168
    5. '       ' → logprob: -10.875666618347168
    6. '                
' → logprob: -11.125666618347168
    7. '              ' → logprob: -11.875666618347168
    8. ',' → logprob: -12.000666618347168
    9. '            
' → logprob: -12.625666618347168
    10. '                ' → logprob: -12.625666618347168

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018816311785485595
    2. '           ' → logprob: -8.750187873840332
    3. '                   ' → logprob: -10.750187873840332
    4. '<|end|>' → logprob: -13.000187873840332
    5. '       ' → logprob: -13.500187873840332
    6. ',' → logprob: -13.625187873840332
    7. '                
' → logprob: -14.250187873840332
    8. '
' → logprob: -14.250187873840332
    9. '                       ' → logprob: -14.875187873840332
    10. ' if' → logprob: -15.375187873840332

Token 373: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14303290843963623
    2. ' if' → logprob: -2.143033027648926
    3. 'if' (adapté à ' if') → logprob: -4.143033027648926
    4. '           ' → logprob: -9.393033027648926
    5. '       ' → logprob: -11.768033027648926
    6. '   ' → logprob: -11.893033027648926
    7. '                   ' → logprob: -13.268033027648926
    8. ' ' → logprob: -14.268033027648926
    9. ',' → logprob: -15.768033027648926
    10. '```' → logprob: -15.893033027648926

Token 374: ' local' (ID: 2698)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.31326326727867126
    2. ' local' → logprob: -1.3132632970809937
    3. '	local' → logprob: -14.563262939453125
    4. '(local' → logprob: -14.938262939453125
    5. ' lokal' → logprob: -16.063262939453125
    6. '   ' → logprob: -16.063262939453125
    7. '_local' → logprob: -16.563262939453125
    8. 'max' → logprob: -16.688262939453125
    9. ')local' → logprob: -16.688262939453125
    10. ' ' → logprob: -16.938262939453125

Token 375: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0014444031985476613
    2. 'max' → logprob: -6.626444339752197
    3. '_re' → logprob: -9.626444816589355
    4. 'Max' → logprob: -10.876444816589355
    5. '>' → logprob: -12.001444816589355
    6. 'maxlength' → logprob: -12.251444816589355
    7. '_' → logprob: -12.376444816589355
    8. ' max' → logprob: -12.751444816589355
    9. '(max' → logprob: -13.001444816589355
    10. '[max' → logprob: -13.251444816589355

Token 376: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759404897689819
    2. '>' → logprob: -0.8259404897689819
    3. ' ' → logprob: -14.450940132141113
    4. ' >
' → logprob: -15.825940132141113
    5. ' <=' → logprob: -16.45094108581543
    6. '>
' → logprob: -17.20094108581543
    7. '   ' → logprob: -17.45094108581543
    8. '>end' → logprob: -17.45094108581543
    9. '">' → logprob: -17.57594108581543
    10. ' >

' → logprob: -17.70094108581543

Token 377: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00861456897109747
    2. ' max' → logprob: -4.758614540100098
    3. '           ' → logprob: -16.883615493774414
    4. '	max' → logprob: -17.883615493774414
    5. '
' → logprob: -18.508615493774414
    6. '(max' → logprob: -18.883615493774414
    7. '               ' → logprob: -19.258615493774414
    8. '_max' → logprob: -19.258615493774414
    9. '=max' → logprob: -19.508615493774414
    10. '[max' → logprob: -19.883615493774414

Token 378: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: 0.0
    2. 're' → logprob: -18.625
    3. 'reachable' → logprob: -19.125
    4. 'max' → logprob: -19.5
    5. '_' → logprob: -21.5
    6. '_possible' → logprob: -21.625
    7. 'able' → logprob: -21.75
    8. '_RE' → logprob: -21.875
    9. '_score' → logprob: -22.0
    10. '\' → logprob: -22.25

Token 379: 'achable' (ID: 82461)
  Prédit: 'achable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achable' → logprob: -2.3438327843905427e-05
    2. 'reachable' → logprob: -10.75002384185791
    3. 'actable' → logprob: -14.00002384185791
    4. 'ach' → logprob: -14.12502384185791
    5. 'each' → logprob: -15.37502384185791
    6. 'alable' → logprob: -16.375022888183594
    7. ' reachable' → logprob: -17.000022888183594
    8. 'ailable' → logprob: -18.250022888183594
    9. 'accessible' → logprob: -18.250022888183594
    10. 'a' → logprob: -18.375022888183594

Token 380: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08025756478309631
    2. ':' → logprob: -2.5802576541900635
    3. '                   ' → logprob: -6.705257415771484
    4. '               ' → logprob: -9.205257415771484
    5. '                       ' → logprob: -10.830257415771484
    6. '                           ' → logprob: -11.955257415771484
    7. '           ' → logprob: -12.455257415771484
    8. '):
' → logprob: -12.455257415771484
    9. ' :
' → logprob: -13.330257415771484
    10. ':max' → logprob: -13.455257415771484

Token 381: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012513005640357733
    2. '                       ' → logprob: -7.126251220703125
    3. '               ' → logprob: -8.001251220703125
    4. '                           ' → logprob: -10.126251220703125
    5. ' max' → logprob: -10.376251220703125
    6. '           ' → logprob: -10.626251220703125
    7. '   ' → logprob: -12.376251220703125
    8. 'max' → logprob: -12.376251220703125
    9. '                               ' → logprob: -13.251251220703125
    10. '
' → logprob: -13.251251220703125

Token 382: ' max' (ID: 2999)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.48405522108078003
    2. ' max' → logprob: -1.2340552806854248
    3. 'max' (adapté à ' max') → logprob: -2.609055280685425
    4. '                       ' → logprob: -3.984055280685425
    5. '               ' → logprob: -8.484055519104004
    6. '           ' → logprob: -9.484055519104004
    7. '       ' → logprob: -10.484055519104004
    8. '   ' → logprob: -10.484055519104004
    9. '                           ' → logprob: -11.109055519104004
    10. '(max' → logprob: -11.609055519104004

Token 383: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: 0.0
    2. 'reachable' → logprob: -17.375
    3. '_' → logprob: -17.875
    4. '_possible' → logprob: -19.5
    5. '_access' → logprob: -19.625
    6. '_RE' → logprob: -20.0
    7. '\' → logprob: -20.125
    8. '   ' → logprob: -20.25
    9. '                   ' → logprob: -20.25
    10. '                    
' → logprob: -21.125

Token 384: 'achable' (ID: 82461)
  Prédit: 'achable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achable' → logprob: -0.0003967071825172752
    2. 'reachable' → logprob: -7.875396728515625
    3. 'actable' → logprob: -11.625396728515625
    4. 'ach' → logprob: -12.250396728515625
    5. 'each' → logprob: -13.000396728515625
    6. '_' → logprob: -15.250396728515625
    7. ' reachable' → logprob: -15.875396728515625
    8. 'accessible' → logprob: -16.875396728515625
    9. 'ached' → logprob: -17.250396728515625
    10. 'ievable' → logprob: -17.375396728515625

Token 385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858918860554695
    2. '=' → logprob: -3.0485892295837402
    3. '=max' → logprob: -14.298588752746582
    4. '                    ' → logprob: -14.423588752746582
    5. '                   ' → logprob: -14.923588752746582
    6. ' =
' → logprob: -15.548588752746582
    7. '                       ' → logprob: -16.4235897064209
    8. '                ' → logprob: -16.7985897064209
    9. '                        ' → logprob: -17.4235897064209
    10. ' ' → logprob: -17.7985897064209

Token 386: ' local' (ID: 2698)
  Prédit: ' local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' local' → logprob: -0.575939416885376
    2. 'local' → logprob: -0.825939416885376
    3. '	local' → logprob: -17.950939178466797
    4. '_local' → logprob: -19.075939178466797
    5. ')local' → logprob: -19.325939178466797
    6. '(local' → logprob: -19.450939178466797
    7. ' lokal' → logprob: -19.575939178466797
    8. '                   ' → logprob: -19.575939178466797
    9. '.local' → logprob: -19.825939178466797
    10. 'Local' → logprob: -20.950939178466797

Token 387: '_max' (ID: 13731)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0005351595464162529
    2. '_score' → logprob: -7.750535011291504
    3. '_scores' → logprob: -10.000535011291504
    4. '_' → logprob: -10.625535011291504
    5. 'achable' → logprob: -11.375535011291504
    6. 'reachable' → logprob: -11.625535011291504
    7. '_max' → logprob: -12.250535011291504
    8. 'able' → logprob: -13.625535011291504
    9. '_throw' → logprob: -13.750535011291504
    10. '_possible' → logprob: -13.875535011291504

Token 388: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5367102026939392
    2. '
' → logprob: -0.9117102026939392
    3. '            
' → logprob: -5.411710262298584
    4. '        
' → logprob: -5.661710262298584
    5. '    
' → logprob: -5.911710262298584
    6. '       ' → logprob: -6.661710262298584
    7. 'return' → logprob: -7.036710262298584
    8. ' 
' → logprob: -8.161709785461426
    9. ' return' → logprob: -8.286709785461426
    10. '  
' → logprob: -10.161709785461426

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014739706180989742
    2. '       ' → logprob: -5.014739513397217
    3. '
' → logprob: -5.139739513397217
    4. '            
' → logprob: -7.264739513397217
    5. '        
' → logprob: -7.389739513397217
    6. 'return' → logprob: -7.639739513397217
    7. '    
' → logprob: -8.639739990234375
    8. ' return' → logprob: -9.389739990234375
    9. '          ' → logprob: -11.264739990234375
    10. '               ' → logprob: -11.389739990234375

Token 390: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02313937246799469
    2. '       ' → logprob: -4.023139476776123
    3. '
' → logprob: -5.523139476776123
    4. 'return' (adapté à ' return') → logprob: -7.273139476776123
    5. ' return' → logprob: -8.898138999938965
    6. '        
' → logprob: -10.148138999938965
    7. '            
' → logprob: -10.273138999938965
    8. '    
' → logprob: -10.398138999938965
    9. '   ' → logprob: -10.648138999938965
    10. '               ' → logprob: -11.773138999938965

Token 391: ' Dart' (ID: 85214)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33419111371040344
    2. 'max' → logprob: -1.334191083908081
    3. ' self' → logprob: -4.08419132232666
    4. ' max' → logprob: -5.58419132232666
    5. 'D' → logprob: -9.08419132232666
    6. ' D' → logprob: -12.33419132232666
    7. '(max' → logprob: -15.70919132232666
    8. '   ' → logprob: -16.334190368652344
    9. '(self' → logprob: -17.084190368652344
    10. ' Dart' → logprob: -17.209190368652344

Token 392: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.00043496055877767503
    2. 'Throw' → logprob: -7.750434875488281
    3. 'throw' → logprob: -13.500434875488281
    4. '_score' → logprob: -14.125434875488281
    5. 'score' → logprob: -14.625434875488281
    6. ' Score' → logprob: -15.000434875488281
    7. 'Scores' → logprob: -15.500434875488281
    8. 'D' → logprob: -15.625434875488281
    9. 'Sc' → logprob: -16.00043487548828
    10. 'Strike' → logprob: -16.37543487548828

Token 393: 'Optimizer' (ID: 120293)
  Prédit: 'Optimizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -0.001079610432498157
    2. 'Score' → logprob: -6.876079559326172
    3. 'optimizer' → logprob: -10.501079559326172
    4. '_optimizer' → logprob: -11.376079559326172
    5. 'Optimize' → logprob: -12.876079559326172
    6. 'Optimization' → logprob: -14.251079559326172
    7. ' optimizer' → logprob: -14.376079559326172
    8. '[' → logprob: -14.376079559326172
    9. 'Optim' → logprob: -14.501079559326172
    10. 'Analyzer' → logprob: -15.126079559326172

Token 394: '.Result' (ID: 33367)
  Prédit: '.Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Result' → logprob: -1.3856492842023727e-06
    2. '.' → logprob: -13.875000953674316
    3. '.Results' → logprob: -15.625000953674316
    4. '.Score' → logprob: -16.125001907348633
    5. ' .' → logprob: -16.375001907348633
    6. '   ' → logprob: -18.875001907348633
    7. 'Result' → logprob: -19.500001907348633
    8. '.RESULT' → logprob: -19.875001907348633
    9. '\.' → logprob: -20.750001907348633
    10. '.Res' → logprob: -20.875001907348633

Token 395: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.002476135268807411
    2. '(' → logprob: -6.002476215362549
    3. '(
' → logprob: -15.00247573852539
    4. 'max' → logprob: -17.25247573852539
    5. '(

' → logprob: -17.50247573852539
    6. '(ma' → logprob: -17.50247573852539
    7. '(min' → logprob: -18.25247573852539
    8. ' (' → logprob: -18.50247573852539
    9. '(`' → logprob: -18.62747573852539
    10. '(Max' → logprob: -18.87747573852539

Token 396: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.9361264946837764e-07
    2. 'reachable' → logprob: -16.875
    3. '_score' → logprob: -17.25
    4. 're' → logprob: -17.875
    5. 'Re' → logprob: -18.25
    6. '_RE' → logprob: -20.625
    7. '_' → logprob: -21.0
    8. ')' → logprob: -21.125
    9. '   ' → logprob: -21.25
    10. '(re' → logprob: -21.625

Token 397: 'achable' (ID: 82461)
  Prédit: 'achable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'achable' → logprob: -0.00014251544780563563
    2. 'each' → logprob: -9.000142097473145
    3. 'reachable' → logprob: -11.250142097473145
    4. 'ach' → logprob: -12.250142097473145
    5. 'Each' → logprob: -14.500142097473145
    6. 'o' → logprob: -15.375142097473145
    7. ' reachable' → logprob: -16.00014305114746
    8. 'actable' → logprob: -16.12514305114746
    9. 'ailable' → logprob: -16.25014305114746
    10. 'a' → logprob: -16.37514305114746

Token 398: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. ')
' → logprob: -10.875019073486328
    3. ' )' → logprob: -15.375019073486328
    4. '       ' → logprob: -15.500019073486328
    5. ')return' → logprob: -17.500019073486328
    6. '           ' → logprob: -17.625019073486328
    7. '   ' → logprob: -18.125019073486328
    8. ')`' → logprob: -18.500019073486328
    9. ')}' → logprob: -19.375019073486328
    10. ')

' → logprob: -19.500019073486328

Token 399: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4100877344608307
    2. '<|end|>' → logprob: -1.6600877046585083
    3. 'def' (adapté à ' def') → logprob: -2.035087823867798
    4. '    
' → logprob: -5.160087585449219
    5. '    ' → logprob: -6.035087585449219
    6. ' ' → logprob: -6.410087585449219
    7. ' def' → logprob: -6.535087585449219
    8. '#' → logprob: -6.910087585449219
    9. '  ' → logprob: -7.035087585449219
    10. '       ' → logprob: -7.160087585449219

Token 402: ' __' (ID: 2516)
  Prédit: ' optimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimize' → logprob: -0.13263964653015137
    2. ' __' → logprob: -2.1326396465301514
    3. ' def' → logprob: -6.1326398849487305
    4. ' calculate' → logprob: -6.7576398849487305
    5. ' find' → logprob: -7.5076398849487305
    6. ' compute' → logprob: -7.7576398849487305
    7. ' opt' → logprob: -8.13263988494873
    8. ' maximize' → logprob: -8.25763988494873
    9. 'opt' → logprob: -8.38263988494873
    10. ' get' → logprob: -8.63263988494873

Token 403: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.125
    3. 'i' → logprob: -18.625
    4. '_init' → logprob: -19.0
    5. 'ini' → logprob: -19.5
    6. 'int' → logprob: -20.875
    7. 'in' → logprob: -21.25
    8. 'inite' → logprob: -22.625
    9. 'call' → logprob: -23.0
    10. 'innit' → logprob: -23.875

Token 404: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007366081699728966
    2. '__' → logprob: -7.250736713409424
    3. '__(
' → logprob: -10.625736236572266
    4. '__((' → logprob: -13.625736236572266
    5. '(self' → logprob: -14.750736236572266
    6. '__('' → logprob: -15.375736236572266
    7. '(' → logprob: -15.500736236572266
    8. '__(*' → logprob: -15.625736236572266
    9. '_(' → logprob: -16.500736236572266
    10. '__("' → logprob: -17.250736236572266

Token 405: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013267839094623923
    2. ' self' → logprob: -6.626326560974121
    3. '
' → logprob: -15.251326560974121
    4. '(self' → logprob: -15.751326560974121
    5. ' ' → logprob: -16.126327514648438
    6. '   ' → logprob: -16.376327514648438
    7. ')' → logprob: -16.751327514648438
    8. ',' → logprob: -17.126327514648438
    9. 's' → logprob: -17.251327514648438
    10. '  ' → logprob: -17.376327514648438

Token 406: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043924907222390175
    2. 'self' → logprob: -5.504392623901367
    3. ',self' → logprob: -9.129392623901367
    4. '(self' → logprob: -9.629392623901367
    5. ' self' → logprob: -9.629392623901367
    6. ' ,' → logprob: -9.754392623901367
    7. '   ' → logprob: -12.754392623901367
    8. ',
' → logprob: -12.879392623901367
    9. ')' → logprob: -12.879392623901367
    10. '):' → logprob: -13.129392623901367

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006749047315679491
    2. '   ' → logprob: -7.750674724578857
    3. ' self' → logprob: -8.750675201416016
    4. 'self' → logprob: -9.500675201416016
    5. '<|end|>' → logprob: -12.250675201416016
    6. ' pass' → logprob: -13.625675201416016
    7. '           ' → logprob: -14.125675201416016
    8. '(self' → logprob: -14.750675201416016
    9. ',' → logprob: -14.875675201416016
    10. '	self' → logprob: -15.000675201416016

Token 408: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1277715116739273
    2. ' self' → logprob: -2.5027716159820557
    3. '       ' → logprob: -3.3777716159820557
    4. ' pass' → logprob: -6.127771377563477
    5. 'pass' → logprob: -6.377771377563477
    6. '   ' → logprob: -9.502771377563477
    7. '	self' → logprob: -13.127771377563477
    8. 'class' → logprob: -13.252771377563477
    9. ' ' → logprob: -13.877771377563477
    10. '0' → logprob: -14.002771377563477

Token 409: '.datasets' (ID: 136555)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7455470561981201
    2. '._' → logprob: -0.9955470561981201
    3. ' .' → logprob: -1.9955470561981201
    4. '.parts' → logprob: -4.495547294616699
    5. '_parts' → logprob: -5.495547294616699
    6. '_scores' → logprob: -5.995547294616699
    7. '_' → logprob: -7.120547294616699
    8. ' ' → logprob: -7.870547294616699
    9. '.score' → logprob: -8.7455472946167
    10. '_score' → logprob: -8.8705472946167

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11288044601678848
    2. '=' → logprob: -2.2378804683685303
    3. '=[]' → logprob: -10.11288070678711
    4. '_' → logprob: -11.61288070678711
    5. ' ' → logprob: -12.48788070678711
    6. 's' → logprob: -13.61288070678711
    7. '={}' → logprob: -13.73788070678711
    8. '=None' → logprob: -14.23788070678711
    9. '[]' → logprob: -14.73788070678711
    10. '   ' → logprob: -14.86288070678711

Token 411: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0380522795021534
    2. ' []' → logprob: -3.2880523204803467
    3. '{}' → logprob: -11.788052558898926
    4. '[]
' → logprob: -13.038052558898926
    5. '[' → logprob: -14.538052558898926
    6. ' {}' → logprob: -15.288052558898926
    7. '[]}' → logprob: -15.788052558898926
    8. '[]

' → logprob: -16.28805160522461
    9. ' ' → logprob: -16.78805160522461
    10. ' []
' → logprob: -17.41305160522461

Token 412: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2977900505065918
    2. 'def' → logprob: -1.6727900505065918
    3. '   ' → logprob: -2.672790050506592
    4. '<|end|>' → logprob: -8.04779052734375
    5. '
' → logprob: -8.17279052734375
    6. '    
' → logprob: -9.79779052734375
    7. ' 
' → logprob: -10.17279052734375
    8. ' ' → logprob: -11.04779052734375
    9. '<|end|>' → logprob: -11.04779052734375
    10. '       ' → logprob: -11.54779052734375

Token 414: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019288709154352546
    2. ' def' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.50192928314209
    4. 'de' → logprob: -16.751928329467773
    5. 'd' → logprob: -18.876928329467773
    6. '    
' → logprob: -21.126928329467773
    7. '
' → logprob: -21.251928329467773
    8. ' ' → logprob: -21.251928329467773
    9. '```' → logprob: -21.376928329467773
    10. '       ' → logprob: -22.001928329467773

Token 415: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0005843686521984637
    2. 'add' → logprob: -7.500584602355957
    3. ' append' → logprob: -11.250584602355957
    4. ' load' → logprob: -11.750584602355957
    5. ' def' → logprob: -12.625584602355957
    6. ' process' → logprob: -13.125584602355957
    7. ' run' → logprob: -13.125584602355957
    8. '_add' → logprob: -13.750584602355957
    9. 'append' → logprob: -14.875584602355957
    10. ' set' → logprob: -15.000584602355957

Token 416: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -0.035163745284080505
    2. '_data' → logprob: -3.785163640975952
    3. '(' → logprob: -5.160163879394531
    4. '_' → logprob: -5.410163879394531
    5. '_score' → logprob: -7.285163879394531
    6. '(self' → logprob: -7.535163879394531
    7. '_d' → logprob: -9.035163879394531
    8. '(_' → logprob: -9.285163879394531
    9. '_datas' → logprob: -10.160163879394531
    10. '_item' → logprob: -10.160163879394531

Token 417: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01106644794344902
    2. '(' → logprob: -4.511066436767578
    3. ' (' → logprob: -11.011066436767578
    4. '(
' → logprob: -13.636066436767578
    5. '(s' → logprob: -14.511066436767578
    6. 'self' → logprob: -15.386066436767578
    7. '(se' → logprob: -16.761066436767578
    8. ' self' → logprob: -16.886066436767578
    9. '(sel' → logprob: -17.261066436767578
    10. '   ' → logprob: -18.011066436767578

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020985817536711693
    2. ' ,' → logprob: -8.50020980834961
    3. 'self' → logprob: -12.37520980834961
    4. ',self' → logprob: -13.12520980834961
    5. '(self' → logprob: -16.62520980834961
    6. ',
' → logprob: -17.12520980834961
    7. ',s' → logprob: -17.12520980834961
    8. '   ' → logprob: -18.62520980834961
    9. ',data' → logprob: -18.62520980834961
    10. ',d' → logprob: -19.37520980834961

Token 419: ' n' (ID: 297)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.8301504850387573
    2. ' parts' → logprob: -1.0801504850387573
    3. 'scores' → logprob: -1.7051504850387573
    4. 'parts' → logprob: -3.205150604248047
    5. ' self' → logprob: -7.080150604248047
    6. 'self' → logprob: -7.455150604248047
    7. 'score' → logprob: -7.830150604248047
    8. ' score' → logprob: -8.830150604248047
    9. '   ' → logprob: -9.830150604248047
    10. '(scores' → logprob: -10.580150604248047

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012693996541202068
    2. ' ,' → logprob: -5.137693881988525
    3. '_scores' → logprob: -5.762693881988525
    4. 'um' → logprob: -5.887693881988525
    5. 'umber' → logprob: -7.512693881988525
    6. 'umbers' → logprob: -9.137694358825684
    7. 'ums' → logprob: -10.137694358825684
    8. '   ' → logprob: -10.637694358825684
    9. '_,' → logprob: -10.637694358825684
    10. '_parts' → logprob: -11.012694358825684

Token 421: ' m' (ID: 284)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.6072767972946167
    2. 'limit' → logprob: -1.4822767972946167
    3. ' scores' → logprob: -2.2322769165039062
    4. 'parts' → logprob: -3.1072769165039062
    5. ' limit' → logprob: -3.8572769165039062
    6. 'm' → logprob: -3.9822769165039062
    7. ' parts' → logprob: -4.607276916503906
    8. 'max' → logprob: -5.232276916503906
    9. 'score' → logprob: -5.357276916503906
    10. ' m' → logprob: -5.982276916503906

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4378848391061183e-05
    2. ' ,' → logprob: -11.750014305114746
    3. '):' → logprob: -13.125014305114746
    4. 'scores' → logprob: -13.625014305114746
    5. '_scores' → logprob: -14.000014305114746
    6. ',
' → logprob: -14.000014305114746
    7. ')' → logprob: -14.125014305114746
    8. 's' → logprob: -15.250014305114746
    9. 'score' → logprob: -16.375015258789062
    10. '),' → logprob: -16.500015258789062

Token 423: ' points' (ID: 5571)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.5814962983131409
    2. 'k' → logprob: -1.831496238708496
    3. 'parts' → logprob: -2.581496238708496
    4. 's' → logprob: -3.081496238708496
    5. 'limit' → logprob: -3.206496238708496
    6. 'l' → logprob: -4.081496238708496
    7. 'p' → logprob: -4.331496238708496
    8. 'max' → logprob: -4.331496238708496
    9. 'x' → logprob: -4.581496238708496
    10. 'd' → logprob: -4.581496238708496

Token 424: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014461754821240902
    2. '):' → logprob: -4.264461517333984
    3. '_scores' → logprob: -8.514461517333984
    4. '):
' → logprob: -10.514461517333984
    5. '_points' → logprob: -10.639461517333984
    6. 's' → logprob: -11.639461517333984
    7. '_list' → logprob: -11.764461517333984
    8. ' ,' → logprob: -11.889461517333984
    9. 'scores' → logprob: -12.139461517333984
    10. '_values' → logprob: -12.889461517333984

Token 425: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21356762945652008
    2. '       ' → logprob: -1.7135676145553589
    3. ',' → logprob: -4.838567733764648
    4. '):' → logprob: -5.838567733764648
    5. ':
' → logprob: -7.338567733764648
    6. '):
' → logprob: -7.588567733764648
    7. '   ' → logprob: -10.213567733764648
    8. ' :' → logprob: -10.713567733764648
    9. ')' → logprob: -11.713567733764648
    10. '      ' → logprob: -12.588567733764648

Token 426: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5086166262626648
    2. 'self' (adapté à ' self') → logprob: -1.0086166858673096
    3. '       ' → logprob: -3.3836166858673096
    4. '   ' → logprob: -12.00861644744873
    5. '	self' → logprob: -12.25861644744873
    6. ' if' → logprob: -12.88361644744873
    7. ' ' → logprob: -13.13361644744873
    8. 'dataset' → logprob: -13.50861644744873
    9. ' ' → logprob: -13.75861644744873
    10. ' points' → logprob: -13.75861644744873

Token 427: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.0022777693811804056
    2. '.datas' → logprob: -6.502277851104736
    3. '.points' → logprob: -8.002277374267578
    4. '._' → logprob: -8.627277374267578
    5. '.' → logprob: -9.002277374267578
    6. ' .' → logprob: -9.752277374267578
    7. '.samples' → logprob: -11.377277374267578
    8. '.data' → logprob: -11.627277374267578
    9. '.dat' → logprob: -11.877277374267578
    10. '.parts' → logprob: -12.002277374267578

Token 428: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004311460361350328
    2. '.' → logprob: -7.750431060791016
    3. 'append' → logprob: -15.125431060791016
    4. '.app' → logprob: -17.000431060791016
    5. '.ap' → logprob: -17.750431060791016
    6. '.extend' → logprob: -18.000431060791016
    7. ' .' → logprob: -18.000431060791016
    8. '.push' → logprob: -18.625431060791016
    9. '_append' → logprob: -19.500431060791016
    10. '.Append' → logprob: -19.500431060791016

Token 429: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00018327576981391758
    2. '(' → logprob: -9.25018310546875
    3. '(self' → logprob: -10.00018310546875
    4. '(D' → logprob: -10.12518310546875
    5. '({'' → logprob: -14.00018310546875
    6. '(((' → logprob: -15.12518310546875
    7. '(
' → logprob: -15.25018310546875
    8. '(('' → logprob: -16.37518310546875
    9. '([' → logprob: -16.50018310546875
    10. '({
' → logprob: -16.87518310546875

Token 430: 'self' (ID: 1156)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.014684110297821e-06
    2. 'self' → logprob: -12.250008583068848
    3. ' n' → logprob: -12.875008583068848
    4. 'points' → logprob: -13.750008583068848
    5. 'D' → logprob: -15.500008583068848
    6. '(n' → logprob: -16.375009536743164
    7. '   ' → logprob: -16.375009536743164
    8. '[n' → logprob: -16.500009536743164
    9. '
' → logprob: -17.500009536743164
    10. '       ' → logprob: -17.625009536743164

Token 431: '.Score' (ID: 158180)
  Prédit: '.Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Score' → logprob: -0.1763572245836258
    2. '.D' → logprob: -2.8013572692871094
    3. ',' → logprob: -2.9263572692871094
    4. '.S' → logprob: -3.4263572692871094
    5. '.' → logprob: -5.551357269287109
    6. '.n' → logprob: -6.051357269287109
    7. '.Point' → logprob: -6.176357269287109
    8. '.Max' → logprob: -6.551357269287109
    9. '.parts' → logprob: -6.926357269287109
    10. ' .' → logprob: -7.051357269287109

Token 432: 'Parts' (ID: 35773)
  Prédit: 'Parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parts' → logprob: -1.5048530030981055e-06
    2. 'Points' → logprob: -14.000001907348633
    3. 'parts' → logprob: -15.375001907348633
    4. '_parts' → logprob: -16.125001907348633
    5. ' Parts' → logprob: -16.375001907348633
    6. ' parts' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.750001907348633
    8. 'Part' → logprob: -17.750001907348633
    9. 'P' → logprob: -17.875001907348633
    10. '```' → logprob: -18.625001907348633

Token 433: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.2961512513575144e-05
    2. '(' → logprob: -11.625022888183594
    3. ',' → logprob: -12.125022888183594
    4. ' (' → logprob: -12.625022888183594
    5. '(scores' → logprob: -13.250022888183594
    6. '(parts' → logprob: -13.625022888183594
    7. '(p' → logprob: -14.500022888183594
    8. '([' → logprob: -14.750022888183594
    9. ')(' → logprob: -14.875022888183594
    10. '(point' → logprob: -15.125022888183594

Token 434: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002286926144734025
    2. '),' → logprob: -6.127286911010742
    3. ' ,' → logprob: -9.502286911010742
    4. ',
' → logprob: -11.002286911010742
    5. 'self' → logprob: -12.627286911010742
    6. ',self' → logprob: -12.877286911010742
    7. '       ' → logprob: -13.627286911010742
    8. ',),' → logprob: -13.877286911010742
    9. ')' → logprob: -14.002286911010742
    10. '   ' → logprob: -14.502286911010742

Token 435: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141743123531342
    2. ' self' → logprob: -1.7014174461364746
    3. ' ' → logprob: -13.826416969299316
    4. '   ' → logprob: -14.451416969299316
    5. '(self' → logprob: -14.451416969299316
    6. '           ' → logprob: -15.076416969299316
    7. '       ' → logprob: -15.076416969299316
    8. '         ' → logprob: -15.451416969299316
    9. '    ' → logprob: -15.576416969299316
    10. '  ' → logprob: -15.701416969299316

Token 436: '.Score' (ID: 158180)
  Prédit: '.Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Score' → logprob: -2.927930654550437e-05
    2. '.' → logprob: -10.750029563903809
    3. 'Score' → logprob: -12.000029563903809
    4. ' Score' → logprob: -15.000029563903809
    5. '.S' → logprob: -15.125029563903809
    6. '.Max' → logprob: -15.125029563903809
    7. '   ' → logprob: -15.125029563903809
    8. '.Sc' → logprob: -15.500029563903809
    9. ' .' → logprob: -15.750029563903809
    10. '.D' → logprob: -16.750028610229492

Token 437: 'Limit' (ID: 17176)
  Prédit: 'Limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Limit' → logprob: -4.246537173457909e-06
    2. 'limit' → logprob: -12.750003814697266
    3. 'Limits' → logprob: -13.875003814697266
    4. '_limit' → logprob: -16.125003814697266
    5. 'Parts' → logprob: -16.250003814697266
    6. ' Limit' → logprob: -16.875003814697266
    7. 'Lim' → logprob: -18.500003814697266
    8. 'LIMIT' → logprob: -18.500003814697266
    9. 'Limiter' → logprob: -18.875003814697266
    10. ' limit' → logprob: -18.875003814697266

Token 438: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.3080716346157715e-05
    2. ' (' → logprob: -11.000022888183594
    3. '(' → logprob: -12.125022888183594
    4. 'm' → logprob: -14.625022888183594
    5. '(n' → logprob: -15.750022888183594
    6. '(
' → logprob: -16.125022888183594
    7. '           ' → logprob: -16.500022888183594
    8. '   ' → logprob: -18.125022888183594
    9. '       ' → logprob: -18.125022888183594
    10. '(limit' → logprob: -18.500022888183594

Token 439: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00776622025296092
    2. ',' → logprob: -4.882766246795654
    3. ' ),' → logprob: -9.007765769958496
    4. ' ,' → logprob: -11.257765769958496
    5. ')' → logprob: -11.382765769958496
    6. 'self' → logprob: -11.507765769958496
    7. '),
' → logprob: -13.882765769958496
    8. ',),' → logprob: -14.632765769958496
    9. '   ' → logprob: -14.882765769958496
    10. ' ' → logprob: -15.007765769958496

Token 440: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008614926598966122
    2. ' self' → logprob: -4.758615016937256
    3. '       ' → logprob: -16.508615493774414
    4. '
' → logprob: -16.633615493774414
    5. '(self' → logprob: -16.633615493774414
    6. '   ' → logprob: -17.383615493774414
    7. ' ' → logprob: -17.633615493774414
    8. '	self' → logprob: -17.758615493774414
    9. ' 
' → logprob: -17.883615493774414
    10. '           ' → logprob: -18.008615493774414

Token 441: '.Max' (ID: 30204)
  Prédit: '.Max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Max' → logprob: -4.008129963040119e-06
    2. 'Max' → logprob: -12.750003814697266
    3. '.' → logprob: -13.750003814697266
    4. ' Max' → logprob: -18.250003814697266
    5. '.M' → logprob: -18.375003814697266
    6. '	Max' → logprob: -18.750003814697266
    7. '.Min' → logprob: -18.875003814697266
    8. '.MAX' → logprob: -19.250003814697266
    9. '.Ma' → logprob: -19.250003814697266
    10. '.Maximum' → logprob: -19.500003814697266

Token 442: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.9361264946837764e-07
    2. ' D' → logprob: -15.75
    3. 'd' → logprob: -19.375
    4. ' darts' → logprob: -20.125
    5. ')' → logprob: -20.25
    6. '>D' → logprob: -20.375
    7. '(' → logprob: -20.625
    8. '_D' → logprob: -20.75
    9. '<D' → logprob: -20.75
    10. '   ' → logprob: -20.75

Token 443: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -0.00023095356300473213
    2. 'art' → logprob: -9.12523078918457
    3. 'Arts' → logprob: -9.50023078918457
    4. 'D' → logprob: -10.50023078918457
    5. '   ' → logprob: -11.87523078918457
    6. ' ' → logprob: -12.87523078918457
    7. 'ar' → logprob: -13.50023078918457
    8. 'erts' → logprob: -13.62523078918457
    9. '       ' → logprob: -14.12523078918457
    10. 'artz' → logprob: -14.25023078918457

Token 444: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1041145626222715e-05
    2. '(' → logprob: -11.750011444091797
    3. 'n' → logprob: -12.875011444091797
    4. ' (' → logprob: -15.875011444091797
    5. '((' → logprob: -16.000011444091797
    6. '(
' → logprob: -16.125011444091797
    7. ')(' → logprob: -16.375011444091797
    8. '(D' → logprob: -17.250011444091797
    9. '(N' → logprob: -18.000011444091797
    10. ')' → logprob: -18.125011444091797

Token 445: '4' (ID: 19)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.0484450437361374e-05
    2. ' n' → logprob: -10.125040054321289
    3. '(n' → logprob: -15.875040054321289
    4. '       ' → logprob: -16.37504005432129
    5. '   ' → logprob: -16.75004005432129
    6. '	n' → logprob: -17.12504005432129
    7. '    ' → logprob: -17.25004005432129
    8. '_n' → logprob: -17.37504005432129
    9. '           ' → logprob: -17.87504005432129
    10. '  ' → logprob: -17.87504005432129

Token 446: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.10109143704175949
    2. '),' → logprob: -2.4760913848876953
    3. ',' → logprob: -4.726091384887695
    4. ')' → logprob: -6.226091384887695
    5. '))' → logprob: -7.601091384887695
    6. ' ' → logprob: -8.476091384887695
    7. ',n' → logprob: -8.601091384887695
    8. ')))
' → logprob: -9.726091384887695
    9. '4' → logprob: -10.226091384887695
    10. ')),' → logprob: -10.476091384887695

Token 447: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2398802638053894
    2. '<|end|>' → logprob: -2.489880323410034
    3. ' def' → logprob: -2.864880323410034
    4. '   ' → logprob: -3.239880323410034
    5. '
' → logprob: -4.114880084991455
    6. ' ' → logprob: -4.864880084991455
    7. ' 
' → logprob: -5.614880084991455
    8. '    
' → logprob: -5.739880084991455
    9. '<|end|>' → logprob: -7.614880084991455
    10. '  
' → logprob: -7.739880084991455

Token 449: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1007903590798378
    2. ' def' → logprob: -2.35079026222229
    3. '   ' → logprob: -7.475790500640869
    4. ' 
' → logprob: -12.725790023803711
    5. '    
' → logprob: -12.850790023803711
    6. ' ' → logprob: -12.975790023803711
    7. '```' → logprob: -12.975790023803711
    8. '	def' → logprob: -13.100790023803711
    9. '
' → logprob: -13.725790023803711
    10. 'de' → logprob: -13.850790023803711

Token 450: ' run' (ID: 2461)
  Prédit: ' optimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimize' → logprob: -1.152193546295166
    2. ' run' → logprob: -1.652193546295166
    3. ' solve' → logprob: -1.777193546295166
    4. 'opt' → logprob: -2.027193546295166
    5. ' process' → logprob: -2.902193546295166
    6. 'solve' → logprob: -2.902193546295166
    7. ' compute' → logprob: -3.027193546295166
    8. 'run' → logprob: -4.277193546295166
    9. 'compute' → logprob: -4.652193546295166
    10. 'process' → logprob: -5.027193546295166

Token 451: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032335598953068256
    2. '(' → logprob: -5.753233432769775
    3. 'self' → logprob: -10.253233909606934
    4. '(
' → logprob: -11.128233909606934
    5. '   ' → logprob: -13.628233909606934
    6. '()' → logprob: -13.878233909606934
    7. ' (' → logprob: -13.878233909606934
    8. '(s' → logprob: -14.128233909606934
    9. '(Self' → logprob: -14.878233909606934
    10. 'def' → logprob: -15.003233909606934

Token 452: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021974189206957817
    2. '):
' → logprob: -4.271974086761475
    3. ',' → logprob: -5.271974086761475
    4. 'self' → logprob: -6.021974086761475
    5. '):
' → logprob: -9.021974563598633
    6. '(self' → logprob: -10.146974563598633
    7. ')' → logprob: -10.521974563598633
    8. '():' → logprob: -11.646974563598633
    9. '_' → logprob: -12.146974563598633
    10. '):

' → logprob: -12.271974563598633

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003278368094470352
    2. ' for' → logprob: -8.500328063964844
    3. 'for' → logprob: -9.500328063964844
    4. '
' → logprob: -11.625328063964844
    5. '   ' → logprob: -12.125328063964844
    6. '```' → logprob: -12.125328063964844
    7. '(' → logprob: -12.375328063964844
    8. ':' → logprob: -12.750328063964844
    9. 'result' → logprob: -13.000328063964844
    10. 'self' → logprob: -13.000328063964844

Token 454: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.17336729168891907
    2. ' results' → logprob: -1.9233672618865967
    3. '       ' → logprob: -4.673367500305176
    4. 'for' → logprob: -6.423367500305176
    5. 'result' → logprob: -6.548367500305176
    6. ' for' → logprob: -7.548367500305176
    7. ' result' → logprob: -9.673367500305176
    8. 'outputs' → logprob: -9.798367500305176
    9. 'output' → logprob: -12.173367500305176
    10. '   ' → logprob: -12.923367500305176

Token 455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02633083611726761
    2. '=' → logprob: -3.6513309478759766
    3. '=[]' → logprob: -10.776330947875977
    4. '_' → logprob: -12.901330947875977
    5. ' ' → logprob: -13.026330947875977
    6. '[]' → logprob: -13.526330947875977
    7. '=[]
' → logprob: -13.901330947875977
    8. '   ' → logprob: -14.526330947875977
    9. '	' → logprob: -14.776330947875977
    10. 's' → logprob: -15.276330947875977

Token 456: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02013901062309742
    2. ' []' → logprob: -4.020139217376709
    3. '[]
' → logprob: -6.270139217376709
    4. ' []
' → logprob: -9.27013874053955
    5. '[' → logprob: -14.14513874053955
    6. '   ' → logprob: -16.520139694213867
    7. '[]

' → logprob: -16.520139694213867
    8. ' ' → logprob: -18.020139694213867
    9. ' [' → logprob: -18.395139694213867
    10. ' []
' → logprob: -18.520139694213867

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024634724482893944
    2. ' for' → logprob: -4.024634838104248
    3. '<|end|>' → logprob: -6.274634838104248
    4. '   ' → logprob: -6.774634838104248
    5. '        
' → logprob: -7.024634838104248
    6. 'for' → logprob: -7.399634838104248
    7. '
' → logprob: -7.524634838104248
    8. '	for' → logprob: -7.524634838104248
    9. '	' → logprob: -8.39963436126709
    10. '<|end|>' → logprob: -9.27463436126709

Token 458: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013291679788380861
    2. ' for' → logprob: -6.751328945159912
    3. '       ' → logprob: -8.75132942199707
    4. '	for' → logprob: -14.37632942199707
    5. '   ' → logprob: -16.50132942199707
    6. '```' → logprob: -18.12632942199707
    7. '           ' → logprob: -18.37632942199707
    8. '	' → logprob: -20.25132942199707
    9. '
' → logprob: -20.62632942199707
    10. ' ' → logprob: -20.87632942199707

Token 459: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.5994672775268555
    2. 'parts' → logprob: -0.8494672775268555
    3. '(parts' → logprob: -4.0994672775268555
    4. 'self' → logprob: -6.3494672775268555
    5. ' self' → logprob: -6.5994672775268555
    6. ' (' → logprob: -6.5994672775268555
    7. 'score' → logprob: -7.5994672775268555
    8. '   ' → logprob: -7.5994672775268555
    9. 'scores' → logprob: -7.9744672775268555
    10. ' scores' → logprob: -8.599467277526855

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. ' ,' → logprob: -9.750068664550781
    3. ' in' → logprob: -11.875068664550781
    4. ',self' → logprob: -13.500068664550781
    5. ',
' → logprob: -14.000068664550781
    6. 'self' → logprob: -15.000068664550781
    7. ',m' → logprob: -15.250068664550781
    8. 'in' → logprob: -15.500068664550781
    9. ',n' → logprob: -16.25006866455078
    10. '       ' → logprob: -16.50006866455078

Token 461: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.012514949776232243
    2. ' limit' → logprob: -4.387515068054199
    3. 'lim' → logprob: -12.6375150680542
    4. ' ' → logprob: -14.7625150680542
    5. '   ' → logprob: -14.7625150680542
    6. 'limits' → logprob: -15.1375150680542
    7. '    ' → logprob: -15.3875150680542
    8. '(limit' → logprob: -15.7625150680542
    9. '  ' → logprob: -16.012514114379883
    10. '_limit' → logprob: -16.137514114379883

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.250004768371582
    3. '_,' → logprob: -17.1250057220459
    4. '‌,' → logprob: -17.7500057220459
    5. ',
' → logprob: -18.0000057220459
    6. ',_' → logprob: -18.2500057220459
    7. ' in' → logprob: -18.6250057220459
    8. 'in' → logprob: -19.2500057220459
    9. ',m' → logprob: -19.8750057220459
    10. ',

' → logprob: -20.0000057220459

Token 463: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.012511059641838074
    2. ' max' → logprob: -4.387511253356934
    3. '_max' → logprob: -14.637511253356934
    4. '       ' → logprob: -14.887511253356934
    5. 'md' → logprob: -16.137510299682617
    6. 'self' → logprob: -16.262510299682617
    7. 'd' → logprob: -16.762510299682617
    8. '	max' → logprob: -17.137510299682617
    9. ' ' → logprob: -17.262510299682617
    10. '           ' → logprob: -17.262510299682617

Token 464: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.3676733690081164e-05
    2. 'D' → logprob: -11.25002384185791
    3. '_' → logprob: -11.62502384185791
    4. 'd' → logprob: -13.37502384185791
    5. '_D' → logprob: -15.87502384185791
    6. 's' → logprob: -18.500022888183594
    7. '\' → logprob: -18.625022888183594
    8. ' darts' → logprob: -18.750022888183594
    9. '_scores' → logprob: -19.125022888183594
    10. '_score' → logprob: -19.375022888183594

Token 465: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -5.5577775128767826e-06
    2. 'art' → logprob: -12.875005722045898
    3. 'a' → logprob: -14.375005722045898
    4. ' arts' → logprob: -14.500005722045898
    5. 'Arts' → logprob: -15.250005722045898
    6. '[' → logprob: -15.500005722045898
    7. ' ' → logprob: -15.750005722045898
    8. '```' → logprob: -16.0000057220459
    9. 'ar' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.2500057220459

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012519540265202522
    2. 'in' → logprob: -4.387519359588623
    3. '	in' → logprob: -12.137519836425781
    4. '        ' → logprob: -14.012519836425781
    5. 'In' → logprob: -14.512519836425781
    6. '
' → logprob: -14.512519836425781
    7. ' ' → logprob: -14.637519836425781
    8. '       ' → logprob: -14.637519836425781
    9. '_in' → logprob: -15.387519836425781
    10. '   ' → logprob: -15.512519836425781

Token 467: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005237429868429899
    2. ' self' → logprob: -5.255237579345703
    3. '       ' → logprob: -13.005237579345703
    4. '   ' → logprob: -14.380237579345703
    5. '(self' → logprob: -15.005237579345703
    6. '           ' → logprob: -15.130237579345703
    7. '
' → logprob: -16.380237579345703
    8. '[self' → logprob: -16.755237579345703
    9. '    ' → logprob: -17.130237579345703
    10. '	self' → logprob: -18.005237579345703

Token 468: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -5.32392441527918e-05
    2. ' .' → logprob: -10.125053405761719
    3. 'datasets' → logprob: -12.125053405761719
    4. '.datas' → logprob: -13.125053405761719
    5. '.parts' → logprob: -13.125053405761719
    6. '.dataset' → logprob: -13.250053405761719
    7. '.' → logprob: -14.125053405761719
    8. 'self' → logprob: -15.000053405761719
    9. '.dat' → logprob: -15.000053405761719
    10. '   ' → logprob: -15.875053405761719

Token 469: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16036009788513184
    2. ':
' → logprob: -1.9103600978851318
    3. '           ' → logprob: -9.410360336303711
    4. '):
' → logprob: -10.410360336303711
    5. ',' → logprob: -11.660360336303711
    6. ':
' → logprob: -11.910360336303711
    7. ':

' → logprob: -13.160360336303711
    8. '):' → logprob: -13.285360336303711
    9. '():
' → logprob: -13.660360336303711
    10. '       ' → logprob: -13.910360336303711

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.755678961984813e-05
    2. '
' → logprob: -10.375077247619629
    3. 'result' → logprob: -11.875077247619629
    4. ':
' → logprob: -12.375077247619629
    5. '            
' → logprob: -12.375077247619629
    6. '          ' → logprob: -12.375077247619629
    7. ',' → logprob: -12.375077247619629
    8. '```' → logprob: -12.625077247619629
    9. 'results' → logprob: -12.875077247619629
    10. '            ' → logprob: -13.125077247619629

Token 471: ' simulation' (ID: 30937)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9712229371070862
    2. 'simulation' (adapté à ' simulation') → logprob: -1.4712228775024414
    3. 'sim' → logprob: -1.8462228775024414
    4. ' simulation' → logprob: -1.8462228775024414
    5. ' sim' → logprob: -2.9712228775024414
    6. ' simulator' → logprob: -4.096222877502441
    7. 'solver' → logprob: -5.096222877502441
    8. ' solver' → logprob: -7.096222877502441
    9. '       ' → logprob: -7.846222877502441
    10. 'solution' → logprob: -8.221222877502441

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042064756155014
    2. '=' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.163042068481445
    4. '   ' → logprob: -15.913042068481445
    5. '    ' → logprob: -16.538042068481445
    6. ' =
' → logprob: -17.038042068481445
    7. '.' → logprob: -17.413042068481445
    8. '        ' → logprob: -17.663042068481445
    9. '  ' → logprob: -18.163042068481445
    10. '_' → logprob: -18.413042068481445

Token 473: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1611744612455368
    2. ' self' → logprob: -1.9111744165420532
    3. 'D' → logprob: -7.036174297332764
    4. '           ' → logprob: -9.786174774169922
    5. ' D' → logprob: -11.911174774169922
    6. ' Dart' → logprob: -12.161174774169922
    7. '(self' → logprob: -14.411174774169922
    8. '       ' → logprob: -14.911174774169922
    9. 'Self' → logprob: -15.036174774169922
    10. '               ' → logprob: -15.161174774169922

Token 474: '.D' (ID: 1696)
  Prédit: '.D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.D' → logprob: -5.633853652398102e-05
    2. 'D' → logprob: -10.125056266784668
    3. '.' → logprob: -12.500056266784668
    4. '       ' → logprob: -12.625056266784668
    5. 'self' → logprob: -12.625056266784668
    6. '   ' → logprob: -12.750056266784668
    7. '.Score' → logprob: -13.500056266784668
    8. '.S' → logprob: -14.750056266784668
    9. '.Dot' → logprob: -15.000056266784668
    10. ' .' → logprob: -15.250056266784668

Token 475: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -3.128163257315464e-07
    2. 'арт' → logprob: -16.0
    3. 'arts' → logprob: -16.875
    4. '
' → logprob: -17.0
    5. 'a' → logprob: -17.0
    6. 'Art' → logprob: -17.625
    7. '

' → logprob: -17.875
    8. 'ert' → logprob: -18.25
    9. '   ' → logprob: -18.75
    10. 'ash' → logprob: -19.0

Token 476: 'Throw' (ID: 20546)
  Prédit: 'Throw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Throw' → logprob: 0.0
    2. '_throw' → logprob: -17.375
    3. ' Throw' → logprob: -17.5
    4. 'throw' → logprob: -18.75
    5. 'Throws' → logprob: -19.625
    6. '.Throw' → logprob: -19.875
    7. ' throw' → logprob: -20.75
    8. '_THROW' → logprob: -21.125
    9. 'Thrown' → logprob: -21.375
    10. '```' → logprob: -21.75

Token 477: 'Simulation' (ID: 71306)
  Prédit: 'Simulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulation' → logprob: -7.107425062713446e-06
    2. 'imulation' → logprob: -12.125006675720215
    3. 'simulation' → logprob: -14.125006675720215
    4. 'Sim' → logprob: -14.375006675720215
    5. ' simulation' → logprob: -16.37500762939453
    6. 'ulation' → logprob: -16.62500762939453
    7. ' Simulation' → logprob: -18.25000762939453
    8. 'Score' → logprob: -18.75000762939453
    9. 'Simulator' → logprob: -18.75000762939453
    10. '   ' → logprob: -18.87500762939453

Token 478: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -4.320199877838604e-07
    2. '(points' → logprob: -15.75
    3. '(part' → logprob: -15.75
    4. '(' → logprob: -17.75
    5. 'parts' → logprob: -18.25
    6. '           ' → logprob: -19.375
    7. ' (' → logprob: -19.625
    8. '(
' → logprob: -19.875
    9. ' parts' → logprob: -20.0
    10. '       ' → logprob: -20.375

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8087270038668066e-05
    2. ' ,' → logprob: -10.500027656555176
    3. '           ' → logprob: -15.375027656555176
    4. ',
' → logprob: -16.125028610229492
    5. '       ' → logprob: -16.625028610229492
    6. 'limit' → logprob: -16.875028610229492
    7. '   ' → logprob: -18.250028610229492
    8. ' limit' → logprob: -18.375028610229492
    9. '(limit' → logprob: -18.375028610229492
    10. '```' → logprob: -18.750028610229492

Token 480: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.03804493322968483
    2. ' limit' → logprob: -3.2880449295043945
    3. '           ' → logprob: -12.788044929504395
    4. '(limit' → logprob: -15.163044929504395
    5. '            ' → logprob: -15.663044929504395
    6. 'lim' → logprob: -16.53804588317871
    7. '        ' → logprob: -16.91304588317871
    8. '.limit' → logprob: -16.91304588317871
    9. ' ' → logprob: -17.16304588317871
    10. '   ' → logprob: -17.28804588317871

Token 481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.50000286102295
    3. ',max' → logprob: -13.75000286102295
    4. 'max' → logprob: -18.125001907348633
    5. ',
' → logprob: -18.750001907348633
    6. '           ' → logprob: -18.875001907348633
    7. '   ' → logprob: -20.250001907348633
    8. 's' → logprob: -20.875001907348633
    9. '```' → logprob: -20.875001907348633
    10. ' max' → logprob: -21.125001907348633

Token 482: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4740770161151886
    2. ' max' → logprob: -0.9740769863128662
    3. '(max' → logprob: -19.349077224731445
    4. '	max' → logprob: -19.724077224731445
    5. '[max' → logprob: -20.224077224731445
    6. ' ' → logprob: -20.849077224731445
    7. 'self' → logprob: -20.974077224731445
    8. '_max' → logprob: -21.099077224731445
    9. ',max' → logprob: -21.349077224731445
    10. '.max' → logprob: -22.224077224731445

Token 483: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0009175319573841989
    2. 'd' → logprob: -7.000917434692383
    3. 'D' → logprob: -12.250917434692383
    4. ' darts' → logprob: -15.125917434692383
    5. '       ' → logprob: -15.750917434692383
    6. '   ' → logprob: -15.750917434692383
    7. 's' → logprob: -16.000917434692383
    8. '-d' → logprob: -16.125917434692383
    9. '_' → logprob: -16.250917434692383
    10. ',' → logprob: -16.375917434692383

Token 484: 'arts' (ID: 8661)
  Prédit: 'arts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arts' → logprob: -1.580929347255733e-05
    2. 'art' → logprob: -11.750016212463379
    3. 'a' → logprob: -13.000016212463379
    4. 'r' → logprob: -14.250016212463379
    5. '```' → logprob: -14.625016212463379
    6. 'Arts' → logprob: -14.750016212463379
    7. 'ar' → logprob: -15.000016212463379
    8. ' ' → logprob: -15.000016212463379
    9. 's' → logprob: -15.125016212463379
    10. '[' → logprob: -15.250016212463379

Token 485: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47490769624710083
    2. ')' → logprob: -0.9749076962471008
    3. '           ' → logprob: -7.474907875061035
    4. ').' → logprob: -8.599907875061035
    5. ')
' → logprob: -9.974907875061035
    6. '       ' → logprob: -10.849907875061035
    7. ')

' → logprob: -12.224907875061035
    8. '               ' → logprob: -12.474907875061035
    9. '          ' → logprob: -13.974907875061035
    10. ' )
' → logprob: -14.224907875061035

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0751241073012352
    2. 'results' → logprob: -2.7001240253448486
    3. ' results' → logprob: -5.575124263763428
    4. '
' → logprob: -6.700124263763428
    5. 'result' → logprob: -10.07512378692627
    6. '(results' → logprob: -10.20012378692627
    7. '	results' → logprob: -10.82512378692627
    8. '       ' → logprob: -11.70012378692627
    9. '
' → logprob: -11.70012378692627
    10. '.results' → logprob: -11.82512378692627

Token 487: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.41745251417160034
    2. 'result' → logprob: -1.4174525737762451
    3. '           ' → logprob: -2.917452573776245
    4. ' results' → logprob: -3.417452573776245
    5. ' result' → logprob: -4.417452335357666
    6. '       ' → logprob: -12.292452812194824
    7. 'res' → logprob: -12.792452812194824
    8. '	results' → logprob: -12.917452812194824
    9. '   ' → logprob: -13.667452812194824
    10. '               ' → logprob: -14.542452812194824

Token 488: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001173917087726295
    2. '.' → logprob: -6.751173973083496
    3. '.extend' → logprob: -12.626173973083496
    4. '.app' → logprob: -15.376173973083496
    5. 'append' → logprob: -16.37617301940918
    6. '.push' → logprob: -16.62617301940918
    7. '.ap' → logprob: -16.62617301940918
    8. '.Append' → logprob: -17.62617301940918
    9. ' .' → logprob: -17.87617301940918
    10. '_append' → logprob: -18.00117301940918

Token 489: '(sim' (ID: 95789)
  Prédit: '(sim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sim' → logprob: -7.040457421680912e-05
    2. 'simulation' → logprob: -9.750070571899414
    3. '(' → logprob: -11.500070571899414
    4. ' simulation' → logprob: -13.500070571899414
    5. ' (' → logprob: -15.125070571899414
    6. '(
' → logprob: -16.250070571899414
    7. 'sim' → logprob: -17.750070571899414
    8. '(solution' → logprob: -19.500070571899414
    9. '(

' → logprob: -19.625070571899414
    10. '(self' → logprob: -19.750070571899414

Token 490: 'ulation' (ID: 4672)
  Prédit: 'ulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulation' → logprob: -0.00020592445798683912
    2. 'ation' → logprob: -9.625205993652344
    3. 'ilation' → logprob: -10.125205993652344
    4. 'utation' → logprob: -10.250205993652344
    5. 'lation' → logprob: -10.500205993652344
    6. 'uation' → logprob: -11.500205993652344
    7. 'ulate' → logprob: -11.500205993652344
    8. 'ULATION' → logprob: -12.000205993652344
    9. 'ulator' → logprob: -12.875205993652344
    10. 'imation' → logprob: -13.500205993652344

Token 491: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -11.50001049041748
    3. '.calculate' → logprob: -17.000009536743164
    4. ').' → logprob: -17.250009536743164
    5. ' .' → logprob: -17.250009536743164
    6. '.execute' → logprob: -17.875009536743164
    7. '.perform' → logprob: -18.625009536743164
    8. '.run' → logprob: -18.875009536743164
    9. '.evaluate' → logprob: -19.000009536743164
    10. '.compile' → logprob: -20.250009536743164

Token 492: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006875806488096714
    2. '()' → logprob: -5.006875991821289
    3. '())
' → logprob: -8.756875991821289
    4. '()
' → logprob: -13.131875991821289
    5. '())

' → logprob: -14.381875991821289
    6. ')' → logprob: -15.256875991821289
    7. ' ())' → logprob: -16.00687599182129
    8. '();)' → logprob: -16.25687599182129
    9. '()]' → logprob: -17.25687599182129
    10. '())
' → logprob: -17.25687599182129

Token 493: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03098997473716736
    2. '       ' → logprob: -3.5309898853302
    3. '        
' → logprob: -7.655990123748779
    4. 'return' → logprob: -8.030989646911621
    5. '
' → logprob: -8.405989646911621
    6. '    
' → logprob: -9.655989646911621
    7. '<|end|>' → logprob: -9.655989646911621
    8. ' return' → logprob: -10.655989646911621
    9. '  
' → logprob: -11.030989646911621
    10. '```' → logprob: -11.405989646911621

Token 494: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007560486905276775
    2. '       ' → logprob: -5.0075602531433105
    3. ' return' → logprob: -7.2575602531433105
    4. '	return' → logprob: -9.257560729980469
    5. '   ' → logprob: -10.132560729980469
    6. '	' → logprob: -12.882560729980469
    7. '
' → logprob: -13.632560729980469
    8. '        
' → logprob: -15.257560729980469
    9. ':return' → logprob: -15.882560729980469
    10. 'eturn' → logprob: -16.25756072998047

Token 495: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.029750484973192215
    2. ' results' → logprob: -3.5297505855560303
    3. '(results' → logprob: -18.52975082397461
    4. '	results' → logprob: -19.02975082397461
    5. '.results' → logprob: -22.52975082397461
    6. '[' → logprob: -22.77975082397461
    7. 'Results' → logprob: -23.40475082397461
    8. '_results' → logprob: -24.77975082397461
    9. ' [' → logprob: -24.90475082397461
    10. 'result' → logprob: -25.40475082397461

Token 496: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48350057005882263
    2. '<|end|>' → logprob: -0.983500599861145
    3. '[' → logprob: -5.7335004806518555
    4. '```' → logprob: -6.1085004806518555
    5. '.' → logprob: -6.8585004806518555
    6. 'd' → logprob: -7.3585004806518555
    7. ')' → logprob: -7.7335004806518555
    8. '<|end|>' → logprob: -7.7335004806518555
    9. '
' → logprob: -7.9835004806518555
    10. ' ' → logprob: -8.358500480651855

Token 498: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.001267016981728375
    2. ' test' → logprob: -7.126266956329346
    3. ' optimize' → logprob: -8.251267433166504
    4. ' solve' → logprob: -9.126267433166504
    5. ' run' → logprob: -9.501267433166504
    6. ' example' → logprob: -11.626267433166504
    7. ' process' → logprob: -12.626267433166504
    8. ' solution' → logprob: -13.251267433166504
    9. 'main' → logprob: -14.001267433166504
    10. ' evaluate' → logprob: -14.376267433166504

Token 499: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.6286106983898208e-05
    2. '():
' → logprob: -11.750016212463379
    3. ' ():' → logprob: -11.750016212463379
    4. '()' → logprob: -15.125016212463379
    5. '_' → logprob: -17.250017166137695
    6. '():
' → logprob: -17.500017166137695
    7. '(' → logprob: -17.500017166137695
    8. ':' → logprob: -17.875017166137695
    9. '().' → logprob: -18.625017166137695
    10. '(":' → logprob: -18.875017166137695

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3221770226955414
    2. ' optimizer' → logprob: -1.3221770524978638
    3. 'optimizer' → logprob: -5.072176933288574
    4. 'import' → logprob: -6.947176933288574
    5. ' import' → logprob: -6.947176933288574
    6. ' d' → logprob: -8.322176933288574
    7. 'def' → logprob: -9.697176933288574
    8. ' opt' → logprob: -9.822176933288574
    9. 'opt' → logprob: -9.822176933288574
    10. ' def' → logprob: -10.072176933288574

Token 501: ' import' (ID: 1588)
  Prédit: ' optimizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimizer' → logprob: -0.37504905462265015
    2. '   ' → logprob: -1.625049114227295
    3. ' import' → logprob: -2.875049114227295
    4. ' d' → logprob: -3.750049114227295
    5. 'optimizer' → logprob: -4.125049114227295
    6. 'import' (adapté à ' import') → logprob: -4.250049114227295
    7. 'd' → logprob: -6.500049114227295
    8. ' dart' → logprob: -6.625049114227295
    9. 'opt' → logprob: -8.250048637390137
    10. ' opt' → logprob: -8.250048637390137

Token 502: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12692873179912567
    2. 'sys' → logprob: -2.1269288063049316
    3. '=sys' → logprob: -14.626928329467773
    4. '	sys' → logprob: -16.376928329467773
    5. '(sys' → logprob: -17.126928329467773
    6. '_sys' → logprob: -19.126928329467773
    7. '```' → logprob: -19.626928329467773
    8. '.sys' → logprob: -20.126928329467773
    9. ' ' → logprob: -20.251928329467773
    10. '_' → logprob: -22.126928329467773

Token 503: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13935323059558868
    2. '
' → logprob: -2.5143532752990723
    3. '    
' → logprob: -3.2643532752990723
    4. 'input' → logprob: -5.014353275299072
    5. ' input' → logprob: -6.514353275299072
    6. 'for' → logprob: -7.764353275299072
    7. ' lines' → logprob: -8.014352798461914
    8. 'data' → logprob: -8.139352798461914
    9. ' for' → logprob: -8.264352798461914
    10. 'import' → logprob: -8.764352798461914

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012057077838107944
    2. '    
' → logprob: -7.626205921173096
    3. 'input' → logprob: -8.251205444335938
    4. ' input' → logprob: -8.626205444335938
    5. 'for' → logprob: -9.376205444335938
    6. ' for' → logprob: -9.501205444335938
    7. ' lines' → logprob: -9.876205444335938
    8. '
' → logprob: -10.751205444335938
    9. ' readline' → logprob: -11.251205444335938
    10. 'data' → logprob: -11.751205444335938

Token 505: ' optimizer' (ID: 56610)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6629113554954529
    2. '   ' → logprob: -1.1629114151000977
    3. 'input' → logprob: -2.5379114151000977
    4. ' lines' → logprob: -2.7879114151000977
    5. ' for' → logprob: -4.037911415100098
    6. 'for' → logprob: -5.162911415100098
    7. ' data' → logprob: -5.662911415100098
    8. 'data' → logprob: -6.037911415100098
    9. 'lines' → logprob: -7.162911415100098
    10. ' readline' → logprob: -7.412911415100098

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325025200843811
    2. '=' → logprob: -3.7732503414154053
    3. '.' → logprob: -13.023250579833984
    4. '   ' → logprob: -13.898250579833984
    5. '_' → logprob: -14.398250579833984
    6. ' ' → logprob: -15.273250579833984
    7. '  ' → logprob: -15.648250579833984
    8. ' =
' → logprob: -16.023250579833984
    9. '.=' → logprob: -16.023250579833984
    10. '	' → logprob: -16.148250579833984

Token 507: ' Dart' (ID: 85214)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.10020720958709717
    2. ' Dart' → logprob: -2.3502073287963867
    3. ' D' → logprob: -15.100207328796387
    4. '	D' → logprob: -15.475207328796387
    5. ' ' → logprob: -17.22520637512207
    6. ' ' → logprob: -18.10020637512207
    7. '_D' → logprob: -18.22520637512207
    8. 'dart' → logprob: -18.47520637512207
    9. ' Dartmouth' → logprob: -18.85020637512207
    10. '   ' → logprob: -19.10020637512207

Token 508: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: 0.0
    2. 'score' → logprob: -17.125
    3. ' Score' → logprob: -18.0
    4. 'Optimizer' → logprob: -18.375
    5. '_score' → logprob: -19.625
    6. 'Scores' → logprob: -22.0
    7. '.Score' → logprob: -22.0
    8. '   ' → logprob: -22.375
    9. 'optimizer' → logprob: -22.375
    10. 'Sc' → logprob: -22.625

Token 509: 'Optimizer' (ID: 120293)
  Prédit: 'Optimizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -8.73314929776825e-05
    2. 'optimizer' → logprob: -9.50008773803711
    3. ' optimizer' → logprob: -11.87508773803711
    4. '_optimizer' → logprob: -12.62508773803711
    5. 'Score' → logprob: -13.12508773803711
    6. '   ' → logprob: -16.87508773803711
    7. '.optimizer' → logprob: -17.25008773803711
    8. 'D' → logprob: -18.00008773803711
    9. 'Optimize' → logprob: -18.12508773803711
    10. '       ' → logprob: -18.25008773803711

Token 510: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2426958531141281
    2. '   ' → logprob: -1.7426958084106445
    3. 'for' → logprob: -3.7426958084106445
    4. '    
' → logprob: -4.3676958084106445
    5. ' for' → logprob: -6.2426958084106445
    6. '<|end|>' → logprob: -6.8676958084106445
    7. '	
' → logprob: -7.9926958084106445
    8. '	for' → logprob: -8.742695808410645
    9. ' 
' → logprob: -9.242695808410645
    10. '
' → logprob: -9.492695808410645

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006047654896974564
    2. ' for' → logprob: -5.75604772567749
    3. 'for' → logprob: -5.88104772567749
    4. '    
' → logprob: -9.756047248840332
    5. '
' → logprob: -12.006047248840332
    6. ' line' → logprob: -13.006047248840332
    7. ' lines' → logprob: -13.131047248840332
    8. 'n' → logprob: -13.631047248840332
    9. 'input' → logprob: -13.756047248840332
    10. ' input' → logprob: -14.631047248840332

Token 512: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0525219552218914
    2. 'lines' → logprob: -3.6775219440460205
    3. '   ' → logprob: -3.9275219440460205
    4. ' for' → logprob: -5.6775221824646
    5. 'n' → logprob: -6.8025221824646
    6. ' lines' → logprob: -7.4275221824646
    7. 'input' → logprob: -7.8025221824646
    8. 'data' → logprob: -7.8025221824646
    9. 'line' → logprob: -9.302521705627441
    10. 'while' (adapté à ' while') → logprob: -9.552521705627441

Token 513: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.16181743144989014
    2. ' True' → logprob: -1.9118174314498901
    3. '(True' → logprob: -6.53681755065918
    4. 'line' → logprob: -9.16181755065918
    5. ' line' → logprob: -10.78681755065918
    6. '   ' → logprob: -12.03681755065918
    7. '1' → logprob: -12.91181755065918
    8. '(' → logprob: -12.91181755065918
    9. 'true' → logprob: -13.28681755065918
    10. '
' → logprob: -13.28681755065918

Token 514: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02998211607336998
    2. ':
' → logprob: -3.529982089996338
    3. '   ' → logprob: -9.279982566833496
    4. '       ' → logprob: -9.529982566833496
    5. ',' → logprob: -10.404982566833496
    6. '():' → logprob: -11.654982566833496
    7. '():
' → logprob: -12.279982566833496
    8. '):
' → logprob: -12.404982566833496
    9. ' and' → logprob: -12.529982566833496
    10. ' :' → logprob: -12.654982566833496

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07128053158521652
    2. '   ' → logprob: -2.8212804794311523
    3. ' line' → logprob: -4.821280479431152
    4. 'line' → logprob: -6.821280479431152
    5. ' try' → logprob: -10.071280479431152
    6. 'try' → logprob: -10.321280479431152
    7. '    ' → logprob: -11.071280479431152
    8. '	line' → logprob: -11.821280479431152
    9. '           ' → logprob: -12.571280479431152
    10. ' readline' → logprob: -12.696280479431152

Token 516: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.31958693265914917
    2. ' line' → logprob: -1.319586992263794
    3. '   ' → logprob: -5.069586753845215
    4. '	line' → logprob: -10.944586753845215
    5. '           ' → logprob: -13.569586753845215
    6. 'try' → logprob: -14.819586753845215
    7. '(line' → logprob: -15.319586753845215
    8. '       ' → logprob: -15.444586753845215
    9. ' try' → logprob: -15.944586753845215
    10. 'input' → logprob: -16.19458770751953

Token 517: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692947685718536
    2. '=' → logprob: -2.126929521560669
    3. '=line' → logprob: -14.37692928314209
    4. ' ' → logprob: -14.75192928314209
    5. 's' → logprob: -15.25192928314209
    6. '.' → logprob: -16.251930236816406
    7. ' =
' → logprob: -17.251930236816406
    8. '=input' → logprob: -17.876930236816406
    9. '=

' → logprob: -18.251930236816406
    10. '.strip' → logprob: -18.376930236816406

Token 518: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4871493875980377
    2. 'sys' → logprob: -1.3621493577957153
    3. ' input' → logprob: -2.737149477005005
    4. ' sys' → logprob: -2.737149477005005
    5. '=sys' → logprob: -13.362149238586426
    6. 'import' → logprob: -13.737149238586426
    7. '(sys' → logprob: -13.987149238586426
    8. '	sys' → logprob: -15.112149238586426
    9. 's' → logprob: -15.237149238586426
    10. '=input' → logprob: -15.487149238586426

Token 519: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2058730572462082
    2. '=' → logprob: -1.7058730125427246
    3. '=line' → logprob: -5.705873012542725
    4. ' line' → logprob: -7.330873012542725
    5. 'line' → logprob: -8.205873489379883
    6. '   ' → logprob: -9.455873489379883
    7. '.readline' → logprob: -10.455873489379883
    8. '=input' → logprob: -10.830873489379883
    9. '       ' → logprob: -10.830873489379883
    10. '(line' → logprob: -11.455873489379883

Token 520: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1074497401714325
    2. 'try' → logprob: -2.357449769973755
    3. ' line' → logprob: -4.982449531555176
    4. ' try' → logprob: -8.232449531555176
    5. '   ' → logprob: -10.232449531555176
    6. '
' → logprob: -10.607449531555176
    7. '       ' → logprob: -10.857449531555176
    8. '(line' → logprob: -12.857449531555176
    9. 'while' (adapté à ' while') → logprob: -12.982449531555176
    10. '=line' → logprob: -13.357449531555176

Token 521: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.22789716720581055
    2. ' line' → logprob: -2.6028971672058105
    3. ' not' → logprob: -2.9778971672058105
    4. 'not' → logprob: -2.9778971672058105
    5. 'True' → logprob: -4.2278971672058105
    6. ' True' → logprob: -4.6028971672058105
    7. '(line' → logprob: -5.9778971672058105
    8. '(True' → logprob: -7.8528971672058105
    9. 'len' → logprob: -8.602897644042969
    10. '(not' → logprob: -8.602897644042969

Token 522: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.21463081240653992
    2. ':=' → logprob: -2.3396308422088623
    3. '==' → logprob: -2.4646308422088623
    4. ' :=' → logprob: -5.214630603790283
    5. ' ==' → logprob: -5.714630603790283
    6. '=' → logprob: -6.464630603790283
    7. '.' → logprob: -7.089630603790283
    8. 'strip' → logprob: -8.339631080627441
    9. '().' → logprob: -8.964631080627441
    10. '!=' → logprob: -9.214631080627441

Token 523: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11474910378456116
    2. '()==' → logprob: -2.3647491931915283
    3. '==' → logprob: -4.239748954772949
    4. ' ==' → logprob: -10.73974895477295
    5. '=' → logprob: -13.36474895477295
    6. '===' → logprob: -13.86474895477295
    7. '()<' → logprob: -14.61474895477295
    8. '()=="' → logprob: -14.86474895477295
    9. '()!=' → logprob: -14.98974895477295
    10. ')==' → logprob: -15.73974895477295

Token 524: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11018932610750198
    2. '()==' → logprob: -2.735189437866211
    3. '()' → logprob: -3.485189437866211
    4. ' ==' → logprob: -4.735189437866211
    5. '===' → logprob: -11.235189437866211
    6. '=' → logprob: -12.110189437866211
    7. ')==' → logprob: -13.110189437866211
    8. ']==' → logprob: -13.860189437866211
    9. '()=="' → logprob: -14.610189437866211
    10. '==
' → logprob: -14.735189437866211

Token 525: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759493708610535
    2. '''' → logprob: -0.8259493708610535
    3. '"":' → logprob: -12.325949668884277
    4. ''',' → logprob: -12.825949668884277
    5. '':' → logprob: -13.950949668884277
    6. '''
' → logprob: -14.325949668884277
    7. ''''' → logprob: -15.200949668884277
    8. '""' → logprob: -15.325949668884277
    9. ' '' → logprob: -15.325949668884277
    10. '''.' → logprob: -15.450949668884277

Token 526: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.40780937671661377
    2. ':' → logprob: -1.9078093767166138
    3. 'line' → logprob: -2.657809257507324
    4. '       ' → logprob: -2.782809257507324
    5. ':
' → logprob: -3.657809257507324
    6. '           ' → logprob: -4.907809257507324
    7. '(line' → logprob: -5.532809257507324
    8. '=' → logprob: -5.532809257507324
    9. ' =' → logprob: -6.032809257507324
    10. '():
' → logprob: -6.032809257507324

Token 527: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.011102883145213127
    2. ' line' → logprob: -4.511102676391602
    3. '           ' → logprob: -10.136102676391602
    4. 'try' → logprob: -11.261102676391602
    5. '   ' → logprob: -13.886102676391602
    6. '       ' → logprob: -14.511102676391602
    7. '	line' → logprob: -15.136102676391602
    8. ' try' → logprob: -15.511102676391602
    9. 'l' → logprob: -16.0111026763916
    10. '#line' → logprob: -16.5111026763916

Token 528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2544929087162018
    2. ' =' → logprob: -1.5044928789138794
    3. '=line' → logprob: -6.00449275970459
    4. '=sys' → logprob: -9.62949275970459
    5. 'line' → logprob: -10.75449275970459
    6. '=
' → logprob: -13.37949275970459
    7. ' line' → logprob: -13.50449275970459
    8. '.readline' → logprob: -15.12949275970459
    9. '=input' → logprob: -15.12949275970459
    10. '(line' → logprob: -15.12949275970459

Token 529: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.029760906472802162
    2. ' sys' → logprob: -3.5297608375549316
    3. 'input' → logprob: -11.52976131439209
    4. '=sys' → logprob: -15.27976131439209
    5. ' input' → logprob: -16.154760360717773
    6. '(sys' → logprob: -16.279760360717773
    7. '	sys' → logprob: -16.904760360717773
    8. '   ' → logprob: -17.404760360717773
    9. '           ' → logprob: -17.529760360717773
    10. 'stdin' → logprob: -17.529760360717773

Token 530: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0043727983720600605
    2. '.readline' → logprob: -5.754372596740723
    3. 'stdin' → logprob: -7.004372596740723
    4. '.stdout' → logprob: -8.379372596740723
    5. '.' → logprob: -10.754372596740723
    6. '.stderr' → logprob: -11.379372596740723
    7. 'in' → logprob: -11.629372596740723
    8. '(stdin' → logprob: -12.379372596740723
    9. '.argv' → logprob: -12.504372596740723
    10. 's' → logprob: -13.754372596740723

Token 531: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.25
    3. 'read' → logprob: -19.875
    4. ' readline' → logprob: -20.0
    5. '.readlines' → logprob: -20.375
    6. '```' → logprob: -20.375
    7. 'buffer' → logprob: -21.875
    8. '.stdin' → logprob: -22.25
    9. '.read' → logprob: -22.375
    10. 'line' → logprob: -22.375

Token 532: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3918755352497101
    2. '()
' → logprob: -1.1418755054473877
    3. '       ' → logprob: -5.766875743865967
    4. '().' → logprob: -6.516875743865967
    5. '           ' → logprob: -8.516875267028809
    6. '(' → logprob: -9.641875267028809
    7. '()
' → logprob: -10.141875267028809
    8. '()\' → logprob: -10.516875267028809
    9. '()

' → logprob: -10.641875267028809
    10. '();' → logprob: -12.266875267028809

Token 533: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3870563507080078
    2. '           ' → logprob: -1.1370563507080078
    3. '<|end|>' → logprob: -9.512056350708008
    4. '<|end|>' → logprob: -10.762056350708008
    5. '        ' → logprob: -11.137056350708008
    6. '   ' → logprob: -11.137056350708008
    7. ' if' → logprob: -11.762056350708008
    8. ',' → logprob: -12.012056350708008
    9. '               ' → logprob: -12.387056350708008
    10. '```' → logprob: -12.387056350708008

Token 534: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16372455656528473
    2. ' if' → logprob: -1.9137245416641235
    3. '           ' → logprob: -5.663724422454834
    4. '       ' → logprob: -11.413724899291992
    5. 'break' → logprob: -11.413724899291992
    6. '
' → logprob: -13.913724899291992
    7. 'If' → logprob: -14.038724899291992
    8. ' break' → logprob: -15.163724899291992
    9. ';if' → logprob: -15.538724899291992
    10. '	if' → logprob: -16.163724899291992

Token 535: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.759756863117218
    2. 'line' → logprob: -1.0097568035125732
    3. 'not' → logprob: -2.0097568035125732
    4. ' line' → logprob: -3.3847568035125732
    5. '#line' → logprob: -13.509757041931152
    6. '	line' → logprob: -13.634757041931152
    7. '(line' → logprob: -14.259757041931152
    8. ' ' → logprob: -14.259757041931152
    9. '	not' → logprob: -15.384757041931152
    10. '[line' → logprob: -15.509757041931152

Token 536: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0005530327325686812
    2. ' line' → logprob: -7.500553131103516
    3. '	line' → logprob: -20.125553131103516
    4. '#line' → logprob: -21.000553131103516
    5. '(line' → logprob: -21.750553131103516
    6. '[line' → logprob: -23.250553131103516
    7. '=line' → logprob: -23.250553131103516
    8. 'Line' → logprob: -23.750553131103516
    9. '_line' → logprob: -24.375553131103516
    10. 'lines' → logprob: -24.875553131103516

Token 537: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.315704882144928
    2. ':
' → logprob: -1.3157048225402832
    3. ':return' → logprob: -6.065704822540283
    4. '               ' → logprob: -10.690705299377441
    5. '           ' → logprob: -11.065705299377441
    6. '):
' → logprob: -11.190705299377441
    7. ' :' → logprob: -11.440705299377441
    8. '   ' → logprob: -11.565705299377441
    9. ':

' → logprob: -11.815705299377441
    10. ':
' → logprob: -11.815705299377441

Token 538: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001921610557474196
    2. 'return' → logprob: -6.751921653747559
    3. ' return' → logprob: -7.501921653747559
    4. '           ' → logprob: -9.126921653747559
    5. ':return' → logprob: -9.751921653747559
    6. '                   ' → logprob: -12.126921653747559
    7. '   ' → logprob: -12.251921653747559
    8. 'break' → logprob: -12.751921653747559
    9. '              ' → logprob: -12.876921653747559
    10. ',' → logprob: -13.001921653747559

Token 539: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014212868176400661
    2. ' return' → logprob: -4.2642130851745605
    3. '               ' → logprob: -10.014212608337402
    4. 'break' → logprob: -12.889212608337402
    5. '                   ' → logprob: -13.889212608337402
    6. '
' → logprob: -14.139212608337402
    7. '           ' → logprob: -15.889212608337402
    8. '                       ' → logprob: -15.889212608337402
    9. '	return' → logprob: -16.13921356201172
    10. ' break' → logprob: -17.13921356201172

Token 540: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03414144366979599
    2. '
' → logprob: -3.7841415405273438
    3. '        
' → logprob: -4.659141540527344
    4. '\n' → logprob: -7.034141540527344
    5. '    
' → logprob: -8.534141540527344
    6. '<|end|>' → logprob: -8.909141540527344
    7. '   ' → logprob: -9.534141540527344
    8. '  
' → logprob: -11.034141540527344
    9. '            
' → logprob: -11.534141540527344
    10. '		
' → logprob: -12.159141540527344

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004931025905534625
    2. '<|end|>' → logprob: -7.875493049621582
    3. '        
' → logprob: -9.750493049621582
    4. '
' → logprob: -11.375493049621582
    5. '           ' → logprob: -11.750493049621582
    6. ' s' → logprob: -12.000493049621582
    7. ',' → logprob: -12.000493049621582
    8. '   ' → logprob: -12.125493049621582
    9. ' try' → logprob: -12.875493049621582
    10. ' ' → logprob: -12.875493049621582

Token 542: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.7930428981781006
    2. ' n' → logprob: -0.7930428981781006
    3. ' parts' → logprob: -2.7930428981781006
    4. '       ' → logprob: -3.5430428981781006
    5. 'parts' → logprob: -5.79304313659668
    6. ' tokens' → logprob: -7.54304313659668
    7. 'tokens' → logprob: -7.66804313659668
    8. ' try' → logprob: -7.66804313659668
    9. 'try' → logprob: -8.79304313659668
    10. ' numbers' → logprob: -9.79304313659668

Token 543: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6007326245307922
    2. ',' → logprob: -0.9757326245307922
    3. '=' → logprob: -2.6007325649261475
    4. ' ,' → logprob: -7.850732803344727
    5. ' ' → logprob: -10.850732803344727
    6. '=int' → logprob: -10.850732803344727
    7. ')' → logprob: -11.975732803344727
    8. ' =
' → logprob: -12.725732803344727
    9. ',n' → logprob: -12.975732803344727
    10. '.' → logprob: -13.475732803344727

Token 544: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06211221218109131
    2. ' m' → logprob: -2.812112331390381
    3. ' ' → logprob: -9.812111854553223
    4. ' =' → logprob: -10.062111854553223
    5. '=' → logprob: -10.562111854553223
    6. '<|end|>' → logprob: -11.687111854553223
    7. ' 
' → logprob: -12.437111854553223
    8. '    ' → logprob: -12.687111854553223
    9. '*m' → logprob: -14.062111854553223
    10. 'space' → logprob: -14.187111854553223

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06225705146789551
    2. ' =' → logprob: -2.8122570514678955
    3. ',' → logprob: -8.187256813049316
    4. '=line' → logprob: -11.562256813049316
    5. ')' → logprob: -14.187256813049316
    6. ' ' → logprob: -15.062256813049316
    7. '<|end|>' → logprob: -15.687256813049316
    8. '=

' → logprob: -16.437257766723633
    9. '=int' → logprob: -17.312257766723633
    10. '=input' → logprob: -17.312257766723633

Token 546: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.013930774293839931
    2. 'map' → logprob: -4.513930797576904
    3. ' line' → logprob: -5.888930797576904
    4. 'line' → logprob: -9.138930320739746
    5. ' list' → logprob: -14.888930320739746
    6. '	map' → logprob: -15.388930320739746
    7. '(map' → logprob: -15.763930320739746
    8. '_map' → logprob: -15.888930320739746
    9. '[line' → logprob: -16.138931274414062
    10. '[' → logprob: -16.263931274414062

Token 547: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007601416204124689
    2. '(str' → logprob: -5.257601261138916
    3. '(' → logprob: -6.257601261138916
    4. 'int' → logprob: -8.132601737976074
    5. '(line' → logprob: -9.007601737976074
    6. 'str' → logprob: -10.632601737976074
    7. '(lambda' → logprob: -12.132601737976074
    8. 'line' → logprob: -13.882601737976074
    9. '(
' → logprob: -13.882601737976074
    10. ' (' → logprob: -14.757601737976074

Token 548: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0005750744021497667
    2. ')' → logprob: -7.875575065612793
    3. '(' → logprob: -8.750575065612793
    4. 'line' → logprob: -10.375575065612793
    5. '(
' → logprob: -13.125575065612793
    6. ',line' → logprob: -13.750575065612793
    7. ' line' → logprob: -13.875575065612793
    8. ')(' → logprob: -15.375575065612793
    9. '#line' → logprob: -15.500575065612793
    10. ' (' → logprob: -15.625575065612793

Token 549: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00043126524542458355
    2. ' line' → logprob: -7.750431060791016
    3. '(line' → logprob: -14.375431060791016
    4. ')' → logprob: -18.500431060791016
    5. '	line' → logprob: -18.750431060791016
    6. '[line' → logprob: -19.000431060791016
    7. '=line' → logprob: -19.500431060791016
    8. '_line' → logprob: -20.375431060791016
    9. '   ' → logprob: -20.500431060791016
    10. '#line' → logprob: -20.500431060791016

Token 550: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2819744348526001
    2. '.strip' → logprob: -1.5319744348526
    3. '.split' → logprob: -3.5319743156433105
    4. '.' → logprob: -8.156974792480469
    5. ' .' → logprob: -10.156974792480469
    6. '()' → logprob: -10.906974792480469
    7. '.readline' → logprob: -12.906974792480469
    8. '.rstrip' → logprob: -12.906974792480469
    9. 'strip' → logprob: -13.656974792480469
    10. 'split' → logprob: -13.906974792480469

Token 551: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3856492842023727e-06
    2. '()' → logprob: -13.625000953674316
    3. '.split' → logprob: -17.000001907348633
    4. ' ().' → logprob: -18.250001907348633
    5. '(' → logprob: -19.375001907348633
    6. '()
' → logprob: -19.625001907348633
    7. 'split' → logprob: -20.750001907348633
    8. '().'' → logprob: -21.250001907348633
    9. '('').' → logprob: -21.625001907348633
    10. '('' → logprob: -22.000001907348633

Token 552: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.875000953674316
    3. '(split' → logprob: -16.125
    4. '.split' → logprob: -18.125
    5. 'spl' → logprob: -18.75
    6. '().' → logprob: -21.5
    7. 'rstrip' → logprob: -21.75
    8. 'strip' → logprob: -22.125
    9. 'sp' → logprob: -22.25
    10. ')' → logprob: -22.25

Token 553: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05228044092655182
    2. '()' → logprob: -3.0522804260253906
    3. '('' → logprob: -5.677280426025391
    4. '())
' → logprob: -8.55228042602539
    5. '(' → logprob: -10.55228042602539
    6. ')' → logprob: -10.80228042602539
    7. '(','' → logprob: -11.30228042602539
    8. '()
' → logprob: -12.30228042602539
    9. '()))' → logprob: -13.55228042602539
    10. ' ())' → logprob: -13.67728042602539

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18611061573028564
    2. 'if' → logprob: -2.436110496520996
    3. ' if' → logprob: -2.561110496520996
    4. 'points' → logprob: -5.436110496520996
    5. '   ' → logprob: -8.311110496520996
    6. ' points' → logprob: -8.561110496520996
    7. '<|end|>' → logprob: -8.811110496520996
    8. 'tokens' → logprob: -10.311110496520996
    9. 'line' → logprob: -10.686110496520996
    10. '	if' → logprob: -11.061110496520996

Token 555: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5452137589454651
    2. 'points' → logprob: -0.9202137589454651
    3. ' if' → logprob: -4.17021369934082
    4. 'line' → logprob: -5.67021369934082
    5. ' points' → logprob: -5.92021369934082
    6. 'p' → logprob: -9.79521369934082
    7. 'point' → logprob: -9.92021369934082
    8. ' line' → logprob: -10.04521369934082
    9. '       ' → logprob: -10.17021369934082
    10. 'pts' → logprob: -10.79521369934082

Token 556: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02324780821800232
    2. ' n' → logprob: -3.773247718811035
    3. '(n' → logprob: -13.648247718811035
    4. 'm' → logprob: -14.648247718811035
    5. '	n' → logprob: -15.023247718811035
    6. '(' → logprob: -16.14824867248535
    7. ' (' → logprob: -16.14824867248535
    8. 'not' → logprob: -16.52324867248535
    9. ' ' → logprob: -16.77324867248535
    10. ' ' → logprob: -17.02324867248535

Token 557: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12694165110588074
    2. '==' → logprob: -2.126941680908203
    3. '=' → logprob: -11.751941680908203
    4. ' ' → logprob: -14.001941680908203
    5. ')==' → logprob: -14.126941680908203
    6. ' <=' → logprob: -14.126941680908203
    7. '<|end|>' → logprob: -14.376941680908203
    8. '<=' → logprob: -14.501941680908203
    9. '()==' → logprob: -14.501941680908203
    10. ' =' → logprob: -14.501941680908203

Token 558: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234475247561932
    2. ' ' → logprob: -5.255234241485596
    3. 'm' → logprob: -15.130234718322754
    4. '-' → logprob: -15.505234718322754
    5. '```' → logprob: -17.130233764648438
    6. ' -' → logprob: -17.317733764648438
    7. ' m' → logprob: -17.505233764648438
    8. '  ' → logprob: -17.630233764648438
    9. 'n' → logprob: -17.692733764648438
    10. '   ' → logprob: -17.880233764648438

Token 559: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.125016212463379
    3. '-' → logprob: -14.125016212463379
    4. 'm' → logprob: -15.937516212463379
    5. 'n' → logprob: -16.000015258789062
    6. '```' → logprob: -16.937515258789062
    7. '۰' → logprob: -17.375015258789062
    8. 'and' → logprob: -17.500015258789062
    9. 'end' → logprob: -17.812515258789062
    10. 'o' → logprob: -17.937515258789062

Token 560: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868727385997772
    2. 'and' → logprob: -1.1368727684020996
    3. ':' → logprob: -14.136872291564941
    4. ' or' → logprob: -14.761872291564941
    5. ' ' → logprob: -15.261872291564941
    6. '	and' → logprob: -15.386872291564941
    7. '   ' → logprob: -16.136873245239258
    8. 'or' → logprob: -17.886873245239258
    9. '<|end|>' → logprob: -18.261873245239258
    10. '  ' → logprob: -18.761873245239258

Token 561: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0024756586644798517
    2. ' m' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.87747573852539
    4. '	m' → logprob: -19.87747573852539
    5. '  ' → logprob: -20.87747573852539
    6. ' ' → logprob: -22.00247573852539
    7. 'n' → logprob: -22.25247573852539
    8. '    ' → logprob: -22.62747573852539
    9. '_m' → logprob: -23.00247573852539
    10. ' ' → logprob: -23.50247573852539

Token 562: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04859248176217079
    2. ' ==' → logprob: -3.0485925674438477
    3. '<|end|>' → logprob: -13.173592567443848
    4. '=' → logprob: -13.423592567443848
    5. '===' → logprob: -14.923592567443848
    6. '0' → logprob: -14.923592567443848
    7. ')==' → logprob: -15.173592567443848
    8. '==
' → logprob: -15.423592567443848
    9. '()==' → logprob: -15.923592567443848
    10. ']==' → logprob: -16.04859161376953

Token 563: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.00020408630371
    4. '<|end|>' → logprob: -18.25020408630371
    5. '  ' → logprob: -18.37520408630371
    6. '```' → logprob: -19.12520408630371
    7. '۰' → logprob: -19.37520408630371
    8. 's' → logprob: -19.81270408630371
    9. '=' → logprob: -19.81270408630371
    10. '<|end|>' → logprob: -20.00020408630371

Token 564: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -20.000019073486328
    4. '۰' → logprob: -20.312519073486328
    5. '<|end|>' → logprob: -21.062519073486328
    6. '
' → logprob: -21.187519073486328
    7. '   ' → logprob: -21.187519073486328
    8. '=' → logprob: -21.250019073486328
    9. '  ' → logprob: -21.312519073486328
    10. '```' → logprob: -21.375019073486328

Token 565: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16129855811595917
    2. ':
' → logprob: -1.9112985134124756
    3. '           ' → logprob: -6.911298751831055
    4. ':return' → logprob: -9.911298751831055
    5. '       ' → logprob: -10.786298751831055
    6. ':
' → logprob: -13.286298751831055
    7. '():
' → logprob: -13.411298751831055
    8. '   ' → logprob: -13.786298751831055
    9. '):
' → logprob: -14.161298751831055
    10. ':

' → logprob: -14.286298751831055

Token 566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030614540446549654
    2. ':' → logprob: -8.875306129455566
    3. '       ' → logprob: -9.125306129455566
    4. ':
' → logprob: -10.250306129455566
    5. '               ' → logprob: -11.875306129455566
    6. '		' → logprob: -12.625306129455566
    7. '          ' → logprob: -12.625306129455566
    8. ' break' → logprob: -12.750306129455566
    9. '   ' → logprob: -13.250306129455566
    10. ',' → logprob: -13.875306129455566

Token 567: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.37157243490219116
    2. ' break' → logprob: -2.121572494506836
    3. 'return' → logprob: -2.371572494506836
    4. '           ' → logprob: -2.496572494506836
    5. '               ' → logprob: -4.496572494506836
    6. '	break' → logprob: -6.496572494506836
    7. '       ' → logprob: -6.871572494506836
    8. ' return' → logprob: -6.871572494506836
    9. '		' → logprob: -10.871572494506836
    10. '   ' → logprob: -11.496572494506836

Token 568: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004092292860150337
    2. '
' → logprob: -5.754092216491699
    3. '        
' → logprob: -7.379092216491699
    4. '<|end|>' → logprob: -8.5040922164917
    5. '   ' → logprob: -10.7540922164917
    6. ' points' → logprob: -11.0040922164917
    7. 'points' → logprob: -11.2540922164917
    8. '```' → logprob: -11.8790922164917
    9. '	points' → logprob: -12.3790922164917
    10. '	' → logprob: -12.6290922164917

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017874970217235386
    2. '<|end|>' → logprob: -9.750178337097168
    3. '	' → logprob: -10.625178337097168
    4. '   ' → logprob: -10.750178337097168
    5. '```' → logprob: -11.000178337097168
    6. 'line' → logprob: -11.625178337097168
    7. '
' → logprob: -11.875178337097168
    8. '	line' → logprob: -12.000178337097168
    9. ' line' → logprob: -12.250178337097168
    10. '	   ' → logprob: -12.250178337097168

Token 570: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.04889925196766853
    2. ' points' → logprob: -3.0488991737365723
    3. '       ' → logprob: -9.17389965057373
    4. 'scores' → logprob: -9.17389965057373
    5. 'line' → logprob: -9.79889965057373
    6. '	points' → logprob: -11.42389965057373
    7. 'point' → logprob: -11.54889965057373
    8. ' scores' → logprob: -11.92389965057373
    9. ' line' → logprob: -12.04889965057373
    10. 'pts' → logprob: -12.54889965057373

Token 571: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975812554359436
    2. '=' → logprob: -3.5297582149505615
    3. '=line' → logprob: -12.40475845336914
    4. 'line' → logprob: -13.15475845336914
    5. '_line' → logprob: -13.77975845336914
    6. ' line' → logprob: -16.15475845336914
    7. ' ' → logprob: -16.27975845336914
    8. ' ' → logprob: -16.65475845336914
    9. ' =[' → logprob: -16.65475845336914
    10. '=[]' → logprob: -17.02975845336914

Token 572: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31545770168304443
    2. ' list' → logprob: -1.3154577016830444
    3. '[list' → logprob: -6.190457820892334
    4. '[]' → logprob: -9.440457344055176
    5. '[' → logprob: -10.440457344055176
    6. '[]
' → logprob: -10.690457344055176
    7. ' [' → logprob: -11.690457344055176
    8. ' []
' → logprob: -13.565457344055176
    9. ' []' → logprob: -14.065457344055176
    10. '=list' → logprob: -14.315457344055176

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036773940082639456
    2. ' for' → logprob: -6.2536773681640625
    3. '	' → logprob: -6.6286773681640625
    4. '<|end|>' → logprob: -9.003677368164062
    5. '        
' → logprob: -9.253677368164062
    6. 'for' → logprob: -9.878677368164062
    7. '   ' → logprob: -10.003677368164062
    8. '	   ' → logprob: -10.253677368164062
    9. '	       ' → logprob: -11.628677368164062
    10. '	for' → logprob: -11.628677368164062

Token 574: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39530572295188904
    2. 'while' (adapté à ' while') → logprob: -1.1453057527542114
    3. ' for' → logprob: -5.645305633544922
    4. '       ' → logprob: -5.770305633544922
    5. ' while' → logprob: -6.645305633544922
    6. 'count' → logprob: -8.645305633544922
    7. '   ' → logprob: -8.645305633544922
    8. '	for' → logprob: -9.770305633544922
    9. '	while' → logprob: -10.270305633544922
    10. 'read' → logprob: -14.395305633544922

Token 575: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16023214161396027
    2. ' len' → logprob: -1.9102321863174438
    3. '(len' → logprob: -11.910232543945312
    4. '	len' → logprob: -13.785232543945312
    5. 'n' → logprob: -16.535232543945312
    6. '=len' → logprob: -16.785232543945312
    7. ' ' → logprob: -18.410232543945312
    8. '[len' → logprob: -18.660232543945312
    9. '<len' → logprob: -18.660232543945312
    10. '
' → logprob: -18.910232543945312

Token 576: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.463036435074173e-05
    2. 'points' → logprob: -10.750024795532227
    3. ' points' → logprob: -12.750024795532227
    4. '(' → logprob: -15.750024795532227
    5. '	points' → logprob: -16.625024795532227
    6. '(point' → logprob: -19.000024795532227
    7. '(parts' → logprob: -19.250024795532227
    8. 'Points' → logprob: -21.375024795532227
    9. '.points' → logprob: -21.625024795532227
    10. ' (' → logprob: -21.625024795532227

Token 577: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1610918790102005
    2. '<' → logprob: -1.911091923713684
    3. ')<' → logprob: -8.036091804504395
    4. ')' → logprob: -8.286091804504395
    5. '()<' → logprob: -8.536091804504395
    6. '<n' → logprob: -9.786091804504395
    7. '()' → logprob: -11.411091804504395
    8. '<len' → logprob: -11.536091804504395
    9. '<p' → logprob: -12.411091804504395
    10. '<size' → logprob: -12.661091804504395

Token 578: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.048824332654476166
    2. ' <' → logprob: -3.0488243103027344
    3. '<n' → logprob: -8.798824310302734
    4. '<|end|>' → logprob: -10.298824310302734
    5. ' ' → logprob: -11.048824310302734
    6. '<num' → logprob: -11.798824310302734
    7. '()<' → logprob: -11.923824310302734
    8. '<len' → logprob: -12.173824310302734
    9. '<size' → logprob: -12.923824310302734
    10. '<m' → logprob: -13.423824310302734

Token 579: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.060365608893335e-05
    2. ' n' → logprob: -10.125041007995605
    3. '	n' → logprob: -15.000041007995605
    4. '_n' → logprob: -16.62504005432129
    5. ')n' → logprob: -16.87504005432129
    6. '[n' → logprob: -17.50004005432129
    7. '(n' → logprob: -17.50004005432129
    8. '=n' → logprob: -17.75004005432129
    9. 'n't' → logprob: -18.12504005432129
    10. '<n' → logprob: -18.25004005432129

Token 580: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18005003035068512
    2. ':
' → logprob: -1.805050015449524
    3. '():
' → logprob: -9.305049896240234
    4. '<|end|>' → logprob: -10.055049896240234
    5. '):
' → logprob: -10.555049896240234
    6. '   ' → logprob: -10.555049896240234
    7. 'points' → logprob: -11.305049896240234
    8. '       ' → logprob: -11.555049896240234
    9. '.' → logprob: -11.680049896240234
    10. 'n' → logprob: -11.805049896240234

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024929534643888474
    2. ' line' → logprob: -4.899929523468018
    3. 'points' → logprob: -5.024929523468018
    4. 'line' → logprob: -5.649929523468018
    5. '   ' → logprob: -6.149929523468018
    6. '	line' → logprob: -7.274929523468018
    7. ' points' → logprob: -7.274929523468018
    8. '
' → logprob: -7.524929523468018
    9. '	points' → logprob: -7.524929523468018
    10. '       ' → logprob: -7.649929523468018

Token 582: ' line' (ID: 2543)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6448999643325806
    2. ' points' → logprob: -0.7698999643325806
    3. ' line' → logprob: -5.019899845123291
    4. 'line' (adapté à ' line') → logprob: -5.519899845123291
    5. '           ' → logprob: -6.769899845123291
    6. ' parts' → logprob: -8.76990032196045
    7. '	points' → logprob: -8.89490032196045
    8. 'point' → logprob: -9.89490032196045
    9. 'parts' → logprob: -10.14490032196045
    10. '   ' → logprob: -10.51990032196045

Token 583: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741052985191345
    2. ' =' → logprob: -0.9741052985191345
    3. '=line' → logprob: -10.724104881286621
    4. 'tokens' → logprob: -12.474104881286621
    5. '=
' → logprob: -14.474104881286621
    6. ' =
' → logprob: -15.099104881286621
    7. ' ' → logprob: -15.099104881286621
    8. '_tokens' → logprob: -15.599104881286621
    9. '<|end|>' → logprob: -16.099105834960938
    10. 's' → logprob: -16.224105834960938

Token 584: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.364139199256897
    2. 'input' → logprob: -1.739139199256897
    3. ' sys' → logprob: -2.1141390800476074
    4. ' input' → logprob: -4.739139080047607
    5. '=sys' → logprob: -10.614139556884766
    6. '	sys' → logprob: -11.239139556884766
    7. ' ' → logprob: -12.614139556884766
    8. '   ' → logprob: -13.114139556884766
    9. '(sys' → logprob: -13.364139556884766
    10. 'import' → logprob: -13.489139556884766

Token 585: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006769364699721336
    2. '.readline' → logprob: -5.131769180297852
    3. 'stdin' → logprob: -7.131769180297852
    4. '.stdout' → logprob: -11.006769180297852
    5. '=sys' → logprob: -11.381769180297852
    6. 'sys' → logprob: -12.006769180297852
    7. '(stdin' → logprob: -12.256769180297852
    8. '.' → logprob: -13.256769180297852
    9. '=' → logprob: -16.13176918029785
    10. '   ' → logprob: -16.50676918029785

Token 586: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.12500286102295
    3. '.stdin' → logprob: -15.00000286102295
    4. '().' → logprob: -17.125001907348633
    5. '.strip' → logprob: -17.750001907348633
    6. '.readlines' → logprob: -17.875001907348633
    7. '=sys' → logprob: -18.000001907348633
    8. 'sys' → logprob: -18.375001907348633
    9. ' readline' → logprob: -18.875001907348633
    10. 'stdin' → logprob: -19.250001907348633

Token 587: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.43802282214164734
    2. '()
' → logprob: -1.5630228519439697
    3. '()' → logprob: -2.0630228519439697
    4. '<|end|>' → logprob: -4.563022613525391
    5. '           ' → logprob: -5.563022613525391
    6. '       ' → logprob: -6.438022613525391
    7. '<|end|>' → logprob: -6.813022613525391
    8. '.strip' → logprob: -8.31302261352539
    9. '(points' → logprob: -8.93802261352539
    10. '
' → logprob: -8.93802261352539

Token 588: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01208091527223587
    2. '.strip' → logprob: -5.762081146240234
    3. '<|end|>' → logprob: -6.262081146240234
    4. 'tokens' → logprob: -6.387081146240234
    5. '.split' → logprob: -6.512081146240234
    6. '       ' → logprob: -7.137081146240234
    7. '(points' → logprob: -7.637081146240234
    8. 'points' → logprob: -7.762081146240234
    9. '.rstrip' → logprob: -7.762081146240234
    10. ' points' → logprob: -8.387081146240234

Token 589: ' if' (ID: 538)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.12703773379325867
    2. 'points' → logprob: -2.627037763595581
    3. ' if' → logprob: -3.252037763595581
    4. '           ' → logprob: -5.002037525177002
    5. 'if' (adapté à ' if') → logprob: -7.002037525177002
    6. '	points' → logprob: -7.752037525177002
    7. '       ' → logprob: -9.00203800201416
    8. ' for' → logprob: -10.25203800201416
    9. '(points' → logprob: -10.25203800201416
    10. '   ' → logprob: -11.00203800201416

Token 590: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.575941801071167
    2. ' not' → logprob: -0.825941801071167
    3. '	not' → logprob: -13.450942039489746
    4. 'line' → logprob: -14.450942039489746
    5. '!' → logprob: -15.825942039489746
    6. '   ' → logprob: -16.32594108581543
    7. ' ' → logprob: -16.95094108581543
    8. '           ' → logprob: -17.07594108581543
    9. '(not' → logprob: -17.20094108581543
    10. '
' → logprob: -17.70094108581543

Token 591: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.029750604182481766
    2. ' line' → logprob: -3.5297505855560303
    3. '(line' → logprob: -17.15475082397461
    4. '#line' → logprob: -17.27975082397461
    5. '	line' → logprob: -17.27975082397461
    6. '[line' → logprob: -18.77975082397461
    7. '=line' → logprob: -19.27975082397461
    8. ' ' → logprob: -19.65475082397461
    9. '
' → logprob: -19.65475082397461
    10. 'lines' → logprob: -19.90475082397461

Token 592: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23443520069122314
    2. ':' → logprob: -1.6094352006912231
    3. ':return' → logprob: -4.859435081481934
    4. '.strip' → logprob: -7.984435081481934
    5. '   ' → logprob: -8.234435081481934
    6. '.' → logprob: -8.609435081481934
    7. ' or' → logprob: -9.484435081481934
    8. ' ' → logprob: -9.734435081481934
    9. '<|end|>' → logprob: -9.734435081481934
    10. '           ' → logprob: -9.859435081481934

Token 593: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019294669618830085
    2. '           ' → logprob: -6.62692928314209
    3. ' break' → logprob: -7.62692928314209
    4. '   ' → logprob: -9.50192928314209
    5. ' return' → logprob: -11.50192928314209
    6. '       ' → logprob: -11.50192928314209
    7. '              ' → logprob: -12.37692928314209
    8. ' ' → logprob: -12.50192928314209
    9. '	           ' → logprob: -12.75192928314209
    10. 'break' → logprob: -13.50192928314209

Token 594: ' return' (ID: 622)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7010465860366821
    2. 'return' (adapté à ' return') → logprob: -1.4510465860366821
    3. ' break' → logprob: -1.7010465860366821
    4. '               ' → logprob: -2.7010464668273926
    5. ' return' → logprob: -3.9510464668273926
    6. '           ' → logprob: -7.326046466827393
    7. '	break' → logprob: -10.07604694366455
    8. '   ' → logprob: -10.57604694366455
    9. '                   ' → logprob: -11.20104694366455
    10. '       ' → logprob: -12.82604694366455

Token 595: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5218856930732727
    2. '       ' → logprob: -1.146885633468628
    3. ' points' → logprob: -2.646885633468628
    4. '(points' → logprob: -5.146885871887207
    5. 'points' → logprob: -5.771885871887207
    6. '<|end|>' → logprob: -6.146885871887207
    7. '	points' → logprob: -6.521885871887207
    8. '   ' → logprob: -6.771885871887207
    9. '
' → logprob: -6.896885871887207
    10. '        
' → logprob: -7.146885871887207

Token 596: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019204268231987953
    2. '           ' → logprob: -4.144204139709473
    3. ' points' → logprob: -6.269204139709473
    4. '   ' → logprob: -7.269204139709473
    5. 'points' → logprob: -8.644204139709473
    6. '<|end|>' → logprob: -8.894204139709473
    7. '	points' → logprob: -10.019204139709473
    8. ' for' → logprob: -10.019204139709473
    9. '(points' → logprob: -10.394204139709473
    10. ' tokens' → logprob: -10.519204139709473

Token 597: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.03826995566487312
    2. 'points' (adapté à ' points') → logprob: -3.2882699966430664
    3. '       ' → logprob: -8.788269996643066
    4. '	points' → logprob: -10.788269996643066
    5. ' for' → logprob: -10.913269996643066
    6. ' parts' → logprob: -11.038269996643066
    7. '           ' → logprob: -11.163269996643066
    8. '(points' → logprob: -12.913269996643066
    9. '   ' → logprob: -13.413269996643066
    10. ' tokens' → logprob: -14.163269996643066

Token 598: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.005286172963678837
    2. '.' → logprob: -5.25528621673584
    3. '+=' → logprob: -10.38028621673584
    4. ' .' → logprob: -11.50528621673584
    5. ' +=' → logprob: -11.63028621673584
    6. '.ext' → logprob: -13.50528621673584
    7. '+.' → logprob: -14.75528621673584
    8. '.=' → logprob: -15.00528621673584
    9. 'extend' → logprob: -15.50528621673584
    10. '.+' → logprob: -17.755285263061523

Token 599: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0008771585416980088
    2. '(list' → logprob: -7.250877380371094
    3. 'map' → logprob: -8.750877380371094
    4. '(' → logprob: -11.875877380371094
    5. 'list' → logprob: -13.500877380371094
    6. ' map' → logprob: -15.500877380371094
    7. '(int' → logprob: -15.625877380371094
    8. '([' → logprob: -17.125877380371094
    9. '(m' → logprob: -17.625877380371094
    10. '(
' → logprob: -17.750877380371094

Token 600: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013321757433004677
    2. '(' → logprob: -9.125133514404297
    3. 'int' → logprob: -10.750133514404297
    4. '(
' → logprob: -13.250133514404297
    5. ' (' → logprob: -15.125133514404297
    6. '(in' → logprob: -15.500133514404297
    7. '[int' → logprob: -15.625133514404297
    8. '<int' → logprob: -15.750133514404297
    9. '=int' → logprob: -16.375133514404297
    10. ' int' → logprob: -16.375133514404297

Token 601: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0004529566504061222
    2. '(' → logprob: -8.125452995300293
    3. ',line' → logprob: -9.375452995300293
    4. ',' → logprob: -10.625452995300293
    5. ')' → logprob: -11.125452995300293
    6. '(
' → logprob: -11.250452995300293
    7. ' (' → logprob: -11.625452995300293
    8. 'line' → logprob: -12.000452995300293
    9. '=line' → logprob: -13.500452995300293
    10. '#line' → logprob: -13.875452995300293

Token 602: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005239445250481367
    2. ' line' → logprob: -5.255239486694336
    3. '(line' → logprob: -12.130239486694336
    4. '=line' → logprob: -16.630239486694336
    5. '[line' → logprob: -16.755239486694336
    6. '#line' → logprob: -18.005239486694336
    7. '	line' → logprob: -18.380239486694336
    8. ',line' → logprob: -19.380239486694336
    9. ')' → logprob: -20.005239486694336
    10. '           ' → logprob: -20.130239486694336

Token 603: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5760488510131836
    2. '.strip' → logprob: -0.8260488510131836
    3. 'strip' → logprob: -9.701048851013184
    4. '.' → logprob: -10.576048851013184
    5. '()' → logprob: -11.826048851013184
    6. '.split' → logprob: -11.951048851013184
    7. '(strip' → logprob: -12.201048851013184
    8. '(line' → logprob: -13.701048851013184
    9. ' .' → logprob: -13.951048851013184
    10. ').' → logprob: -15.201048851013184

Token 604: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8624639324116288e-06
    2. '()' → logprob: -13.375001907348633
    3. '.split' → logprob: -15.375001907348633
    4. ' ().' → logprob: -17.000001907348633
    5. '(' → logprob: -18.000001907348633
    6. '()
' → logprob: -19.500001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '       ' → logprob: -20.500001907348633
    9. '.' → logprob: -21.000001907348633
    10. ' .' → logprob: -21.625001907348633

Token 605: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.75
    3. '.split' → logprob: -16.75
    4. '(split' → logprob: -19.875
    5. ')' → logprob: -20.875
    6. ' ' → logprob: -23.25
    7. 'strip' → logprob: -23.5
    8. '_split' → logprob: -23.75
    9. 'spl' → logprob: -24.25
    10. '   ' → logprob: -24.625

Token 606: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.025968030095100403
    2. '))' → logprob: -3.775968074798584
    3. '()))
' → logprob: -6.275968074798584
    4. '())' → logprob: -7.650968074798584
    5. '()' → logprob: -8.650967597961426
    6. '(' → logprob: -8.650967597961426
    7. '))
' → logprob: -12.275967597961426
    8. '()))
' → logprob: -12.900967597961426
    9. '()));' → logprob: -13.775967597961426
    10. ')' → logprob: -13.775967597961426

Token 607: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5611385107040405
    2. '       ' → logprob: -1.1861385107040405
    3. '<|end|>' → logprob: -2.18613862991333
    4. '
' → logprob: -4.56113862991333
    5. '    
' → logprob: -7.56113862991333
    6. '<|end|>' → logprob: -7.93613862991333
    7. '        
' → logprob: -8.811138153076172
    8. ')' → logprob: -9.061138153076172
    9. '```' → logprob: -11.186138153076172
    10. '[' → logprob: -11.311138153076172

Token 608: ' points' (ID: 5571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057281382381916046
    2. 'optimizer' → logprob: -3.682281494140625
    3. ' optimizer' → logprob: -3.807281494140625
    4. '       ' → logprob: -4.932281494140625
    5. '
' → logprob: -7.807281494140625
    6. '<|end|>' → logprob: -8.307281494140625
    7. '    
' → logprob: -9.182281494140625
    8. '_optimizer' → logprob: -9.557281494140625
    9. ' points' → logprob: -10.182281494140625
    10. 'points' (adapté à ' points') → logprob: -10.432281494140625

Token 609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09339207410812378
    2. ' =' → logprob: -3.0933921337127686
    3. '.extend' → logprob: -3.8433921337127686
    4. '<|end|>' → logprob: -4.7183918952941895
    5. '.append' → logprob: -4.9683918952941895
    6. '.' → logprob: -6.0933918952941895
    7. ')' → logprob: -6.4683918952941895
    8. '[:]' → logprob: -7.4683918952941895
    9. '<|end|>' → logprob: -7.9683918952941895
    10. '.sort' → logprob: -8.093392372131348

Token 610: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.018259162083268166
    2. ' points' → logprob: -4.018259048461914
    3. 'list' → logprob: -10.268259048461914
    4. 'sorted' → logprob: -10.518259048461914
    5. 'optimizer' → logprob: -11.143259048461914
    6. 'point' → logprob: -11.268259048461914
    7. '[' → logprob: -11.768259048461914
    8. '	points' → logprob: -13.268259048461914
    9. '(points' → logprob: -13.268259048461914
    10. ' optimizer' → logprob: -13.393259048461914

Token 611: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0012402292340993881
    2. '[' → logprob: -7.001240253448486
    3. '[:]' → logprob: -8.376239776611328
    4. '<|end|>' → logprob: -9.626239776611328
    5. '[:-' → logprob: -11.501239776611328
    6. '[
' → logprob: -11.751239776611328
    7. '
' → logprob: -12.126239776611328
    8. '#' → logprob: -12.876239776611328
    9. ')' → logprob: -13.876239776611328
    10. '[::-' → logprob: -14.251239776611328

Token 612: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -15.75
    3. 'points' → logprob: -17.875
    4. 'len' → logprob: -19.0
    5. '	n' → logprob: -19.5
    6. 'user' → logprob: -20.125
    7. '_n' → logprob: -20.375
    8. '(n' → logprob: -20.5
    9. ')n' → logprob: -20.625
    10. '$n' → logprob: -21.25

Token 613: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04248486086726189
    2. ']' → logprob: -3.542484760284424
    3. ')
' → logprob: -4.667484760284424
    4. '<|end|>' → logprob: -6.042484760284424
    5. '       ' → logprob: -7.667484760284424
    6. ']
' → logprob: -8.417485237121582
    7. '   ' → logprob: -9.792485237121582
    8. '<|end|>' → logprob: -9.917485237121582
    9. ' )' → logprob: -11.042485237121582
    10. ')]' → logprob: -11.417485237121582

Token 614: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10267241299152374
    2. '       ' → logprob: -2.3526723384857178
    3. 'optimizer' → logprob: -6.102672576904297
    4. '_optimizer' → logprob: -9.477672576904297
    5. ' optimizer' → logprob: -10.352672576904297
    6. '<|end|>' → logprob: -10.352672576904297
    7. '```' → logprob: -10.977672576904297
    8. '     ' → logprob: -11.227672576904297
    9. '
' → logprob: -11.477672576904297
    10. '           ' → logprob: -11.727672576904297

Token 615: ' optimizer' (ID: 56610)
  Prédit: 'optimizer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimizer' (adapté à ' optimizer') → logprob: -0.2523942291736603
    2. '   ' → logprob: -1.502394199371338
    3. ' optimizer' → logprob: -8.377394676208496
    4. '       ' → logprob: -8.377394676208496
    5. '_optimizer' → logprob: -13.002394676208496
    6. '.optimizer' → logprob: -14.127394676208496
    7. '  ' → logprob: -14.377394676208496
    8. ' ' → logprob: -14.877394676208496
    9. '```' → logprob: -14.877394676208496
    10. '           ' → logprob: -16.12739372253418

Token 616: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0003361774142831564
    2. '.' → logprob: -8.000336647033691
    3. ' .' → logprob: -15.250336647033691
    4. '.append' → logprob: -15.625336647033691
    5. '.Add' → logprob: -16.500335693359375
    6. '.setdefault' → logprob: -17.625335693359375
    7. '.mainloop' → logprob: -17.625335693359375
    8. '\.' → logprob: -18.000335693359375
    9. ')add' → logprob: -18.375335693359375
    10. '‌.' → logprob: -18.375335693359375

Token 617: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -8.41866585687967e-06
    2. 'dataset' → logprob: -11.750008583068848
    3. '_data' → logprob: -15.750008583068848
    4. 'ataset' → logprob: -16.25000762939453
    5. '_' → logprob: -16.37500762939453
    6. '(dataset' → logprob: -16.87500762939453
    7. '(' → logprob: -17.62500762939453
    8. '_points' → logprob: -17.87500762939453
    9. ' dataset' → logprob: -18.37500762939453
    10. '_database' → logprob: -18.37500762939453

Token 618: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000895024451892823
    2. '(len' → logprob: -7.250895023345947
    3. '(' → logprob: -8.625895500183105
    4. '(
' → logprob: -12.250895500183105
    5. ' (' → logprob: -14.250895500183105
    6. '((' → logprob: -15.750895500183105
    7. 'len' → logprob: -17.00089454650879
    8. 'n' → logprob: -17.00089454650879
    9. '(

' → logprob: -18.62589454650879
    10. '(N' → logprob: -19.00089454650879

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001207495923154056
    2. ',m' → logprob: -6.75120735168457
    3. ' ,' → logprob: -10.25120735168457
    4. ',n' → logprob: -13.87620735168457
    5. ',
' → logprob: -14.12620735168457
    6. 'm' → logprob: -16.00120735168457
    7. ',p' → logprob: -17.12620735168457
    8. '(m' → logprob: -17.37620735168457
    9. '‌,' → logprob: -17.50120735168457
    10. '   ' → logprob: -17.87620735168457

Token 620: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '	m' → logprob: -19.751502990722656
    4. '   ' → logprob: -20.251502990722656
    5. '       ' → logprob: -21.001502990722656
    6. ')m' → logprob: -21.251502990722656
    7. '<|end|>' → logprob: -21.876502990722656
    8. ' ' → logprob: -22.001502990722656
    9. '$m' → logprob: -23.001502990722656
    10. '    ' → logprob: -23.001502990722656

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -13.25000286102295
    3. '(points' → logprob: -13.87500286102295
    4. ',
' → logprob: -15.87500286102295
    5. 'points' → logprob: -16.250003814697266
    6. '<|end|>' → logprob: -16.750003814697266
    7. ',p' → logprob: -17.500003814697266
    8. ' points' → logprob: -17.500003814697266
    9. '‌,' → logprob: -18.500003814697266
    10. '	points' → logprob: -19.375003814697266

Token 622: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.023245826363563538
    2. ' points' → logprob: -3.7732458114624023
    3. '(points' → logprob: -15.523245811462402
    4. '	points' → logprob: -16.27324676513672
    5. 'point' → logprob: -17.64824676513672
    6. 'Points' → logprob: -18.02324676513672
    7. '   ' → logprob: -18.14824676513672
    8. '.points' → logprob: -18.39824676513672
    9. '_points' → logprob: -18.77324676513672
    10. '
' → logprob: -19.02324676513672

Token 623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006482422351837158
    2. '   ' → logprob: -5.3814826011657715
    3. '<|end|>' → logprob: -6.3814826011657715
    4. ')
' → logprob: -9.256482124328613
    5. '<|end|>' → logprob: -10.881482124328613
    6. '       ' → logprob: -10.881482124328613
    7. '
' → logprob: -11.131482124328613
    8. '    
' → logprob: -12.256482124328613
    9. '```' → logprob: -12.506482124328613
    10. ')return' → logprob: -13.256482124328613

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020525427535176277
    2. 'results' → logprob: -4.7705254554748535
    3. '
' → logprob: -4.8955254554748535
    4. ' results' → logprob: -5.8955254554748535
    5. 'result' → logprob: -7.1455254554748535
    6. '    
' → logprob: -7.6455254554748535
    7. ' result' → logprob: -8.895524978637695
    8. 'optimizer' → logprob: -9.895524978637695
    9. 'outputs' → logprob: -10.270524978637695
    10. '```' → logprob: -10.270524978637695

Token 625: ' results' (ID: 4376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5351215600967407
    2. 'results' (adapté à ' results') → logprob: -1.2851215600967407
    3. ' results' → logprob: -2.035121440887451
    4. 'for' → logprob: -5.535121440887451
    5. ' for' → logprob: -5.910121440887451
    6. '	results' → logprob: -9.03512191772461
    7. 'result' → logprob: -9.16012191772461
    8. '
' → logprob: -9.53512191772461
    9. '    
' → logprob: -9.78512191772461
    10. 'outputs' → logprob: -10.03512191772461

Token 626: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023258639499545097
    2. '=' → logprob: -3.773258686065674
    3. ' =
' → logprob: -12.648258209228516
    4. ':' → logprob: -12.648258209228516
    5. '   ' → logprob: -13.148258209228516
    6. ' ' → logprob: -13.398258209228516
    7. '=
' → logprob: -14.773258209228516
    8. '<|end|>' → logprob: -15.023258209228516
    9. ' for' → logprob: -15.148258209228516
    10. 'for' → logprob: -15.273258209228516

Token 627: ' optimizer' (ID: 56610)
  Prédit: 'optimizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimizer' → logprob: -0.16022473573684692
    2. ' optimizer' → logprob: -1.9102246761322021
    3. '   ' → logprob: -15.285224914550781
    4. '.optimizer' → logprob: -15.785224914550781
    5. '_optimizer' → logprob: -16.16022491455078
    6. 'opt' → logprob: -17.03522491455078
    7. 'optim' → logprob: -17.16022491455078
    8. 'optimized' → logprob: -17.66022491455078
    9. 'allocator' → logprob: -17.66022491455078
    10. 'Optimizer' → logprob: -18.16022491455078

Token 628: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.0001085497424355708
    2. '.' → logprob: -9.25010871887207
    3. ' .' → logprob: -12.00010871887207
    4. ' =' → logprob: -12.62510871887207
    5. 'run' → logprob: -13.00010871887207
    6. '=' → logprob: -15.25010871887207
    7. ' run' → logprob: -15.50010871887207
    8. '.
' → logprob: -16.87510871887207
    9. '	run' → logprob: -17.00010871887207
    10. '.Run' → logprob: -17.50010871887207

Token 629: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08581234514713287
    2. ' for' → logprob: -3.2108123302459717
    3. 'for' → logprob: -3.2108123302459717
    4. '
' → logprob: -6.835812568664551
    5. '    
' → logprob: -7.835812568664551
    6. '	for' → logprob: -10.46081256866455
    7. '()
' → logprob: -10.71081256866455
    8. '<|end|>' → logprob: -10.71081256866455
    9. '()' → logprob: -11.83581256866455
    10. ':
' → logprob: -12.21081256866455

Token 630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03892727568745613
    2. 'for' → logprob: -3.2889273166656494
    3. ' for' → logprob: -7.03892707824707
    4. '	for' → logprob: -12.03892707824707
    5. '```' → logprob: -13.28892707824707
    6. '
' → logprob: -14.16392707824707
    7. '    
' → logprob: -15.91392707824707
    8. '       ' → logprob: -17.28892707824707
    9. '   ' → logprob: -18.28892707824707
    10. '`' → logprob: -18.91392707824707

Token 631: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00428508035838604
    2. '   ' → logprob: -5.504284858703613
    3. ' for' → logprob: -8.504284858703613
    4. '
' → logprob: -12.504284858703613
    5. '```' → logprob: -15.379284858703613
    6. '	for' → logprob: -15.754284858703613
    7. '    
' → logprob: -16.75428581237793
    8. ' ' → logprob: -18.87928581237793
    9. '       ' → logprob: -20.00428581237793
    10. '``' → logprob: -20.12928581237793

Token 632: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05815477669239044
    2. 'res' → logprob: -3.058154821395874
    3. ' result' → logprob: -4.808154582977295
    4. ' res' → logprob: -6.808154582977295
    5. 'r' → logprob: -8.308155059814453
    6. ' r' → logprob: -11.808155059814453
    7. '   ' → logprob: -16.308155059814453
    8. '	result' → logprob: -17.683155059814453
    9. ' ' → logprob: -18.308155059814453
    10. '```' → logprob: -18.808155059814453

Token 633: ' in' (ID: 306)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.002334258984774351
    2. ' in' → logprob: -7.002334117889404
    3. 'ults' → logprob: -7.502334117889404
    4. 'ultat' → logprob: -7.877334117889404
    5. ' ult' → logprob: -8.002334594726562
    6. 'u' → logprob: -10.002334594726562
    7. 'ault' → logprob: -10.627334594726562
    8. 'ul' → logprob: -11.377334594726562
    9. 'ulti' → logprob: -11.627334594726562
    10. 'alt' → logprob: -11.877334594726562

Token 634: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0040785204619169235
    2. ' results' → logprob: -5.504078388214111
    3. '(results' → logprob: -16.254077911376953
    4. 'result' → logprob: -18.879077911376953
    5. 'res' → logprob: -19.629077911376953
    6. '	results' → logprob: -20.004077911376953
    7. '.results' → logprob: -20.629077911376953
    8. 'Results' → logprob: -22.004077911376953
    9. '_results' → logprob: -22.754077911376953
    10. ' ' → logprob: -22.754077911376953

Token 635: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5279749631881714
    2. ':' → logprob: -0.9029749631881714
    3. 'print' → logprob: -6.027975082397461
    4. '   ' → logprob: -6.527975082397461
    5. '.print' → logprob: -7.652975082397461
    6. '():
' → logprob: -8.902975082397461
    7. '       ' → logprob: -9.152975082397461
    8. ' print' → logprob: -9.527975082397461
    9. '.' → logprob: -9.652975082397461
    10. ',' → logprob: -10.652975082397461

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32088106870651245
    2. 'print' → logprob: -1.3208811283111572
    3. ' print' → logprob: -5.195880889892578
    4. '   ' → logprob: -6.195880889892578
    5. '```' → logprob: -11.820880889892578
    6. '	print' → logprob: -13.195880889892578
    7. '.print' → logprob: -14.195880889892578
    8. '           ' → logprob: -14.570880889892578
    9. '(print' → logprob: -14.570880889892578
    10. '`' → logprob: -14.695880889892578

Token 637: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9862216504407115e-05
    2. ' print' → logprob: -11.000020027160645
    3. '   ' → logprob: -12.750020027160645
    4. '       ' → logprob: -15.250020027160645
    5. '```' → logprob: -19.875019073486328
    6. '	print' → logprob: -20.000019073486328
    7. '           ' → logprob: -22.125019073486328
    8. '
' → logprob: -22.250019073486328
    9. 'println' → logprob: -23.000019073486328
    10. '.print' → logprob: -23.625019073486328

Token 638: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.5048530030981055e-06
    2. 'res' → logprob: -14.000001907348633
    3. '(str' → logprob: -14.375001907348633
    4. '(' → logprob: -17.500001907348633
    5. '(f' → logprob: -17.750001907348633
    6. '(re' → logprob: -19.875001907348633
    7. ' res' → logprob: -21.125001907348633
    8. '	res' → logprob: -21.750001907348633
    9. '(int' → logprob: -22.000001907348633
    10. '=res' → logprob: -22.000001907348633

Token 639: ')

' (ID: 1029)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021982356905937195
    2. ')' → logprob: -4.521982192993164
    3. '()' → logprob: -4.521982192993164
    4. ' ())' → logprob: -12.396982192993164
    5. '())
' → logprob: -13.021982192993164
    6. '();)' → logprob: -14.896982192993164
    7. '()
' → logprob: -15.521982192993164
    8. '()`' → logprob: -15.896982192993164
    9. '(' → logprob: -16.271982192993164
    10. ' )' → logprob: -16.646982192993164

Token 640: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.77022064034827e-05
    2. '```' → logprob: -10.375097274780273
    3. ' if' → logprob: -10.625097274780273
    4. '#' → logprob: -10.875097274780273
    5. '<|end|>' → logprob: -11.000097274780273
    6. 'main' → logprob: -12.125097274780273
    7. '#if' → logprob: -14.875097274780273
    8. '
' → logprob: -15.875097274780273
    9. '\' → logprob: -16.250097274780273
    10. 'If' → logprob: -16.375097274780273

Token 641: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10153341293334961
    2. '__' → logprob: -2.3515334129333496
    3. '_name' → logprob: -7.22653341293335
    4. '_' → logprob: -7.47653341293335
    5. 'name' → logprob: -11.476533889770508
    6. '___' → logprob: -11.976533889770508
    7. ' ' → logprob: -12.101533889770508
    8. ' _' → logprob: -12.726533889770508
    9. ' ' → logprob: -12.851533889770508
    10. 'Name' → logprob: -13.476533889770508

Token 642: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05111058056354523
    2. '==' → logprob: -3.4261105060577393
    3. ' ==' → logprob: -4.301110744476318
    4. 'name' → logprob: -6.301110744476318
    5. '__.__' → logprob: -7.301110744476318
    6. '.__' → logprob: -8.17611026763916
    7. '[' → logprob: -8.55111026763916
    8. ' __' → logprob: -8.55111026763916
    9. 'if' → logprob: -9.30111026763916
    10. '=="' → logprob: -9.80111026763916

Token 643: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.111979357432574e-05
    2. '__.__' → logprob: -9.62507152557373
    3. '==' → logprob: -12.37507152557373
    4. '=="' → logprob: -15.25007152557373
    5. '__.' → logprob: -15.87507152557373
    6. '____' → logprob: -16.125070571899414
    7. '___' → logprob: -16.375070571899414
    8. '__["' → logprob: -16.375070571899414
    9. '__('' → logprob: -16.875070571899414
    10. '__
' → logprob: -17.125070571899414

Token 644: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.40029630064964294
    2. ' ==' → logprob: -1.6502963304519653
    3. '==' → logprob: -2.150296211242676
    4. '=="' → logprob: -3.900296211242676
    5. '=='' → logprob: -7.150296211242676
    6. '__.__' → logprob: -8.400296211242676
    7. '.__' → logprob: -8.900296211242676
    8. '__["' → logprob: -11.900296211242676
    9. '_' → logprob: -12.025296211242676
    10. '___' → logprob: -12.150296211242676

Token 645: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12694616615772247
    2. ''' → logprob: -2.126946210861206
    3. ' "__' → logprob: -11.626946449279785
    4. '__' → logprob: -11.751946449279785
    5. ' '__' → logprob: -14.501946449279785
    6. '"_' → logprob: -15.251946449279785
    7. '"user' → logprob: -16.00194549560547
    8. '"name' → logprob: -16.75194549560547
    9. '"class' → logprob: -16.87694549560547
    10. ''"' → logprob: -16.87694549560547

Token 646: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06244679540395737
    2. '__' → logprob: -2.8124468326568604
    3. '"' → logprob: -7.687446594238281
    4. ''' → logprob: -11.062446594238281
    5. 'name' → logprob: -13.562446594238281
    6. '_main' → logprob: -13.687446594238281
    7. 'python' → logprob: -14.312446594238281
    8. '__":
' → logprob: -14.562446594238281
    9. '___' → logprob: -15.062446594238281
    10. '__
' → logprob: -15.437446594238281

Token 647: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.007725752890110016
    2. '__' → logprob: -4.882725715637207
    3. '__':
' → logprob: -9.132725715637207
    4. '__.' → logprob: -12.382725715637207
    5. '__.__' → logprob: -12.507725715637207
    6. '__["' → logprob: -13.007725715637207
    7. '__:' → logprob: -14.632725715637207
    8. '.' → logprob: -14.632725715637207
    9. '"' → logprob: -16.382726669311523
    10. '__",' → logprob: -16.507726669311523

Token 648: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -20.0
    4. '   ' → logprob: -20.125
    5. '__' → logprob: -21.125
    6. '_main' → logprob: -21.875
    7. '.main' → logprob: -24.0
    8. '(main' → logprob: -24.625
    9. '```' → logprob: -24.75
    10. 'Main' → logprob: -25.625

Token 649: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. 'import' → logprob: -18.75
    4. '   ' → logprob: -19.375
    5. '	main' → logprob: -20.625
    6. '.main' → logprob: -25.375
    7. '_main' → logprob: -26.125
    8. '```' → logprob: -26.5
    9. '(main' → logprob: -26.75
    10. 'Main' → logprob: -28.25

Token 650: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 648
Tokens correctement prédits (1ère position, stricte): 323
Tokens correctement prédits (1ère position, avec adaptation): 355
Tokens correctement prédits (top 10): 582
Précision stricte (1ère position): 49.85%
Précision adaptée (1ère position): 54.78%
Précision (top 10): 89.81%
================================================================================
