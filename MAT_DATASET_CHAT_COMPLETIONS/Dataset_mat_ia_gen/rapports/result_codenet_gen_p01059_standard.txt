================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
n,m=map(int,input().split())
a=list(map(int,input().split()))
dist=[-1]*n
q=deque()
for x in a:
    dist[x-1]=0
    q.append(x-1)
while q:
    i=q.popleft()
    for ni in (i-1,i+1):
        if 0<=ni<n and dist[ni]==-1:
            dist[ni]=dist[i]+1
            q.append(ni)
print(max(dist))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.9342921376228333
    2. 'default' → logprob: -1.3092920780181885
    3. 'deque' → logprob: -1.6842920780181885
    4. ' defaultdict' → logprob: -2.6842920780181885
    5. 'Counter' → logprob: -2.8092920780181885
    6. ' abc' → logprob: -4.559292316436768
    7. ' Counter' → logprob: -5.434292316436768
    8. 'named' → logprob: -5.559292316436768
    9. ' deque' → logprob: -6.559292316436768
    10. '```' → logprob: -6.684292316436768

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007957580499351025
    2. '.' → logprob: -5.757957458496094
    3. '\(' → logprob: -5.882957458496094
    4. '\' → logprob: -7.507957458496094
    5. '```' → logprob: -8.007957458496094
    6. '[' → logprob: -8.382957458496094
    7. '\[' → logprob: -8.882957458496094
    8. ' (' → logprob: -9.007957458496094
    9. ',' → logprob: -9.257957458496094
    10. '\n' → logprob: -9.382957458496094

Token 5: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4058283269405365
    2. '\' → logprob: -2.5308282375335693
    3. '\n' → logprob: -2.9058282375335693
    4. 'd' → logprob: -3.0308282375335693
    5. 'a' → logprob: -3.4058282375335693
    6. '`' → logprob: -3.6558282375335693
    7. 'newline' → logprob: -4.030828475952148
    8. '```' → logprob: -4.280828475952148
    9. '[' → logprob: -4.530828475952148
    10. '
' → logprob: -5.155828475952148

Token 6: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12660223245620728
    2. '=' → logprob: -2.2516021728515625
    3. ' ' → logprob: -4.7516021728515625
    4. ',' → logprob: -6.5016021728515625
    5. 'u' → logprob: -6.6266021728515625
    6. '.' → logprob: -7.1266021728515625
    7. '_' → logprob: -7.5016021728515625
    8. '  ' → logprob: -8.626602172851562
    9. 'a' → logprob: -8.751602172851562
    10. ' ,' → logprob: -9.376602172851562

Token 7: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2858986258506775
    2. ' =' → logprob: -1.4108986854553223
    3. ',' → logprob: -5.410898685455322
    4. ' ' → logprob: -8.910898208618164
    5. ' ,' → logprob: -9.785898208618164
    6. ')' → logprob: -9.910898208618164
    7. ' =
' → logprob: -11.535898208618164
    8. ''' → logprob: -12.785898208618164
    9. '=
' → logprob: -12.910898208618164
    10. '=

' → logprob: -13.410898208618164

Token 8: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.38758227229118347
    2. ' map' → logprob: -1.1375823020935059
    3. 'input' → logprob: -8.012581825256348
    4. 'int' → logprob: -8.887581825256348
    5. '0' → logprob: -9.512581825256348
    6. 'list' → logprob: -9.762581825256348
    7. ' input' → logprob: -10.387581825256348
    8. ' ' → logprob: -10.637581825256348
    9. '10' → logprob: -10.887581825256348
    10. ' list' → logprob: -10.887581825256348

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010612912476062775
    2. '(' → logprob: -4.635612964630127
    3. '(str' → logprob: -7.885612964630127
    4. '(input' → logprob: -8.510612487792969
    5. 'int' → logprob: -8.885612487792969
    6. '<int' → logprob: -10.010612487792969
    7. '(lambda' → logprob: -10.260612487792969
    8. '[int' → logprob: -10.635612487792969
    9. '=int' → logprob: -11.385612487792969
    10. '(len' → logprob: -12.510612487792969

Token 10: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1397642344236374
    2. ',input' → logprob: -2.5147643089294434
    3. '(' → logprob: -3.3897643089294434
    4. ',int' → logprob: -5.014764308929443
    5. ',(' → logprob: -5.139764308929443
    6. '(','' → logprob: -7.764764308929443
    7. '(input' → logprob: -7.764764308929443
    8. '(),' → logprob: -8.139763832092285
    9. ',float' → logprob: -8.264763832092285
    10. ',data' → logprob: -8.764763832092285

Token 11: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4678293764591217
    2. '()' → logprob: -1.7178293466567993
    3. '())' → logprob: -1.8428293466567993
    4. ')' → logprob: -3.592829465866089
    5. '(),' → logprob: -5.96782922744751
    6. '(' → logprob: -6.21782922744751
    7. '('' → logprob: -6.34282922744751
    8. '());' → logprob: -7.71782922744751
    9. '()>' → logprob: -7.96782922744751
    10. ',' → logprob: -8.592829704284668

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003452368837315589
    2. 'strip' → logprob: -8.000345230102539
    3. 'rstrip' → logprob: -11.750345230102539
    4. ' split' → logprob: -14.375345230102539
    5. ')' → logprob: -14.500345230102539
    6. '(split' → logprob: -14.875345230102539
    7. 'read' → logprob: -15.000345230102539
    8. 'spl' → logprob: -16.00034523010254
    9. '```' → logprob: -18.00034523010254
    10. '_split' → logprob: -18.62534523010254

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0058238026686012745
    2. '))' → logprob: -5.630823612213135
    3. '())' → logprob: -6.255823612213135
    4. '`)' → logprob: -9.130824089050293
    5. '()' → logprob: -9.255824089050293
    6. '')' → logprob: -10.380824089050293
    7. ')`' → logprob: -10.755824089050293
    8. '(' → logprob: -11.130824089050293
    9. '('' → logprob: -11.880824089050293
    10. ')))' → logprob: -12.005824089050293

Token 14: 'a' (ID: 64)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.006563795264810324
    2. 'g' → logprob: -5.256563663482666
    3. ' graph' → logprob: -8.256564140319824
    4. 'a' → logprob: -8.756564140319824
    5. 'grid' → logprob: -8.756564140319824
    6. 'edges' → logprob: -8.756564140319824
    7. 'd' → logprob: -9.006564140319824
    8. 'G' → logprob: -9.256564140319824
    9. 'arr' → logprob: -9.381564140319824
    10. 'dist' → logprob: -9.881564140319824

Token 15: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41773876547813416
    2. '[' → logprob: -1.7927387952804565
    3. ' =' → logprob: -2.042738676071167
    4. '[:]' → logprob: -4.292738914489746
    5. '.' → logprob: -4.917738914489746
    6. ',' → logprob: -5.417738914489746
    7. 'r' → logprob: -6.042738914489746
    8. '[]' → logprob: -6.417738914489746
    9. '=[]' → logprob: -6.417738914489746
    10. 'a' → logprob: -6.542738914489746

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023693470284342766
    2. '(range' → logprob: -6.877369403839111
    3. '(map' → logprob: -7.127369403839111
    4. '(a' → logprob: -8.502368927001953
    5. '(int' → logprob: -9.002368927001953
    6. '(input' → logprob: -9.252368927001953
    7. '(
' → logprob: -10.252368927001953
    8. '(

' → logprob: -10.377368927001953
    9. '(data' → logprob: -12.002368927001953
    10. '(de' → logprob: -12.252368927001953

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008745994418859482
    2. '(' → logprob: -4.758746147155762
    3. '(str' → logprob: -10.008746147155762
    4. '(input' → logprob: -10.258746147155762
    5. '<int' → logprob: -11.133746147155762
    6. '=int' → logprob: -11.508746147155762
    7. '(lambda' → logprob: -11.633746147155762
    8. '[int' → logprob: -11.633746147155762
    9. 'int' → logprob: -13.133746147155762
    10. '(
' → logprob: -13.758746147155762

Token 18: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023774005472660065
    2. ',input' → logprob: -3.7737739086151123
    3. '(' → logprob: -7.898774147033691
    4. ',' → logprob: -9.273774147033691
    5. 'input' → logprob: -10.648774147033691
    6. '=input' → logprob: -11.148774147033691
    7. '(int' → logprob: -11.148774147033691
    8. ' (' → logprob: -12.773774147033691
    9. '<input' → logprob: -13.148774147033691
    10. ',int' → logprob: -13.773774147033691

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005849646404385567
    2. '()' → logprob: -7.750585079193115
    3. '(' → logprob: -9.375584602355957
    4. '(.' → logprob: -10.000584602355957
    5. ')' → logprob: -11.500584602355957
    6. '())' → logprob: -12.750584602355957
    7. '.' → logprob: -13.125584602355957
    8. ' ().' → logprob: -13.125584602355957
    9. '()))' → logprob: -13.375584602355957
    10. '()-' → logprob: -14.000584602355957

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.226628895296017e-06
    2. '(split' → logprob: -12.500007629394531
    3. ' split' → logprob: -13.125007629394531
    4. 'strip' → logprob: -13.750007629394531
    5. 'rstrip' → logprob: -15.750007629394531
    6. 'spl' → logprob: -16.25000762939453
    7. 'plit' → logprob: -17.25000762939453
    8. ')' → logprob: -17.37500762939453
    9. '_split' → logprob: -17.50000762939453
    10. 'read' → logprob: -18.75000762939453

Token 21: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.23470580577850342
    2. '()))' → logprob: -1.6097058057785034
    3. ')' → logprob: -5.234705924987793
    4. '(' → logprob: -6.234705924987793
    5. '())' → logprob: -6.609705924987793
    6. '()' → logprob: -7.734705924987793
    7. ')))' → logprob: -9.359705924987793
    8. ''))' → logprob: -11.359705924987793
    9. '()));' → logprob: -11.359705924987793
    10. ' ))' → logprob: -11.484705924987793

Token 22: 'dist' (ID: 24126)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14820125699043274
    2. 'q' → logprob: -2.6482012271881104
    3. 'b' → logprob: -3.6482012271881104
    4. 'dq' → logprob: -3.7732012271881104
    5. 'dp' → logprob: -4.6482014656066895
    6. 'deque' → logprob: -6.0232014656066895
    7. 'queue' → logprob: -6.2732014656066895
    8. 'a' → logprob: -6.8982014656066895
    9. 'de' → logprob: -7.5232014656066895
    10. '' → logprob: -8.023200988769531

Token 23: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026880361139774323
    2. '=[' → logprob: -3.9018802642822266
    3. '[' → logprob: -5.651880264282227
    4. ' =' → logprob: -6.026880264282227
    5. '=[]' → logprob: -8.651880264282227
    6. '={}' → logprob: -8.776880264282227
    7. '[:]' → logprob: -10.526880264282227
    8. ' =[' → logprob: -11.776880264282227
    9. '={' → logprob: -12.026880264282227
    10. '=[[' → logprob: -12.526880264282227

Token 24: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013220814988017082
    2. '-inf' → logprob: -4.63822078704834
    3. '0' → logprob: -6.26322078704834
    4. 'float' → logprob: -7.13822078704834
    5. ' -' → logprob: -8.26322078704834
    6. '-int' → logprob: -8.76322078704834
    7. '-f' → logprob: -9.26322078704834
    8. '[-' → logprob: -9.26322078704834
    9. 'False' → logprob: -10.76322078704834
    10. '-m' → logprob: -10.76322078704834

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '10' → logprob: -15.125000953674316
    3. '2' → logprob: -15.625000953674316
    4. '-' → logprob: -15.625000953674316
    5. ' ' → logprob: -16.125
    6. '(' → logprob: -16.75
    7. 'float' → logprob: -16.75
    8. '100' → logprob: -18.0
    9. 'int' → logprob: -18.375
    10. 'm' → logprob: -18.375

Token 26: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3319784998893738
    2. ']*(' → logprob: -1.5819785594940186
    3. ']' → logprob: -2.5819785594940186
    4. ' for' → logprob: -6.8319783210754395
    5. 'for' → logprob: -9.081978797912598
    6. ']+' → logprob: -9.456978797912598
    7. ' ]' → logprob: -10.831978797912598
    8. '```' → logprob: -12.081978797912598
    9. ',' → logprob: -12.581978797912598
    10. ' ' → logprob: -13.706978797912598

Token 27: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06016352027654648
    2. '(' → logprob: -3.4351634979248047
    3. '100' → logprob: -4.310163497924805
    4. 'n' → logprob: -4.560163497924805
    5. '(m' → logprob: -6.685163497924805
    6. '101' → logprob: -7.685163497924805
    7. '(max' → logprob: -8.935163497924805
    8. '300' → logprob: -9.185163497924805
    9. ' (' → logprob: -9.310163497924805
    10. '200' → logprob: -10.185163497924805

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4304788410663605
    2. 'dist' → logprob: -1.180478811264038
    3. '
' → logprob: -3.680478811264038
    4. 'd' → logprob: -4.430479049682617
    5. '```' → logprob: -6.305479049682617
    6. ' 
' → logprob: -6.555479049682617
    7. ' dist' → logprob: -7.180479049682617
    8. '' → logprob: -7.930479049682617
    9. '  
' → logprob: -8.305479049682617
    10. 'deque' → logprob: -8.305479049682617

Token 29: 'q' (ID: 80)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09800976514816284
    2. 'dist' → logprob: -3.0980098247528076
    3. '
' → logprob: -3.5980098247528076
    4. ' 
' → logprob: -4.7230095863342285
    5. 'd' → logprob: -4.8480095863342285
    6. ' dist' → logprob: -6.7230095863342285
    7. '  
' → logprob: -6.8480095863342285
    8. 'deque' → logprob: -7.7230095863342285
    9. '' → logprob: -7.9730095863342285
    10. 'q' → logprob: -8.098010063171387

Token 30: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20161575078964233
    2. ' =' → logprob: -1.701615810394287
    3. '.' → logprob: -8.576615333557129
    4. '.=' → logprob: -12.201615333557129
    5. '=[]' → logprob: -13.701615333557129
    6. '.append' → logprob: -13.701615333557129
    7. ' ' → logprob: -13.951615333557129
    8. '=new' → logprob: -14.451615333557129
    9. '＝' → logprob: -14.576615333557129
    10. '[' → logprob: -14.701615333557129

Token 31: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -2.7848862373502925e-05
    2. ' deque' → logprob: -10.500027656555176
    3. 'de' → logprob: -15.375027656555176
    4. 'Deque' → logprob: -18.625028610229492
    5. 'dq' → logprob: -20.000028610229492
    6. 'collections' → logprob: -21.000028610229492
    7. '```' → logprob: -21.250028610229492
    8. '(de' → logprob: -21.875028610229492
    9. '	de' → logprob: -23.125028610229492
    10. 'd' → logprob: -23.250028610229492

Token 32: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014371353900060058
    2. '(' → logprob: -6.876437187194824
    3. '([]' → logprob: -8.126437187194824
    4. '()
' → logprob: -9.876437187194824
    5. '()`' → logprob: -11.751437187194824
    6. '([' → logprob: -11.876437187194824
    7. '[]' → logprob: -11.876437187194824
    8. '([(' → logprob: -11.876437187194824
    9. '()

' → logprob: -12.126437187194824
    10. '(q' → logprob: -12.251437187194824

Token 33: 'for' (ID: 1938)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.16932401061058044
    2. 'for' → logprob: -2.5443239212036133
    3. '(' → logprob: -4.044323921203613
    4. ' for' → logprob: -4.044323921203613
    5. '`' → logprob: -4.794323921203613
    6. '```' → logprob: -5.294323921203613
    7. '[' → logprob: -5.669323921203613
    8. '\n' → logprob: -5.919323921203613
    9. '\' → logprob: -5.919323921203613
    10. 'a' → logprob: -6.044323921203613

Token 34: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008718935772776604
    2. 'i' → logprob: -4.758718967437744
    3. ' ' → logprob: -9.883718490600586
    4. ' _' → logprob: -10.258718490600586
    5. '_' → logprob: -11.883718490600586
    6. '	i' → logprob: -12.008718490600586
    7. ' ' → logprob: -13.883718490600586
    8. ' x' → logprob: -13.883718490600586
    9. '(i' → logprob: -14.008718490600586
    10. '0' → logprob: -14.508718490600586

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20167966187000275
    2. 'in' → logprob: -1.7016797065734863
    3. ' ' → logprob: -9.201679229736328
    4. 'range' → logprob: -10.076679229736328
    5. 's' → logprob: -10.701679229736328
    6. '	in' → logprob: -10.951679229736328
    7. 'a' → logprob: -11.201679229736328
    8. '  ' → logprob: -11.451679229736328
    9. 'x' → logprob: -11.951679229736328
    10. '_in' → logprob: -11.951679229736328

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21302694082260132
    2. 'range' → logprob: -2.088027000427246
    3. ' range' → logprob: -2.838027000427246
    4. ' a' → logprob: -4.713027000427246
    5. '[a' → logprob: -8.713027000427246
    6. 'q' → logprob: -9.463027000427246
    7. '[' → logprob: -9.588027000427246
    8. '(range' → logprob: -10.463027000427246
    9. '(a' → logprob: -10.713027000427246
    10. ' ' → logprob: -11.213027000427246

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018411019118502736
    2. ' :' → logprob: -9.125184059143066
    3. ':
' → logprob: -10.500184059143066
    4. '):' → logprob: -10.500184059143066
    5. ':q' → logprob: -11.125184059143066
    6. ')' → logprob: -14.625184059143066
    7. '：' → logprob: -14.750184059143066
    8. '>:' → logprob: -15.000184059143066
    9. ':**' → logprob: -15.000184059143066
    10. '<|end|>' → logprob: -15.125184059143066

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5263504981994629
    2. 'dist' → logprob: -1.651350498199463
    3. ' dist' → logprob: -2.151350498199463
    4. ' q' → logprob: -3.401350498199463
    5. '	dist' → logprob: -3.776350498199463
    6. 'q' → logprob: -4.276350498199463
    7. '	q' → logprob: -4.526350498199463
    8. '```' → logprob: -4.526350498199463
    9. '_dist' → logprob: -5.651350498199463
    10. ' 
' → logprob: -7.026350498199463

Token 39: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.30537572503089905
    2. ' dist' → logprob: -1.8053756952285767
    3. 'q' → logprob: -2.680375814437866
    4. ' q' → logprob: -3.555375814437866
    5. '   ' → logprob: -6.555375576019287
    6. '	dist' → logprob: -9.555376052856445
    7. '```' → logprob: -9.555376052856445
    8. '	q' → logprob: -11.305376052856445
    9. '_dist' → logprob: -11.680376052856445
    10. 'd' → logprob: -11.930376052856445

Token 40: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0009246804984286427
    2. '[' → logprob: -7.000924587249756
    3. ' [' → logprob: -11.375925064086914
    4. '```' → logprob: -14.375925064086914
    5. 'x' → logprob: -15.375925064086914
    6. '[
' → logprob: -15.625925064086914
    7. '[s' → logprob: -15.750925064086914
    8. '[q' → logprob: -16.000925064086914
    9. '[i' → logprob: -16.000925064086914
    10. ' ' → logprob: -16.625925064086914

Token 41: '-' (ID: 12)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.25289785861968994
    2. ']' → logprob: -1.50289785861969
    3. ']+=' → logprob: -7.6278977394104
    4. ' ]' → logprob: -7.8778977394104
    5. ']==' → logprob: -10.002898216247559
    6. ']=-' → logprob: -10.627898216247559
    7. '=' → logprob: -11.877898216247559
    8. '-' → logprob: -12.252898216247559
    9. ']=(' → logprob: -12.252898216247559
    10. ']+' → logprob: -12.627898216247559

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. ']' → logprob: -16.25000762939453
    4. '```' → logprob: -18.75000762939453
    5. '0' → logprob: -18.87500762939453
    6. ')' → logprob: -18.87500762939453
    7. '   ' → logprob: -19.00000762939453
    8. '2' → logprob: -19.62500762939453
    9. ']=' → logprob: -20.12500762939453
    10. '=' → logprob: -20.25000762939453

Token 43: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.016291597858071327
    2. ']' → logprob: -4.141291618347168
    3. '=' → logprob: -8.391291618347168
    4. ' ]' → logprob: -11.016291618347168
    5. ']+=' → logprob: -11.891291618347168
    6. '']=' → logprob: -12.766291618347168
    7. '"]=' → logprob: -13.641291618347168
    8. ')=' → logprob: -13.766291618347168
    9. ']=-' → logprob: -14.266291618347168
    10. '0' → logprob: -15.266291618347168

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -14.875000953674316
    4. '۰' → logprob: -16.687501907348633
    5. 'm' → logprob: -17.812501907348633
    6. 'x' → logprob: -18.062501907348633
    7. '٠' → logprob: -18.187501907348633
    8. '০' → logprob: -18.437501907348633
    9. '०' → logprob: -18.750001907348633
    10. '```' → logprob: -18.812501907348633

Token 45: '
' (ID: 198)
  Prédit: '	q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	q' → logprob: -0.06723900139331818
    2. '   ' → logprob: -3.8172390460968018
    3. 'q' → logprob: -3.9422390460968018
    4. '
' → logprob: -4.567238807678223
    5. '<|end|>' → logprob: -4.942238807678223
    6. ' q' → logprob: -5.442238807678223
    7. ',q' → logprob: -7.067238807678223
    8. '    
' → logprob: -8.067238807678223
    9. '<|end|>' → logprob: -8.817238807678223
    10. ' 
' → logprob: -9.192238807678223

Token 46: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4801580905914307
    2. ' q' → logprob: -1.6051580905914307
    3. '<|end|>' → logprob: -1.6051580905914307
    4. '
' → logprob: -1.7301580905914307
    5. '	q' → logprob: -1.8551580905914307
    6. ' 
' → logprob: -4.105157852172852
    7. '   ' → logprob: -4.855157852172852
    8. '<|end|>' → logprob: -5.855157852172852
    9. '    
' → logprob: -5.980157852172852
    10. ',q' → logprob: -6.480157852172852

Token 47: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0713716670870781
    2. ' q' → logprob: -3.321371555328369
    3. '   ' → logprob: -3.946371555328369
    4. '	q' → logprob: -4.321371555328369
    5. ',q' → logprob: -8.946372032165527
    6. '  ' → logprob: -11.321372032165527
    7. '_q' → logprob: -11.571372032165527
    8. '```' → logprob: -12.196372032165527
    9. '.q' → logprob: -12.946372032165527
    10. ',' → logprob: -12.946372032165527

Token 48: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.021213307976722717
    2. '.' → logprob: -4.146213531494141
    3. '.extend' → logprob: -5.396213531494141
    4. '.p' → logprob: -7.521213531494141
    5. '.ext' → logprob: -10.39621353149414
    6. '.enqueue' → logprob: -10.52121353149414
    7. '.app' → logprob: -12.02121353149414
    8. '.put' → logprob: -12.02121353149414
    9. '.push' → logprob: -12.52121353149414
    10. '.ap' → logprob: -13.02121353149414

Token 49: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -5.133198283147067e-05
    2. '(' → logprob: -10.375051498413086
    3. '((' → logprob: -11.375051498413086
    4. '(a' → logprob: -12.250051498413086
    5. 'x' → logprob: -13.125051498413086
    6. 'left' → logprob: -13.500051498413086
    7. '(q' → logprob: -15.500051498413086
    8. ' (' → logprob: -16.750051498413086
    9. '(left' → logprob: -17.625051498413086
    10. '(
' → logprob: -17.750051498413086

Token 50: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0021904718596488237
    2. ' -' → logprob: -6.127190589904785
    3. ')' → logprob: -12.502190589904785
    4. '1' → logprob: -14.252190589904785
    5. ' ' → logprob: -15.127190589904785
    6. '-)' → logprob: -15.252190589904785
    7. ')-' → logprob: -15.502190589904785
    8. '()-' → logprob: -15.627190589904785
    9. '```' → logprob: -16.62718963623047
    10. '   ' → logprob: -17.12718963623047

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.37501335144043
    3. ')' → logprob: -14.68751335144043
    4. '2' → logprob: -15.43751335144043
    5. '```' → logprob: -15.75001335144043
    6. '   ' → logprob: -16.31251335144043
    7. '۱' → logprob: -16.31251335144043
    8. '<|end|>' → logprob: -16.68751335144043
    9. '11' → logprob: -16.75001335144043
    10. '-' → logprob: -17.31251335144043

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.0590548703912646e-05
    2. ')
' → logprob: -10.500030517578125
    3. ' )' → logprob: -12.875030517578125
    4. '))' → logprob: -16.125030517578125
    5. ')

' → logprob: -17.125030517578125
    6. ')`' → logprob: -17.250030517578125
    7. '`)' → logprob: -17.500030517578125
    8. ')#' → logprob: -17.625030517578125
    9. ')
' → logprob: -18.000030517578125
    10. '),' → logprob: -18.375030517578125

Token 53: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6233254075050354
    2. '<|end|>' → logprob: -1.4983253479003906
    3. '```' → logprob: -1.9983253479003906
    4. ' while' → logprob: -2.9983253479003906
    5. ')' → logprob: -3.2483253479003906
    6. '
' → logprob: -5.248325347900391
    7. '  
' → logprob: -5.998325347900391
    8. '``' → logprob: -6.623325347900391
    9. '<|end|>' → logprob: -6.623325347900391
    10. ')
' → logprob: -6.748325347900391

Token 54: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.16070924699306488
    2. ' q' → logprob: -1.910709261894226
    3. ' len' → logprob: -8.285709381103516
    4. 'len' → logprob: -8.410709381103516
    5. ' ' → logprob: -12.035709381103516
    6. '(q' → logprob: -13.535709381103516
    7. '   ' → logprob: -13.660709381103516
    8. '	q' → logprob: -13.910709381103516
    9. ' not' → logprob: -15.035709381103516
    10. '  ' → logprob: -15.285709381103516

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016369777731597424
    2. '):' → logprob: -6.876636981964111
    3. '>:' → logprob: -8.126636505126953
    4. '.p' → logprob: -9.126636505126953
    5. '():' → logprob: -10.251636505126953
    6. '.pop' → logprob: -10.876636505126953
    7. 'opleft' → logprob: -11.001636505126953
    8. ':not' → logprob: -11.126636505126953
    9. '```' → logprob: -11.126636505126953
    10. ':**' → logprob: -11.376636505126953

Token 56: '   ' (ID: 271)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.8652793169021606
    2. 'v' → logprob: -1.2402793169021606
    3. '   ' → logprob: -1.9902793169021606
    4. ' u' → logprob: -2.615279197692871
    5. 'u' → logprob: -2.990279197692871
    6. 'x' → logprob: -4.365279197692871
    7. ' x' → logprob: -4.740279197692871
    8. ' p' → logprob: -5.865279197692871
    9. 'p' → logprob: -6.365279197692871
    10. ' current' → logprob: -6.865279197692871

Token 57: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0429788827896118
    2. 'x' → logprob: -1.2929788827896118
    3. ' v' → logprob: -1.2929788827896118
    4. 'u' → logprob: -3.2929787635803223
    5. ' u' → logprob: -3.5429787635803223
    6. ' x' → logprob: -3.6679787635803223
    7. 'cur' → logprob: -6.042978763580322
    8. '   ' → logprob: -6.417978763580322
    9. ' cur' → logprob: -6.417978763580322
    10. ' current' → logprob: -7.917978763580322

Token 58: '=q' (ID: 151306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42975378036499023
    2. '=q' → logprob: -1.3047537803649902
    3. ' =' → logprob: -2.5547537803649902
    4. '+' → logprob: -9.179754257202148
    5. '+=' → logprob: -9.429754257202148
    6. ' ' → logprob: -9.554754257202148
    7. ',q' → logprob: -10.304754257202148
    8. ',' → logprob: -10.804754257202148
    9. '=d' → logprob: -11.554754257202148
    10. '=query' → logprob: -11.679754257202148

Token 59: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.470901229884475e-05
    2. '.pop' → logprob: -9.75008487701416
    3. '.' → logprob: -11.25008487701416
    4. 'opleft' → logprob: -11.50008487701416
    5. ').' → logprob: -14.25008487701416
    6. 'p' → logprob: -14.25008487701416
    7. '   ' → logprob: -14.25008487701416
    8. '```' → logprob: -14.62508487701416
    9. '].' → logprob: -15.37508487701416
    10. ' .' → logprob: -15.50008487701416

Token 60: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0020621151197701693
    2. 'op' → logprob: -6.2520623207092285
    3. 'ople' → logprob: -9.00206184387207
    4. 'opl' → logprob: -11.62706184387207
    5. 'opf' → logprob: -13.87706184387207
    6. 'opt' → logprob: -15.25206184387207
    7. 'opc' → logprob: -15.87706184387207
    8. 'oplevel' → logprob: -16.37706184387207
    9. 'opped' → logprob: -18.37706184387207
    10. 'oph' → logprob: -18.75206184387207

Token 61: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.253090865968261e-06
    2. '()
' → logprob: -12.000009536743164
    3. '(' → logprob: -13.250009536743164
    4. '())' → logprob: -15.125009536743164
    5. ')' → logprob: -15.375009536743164
    6. '()`' → logprob: -15.375009536743164
    7. ' ()' → logprob: -15.500009536743164
    8. '()]' → logprob: -16.000009536743164
    9. '()

' → logprob: -16.250009536743164
    10. '()
' → logprob: -16.500009536743164

Token 62: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5778148174285889
    2. 'for' → logprob: -0.9528148174285889
    3. '   ' → logprob: -2.952814817428589
    4. '    
' → logprob: -8.202815055847168
    5. '```' → logprob: -8.202815055847168
    6. ',' → logprob: -9.077815055847168
    7. '
' → logprob: -9.077815055847168
    8. 'if' → logprob: -10.202815055847168
    9. 'u' → logprob: -10.327815055847168
    10. ':' → logprob: -10.702815055847168

Token 63: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013355274684727192
    2. ' for' → logprob: -4.638355255126953
    3. 'if' → logprob: -5.888355255126953
    4. 'j' → logprob: -7.763355255126953
    5. 'd' → logprob: -8.138355255126953
    6. 'l' → logprob: -10.763355255126953
    7. '   ' → logprob: -11.388355255126953
    8. ' if' → logprob: -11.513355255126953
    9. 'u' → logprob: -11.888355255126953
    10. 'left' → logprob: -11.888355255126953

Token 64: ' ni' (ID: 2565)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2048519849777222
    2. 'j' → logprob: -1.5798519849777222
    3. 'nx' → logprob: -1.8298519849777222
    4. 'ni' → logprob: -2.0798521041870117
    5. ' nxt' → logprob: -3.2048521041870117
    6. 'y' → logprob: -3.2048521041870117
    7. 'nei' → logprob: -3.3298521041870117
    8. 'v' → logprob: -3.5798521041870117
    9. ' ni' → logprob: -4.454852104187012
    10. ' nei' → logprob: -4.579852104187012

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22545449435710907
    2. 'in' → logprob: -1.6004544496536255
    3. ' ' → logprob: -10.475454330444336
    4. '	in' → logprob: -12.975454330444336
    5. 'n' → logprob: -13.350454330444336
    6. 'In' → logprob: -13.850454330444336
    7. ',in' → logprob: -13.850454330444336
    8. 'ni' → logprob: -13.975454330444336
    9. ')' → logprob: -14.100454330444336
    10. 'ind' → logprob: -14.475454330444336

Token 66: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004901888780295849
    2. '[n' → logprob: -5.629901885986328
    3. '(i' → logprob: -6.879901885986328
    4. '[(' → logprob: -8.879901885986328
    5. '[' → logprob: -9.379901885986328
    6. '{i' → logprob: -11.379901885986328
    7. '[m' → logprob: -11.504901885986328
    8. '[x' → logprob: -11.629901885986328
    9. '(n' → logprob: -11.754901885986328
    10. ' [' → logprob: -12.379901885986328

Token 67: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35957226157188416
    2. '(i' → logprob: -1.8595722913742065
    3. '[i' → logprob: -2.234572172164917
    4. '[(' → logprob: -3.859572172164917
    5. ' (' → logprob: -4.609572410583496
    6. ' i' → logprob: -5.359572410583496
    7. '((' → logprob: -5.984572410583496
    8. ' [' → logprob: -8.359572410583496
    9. ' ' → logprob: -8.859572410583496
    10. ' [(' → logprob: -9.109572410583496

Token 68: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01338633056730032
    2. '+' → logprob: -4.513386249542236
    3. ' -' → logprob: -6.138386249542236
    4. '*' → logprob: -9.513386726379395
    5. '+i' → logprob: -9.888386726379395
    6. ' +' → logprob: -10.513386726379395
    7. ' ' → logprob: -11.763386726379395
    8. '+n' → logprob: -12.513386726379395
    9. '+m' → logprob: -12.638386726379395
    10. '2' → logprob: -12.763386726379395

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004975094925612211
    2. ' ' → logprob: -7.625497341156006
    3. '2' → logprob: -12.000497817993164
    4. '+' → logprob: -14.125497817993164
    5. 'm' → logprob: -14.375497817993164
    6. 'n' → logprob: -14.375497817993164
    7. '-' → logprob: -14.625497817993164
    8. '6' → logprob: -16.125497817993164
    9. '   ' → logprob: -16.125497817993164
    10. ')' → logprob: -16.312997817993164

Token 70: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06841519474983215
    2. ',i' → logprob: -2.8184151649475098
    3. ' ,' → logprob: -5.06841516494751
    4. ',n' → logprob: -9.068415641784668
    5. '   ' → logprob: -11.568415641784668
    6. ',
' → logprob: -12.568415641784668
    7. ',(' → logprob: -13.693415641784668
    8. '‌,' → logprob: -14.068415641784668
    9. ' ' → logprob: -14.193415641784668
    10. ',j' → logprob: -14.318415641784668

Token 71: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018452389165759087
    2. ',i' → logprob: -4.143452167510986
    3. ' +' → logprob: -7.018452167510986
    4. '+i' → logprob: -7.393452167510986
    5. '-' → logprob: -7.518452167510986
    6. ',' → logprob: -8.268452644348145
    7. ' ,' → logprob: -10.643452644348145
    8. '+,' → logprob: -10.768452644348145
    9. ' i' → logprob: -11.768452644348145
    10. ')' → logprob: -11.768452644348145

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010151672904612496
    2. ')' → logprob: -9.500101089477539
    3. ' ' → logprob: -11.250101089477539
    4. '):' → logprob: -11.500101089477539
    5. '):
' → logprob: -13.375101089477539
    6. '```' → logprob: -13.750101089477539
    7. '):

' → logprob: -15.500101089477539
    8. '+' → logprob: -15.625101089477539
    9. '0' → logprob: -16.50010108947754
    10. '<|end|>' → logprob: -16.62510108947754

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014308173209428787
    2. '):
' → logprob: -4.264307975769043
    3. ',' → logprob: -9.389307975769043
    4. ' ):' → logprob: -10.514307975769043
    5. ')' → logprob: -11.139307975769043
    6. '):
' → logprob: -11.389307975769043
    7. '):

' → logprob: -12.514307975769043
    8. '   ' → logprob: -13.264307975769043
    9. ':' → logprob: -13.889307975769043
    10. ' ):
' → logprob: -14.389307975769043

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7546753883361816
    2. '<|end|>' → logprob: -1.1296753883361816
    3. ':' → logprob: -1.7546753883361816
    4. '   ' → logprob: -4.254675388336182
    5. ' if' → logprob: -4.504675388336182
    6. '<|end|>' → logprob: -5.379675388336182
    7. ' ' → logprob: -6.754675388336182
    8. ',' → logprob: -7.504675388336182
    9. ':
' → logprob: -7.754675388336182
    10. '```' → logprob: -8.254674911499023

Token 75: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062294356524944305
    2. ' ' → logprob: -2.8122942447662354
    3. 'ni' → logprob: -8.437294006347656
    4. ' ni' → logprob: -9.437294006347656
    5. '-' → logprob: -11.562294006347656
    6. ' -' → logprob: -12.062294006347656
    7. '  ' → logprob: -12.437294006347656
    8. '   ' → logprob: -13.624794006347656
    9. ' ' → logprob: -13.624794006347656
    10. ' not' → logprob: -13.687294006347656

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005841302336193621
    2. ' ' → logprob: -7.500584125518799
    3. 'ni' → logprob: -10.875584602355957
    4. '-' → logprob: -11.750584602355957
    5. ' -' → logprob: -13.625584602355957
    6. '   ' → logprob: -14.250584602355957
    7. '  ' → logprob: -14.813084602355957
    8. ' ni' → logprob: -14.875584602355957
    9. '-ni' → logprob: -15.188084602355957
    10. 'not' → logprob: -15.375584602355957

Token 78: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.018154975026845932
    2. ' <=' → logprob: -4.018155097961426
    3. '>=' → logprob: -13.268155097961426
    4. '<len' → logprob: -13.518155097961426
    5. '<' → logprob: -13.768155097961426
    6. '<n' → logprob: -14.768155097961426
    7. '>' → logprob: -15.643155097961426
    8. ']<=' → logprob: -15.768155097961426
    9. ')<=' → logprob: -16.76815414428711
    10. '=' → logprob: -17.14315414428711

Token 79: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.00023274161503650248
    2. ' ni' → logprob: -8.375232696533203
    3. 'n' → logprob: -14.125232696533203
    4. '   ' → logprob: -14.375232696533203
    5. 'nii' → logprob: -15.125232696533203
    6. ' ' → logprob: -16.500232696533203
    7. '  ' → logprob: -16.750232696533203
    8. '```' → logprob: -17.125232696533203
    9. '-ni' → logprob: -17.500232696533203
    10. 'niu' → logprob: -17.750232696533203

Token 80: '<n' (ID: 33872)
  Prédit: '<n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -6.587483221665025e-05
    2. '<' → logprob: -10.125065803527832
    3. ' <' → logprob: -11.000065803527832
    4. '<len' → logprob: -12.250065803527832
    5. 'n' → logprob: -12.750065803527832
    6. 'and' → logprob: -14.500065803527832
    7. ' n' → logprob: -15.125065803527832
    8. ' and' → logprob: -15.250065803527832
    9. '<m' → logprob: -15.875065803527832
    10. '<num' → logprob: -17.25006675720215

Token 81: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020552048459649086
    2. 'and' → logprob: -3.895552158355713
    3. '       ' → logprob: -12.770551681518555
    4. ' ' → logprob: -13.020551681518555
    5. '	and' → logprob: -13.020551681518555
    6. '<|end|>' → logprob: -13.520551681518555
    7. '   ' → logprob: -14.645551681518555
    8. '        ' → logprob: -15.895551681518555
    9. ',' → logprob: -15.895551681518555
    10. '```' → logprob: -16.270551681518555

Token 82: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018175458535552025
    2. ' dist' → logprob: -4.0181756019592285
    3. '   ' → logprob: -10.89317512512207
    4. '	dist' → logprob: -12.76817512512207
    5. ' ' → logprob: -13.26817512512207
    6. '           ' → logprob: -14.64317512512207
    7. '       ' → logprob: -14.64317512512207
    8. '(dist' → logprob: -14.76817512512207
    9. '    ' → logprob: -14.89317512512207
    10. '  ' → logprob: -15.26817512512207

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.875000953674316
    3. ' [' → logprob: -16.25
    4. ')[' → logprob: -17.0
    5. '[n' → logprob: -17.5
    6. '[i' → logprob: -17.625
    7. '[int' → logprob: -17.75
    8. '][' → logprob: -18.0
    9. '[
' → logprob: -18.375
    10. ')' → logprob: -18.4375

Token 84: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.0212252177298069
    2. '[' → logprob: -4.146225452423096
    3. 'i' → logprob: -6.271225452423096
    4. ']' → logprob: -6.396225452423096
    5. 'n' → logprob: -7.646225452423096
    6. '-ni' → logprob: -8.021224975585938
    7. ']==' → logprob: -8.271224975585938
    8. '-' → logprob: -9.021224975585938
    9. ' ni' → logprob: -9.271224975585938
    10. '[i' → logprob: -9.896224975585938

Token 85: ']==' (ID: 34128)
  Prédit: '==-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.29062217473983765
    2. ']==' → logprob: -1.4156222343444824
    3. '<' → logprob: -4.915622234344482
    4. ')==' → logprob: -7.290622234344482
    5. '==' → logprob: -7.665622234344482
    6. ']<' → logprob: -8.165621757507324
    7. '']==' → logprob: -8.165621757507324
    8. ']' → logprob: -8.540621757507324
    9. ')' → logprob: -9.790621757507324
    10. ' ==' → logprob: -10.040621757507324

Token 86: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.3458322731312364e-06
    2. ' -' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.00000762939453
    4. '[-' → logprob: -16.25000762939453
    5. '>-' → logprob: -17.12500762939453
    6. '−' → logprob: -17.75000762939453
    7. '```' → logprob: -17.87500762939453
    8. '<|end|>' → logprob: -18.00000762939453
    9. ''-' → logprob: -18.25000762939453
    10. '(-' → logprob: -18.25000762939453

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '<|end|>' → logprob: -12.125009536743164
    3. ' ' → logprob: -13.000009536743164
    4. '```' → logprob: -15.000009536743164
    5. '<|end|>' → logprob: -15.375009536743164
    6. '   ' → logprob: -15.812509536743164
    7. '...' → logprob: -16.562509536743164
    8. '2' → logprob: -16.562509536743164
    9. '-' → logprob: -17.000009536743164
    10. '۱' → logprob: -17.500009536743164

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10108239203691483
    2. ':
' → logprob: -2.3510823249816895
    3. '):
' → logprob: -7.9760823249816895
    4. '):' → logprob: -8.226082801818848
    5. ' and' → logprob: -9.351082801818848
    6. '       ' → logprob: -10.101082801818848
    7. ':

' → logprob: -10.226082801818848
    8. '<|end|>' → logprob: -10.726082801818848
    9. '=' → logprob: -11.101082801818848
    10. ')' → logprob: -11.601082801818848

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12239045649766922
    2. '       ' → logprob: -2.7473905086517334
    3. '<|end|>' → logprob: -3.8723905086517334
    4. ' ' → logprob: -5.122390270233154
    5. ' dist' → logprob: -5.497390270233154
    6. '```' → logprob: -5.872390270233154
    7. '	       ' → logprob: -5.997390270233154
    8. '            
' → logprob: -6.122390270233154
    9. '        
' → logprob: -6.247390270233154
    10. ' 
' → logprob: -6.372390270233154

Token 90: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.4775078594684601
    2. ' dist' → logprob: -0.9775078296661377
    3. '               ' → logprob: -5.852508068084717
    4. '	dist' → logprob: -7.727508068084717
    5. '           ' → logprob: -9.852507591247559
    6. '```' → logprob: -10.727507591247559
    7. '<|end|>' → logprob: -11.727507591247559
    8. '   ' → logprob: -11.977507591247559
    9. '       ' → logprob: -11.977507591247559
    10. ' ' → logprob: -12.602507591247559

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.875000953674316
    3. '[
' → logprob: -16.75
    4. ' [' → logprob: -16.875
    5. '<|end|>' → logprob: -16.875
    6. ')[' → logprob: -18.5625
    7. '<|end|>' → logprob: -18.6875
    8. ' ' → logprob: -18.75
    9. '=[' → logprob: -19.25
    10. '\[' → logprob: -19.4375

Token 92: 'ni' (ID: 1906)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5094070477061905e-05
    2. 'ni' → logprob: -11.750015258789062
    3. ' i' → logprob: -12.000015258789062
    4. '   ' → logprob: -14.875015258789062
    5. ']' → logprob: -15.375015258789062
    6. ' ' → logprob: -15.750015258789062
    7. '```' → logprob: -16.625015258789062
    8. ')' → logprob: -16.750015258789062
    9. '	i' → logprob: -17.250015258789062
    10. 'n' → logprob: -17.625015258789062

Token 93: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.4123900830745697
    2. '=' → logprob: -1.162390112876892
    3. ')=' → logprob: -3.9123899936676025
    4. ']' → logprob: -5.412390232086182
    5. '=i' → logprob: -8.537389755249023
    6. '=q' → logprob: -8.537389755249023
    7. ' =' → logprob: -8.912389755249023
    8. ')' → logprob: -8.912389755249023
    9. '=d' → logprob: -10.662389755249023
    10. ']+=' → logprob: -10.912389755249023

Token 94: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.913265239447355e-05
    2. ' dist' → logprob: -9.250099182128906
    3. '	dist' → logprob: -13.250099182128906
    4. 'd' → logprob: -14.500099182128906
    5. '1' → logprob: -14.875099182128906
    6. '   ' → logprob: -15.375099182128906
    7. '(dist' → logprob: -16.500099182128906
    8. '.dist' → logprob: -17.625099182128906
    9. '0' → logprob: -17.625099182128906
    10. ' ' → logprob: -17.750099182128906

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.7755875129951164e-05
    2. '[' → logprob: -10.50004768371582
    3. 'i' → logprob: -11.12504768371582
    4. '```' → logprob: -12.50004768371582
    5. '][' → logprob: -14.75004768371582
    6. ' [' → logprob: -14.75004768371582
    7. '\[' → logprob: -15.75004768371582
    8. '`' → logprob: -16.00004768371582
    9. ' i' → logprob: -16.12504768371582
    10. '[
' → logprob: -16.25004768371582

Token 96: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.0011778471525758505
    2. ']' → logprob: -7.001177787780762
    3. '+' → logprob: -8.251177787780762
    4. ')+' → logprob: -12.501177787780762
    5. '}+' → logprob: -14.751177787780762
    6. ' ]' → logprob: -15.001177787780762
    7. ']+=' → logprob: -15.126177787780762
    8. '```' → logprob: -15.376177787780762
    9. ' +' → logprob: -15.751177787780762
    10. '1' → logprob: -15.876177787780762

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '100' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '2' → logprob: -16.375
    5. '6' → logprob: -17.875
    6. '10' → logprob: -18.5
    7. '7' → logprob: -18.75
    8. '111' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. '5' → logprob: -19.625

Token 98: '
' (ID: 198)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2020910531282425
    2. '           ' → logprob: -1.702091097831726
    3. ' q' → logprob: -7.452091217041016
    4. '	q' → logprob: -9.952091217041016
    5. '   ' → logprob: -10.202091217041016
    6. '       ' → logprob: -12.327091217041016
    7. '		' → logprob: -12.327091217041016
    8. '```' → logprob: -13.327091217041016
    9. ',q' → logprob: -13.702091217041016
    10. '               ' → logprob: -15.327091217041016

Token 99: '           ' (ID: 352)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1275823414325714
    2. '           ' → logprob: -2.127582311630249
    3. ' q' → logprob: -7.627582550048828
    4. '   ' → logprob: -8.877582550048828
    5. '	q' → logprob: -11.127582550048828
    6. '       ' → logprob: -12.002582550048828
    7. '```' → logprob: -12.252582550048828
    8. ',q' → logprob: -14.252582550048828
    9. '		' → logprob: -15.127582550048828
    10. '          ' → logprob: -15.252582550048828

Token 100: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -1.0280383548888494e-06
    2. ' q' → logprob: -14.250000953674316
    3. '           ' → logprob: -15.250000953674316
    4. '	q' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '```' → logprob: -19.375001907348633
    7. 'ql' → logprob: -20.250001907348633
    8. '       ' → logprob: -21.125001907348633
    9. 'qml' → logprob: -21.250001907348633
    10. '               ' → logprob: -21.500001907348633

Token 101: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.44312788406387e-05
    2. '.' → logprob: -9.875054359436035
    3. 'append' → logprob: -13.875054359436035
    4. '.extend' → logprob: -14.125054359436035
    5. '.enqueue' → logprob: -14.125054359436035
    6. '.app' → logprob: -15.500054359436035
    7. '.put' → logprob: -16.12505531311035
    8. '.Append' → logprob: -16.62505531311035
    9. '.py' → logprob: -17.25005531311035
    10. ' .' → logprob: -17.37505531311035

Token 102: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '((' → logprob: -17.625
    3. ' (' → logprob: -19.125
    4. 'left' → logprob: -19.875
    5. '```' → logprob: -20.25
    6. '(
' → logprob: -20.375
    7. '(n' → logprob: -20.375
    8. 'ni' → logprob: -21.0
    9. '(ne' → logprob: -21.25
    10. '(ii' → logprob: -21.625

Token 103: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. ' ni' → logprob: -16.3750057220459
    4. ')' → logprob: -18.3750057220459
    5. 'nii' → logprob: -19.6250057220459
    6. '```' → logprob: -19.6250057220459
    7. '-ni' → logprob: -19.8750057220459
    8. '   ' → logprob: -20.2500057220459
    9. 'n' → logprob: -20.6250057220459
    10. 'ни' → logprob: -21.3750057220459

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.000006675720215
    3. ')return' → logprob: -16.7500057220459
    4. ' )' → logprob: -17.0000057220459
    5. '<|end|>' → logprob: -17.5000057220459
    6. '))' → logprob: -17.6250057220459
    7. '）' → logprob: -18.0000057220459
    8. '```' → logprob: -18.5000057220459
    9. ')n' → logprob: -19.0000057220459
    10. ')#' → logprob: -19.1250057220459

Token 105: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47634556889533997
    2. ')' → logprob: -1.2263455390930176
    3. '<|end|>' → logprob: -2.7263455390930176
    4. '#' → logprob: -4.601345539093018
    5. '+' → logprob: -5.976345539093018
    6. 'for' → logprob: -6.476345539093018
    7. '\n' → logprob: -6.976345539093018
    8. ' ' → logprob: -7.226345539093018
    9. ' print' → logprob: -7.476345539093018
    10. '\' → logprob: -7.601345539093018

Token 106: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07933717966079712
    2. '(dist' → logprob: -2.8293371200561523
    3. '('' → logprob: -5.079337120056152
    4. '(sum' → logprob: -5.204337120056152
    5. '("' → logprob: -5.579337120056152
    6. '(max' → logprob: -7.204337120056152
    7. '(*' → logprob: -7.454337120056152
    8. '(len' → logprob: -8.454337120056152
    9. '()' → logprob: -9.204337120056152
    10. '("("' → logprob: -10.329337120056152

Token 107: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.8624639324116288e-06
    2. 'dist' → logprob: -13.625001907348633
    3. '(' → logprob: -14.375001907348633
    4. ' (' → logprob: -17.750001907348633
    5. ')' → logprob: -17.750001907348633
    6. '(distance' → logprob: -18.250001907348633
    7. '	dist' → logprob: -19.125001907348633
    8. ' dist' → logprob: -19.375001907348633
    9. '(d' → logprob: -19.625001907348633
    10. '_dist' → logprob: -20.000001907348633

Token 108: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038047339767217636
    2. ')' → logprob: -3.2880473136901855
    3. ')))' → logprob: -12.413047790527344
    4. '))
' → logprob: -13.913047790527344
    5. '()))' → logprob: -15.163047790527344
    6. '])' → logprob: -15.663047790527344
    7. '())' → logprob: -16.163047790527344
    8. '()' → logprob: -16.413047790527344
    9. ')}' → logprob: -16.538047790527344
    10. ')
' → logprob: -16.663047790527344


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 106
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 52.83%
Précision adaptée (1ère position): 57.55%
Précision (top 10): 88.68%
================================================================================
