================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
def cross(o, a, b):
    return (a[0]-o[0])*(b[1]-o[1]) - (a[1]-o[1])*(b[0]-o[0])

def convex_hull(points):
    points = sorted(points)
    lower, upper = [], []
    for p in points:
        while len(lower)>=2 and cross(lower[-2], lower[-1], p)<=0:
            lower.pop()
        lower.append(p)
    for p in reversed(points):
        while len(upper)>=2 and cross(upper[-2], upper[-1], p)<=0:
            upper.pop()
        upper.append(p)
    return lower[:-1]+upper[:-1]

for line in sys.stdin:
    n=line.strip()
    if not n.isdigit():
        continue
    n=int(n)
    if n==0:
        break
    pts=[]
    for _ in range(n):
        x,y=input().strip().split(',')
        pts.append((float(x),float(y)))
    hull=convex_hull(pts)
    hull_set=set(hull)
    print(n - len(hull_set))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. '\' → logprob: -7.151954174041748
    5. 'import' → logprob: -7.151954174041748
    6. 'newline' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' cross' (ID: 8088)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014825213700532913
    2. ' process' → logprob: -4.889825344085693
    3. ' ' → logprob: -6.014825344085693
    4. ' main' → logprob: -7.264825344085693
    5. ' func' → logprob: -7.264825344085693
    6. ' space' → logprob: -7.264825344085693
    7. ' my' → logprob: -8.139824867248535
    8. ' read' → logprob: -8.264824867248535
    9. ' function' → logprob: -8.514824867248535
    10. ' foo' → logprob: -8.764824867248535

Token 5: '(o' (ID: 18928)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003978073596954346
    2. ' _' → logprob: -5.878978252410889
    3. '_val' → logprob: -7.878978252410889
    4. '_validate' → logprob: -8.25397777557373
    5. '_import' → logprob: -9.00397777557373
    6. '_entropy' → logprob: -9.25397777557373
    7. '_:' → logprob: -10.00397777557373
    8. '_c' → logprob: -10.37897777557373
    9. '_ent' → logprob: -10.87897777557373
    10. '_product' → logprob: -11.00397777557373

Token 6: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1291283369064331
    2. ',' → logprob: -2.5041284561157227
    3. ',r' → logprob: -3.8791284561157227
    4. 'rd' → logprob: -4.629128456115723
    5. ' ,' → logprob: -5.879128456115723
    6. 'm' → logprob: -6.004128456115723
    7. ',p' → logprob: -6.129128456115723
    8. 'p' → logprob: -7.254128456115723
    9. ',m' → logprob: -8.379128456115723
    10. ',b' → logprob: -8.879128456115723

Token 7: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25471967458724976
    2. ' a' → logprob: -1.6297197341918945
    3. 'p' → logprob: -4.1297197341918945
    4. ' p' → logprob: -4.3797197341918945
    5. ' ' → logprob: -9.379719734191895
    6. 'b' → logprob: -9.754719734191895
    7. 'k' → logprob: -10.254719734191895
    8. 'c' → logprob: -10.879719734191895
    9. ',' → logprob: -11.004719734191895
    10. ' b' → logprob: -11.629719734191895

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007376811117865145
    2. ',b' → logprob: -7.50073766708374
    3. ' ,' → logprob: -8.625738143920898
    4. 'b' → logprob: -12.625738143920898
    5. ',p' → logprob: -13.500738143920898
    6. ',c' → logprob: -15.625738143920898
    7. 'r' → logprob: -16.2507381439209
    8. ',d' → logprob: -16.2507381439209
    9. ',r' → logprob: -16.3757381439209
    10. '_,' → logprob: -16.3757381439209

Token 9: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4741111695766449
    2. ' b' → logprob: -0.9741111993789673
    3. ' ' → logprob: -10.349111557006836
    4. 'd' → logprob: -14.599111557006836
    5. ' ' → logprob: -14.849111557006836
    6. 'r' → logprob: -15.224111557006836
    7. '	b' → logprob: -15.474111557006836
    8. 'p' → logprob: -16.224111557006836
    9. '  ' → logprob: -16.349111557006836
    10. 's' → logprob: -16.474111557006836

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007702099159359932
    2. ')' → logprob: -4.882701873779297
    3. ',' → logprob: -10.132701873779297
    4. '):
' → logprob: -10.382701873779297
    5. ' ):' → logprob: -11.257701873779297
    6. ''):' → logprob: -12.507701873779297
    7. ':' → logprob: -12.632701873779297
    8. ')：' → logprob: -13.882701873779297
    9. '):
' → logprob: -14.132701873779297
    10. '),' → logprob: -14.507701873779297

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6624708771705627
    2. '):' → logprob: -1.287470817565918
    3. ':' → logprob: -1.787470817565918
    4. '):
' → logprob: -3.412470817565918
    5. ',' → logprob: -6.287470817565918
    6. '```' → logprob: -6.412470817565918
    7. ':
' → logprob: -6.912470817565918
    8. '`:' → logprob: -7.412470817565918
    9. '':' → logprob: -7.537470817565918
    10. ' return' → logprob: -7.787470817565918

Token 12: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08128932118415833
    2. ' return' → logprob: -3.206289291381836
    3. ' ' → logprob: -4.081289291381836
    4. ':' → logprob: -4.831289291381836
    5. '    ' → logprob: -5.331289291381836
    6. 'return' (adapté à ' return') → logprob: -5.456289291381836
    7. '  ' → logprob: -6.706289291381836
    8. ' :' → logprob: -7.331289291381836
    9. ':return' → logprob: -7.456289291381836
    10. '```' → logprob: -8.706289291381836

Token 13: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02846582420170307
    2. '(o' → logprob: -4.278465747833252
    3. '(a' → logprob: -4.278465747833252
    4. '(' → logprob: -9.15346622467041
    5. ' ' → logprob: -9.27846622467041
    6. '(abs' → logprob: -9.65346622467041
    7. ' a' → logprob: -10.27846622467041
    8. 'a' → logprob: -11.02846622467041
    9. '  ' → logprob: -12.52846622467041
    10. '(n' → logprob: -12.65346622467041

Token 14: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00018518301658332348
    2. '(a' → logprob: -8.625185012817383
    3. ' a' → logprob: -12.250185012817383
    4. '   ' → logprob: -14.375185012817383
    5. '	a' → logprob: -15.750185012817383
    6. ' (' → logprob: -17.250185012817383
    7. ')a' → logprob: -17.250185012817383
    8. 'b' → logprob: -17.875185012817383
    9. 'x' → logprob: -18.000185012817383
    10. '  ' → logprob: -18.000185012817383

Token 15: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021528953686356544
    2. '.x' → logprob: -3.896528959274292
    3. 'x' → logprob: -7.021528720855713
    4. '.' → logprob: -9.771529197692871
    5. '[x' → logprob: -10.521529197692871
    6. '-' → logprob: -12.396529197692871
    7. ' x' → logprob: -13.771529197692871
    8. '[
' → logprob: -13.896529197692871
    9. ' ' → logprob: -14.021529197692871
    10. ' -' → logprob: -14.521529197692871

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '[' → logprob: -17.75
    4. '1' → logprob: -17.75
    5. 'x' → logprob: -18.5
    6. '
' → logprob: -19.125
    7. '   ' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. '０' → logprob: -20.5
    10. ']' → logprob: -20.5

Token 17: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6335528492927551
    2. '-' → logprob: -0.7585528492927551
    3. ')' → logprob: -8.133552551269531
    4. ' ' → logprob: -8.258552551269531
    5. '[' → logprob: -8.383552551269531
    6. ' ' → logprob: -9.133552551269531
    7. ' –' → logprob: -11.508552551269531
    8. '```' → logprob: -12.133552551269531
    9. ',' → logprob: -12.258552551269531
    10. '   ' → logprob: -12.383552551269531

Token 18: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0008295211009681225
    2. ' o' → logprob: -7.125829696655273
    3. '	o' → logprob: -10.625829696655273
    4. ')o' → logprob: -15.250829696655273
    5. ' ' → logprob: -15.750829696655273
    6. ''o' → logprob: -15.875829696655273
    7. '_o' → logprob: -16.750829696655273
    8. '{o' → logprob: -16.750829696655273
    9. ',o' → logprob: -17.125829696655273
    10. '=o' → logprob: -17.250829696655273

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.641841820150148e-05
    2. '0' → logprob: -10.62502670288086
    3. ' [' → logprob: -13.62502670288086
    4. '][' → logprob: -14.75002670288086
    5. ' ' → logprob: -15.37502670288086
    6. '\[' → logprob: -17.00002670288086
    7. ''[' → logprob: -17.50002670288086
    8. 'x' → logprob: -17.50002670288086
    9. '```' → logprob: -17.62502670288086
    10. '1' → logprob: -18.12502670288086

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -17.3750057220459
    4. '   ' → logprob: -19.3125057220459
    5. '০' → logprob: -19.3750057220459
    6. '٠' → logprob: -19.5625057220459
    7. '０' → logprob: -19.6875057220459
    8. '  ' → logprob: -20.3125057220459
    9. '[' → logprob: -20.4375057220459
    10. '```' → logprob: -20.6875057220459

Token 21: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029293224215507507
    2. ')*(' → logprob: -5.877929210662842
    3. ')*' → logprob: -9.3779296875
    4. ' )' → logprob: -10.2529296875
    5. '*)' → logprob: -14.0029296875
    6. '   ' → logprob: -14.0029296875
    7. '')' → logprob: -14.1279296875
    8. '`)' → logprob: -14.5029296875
    9. ')(' → logprob: -14.6279296875
    10. ')**' → logprob: -15.0029296875

Token 22: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.49508941173553467
    2. '*(' → logprob: -1.1200894117355347
    3. '*' → logprob: -2.870089530944824
    4. ')' → logprob: -5.620089530944824
    5. ')*(' → logprob: -5.620089530944824
    6. ' *(' → logprob: -8.870089530944824
    7. '```' → logprob: -10.495089530944824
    8. '(' → logprob: -10.870089530944824
    9. '`' → logprob: -10.870089530944824
    10. ']*(' → logprob: -10.995089530944824

Token 23: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016206118743866682
    2. ' b' → logprob: -8.875162124633789
    3. '(b' → logprob: -10.750162124633789
    4. '	b' → logprob: -14.625162124633789
    5. 'a' → logprob: -15.250162124633789
    6. '   ' → logprob: -17.50016212463379
    7. ')b' → logprob: -18.37516212463379
    8. ' (' → logprob: -19.75016212463379
    9. '(a' → logprob: -20.12516212463379
    10. '(' → logprob: -20.50016212463379

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.037835580878891e-05
    2. '1' → logprob: -10.25005054473877
    3. 'y' → logprob: -12.00005054473877
    4. '][' → logprob: -12.62505054473877
    5. ' [' → logprob: -13.00005054473877
    6. ''[' → logprob: -14.25005054473877
    7. '```' → logprob: -14.37505054473877
    8. '.' → logprob: -15.12505054473877
    9. '0' → logprob: -15.12505054473877
    10. '>[' → logprob: -15.50005054473877

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.75000286102295
    3. ' ' → logprob: -14.37500286102295
    4. '[' → logprob: -14.87500286102295
    5. '```' → logprob: -15.12500286102295
    6. ']' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.687501907348633
    8. '-' → logprob: -17.812501907348633
    9. '' → logprob: -18.562501907348633
    10. '
' → logprob: -18.625001907348633

Token 26: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18239030241966248
    2. ' -' → logprob: -1.8073903322219849
    3. ']-' → logprob: -6.807390213012695
    4. ')-' → logprob: -7.807390213012695
    5. '[' → logprob: -8.307390213012695
    6. '<|end|>' → logprob: -8.682390213012695
    7. '-o' → logprob: -9.057390213012695
    8. ')-(' → logprob: -9.057390213012695
    9. ')' → logprob: -9.307390213012695
    10. '-)' → logprob: -9.557390213012695

Token 27: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -2.339278580620885e-06
    2. '	o' → logprob: -13.500001907348633
    3. 'a' → logprob: -14.625001907348633
    4. ' o' → logprob: -14.875001907348633
    5. ' ' → logprob: -17.125001907348633
    6. '{o' → logprob: -17.625001907348633
    7. ')o' → logprob: -17.625001907348633
    8. '  ' → logprob: -17.750001907348633
    9. 'y' → logprob: -18.125001907348633
    10. ''o' → logprob: -18.375001907348633

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -12.875003814697266
    3. '1' → logprob: -14.000003814697266
    4. '][' → logprob: -15.625003814697266
    5. ' [' → logprob: -16.125003814697266
    6. '```' → logprob: -16.750003814697266
    7. ']' → logprob: -17.375003814697266
    8. ')' → logprob: -17.375003814697266
    9. '[
' → logprob: -17.625003814697266
    10. ')[' → logprob: -18.500003814697266

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030197695014066994
    2. '0' → logprob: -8.1253023147583
    3. '[' → logprob: -12.1253023147583
    4. '```' → logprob: -15.7503023147583
    5. ' ' → logprob: -16.125301361083984
    6. ']' → logprob: -16.250301361083984
    7. '   ' → logprob: -16.750301361083984
    8. '' → logprob: -17.187801361083984
    9. '	' → logprob: -17.687801361083984
    10. '3' → logprob: -17.875301361083984

Token 30: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007590038585476577
    2. ')-(' → logprob: -7.500759124755859
    3. ' )' → logprob: -9.00075912475586
    4. ')-' → logprob: -9.62575912475586
    5. '')' → logprob: -11.87575912475586
    6. '}' → logprob: -13.00075912475586
    7. '```' → logprob: -13.50075912475586
    8. ')}' → logprob: -14.00075912475586
    9. '")' → logprob: -14.37575912475586
    10. '-' → logprob: -14.50075912475586

Token 31: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6330677270889282
    2. '-' → logprob: -0.7580677270889282
    3. '-(' → logprob: -8.383068084716797
    4. ')' → logprob: -9.508068084716797
    5. ' -(' → logprob: -9.758068084716797
    6. ')-(' → logprob: -10.133068084716797
    7. '   ' → logprob: -10.508068084716797
    8. ' ' → logprob: -11.133068084716797
    9. '  ' → logprob: -12.133068084716797
    10. ' )' → logprob: -12.258068084716797

Token 32: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.018302464857697487
    2. '(a' → logprob: -4.0183024406433105
    3. '(b' → logprob: -10.018302917480469
    4. '   ' → logprob: -10.143302917480469
    5. '(o' → logprob: -10.268302917480469
    6. '(' → logprob: -10.393302917480469
    7. ' ' → logprob: -13.393302917480469
    8. '  ' → logprob: -13.893302917480469
    9. '(c' → logprob: -15.143302917480469
    10. '(s' → logprob: -15.643302917480469

Token 33: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02979990281164646
    2. '(a' → logprob: -3.5297999382019043
    3. ' a' → logprob: -10.904799461364746
    4. 'b' → logprob: -10.904799461364746
    5. 'o' → logprob: -11.654799461364746
    6. '(b' → logprob: -13.404799461364746
    7. ' (' → logprob: -13.529799461364746
    8. '(' → logprob: -15.029799461364746
    9. '	a' → logprob: -15.279799461364746
    10. ')a' → logprob: -15.404799461364746

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '<|end|>' → logprob: -16.625
    3. '1' → logprob: -17.25
    4. '<|end|>' → logprob: -17.875
    5. '[
' → logprob: -18.375
    6. '```' → logprob: -18.75
    7. '0' → logprob: -19.25
    8. 'Answer' → logprob: -20.0
    9. ''[' → logprob: -20.0
    10. ')[' → logprob: -20.125

Token 35: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22562193870544434
    2. '1' → logprob: -1.6006219387054443
    3. '[' → logprob: -8.475622177124023
    4. ' ' → logprob: -14.975622177124023
    5. '```' → logprob: -15.225622177124023
    6. '   ' → logprob: -16.975622177124023
    7. '' → logprob: -17.163122177124023
    8. '
' → logprob: -17.600622177124023
    9. '<|end|>' → logprob: -18.038122177124023
    10. '(' → logprob: -18.163122177124023

Token 36: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023825690150260925
    2. '-' → logprob: -3.7738256454467773
    3. '<|end|>' → logprob: -8.148825645446777
    4. ' -' → logprob: -8.273825645446777
    5. '<|end|>' → logprob: -11.273825645446777
    6. '][' → logprob: -12.398825645446777
    7. '```' → logprob: -12.773825645446777
    8. '-[' → logprob: -13.023825645446777
    9. ')[' → logprob: -13.023825645446777
    10. '0' → logprob: -13.523825645446777

Token 37: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -6.704273118884885e-07
    2. '<|end|>' → logprob: -14.500000953674316
    3. ' o' → logprob: -16.5
    4. '	o' → logprob: -17.375
    5. '<|end|>' → logprob: -18.75
    6. 'os' → logprob: -18.875
    7. '{o' → logprob: -20.0
    8. ''o' → logprob: -20.125
    9. '0' → logprob: -20.25
    10. '_o' → logprob: -20.25

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.674858301877975e-05
    2. '1' → logprob: -9.250096321105957
    3. ')[' → logprob: -15.250096321105957
    4. ')' → logprob: -15.625096321105957
    5. '[
' → logprob: -16.625097274780273
    6. '][' → logprob: -17.000097274780273
    7. '```' → logprob: -17.250097274780273
    8. ' [' → logprob: -17.250097274780273
    9. ']' → logprob: -17.750097274780273
    10. '0' → logprob: -18.250097274780273

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.250001907348633
    3. '0' → logprob: -14.500001907348633
    4. ']' → logprob: -15.750001907348633
    5. '' → logprob: -15.875001907348633
    6. ' ' → logprob: -16.125001907348633
    7. '<|end|>' → logprob: -16.125001907348633
    8. '

' → logprob: -17.125001907348633
    9. '<|end|>' → logprob: -17.375001907348633
    10. '```' → logprob: -17.625001907348633

Token 40: '])' (ID: 4636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30286481976509094
    2. ')' → logprob: -1.6778647899627686
    3. ')*(' → logprob: -2.9278647899627686
    4. '])' → logprob: -5.302865028381348
    5. '0' → logprob: -5.427865028381348
    6. '][' → logprob: -5.802865028381348
    7. ')*' → logprob: -5.927865028381348
    8. ')[' → logprob: -6.302865028381348
    9. '])*' → logprob: -6.302865028381348
    10. ')**' → logprob: -7.552865028381348

Token 41: '*(' (ID: 14793)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.033306416124105453
    2. '*(' → logprob: -3.533306360244751
    3. '(o' → logprob: -6.15830659866333
    4. '(' → logprob: -7.90830659866333
    5. 'b' → logprob: -8.158306121826172
    6. '*b' → logprob: -8.533306121826172
    7. '(a' → logprob: -8.783306121826172
    8. '*' → logprob: -8.783306121826172
    9. '[' → logprob: -8.908306121826172
    10. '[b' → logprob: -9.533306121826172

Token 42: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0280383548888494e-06
    2. ' b' → logprob: -13.875000953674316
    3. 'o' → logprob: -16.750001907348633
    4. ')b' → logprob: -17.000001907348633
    5. '(b' → logprob: -17.625001907348633
    6. '	b' → logprob: -18.375001907348633
    7. 'a' → logprob: -19.375001907348633
    8. '[b' → logprob: -20.250001907348633
    9. '<b' → logprob: -20.750001907348633
    10. ',b' → logprob: -21.000001907348633

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.036524842376821e-05
    2. '0' → logprob: -10.125040054321289
    3. '[
' → logprob: -17.12504005432129
    4. ')[' → logprob: -17.37504005432129
    5. 'import' → logprob: -17.50004005432129
    6. ' [' → logprob: -17.50004005432129
    7. '][' → logprob: -17.75004005432129
    8. '```' → logprob: -18.12504005432129
    9. ')' → logprob: -18.62504005432129
    10. ']' → logprob: -19.50004005432129

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.375001907348633
    3. ' ' → logprob: -16.500001907348633
    4. '1' → logprob: -17.062501907348633
    5. '۰' → logprob: -17.562501907348633
    6. '<|end|>' → logprob: -18.375001907348633
    7. '```' → logprob: -18.750001907348633
    8. '<|end|>' → logprob: -18.812501907348633
    9. ']' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.437501907348633

Token 45: ']-' (ID: 27107)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6561581492424011
    2. '0' → logprob: -1.531158208847046
    3. ']' → logprob: -1.531158208847046
    4. '[' → logprob: -3.281158208847046
    5. '-' → logprob: -4.781157970428467
    6. ']-' → logprob: -7.156157970428467
    7. '][' → logprob: -7.156157970428467
    8. ' ' → logprob: -8.156158447265625
    9. ')' → logprob: -8.406158447265625
    10. '])-' → logprob: -9.031158447265625

Token 46: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -2.117345684382599e-05
    2. '0' → logprob: -10.875020980834961
    3. ' o' → logprob: -13.750020980834961
    4. '	o' → logprob: -14.250020980834961
    5. ')o' → logprob: -15.750020980834961
    6. '[o' → logprob: -16.62502098083496
    7. '$o' → logprob: -16.62502098083496
    8. '{o' → logprob: -16.75002098083496
    9. 'о' → logprob: -17.25002098083496
    10. '```' → logprob: -17.87502098083496

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023131117632146925
    2. '0' → logprob: -8.500231742858887
    3. ']' → logprob: -11.125231742858887
    4. '][' → logprob: -11.625231742858887
    5. '[
' → logprob: -13.625231742858887
    6. '1' → logprob: -14.125231742858887
    7. '-' → logprob: -14.250231742858887
    8. ')' → logprob: -14.625231742858887
    9. '```' → logprob: -14.750231742858887
    10. ' [' → logprob: -15.375231742858887

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.500000953674316
    3. ' ' → logprob: -16.0625
    4. '   ' → logprob: -16.625
    5. '```' → logprob: -16.9375
    6. '1' → logprob: -17.25
    7. ']' → logprob: -17.625
    8. '``' → logprob: -17.9375
    9. '])' → logprob: -18.0
    10. '۰' → logprob: -18.0

Token 49: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4753578007221222
    2. ')' → logprob: -0.9753577709197998
    3. ']' → logprob: -6.975358009338379
    4. ')])' → logprob: -8.350358009338379
    5. ')]' → logprob: -9.850358009338379
    6. '])]' → logprob: -10.600358009338379
    7. '))' → logprob: -11.475358009338379
    8. ']))' → logprob: -11.600358009338379
    9. '})' → logprob: -12.225358009338379
    10. '）' → logprob: -13.225358009338379

Token 50: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35106950998306274
    2. 'def' → logprob: -1.226069450378418
    3. 'd' → logprob: -6.976069450378418
    4. '```' → logprob: -7.476069450378418
    5. '\' → logprob: -8.101069450378418
    6. ' 
' → logprob: -8.476069450378418
    7. '

' → logprob: -8.601069450378418
    8. '\n' → logprob: -8.976069450378418
    9. '    
' → logprob: -9.226069450378418
    10. '  
' → logprob: -9.601069450378418

Token 51: ' convex' (ID: 142423)
  Prédit: ' convex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.0030736178159713745
    2. ' monot' → logprob: -6.253073692321777
    3. 'conv' → logprob: -7.378073692321777
    4. ' conv' → logprob: -8.878073692321777
    5. ' main' → logprob: -9.253073692321777
    6. ' gra' → logprob: -10.128073692321777
    7. ' compute' → logprob: -10.253073692321777
    8. ' polygon' → logprob: -10.378073692321777
    9. '```' → logprob: -10.503073692321777
    10. ' conc' → logprob: -10.628073692321777

Token 52: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -2.165027217415627e-05
    2. '_' → logprob: -11.500021934509277
    3. 'h' → logprob: -11.875021934509277
    4. '_polygon' → logprob: -12.875021934509277
    5. '_layer' → logprob: -14.875021934509277
    6. '_point' → logprob: -15.750021934509277
    7. '_hint' → logprob: -15.750021934509277
    8. 'Hull' → logprob: -15.750021934509277
    9. '(h' → logprob: -15.875021934509277
    10. '_lower' → logprob: -16.25002098083496

Token 53: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -9.412610233994201e-05
    2. 'ul' → logprob: -10.125094413757324
    3. '_' → logprob: -10.625094413757324
    4. ' ull' → logprob: -12.250094413757324
    5. '(' → logprob: -12.625094413757324
    6. '```' → logprob: -12.875094413757324
    7. '   ' → logprob: -13.125094413757324
    8. 'ulls' → logprob: -13.125094413757324
    9. 'a' → logprob: -13.250094413757324
    10. 'u' → logprob: -13.875094413757324

Token 54: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.004386321175843477
    2. '(' → logprob: -5.6293864250183105
    3. '(point' → logprob: -7.7543864250183105
    4. '(Point' → logprob: -9.504385948181152
    5. '(coords' → logprob: -9.629385948181152
    6. '(p' → logprob: -9.754385948181152
    7. '(lst' → logprob: -10.504385948181152
    8. '(P' → logprob: -11.379385948181152
    9. '(vertices' → logprob: -11.379385948181152
    10. '(nums' → logprob: -11.504385948181152

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021867557370569557
    2. ':' → logprob: -9.125218391418457
    3. ']:' → logprob: -9.875218391418457
    4. ')' → logprob: -10.125218391418457
    5. '[]):' → logprob: -11.875218391418457
    6. '):
' → logprob: -12.000218391418457
    7. ' ):' → logprob: -13.500218391418457
    8. '   ' → logprob: -13.875218391418457
    9. '}:' → logprob: -14.250218391418457
    10. '[' → logprob: -14.500218391418457

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02478068694472313
    2. ' points' → logprob: -3.899780750274658
    3. ':' → logprob: -6.774780750274658
    4. '(points' → logprob: -6.899780750274658
    5. '    ' → logprob: -7.774780750274658
    6. '	points' → logprob: -7.774780750274658
    7. 'points' → logprob: -7.899780750274658
    8. ' sorted' → logprob: -8.3997802734375
    9. ' if' → logprob: -8.6497802734375
    10. '_points' → logprob: -9.0247802734375

Token 57: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.47839993238449097
    2. 'points' (adapté à ' points') → logprob: -0.978399932384491
    3. '   ' → logprob: -5.853399753570557
    4. '#' → logprob: -6.728399753570557
    5. ' #' → logprob: -9.103400230407715
    6. ' if' → logprob: -9.353400230407715
    7. '	points' → logprob: -10.478400230407715
    8. '```' → logprob: -12.228400230407715
    9. ' sorted' → logprob: -12.353400230407715
    10. '(points' → logprob: -12.728400230407715

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06920186430215836
    2. ' =' → logprob: -3.444201946258545
    3. '.sort' → logprob: -3.694201946258545
    4. '.' → logprob: -4.694201946258545
    5. '[:]' → logprob: -8.069201469421387
    6. '_sorted' → logprob: -8.444201469421387
    7. 'sorted' → logprob: -8.819201469421387
    8. '.=' → logprob: -9.069201469421387
    9. '.sorted' → logprob: -10.569201469421387
    10. '=.' → logprob: -11.069201469421387

Token 59: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.4740792512893677
    2. 'sorted' → logprob: -0.9740792512893677
    3. '(sorted' → logprob: -14.224079132080078
    4. '   ' → logprob: -14.474079132080078
    5. 's' → logprob: -14.849079132080078
    6. '.sorted' → logprob: -15.099079132080078
    7. ' list' → logprob: -15.349079132080078
    8. 'list' → logprob: -16.724079132080078
    9. ' ' → logprob: -16.974079132080078
    10. ' ' → logprob: -17.349079132080078

Token 60: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.5048530030981055e-06
    2. '(set' → logprob: -14.125001907348633
    3. '(' → logprob: -14.500001907348633
    4. 'points' → logprob: -16.625001907348633
    5. ' points' → logprob: -17.625001907348633
    6. '	points' → logprob: -17.625001907348633
    7. '(point' → logprob: -18.125001907348633
    8. ' (' → logprob: -18.375001907348633
    9. '_points' → logprob: -19.500001907348633
    10. '(list' → logprob: -20.125001907348633

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006737126968801022
    2. ',key' → logprob: -8.000673294067383
    3. '())' → logprob: -8.250673294067383
    4. ')set' → logprob: -10.875673294067383
    5. '(key' → logprob: -10.875673294067383
    6. '()' → logprob: -11.500673294067383
    7. ' )' → logprob: -11.750673294067383
    8. ',' → logprob: -11.750673294067383
    9. '))' → logprob: -12.625673294067383
    10. ')#' → logprob: -13.000673294067383

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5503777265548706
    2. '   ' → logprob: -1.5503777265548706
    3. ':' → logprob: -1.9253777265548706
    4. '    
' → logprob: -2.17537784576416
    5. '<|end|>' → logprob: -2.30037784576416
    6. '#' → logprob: -3.05037784576416
    7. '[::-' → logprob: -4.05037784576416
    8. '_' → logprob: -4.42537784576416
    9. '[:-' → logprob: -4.42537784576416
    10. '	
' → logprob: -4.67537784576416

Token 63: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -0.2461099773645401
    2. '#' → logprob: -2.871109962463379
    3. ' lower' → logprob: -2.871109962463379
    4. 'h' → logprob: -2.871109962463379
    5. 'n' → logprob: -3.496109962463379
    6. '   ' → logprob: -5.621109962463379
    7. ' n' → logprob: -5.746109962463379
    8. 'upper' → logprob: -5.996109962463379
    9. ' hull' → logprob: -6.121109962463379
    10. ' ' → logprob: -6.746109962463379

Token 64: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09621639549732208
    2. '=' → logprob: -2.9712164402008057
    3. '=[]' → logprob: -3.2212164402008057
    4. '[:]' → logprob: -8.846216201782227
    5. '[]' → logprob: -8.971216201782227
    6. '_' → logprob: -9.096216201782227
    7. ' ' → logprob: -9.221216201782227
    8. '.append' → logprob: -11.221216201782227
    9. '=[]
' → logprob: -11.346216201782227
    10. '=[]
' → logprob: -11.471216201782227

Token 65: ' upper' (ID: 13057)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3291167616844177
    2. 'upper' → logprob: -1.5791168212890625
    3. ' []' → logprob: -3.0791168212890625
    4. ' upper' → logprob: -3.5791168212890625
    5. '=[]' → logprob: -8.829116821289062
    6. ' ' → logprob: -10.079116821289062
    7. '[:]' → logprob: -10.204116821289062
    8. '[]=' → logprob: -10.704116821289062
    9. '   ' → logprob: -10.704116821289062
    10. '[' → logprob: -10.954116821289062

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009758567437529564
    2. '=' → logprob: -4.634758472442627
    3. '=[]' → logprob: -13.259758949279785
    4. ' ' → logprob: -14.259758949279785
    5. ',' → logprob: -16.13475799560547
    6. ')' → logprob: -16.38475799560547
    7. '[]' → logprob: -17.13475799560547
    8. ' ' → logprob: -18.13475799560547
    9. '  ' → logprob: -18.13475799560547
    10. '   ' → logprob: -18.38475799560547

Token 67: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.04102058336138725
    2. ' [],' → logprob: -3.791020631790161
    3. '[]' → logprob: -4.041020393371582
    4. ' []' → logprob: -10.416020393371582
    5. '[' → logprob: -12.291020393371582
    6. ' ' → logprob: -13.541020393371582
    7. '[],
' → logprob: -13.666020393371582
    8. ',' → logprob: -14.541020393371582
    9. '[]
' → logprob: -14.666020393371582
    10. '   ' → logprob: -15.541020393371582

Token 68: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5759422183036804
    2. ' []' → logprob: -0.8259422183036804
    3. '[]}' → logprob: -13.700942039489746
    4. '[])' → logprob: -14.700942039489746
    5. '[]>' → logprob: -14.825942039489746
    6. '[]
' → logprob: -15.200942039489746
    7. '[]

' → logprob: -15.825942039489746
    8. ' ' → logprob: -16.075942993164062
    9. '[],' → logprob: -16.200942993164062
    10. ' []
' → logprob: -16.450942993164062

Token 69: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8726656436920166
    2. 'for' → logprob: -0.8726656436920166
    3. '   ' → logprob: -1.8726656436920166
    4. '
' → logprob: -4.9976654052734375
    5. '    
' → logprob: -6.4976654052734375
    6. ' 
' → logprob: -6.7476654052734375
    7. '  
' → logprob: -7.6226654052734375
    8. '<|end|>' → logprob: -8.372665405273438
    9. ' ' → logprob: -8.997665405273438
    10. '	for' → logprob: -9.372665405273438

Token 70: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1777782291173935
    2. ' for' → logprob: -1.9277782440185547
    3. '   ' → logprob: -4.052778244018555
    4. '    
' → logprob: -10.927778244018555
    5. ' 
' → logprob: -12.552778244018555
    6. '	for' → logprob: -13.802778244018555
    7. '
' → logprob: -13.927778244018555
    8. ' ' → logprob: -13.927778244018555
    9. '```' → logprob: -14.052778244018555
    10. '  ' → logprob: -14.802778244018555

Token 71: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3868859112262726
    2. ' p' → logprob: -1.1368858814239502
    3. 'point' → logprob: -11.761885643005371
    4. ' point' → logprob: -12.886885643005371
    5. 'pt' → logprob: -12.886885643005371
    6. '   ' → logprob: -13.886885643005371
    7. ' pt' → logprob: -14.886885643005371
    8. '	p' → logprob: -15.136885643005371
    9. '```' → logprob: -15.511885643005371
    10. ' ' → logprob: -15.511885643005371

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025344020687043667
    2. 'in' → logprob: -6.12753438949585
    3. ' ' → logprob: -8.002534866333008
    4. '  ' → logprob: -11.752534866333008
    5. 'n' → logprob: -13.877534866333008
    6. ' i' → logprob: -14.002534866333008
    7. ' ' → logprob: -14.252534866333008
    8. '   ' → logprob: -14.377534866333008
    9. ')' → logprob: -14.502534866333008
    10. '	in' → logprob: -14.627534866333008

Token 73: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.079073965549469
    2. ' points' → logprob: -2.579073905944824
    3. 'oints' → logprob: -8.954073905944824
    4. '(points' → logprob: -10.329073905944824
    5. '	points' → logprob: -10.829073905944824
    6. '.points' → logprob: -13.579073905944824
    7. ' ' → logprob: -14.829073905944824
    8. '_points' → logprob: -15.079073905944824
    9. 'p' → logprob: -15.579073905944824
    10. '   ' → logprob: -15.829073905944824

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.170270353322849e-05
    2. ' :' → logprob: -9.875061988830566
    3. ':
' → logprob: -11.875061988830566
    4. '):' → logprob: -13.125061988830566
    5. ':**' → logprob: -14.625061988830566
    6. '>:' → logprob: -15.625061988830566
    7. ',' → logprob: -16.37506103515625
    8. ',:' → logprob: -16.50006103515625
    9. '():' → logprob: -16.87506103515625
    10. 's' → logprob: -16.87506103515625

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055755313485860825
    2. ' while' → logprob: -3.555755376815796
    3. '    ' → logprob: -4.555755138397217
    4. '        
' → logprob: -5.180755138397217
    5. '   ' → logprob: -5.680755138397217
    6. ' ' → logprob: -6.430755138397217
    7. ' if' → logprob: -6.430755138397217
    8. ' 
' → logprob: -7.305755138397217
    9. '        ' → logprob: -7.680755138397217
    10. '    
' → logprob: -8.055755615234375

Token 76: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.02098114974796772
    2. 'while' (adapté à ' while') → logprob: -3.8959810733795166
    3. '       ' → logprob: -8.520980834960938
    4. '	while' → logprob: -9.145980834960938
    5. '   ' → logprob: -9.895980834960938
    6. '    ' → logprob: -10.270980834960938
    7. 'While' → logprob: -11.270980834960938
    8. '        
' → logprob: -11.770980834960938
    9. ' While' → logprob: -11.895980834960938
    10. ' 
' → logprob: -11.895980834960938

Token 77: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.13129965960979462
    2. ' lower' → logprob: -2.1312997341156006
    3. 'len' → logprob: -6.2562994956970215
    4. 'lower' → logprob: -6.2562994956970215
    5. ' upper' → logprob: -7.8812994956970215
    6. '(len' → logprob: -9.50629997253418
    7. '(lower' → logprob: -10.25629997253418
    8. ' ' → logprob: -10.63129997253418
    9. 'upper' → logprob: -12.00629997253418
    10. '	len' → logprob: -12.38129997253418

Token 78: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.001096403575502336
    2. '(' → logprob: -6.876096248626709
    3. 'lower' → logprob: -10.251096725463867
    4. ' lower' → logprob: -10.501096725463867
    5. ' (' → logprob: -14.626096725463867
    6. '(low' → logprob: -15.501096725463867
    7. '.lower' → logprob: -16.751096725463867
    8. ' ' → logprob: -17.251096725463867
    9. '(l' → logprob: -17.876096725463867
    10. '_lower' → logprob: -18.251096725463867

Token 79: ')>=' (ID: 173043)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.5536069869995117
    2. '>=' → logprob: -1.5536069869995117
    3. ')>=' → logprob: -1.5536069869995117
    4. '>' → logprob: -1.6786069869995117
    5. ')' → logprob: -2.5536069869995117
    6. ' >' → logprob: -2.9286069869995117
    7. ')>' → logprob: -3.9286069869995117
    8. ' and' → logprob: -4.428606986999512
    9. 'and' → logprob: -4.803606986999512
    10. '<|end|>' → logprob: -5.678606986999512

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020413640595506877
    2. ' ' → logprob: -8.500204086303711
    3. '

' → logprob: -16.12520408630371
    4. '```' → logprob: -16.43770408630371
    5. '   ' → logprob: -16.56270408630371
    6. '>' → logprob: -17.06270408630371
    7. '
' → logprob: -17.18770408630371
    8. '۲' → logprob: -17.18770408630371
    9. '２' → logprob: -17.37520408630371
    10. '  ' → logprob: -17.43770408630371

Token 81: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07890421897172928
    2. 'and' → logprob: -2.578904151916504
    3. ' ' → logprob: -11.828904151916504
    4. '    ' → logprob: -12.328904151916504
    5. '   ' → logprob: -13.828904151916504
    6. '	and' → logprob: -14.578904151916504
    7. '        ' → logprob: -14.828904151916504
    8. ' ' → logprob: -15.328904151916504
    9. '  ' → logprob: -15.578904151916504
    10. ' и' → logprob: -16.45390510559082

Token 82: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.054888833314180374
    2. 'cross' → logprob: -2.9298887252807617
    3. '   ' → logprob: -13.054888725280762
    4. ' ' → logprob: -13.179888725280762
    5. 'c' → logprob: -14.179888725280762
    6. '  ' → logprob: -14.804888725280762
    7. '	c' → logprob: -15.054888725280762
    8. '.cross' → logprob: -15.054888725280762
    9. '_cross' → logprob: -15.429888725280762
    10. '0' → logprob: -15.929888725280762

Token 83: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -11.000021934509277
    3. 'lower' → logprob: -13.125021934509277
    4. '(low' → logprob: -13.125021934509277
    5. ' lower' → logprob: -14.000021934509277
    6. '.lower' → logprob: -15.750021934509277
    7. '(len' → logprob: -18.62502098083496
    8. ' (' → logprob: -19.00002098083496
    9. '(l' → logprob: -19.00002098083496
    10. '_lower' → logprob: -19.25002098083496

Token 84: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00037621514638885856
    2. '-' → logprob: -8.000375747680664
    3. '(-' → logprob: -10.500375747680664
    4. '   ' → logprob: -13.000375747680664
    5. '][-' → logprob: -13.000375747680664
    6. ' -' → logprob: -13.125375747680664
    7. '```' → logprob: -13.500375747680664
    8. '[' → logprob: -13.625375747680664
    9. '
' → logprob: -13.750375747680664
    10. '[len' → logprob: -14.000375747680664

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.500007629394531
    3. '1' → logprob: -12.875007629394531
    4. '-' → logprob: -15.375007629394531
    5. '   ' → logprob: -15.375007629394531
    6. '

' → logprob: -15.562507629394531
    7. '```' → logprob: -15.625007629394531
    8. '２' → logprob: -16.12500762939453
    9. '  ' → logprob: -16.62500762939453
    10. '(' → logprob: -17.00000762939453

Token 86: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010151672904612496
    2. ' ,' → logprob: -9.750101089477539
    3. '],' → logprob: -10.250101089477539
    4. '‌,' → logprob: -12.750101089477539
    5. '<|end|>' → logprob: -13.375101089477539
    6. '>,' → logprob: -13.875101089477539
    7. ',line' → logprob: -15.000101089477539
    8. ']' → logprob: -15.125101089477539
    9. ' ' → logprob: -15.250101089477539
    10. ',p' → logprob: -15.500101089477539

Token 87: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.018167614936828613
    2. ' lower' → logprob: -4.018167495727539
    3. '(lower' → logprob: -11.393167495727539
    4. '.lower' → logprob: -12.018167495727539
    5. '<|end|>' → logprob: -15.018167495727539
    6. ' ' → logprob: -17.14316749572754
    7. '_lower' → logprob: -17.39316749572754
    8. ')' → logprob: -18.26816749572754
    9. 'Lower' → logprob: -18.26816749572754
    10. 'upper' → logprob: -18.76816749572754

Token 88: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3134044408798218
    2. '-' → logprob: -1.3134044408798218
    3. '2' → logprob: -10.063404083251953
    4. '][-' → logprob: -10.688404083251953
    5. '(-' → logprob: -10.813404083251953
    6. '[' → logprob: -11.313404083251953
    7. '<|end|>' → logprob: -11.563404083251953
    8. ' -' → logprob: -11.813404083251953
    9. '1' → logprob: -12.688404083251953
    10. '<|end|>' → logprob: -13.188404083251953

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4153549020411447e-05
    2. '2' → logprob: -11.00002384185791
    3. ' ' → logprob: -14.18752384185791
    4. '   ' → logprob: -14.25002384185791
    5. '```' → logprob: -14.25002384185791
    6. '{' → logprob: -15.00002384185791
    7. '

' → logprob: -15.06252384185791
    8. '۱' → logprob: -15.06252384185791
    9. '  ' → logprob: -15.18752384185791
    10. '[' → logprob: -15.43752384185791

Token 90: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003336777735967189
    2. ' ,' → logprob: -8.125333786010742
    3. ',p' → logprob: -10.875333786010742
    4. '),' → logprob: -11.500333786010742
    5. '],' → logprob: -12.375333786010742
    6. 'p' → logprob: -13.375333786010742
    7. '‌,' → logprob: -14.375333786010742
    8. '},' → logprob: -14.500333786010742
    9. '>,' → logprob: -14.750333786010742
    10. ')' → logprob: -14.875333786010742

Token 91: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.47407716512680054
    2. 'p' → logprob: -0.9740771651268005
    3. ')p' → logprob: -16.099077224731445
    4. '(p' → logprob: -17.474077224731445
    5. '	p' → logprob: -17.599077224731445
    6. ')' → logprob: -17.724077224731445
    7. '<p' → logprob: -18.224077224731445
    8. ''p' → logprob: -19.099077224731445
    9. ' ' → logprob: -19.224077224731445
    10. ' ' → logprob: -19.599077224731445

Token 92: ')<=' (ID: 176862)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009925569174811244
    2. ')<' → logprob: -7.125992774963379
    3. ')<=' → logprob: -8.625992774963379
    4. ' )' → logprob: -12.125992774963379
    5. ')>=' → logprob: -12.875992774963379
    6. ')>' → logprob: -14.375992774963379
    7. ')
' → logprob: -16.875991821289062
    8. '）' → logprob: -17.250991821289062
    9. ')`' → logprob: -17.250991821289062
    10. ')\' → logprob: -18.625991821289062

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '  ' → logprob: -18.628177642822266
    4. '   ' → logprob: -20.628177642822266
    5. '۰' → logprob: -20.878177642822266
    6. ' ' → logprob: -22.003177642822266
    7. '```' → logprob: -22.378177642822266
    8. '<|end|>' → logprob: -23.128177642822266
    9. '_' → logprob: -24.128177642822266
    10. '０' → logprob: -24.190677642822266

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0089926952496171
    2. ':
' → logprob: -4.758992671966553
    3. '):' → logprob: -8.758993148803711
    4. '):
' → logprob: -9.133993148803711
    5. ')' → logprob: -10.258993148803711
    6. ' :' → logprob: -10.383993148803711
    7. '       ' → logprob: -11.133993148803711
    8. '   ' → logprob: -11.258993148803711
    9. ' :
' → logprob: -12.258993148803711
    10. ':
' → logprob: -12.258993148803711

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38015106320381165
    2. '       ' → logprob: -1.8801510334014893
    3. ' lower' → logprob: -1.8801510334014893
    4. 'lower' → logprob: -5.505151271820068
    5. '    ' → logprob: -6.630151271820068
    6. '   ' → logprob: -7.130151271820068
    7. '        ' → logprob: -7.255151271820068
    8. '        
' → logprob: -7.380151271820068
    9. '.lower' → logprob: -7.380151271820068
    10. ' ' → logprob: -7.630151271820068

Token 96: ' lower' (ID: 6931)
  Prédit: ' lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.008619066327810287
    2. 'lower' (adapté à ' lower') → logprob: -4.7586188316345215
    3. '.lower' → logprob: -12.75861930847168
    4. '(lower' → logprob: -13.88361930847168
    5. '
' → logprob: -15.00861930847168
    6. '           ' → logprob: -15.75861930847168
    7. '_lower' → logprob: -16.38361930847168
    8. '            ' → logprob: -16.75861930847168
    9. '    ' → logprob: -17.38361930847168
    10. 'Lower' → logprob: -17.38361930847168

Token 97: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00043102685594931245
    2. '.' → logprob: -7.750431060791016
    3. 'pop' → logprob: -16.125431060791016
    4. ' .' → logprob: -16.375431060791016
    5. '.p' → logprob: -18.000431060791016
    6. '	pop' → logprob: -18.250431060791016
    7. '.Pop' → logprob: -18.375431060791016
    8. '​.' → logprob: -18.750431060791016
    9. '>.' → logprob: -19.125431060791016
    10. ').' → logprob: -19.250431060791016

Token 98: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0564331205387134e-05
    2. '()
' → logprob: -11.62501049041748
    3. '()

' → logprob: -13.62501049041748
    4. '(' → logprob: -16.750011444091797
    5. '()]' → logprob: -16.875011444091797
    6. '()`' → logprob: -17.000011444091797
    7. '()
' → logprob: -17.125011444091797
    8. '())' → logprob: -17.250011444091797
    9. ' ()' → logprob: -17.375011444091797
    10. '()\' → logprob: -17.750011444091797

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008598973974585533
    2. '        
' → logprob: -5.133598804473877
    3. ' 
' → logprob: -7.258598804473877
    4. '    
' → logprob: -7.508598804473877
    5. '
' → logprob: -7.758598804473877
    6. '  
' → logprob: -8.008599281311035
    7. '   
' → logprob: -9.008599281311035
    8. '   ' → logprob: -9.133599281311035
    9. '	' → logprob: -9.133599281311035
    10. '       
' → logprob: -9.508599281311035

Token 100: ' lower' (ID: 6931)
  Prédit: ' lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.3256385326385498
    2. '       ' → logprob: -1.5756385326385498
    3. 'lower' (adapté à ' lower') → logprob: -2.70063853263855
    4. '   ' → logprob: -5.700638771057129
    5. '.lower' → logprob: -8.700638771057129
    6. '(lower' → logprob: -8.825638771057129
    7. '        
' → logprob: -9.700638771057129
    8. '	' → logprob: -10.075638771057129
    9. '      ' → logprob: -10.450638771057129
    10. ' ' → logprob: -10.700638771057129

Token 101: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00022773505770601332
    2. '.' → logprob: -8.500227928161621
    3. ' .' → logprob: -11.000227928161621
    4. '.app' → logprob: -12.625227928161621
    5. '.push' → logprob: -13.250227928161621
    6. '.ap' → logprob: -13.750227928161621
    7. '   ' → logprob: -15.250227928161621
    8. '.extend' → logprob: -15.250227928161621
    9. '.py' → logprob: -15.625227928161621
    10. '.add' → logprob: -15.750227928161621

Token 102: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001234428636962548
    2. '(' → logprob: -9.000123023986816
    3. ' (' → logprob: -18.125123977661133
    4. '(
' → logprob: -18.375123977661133
    5. '((' → logprob: -19.125123977661133
    6. '(P' → logprob: -20.250123977661133
    7. '()' → logprob: -20.500123977661133
    8. 'p' → logprob: -20.875123977661133
    9. '(x' → logprob: -21.875123977661133
    10. '(pl' → logprob: -22.125123977661133

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0298018716275692
    2. ')
' → logprob: -3.529801845550537
    3. '   ' → logprob: -10.029802322387695
    4. ' )' → logprob: -12.529802322387695
    5. ')

' → logprob: -13.529802322387695
    6. ')
' → logprob: -13.529802322387695
    7. ' )
' → logprob: -15.029802322387695
    8. ' ' → logprob: -16.154802322387695
    9. ')n' → logprob: -16.279802322387695
    10. ')return' → logprob: -16.404802322387695

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011580472812056541
    2. ' for' → logprob: -4.636580467224121
    3. 'for' → logprob: -6.386580467224121
    4. '
' → logprob: -9.511580467224121
    5. '    
' → logprob: -9.886580467224121
    6. '	for' → logprob: -11.636580467224121
    7. '  
' → logprob: -13.886580467224121
    8. ' 
' → logprob: -14.136580467224121
    9. '```' → logprob: -14.136580467224121
    10. '<|end|>' → logprob: -14.261580467224121

Token 105: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48044559359550476
    2. 'for' (adapté à ' for') → logprob: -0.9804456233978271
    3. '   ' → logprob: -5.105445384979248
    4. '
' → logprob: -9.105445861816406
    5. ' ' → logprob: -9.230445861816406
    6. '	for' → logprob: -9.730445861816406
    7. '    
' → logprob: -11.605445861816406
    8. ' 
' → logprob: -12.480445861816406
    9. '  
' → logprob: -13.730445861816406
    10. '  ' → logprob: -14.355445861816406

Token 106: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1002068892121315
    2. ' p' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.60020637512207
    4. '_p' → logprob: -16.72520637512207
    5. '	p' → logprob: -16.72520637512207
    6. '   ' → logprob: -17.85020637512207
    7. 'reverse' → logprob: -17.85020637512207
    8. ' reversed' → logprob: -18.10020637512207
    9. 'q' → logprob: -18.47520637512207
    10. 'pt' → logprob: -19.22520637512207

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02986711636185646
    2. 'in' → logprob: -3.529867172241211
    3. 'points' → logprob: -9.654867172241211
    4. ' points' → logprob: -9.904867172241211
    5. ' ' → logprob: -13.654867172241211
    6. '   ' → logprob: -14.654867172241211
    7. '(points' → logprob: -14.779867172241211
    8. 's' → logprob: -15.279867172241211
    9. 'oints' → logprob: -15.654867172241211
    10. '  ' → logprob: -17.02986717224121

Token 108: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.016329484060406685
    2. 'points' → logprob: -4.516329288482666
    3. ' reversed' → logprob: -5.266329288482666
    4. ' points' → logprob: -9.266329765319824
    5. '   ' → logprob: -11.891329765319824
    6. 'reverse' → logprob: -13.016329765319824
    7. '(re' → logprob: -14.516329765319824
    8. '[::-' → logprob: -15.016329765319824
    9. 'rev' → logprob: -15.516329765319824
    10. '	re' → logprob: -15.516329765319824

Token 109: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: 0.0
    2. 'points' → logprob: -17.5
    3. ' points' → logprob: -18.25
    4. '	points' → logprob: -19.625
    5. '(parts' → logprob: -21.125
    6. '(' → logprob: -21.75
    7. '_points' → logprob: -22.625
    8. 'Points' → logprob: -22.75
    9. '(sorted' → logprob: -22.75
    10. '.points' → logprob: -23.125

Token 110: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12777487933635712
    2. '):' → logprob: -2.127774953842163
    3. '   ' → logprob: -7.252774715423584
    4. '       ' → logprob: -9.502775192260742
    5. '):
' → logprob: -11.002775192260742
    6. ')' → logprob: -11.127775192260742
    7. ':' → logprob: -11.252775192260742
    8. ' ):
' → logprob: -11.502775192260742
    9. ':
' → logprob: -12.502775192260742
    10. ' ):' → logprob: -13.252775192260742

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002883214270696044
    2. ' while' → logprob: -6.502883434295654
    3. 'while' → logprob: -6.752883434295654
    4. '   ' → logprob: -8.502882957458496
    5. '	while' → logprob: -13.002882957458496
    6. '    ' → logprob: -13.127882957458496
    7. '     ' → logprob: -13.252882957458496
    8. ' ' → logprob: -13.752882957458496
    9. '      ' → logprob: -14.127882957458496
    10. '	' → logprob: -14.127882957458496

Token 112: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4768032133579254
    2. 'while' (adapté à ' while') → logprob: -0.976803183555603
    3. '       ' → logprob: -6.101803302764893
    4. '   ' → logprob: -7.726803302764893
    5. '	while' → logprob: -10.851802825927734
    6. ' ' → logprob: -11.101802825927734
    7. '    ' → logprob: -12.226802825927734
    8. '  ' → logprob: -13.601802825927734
    9. 'While' → logprob: -13.976802825927734
    10. '     ' → logprob: -14.101802825927734

Token 113: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.029856937006115913
    2. 'len' → logprob: -3.5298569202423096
    3. '(len' → logprob: -9.15485668182373
    4. '[len' → logprob: -14.40485668182373
    5. ' ' → logprob: -16.529857635498047
    6. '	len' → logprob: -16.529857635498047
    7. '=len' → logprob: -17.154857635498047
    8. '<len' → logprob: -17.154857635498047
    9. ',len' → logprob: -18.404857635498047
    10. '   ' → logprob: -19.029857635498047

Token 114: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. 'upper' → logprob: -16.5
    3. '(lower' → logprob: -17.0
    4. '>' → logprob: -18.625
    5. '.upper' → logprob: -19.375
    6. ' (' → logprob: -19.875
    7. ' upper' → logprob: -19.875
    8. '<|end|>' → logprob: -19.875
    9. '(up' → logprob: -20.125
    10. '>(' → logprob: -20.5

Token 115: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.38703060150146484
    2. '(' → logprob: -1.1370306015014648
    3. ' upper' → logprob: -8.762030601501465
    4. '.upper' → logprob: -13.512030601501465
    5. 'uper' → logprob: -14.762030601501465
    6. '[' → logprob: -15.637030601501465
    7. 'uppercase' → logprob: -15.762030601501465
    8. 'lower' → logprob: -15.762030601501465
    9. '_upper' → logprob: -16.01203155517578
    10. '>' → logprob: -16.26203155517578

Token 116: ')>=' (ID: 173043)
  Prédit: ')>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>=' → logprob: -0.3199140429496765
    2. '>=' → logprob: -1.3199141025543213
    3. ']>=' → logprob: -5.069913864135742
    4. ')' → logprob: -8.319913864135742
    5. ' >=' → logprob: -9.194913864135742
    6. '<|end|>' → logprob: -14.319913864135742
    7. '[' → logprob: -14.444913864135742
    8. '≥' → logprob: -14.569913864135742
    9. '   ' → logprob: -15.194913864135742
    10. ')>' → logprob: -16.694913864135742

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -15.375024795532227
    4. '   ' → logprob: -15.500024795532227
    5. '```' → logprob: -17.625024795532227
    6. '<|end|>' → logprob: -18.375024795532227
    7. '۲' → logprob: -18.625024795532227
    8. '  ' → logprob: -18.750024795532227
    9. '[' → logprob: -19.250024795532227
    10. '>' → logprob: -19.375024795532227

Token 118: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00407923199236393
    2. 'and' → logprob: -5.504079341888428
    3. '<|end|>' → logprob: -14.12907886505127
    4. ' ' → logprob: -16.754079818725586
    5. ',' → logprob: -17.629079818725586
    6. '	and' → logprob: -18.129079818725586
    7. ' ' → logprob: -18.379079818725586
    8. ' и' → logprob: -19.504079818725586
    9. ' &&' → logprob: -19.504079818725586
    10. '```' → logprob: -19.504079818725586

Token 119: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.001170460251159966
    2. 'cross' → logprob: -6.751170635223389
    3. '.cross' → logprob: -16.376171112060547
    4. ' ' → logprob: -16.626171112060547
    5. '_cross' → logprob: -18.001171112060547
    6. 'Cross' → logprob: -18.626171112060547
    7. ' ' → logprob: -19.626171112060547
    8. '(c' → logprob: -19.751171112060547
    9. '-cross' → logprob: -20.251171112060547
    10. '  ' → logprob: -20.563671112060547

Token 120: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(lower' → logprob: -18.0
    3. '<|end|>' → logprob: -19.0
    4. 'upper' → logprob: -19.0
    5. ' (' → logprob: -19.875
    6. ' upper' → logprob: -21.0
    7. '.upper' → logprob: -21.375
    8. '(
' → logprob: -21.375
    9. '(up' → logprob: -21.5
    10. '((' → logprob: -22.875

Token 121: 'upper' (ID: 26119)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01816328801214695
    2. 'upper' → logprob: -4.018163204193115
    3. ' upper' → logprob: -11.268163681030273
    4. '.upper' → logprob: -15.143163681030273
    5. '<|end|>' → logprob: -15.393163681030273
    6. '_upper' → logprob: -17.018163681030273
    7. ' (' → logprob: -17.268163681030273
    8. 'Upper' → logprob: -17.643163681030273
    9. '(lower' → logprob: -17.643163681030273
    10. ')' → logprob: -18.268163681030273

Token 122: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -15.75
    3. '```' → logprob: -18.0
    4. ' [-' → logprob: -18.625
    5. '   ' → logprob: -18.875
    6. '(-' → logprob: -19.0
    7. '[' → logprob: -19.375
    8. '][-' → logprob: -19.5
    9. '[:-' → logprob: -20.125
    10. ' ' → logprob: -20.875

Token 123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '-' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.562501907348633
    5. '1' → logprob: -16.937501907348633
    6. '۲' → logprob: -17.437501907348633
    7. '  ' → logprob: -18.062501907348633
    8. '२' → logprob: -18.187501907348633
    9. '```' → logprob: -18.375001907348633
    10. '２' → logprob: -18.375001907348633

Token 124: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.837811088189483e-05
    2. ' ,' → logprob: -9.875068664550781
    3. '),' → logprob: -11.375068664550781
    4. '<|end|>' → logprob: -13.250068664550781
    5. '],' → logprob: -13.500068664550781
    6. '(),' → logprob: -14.375068664550781
    7. ')' → logprob: -14.500068664550781
    8. '',' → logprob: -14.875068664550781
    9. '>,' → logprob: -15.250068664550781
    10. '},' → logprob: -15.750068664550781

Token 125: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.1269427090883255
    2. ' upper' → logprob: -2.1269426345825195
    3. '<|end|>' → logprob: -11.75194263458252
    4. '.upper' → logprob: -12.25194263458252
    5. '_upper' → logprob: -14.12694263458252
    6. ' ' → logprob: -15.00194263458252
    7. 'uper' → logprob: -15.50194263458252
    8. '   ' → logprob: -15.62694263458252
    9. 'upp' → logprob: -16.126943588256836
    10. 'uppercase' → logprob: -16.251943588256836

Token 126: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.029752222821116447
    2. '-' → logprob: -3.529752254486084
    3. '[' → logprob: -13.904751777648926
    4. '(-' → logprob: -15.529751777648926
    5. '[:-' → logprob: -15.654751777648926
    6. '```' → logprob: -16.279752731323242
    7. '...' → logprob: -16.404752731323242
    8. '1' → logprob: -16.779752731323242
    9. '][-' → logprob: -16.779752731323242
    10. ' -' → logprob: -17.154752731323242

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -13.875000953674316
    3. ' ' → logprob: -16.500001907348633
    4. ']' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '۱' → logprob: -17.125001907348633
    7. '```' → logprob: -17.187501907348633
    8. '[' → logprob: -17.625001907348633
    9. '１' → logprob: -18.125001907348633
    10. '-' → logprob: -18.687501907348633

Token 128: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003231067443266511
    2. ',p' → logprob: -6.128231048583984
    3. ' ,' → logprob: -6.878231048583984
    4. 'p' → logprob: -11.878231048583984
    5. '),' → logprob: -12.503231048583984
    6. '(),' → logprob: -12.503231048583984
    7. '`,' → logprob: -14.878231048583984
    8. '‌,' → logprob: -15.753231048583984
    9. ' p' → logprob: -16.128231048583984
    10. '',' → logprob: -16.503231048583984

Token 129: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018151111900806427
    2. ' p' → logprob: -4.01815128326416
    3. '<|end|>' → logprob: -14.14315128326416
    4. '(p' → logprob: -16.643150329589844
    5. ')p' → logprob: -16.768150329589844
    6. '   ' → logprob: -17.143150329589844
    7. 'user' → logprob: -17.143150329589844
    8. ' ' → logprob: -17.268150329589844
    9. ''p' → logprob: -17.393150329589844
    10. ')' → logprob: -17.393150329589844

Token 130: ')<=' (ID: 176862)
  Prédit: ')<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')<=' → logprob: -0.00319042825140059
    2. ')' → logprob: -5.753190517425537
    3. ']<=' → logprob: -11.878190040588379
    4. '<=' → logprob: -13.003190040588379
    5. ')<' → logprob: -13.253190040588379
    6. ' )' → logprob: -13.628190040588379
    7. ')>=' → logprob: -14.503190040588379
    8. ')>' → logprob: -17.503190994262695
    9. ')
' → logprob: -18.253190994262695
    10. ')=>' → logprob: -18.753190994262695

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -18.750001907348633
    4. '```' → logprob: -21.750001907348633
    5. '০' → logprob: -22.000001907348633
    6. '０' → logprob: -22.125001907348633
    7. '०' → logprob: -22.250001907348633
    8. ')' → logprob: -22.562501907348633
    9. '   ' → logprob: -22.812501907348633
    10. '<|end|>' → logprob: -22.937501907348633

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7090513110160828
    2. ':
' → logprob: -0.7090513110160828
    3. '       ' → logprob: -4.459051132202148
    4. '           ' → logprob: -5.959051132202148
    5. '):
' → logprob: -6.709051132202148
    6. ',' → logprob: -8.709051132202148
    7. '<|end|>' → logprob: -9.584051132202148
    8. '):' → logprob: -9.959051132202148
    9. '   ' → logprob: -10.334051132202148
    10. ')' → logprob: -10.584051132202148

Token 133: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10834537446498871
    2. '           ' → logprob: -2.7333452701568604
    3. ' upper' → logprob: -3.4833452701568604
    4. 'upper' → logprob: -5.3583455085754395
    5. '	       ' → logprob: -6.9833455085754395
    6. '	' → logprob: -8.108345031738281
    7. '   ' → logprob: -8.108345031738281
    8. '.upper' → logprob: -8.108345031738281
    9. '<|end|>' → logprob: -8.983345031738281
    10. '
' → logprob: -9.483345031738281

Token 134: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.10020699352025986
    2. ' upper' → logprob: -2.3502070903778076
    3. '           ' → logprob: -15.350207328796387
    4. '.upper' → logprob: -15.725207328796387
    5. 'Upper' → logprob: -17.97520637512207
    6. '_upper' → logprob: -18.35020637512207
    7. '   ' → logprob: -19.47520637512207
    8. ' ' → logprob: -20.60020637512207
    9. '       ' → logprob: -20.72520637512207
    10. '               ' → logprob: -20.97520637512207

Token 135: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0004984631086699665
    2. '.append' → logprob: -8.00049877166748
    3. '.' → logprob: -8.75049877166748
    4. ' .' → logprob: -12.37549877166748
    5. 'pop' → logprob: -14.87549877166748
    6. '.push' → logprob: -17.250497817993164
    7. '.remove' → logprob: -18.125497817993164
    8. '.p' → logprob: -18.625497817993164
    9. '.Pop' → logprob: -19.125497817993164
    10. '.clear' → logprob: -19.750497817993164

Token 136: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00026169343618676066
    2. '()
' → logprob: -8.250261306762695
    3. '()

' → logprob: -16.125261306762695
    4. '()
' → logprob: -17.125261306762695
    5. '())' → logprob: -17.125261306762695
    6. '()\' → logprob: -17.125261306762695
    7. '()`' → logprob: -17.750261306762695
    8. '()]' → logprob: -17.875261306762695
    9. '();' → logprob: -18.125261306762695
    10. '(),' → logprob: -18.125261306762695

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022928470571059734
    2. '   ' → logprob: -9.375228881835938
    3. 'upper' → logprob: -9.500228881835938
    4. ' upper' → logprob: -10.000228881835938
    5. '	' → logprob: -11.375228881835938
    6. '      ' → logprob: -12.250228881835938
    7. '<|end|>' → logprob: -13.375228881835938
    8. ',' → logprob: -13.750228881835938
    9. '.upper' → logprob: -14.125228881835938
    10. 'Upper' → logprob: -14.125228881835938

Token 138: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.004078878089785576
    2. ' upper' → logprob: -5.5040788650512695
    3. '       ' → logprob: -15.37907886505127
    4. '   ' → logprob: -15.62907886505127
    5. '.upper' → logprob: -16.254079818725586
    6. 'Upper' → logprob: -18.004079818725586
    7. '_upper' → logprob: -19.754079818725586
    8. 'u' → logprob: -20.129079818725586
    9. ' ' → logprob: -20.504079818725586
    10. 'uppercase' → logprob: -20.629079818725586

Token 139: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.2352385965641588e-05
    2. '.' → logprob: -12.000012397766113
    3. ' .' → logprob: -12.250012397766113
    4. 'append' → logprob: -13.625012397766113
    5. '.pop' → logprob: -16.875011444091797
    6. '.Append' → logprob: -16.875011444091797
    7. '.app' → logprob: -17.750011444091797
    8. 'Append' → logprob: -18.500011444091797
    9. '_append' → logprob: -18.500011444091797
    10. '	append' → logprob: -18.500011444091797

Token 140: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. '(point' → logprob: -20.375
    4. ' (' → logprob: -20.75
    5. '(pt' → logprob: -22.125
    6. '(points' → logprob: -22.25
    7. '(pl' → logprob: -22.25
    8. '(
' → logprob: -23.0
    9. '(P' → logprob: -23.25
    10. '(pop' → logprob: -23.25

Token 141: ')
' (ID: 446)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0013325021136552095
    2. 'p' → logprob: -6.8763322830200195
    3. ')' → logprob: -8.37633228302002
    4. '(' → logprob: -9.87633228302002
    5. ')p' → logprob: -11.50133228302002
    6. ' p' → logprob: -12.25133228302002
    7. '(
' → logprob: -14.12633228302002
    8. ')
' → logprob: -14.25133228302002
    9. '	p' → logprob: -14.75133228302002
    10. ' (' → logprob: -14.75133228302002

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036747291684150696
    2. 'return' → logprob: -3.4117472171783447
    3. ' return' → logprob: -5.786747455596924
    4. '    
' → logprob: -11.286746978759766
    5. '	return' → logprob: -12.161746978759766
    6. '[:-' → logprob: -12.786746978759766
    7. '[' → logprob: -13.411746978759766
    8. '```' → logprob: -13.536746978759766
    9. '
' → logprob: -13.661746978759766
    10. '        
' → logprob: -14.161746978759766

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008691507391631603
    2. ' return' → logprob: -4.758691310882568
    3. '   ' → logprob: -9.508691787719727
    4. '#' → logprob: -13.633691787719727
    5. 'lower' → logprob: -14.008691787719727
    6. '
' → logprob: -15.133691787719727
    7. '    
' → logprob: -15.633691787719727
    8. '	return' → logprob: -16.258691787719727
    9. '```' → logprob: -17.008691787719727
    10. ')' → logprob: -18.258691787719727

Token 144: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.00026169343618676066
    2. ' lower' → logprob: -8.250261306762695
    3. '(lower' → logprob: -14.750261306762695
    4. '   ' → logprob: -16.500261306762695
    5. 'upper' → logprob: -17.250261306762695
    6. 'list' → logprob: -18.375261306762695
    7. ' ' → logprob: -19.250261306762695
    8. '  ' → logprob: -20.625261306762695
    9. '(' → logprob: -20.750261306762695
    10. 'Lower' → logprob: -21.375261306762695

Token 145: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.00010914575977949426
    2. '[' → logprob: -9.50010871887207
    3. '+' → logprob: -10.37510871887207
    4. ' +' → logprob: -12.75010871887207
    5. '[-' → logprob: -17.00010871887207
    6. '[:' → logprob: -17.62510871887207
    7. '[:]' → logprob: -18.75010871887207
    8. '+[' → logprob: -19.25010871887207
    9. '[::-' → logprob: -20.75010871887207
    10. '
' → logprob: -20.87510871887207

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -15.75
    3. '１' → logprob: -18.0
    4. '
' → logprob: -19.75
    5. '   ' → logprob: -19.875
    6. '(' → logprob: -20.0
    7. '

' → logprob: -20.125
    8. '```' → logprob: -20.125
    9. '{' → logprob: -20.25
    10. '0' → logprob: -21.375

Token 147: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0804336816072464
    2. ' +' → logprob: -2.5804336071014404
    3. ']' → logprob: -6.8304338455200195
    4. ']+' → logprob: -7.7054338455200195
    5. ',' → logprob: -12.45543384552002
    6. ' ]' → logprob: -13.08043384552002
    7. ')' → logprob: -13.08043384552002
    8. ' ' → logprob: -13.20543384552002
    9. '}' → logprob: -14.70543384552002
    10. ')+' → logprob: -14.95543384552002

Token 148: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -3.547789674485102e-05
    2. ' upper' → logprob: -10.250035285949707
    3. 'uppercase' → logprob: -20.125036239624023
    4. 'lower' → logprob: -21.000036239624023
    5. '   ' → logprob: -21.125036239624023
    6. '.upper' → logprob: -21.250036239624023
    7. 'Upper' → logprob: -22.125036239624023
    8. '_upper' → logprob: -23.375036239624023
    9. 'u' → logprob: -23.500036239624023
    10. 'upp' → logprob: -24.000036239624023

Token 149: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.0232466422021389
    2. '[' → logprob: -3.7732465267181396
    3. '[-' → logprob: -14.148246765136719
    4. '1' → logprob: -14.648246765136719
    5. '[:' → logprob: -17.77324676513672
    6. '```' → logprob: -18.39824676513672
    7. '[::-' → logprob: -18.52324676513672
    8. '#' → logprob: -19.77324676513672
    9. 'def' → logprob: -19.77324676513672
    10. '-' → logprob: -20.64824676513672

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '-' → logprob: -15.000000953674316
    3. '11' → logprob: -15.000000953674316
    4. ' ' → logprob: -15.500000953674316
    5. '１' → logprob: -16.625001907348633
    6. '```' → logprob: -17.125001907348633
    7. '۱' → logprob: -17.125001907348633
    8. '[' → logprob: -17.437501907348633
    9. '(' → logprob: -17.687501907348633
    10. '
' → logprob: -17.937501907348633

Token 151: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '<|end|>' → logprob: -13.75000286102295
    3. ')
' → logprob: -14.00000286102295
    4. ']' → logprob: -15.37500286102295
    5. ' )' → logprob: -15.75000286102295
    6. '}' → logprob: -16.500001907348633
    7. '）' → logprob: -16.625001907348633
    8. ')return' → logprob: -17.125001907348633
    9. '[' → logprob: -18.000001907348633
    10. '```' → logprob: -18.125001907348633

Token 152: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13053801655769348
    2. '#' → logprob: -3.255537986755371
    3. '<|end|>' → logprob: -3.505537986755371
    4. '
' → logprob: -3.755537986755371
    5. 'if' → logprob: -4.005537986755371
    6. 'points' → logprob: -5.505537986755371
    7. 'print' → logprob: -6.505537986755371
    8. '```' → logprob: -6.505537986755371
    9. '<|end|>' → logprob: -7.130537986755371
    10. '.' → logprob: -7.380537986755371

Token 153: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.164926677942276
    2. ' _' → logprob: -2.164926767349243
    3. ' p' → logprob: -4.289926528930664
    4. ' point' → logprob: -4.289926528930664
    5. ' i' → logprob: -5.039926528930664
    6. ' points' → logprob: -6.539926528930664
    7. 'line' → logprob: -7.539926528930664
    8. '_' → logprob: -7.664926528930664
    9. '_point' → logprob: -8.539926528930664
    10. ' ' → logprob: -8.789926528930664

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012517428025603294
    2. 'in' → logprob: -4.38751745223999
    3. 's' → logprob: -12.762516975402832
    4. ' ' → logprob: -13.512516975402832
    5. '	in' → logprob: -14.137516975402832
    6. 'import' → logprob: -14.512516975402832
    7. 'line' → logprob: -14.637516975402832
    8. '_in' → logprob: -15.262516975402832
    9. '<|end|>' → logprob: -15.512516975402832
    10. '()' → logprob: -16.20001792907715

Token 155: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0015030752401798964
    2. ' sys' → logprob: -6.501502990722656
    3. '=sys' → logprob: -14.501502990722656
    4. '	sys' → logprob: -16.501502990722656
    5. '(sys' → logprob: -17.126502990722656
    6. 'iter' → logprob: -18.251502990722656
    7. 'stdin' → logprob: -18.376502990722656
    8. '   ' → logprob: -19.751502990722656
    9. ' ' → logprob: -20.001502990722656
    10. '```' → logprob: -20.751502990722656

Token 156: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002861104905605316
    2. 'stdin' → logprob: -5.877861022949219
    3. '(stdin' → logprob: -10.877861022949219
    4. ' stdin' → logprob: -11.127861022949219
    5. '.' → logprob: -11.877861022949219
    6. 'in' → logprob: -12.002861022949219
    7. '.readline' → logprob: -13.252861022949219
    8. 'import' → logprob: -13.252861022949219
    9. 'input' → logprob: -13.252861022949219
    10. '.stdout' → logprob: -13.627861022949219

Token 157: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2649942636489868
    2. ':' → logprob: -1.7649942636489868
    3. ':
' → logprob: -3.1399941444396973
    4. '.readlines' → logprob: -4.014994144439697
    5. '   ' → logprob: -9.389994621276855
    6. ' ' → logprob: -10.139994621276855
    7. '.strip' → logprob: -10.389994621276855
    8. '):
' → logprob: -10.639994621276855
    9. '.rstrip' → logprob: -11.139994621276855
    10. '.' → logprob: -11.389994621276855

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00808908324688673
    2. ' points' → logprob: -5.008089065551758
    3. 'points' → logprob: -7.133089065551758
    4. '    
' → logprob: -7.883089065551758
    5. '	points' → logprob: -9.883089065551758
    6. '(points' → logprob: -10.008089065551758
    7. ' if' → logprob: -10.383089065551758
    8. 'tokens' → logprob: -11.133089065551758
    9. '_points' → logprob: -11.383089065551758
    10. ',' → logprob: -11.508089065551758

Token 159: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3887660801410675
    2. ' n' → logprob: -2.138766050338745
    3. 'x' → logprob: -2.263766050338745
    4. ' points' → logprob: -3.513766050338745
    5. 'points' → logprob: -3.513766050338745
    6. '   ' → logprob: -3.763766050338745
    7. 'if' → logprob: -5.138766288757324
    8. ' x' → logprob: -5.263766288757324
    9. ' if' → logprob: -5.763766288757324
    10. 'line' → logprob: -6.888766288757324

Token 160: '=line' (ID: 192488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47502225637435913
    2. '=' → logprob: -0.9750222563743591
    3. '=int' → logprob: -6.975022315979004
    4. ' ' → logprob: -12.100022315979004
    5. ',' → logprob: -12.725022315979004
    6. '=line' → logprob: -15.100022315979004
    7. ' =
' → logprob: -15.225022315979004
    8. '   ' → logprob: -15.600022315979004
    9. '=

' → logprob: -16.350021362304688
    10. 'int' → logprob: -16.600021362304688

Token 161: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04507595673203468
    2. '.' → logprob: -3.9200758934020996
    3. '=' → logprob: -4.5450758934021
    4. '.rstrip' → logprob: -4.9200758934021
    5. '.split' → logprob: -6.0450758934021
    6. 'strip' → logprob: -6.0450758934021
    7. '=int' → logprob: -7.1700758934021
    8. ' =' → logprob: -7.6700758934021
    9. 'rstrip' → logprob: -8.545076370239258
    10. 'split' → logprob: -10.670076370239258

Token 162: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5412541627883911
    2. '().' → logprob: -0.9162541627883911
    3. '()
' → logprob: -4.791254043579102
    4. '.split' → logprob: -5.541254043579102
    5. '()==' → logprob: -5.666254043579102
    6. '.' → logprob: -6.916254043579102
    7. '())' → logprob: -8.041254043579102
    8. '()!=' → logprob: -8.416254043579102
    9. '(),' → logprob: -9.041254043579102
    10. ' and' → logprob: -9.416254043579102

Token 163: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.474151074886322
    2. 'if' (adapté à ' if') → logprob: -0.974151074886322
    3. '
' → logprob: -10.724150657653809
    4. ' 
' → logprob: -10.974150657653809
    5. '   ' → logprob: -11.474150657653809
    6. 'n' → logprob: -11.849150657653809
    7. ' n' → logprob: -12.099150657653809
    8. '	if' → logprob: -12.974150657653809
    9. ' ' → logprob: -13.599150657653809
    10. ';if' → logprob: -13.599150657653809

Token 165: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0024908799678087234
    2. 'not' → logprob: -6.252490997314453
    3. ' n' → logprob: -7.627490997314453
    4. 'n' → logprob: -9.502490997314453
    5. ' ' → logprob: -14.752490997314453
    6. '	not' → logprob: -16.502490997314453
    7. 'n't' → logprob: -17.002490997314453
    8. ' ' → logprob: -17.127490997314453
    9. '!' → logprob: -18.877490997314453
    10. '(not' → logprob: -19.127490997314453

Token 166: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889056205749512
    2. ' n' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.453890800476074
    4. '	n' → logprob: -15.578890800476074
    5. 'line' → logprob: -17.328889846801758
    6. 'n't' → logprob: -17.453889846801758
    7. '   ' → logprob: -17.828889846801758
    8. ')n' → logprob: -17.828889846801758
    9. '(n' → logprob: -18.328889846801758
    10. '_n' → logprob: -18.703889846801758

Token 167: '.is' (ID: 3109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0955183207988739
    2. ' or' → logprob: -2.5955183506011963
    3. ':
' → logprob: -4.345518112182617
    4. '.is' → logprob: -5.970518112182617
    5. 'or' → logprob: -7.345518112182617
    6. ' :' → logprob: -8.845518112182617
    7. ':return' → logprob: -9.345518112182617
    8. '.' → logprob: -10.095518112182617
    9. ' ' → logprob: -11.595518112182617
    10. 'is' → logprob: -11.970518112182617

Token 168: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -8.125210297293961e-05
    2. 'decimal' → logprob: -9.500081062316895
    3. 'numeric' → logprob: -12.000081062316895
    4. 'empty' → logprob: -17.12508201599121
    5. '_digit' → logprob: -17.37508201599121
    6. ' digit' → logprob: -17.50008201599121
    7. 'isdigit' → logprob: -17.62508201599121
    8. 'digits' → logprob: -19.12508201599121
    9. 'alpha' → logprob: -19.37508201599121
    10. '-digit' → logprob: -20.00008201599121

Token 169: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.7538625001907349
    2. '():' → logprob: -0.8788625001907349
    3. ':' → logprob: -2.2538623809814453
    4. ':
' → logprob: -4.878862380981445
    5. '()' → logprob: -7.128862380981445
    6. '   ' → logprob: -8.128862380981445
    7. ' or' → logprob: -8.628862380981445
    8. ' :' → logprob: -8.628862380981445
    9. '       ' → logprob: -9.878862380981445
    10. ' ():' → logprob: -10.503862380981445

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.186122770188376e-05
    2. ' break' → logprob: -10.500091552734375
    3. '   ' → logprob: -10.625091552734375
    4. 'break' → logprob: -11.625091552734375
    5. '           ' → logprob: -12.125091552734375
    6. '	' → logprob: -12.250091552734375
    7. '
' → logprob: -12.375091552734375
    8. '	break' → logprob: -12.500091552734375
    9. '```' → logprob: -12.750091552734375
    10. ':' → logprob: -13.000091552734375

Token 171: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6992714405059814
    2. 'break' → logprob: -1.1992714405059814
    3. '       ' → logprob: -1.6992714405059814
    4. '   ' → logprob: -4.074271202087402
    5. '	break' → logprob: -6.699271202087402
    6. 'continue' (adapté à ' continue') → logprob: -8.199271202087402
    7. ' continue' → logprob: -8.449271202087402
    8. '
' → logprob: -10.574271202087402
    9. '```' → logprob: -10.574271202087402
    10. '           ' → logprob: -11.074271202087402

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011853460222482681
    2. '    
' → logprob: -4.5118536949157715
    3. 'n' → logprob: -7.8868536949157715
    4. '
' → logprob: -8.886853218078613
    5. '<|end|>' → logprob: -9.136853218078613
    6. '  
' → logprob: -9.886853218078613
    7. ' n' → logprob: -10.261853218078613
    8. ' points' → logprob: -10.886853218078613
    9. 'points' → logprob: -11.136853218078613
    10. '   
' → logprob: -11.386853218078613

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00735861761495471
    2. '    
' → logprob: -5.507358551025391
    3. '<|end|>' → logprob: -6.507358551025391
    4. 'n' → logprob: -7.257358551025391
    5. '
' → logprob: -7.882358551025391
    6. ' n' → logprob: -8.25735855102539
    7. '  
' → logprob: -9.25735855102539
    8. ' 
' → logprob: -9.88235855102539
    9. '   
' → logprob: -10.00735855102539
    10. '    ' → logprob: -10.25735855102539

Token 174: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09161271154880524
    2. 'n' (adapté à ' n') → logprob: -2.4666128158569336
    3. '   ' → logprob: -6.216612815856934
    4. '<|end|>' → logprob: -8.716612815856934
    5. '    ' → logprob: -8.966612815856934
    6. ' 
' → logprob: -9.091612815856934
    7. '	n' → logprob: -9.216612815856934
    8. ' ' → logprob: -9.716612815856934
    9. ' points' → logprob: -10.091612815856934
    10. '    
' → logprob: -11.091612815856934

Token 175: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32136303186416626
    2. '=' → logprob: -1.3213629722595215
    3. '=int' → logprob: -4.8213629722595215
    4. 'int' → logprob: -11.94636344909668
    5. '=
' → logprob: -13.57136344909668
    6. ',' → logprob: -13.82136344909668
    7. ' =
' → logprob: -13.82136344909668
    8. '   ' → logprob: -14.19636344909668
    9. ')' → logprob: -14.44636344909668
    10. '=n' → logprob: -14.69636344909668

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011109127663075924
    2. '(' → logprob: -4.511109352111816
    3. '(line' → logprob: -9.886109352111816
    4. '()' → logprob: -11.886109352111816
    5. ' (' → logprob: -13.636109352111816
    6. '(
' → logprob: -13.886109352111816
    7. 'n' → logprob: -13.886109352111816
    8. ' ' → logprob: -15.886109352111816
    9. '((' → logprob: -16.0111083984375
    10. ' n' → logprob: -16.8861083984375

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021913025993853807
    2. ')
' → logprob: -6.127191066741943
    3. ' )' → logprob: -12.752191543579102
    4. '<|end|>' → logprob: -14.127191543579102
    5. '   ' → logprob: -14.627191543579102
    6. '))' → logprob: -15.502191543579102
    7. '())' → logprob: -15.502191543579102
    8. ')

' → logprob: -15.627191543579102
    9. '')' → logprob: -16.1271915435791
    10. ')n' → logprob: -16.1271915435791

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08587230741977692
    2. ' points' → logprob: -3.0858724117279053
    3. 'points' → logprob: -3.3358724117279053
    4. '	points' → logprob: -7.335872173309326
    5. '    
' → logprob: -8.960872650146484
    6. '(points' → logprob: -9.335872650146484
    7. '_points' → logprob: -10.210872650146484
    8. '<|end|>' → logprob: -10.335872650146484
    9. ' if' → logprob: -10.710872650146484
    10. 'if' → logprob: -11.335872650146484

Token 179: ' if' (ID: 538)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.005715708248317242
    2. ' points' → logprob: -5.880715847015381
    3. 'pts' → logprob: -6.755715847015381
    4. '   ' → logprob: -7.005715847015381
    5. 'if' (adapté à ' if') → logprob: -7.380715847015381
    6. '	points' → logprob: -9.005715370178223
    7. '    
' → logprob: -11.130715370178223
    8. '(points' → logprob: -11.130715370178223
    9. '_points' → logprob: -11.255715370178223
    10. ' if' → logprob: -11.255715370178223

Token 180: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009882047772407532
    2. 'n' → logprob: -4.634881973266602
    3. ' not' → logprob: -9.009881973266602
    4. 'not' → logprob: -13.134881973266602
    5. '   ' → logprob: -13.759881973266602
    6. ' ' → logprob: -15.509881973266602
    7. '	n' → logprob: -15.634881973266602
    8. 'n't' → logprob: -15.634881973266602
    9. ' ' → logprob: -15.759881973266602
    10. '0' → logprob: -16.3848819732666

Token 181: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38753440976142883
    2. ' ==' → logprob: -1.1375343799591064
    3. '<=' → logprob: -8.012534141540527
    4. ' <=' → logprob: -8.637534141540527
    5. '=' → logprob: -10.012534141540527
    6. '<' → logprob: -10.637534141540527
    7. '>' → logprob: -10.637534141540527
    8. '0' → logprob: -10.762534141540527
    9. ' <' → logprob: -10.887534141540527
    10. '   ' → logprob: -11.887534141540527

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -18.375011444091797
    4. '   ' → logprob: -18.750011444091797
    5. '  ' → logprob: -19.250011444091797
    6. '=' → logprob: -20.062511444091797
    7. ')' → logprob: -20.062511444091797
    8. '```' → logprob: -20.062511444091797
    9. '<|end|>' → logprob: -20.125011444091797
    10. '০' → logprob: -20.500011444091797

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48424968123435974
    2. '   ' → logprob: -1.7342497110366821
    3. ':
' → logprob: -1.7342497110366821
    4. '       ' → logprob: -3.4842495918273926
    5. '    ' → logprob: -10.98425006866455
    6. '	break' → logprob: -11.23425006866455
    7. '     ' → logprob: -11.35925006866455
    8. ',' → logprob: -11.73425006866455
    9. ' :
' → logprob: -11.73425006866455
    10. '	   ' → logprob: -12.10925006866455

Token 184: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20214052498340607
    2. '       ' → logprob: -1.7021405696868896
    3. 'break' → logprob: -7.4521403312683105
    4. ' break' → logprob: -8.952140808105469
    5. '	break' → logprob: -11.452140808105469
    6. '   ' → logprob: -12.827140808105469
    7. '           ' → logprob: -14.327140808105469
    8. '
' → logprob: -14.327140808105469
    9. '    
' → logprob: -14.452140808105469
    10. ' ' → logprob: -14.577140808105469

Token 185: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5774611234664917
    2. ' break' → logprob: -0.8274611234664917
    3. '   ' → logprob: -6.827461242675781
    4. '	break' → logprob: -7.827461242675781
    5. '       ' → logprob: -10.202461242675781
    6. '
' → logprob: -14.827461242675781
    7. ' ' → logprob: -15.577461242675781
    8. '```' → logprob: -15.827461242675781
    9. '_break' → logprob: -15.952461242675781
    10. '    
' → logprob: -16.32746124267578

Token 186: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5109922289848328
    2. 'points' → logprob: -1.1359922885894775
    3. ' points' → logprob: -2.6359922885894775
    4. '	points' → logprob: -5.760992050170898
    5. '    
' → logprob: -6.260992050170898
    6. '_points' → logprob: -6.885992050170898
    7. '(points' → logprob: -7.510992050170898
    8. '<|end|>' → logprob: -8.760992050170898
    9. 'coordinates' → logprob: -9.510992050170898
    10. '```' → logprob: -9.510992050170898

Token 187: '   ' (ID: 271)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.15181580185890198
    2. '   ' → logprob: -2.276815891265869
    3. ' points' → logprob: -3.401815891265869
    4. '	points' → logprob: -6.276815891265869
    5. '    
' → logprob: -6.651815891265869
    6. '```' → logprob: -7.151815891265869
    7. '_points' → logprob: -7.526815891265869
    8. '(points' → logprob: -8.276815414428711
    9. '
' → logprob: -10.026815414428711
    10. '``' → logprob: -10.526815414428711

Token 188: ' pts' (ID: 66515)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0015218837652355433
    2. ' points' → logprob: -6.501522064208984
    3. 'pts' (adapté à ' pts') → logprob: -11.751522064208984
    4. '	points' → logprob: -11.876522064208984
    5. '_points' → logprob: -13.501522064208984
    6. '   ' → logprob: -13.501522064208984
    7. '(points' → logprob: -13.626522064208984
    8. '```' → logprob: -15.126522064208984
    9. '    
' → logprob: -15.251522064208984
    10. '.points' → logprob: -16.751522064208984

Token 189: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.2050287276506424
    2. '=' → logprob: -2.330028772354126
    3. ' =' → logprob: -2.455028772354126
    4. '=[]
' → logprob: -6.205028533935547
    5. '=[]
' → logprob: -9.580028533935547
    6. 'oints' → logprob: -10.080028533935547
    7. '_points' → logprob: -10.580028533935547
    8. '[]' → logprob: -11.330028533935547
    9. '=[],' → logprob: -11.455028533935547
    10. 'points' → logprob: -11.705028533935547

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23730747401714325
    2. 'for' → logprob: -1.9873074293136597
    3. ' for' → logprob: -2.612307548522949
    4. '	for' → logprob: -7.612307548522949
    5. '<|end|>' → logprob: -8.36230754852295
    6. '
' → logprob: -9.61230754852295
    7. ' ' → logprob: -11.73730754852295
    8. '    
' → logprob: -11.73730754852295
    9. '<|end|>' → logprob: -12.73730754852295
    10. '  ' → logprob: -12.98730754852295

Token 191: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00019388488726690412
    2. ' for' → logprob: -8.75019359588623
    3. '   ' → logprob: -10.25019359588623
    4. '	for' → logprob: -17.000194549560547
    5. 'while' → logprob: -17.375194549560547
    6. ' ' → logprob: -21.375194549560547
    7. '```' → logprob: -21.875194549560547
    8. '
' → logprob: -22.625194549560547
    9. 'import' → logprob: -22.750194549560547
    10. '  ' → logprob: -23.500194549560547

Token 192: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0031804447062313557
    2. ' _' → logprob: -5.753180503845215
    3. '_i' → logprob: -12.878180503845215
    4. ' i' → logprob: -15.378180503845215
    5. 'i' → logprob: -17.8781795501709
    6. '_=' → logprob: -18.8781795501709
    7. '_range' → logprob: -19.1281795501709
    8. '_in' → logprob: -19.7531795501709
    9. '_line' → logprob: -20.1281795501709
    10. '_x' → logprob: -20.8781795501709

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004892880679108202
    2. 'in' → logprob: -7.625489234924316
    3. 'range' → logprob: -13.750489234924316
    4. ' ' → logprob: -15.875489234924316
    5. '_' → logprob: -16.875490188598633
    6. ' range' → logprob: -17.375490188598633
    7. '    ' → logprob: -17.375490188598633
    8. ' _' → logprob: -17.750490188598633
    9. '	in' → logprob: -17.750490188598633
    10. '   ' → logprob: -18.250490188598633

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -18.501928329467773
    4. '(range' → logprob: -18.626928329467773
    5. '_' → logprob: -21.376928329467773
    6. '_range' → logprob: -21.501928329467773
    7. '.range' → logprob: -22.001928329467773
    8. ' ' → logprob: -22.126928329467773
    9. ' xrange' → logprob: -22.126928329467773
    10. 'ranges' → logprob: -22.126928329467773

Token 195: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007407767116092145
    2. 'n' → logprob: -7.750741004943848
    3. '(' → logprob: -8.250741004943848
    4. ' (' → logprob: -10.250741004943848
    5. ' n' → logprob: -11.250741004943848
    6. '(range' → logprob: -15.750741004943848
    7. '	n' → logprob: -15.875741004943848
    8. '   ' → logprob: -16.25074005126953
    9. '(int' → logprob: -16.37574005126953
    10. '(
' → logprob: -17.00074005126953

Token 196: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.027470985427498817
    2. '):' → logprob: -3.7774710655212402
    3. '   ' → logprob: -5.65247106552124
    4. ':
' → logprob: -8.152470588684082
    5. '():
' → logprob: -8.402470588684082
    6. ':' → logprob: -9.777470588684082
    7. '       ' → logprob: -10.152470588684082
    8. '):
' → logprob: -10.277470588684082
    9. '```' → logprob: -11.152470588684082
    10. ',' → logprob: -11.527470588684082

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037779819685965776
    2. '<|end|>' → logprob: -6.003777980804443
    3. '   ' → logprob: -6.878777980804443
    4. '
' → logprob: -9.503778457641602
    5. '	   ' → logprob: -9.628778457641602
    6. '	' → logprob: -10.003778457641602
    7. '<|end|>' → logprob: -10.878778457641602
    8. '```' → logprob: -11.503778457641602
    9. ',' → logprob: -11.878778457641602
    10. ' line' → logprob: -12.003778457641602

Token 198: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.4778015911579132
    2. ' x' → logprob: -0.9778015613555908
    3. '   ' → logprob: -6.47780179977417
    4. ' pts' → logprob: -6.97780179977417
    5. 'pts' → logprob: -6.97780179977417
    6. ' points' → logprob: -8.977801322937012
    7. ' line' → logprob: -9.727801322937012
    8. 'points' → logprob: -10.102801322937012
    9. '	x' → logprob: -11.102801322937012
    10. 'pt' → logprob: -11.477801322937012

Token 199: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31334352493286133
    2. ',y' → logprob: -1.3133435249328613
    3. 'y' → logprob: -9.563343048095703
    4. ' ,' → logprob: -11.688343048095703
    5. '_,' → logprob: -13.938343048095703
    6. ' y' → logprob: -14.563343048095703
    7. ',Y' → logprob: -14.938343048095703
    8. ',x' → logprob: -14.938343048095703
    9. ',int' → logprob: -15.063343048095703
    10. ',line' → logprob: -15.438343048095703

Token 200: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011537467129528522
    2. ' =' → logprob: -4.511537551879883
    3. '=line' → logprob: -8.011537551879883
    4. '=sys' → logprob: -9.511537551879883
    5. '=int' → logprob: -10.011537551879883
    6. '=list' → logprob: -10.761537551879883
    7. '=input' → logprob: -11.636537551879883
    8. '=[' → logprob: -13.136537551879883
    9. '＝' → logprob: -13.511537551879883
    10. '   ' → logprob: -13.886537551879883

Token 201: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013895198935642838
    2. '()' → logprob: -6.626389503479004
    3. '=' → logprob: -10.001389503479004
    4. '(' → logprob: -12.251389503479004
    5. ' =' → logprob: -12.376389503479004
    6. '()='' → logprob: -12.751389503479004
    7. '()[' → logprob: -13.626389503479004
    8. 'split' → logprob: -13.876389503479004
    9. '()
' → logprob: -13.876389503479004
    10. '.split' → logprob: -14.251389503479004

Token 202: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003177952254191041
    2. 'strip' → logprob: -5.753178119659424
    3. ' split' → logprob: -15.753177642822266
    4. 'rstrip' → logprob: -16.253177642822266
    5. '(split' → logprob: -18.003177642822266
    6. 'spl' → logprob: -18.878177642822266
    7. '_split' → logprob: -19.503177642822266
    8. '.split' → logprob: -20.003177642822266
    9. ' strip' → logprob: -21.003177642822266
    10. 'plit' → logprob: -22.128177642822266

Token 203: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.015305552864447e-05
    2. '()' → logprob: -9.750060081481934
    3. '(' → logprob: -13.875060081481934
    4. ' ().' → logprob: -15.250060081481934
    5. '(),' → logprob: -15.750060081481934
    6. '.split' → logprob: -16.00006103515625
    7. 'split' → logprob: -16.37506103515625
    8. '()
' → logprob: -16.62506103515625
    9. '()).' → logprob: -17.62506103515625
    10. '().'' → logprob: -17.62506103515625

Token 204: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. ' split' → logprob: -13.750000953674316
    3. '(split' → logprob: -15.875000953674316
    4. '.split' → logprob: -16.250001907348633
    5. 'plit' → logprob: -17.750001907348633
    6. '_split' → logprob: -18.000001907348633
    7. 'spl' → logprob: -18.125001907348633
    8. 'rstrip' → logprob: -20.750001907348633
    9. 's' → logprob: -21.500001907348633
    10. '<|end|>' → logprob: -21.625001907348633

Token 205: '(',')
' (ID: 161318)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003951948136091232
    2. '(' → logprob: -5.7539520263671875
    3. '(','' → logprob: -8.253952026367188
    4. ',' → logprob: -9.253952026367188
    5. '(),' → logprob: -9.253952026367188
    6. '(',' → logprob: -9.253952026367188
    7. '<|end|>' → logprob: -9.753952026367188
    8. ')' → logprob: -10.003952026367188
    9. '())' → logprob: -10.378952026367188
    10. '('' → logprob: -10.753952026367188

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6195247769355774
    2. '<|end|>' → logprob: -1.1195247173309326
    3. ' ' → logprob: -2.7445247173309326
    4. ' x' → logprob: -3.3695247173309326
    5. ')' → logprob: -3.8695247173309326
    6. 'x' → logprob: -5.244524955749512
    7. ',' → logprob: -6.369524955749512
    8. ' 
' → logprob: -6.619524955749512
    9. '<|end|>' → logprob: -6.744524955749512
    10. '   ' → logprob: -6.869524955749512

Token 207: ' pts' (ID: 66515)
  Prédit: ' pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pts' → logprob: -1.213384747505188
    2. 'x' → logprob: -1.338384747505188
    3. 'pts' (adapté à ' pts') → logprob: -1.463384747505188
    4. ' x' → logprob: -1.588384747505188
    5. 'points' → logprob: -5.713384628295898
    6. ' points' → logprob: -6.588384628295898
    7. '_pts' → logprob: -9.713384628295898
    8. '       ' → logprob: -10.213384628295898
    9. 'pt' → logprob: -10.838384628295898
    10. ' pt' → logprob: -11.838384628295898

Token 208: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019354235846549273
    2. '.' → logprob: -6.2519354820251465
    3. 'append' → logprob: -12.501935005187988
    4. '=' → logprob: -13.001935005187988
    5. '.extend' → logprob: -15.251935005187988
    6. ').' → logprob: -15.751935005187988
    7. '.app' → logprob: -15.876935005187988
    8. '.=' → logprob: -15.876935005187988
    9. ' .' → logprob: -16.251935958862305
    10. '].' → logprob: -17.126935958862305

Token 209: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6139931082725525
    2. ' (' → logprob: -1.1139931678771973
    3. '(int' → logprob: -2.3639931678771973
    4. '((' → logprob: -3.9889931678771973
    5. '(tuple' → logprob: -4.113993167877197
    6. '(x' → logprob: -7.238993167877197
    7. '(float' → logprob: -7.738993167877197
    8. '   ' → logprob: -7.988993167877197
    9. '(Point' → logprob: -10.113992691040039
    10. '(eval' → logprob: -10.988992691040039

Token 210: 'float' (ID: 7829)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0921942703134846e-05
    2. 'float' → logprob: -11.75001049041748
    3. ' int' → logprob: -12.75001049041748
    4. '(int' → logprob: -20.250011444091797
    5. '[int' → logprob: -20.375011444091797
    6. '   ' → logprob: -21.375011444091797
    7. '	int' → logprob: -21.625011444091797
    8. ' float' → logprob: -21.750011444091797
    9. '<int' → logprob: -22.000011444091797
    10. ',int' → logprob: -23.875011444091797

Token 211: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0001669485354796052
    2. 'x' → logprob: -8.750166893005371
    3. '(' → logprob: -11.750166893005371
    4. ' (' → logprob: -14.750166893005371
    5. '(
' → logprob: -16.000167846679688
    6. '
' → logprob: -17.750167846679688
    7. ' x' → logprob: -18.000167846679688
    8. ')x' → logprob: -18.250167846679688
    9. '((' → logprob: -18.625167846679688
    10. ')' → logprob: -18.625167846679688

Token 212: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02440045215189457
    2. '),' → logprob: -4.024400234222412
    3. ',y' → logprob: -5.774400234222412
    4. ',float' → logprob: -5.899400234222412
    5. ' ,' → logprob: -8.39940071105957
    6. '),(' → logprob: -9.39940071105957
    7. ',),' → logprob: -10.14940071105957
    8. ',f' → logprob: -11.27440071105957
    9. ',x' → logprob: -11.52440071105957
    10. ')' → logprob: -11.89940071105957

Token 213: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005234002135694027
    2. ' float' → logprob: -5.2552337646484375
    3. '	float' → logprob: -16.005233764648438
    4. '(float' → logprob: -16.880233764648438
    5. ',float' → logprob: -17.755233764648438
    6. '=float' → logprob: -18.005233764648438
    7. '<float' → logprob: -19.005233764648438
    8. '   ' → logprob: -19.380233764648438
    9. ' ' → logprob: -19.505233764648438
    10. '
' → logprob: -19.630233764648438

Token 214: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.06199648603796959
    2. 'y' → logprob: -2.8119964599609375
    3. '(' → logprob: -10.811996459960938
    4. ' y' → logprob: -12.311996459960938
    5. '(x' → logprob: -13.686996459960938
    6. ')y' → logprob: -14.186996459960938
    7. ')' → logprob: -14.436996459960938
    8. ' (' → logprob: -14.436996459960938
    9. ',y' → logprob: -14.686996459960938
    10. '(
' → logprob: -15.186996459960938

Token 215: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -7.219262624857947e-05
    2. '))' → logprob: -10.000072479248047
    3. ')' → logprob: -10.875072479248047
    4. ')))
' → logprob: -12.000072479248047
    5. '')))' → logprob: -14.375072479248047
    6. '))))' → logprob: -14.500072479248047
    7. '),' → logprob: -15.375072479248047
    8. ')));' → logprob: -15.875072479248047
    9. ' ' → logprob: -16.375072479248047
    10. ')))

' → logprob: -16.750072479248047

Token 216: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.022205078974366188
    2. ' hull' → logprob: -4.647204875946045
    3. 'ch' → logprob: -5.272204875946045
    4. '   ' → logprob: -5.772204875946045
    5. 'hs' → logprob: -6.522204875946045
    6. '```' → logprob: -6.897204875946045
    7. '
' → logprob: -8.022205352783203
    8. '    
' → logprob: -8.147205352783203
    9. 'conv' → logprob: -9.022205352783203
    10. 'hx' → logprob: -9.147205352783203

Token 217: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.014835203066468239
    2. 'ch' → logprob: -4.389835357666016
    3. ' hull' → logprob: -7.264835357666016
    4. 'for' → logprob: -7.514835357666016
    5. 'hs' → logprob: -8.014835357666016
    6. '   ' → logprob: -9.014835357666016
    7. 'result' → logprob: -9.139835357666016
    8. 'res' → logprob: -9.139835357666016
    9. '    
' → logprob: -9.264835357666016
    10. 'hul' → logprob: -10.014835357666016

Token 218: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740813374519348
    2. ' =' → logprob: -0.9740813374519348
    3. '=h' → logprob: -13.849081039428711
    4. '_=' → logprob: -14.224081039428711
    5. '=c' → logprob: -14.974081039428711
    6. '＝' → logprob: -15.099081039428711
    7. '.=' → logprob: -15.724081039428711
    8. '+=' → logprob: -15.724081039428711
    9. '.extend' → logprob: -15.849081039428711
    10. '=cut' → logprob: -15.974081039428711

Token 219: 'conv' (ID: 26093)
  Prédit: 'conv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -3.547789674485102e-05
    2. ' convex' → logprob: -10.250035285949707
    3. '(conv' → logprob: -18.375036239624023
    4. 'conc' → logprob: -19.625036239624023
    5. ' conv' → logprob: -20.375036239624023
    6. 'cross' → logprob: -21.250036239624023
    7. '   ' → logprob: -21.375036239624023
    8. 'Conv' → logprob: -21.500036239624023
    9. '.conv' → logprob: -22.375036239624023
    10. 'con' → logprob: -22.625036239624023

Token 220: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0006208192789927125
    2. 'h' → logprob: -7.8756208419799805
    3. '_h' → logprob: -8.37562084197998
    4. '(h' → logprob: -11.87562084197998
    5. 'conv' → logprob: -14.12562084197998
    6. 'exp' → logprob: -14.25062084197998
    7. 'ext' → logprob: -14.75062084197998
    8. '_ex' → logprob: -14.75062084197998
    9. 'x' → logprob: -15.00062084197998
    10. 'exc' → logprob: -15.50062084197998

Token 221: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -4.1080467781284824e-05
    2. 'h' → logprob: -10.125041007995605
    3. '(h' → logprob: -15.625041007995605
    4. ' hull' → logprob: -15.625041007995605
    5. '_' → logprob: -15.750041007995605
    6. ' _' → logprob: -16.000041961669922
    7. '   ' → logprob: -17.250041961669922
    8. '(_' → logprob: -17.625041961669922
    9. '_u' → logprob: -18.250041961669922
    10. '_conv' → logprob: -18.375041961669922

Token 222: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.18008080124855042
    2. 'ul' → logprob: -1.805080771446228
    3. 'h' → logprob: -9.30508041381836
    4. '_h' → logprob: -10.18008041381836
    5. '_' → logprob: -10.30508041381836
    6. 'uld' → logprob: -10.68008041381836
    7. '_ul' → logprob: -11.18008041381836
    8. 'ulf' → logprob: -11.30508041381836
    9. 'all' → logprob: -11.43008041381836
    10. 'u' → logprob: -11.55508041381836

Token 223: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(points' → logprob: -16.625
    3. ' (' → logprob: -19.625
    4. '(pt' → logprob: -20.25
    5. '((' → logprob: -21.0
    6. 'pts' → logprob: -21.0
    7. '(
' → logprob: -23.125
    8. '```' → logprob: -23.625
    9. '(p' → logprob: -24.125
    10. '_pts' → logprob: -24.25

Token 224: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -9.088346359931165e-07
    2. ' pts' → logprob: -14.000000953674316
    3. 'pt' → logprob: -19.0
    4. 'points' → logprob: -19.0
    5. '_pts' → logprob: -19.5
    6. 'Pts' → logprob: -20.75
    7. '[' → logprob: -23.0
    8. ')' → logprob: -23.125
    9. '(' → logprob: -23.5
    10. 'puts' → logprob: -23.875

Token 225: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04859168455004692
    2. ')' → logprob: -3.0485916137695312
    3. ')
' → logprob: -13.173591613769531
    4. ' )
' → logprob: -13.798591613769531
    5. ')

' → logprob: -14.423591613769531
    6. 'print' → logprob: -14.548591613769531
    7. '   ' → logprob: -15.423591613769531
    8. ' )' → logprob: -17.17359161376953
    9. '())
' → logprob: -17.42359161376953
    10. '()
' → logprob: -18.42359161376953

Token 226: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13869169354438782
    2. '   ' → logprob: -2.2636916637420654
    3. 'for' → logprob: -4.0136919021606445
    4. 'area' → logprob: -5.2636919021606445
    5. '```' → logprob: -6.6386919021606445
    6. 'points' → logprob: -7.5136919021606445
    7. '    
' → logprob: -9.263691902160645
    8. ' for' → logprob: -10.013691902160645
    9. '#print' → logprob: -10.138691902160645
    10. 'per' → logprob: -10.138691902160645

Token 227: ' hull' (ID: 74912)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11067750304937363
    2. 'area' → logprob: -2.610677480697632
    3. 'for' → logprob: -4.235677719116211
    4. 'per' → logprob: -5.110677719116211
    5. 'min' → logprob: -5.610677719116211
    6. 'h' → logprob: -5.735677719116211
    7. 'if' → logprob: -7.235677719116211
    8. 'total' → logprob: -7.485677719116211
    9. 'max' → logprob: -8.110677719116211
    10. 'm' → logprob: -8.235677719116211

Token 228: '_set' (ID: 5451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07988035678863525
    2. '=set' → logprob: -2.9548802375793457
    3. ' =' → logprob: -3.7048802375793457
    4. '={}' → logprob: -10.829880714416504
    5. '={"' → logprob: -11.079880714416504
    6. '={' → logprob: -11.329880714416504
    7. '=
' → logprob: -11.579880714416504
    8. '={
' → logprob: -11.829880714416504
    9. '={'' → logprob: -12.954880714416504
    10. '<|end|>' → logprob: -12.954880714416504

Token 230: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.128163257315464e-07
    2. 'h' → logprob: -16.0
    3. '((' → logprob: -16.375
    4. '(' → logprob: -16.75
    5. '()' → logprob: -18.5
    6. ' (' → logprob: -19.25
    7. ',h' → logprob: -20.125
    8. '```' → logprob: -20.125
    9. '/h' → logprob: -20.875
    10. '=h' → logprob: -20.875

Token 231: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00020807012333534658
    2. 'ul' → logprob: -8.875207901000977
    3. 'h' → logprob: -10.750207901000977
    4. '(h' → logprob: -11.000207901000977
    5. '(' → logprob: -11.375207901000977
    6. '   ' → logprob: -12.875207901000977
    7. 'ulls' → logprob: -13.125207901000977
    8. '(u' → logprob: -13.375207901000977
    9. 'ulk' → logprob: -13.625207901000977
    10. ')' → logprob: -13.750207901000977

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011720098555088043
    2. ')
' → logprob: -6.751172065734863
    3. '<|end|>' → logprob: -14.626172065734863
    4. '   ' → logprob: -14.751172065734863
    5. ' )' → logprob: -15.626172065734863
    6. ')

' → logprob: -15.751172065734863
    7. '())' → logprob: -15.876172065734863
    8. '))' → logprob: -16.126171112060547
    9. ')
' → logprob: -16.626171112060547
    10. '),' → logprob: -17.251171112060547

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21513795852661133
    2. 'print' → logprob: -2.5901379585266113
    3. 'outside' → logprob: -3.2151379585266113
    4. 'for' → logprob: -3.5901379585266113
    5. 'inside' → logprob: -4.340137958526611
    6. 'output' → logprob: -4.965137958526611
    7. 'area' → logprob: -5.590137958526611
    8. 'inter' → logprob: -5.715137958526611
    9. 'result' → logprob: -5.715137958526611
    10. 'out' → logprob: -5.840137958526611

Token 234: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0710856914520264
    2. 'inside' → logprob: -1.4460856914520264
    3. 'outside' → logprob: -1.8210856914520264
    4. 'print' (adapté à ' print') → logprob: -2.1960856914520264
    5. 'inter' → logprob: -3.8210856914520264
    6. 'out' → logprob: -4.5710859298706055
    7. 'output' → logprob: -4.5710859298706055
    8. 'res' → logprob: -4.6960859298706055
    9. 'result' → logprob: -4.6960859298706055
    10. 'h' → logprob: -4.9460859298706055

Token 235: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0008879951201379299
    2. '(' → logprob: -7.625887870788574
    3. '(f' → logprob: -9.000887870788574
    4. 'len' → logprob: -9.375887870788574
    5. '(round' → logprob: -9.750887870788574
    6. '("{' → logprob: -10.500887870788574
    7. '(max' → logprob: -10.625887870788574
    8. '(sum' → logprob: -11.000887870788574
    9. '("%.' → logprob: -11.250887870788574
    10. '(min' → logprob: -11.375887870788574

Token 236: ' -' (ID: 533)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.7011783719062805
    2. ' -' → logprob: -1.4511783123016357
    3. '-' → logprob: -2.0761783123016357
    4. ')' → logprob: -2.2011783123016357
    5. ',len' → logprob: -3.9511783123016357
    6. ',' → logprob: -4.326178550720215
    7. '=len' → logprob: -8.076178550720215
    8. ')
' → logprob: -8.326178550720215
    9. ',end' → logprob: -8.326178550720215
    10. '-end' → logprob: -8.951178550720215

Token 237: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008619539439678192
    2. ' len' → logprob: -4.75861930847168
    3. 'sum' → logprob: -12.63361930847168
    4. '(len' → logprob: -13.38361930847168
    5. '[len' → logprob: -16.50861930847168
    6. ' sum' → logprob: -17.38361930847168
    7. '=len' → logprob: -18.63361930847168
    8. '	len' → logprob: -18.88361930847168
    9. ' ' → logprob: -19.50861930847168
    10. ')' → logprob: -19.88361930847168

Token 238: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.375005722045898
    3. 'h' → logprob: -13.625005722045898
    4. ' (' → logprob: -15.875005722045898
    5. ')' → logprob: -16.6250057220459
    6. '(
' → logprob: -18.8750057220459
    7. '((' → logprob: -19.2500057220459
    8. '[h' → logprob: -19.3750057220459
    9. ' hull' → logprob: -19.5000057220459
    10. '	h' → logprob: -19.6250057220459

Token 239: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.026014037430286407
    2. 'ul' → logprob: -3.7760140895843506
    3. '_set' → logprob: -5.9010138511657715
    4. 'ulk' → logprob: -11.77601432800293
    5. 'll' → logprob: -12.52601432800293
    6. 'uls' → logprob: -13.02601432800293
    7. 'u' → logprob: -13.40101432800293
    8. 'ulls' → logprob: -13.52601432800293
    9. 'ust' → logprob: -13.77601432800293
    10. 'all' → logprob: -13.90101432800293

Token 240: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0872051939368248
    2. ')' → logprob: -2.712205171585083
    3. '))' → logprob: -4.087205410003662
    4. ')set' → logprob: -8.337204933166504
    5. '_)' → logprob: -10.712204933166504
    6. ')_' → logprob: -10.712204933166504
    7. ')))' → logprob: -11.087204933166504
    8. ')-' → logprob: -12.087204933166504
    9. ')+' → logprob: -12.212204933166504
    10. '_SET' → logprob: -12.587204933166504

Token 241: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011855880729854107
    2. '))' → logprob: -6.751185417175293
    3. ' )' → logprob: -11.501185417175293
    4. ')))' → logprob: -12.626185417175293
    5. ')`' → logprob: -14.376185417175293
    6. '`)' → logprob: -14.876185417175293
    7. ')}' → logprob: -15.126185417175293
    8. '})' → logprob: -15.501185417175293
    9. ')
' → logprob: -15.626185417175293
    10. ')}}' → logprob: -16.12618637084961


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 239
Tokens correctement prédits (1ère position, stricte): 135
Tokens correctement prédits (1ère position, avec adaptation): 144
Tokens correctement prédits (top 10): 220
Précision stricte (1ère position): 56.49%
Précision adaptée (1ère position): 60.25%
Précision (top 10): 92.05%
================================================================================
