================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Coin:
    def __init__(self, denomination: int, count: int):
        self.denomination = denomination
        self.count = count

    def total_value(self) -> int:
        return self.denomination * self.count


class Wallet:
    def __init__(self, coins):
        if not all(isinstance(c, Coin) for c in coins):
            raise TypeError("All elements must be instances of Coin")
        self.coins = coins

    def total_coin_value(self) -> int:
        return sum(coin.total_value() for coin in self.coins)

    def can_exchange_for_bill(self) -> bool:
        return self.total_coin_value() >= 1000


class InputParser:
    @staticmethod
    def parse(input_line: str) -> Wallet:
        try:
            counts = list(map(int, input_line.strip().split()))
            if len(counts) != 6:
                raise ValueError("Input must have exactly 6 numbers.")
            for c in counts:
                if not (0 <= c <= 50):
                    raise ValueError("Coin counts must be between 0 and 50 inclusive.")
            denominations = [1, 5, 10, 50, 100, 500]
            coins = [Coin(d, cnt) for d, cnt in zip(denominations, counts)]
            return Wallet(coins)
        except Exception as e:
            raise ValueError(f"Invalid input format: {e}")


class OutputHandler:
    @staticmethod
    def output(can_exchange: bool):
        print(1 if can_exchange else 0)


def main():
    import sys
    input_line = sys.stdin.readline()
    wallet = InputParser.parse(input_line)
    result = wallet.can_exchange_for_bill()
    OutputHandler.output(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Coin' (ID: 35089)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027356047183275223
    2. '(' → logprob: -3.7773561477661133
    3. '```' → logprob: -6.152356147766113
    4. '   ' → logprob: -6.777356147766113
    5. '.' → logprob: -8.277356147766113
    6. '():' → logprob: -8.277356147766113
    7. ' :' → logprob: -9.777356147766113
    8. ':
' → logprob: -9.777356147766113
    9. ''' → logprob: -10.277356147766113
    10. '\' → logprob: -10.902356147766113

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6088010668754578
    2. '```' → logprob: -1.1088011264801025
    3. '(' → logprob: -2.8588011264801025
    4. ' def' → logprob: -4.608800888061523
    5. '    ' → logprob: -4.733800888061523
    6. '`' → logprob: -4.983800888061523
    7. ''' → logprob: -5.108800888061523
    8. ' ' → logprob: -5.358800888061523
    9. '``' → logprob: -5.358800888061523
    10. '(space' → logprob: -5.483800888061523

Token 5: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6057024598121643
    2. ' ' → logprob: -1.3557024002075195
    3. '__' → logprob: -1.7307024002075195
    4. ' init' → logprob: -5.6057024002075195
    5. ' ' → logprob: -5.6057024002075195
    6. 'init' → logprob: -5.7307024002075195
    7. ' calculate' → logprob: -6.4807024002075195
    8. ' coin' → logprob: -7.2307024002075195
    9. '_' → logprob: -7.7307024002075195
    10. 'calculate' → logprob: -7.8557024002075195

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.008129963040119e-06
    2. ' init' → logprob: -12.500003814697266
    3. '_init' → logprob: -15.875003814697266
    4. 'ini' → logprob: -16.375003814697266
    5. '	init' → logprob: -17.625003814697266
    6. 'in' → logprob: -19.000003814697266
    7. '_' → logprob: -19.500003814697266
    8. 'int' → logprob: -19.625003814697266
    9. 'innit' → logprob: -19.625003814697266
    10. 'inti' → logprob: -19.750003814697266

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5656524896621704
    2. '__' → logprob: -1.0656524896621704
    3. '(' → logprob: -2.690652370452881
    4. '_' → logprob: -4.190652370452881
    5. '__(
' → logprob: -5.815652370452881
    6. '__((' → logprob: -7.315652370452881
    7. '_(' → logprob: -8.315652847290039
    8. '__('' → logprob: -8.440652847290039
    9. '(self' → logprob: -9.190652847290039
    10. '```' → logprob: -9.815652847290039

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021896373946219683
    2. ' self' → logprob: -6.127189636230469
    3. ')' → logprob: -13.377189636230469
    4. '(self' → logprob: -13.877189636230469
    5. ' ' → logprob: -14.127189636230469
    6. '       ' → logprob: -14.377189636230469
    7. '   ' → logprob: -15.252189636230469
    8. '	self' → logprob: -16.75218963623047
    9. '_self' → logprob: -16.75218963623047
    10. '    ' → logprob: -16.87718963623047

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7623067498207092
    2. ',' → logprob: -1.3873066902160645
    3. '_' → logprob: -1.7623066902160645
    4. '(' → logprob: -2.7623066902160645
    5. 'self' → logprob: -4.3873066902160645
    6. ' )' → logprob: -4.7623066902160645
    7. '<|end|>' → logprob: -4.7623066902160645
    8. ' ' → logprob: -5.2623066902160645
    9. ' ,' → logprob: -6.3873066902160645
    10. '.' → logprob: -6.3873066902160645

Token 10: ' denomination' (ID: 177801)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24139150977134705
    2. ' self' → logprob: -1.6163915395736694
    3. 'value' → logprob: -4.866391658782959
    4. ' value' → logprob: -5.866391658782959
    5. ' denomination' → logprob: -5.991391658782959
    6. 'side' → logprob: -6.616391658782959
    7. ' side' → logprob: -8.2413911819458
    8. 'name' → logprob: -8.7413911819458
    9. 'amount' → logprob: -8.8663911819458
    10. 'flip' → logprob: -8.8663911819458

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.054374583065509796
    2. ',' → logprob: -3.3043746948242188
    3. ')' → logprob: -4.804374694824219
    4. ':' → logprob: -5.304374694824219
    5. '=' → logprob: -5.929374694824219
    6. '   ' → logprob: -8.679374694824219
    7. '):
' → logprob: -9.679374694824219
    8. ' ):' → logprob: -10.179374694824219
    9. '_' → logprob: -11.179374694824219
    10. '       ' → logprob: -11.554374694824219

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.711838960647583
    2. ' str' → logprob: -1.211838960647583
    3. ' int' → logprob: -1.711838960647583
    4. 'str' → logprob: -3.586838960647583
    5. ')' → logprob: -6.586838722229004
    6. 'float' → logprob: -6.836838722229004
    7. ' float' → logprob: -7.586838722229004
    8. ' )' → logprob: -8.086838722229004
    9. '   ' → logprob: -10.211838722229004
    10. ' ' → logprob: -11.461838722229004

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12461786717176437
    2. ',' → logprob: -2.3746178150177
    3. ')' → logprob: -3.7496178150177
    4. '):
' → logprob: -7.749618053436279
    5. '   ' → logprob: -9.749617576599121
    6. '<|end|>' → logprob: -10.874617576599121
    7. ':' → logprob: -10.999617576599121
    8. '),' → logprob: -11.249617576599121
    9. '```' → logprob: -11.249617576599121
    10. ',
' → logprob: -12.249617576599121

Token 14: ' count' (ID: 3605)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6307671666145325
    2. ' year' → logprob: -1.2557671070098877
    3. ' name' → logprob: -3.0057671070098877
    4. ' weight' → logprob: -3.3807671070098877
    5. ' material' → logprob: -4.005767345428467
    6. ' side' → logprob: -4.005767345428467
    7. 'value' → logprob: -4.255767345428467
    8. ' color' → logprob: -4.630767345428467
    9. 'name' → logprob: -4.880767345428467
    10. ' is' → logprob: -5.130767345428467

Token 15: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047887738794088364
    2. '=' → logprob: -3.6728878021240234
    3. ':' → logprob: -4.172887802124023
    4. ')' → logprob: -5.172887802124023
    5. 's' → logprob: -8.797887802124023
    6. ' ):' → logprob: -9.672887802124023
    7. '):
' → logprob: -10.422887802124023
    8. ' ' → logprob: -11.797887802124023
    9. '   ' → logprob: -12.422887802124023
    10. '_' → logprob: -12.672887802124023

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.693213701248169
    2. ' int' → logprob: -0.693213701248169
    3. ')' → logprob: -11.06821346282959
    4. ' ' → logprob: -11.19321346282959
    5. ':int' → logprob: -11.31821346282959
    6. '=int' → logprob: -11.81821346282959
    7. '[int' → logprob: -12.31821346282959
    8. ' )' → logprob: -12.56821346282959
    9. '1' → logprob: -12.94321346282959
    10. '(int' → logprob: -13.44321346282959

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010480545461177826
    2. ')' → logprob: -7.1260480880737305
    3. '):
' → logprob: -8.62604808807373
    4. ':' → logprob: -10.12604808807373
    5. '   ' → logprob: -11.25104808807373
    6. ',' → logprob: -12.50104808807373
    7. '```' → logprob: -12.62604808807373
    8. ''):' → logprob: -13.62604808807373
    9. '):
' → logprob: -14.87604808807373
    10. '**' → logprob: -15.00104808807373

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031087882816791534
    2. '    ' → logprob: -7.003108978271484
    3. '   ' → logprob: -7.003108978271484
    4. ' ' → logprob: -7.628108978271484
    5. '<|end|>' → logprob: -8.503108978271484
    6. '        ' → logprob: -9.128108978271484
    7. '      ' → logprob: -9.378108978271484
    8. ')' → logprob: -9.503108978271484
    9. '     ' → logprob: -9.753108978271484
    10. '        
' → logprob: -10.128108978271484

Token 19: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3139811158180237
    2. '       ' → logprob: -1.438981056213379
    3. ' self' → logprob: -3.813981056213379
    4. '        ' → logprob: -5.063981056213379
    5. '   ' → logprob: -6.688981056213379
    6. '           ' → logprob: -6.938981056213379
    7. ' ' → logprob: -7.688981056213379
    8. '         ' → logprob: -8.063981056213379
    9. ' ' → logprob: -8.563981056213379
    10. '    ' → logprob: -8.813981056213379

Token 20: '.d' (ID: 1380)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008721556514501572
    2. '.d' → logprob: -7.7508721351623535
    3. '.count' → logprob: -8.875872611999512
    4. ' .' → logprob: -9.125872611999512
    5. '.coin' → logprob: -9.500872611999512
    6. '.den' → logprob: -10.500872611999512
    7. '._' → logprob: -10.625872611999512
    8. '.__' → logprob: -11.000872611999512
    9. '.value' → logprob: -12.250872611999512
    10. '.c' → logprob: -12.625872611999512

Token 21: 'enom' (ID: 66663)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00021438424300868064
    2. '   ' → logprob: -9.875214576721191
    3. 'en' → logprob: -10.000214576721191
    4. 'self' → logprob: -10.125214576721191
    5. ' ' → logprob: -10.750214576721191
    6. '    ' → logprob: -11.875214576721191
    7. '       ' → logprob: -12.000214576721191
    8. ' e' → logprob: -12.125214576721191
    9. '  ' → logprob: -12.250214576721191
    10. 'el' → logprob: -12.375214576721191

Token 22: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.0019568251445889473
    2. 'ation' → logprob: -6.251956939697266
    3. '   ' → logprob: -11.376956939697266
    4. 'iation' → logprob: -11.626956939697266
    5. 'inition' → logprob: -12.376956939697266
    6. ' ' → logprob: -14.126956939697266
    7. 'in' → logprob: -14.251956939697266
    8. '       ' → logprob: -14.501956939697266
    9. 'INATION' → logprob: -14.876956939697266
    10. 'inations' → logprob: -15.001956939697266

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3940598666667938
    2. '=' → logprob: -1.1440598964691162
    3. '<|end|>' → logprob: -5.644059658050537
    4. ')' → logprob: -6.769059658050537
    5. ' ' → logprob: -7.269059658050537
    6. '_' → logprob: -7.519059658050537
    7. '    ' → logprob: -8.394060134887695
    8. ',' → logprob: -8.769060134887695
    9. '   ' → logprob: -8.894060134887695
    10. '.' → logprob: -8.894060134887695

Token 24: ' denomination' (ID: 177801)
  Prédit: ' denomination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denomination' → logprob: -0.006715967319905758
    2. 'den' → logprob: -5.006715774536133
    3. ' denominator' → logprob: -14.631715774536133
    4. ' ' → logprob: -17.256715774536133
    5. ' denom' → logprob: -18.131715774536133
    6. 'Den' → logprob: -18.381715774536133
    7. ' den' → logprob: -18.506715774536133
    8. ' ' → logprob: -18.506715774536133
    9. ' denominations' → logprob: -18.881715774536133
    10. ' coin' → logprob: -18.881715774536133

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.356830358505249
    2. '<|end|>' → logprob: -1.356830358505249
    3. '\' → logprob: -4.356830596923828
    4. '        
' → logprob: -4.606830596923828
    5. '```' → logprob: -5.981830596923828
    6. '        ' → logprob: -5.981830596923828
    7. '\n' → logprob: -6.106830596923828
    8. '`' → logprob: -6.231830596923828
    9. ' ' → logprob: -6.481830596923828
    10. '_' → logprob: -6.606830596923828

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06076091155409813
    2. '<|end|>' → logprob: -3.435760974884033
    3. '        
' → logprob: -4.310760974884033
    4. '        ' → logprob: -4.935760974884033
    5. ' ' → logprob: -6.435760974884033
    6. '    ' → logprob: -7.185760974884033
    7. '
' → logprob: -7.560760974884033
    8. '\' → logprob: -7.810760974884033
    9. ' 
' → logprob: -7.810760974884033
    10. '   ' → logprob: -8.185760498046875

Token 27: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.475434273481369
    2. '       ' → logprob: -1.1004343032836914
    3. ' self' → logprob: -3.1004343032836914
    4. '        ' → logprob: -7.475434303283691
    5. ' ' → logprob: -10.725434303283691
    6. '      ' → logprob: -11.850434303283691
    7. '	self' → logprob: -12.100434303283691
    8. '   ' → logprob: -12.225434303283691
    9. '```' → logprob: -12.225434303283691
    10. '     ' → logprob: -12.600434303283691

Token 28: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.576026439666748
    2. '.' → logprob: -0.826026439666748
    3. ' .' → logprob: -9.826026916503906
    4. '.value' → logprob: -11.826026916503906
    5. '.counter' → logprob: -12.326026916503906
    6. '.con' → logprob: -12.826026916503906
    7. '.coin' → logprob: -13.076026916503906
    8. '.Count' → logprob: -13.076026916503906
    9. '.c' → logprob: -13.451026916503906
    10. '.amount' → logprob: -13.826026916503906

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038059741258621216
    2. '=' → logprob: -3.288059711456299
    3. ' ' → logprob: -11.663060188293457
    4. '<|end|>' → logprob: -12.663060188293457
    5. ')' → logprob: -13.038060188293457
    6. '   ' → logprob: -13.913060188293457
    7. ' +=' → logprob: -14.163060188293457
    8. ' =
' → logprob: -14.413060188293457
    9. '.' → logprob: -14.663060188293457
    10. '<|end|>' → logprob: -15.288060188293457

Token 30: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.04300342872738838
    2. 'count' → logprob: -3.1680033206939697
    3. ' ' → logprob: -13.29300308227539
    4. '0' → logprob: -14.16800308227539
    5. '(count' → logprob: -14.66800308227539
    6. '	count' → logprob: -14.79300308227539
    7. '1' → logprob: -15.41800308227539
    8. ' ' → logprob: -15.54300308227539
    9. '[count' → logprob: -15.79300308227539
    10. '$count' → logprob: -16.04300308227539

Token 31: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25381767749786377
    2. '
' → logprob: -1.7538176774978638
    3. ' ' → logprob: -4.503817558288574
    4. '    
' → logprob: -4.878817558288574
    5. ' 
' → logprob: -5.253817558288574
    6. 'n' → logprob: -5.378817558288574
    7. '```' → logprob: -5.628817558288574
    8. '\' → logprob: -5.878817558288574
    9. 'd' → logprob: -6.003817558288574
    10. '<|end|>' → logprob: -6.253817558288574

Token 33: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3769940435886383
    2. 'def' (adapté à ' def') → logprob: -1.251994013786316
    3. ' def' → logprob: -4.0019941329956055
    4. '    
' → logprob: -5.5019941329956055
    5. '```' → logprob: -5.8769941329956055
    6. 'd' → logprob: -6.5019941329956055
    7. ' ' → logprob: -8.126994132995605
    8. ' 
' → logprob: -8.251994132995605
    9. '    ' → logprob: -8.376994132995605
    10. '\' → logprob: -8.876994132995605

Token 34: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2699274718761444
    2. ' get' → logprob: -1.8949275016784668
    3. ' space' → logprob: -3.644927501678467
    4. ' __' → logprob: -4.644927501678467
    5. ' calculate' → logprob: -4.894927501678467
    6. ' def' → logprob: -5.019927501678467
    7. ' flip' → logprob: -5.269927501678467
    8. ' value' → logprob: -5.519927501678467
    9. ' is' → logprob: -5.519927501678467
    10. '_' → logprob: -5.519927501678467

Token 35: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.07738599926233292
    2. '_' → logprob: -2.952385902404785
    3. '_amount' → logprob: -4.077385902404785
    4. '_price' → logprob: -5.327385902404785
    5. '_cost' → logprob: -8.702385902404785
    6. '_money' → logprob: -8.827385902404785
    7. '_s' → logprob: -10.577385902404785
    8. '_val' → logprob: -10.702385902404785
    9. '_sum' → logprob: -10.827385902404785
    10. '_values' → logprob: -11.827385902404785

Token 36: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4746032655239105
    2. '(self' → logprob: -0.9746032953262329
    3. ' (' → logprob: -8.724603652954102
    4. 'self' → logprob: -9.224603652954102
    5. '<|end|>' → logprob: -9.849603652954102
    6. 's' → logprob: -10.099603652954102
    7. '(
' → logprob: -10.224603652954102
    8. '(s' → logprob: -10.349603652954102
    9. '   ' → logprob: -10.474603652954102
    10. '()' → logprob: -10.849603652954102

Token 37: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017173044616356492
    2. ')' → logprob: -6.6267170906066895
    3. ' ):' → logprob: -8.751717567443848
    4. '):
' → logprob: -9.126717567443848
    5. '():' → logprob: -10.251717567443848
    6. '   ' → logprob: -10.501717567443848
    7. '       ' → logprob: -11.251717567443848
    8. ' *' → logprob: -11.626717567443848
    9. '  ' → logprob: -12.126717567443848
    10. '*' → logprob: -12.251717567443848

Token 38: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7275077104568481
    2. '(' → logprob: -1.1025077104568481
    3. ':' → logprob: -1.7275077104568481
    4. '():' → logprob: -5.602507591247559
    5. '):' → logprob: -6.977507591247559
    6. '       ' → logprob: -7.477507591247559
    7. '   ' → logprob: -7.727507591247559
    8. 'self' → logprob: -7.977507591247559
    9. '(
' → logprob: -8.352507591247559
    10. ' (' → logprob: -9.352507591247559

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0059610335156321526
    2. 'int' → logprob: -5.130960941314697
    3. ' ' → logprob: -10.380961418151855
    4. ':int' → logprob: -15.005961418151855
    5. ' ' → logprob: -15.005961418151855
    6. '(int' → logprob: -15.380961418151855
    7. '[int' → logprob: -16.25596046447754
    8. ' None' → logprob: -16.38096046447754
    9. '	int' → logprob: -16.38096046447754
    10. '    ' → logprob: -16.75596046447754

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010555570479482412
    2. '():' → logprob: -7.626055717468262
    3. '):' → logprob: -7.751055717468262
    4. ':return' → logprob: -10.001055717468262
    5. '(self' → logprob: -10.126055717468262
    6. '(' → logprob: -11.001055717468262
    7. '       ' → logprob: -11.751055717468262
    8. ':**' → logprob: -11.751055717468262
    9. ':self' → logprob: -12.501055717468262
    10. ' :' → logprob: -12.626055717468262

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014370749704539776
    2. ' return' → logprob: -9.125144004821777
    3. 'return' → logprob: -10.375144004821777
    4. '   ' → logprob: -13.750144004821777
    5. ':return' → logprob: -14.250144004821777
    6. '      ' → logprob: -14.625144004821777
    7. '```' → logprob: -15.000144004821777
    8. '           ' → logprob: -15.625144004821777
    9. '{return' → logprob: -16.12514305114746
    10. '\n' → logprob: -16.37514305114746

Token 42: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06254790723323822
    2. 'return' (adapté à ' return') → logprob: -2.8125479221343994
    3. ' return' → logprob: -7.56254768371582
    4. '```' → logprob: -9.81254768371582
    5. '   ' → logprob: -12.56254768371582
    6. '      ' → logprob: -14.56254768371582
    7. '     ' → logprob: -15.06254768371582
    8. '           ' → logprob: -15.18754768371582
    9. '{return' → logprob: -15.43754768371582
    10. '`' → logprob: -15.56254768371582

Token 43: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.005235887598246336
    2. 'self' → logprob: -5.25523567199707
    3. ' ' → logprob: -13.38023567199707
    4. ' ' → logprob: -15.00523567199707
    5. '	self' → logprob: -16.50523567199707
    6. '       ' → logprob: -16.63023567199707
    7. '        ' → logprob: -17.63023567199707
    8. '(self' → logprob: -18.13023567199707
    9. ' sel' → logprob: -18.88023567199707
    10. '    ' → logprob: -19.00523567199707

Token 44: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.06216093897819519
    2. '.' → logprob: -2.8121609687805176
    3. ' .' → logprob: -8.81216049194336
    4. '.count' → logprob: -10.56216049194336
    5. '.den' → logprob: -11.56216049194336
    6. '.value' → logprob: -12.68716049194336
    7. '.coin' → logprob: -13.56216049194336
    8. '.amount' → logprob: -13.56216049194336
    9. '.total' → logprob: -14.31216049194336
    10. ' ' → logprob: -14.31216049194336

Token 45: 'enom' (ID: 66663)
  Prédit: 'enom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enom' → logprob: -0.00015669701679144055
    2. 'en' → logprob: -9.12515640258789
    3. 'e' → logprob: -10.50015640258789
    4. 'omination' → logprob: -11.50015640258789
    5. 'o' → logprob: -11.87515640258789
    6. 'em' → logprob: -14.00015640258789
    7. 'eno' → logprob: -14.12515640258789
    8. 'nom' → logprob: -14.25015640258789
    9. 'onom' → logprob: -15.37515640258789
    10. 'oen' → logprob: -15.62515640258789

Token 46: 'ination' (ID: 3273)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -6.742448022123426e-05
    2. 'ination' → logprob: -9.625067710876465
    3. 'nation' → logprob: -14.500067710876465
    4. '_' → logprob: -15.500067710876465
    5. '   ' → logprob: -15.500067710876465
    6. 'otation' → logprob: -16.50006675720215
    7. 'onation' → logprob: -16.50006675720215
    8. 'er' → logprob: -16.75006675720215
    9. 'a' → logprob: -16.87506675720215
    10. 'ATION' → logprob: -17.37506675720215

Token 47: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008620958775281906
    2. '*' → logprob: -4.758620738983154
    3. '<|end|>' → logprob: -13.258621215820312
    4. '*self' → logprob: -13.508621215820312
    5. ' ' → logprob: -13.758621215820312
    6. ')' → logprob: -13.883621215820312
    7. '*object' → logprob: -15.133621215820312
    8. ' **' → logprob: -15.633621215820312
    9. '```' → logprob: -15.633621215820312
    10. '`' → logprob: -15.758621215820312

Token 48: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141352713108063
    2. ' self' → logprob: -1.7014135122299194
    3. 'count' → logprob: -16.201414108276367
    4. ' ' → logprob: -16.951414108276367
    5. ' ' → logprob: -17.076414108276367
    6. '       ' → logprob: -17.076414108276367
    7. '   ' → logprob: -17.326414108276367
    8. '	self' → logprob: -17.826414108276367
    9. ' count' → logprob: -19.076414108276367
    10. '(self' → logprob: -19.451414108276367

Token 49: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.014171270653605461
    2. '.' → logprob: -4.264171123504639
    3. '.value' → logprob: -12.264171600341797
    4. '.c' → logprob: -14.264171600341797
    5. '.Count' → logprob: -14.764171600341797
    6. ' .' → logprob: -14.889171600341797
    7. 'count' → logprob: -15.014171600341797
    8. '.coin' → logprob: -15.139171600341797
    9. '.
' → logprob: -15.389171600341797
    10. '.counter' → logprob: -15.639171600341797

Token 50: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48230528831481934
    2. '<|end|>' → logprob: -1.1073052883148193
    3. '\n' → logprob: -4.732305526733398
    4. '```' → logprob: -4.732305526733398
    5. 'n' → logprob: -4.857305526733398
    6. '   ' → logprob: -4.857305526733398
    7. '#' → logprob: -5.607305526733398
    8. '<|end|>' → logprob: -5.732305526733398
    9. '.' → logprob: -6.357305526733398
    10. 'newline' → logprob: -6.482305526733398

Token 51: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3119021952152252
    2. 'c' → logprob: -2.3119022846221924
    3. 'class' → logprob: -2.3119022846221924
    4. '   ' → logprob: -3.0619022846221924
    5. '    
' → logprob: -5.311902046203613
    6. '```' → logprob: -5.436902046203613
    7. 'n' → logprob: -5.686902046203613
    8. ' ' → logprob: -6.561902046203613
    9. '\n' → logprob: -6.561902046203613
    10. 'd' → logprob: -6.686902046203613

Token 52: ' Wallet' (ID: 50822)
  Prédit: ' Wallet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Wallet' → logprob: -0.10163862258195877
    2. ' ' → logprob: -3.3516385555267334
    3. ' Cash' → logprob: -3.9766385555267334
    4. ' Money' → logprob: -4.1016387939453125
    5. ' Bank' → logprob: -4.3516387939453125
    6. ' Coin' → logprob: -5.2266387939453125
    7. ' Currency' → logprob: -5.2266387939453125
    8. ' Bill' → logprob: -7.3516387939453125
    9. ' ' → logprob: -7.7266387939453125
    10. ' Pig' → logprob: -7.9766387939453125

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.220573363360018e-05
    2. '():' → logprob: -10.375082015991211
    3. '<|end|>' → logprob: -11.375082015991211
    4. ' :' → logprob: -11.500082015991211
    5. ':**' → logprob: -11.750082015991211
    6. ':
' → logprob: -11.875082015991211
    7. '(' → logprob: -12.125082015991211
    8. '):' → logprob: -12.250082015991211
    9. '(object' → logprob: -13.875082015991211
    10. '#:' → logprob: -14.625082015991211

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018791954964399338
    2. '    
' → logprob: -4.768792152404785
    3. '    ' → logprob: -6.143792152404785
    4. ' 
' → logprob: -6.393792152404785
    5. '
' → logprob: -6.518792152404785
    6. ' def' → logprob: -6.768792152404785
    7. '  ' → logprob: -7.143792152404785
    8. ' ' → logprob: -7.268792152404785
    9. '(' → logprob: -7.268792152404785
    10. '  
' → logprob: -7.393792152404785

Token 55: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.006066733039915562
    2. 'def' (adapté à ' def') → logprob: -5.506066799163818
    3. '   ' → logprob: -6.506066799163818
    4. '    ' → logprob: -7.881066799163818
    5. ' ' → logprob: -9.88106632232666
    6. ' de' → logprob: -11.38106632232666
    7. ' 
' → logprob: -11.50606632232666
    8. ' class' → logprob: -11.75606632232666
    9. '```' → logprob: -12.13106632232666
    10. ' ```' → logprob: -12.25606632232666

Token 56: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0003079334564972669
    2. '__' → logprob: -8.8753080368042
    3. ' ' → logprob: -9.3753080368042
    4. ' init' → logprob: -10.5003080368042
    5. ' _' → logprob: -10.6253080368042
    6. ' ' → logprob: -11.1253080368042
    7. '_init' → logprob: -11.7503080368042
    8. '_' → logprob: -12.8753080368042
    9. ' add' → logprob: -13.0003080368042
    10. ' def' → logprob: -13.1253080368042

Token 57: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.4192871175473556e-05
    2. ' init' → logprob: -10.375054359436035
    3. '   ' → logprob: -11.250054359436035
    4. '_init' → logprob: -12.125054359436035
    5. 'def' → logprob: -13.500054359436035
    6. ' __' → logprob: -14.500054359436035
    7. 'ini' → logprob: -14.625054359436035
    8. '_' → logprob: -14.750054359436035
    9. '	init' → logprob: -14.875054359436035
    10. '  ' → logprob: -15.000054359436035

Token 58: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02190701849758625
    2. '__' → logprob: -3.896907091140747
    3. '(self' → logprob: -7.021906852722168
    4. '__(
' → logprob: -8.146906852722168
    5. '(' → logprob: -9.521906852722168
    6. '__((' → logprob: -10.146906852722168
    7. ' (' → logprob: -10.521906852722168
    8. '_' → logprob: -11.396906852722168
    9. '_(' → logprob: -11.521906852722168
    10. 'self' → logprob: -12.396906852722168

Token 59: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028268657624721527
    2. ' self' → logprob: -5.877826690673828
    3. ')' → logprob: -10.752826690673828
    4. '(self' → logprob: -15.377826690673828
    5. '	self' → logprob: -16.377826690673828
    6. '0' → logprob: -16.627826690673828
    7. '):
' → logprob: -17.002826690673828
    8. ' )' → logprob: -17.002826690673828
    9. '_self' → logprob: -17.002826690673828
    10. '```' → logprob: -17.002826690673828

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039170795935206115
    2. ' ,' → logprob: -8.250391960144043
    3. 'self' → logprob: -9.250391960144043
    4. ')' → logprob: -10.625391960144043
    5. ',self' → logprob: -13.250391960144043
    6. '):' → logprob: -13.375391960144043
    7. '‌,' → logprob: -13.875391960144043
    8. '<|end|>' → logprob: -13.875391960144043
    9. ' self' → logprob: -14.500391960144043
    10. '_self' → logprob: -14.625391960144043

Token 61: ' coins' (ID: 28969)
  Prédit: ' coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.12540633976459503
    2. ' self' → logprob: -2.875406265258789
    3. 'coins' → logprob: -3.375406265258789
    4. 'self' → logprob: -3.625406265258789
    5. ')' → logprob: -8.375406265258789
    6. '):' → logprob: -8.875406265258789
    7. '):
' → logprob: -9.625406265258789
    8. ' )' → logprob: -10.125406265258789
    9. '   ' → logprob: -10.625406265258789
    10. ' ' → logprob: -10.750406265258789

Token 62: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030370278283953667
    2. '):' → logprob: -3.6553702354431152
    3. '=None' → logprob: -6.155370235443115
    4. '=' → logprob: -7.155370235443115
    5. '=[]' → logprob: -7.405370235443115
    6. ')' → logprob: -8.030370712280273
    7. ' ):' → logprob: -8.905370712280273
    8. '):
' → logprob: -10.780370712280273
    9. ' =' → logprob: -10.780370712280273
    10. ' :' → logprob: -11.030370712280273

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017869214061647654
    2. 'self' → logprob: -6.751786708831787
    3. ' self' → logprob: -8.126787185668945
    4. ':' → logprob: -8.751787185668945
    5. '[' → logprob: -10.251787185668945
    6. '      ' → logprob: -10.751787185668945
    7. '<|end|>' → logprob: -10.876787185668945
    8. '[]' → logprob: -11.001787185668945
    9. '   ' → logprob: -11.251787185668945
    10. ',' → logprob: -11.501787185668945

Token 64: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31379595398902893
    2. 'self' → logprob: -1.3137959241867065
    3. '       ' → logprob: -7.563796043395996
    4. ' ' → logprob: -12.063796043395996
    5. '   ' → logprob: -12.063796043395996
    6. '	self' → logprob: -12.813796043395996
    7. '        ' → logprob: -15.563796043395996
    8. ' ' → logprob: -15.563796043395996
    9. '    ' → logprob: -15.813796043395996
    10. '```' → logprob: -15.813796043395996

Token 65: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.19426095485687256
    2. ' isinstance' → logprob: -1.9442609548568726
    3. ' coins' → logprob: -3.444261074066162
    4. ' ' → logprob: -6.944261074066162
    5. 'not' → logprob: -8.444260597229004
    6. 'coins' → logprob: -8.819260597229004
    7. ' len' → logprob: -9.069260597229004
    8. ' all' → logprob: -9.944260597229004
    9. ' self' → logprob: -10.819260597229004
    10. ' hasattr' → logprob: -11.444260597229004

Token 66: ' all' (ID: 722)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.06076158583164215
    2. ' coins' → logprob: -2.9357616901397705
    3. ' all' → logprob: -5.185761451721191
    4. 'coins' → logprob: -8.560761451721191
    5. ' hasattr' → logprob: -9.810761451721191
    6. 'all' → logprob: -11.060761451721191
    7. 'is' → logprob: -12.810761451721191
    8. ' any' → logprob: -14.310761451721191
    9. ' iss' → logprob: -14.810761451721191
    10. ' ' → logprob: -15.685761451721191

Token 67: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -12.375011444091797
    3. '(has' → logprob: -12.500011444091797
    4. 'is' → logprob: -13.250011444091797
    5. '(call' → logprob: -14.250011444091797
    6. ' isinstance' → logprob: -15.250011444091797
    7. '(co' → logprob: -15.375011444091797
    8. '(type' → logprob: -15.500011444091797
    9. '(lambda' → logprob: -15.875011444091797
    10. '([' → logprob: -16.000011444091797

Token 68: 'instance' (ID: 11357)
  Prédit: 'instance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instance' → logprob: -7.896309739408025e-07
    2. '(instance' → logprob: -14.375000953674316
    3. 'inst' → logprob: -16.75
    4. 'Instance' → logprob: -17.5
    5. ' instance' → logprob: -17.5
    6. ' isinstance' → logprob: -17.625
    7. '	instance' → logprob: -18.0
    8. '.instance' → logprob: -18.25
    9. '_instance' → logprob: -18.375
    10. 'n' → logprob: -19.125

Token 69: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004967942950315773
    2. '(c' → logprob: -7.625496864318848
    3. '(co' → logprob: -11.750496864318848
    4. 'coin' → logprob: -14.625496864318848
    5. '(i' → logprob: -15.875496864318848
    6. '(x' → logprob: -16.12549591064453
    7. '```' → logprob: -16.25049591064453
    8. '(token' → logprob: -17.25049591064453
    9. '(

' → logprob: -17.50049591064453
    10. '   ' → logprob: -17.50049591064453

Token 70: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6196277737617493
    2. '(c' → logprob: -1.1196277141571045
    3. 'oin' → logprob: -2.9946277141571045
    4. 'o' → logprob: -3.7446277141571045
    5. ')' → logprob: -3.9946277141571045
    6. 'oint' → logprob: -4.619627952575684
    7. '(co' → logprob: -4.994627952575684
    8. ' coin' → logprob: -5.244627952575684
    9. 'coin' → logprob: -5.619627952575684
    10. '(o' → logprob: -5.994627952575684

Token 71: ' Coin' (ID: 35089)
  Prédit: ' Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Coin' → logprob: -0.038045283406972885
    2. 'Coin' → logprob: -3.2880451679229736
    3. '	C' → logprob: -13.538044929504395
    4. ' Coins' → logprob: -14.413044929504395
    5. ' coin' → logprob: -14.538044929504395
    6. ' ' → logprob: -14.538044929504395
    7. ')' → logprob: -14.788044929504395
    8. '_coin' → logprob: -15.913044929504395
    9. 'Coins' → logprob: -16.03804588317871
    10. ' Co' → logprob: -16.28804588317871

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020377879263833165
    2. '(c' → logprob: -9.250204086303711
    3. ')c' → logprob: -9.500204086303711
    4. ' )' → logprob: -11.500204086303711
    5. '))' → logprob: -11.625204086303711
    6. '   ' → logprob: -12.875204086303711
    7. ')
' → logprob: -13.000204086303711
    8. '       ' → logprob: -13.375204086303711
    9. '),' → logprob: -13.375204086303711
    10. '(' → logprob: -13.375204086303711

Token 73: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07845013588666916
    2. '(c' → logprob: -2.9534502029418945
    3. '(' → logprob: -4.2034502029418945
    4. ' for' → logprob: -5.5784502029418945
    5. ' )' → logprob: -6.8284502029418945
    6. '):' → logprob: -7.0784502029418945
    7. '(co' → logprob: -7.4534502029418945
    8. ')c' → logprob: -7.9534502029418945
    9. ',' → logprob: -8.078450202941895
    10. 'for' → logprob: -8.203450202941895

Token 74: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.00016909420082811266
    2. ' ' → logprob: -9.125168800354004
    3. 'c' → logprob: -11.000168800354004
    4. ' coin' → logprob: -11.000168800354004
    5. '	c' → logprob: -11.625168800354004
    6. ')' → logprob: -11.875168800354004
    7. ' ' → logprob: -13.000168800354004
    8. ')c' → logprob: -13.375168800354004
    9. '_' → logprob: -13.500168800354004
    10. ' )' → logprob: -13.500168800354004

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0064950971864163876
    2. ' ' → logprob: -5.256494998931885
    3. 'in' → logprob: -6.881494998931885
    4. ')' → logprob: -9.256495475769043
    5. ' i' → logprob: -10.381495475769043
    6. 'c' → logprob: -10.631495475769043
    7. '  ' → logprob: -10.756495475769043
    8. '_' → logprob: -11.506495475769043
    9. ' c' → logprob: -11.506495475769043
    10. '<|end|>' → logprob: -11.756495475769043

Token 76: ' coins' (ID: 28969)
  Prédit: ' coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.08895702660083771
    2. 'coins' → logprob: -2.4639570713043213
    3. ' self' → logprob: -12.088956832885742
    4. ' ' → logprob: -12.213956832885742
    5. 'self' → logprob: -12.338956832885742
    6. ' coin' → logprob: -14.338956832885742
    7. ')' → logprob: -14.463956832885742
    8. 'co' → logprob: -14.963956832885742
    9. 'coin' → logprob: -15.963956832885742
    10. ' moedas' → logprob: -15.963956832885742

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014760562917217612
    2. ')' → logprob: -7.251476287841797
    3. '):
' → logprob: -7.751476287841797
    4. ' ):' → logprob: -8.251476287841797
    5. '       ' → logprob: -9.626476287841797
    6. ':' → logprob: -12.501476287841797
    7. '   ' → logprob: -13.001476287841797
    8. '):
' → logprob: -14.501476287841797
    9. '           ' → logprob: -14.751476287841797
    10. ')):' → logprob: -14.751476287841797

Token 78: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11803475767374039
    2. '           ' → logprob: -2.243034839630127
    3. ':
' → logprob: -5.743034839630127
    4. '):' → logprob: -7.243034839630127
    5. '       ' → logprob: -7.493034839630127
    6. ' :' → logprob: -7.993034839630127
    7. '               ' → logprob: -9.743034362792969
    8. '            ' → logprob: -9.993034362792969
    9. '            
' → logprob: -10.368034362792969
    10. '):
' → logprob: -10.493034362792969

Token 79: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.20286954939365387
    2. '           ' → logprob: -1.7028695344924927
    3. 'raise' (adapté à ' raise') → logprob: -6.827869415283203
    4. '            ' → logprob: -9.077869415283203
    5. ' ' → logprob: -9.452869415283203
    6. '               ' → logprob: -9.952869415283203
    7. '	raise' → logprob: -9.952869415283203
    8. '
' → logprob: -10.952869415283203
    9. '   ' → logprob: -11.202869415283203
    10. '_raise' → logprob: -11.327869415283203

Token 80: ' Type' (ID: 7003)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.023366952314972878
    2. ' Type' → logprob: -3.773366928100586
    3. ' Val' → logprob: -9.648366928100586
    4. ' ' → logprob: -10.273366928100586
    5. 'Value' → logprob: -11.273366928100586
    6. ' Va' → logprob: -12.398366928100586
    7. 'Type' → logprob: -12.648366928100586
    8. '	Value' → logprob: -14.273366928100586
    9. ' ' → logprob: -14.773366928100586
    10. ' V' → logprob: -15.148366928100586

Token 81: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9266199160483666e-05
    2. 'rror' → logprob: -11.000019073486328
    3. '   ' → logprob: -14.000019073486328
    4. '       ' → logprob: -14.250019073486328
    5. '           ' → logprob: -14.750019073486328
    6. '    ' → logprob: -15.500019073486328
    7. 'error' → logprob: -15.625019073486328
    8. '        ' → logprob: -16.500019073486328
    9. '```' → logprob: -16.625019073486328
    10. '     ' → logprob: -17.250019073486328

Token 82: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3878686726093292
    2. '(' → logprob: -1.1378686428070068
    3. '('' → logprob: -7.137868881225586
    4. '(
' → logprob: -8.637868881225586
    5. '(":' → logprob: -11.637868881225586
    6. '()' → logprob: -11.887868881225586
    7. '("")' → logprob: -13.137868881225586
    8. '(

' → logprob: -13.512868881225586
    9. '(",' → logprob: -13.637868881225586
    10. '       ' → logprob: -13.887868881225586

Token 83: 'All' (ID: 2594)
  Prédit: 'All'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.04630322754383087
    2. ' All' → logprob: -4.1713032722473145
    3. 'coins' → logprob: -4.4213032722473145
    4. 'Coins' → logprob: -4.5463032722473145
    5. 'all' → logprob: -5.6713032722473145
    6. ' all' → logprob: -5.9213032722473145
    7. ' coins' → logprob: -7.4213032722473145
    8. 'Wallet' → logprob: -9.171302795410156
    9. 'Coin' → logprob: -9.171302795410156
    10. ' Coins' → logprob: -9.171302795410156

Token 84: ' elements' (ID: 8632)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.2440713495016098
    2. ' elements' → logprob: -1.744071364402771
    3. ' items' → logprob: -3.7440712451934814
    4. ' objects' → logprob: -4.1190714836120605
    5. ' c' → logprob: -7.2440714836120605
    6. ' coin' → logprob: -7.4940714836120605
    7. ' ' → logprob: -7.9940714836120605
    8. ' must' → logprob: -9.869071006774902
    9. ' tokens' → logprob: -9.869071006774902
    10. ' the' → logprob: -9.994071006774902

Token 85: ' must' (ID: 2804)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.9623810658231378e-05
    2. ' to' → logprob: -11.500020027160645
    3. '<|end|>' → logprob: -11.750020027160645
    4. ' ' → logprob: -14.375020027160645
    5. 'be' → logprob: -15.250020027160645
    6. ' continue' → logprob: -15.625020027160645
    7. '	be' → logprob: -16.125019073486328
    8. '<|end|>' → logprob: -16.375019073486328
    9. ')' → logprob: -16.500019073486328
    10. ' in' → logprob: -17.000019073486328

Token 87: ' instances' (ID: 23490)
  Prédit: ' instances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instances' → logprob: -0.34847548604011536
    2. ' Coin' → logprob: -1.473475456237793
    3. 'Coin' → logprob: -2.848475456237793
    4. ' of' → logprob: -5.598475456237793
    5. 'instances' → logprob: -5.723475456237793
    6. ' coins' → logprob: -9.598475456237793
    7. 'of' → logprob: -9.848475456237793
    8. ' instance' → logprob: -10.598475456237793
    9. 'instance' → logprob: -11.348475456237793
    10. '_coin' → logprob: -11.473475456237793

Token 88: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.03894539177417755
    2. 'of' → logprob: -3.413945436477661
    3. '(' → logprob: -5.288945198059082
    4. ')' → logprob: -8.413945198059082
    5. ' ' → logprob: -11.788945198059082
    6. '(of' → logprob: -13.163945198059082
    7. '(
' → logprob: -13.288945198059082
    8. '	of' → logprob: -13.788945198059082
    9. '(C' → logprob: -14.163945198059082
    10. ' (' → logprob: -14.413945198059082

Token 89: ' Coin' (ID: 35089)
  Prédit: ' Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Coin' → logprob: -0.0009178895270451903
    2. 'Coin' → logprob: -7.000917911529541
    3. ' ' → logprob: -13.125917434692383
    4. ' Coins' → logprob: -13.125917434692383
    5. ' ' → logprob: -13.875917434692383
    6. ' `' → logprob: -14.750917434692383
    7. ' C' → logprob: -15.000917434692383
    8. '	C' → logprob: -15.625917434692383
    9. '```' → logprob: -16.500917434692383
    10. ' Co' → logprob: -16.875917434692383

Token 90: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.042085129767656326
    2. ')")' → logprob: -3.4170851707458496
    3. '.")' → logprob: -5.04208517074585
    4. '")
' → logprob: -7.04208517074585
    5. ')' → logprob: -7.41708517074585
    6. ')")
' → logprob: -7.91708517074585
    7. '.")
' → logprob: -10.542084693908691
    8. '!")' → logprob: -10.917084693908691
    9. '")
' → logprob: -11.292084693908691
    10. '}")' → logprob: -11.667084693908691

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013214473437983543
    2. '        
' → logprob: -9.50013256072998
    3. '
' → logprob: -10.25013256072998
    4. 'self' → logprob: -11.75013256072998
    5. '   ' → logprob: -12.62513256072998
    6. ' self' → logprob: -12.62513256072998
    7. '<|end|>' → logprob: -13.25013256072998
    8. '      ' → logprob: -13.75013256072998
    9. '    
' → logprob: -14.00013256072998
    10. '     ' → logprob: -14.12513256072998

Token 92: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014410654548555613
    2. ' self' → logprob: -7.00144100189209
    3. 'self' (adapté à ' self') → logprob: -8.00144100189209
    4. '        
' → logprob: -9.00144100189209
    5. '
' → logprob: -10.50144100189209
    6. '   ' → logprob: -11.00144100189209
    7. '	self' → logprob: -11.87644100189209
    8. ' 
' → logprob: -12.62644100189209
    9. '    
' → logprob: -12.75144100189209
    10. ' ' → logprob: -12.75144100189209

Token 93: '.co' (ID: 10914)
  Prédit: '.co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.co' → logprob: -0.01553544495254755
    2. '.' → logprob: -4.265535354614258
    3. ' .' → logprob: -6.640535354614258
    4. '.coin' → logprob: -10.390535354614258
    5. '.coe' → logprob: -11.640535354614258
    6. '.c' → logprob: -11.640535354614258
    7. '   ' → logprob: -12.890535354614258
    8. '.con' → logprob: -13.140535354614258
    9. '```' → logprob: -13.140535354614258
    10. '​.' → logprob: -13.515535354614258

Token 94: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -9.014684110297821e-06
    2. 'in' → logprob: -13.125008583068848
    3. '   ' → logprob: -13.500008583068848
    4. 'coins' → logprob: -13.500008583068848
    5. 'inds' → logprob: -14.125008583068848
    6. '```' → logprob: -14.625008583068848
    7. 'insu' → logprob: -15.000008583068848
    8. '#' → logprob: -15.125008583068848
    9. '(ins' → logprob: -15.250008583068848
    10. '.ins' → logprob: -15.375008583068848

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031781906727701426
    2. '=' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.003178596496582
    4. '.extend' → logprob: -15.878178596496582
    5. 's' → logprob: -18.128177642822266
    6. ' +=' → logprob: -19.003177642822266
    7. '.' → logprob: -19.253177642822266
    8. ' ' → logprob: -19.503177642822266
    9. ')' → logprob: -19.878177642822266
    10. '   ' → logprob: -20.253177642822266

Token 96: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.4741072654724121
    2. ' coins' → logprob: -0.9741072654724121
    3. ' list' → logprob: -11.47410774230957
    4. 'coin' → logprob: -12.22410774230957
    5. 'list' → logprob: -12.22410774230957
    6. 'co' → logprob: -12.97410774230957
    7. ' ' → logprob: -13.34910774230957
    8. '   ' → logprob: -13.59910774230957
    9. '    ' → logprob: -13.84910774230957
    10. ' coin' → logprob: -14.22410774230957

Token 97: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006983776111155748
    2. '<|end|>' → logprob: -5.631983757019043
    3. '

' → logprob: -6.506983757019043
    4. '   ' → logprob: -7.131983757019043
    5. 'def' → logprob: -7.631983757019043
    6. '    
' → logprob: -8.506983757019043
    7. ' def' → logprob: -8.631983757019043
    8. '<|end|>' → logprob: -8.756983757019043
    9. '	def' → logprob: -11.381983757019043
    10. ' 
' → logprob: -11.506983757019043

Token 98: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04085775837302208
    2. '   ' → logprob: -3.6658577919006348
    3. '    
' → logprob: -4.290857791900635
    4. '

' → logprob: -7.915857791900635
    5. 'def' → logprob: -9.290857315063477
    6. '<|end|>' → logprob: -9.290857315063477
    7. ' 
' → logprob: -9.790857315063477
    8. '  
' → logprob: -10.040857315063477
    9. '        
' → logprob: -10.290857315063477
    10. '
    
' → logprob: -10.665857315063477

Token 99: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024716950953006744
    2. ' def' → logprob: -3.774716854095459
    3. '   ' → logprob: -6.524716854095459
    4. ' ' → logprob: -13.524717330932617
    5. '    
' → logprob: -14.524717330932617
    6. '
' → logprob: -14.649717330932617
    7. 'd' → logprob: -14.649717330932617
    8. 'de' → logprob: -15.524717330932617
    9. '	def' → logprob: -15.649717330932617
    10. '  ' → logprob: -15.899717330932617

Token 100: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.26912200450897217
    2. '_total' → logprob: -2.2691221237182617
    3. 'total' → logprob: -2.7691221237182617
    4. ' add' → logprob: -2.8941221237182617
    5. ' get' → logprob: -4.769122123718262
    6. '_add' → logprob: -6.144122123718262
    7. 'add' → logprob: -6.269122123718262
    8. ' ' → logprob: -7.519122123718262
    9. ' calculate' → logprob: -7.769122123718262
    10. '_' → logprob: -8.019122123718262

Token 101: '_coin' (ID: 187802)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00010807292710524052
    2. '_' → logprob: -9.250107765197754
    3. '_amount' → logprob: -11.625107765197754
    4. '_val' → logprob: -13.250107765197754
    5. '_values' → logprob: -14.625107765197754
    6. '_Value' → logprob: -15.250107765197754
    7. '_price' → logprob: -15.375107765197754
    8. '_money' → logprob: -16.50010871887207
    9. ' _' → logprob: -16.75010871887207
    10. '_VALUE' → logprob: -17.25010871887207

Token 102: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.20159772038459778
    2. 's' → logprob: -1.7015976905822754
    3. 'value' → logprob: -9.576598167419434
    4. '_' → logprob: -9.576598167419434
    5. '_count' → logprob: -10.576598167419434
    6. '_values' → logprob: -11.576598167419434
    7. '_s' → logprob: -12.576598167419434
    8. '_amount' → logprob: -12.701598167419434
    9. '_val' → logprob: -13.701598167419434
    10. 'Value' → logprob: -13.701598167419434

Token 103: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008921811357140541
    2. '(' → logprob: -4.7589216232299805
    3. '()' → logprob: -8.25892162322998
    4. ' (' → logprob: -10.50892162322998
    5. '(s' → logprob: -11.88392162322998
    6. 's' → logprob: -12.13392162322998
    7. 'self' → logprob: -12.25892162322998
    8. '   ' → logprob: -13.38392162322998
    9. ' ' → logprob: -14.00892162322998
    10. '()(' → logprob: -15.13392162322998

Token 104: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1606537252664566
    2. ')' → logprob: -1.9106537103652954
    3. 'self' → logprob: -8.785654067993164
    4. '):
' → logprob: -8.910654067993164
    5. ' ):' → logprob: -9.160654067993164
    6. ' )' → logprob: -11.785654067993164
    7. '(self' → logprob: -11.910654067993164
    8. '   ' → logprob: -12.160654067993164
    9. '()' → logprob: -12.410654067993164
    10. '       ' → logprob: -12.660654067993164

Token 105: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013424931094050407
    2. '(' → logprob: -6.626342296600342
    3. ':' → logprob: -12.0013427734375
    4. 'self' → logprob: -12.5013427734375
    5. ' (' → logprob: -12.7513427734375
    6. '():' → logprob: -13.3763427734375
    7. '   ' → logprob: -13.8763427734375
    8. '       ' → logprob: -14.5013427734375
    9. '(s' → logprob: -15.1263427734375
    10. ' self' → logprob: -15.7513427734375

Token 106: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759704113006592
    2. 'int' → logprob: -0.8259704113006592
    3. ' sum' → logprob: -10.825970649719238
    4. 'sum' → logprob: -11.950970649719238
    5. ' ' → logprob: -12.825970649719238
    6. '   ' → logprob: -13.700970649719238
    7. '(int' → logprob: -14.825970649719238
    8. '  ' → logprob: -16.325969696044922
    9. '    ' → logprob: -16.325969696044922
    10. '	int' → logprob: -16.450969696044922

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003357006062287837
    2. ':
' → logprob: -8.375335693359375
    3. '):' → logprob: -9.875335693359375
    4. '       ' → logprob: -10.375335693359375
    5. ' :' → logprob: -12.000335693359375
    6. '():' → logprob: -12.125335693359375
    7. ':return' → logprob: -12.250335693359375
    8. '   ' → logprob: -13.250335693359375
    9. '(self' → logprob: -13.625335693359375
    10. '(' → logprob: -13.750335693359375

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.923874702304602e-05
    2. '
' → logprob: -10.375089645385742
    3. ' return' → logprob: -10.375089645385742
    4. 'return' → logprob: -10.875089645385742
    5. '        
' → logprob: -13.000089645385742
    6. '   ' → logprob: -13.875089645385742
    7. '```' → logprob: -14.250089645385742
    8. '    
' → logprob: -14.375089645385742
    9. 'sum' → logprob: -14.375089645385742
    10. '      ' → logprob: -14.625089645385742

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26300203800201416
    2. ' return' → logprob: -1.7630020380020142
    3. 'sum' → logprob: -3.2630019187927246
    4. '       ' → logprob: -4.263001918792725
    5. ' sum' → logprob: -5.013001918792725
    6. 'total' → logprob: -7.638001918792725
    7. ' total' → logprob: -8.763002395629883
    8. 'result' → logprob: -9.763002395629883
    9. '
' → logprob: -11.763002395629883
    10. '   ' → logprob: -11.888002395629883

Token 110: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.0017249188385903835
    2. 'sum' → logprob: -6.376724720001221
    3. ' self' → logprob: -11.626725196838379
    4. ' ' → logprob: -12.001725196838379
    5. ' ' → logprob: -12.501725196838379
    6. '	sum' → logprob: -13.376725196838379
    7. '    ' → logprob: -14.126725196838379
    8. '(sum' → logprob: -14.376725196838379
    9. '   ' → logprob: -14.501725196838379
    10. '  ' → logprob: -16.001724243164062

Token 111: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018669569864869118
    2. '(c' → logprob: -4.018669605255127
    3. '(co' → logprob: -8.018669128417969
    4. '([' → logprob: -8.893669128417969
    5. '((' → logprob: -10.518669128417969
    6. '(
' → logprob: -11.268669128417969
    7. '(self' → logprob: -12.143669128417969
    8. 'coin' → logprob: -13.393669128417969
    9. '(

' → logprob: -13.518669128417969
    10. '(C' → logprob: -13.768669128417969

Token 112: 'coin' (ID: 10126)
  Prédit: 'coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coin' → logprob: -0.005957241170108318
    2. 'c' → logprob: -5.130957126617432
    3. ' coin' → logprob: -11.38095760345459
    4. '   ' → logprob: -11.38095760345459
    5. '       ' → logprob: -14.00595760345459
    6. ')' → logprob: -14.00595760345459
    7. '[' → logprob: -14.13095760345459
    8. '```' → logprob: -14.13095760345459
    9. 'self' → logprob: -14.38095760345459
    10. ')c' → logprob: -14.75595760345459

Token 113: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.006978332996368408
    2. '.' → logprob: -5.006978511810303
    3. '.value' → logprob: -8.756978034973145
    4. '.count' → logprob: -9.631978034973145
    5. ' .' → logprob: -11.131978034973145
    6. '.coin' → logprob: -11.131978034973145
    7. '.amount' → logprob: -12.756978034973145
    8. '   ' → logprob: -13.381978034973145
    9. ').' → logprob: -13.381978034973145
    10. '.token' → logprob: -13.506978034973145

Token 114: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.375000953674316
    3. '_val' → logprob: -16.0
    4. 'value' → logprob: -17.125
    5. '_VALUE' → logprob: -18.75
    6. '_Value' → logprob: -19.125
    7. 'alue' → logprob: -20.25
    8. '_values' → logprob: -21.0
    9. '_token' → logprob: -21.625
    10. ')_' → logprob: -21.75

Token 115: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025094281882047653
    2. '())' → logprob: -6.002509593963623
    3. ')' → logprob: -10.377509117126465
    4. ' ()' → logprob: -13.877509117126465
    5. '()
' → logprob: -14.877509117126465
    6. '(' → logprob: -15.002509117126465
    7. '()`' → logprob: -15.002509117126465
    8. 'for' → logprob: -15.252509117126465
    9. '()]' → logprob: -16.12751007080078
    10. '()))' → logprob: -16.75251007080078

Token 116: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3289421796798706
    2. ' for' → logprob: -1.5789421796798706
    3. '()' → logprob: -3.07894229888916
    4. ' )' → logprob: -3.95394229888916
    5. '())' → logprob: -5.32894229888916
    6. 'for' → logprob: -5.57894229888916
    7. ' ' → logprob: -8.70394229888916
    8. '   ' → logprob: -10.45394229888916
    9. ' ())' → logprob: -10.70394229888916
    10. ' ()' → logprob: -10.95394229888916

Token 117: ' coin' (ID: 22179)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.027617692947387695
    2. ' coin' → logprob: -3.6526176929473877
    3. 'self' → logprob: -6.652617454528809
    4. 'coin' → logprob: -11.027617454528809
    5. ' ' → logprob: -12.277617454528809
    6. ' ' → logprob: -13.402617454528809
    7. '	self' → logprob: -13.402617454528809
    8. '_coin' → logprob: -14.027617454528809
    9. '.coin' → logprob: -14.902617454528809
    10. ' coins' → logprob: -15.152617454528809

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02003689482808113
    2. 'in' → logprob: -4.895036697387695
    3. ' coin' → logprob: -5.145036697387695
    4. 's' → logprob: -6.145036697387695
    5. ' self' → logprob: -6.895036697387695
    6. '.' → logprob: -7.145036697387695
    7. '.coin' → logprob: -7.145036697387695
    8. ')' → logprob: -7.645036697387695
    9. '<|end|>' → logprob: -7.645036697387695
    10. ' ' → logprob: -8.520036697387695

Token 119: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868800103664398
    2. ' self' → logprob: -1.1368800401687622
    3. '	self' → logprob: -12.136879920959473
    4. ' ' → logprob: -14.136879920959473
    5. '[self' → logprob: -14.261879920959473
    6. '(self' → logprob: -14.261879920959473
    7. '_self' → logprob: -14.761879920959473
    8. '<|end|>' → logprob: -15.011879920959473
    9. '       ' → logprob: -15.761879920959473
    10. '   ' → logprob: -16.13688087463379

Token 120: '.co' (ID: 10914)
  Prédit: '.co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.co' → logprob: -0.00044223200529813766
    2. '.' → logprob: -7.750442028045654
    3. ' .' → logprob: -12.250442504882812
    4. '.coin' → logprob: -12.500442504882812
    5. 'coins' → logprob: -13.250442504882812
    6. '.con' → logprob: -14.500442504882812
    7. '.CO' → logprob: -16.000442504882812
    8. ').' → logprob: -16.125442504882812
    9. '.coe' → logprob: -16.250442504882812
    10. '.c' → logprob: -16.500442504882812

Token 121: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.004627598915249109
    2. 'in' → logprob: -5.379627704620361
    3. 'ns' → logprob: -12.754627227783203
    4. '   ' → logprob: -13.879627227783203
    5. '```' → logprob: -14.129627227783203
    6. ' ' → logprob: -14.629627227783203
    7. 'i' → logprob: -14.879627227783203
    8. 'coins' → logprob: -15.379627227783203
    9. '  ' → logprob: -15.629627227783203
    10. 'n' → logprob: -15.754627227783203

Token 122: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.35706390615087e-05
    2. '       ' → logprob: -11.000033378601074
    3. ' )' → logprob: -11.250033378601074
    4. ')
' → logprob: -12.875033378601074
    5. ')return' → logprob: -14.500033378601074
    6. '))' → logprob: -15.125033378601074
    7. ')}' → logprob: -15.875033378601074
    8. '   ' → logprob: -16.25003433227539
    9. '<|end|>' → logprob: -16.37503433227539
    10. '())' → logprob: -16.50003433227539

Token 123: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02162240445613861
    2. '   ' → logprob: -4.646622180938721
    3. '<|end|>' → logprob: -5.271622180938721
    4. '

' → logprob: -5.521622180938721
    5. 'def' → logprob: -6.521622180938721
    6. '    
' → logprob: -7.521622180938721
    7. '<|end|>' → logprob: -8.271622657775879
    8. '```' → logprob: -9.146622657775879
    9. '  
' → logprob: -9.646622657775879
    10. ' 
' → logprob: -10.021622657775879

Token 124: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009487250819802284
    2. ' def' → logprob: -5.259487152099609
    3. '   ' → logprob: -5.509487152099609
    4. '
' → logprob: -9.00948715209961
    5. '    
' → logprob: -10.38448715209961
    6. '	def' → logprob: -11.13448715209961
    7. '```' → logprob: -11.50948715209961
    8. ' ' → logprob: -12.38448715209961
    9. '<|end|>' → logprob: -12.75948715209961
    10. '

' → logprob: -13.63448715209961

Token 125: ' can' (ID: 665)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0020662799943238497
    2. 'add' → logprob: -7.627066135406494
    3. ' remove' → logprob: -7.627066135406494
    4. '_add' → logprob: -8.002066612243652
    5. ' def' → logprob: -8.127066612243652
    6. ' total' → logprob: -8.877066612243652
    7. ' ' → logprob: -9.502066612243652
    8. ' count' → logprob: -10.127066612243652
    9. ' get' → logprob: -10.377066612243652
    10. ' find' → logprob: -10.502066612243652

Token 126: '_exchange' (ID: 152363)
  Prédit: '_make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_make' → logprob: -0.13256125152111053
    2. '_pay' → logprob: -2.757561206817627
    3. '_purchase' → logprob: -3.382561206817627
    4. '_add' → logprob: -4.632561206817627
    5. '_aff' → logprob: -5.257561206817627
    6. '_buy' → logprob: -6.132561206817627
    7. '_use' → logprob: -6.132561206817627
    8. '_' → logprob: -6.382561206817627
    9. '_hold' → logprob: -6.632561206817627
    10. '_change' → logprob: -7.757561206817627

Token 127: '_for' (ID: 11903)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016045980155467987
    2. '(' → logprob: -4.266046047210693
    3. '_for' → logprob: -7.516046047210693
    4. '<|end|>' → logprob: -7.641046047210693
    5. '_amount' → logprob: -8.266045570373535
    6. 'self' → logprob: -8.391045570373535
    7. '_coin' → logprob: -9.891045570373535
    8. '(amount' → logprob: -9.891045570373535
    9. '(
' → logprob: -10.266045570373535
    10. '_change' → logprob: -10.391045570373535

Token 128: '_bill' (ID: 147613)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0049141086637973785
    2. '(' → logprob: -6.254914283752441
    3. '_amount' → logprob: -7.004914283752441
    4. 'self' → logprob: -7.129914283752441
    5. '_coin' → logprob: -8.254914283752441
    6. '<|end|>' → logprob: -8.629914283752441
    7. '_value' → logprob: -8.754914283752441
    8. '_change' → logprob: -9.004914283752441
    9. '_currency' → logprob: -9.129914283752441
    10. '(amount' → logprob: -9.629914283752441

Token 129: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032463972456753254
    2. '(' → logprob: -5.753246307373047
    3. '(
' → logprob: -10.253246307373047
    4. '(s' → logprob: -11.128246307373047
    5. 'self' → logprob: -11.878246307373047
    6. '<|end|>' → logprob: -12.503246307373047
    7. 's' → logprob: -13.003246307373047
    8. ' (' → logprob: -13.878246307373047
    9. '(

' → logprob: -14.128246307373047
    10. '1' → logprob: -14.253246307373047

Token 130: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001659470610320568
    2. '(' → logprob: -6.626659393310547
    3. 'self' → logprob: -8.751659393310547
    4. ')' → logprob: -9.501659393310547
    5. ',' → logprob: -10.501659393310547
    6. ' (' → logprob: -10.626659393310547
    7. 's' → logprob: -11.126659393310547
    8. '(
' → logprob: -11.251659393310547
    9. ')(' → logprob: -12.251659393310547
    10. ' self' → logprob: -12.626659393310547

Token 131: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016162583604454994
    2. '(' → logprob: -4.141162395477295
    3. ' (' → logprob: -9.141162872314453
    4. 'self' → logprob: -11.516162872314453
    5. '(
' → logprob: -12.016162872314453
    6. '(s' → logprob: -13.266162872314453
    7. 's' → logprob: -14.141162872314453
    8. ' self' → logprob: -14.391162872314453
    9. '   ' → logprob: -14.641162872314453
    10. 'def' → logprob: -15.516162872314453

Token 132: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.07138597220182419
    2. 'bool' → logprob: -2.6963858604431152
    3. ' int' → logprob: -7.196385860443115
    4. 'int' → logprob: -7.946385860443115
    5. ' True' → logprob: -8.821386337280273
    6. ' ' → logprob: -9.196386337280273
    7. 'True' → logprob: -10.696386337280273
    8. '(bool' → logprob: -11.321386337280273
    9. ' self' → logprob: -11.946386337280273
    10. '   ' → logprob: -12.071386337280273

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.076461561024189
    2. '(self' → logprob: -2.8264615535736084
    3. ':
' → logprob: -4.5764617919921875
    4. '       ' → logprob: -5.8264617919921875
    5. '(' → logprob: -7.4514617919921875
    6. 'self' → logprob: -8.576461791992188
    7. '(
' → logprob: -8.951461791992188
    8. '   ' → logprob: -9.326461791992188
    9. ':self' → logprob: -9.826461791992188
    10. '):' → logprob: -9.951461791992188

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011816580081358552
    2. ' return' → logprob: -8.251181602478027
    3. 'return' → logprob: -8.751181602478027
    4. '
' → logprob: -8.751181602478027
    5. 'self' → logprob: -9.251181602478027
    6. ' self' → logprob: -9.501181602478027
    7. '        
' → logprob: -10.001181602478027
    8. 'total' → logprob: -10.001181602478027
    9. ' total' → logprob: -10.376181602478027
    10. '   ' → logprob: -10.501181602478027

Token 135: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.437839150428772
    2. 'total' → logprob: -1.187839150428772
    3. '       ' → logprob: -3.8128390312194824
    4. ' return' → logprob: -4.562839031219482
    5. 'for' → logprob: -4.937839031219482
    6. 'any' → logprob: -5.312839031219482
    7. ' total' → logprob: -5.937839031219482
    8. 'self' → logprob: -7.062839031219482
    9. ' for' → logprob: -7.687839031219482
    10. ' any' → logprob: -8.18783950805664

Token 136: ' self' (ID: 1051)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.4534933865070343
    2. ' self' → logprob: -1.078493356704712
    3. 'self' → logprob: -3.828493356704712
    4. 'any' → logprob: -5.953493595123291
    5. ' sum' → logprob: -9.953493118286133
    6. ' ' → logprob: -10.203493118286133
    7. ' all' → logprob: -10.703493118286133
    8. '   ' → logprob: -10.953493118286133
    9. 'sum' → logprob: -12.203493118286133
    10. ' a' → logprob: -12.578493118286133

Token 137: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.01471656747162342
    2. '.' → logprob: -4.264716625213623
    3. ' .' → logprob: -7.514716625213623
    4. 'total' → logprob: -12.014716148376465
    5. ' ' → logprob: -14.264716148376465
    6. '.sum' → logprob: -15.514716148376465
    7. '.t' → logprob: -15.514716148376465
    8. '	total' → logprob: -16.01471710205078
    9. '.coin' → logprob: -16.01471710205078
    10. ' total' → logprob: -16.51471710205078

Token 138: '_coin' (ID: 187802)
  Prédit: '_coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coin' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.500004768371582
    3. 'coin' → logprob: -13.750004768371582
    4. '_value' → logprob: -15.000004768371582
    5. 'Coin' → logprob: -17.7500057220459
    6. '_co' → logprob: -18.6250057220459
    7. ' coin' → logprob: -18.6250057220459
    8. 'value' → logprob: -19.0000057220459
    9. '_coupon' → logprob: -19.6250057220459
    10. '_bill' → logprob: -19.8750057220459

Token 139: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.25
    3. 'value' → logprob: -16.25
    4. '_VALUE' → logprob: -19.0
    5. '_coin' → logprob: -19.75
    6. '_val' → logprob: -19.875
    7. '_Value' → logprob: -19.875
    8. '_values' → logprob: -20.375
    9. 'alue' → logprob: -20.75
    10. ' value' → logprob: -21.75

Token 140: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007675791857764125
    2. '(' → logprob: -7.500767707824707
    3. '()>' → logprob: -9.000767707824707
    4. ' ()' → logprob: -9.750767707824707
    5. ')' → logprob: -11.500767707824707
    6. '()%' → logprob: -11.625767707824707
    7. '>=' → logprob: -12.750767707824707
    8. '()==' → logprob: -13.000767707824707
    9. ' >=' → logprob: -13.125767707824707
    10. '()
' → logprob: -13.500767707824707

Token 141: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.04293455556035042
    2. '>=' → logprob: -3.6679346561431885
    3. ' %' → logprob: -4.792934417724609
    4. '%' → logprob: -6.167934417724609
    5. '()' → logprob: -6.167934417724609
    6. ' ' → logprob: -6.292934417724609
    7. ' >' → logprob: -6.917934417724609
    8. '>' → logprob: -7.167934417724609
    9. '()>' → logprob: -9.66793441772461
    10. ')>=' → logprob: -9.66793441772461

Token 142: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.14812612533569336
    2. ' ' → logprob: -2.7731261253356934
    3. '1' → logprob: -3.1481261253356934
    4. '20' → logprob: -4.023126125335693
    5. '10' → logprob: -4.648126125335693
    6. '50' → logprob: -5.648126125335693
    7. '500' → logprob: -7.648126125335693
    8. '5' → logprob: -7.773126125335693
    9. '   ' → logprob: -9.023126602172852
    10. '200' → logprob: -9.023126602172852

Token 143: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.24224141240119934
    2. '20' → logprob: -2.742241382598877
    3. '10' → logprob: -2.742241382598877
    4. '1' → logprob: -2.867241382598877
    5. ' ' → logprob: -4.367241382598877
    6. '50' → logprob: -4.617241382598877
    7. '5' → logprob: -5.117241382598877
    8. '500' → logprob: -7.867241382598877
    9. '   ' → logprob: -8.242241859436035
    10. '  ' → logprob: -9.492241859436035

Token 144: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5257408618927002
    2. '<|end|>' → logprob: -0.9007408618927002
    3. '<|end|>' → logprob: -6.400740623474121
    4. '

' → logprob: -8.025740623474121
    5. 'def' → logprob: -8.525740623474121
    6. '   ' → logprob: -9.025740623474121
    7. '    
' → logprob: -9.650740623474121
    8. '\n' → logprob: -9.650740623474121
    9. ' def' → logprob: -10.525740623474121
    10. '```' → logprob: -10.900740623474121

Token 146: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41304048895835876
    2. '   ' → logprob: -1.6630405187606812
    3. '<|end|>' → logprob: -2.5380403995513916
    4. '
' → logprob: -3.5380403995513916
    5. 'class' → logprob: -3.7880403995513916
    6. '#' → logprob: -5.038040637969971
    7. 'd' → logprob: -5.538040637969971
    8. '```' → logprob: -6.663040637969971
    9. ' ' → logprob: -6.913040637969971
    10. '<|end|>' → logprob: -7.038040637969971

Token 147: ' Input' (ID: 10090)
  Prédit: ' Bank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Bank' → logprob: -0.6073585748672485
    2. ' Bill' → logprob: -0.9823585748672485
    3. 'Bill' → logprob: -3.857358455657959
    4. ' Cash' → logprob: -4.107358455657959
    5. 'Bank' → logprob: -4.732358455657959
    6. ' Pig' → logprob: -4.857358455657959
    7. ' Wallet' → logprob: -5.107358455657959
    8. ' Currency' → logprob: -5.357358455657959
    9. ' Transaction' → logprob: -5.482358455657959
    10. ' Person' → logprob: -5.982358455657959

Token 148: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.2603229880332947
    2. 'Validator' → logprob: -2.2603230476379395
    3. 'Parser' → logprob: -3.3853230476379395
    4. 'Processor' → logprob: -3.5103230476379395
    5. 'Data' → logprob: -4.1353230476379395
    6. 'Wallet' → logprob: -4.6353230476379395
    7. 'Error' → logprob: -5.2603230476379395
    8. 'Manager' → logprob: -5.6353230476379395
    9. 'Coin' → logprob: -5.6353230476379395
    10. 'Box' → logprob: -5.8853230476379395

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005838918150402606
    2. ':
' → logprob: -7.500584125518799
    3. ' :' → logprob: -10.62558364868164
    4. '():' → logprob: -13.12558364868164
    5. '<|end|>' → logprob: -13.75058364868164
    6. ':def' → logprob: -13.87558364868164
    7. '):' → logprob: -14.00058364868164
    8. ':

' → logprob: -14.50058364868164
    9. ':**' → logprob: -15.37558364868164
    10. '(' → logprob: -15.62558364868164

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027927951887249947
    2. ' def' → logprob: -3.652927875518799
    3. 'def' → logprob: -6.652927875518799
    4. '	def' → logprob: -9.527928352355957
    5. '<|end|>' → logprob: -9.652928352355957
    6. '
' → logprob: -9.777928352355957
    7. '    
' → logprob: -9.777928352355957
    8. ':' → logprob: -9.902928352355957
    9. ':
' → logprob: -11.152928352355957
    10. '<|end|>' → logprob: -12.527928352355957

Token 151: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.39396050572395325
    2. 'def' → logprob: -1.1439604759216309
    3. '   ' → logprob: -5.518960475921631
    4. ' @' → logprob: -6.268960475921631
    5. '@' (adapté à ' @') → logprob: -6.768960475921631
    6. 'class' → logprob: -11.768960952758789
    7. 'staticmethod' → logprob: -13.393960952758789
    8. '	def' → logprob: -14.768960952758789
    9. ' static' → logprob: -15.018960952758789
    10. '
' → logprob: -15.018960952758789

Token 152: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0005010855966247618
    2. 'static' → logprob: -8.000500679016113
    3. 'classmethod' → logprob: -8.750500679016113
    4. 'st' → logprob: -12.625500679016113
    5. 'stat' → logprob: -13.125500679016113
    6. 'sta' → logprob: -13.500500679016113
    7. ' static' → logprob: -14.625500679016113
    8. 'dat' → logprob: -16.12550163269043
    9. 'property' → logprob: -17.00050163269043
    10. 's' → logprob: -17.12550163269043

Token 153: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05293292552232742
    2. '
' → logprob: -3.1779329776763916
    3. ' def' → logprob: -5.3029327392578125
    4. '   ' → logprob: -5.4279327392578125
    5. '(' → logprob: -8.552932739257812
    6. '(def' → logprob: -9.302932739257812
    7. '()
' → logprob: -9.927932739257812
    8. '    
' → logprob: -10.302932739257812
    9. '	def' → logprob: -10.677932739257812
    10. '()' → logprob: -11.052932739257812

Token 154: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008165942505002022
    2. ' def' → logprob: -4.8831658363342285
    3. '   ' → logprob: -7.6331658363342285
    4. '
' → logprob: -9.633166313171387
    5. '	def' → logprob: -12.758166313171387
    6. '(def' → logprob: -12.758166313171387
    7. ':def' → logprob: -13.758166313171387
    8. '\' → logprob: -14.383166313171387
    9. '(' → logprob: -14.508166313171387
    10. '_def' → logprob: -14.758166313171387

Token 155: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009115827269852161
    2. ' def' → logprob: -7.000911712646484
    3. 'parse' → logprob: -17.500911712646484
    4. 'from' → logprob: -18.125911712646484
    5. 'staticmethod' → logprob: -18.375911712646484
    6. ' ' → logprob: -18.500911712646484
    7. '   ' → logprob: -19.000911712646484
    8. '
' → logprob: -19.125911712646484
    9. '```' → logprob: -19.375911712646484
    10. 'classmethod' → logprob: -19.625911712646484

Token 156: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.04886826127767563
    2. 'parse' → logprob: -3.048868179321289
    3. ' def' → logprob: -8.298868179321289
    4. 'def' → logprob: -10.798868179321289
    5. ' read' → logprob: -13.298868179321289
    6. ' parses' → logprob: -13.298868179321289
    7. '	parse' → logprob: -13.298868179321289
    8. '_parse' → logprob: -13.798868179321289
    9. ' input' → logprob: -14.048868179321289
    10. ' validate' → logprob: -14.298868179321289

Token 157: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19905352592468262
    2. '_input' → logprob: -3.3240535259246826
    3. '(data' → logprob: -3.5740535259246826
    4. '_co' → logprob: -3.9490535259246826
    5. '(json' → logprob: -4.199053764343262
    6. '(wallet' → logprob: -4.324053764343262
    7. '(co' → logprob: -4.449053764343262
    8. '_coin' → logprob: -4.574053764343262
    9. '(' → logprob: -5.074053764343262
    10. '(lines' → logprob: -5.199053764343262

Token 158: '_line' (ID: 14418)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.5579890012741089
    2. '_str' → logprob: -0.9329890012741089
    3. '_' → logprob: -4.807989120483398
    4. '_line' → logprob: -4.932989120483398
    5. '_data' → logprob: -5.057989120483398
    6. '_text' → logprob: -5.307989120483398
    7. ':' → logprob: -6.057989120483398
    8. '):' → logprob: -6.182989120483398
    9. ')' → logprob: -6.807989120483398
    10. '_lines' → logprob: -7.807989120483398

Token 159: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.218400239944458
    2. '):' → logprob: -1.718400239944458
    3. ')' → logprob: -4.218400001525879
    4. ':str' → logprob: -6.968400001525879
    5. '):
' → logprob: -7.343400001525879
    6. '   ' → logprob: -8.843400001525879
    7. ' :' → logprob: -9.468400001525879
    8. ',' → logprob: -9.593400001525879
    9. 'string' → logprob: -9.968400001525879
    10. '(line' → logprob: -10.093400001525879

Token 160: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.38806310296058655
    2. 'str' → logprob: -1.1380630731582642
    3. ')' → logprob: -6.763062953948975
    4. '   ' → logprob: -11.388063430786133
    5. ' )' → logprob: -11.888063430786133
    6. '):
' → logprob: -12.263063430786133
    7. ' ' → logprob: -12.763063430786133
    8. '[str' → logprob: -13.263063430786133
    9. '):' → logprob: -13.388063430786133
    10. ':str' → logprob: -13.513063430786133

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020973898062948138
    2. ' )' → logprob: -8.62520980834961
    3. '):' → logprob: -10.75020980834961
    4. '   ' → logprob: -12.62520980834961
    5. '):
' → logprob: -12.62520980834961
    6. ')->' → logprob: -14.25020980834961
    7. '`)' → logprob: -14.62520980834961
    8. ' ' → logprob: -15.62520980834961
    9. '")' → logprob: -15.62520980834961
    10. ',' → logprob: -15.75020980834961

Token 162: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.621670663356781
    2. ' ->' → logprob: -1.2466707229614258
    3. '->' → logprob: -1.7466707229614258
    4. '   ' → logprob: -7.746670722961426
    5. ')' → logprob: -8.246670722961426
    6. ')->' → logprob: -8.371670722961426
    7. '):' → logprob: -10.121670722961426
    8. ':
' → logprob: -10.121670722961426
    9. '():' → logprob: -10.746670722961426
    10. '       ' → logprob: -10.996670722961426

Token 163: ' Wallet' (ID: 50822)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18440718948841095
    2. ' list' → logprob: -1.8094072341918945
    3. '[list' → logprob: -6.0594072341918945
    4. 'List' → logprob: -7.1844072341918945
    5. 'tuple' → logprob: -7.6844072341918945
    6. '[]' → logprob: -8.309407234191895
    7. ' tuple' → logprob: -8.559407234191895
    8. 'Coin' → logprob: -8.684407234191895
    9. '[' → logprob: -9.059407234191895
    10. 'None' → logprob: -9.684407234191895

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013429614715278149
    2. ':
' → logprob: -4.388429641723633
    3. '():' → logprob: -7.638429641723633
    4. '       ' → logprob: -9.138429641723633
    5. '():
' → logprob: -9.138429641723633
    6. '):' → logprob: -9.638429641723633
    7. '   ' → logprob: -9.638429641723633
    8. '<|end|>' → logprob: -10.888429641723633
    9. ':return' → logprob: -11.138429641723633
    10. '[' → logprob: -11.263429641723633

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003949336241930723
    2. 'tokens' → logprob: -5.878949165344238
    3. ' tokens' → logprob: -7.253949165344238
    4. '        
' → logprob: -9.628949165344238
    5. ' coins' → logprob: -9.753949165344238
    6. '   ' → logprob: -10.128949165344238
    7. 'coins' → logprob: -10.503949165344238
    8. '      ' → logprob: -10.503949165344238
    9. '
' → logprob: -10.753949165344238
    10. '        ' → logprob: -10.878949165344238

Token 166: ' try' (ID: 2075)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.020796336233615875
    2. 'parts' → logprob: -4.520796298980713
    3. 'coin' → logprob: -5.145796298980713
    4. 'tokens' → logprob: -6.270796298980713
    5. ' coins' → logprob: -6.770796298980713
    6. 'try' (adapté à ' try') → logprob: -8.145796775817871
    7. '       ' → logprob: -8.520796775817871
    8. ' parts' → logprob: -9.270796775817871
    9. '#' → logprob: -9.270796775817871
    10. 'lines' → logprob: -10.270796775817871

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008608423522673547
    2. ':
' → logprob: -7.125860691070557
    3. '           ' → logprob: -10.500861167907715
    4. '<|end|>' → logprob: -11.625861167907715
    5. '       ' → logprob: -12.125861167907715
    6. ' :' → logprob: -12.250861167907715
    7. '):' → logprob: -13.500861167907715
    8. '        ' → logprob: -13.500861167907715
    9. ':return' → logprob: -13.500861167907715
    10. '<|end|>' → logprob: -13.500861167907715

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004328164737671614
    2. 'tokens' → logprob: -6.50432825088501
    3. ' coins' → logprob: -6.87932825088501
    4. 'coins' → logprob: -7.62932825088501
    5. ' lines' → logprob: -8.879327774047852
    6. 'input' → logprob: -8.879327774047852
    7. ' tokens' → logprob: -8.879327774047852
    8. '          ' → logprob: -9.004327774047852
    9. 'data' → logprob: -9.129327774047852
    10. '```' → logprob: -9.129327774047852

Token 169: ' counts' (ID: 28991)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.077059268951416
    2. 'data' → logprob: -1.452059268951416
    3. 'parts' → logprob: -2.077059268951416
    4. ' parts' → logprob: -2.327059268951416
    5. '           ' → logprob: -2.452059268951416
    6. ' coins' → logprob: -3.702059268951416
    7. ' data' → logprob: -3.702059268951416
    8. 'values' → logprob: -3.702059268951416
    9. 'coin' → logprob: -4.327059268951416
    10. 'counts' (adapté à ' counts') → logprob: -4.827059268951416

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006814827676862478
    2. '=' → logprob: -5.381814956665039
    3. ',' → logprob: -6.256814956665039
    4. ' ,' → logprob: -9.131814956665039
    5. '_str' → logprob: -9.631814956665039
    6. '_values' → logprob: -10.131814956665039
    7. '_tokens' → logprob: -11.131814956665039
    8. ' =
' → logprob: -12.006814956665039
    9. ' ' → logprob: -12.131814956665039
    10. ')' → logprob: -12.256814956665039

Token 171: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18843846023082733
    2. ' list' → logprob: -1.8134384155273438
    3. '[list' → logprob: -5.188438415527344
    4. '[' → logprob: -6.063438415527344
    5. ' [' → logprob: -7.313438415527344
    6. '[input' → logprob: -10.313438415527344
    7. '   ' → logprob: -10.813438415527344
    8. '	list' → logprob: -12.438438415527344
    9. '[int' → logprob: -12.563438415527344
    10. 'map' → logprob: -12.813438415527344

Token 172: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00023405285901390016
    2. '(' → logprob: -8.37523365020752
    3. 'map' → logprob: -13.25023365020752
    4. '(int' → logprob: -13.62523365020752
    5. '(
' → logprob: -15.62523365020752
    6. ' map' → logprob: -16.500234603881836
    7. '	map' → logprob: -16.750234603881836
    8. '   ' → logprob: -16.750234603881836
    9. '
' → logprob: -17.500234603881836
    10. '()' → logprob: -17.875234603881836

Token 173: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00035929924342781305
    2. '(' → logprob: -8.000359535217285
    3. 'int' → logprob: -10.875359535217285
    4. '(lambda' → logprob: -12.750359535217285
    5. '(
' → logprob: -14.625359535217285
    6. ',int' → logprob: -14.750359535217285
    7. ']int' → logprob: -14.875359535217285
    8. '<int' → logprob: -15.125359535217285
    9. '[int' → logprob: -15.625359535217285
    10. '=int' → logprob: -16.12535858154297

Token 174: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1126147210597992
    2. ',input' → logprob: -2.487614631652832
    3. '(' → logprob: -4.487614631652832
    4. ',' → logprob: -4.612614631652832
    5. ' (' → logprob: -6.237614631652832
    6. '(
' → logprob: -9.612614631652832
    7. ',(' → logprob: -9.862614631652832
    8. ' ,' → logprob: -9.987614631652832
    9. 'input' → logprob: -10.112614631652832
    10. ')(' → logprob: -10.862614631652832

Token 175: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2254326045513153
    2. 'input' → logprob: -1.6004326343536377
    3. ',input' → logprob: -11.975432395935059
    4. '(input' → logprob: -12.100432395935059
    5. '	input' → logprob: -12.600432395935059
    6. '[input' → logprob: -12.850432395935059
    7. '=input' → logprob: -14.475432395935059
    8. '<input' → logprob: -14.600432395935059
    9. '_input' → logprob: -15.600432395935059
    10. ' ' → logprob: -15.600432395935059

Token 176: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.014974839054048061
    2. '(input' → logprob: -4.389975070953369
    3. '(' → logprob: -6.639975070953369
    4. 'line' → logprob: -7.264975070953369
    5. 'input' → logprob: -9.014974594116211
    6. '().' → logprob: -9.264974594116211
    7. ')' → logprob: -9.389974594116211
    8. '=input' → logprob: -10.014974594116211
    9. '()' → logprob: -11.014974594116211
    10. '(
' → logprob: -11.389974594116211

Token 177: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.33718258142471313
    2. '().' → logprob: -1.3371825218200684
    3. '.split' → logprob: -3.8371825218200684
    4. '.' → logprob: -6.712182521820068
    5. ' .' → logprob: -7.087182521820068
    6. '.rstrip' → logprob: -11.462182998657227
    7. '.trim' → logprob: -12.087182998657227
    8. 'strip' → logprob: -12.587182998657227
    9. '()' → logprob: -12.712182998657227
    10. ' ().' → logprob: -12.962182998657227

Token 178: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.057743949990254e-05
    2. '()' → logprob: -10.875020980834961
    3. ' ().' → logprob: -13.750020980834961
    4. '('' → logprob: -14.625020980834961
    5. '()
' → logprob: -16.87502098083496
    6. '   ' → logprob: -17.00002098083496
    7. '().'' → logprob: -18.00002098083496
    8. '(' → logprob: -18.37502098083496
    9. '.split' → logprob: -18.62502098083496
    10. '('').' → logprob: -19.12502098083496

Token 179: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7835754988482222e-05
    2. ' split' → logprob: -11.125018119812012
    3. '(split' → logprob: -13.875018119812012
    4. '.split' → logprob: -14.250018119812012
    5. 'spl' → logprob: -14.500018119812012
    6. 'sp' → logprob: -15.625018119812012
    7. '   ' → logprob: -16.000017166137695
    8. ')' → logprob: -16.125017166137695
    9. 's' → logprob: -16.125017166137695
    10. 'rstrip' → logprob: -16.250017166137695

Token 180: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03092675283551216
    2. '(','' → logprob: -4.530926704406738
    3. '('' → logprob: -4.655926704406738
    4. '()' → logprob: -5.030926704406738
    5. '()))
' → logprob: -6.030926704406738
    6. '())' → logprob: -7.905926704406738
    7. '())))' → logprob: -8.030926704406738
    8. '(' → logprob: -8.030926704406738
    9. '()))

' → logprob: -9.905926704406738
    10. '(',' → logprob: -10.030926704406738

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006164124351926148
    2. '<|end|>' → logprob: -8.750616073608398
    3. ' denominations' → logprob: -9.125616073608398
    4. '            
' → logprob: -9.625616073608398
    5. '            ' → logprob: -9.875616073608398
    6. ',' → logprob: -10.000616073608398
    7. '
' → logprob: -10.125616073608398
    8. '               ' → logprob: -11.125616073608398
    9. '	       ' → logprob: -11.375616073608398
    10. '          ' → logprob: -11.625616073608398

Token 182: ' if' (ID: 538)
  Prédit: ' denominations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denominations' → logprob: -0.2383495718240738
    2. ' if' → logprob: -2.238349676132202
    3. ' coins' → logprob: -2.863349676132202
    4. '           ' → logprob: -3.988349676132202
    5. 'coins' → logprob: -4.613349437713623
    6. 'if' (adapté à ' if') → logprob: -4.613349437713623
    7. 'den' → logprob: -4.863349437713623
    8. ' den' → logprob: -7.488349437713623
    9. ' coin' → logprob: -7.988349437713623
    10. ' return' → logprob: -8.113349914550781

Token 183: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.003187459195032716
    2. 'len' → logprob: -5.753187656402588
    3. ' not' → logprob: -11.87818717956543
    4. '(len' → logprob: -13.87818717956543
    5. '	len' → logprob: -13.87818717956543
    6. ' counts' → logprob: -14.25318717956543
    7. ' ' → logprob: -15.62818717956543
    8. ',len' → logprob: -17.75318717956543
    9. '=len' → logprob: -17.75318717956543
    10. '[len' → logprob: -17.87818717956543

Token 184: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00036442498094402254
    2. '(' → logprob: -8.625364303588867
    3. 'counts' → logprob: -9.125364303588867
    4. ' counts' → logprob: -9.500364303588867
    5. 'count' → logprob: -14.500364303588867
    6. ' (' → logprob: -15.000364303588867
    7. '[count' → logprob: -16.625364303588867
    8. '<count' → logprob: -17.000364303588867
    9. '(
' → logprob: -17.125364303588867
    10. '<|end|>' → logprob: -17.125364303588867

Token 185: 's' (ID: 82)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.4786216914653778
    2. '(count' → logprob: -1.3536217212677002
    3. 's' → logprob: -2.3536217212677
    4. ' counts' → logprob: -4.103621482849121
    5. '_counts' → logprob: -4.853621482849121
    6. '(' → logprob: -7.353621482849121
    7. 'ount' → logprob: -7.728621482849121
    8. 'oints' → logprob: -7.728621482849121
    9. '<|end|>' → logprob: -8.228621482849121
    10. ')' → logprob: -8.728621482849121

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005652528256177902
    2. ' !=' → logprob: -6.00565242767334
    3. ')!=' → logprob: -6.50565242767334
    4. '()' → logprob: -6.88065242767334
    5. '!=' → logprob: -7.63065242767334
    6. ' )' → logprob: -9.63065242767334
    7. '()!=' → logprob: -9.63065242767334
    8. '())' → logprob: -11.00565242767334
    9. '<|end|>' → logprob: -12.63065242767334
    10. ')<' → logprob: -13.25565242767334

Token 187: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.39027005434036255
    2. '!=' → logprob: -1.1402699947357178
    3. '()!=' → logprob: -6.390270233154297
    4. ' <' → logprob: -7.515270233154297
    5. '()' → logprob: -7.640270233154297
    6. '<' → logprob: -7.640270233154297
    7. '==' → logprob: -10.390270233154297
    8. ' not' → logprob: -10.390270233154297
    9. ')!=' → logprob: -10.390270233154297
    10. '>' → logprob: -10.515270233154297

Token 188: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4074265956878662
    2. '4' → logprob: -1.9074265956878662
    3. '6' → logprob: -2.157426595687866
    4. ' ' → logprob: -2.782426595687866
    5. '3' → logprob: -5.157426834106445
    6. '7' → logprob: -5.907426834106445
    7. '8' → logprob: -9.407426834106445
    8. '10' → logprob: -9.782426834106445
    9. '   ' → logprob: -11.157426834106445
    10. '  ' → logprob: -11.657426834106445

Token 189: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.592348039150238
    2. '6' → logprob: -0.967348039150238
    3. '4' → logprob: -3.092348098754883
    4. '7' → logprob: -4.217348098754883
    5. '3' → logprob: -5.092348098754883
    6. '8' → logprob: -8.092348098754883
    7. '10' → logprob: -8.467348098754883
    8. ' ' → logprob: -10.467348098754883
    9. '9' → logprob: -10.967348098754883
    10. '2' → logprob: -10.967348098754883

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03255597874522209
    2. ':
' → logprob: -3.5325560569763184
    3. ' or' → logprob: -5.907556056976318
    4. ':return' → logprob: -10.53255558013916
    5. '):' → logprob: -10.65755558013916
    6. '           ' → logprob: -11.28255558013916
    7. '):
' → logprob: -12.15755558013916
    8. ',' → logprob: -12.40755558013916
    9. '               ' → logprob: -12.65755558013916
    10. ' and' → logprob: -13.40755558013916

Token 191: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2603490650653839
    2. '               ' → logprob: -1.6353490352630615
    3. ':
' → logprob: -3.6353490352630615
    4. '           ' → logprob: -5.135349273681641
    5. ' or' → logprob: -6.885349273681641
    6. ' :' → logprob: -8.38534927368164
    7. '                ' → logprob: -8.76034927368164
    8. ',' → logprob: -9.13534927368164
    9. ':return' → logprob: -9.26034927368164
    10. '            ' → logprob: -9.38534927368164

Token 192: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.029419029131531715
    2. 'raise' (adapté à ' raise') → logprob: -3.6544189453125
    3. '               ' → logprob: -6.2794189453125
    4. '           ' → logprob: -7.1544189453125
    5. '                   ' → logprob: -8.2794189453125
    6. '                ' → logprob: -9.4044189453125
    7. '	raise' → logprob: -9.5294189453125
    8. '            ' → logprob: -10.7794189453125
    9. '
' → logprob: -11.5294189453125
    10. 'Raise' → logprob: -12.0294189453125

Token 193: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.20142094790935516
    2. 'Value' → logprob: -1.7014209032058716
    3. '	Value' → logprob: -12.451420783996582
    4. ' ' → logprob: -13.076420783996582
    5. '_value' → logprob: -15.201420783996582
    6. ' value' → logprob: -15.576420783996582
    7. '```' → logprob: -15.576420783996582
    8. 'value' → logprob: -15.576420783996582
    9. '<Value' → logprob: -15.701420783996582
    10. '(Value' → logprob: -15.826420783996582

Token 194: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.06200689822435379
    2. 'rror' → logprob: -2.812006950378418
    3. 'ror' → logprob: -10.687006950378418
    4. 'r' → logprob: -11.187006950378418
    5. 'alue' → logprob: -14.062006950378418
    6. 'Value' → logprob: -14.937006950378418
    7. 'rr' → logprob: -15.187006950378418
    8. 'error' → logprob: -15.437006950378418
    9. 'SError' → logprob: -15.812006950378418
    10. ' Error' → logprob: -15.812006950378418

Token 195: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.027216030284762383
    2. '()' → logprob: -4.027215957641602
    3. '           ' → logprob: -5.277215957641602
    4. '(' → logprob: -6.027215957641602
    5. '       ' → logprob: -7.027215957641602
    6. '               ' → logprob: -8.527215957641602
    7. '('' → logprob: -9.402215957641602
    8. '(
' → logprob: -9.402215957641602
    9. '()
' → logprob: -9.652215957641602
    10. ',' → logprob: -10.027215957641602

Token 196: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.3599154055118561
    2. ' Input' → logprob: -2.4849154949188232
    3. 'Expected' → logprob: -2.6099154949188232
    4. 'Invalid' → logprob: -2.8599154949188232
    5. '"' → logprob: -2.9849154949188232
    6. ' Expected' → logprob: -4.859915256500244
    7. 'Incorrect' → logprob: -4.859915256500244
    8. 'Exactly' → logprob: -4.859915256500244
    9. ' Invalid' → logprob: -4.984915256500244
    10. ' input' → logprob: -6.109915256500244

Token 197: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.025938065722584724
    2. ' should' → logprob: -4.400938034057617
    3. ' length' → logprob: -5.400938034057617
    4. ' counts' → logprob: -5.775938034057617
    5. ' ' → logprob: -6.025938034057617
    6. ' does' → logprob: -6.275938034057617
    7. ' format' → logprob: -7.650938034057617
    8. ' count' → logprob: -8.025938034057617
    9. 'must' → logprob: -8.525938034057617
    10. ' tokens' → logprob: -8.650938034057617

Token 198: ' have' (ID: 679)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.013464430347084999
    2. ' consist' → logprob: -4.388464450836182
    3. 'contain' → logprob: -7.263464450836182
    4. ' have' → logprob: -8.388463973999023
    5. ' provide' → logprob: -11.763463973999023
    6. ' ' → logprob: -11.763463973999023
    7. 'cons' → logprob: -12.638463973999023
    8. ' be' → logprob: -12.888463973999023
    9. 'have' → logprob: -13.388463973999023
    10. ' include' → logprob: -13.638463973999023

Token 199: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.6052523851394653
    2. ' ' → logprob: -0.8552523851394653
    3. ' six' → logprob: -4.605252265930176
    4. '6' → logprob: -4.605252265930176
    5. 'exact' → logprob: -4.730252265930176
    6. 'six' → logprob: -9.980252265930176
    7. ' exact' → logprob: -11.230252265930176
    8. 'Exactly' → logprob: -12.855252265930176
    9. '  ' → logprob: -14.355252265930176
    10. '   ' → logprob: -14.480252265930176

Token 200: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.08962694555521011
    2. ' ' → logprob: -2.4646270275115967
    3. ' six' → logprob: -7.339626789093018
    4. 'six' → logprob: -10.214627265930176
    5. '  ' → logprob: -15.339627265930176
    6. '```' → logprob: -15.714627265930176
    7. '   ' → logprob: -15.777127265930176
    8. '六' → logprob: -16.40212631225586
    9. ' seis' → logprob: -16.65212631225586
    10. 'exact' → logprob: -16.71462631225586

Token 201: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0002108118060277775
    2. 'six' → logprob: -9.125210762023926
    3. ' ' → logprob: -9.375210762023926
    4. ' six' → logprob: -11.000210762023926
    5. '```' → logprob: -16.250211715698242
    6. '六' → logprob: -16.375211715698242
    7. 'exact' → logprob: -17.500211715698242
    8. '６' → logprob: -17.812711715698242
    9. 'count' → logprob: -18.000211715698242
    10. '7' → logprob: -18.125211715698242

Token 202: ' numbers' (ID: 8663)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.9288434386253357
    2. ' integers' → logprob: -1.0538434982299805
    3. ' values' → logprob: -1.5538434982299805
    4. ' numbers' → logprob: -3.8038434982299805
    5. ' tokens' → logprob: -4.5538434982299805
    6. ' elements' → logprob: -4.6788434982299805
    7. ' integer' → logprob: -6.5538434982299805
    8. 'counts' → logprob: -7.6788434982299805
    9. 'values' → logprob: -8.05384349822998
    10. ' items' → logprob: -8.17884349822998

Token 203: '.")
' (ID: 27834)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.17117266356945038
    2. '")' → logprob: -2.171172618865967
    3. ')")
' → logprob: -3.546172618865967
    4. '.")
' → logprob: -4.796172618865967
    5. '           ' → logprob: -5.671172618865967
    6. ')")' → logprob: -7.171172618865967
    7. ')' → logprob: -7.421172618865967
    8. '")
' → logprob: -7.546172618865967
    9. '.")' → logprob: -8.046173095703125
    10. '       ' → logprob: -9.171173095703125

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010336418636143208
    2. '            
' → logprob: -7.501033782958984
    3. '
' → logprob: -8.001033782958984
    4. '       ' → logprob: -10.626033782958984
    5. '               ' → logprob: -10.751033782958984
    6. '<|end|>' → logprob: -11.126033782958984
    7. ' denominations' → logprob: -11.501033782958984
    8. '    
' → logprob: -11.626033782958984
    9. '```' → logprob: -11.751033782958984
    10. ' coins' → logprob: -11.876033782958984

Token 205: ' for' (ID: 395)
  Prédit: ' denominations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' denominations' → logprob: -0.9181549549102783
    2. '           ' → logprob: -1.0431549549102783
    3. 'den' → logprob: -1.4181549549102783
    4. ' den' → logprob: -6.418154716491699
    5. 'coins' → logprob: -6.668154716491699
    6. '       ' → logprob: -7.043154716491699
    7. ' coins' → logprob: -7.418154716491699
    8. '            
' → logprob: -8.0431547164917
    9. ' denomin' → logprob: -8.5431547164917
    10. 'coin' → logprob: -8.9181547164917

Token 206: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.749805212020874
    2. 'i' → logprob: -1.124805212020874
    3. ' count' → logprob: -2.374805212020874
    4. 'count' → logprob: -2.374805212020874
    5. ' c' → logprob: -4.749805450439453
    6. 'c' → logprob: -5.624805450439453
    7. ' idx' → logprob: -6.624805450439453
    8. 'value' → logprob: -7.124805450439453
    9. ' value' → logprob: -7.249805450439453
    10. '(i' → logprob: -7.999805450439453

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25254130363464355
    2. 'ount' → logprob: -1.5025413036346436
    3. 'in' → logprob: -7.502541542053223
    4. ' ' → logprob: -10.752541542053223
    5. 'count' → logprob: -11.252541542053223
    6. 't' → logprob: -12.002541542053223
    7. 'oin' → logprob: -12.627541542053223
    8. 'ounted' → logprob: -12.877541542053223
    9. 'OUNT' → logprob: -13.127541542053223
    10. 'on' → logprob: -13.127541542053223

Token 208: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.16023977100849152
    2. ' counts' → logprob: -1.910239815711975
    3. 'count' → logprob: -12.285240173339844
    4. '[' → logprob: -12.285240173339844
    5. 'range' → logprob: -13.410240173339844
    6. ' ' → logprob: -13.410240173339844
    7. '   ' → logprob: -13.535240173339844
    8. '[count' → logprob: -14.035240173339844
    9. '  ' → logprob: -15.535240173339844
    10. ' range' → logprob: -16.160240173339844

Token 209: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.080483317375183
    2. ':' → logprob: -1.330483317375183
    3. ' ' → logprob: -2.3304834365844727
    4. ' if' → logprob: -2.3304834365844727
    5. ':
' → logprob: -3.4554834365844727
    6. '           ' → logprob: -3.4554834365844727
    7. ' <' → logprob: -3.5804834365844727
    8. '<|end|>' → logprob: -3.7054834365844727
    9. ' in' → logprob: -4.080483436584473
    10. ' ,' → logprob: -4.080483436584473

Token 210: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2756775915622711
    2. ' if' → logprob: -1.5256775617599487
    3. 'if' → logprob: -3.7756776809692383
    4. '   ' → logprob: -8.650677680969238
    5. '           ' → logprob: -8.900677680969238
    6. '<|end|>' → logprob: -9.525677680969238
    7. '	           ' → logprob: -10.400677680969238
    8. '	if' → logprob: -10.650677680969238
    9. '       ' → logprob: -11.150677680969238
    10. ' ' → logprob: -11.150677680969238

Token 211: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17406317591667175
    2. ' if' → logprob: -2.049063205718994
    3. '                   ' → logprob: -3.799063205718994
    4. '               ' → logprob: -4.799063205718994
    5. '   ' → logprob: -8.674062728881836
    6. '           ' → logprob: -10.674062728881836
    7. '	if' → logprob: -10.799062728881836
    8. '		           ' → logprob: -11.299062728881836
    9. ' ' → logprob: -11.424062728881836
    10. '                    
' → logprob: -11.799062728881836

Token 212: ' not' (ID: 625)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31337055563926697
    2. 'c' → logprob: -1.3133705854415894
    3. '                   ' → logprob: -9.313370704650879
    4. '               ' → logprob: -11.063370704650879
    5. 'type' → logprob: -14.188370704650879
    6. '                ' → logprob: -14.438370704650879
    7. ' ' → logprob: -14.938370704650879
    8. ' type' → logprob: -14.938370704650879
    9. '   ' → logprob: -15.188370704650879
    10. ' not' → logprob: -15.313370704650879

Token 213: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2081647664308548
    2. '(' → logprob: -2.333164691925049
    3. ' ' → logprob: -3.333164691925049
    4. ' (' → logprob: -3.333164691925049
    5. ' isinstance' → logprob: -3.958164691925049
    6. 'is' → logprob: -7.958164691925049
    7. '1' → logprob: -10.458165168762207
    8. ' c' → logprob: -10.833165168762207
    9. '  ' → logprob: -11.208165168762207
    10. '   ' → logprob: -11.458165168762207

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002289067953824997
    2. ' ' → logprob: -6.127289295196533
    3. 'is' → logprob: -10.502288818359375
    4. ' isinstance' → logprob: -10.502288818359375
    5. '1' → logprob: -10.877288818359375
    6. 'c' → logprob: -11.002288818359375
    7. ' c' → logprob: -11.627288818359375
    8. '   ' → logprob: -13.752288818359375
    9. '-' → logprob: -14.877288818359375
    10. '(' → logprob: -15.127288818359375

Token 215: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.38687393069267273
    2. '<=' → logprob: -1.1368739604949951
    3. ' ' → logprob: -13.761874198913574
    4. '0' → logprob: -13.886874198913574
    5. ')<=' → logprob: -15.011874198913574
    6. '   ' → logprob: -16.011873245239258
    7. '<|end|>' → logprob: -16.136873245239258
    8. '<' → logprob: -16.761873245239258
    9. ']<=' → logprob: -16.761873245239258
    10. ' <=",' → logprob: -16.886873245239258

Token 216: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0021855919621884823
    2. ' c' → logprob: -6.127185821533203
    3. '   ' → logprob: -15.502185821533203
    4. ' ' → logprob: -16.627185821533203
    5. '               ' → logprob: -17.002185821533203
    6. ')c' → logprob: -17.127185821533203
    7. '	c' → logprob: -17.377185821533203
    8. '  ' → logprob: -17.502185821533203
    9. '
' → logprob: -17.627185821533203
    10. '           ' → logprob: -18.439685821533203

Token 217: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1329139769077301
    2. '<=' → logprob: -2.1329140663146973
    3. ' and' → logprob: -5.382914066314697
    4. 'and' → logprob: -6.632914066314697
    5. ' ' → logprob: -11.257913589477539
    6. '               ' → logprob: -11.507913589477539
    7. ')' → logprob: -11.507913589477539
    8. ')<=' → logprob: -12.132913589477539
    9. '<|end|>' → logprob: -13.007913589477539
    10. ' <' → logprob: -13.257913589477539

Token 218: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0418764129281044
    2. '10' → logprob: -4.166876316070557
    3. ' ' → logprob: -4.541876316070557
    4. '999' → logprob: -5.416876316070557
    5. '99' → logprob: -5.541876316070557
    6. '50' → logprob: -6.166876316070557
    7. '20' → logprob: -6.416876316070557
    8. '500' → logprob: -7.041876316070557
    9. '200' → logprob: -7.541876316070557
    10. '9' → logprob: -7.541876316070557

Token 219: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.035075001418590546
    2. '10' → logprob: -4.0350751876831055
    3. '99' → logprob: -5.0350751876831055
    4. '50' → logprob: -5.4100751876831055
    5. '20' → logprob: -6.2850751876831055
    6. '999' → logprob: -6.6600751876831055
    7. '500' → logprob: -7.0350751876831055
    8. '9' → logprob: -7.4100751876831055
    9. '200' → logprob: -7.7850751876831055
    10. '30' → logprob: -8.285075187683105

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08075471967458725
    2. '):
' → logprob: -2.5807547569274902
    3. ')' → logprob: -6.83075475692749
    4. ' and' → logprob: -7.95575475692749
    5. ' ):' → logprob: -8.205754280090332
    6. '):

' → logprob: -9.705754280090332
    7. ' ):
' → logprob: -10.330754280090332
    8. '):
' → logprob: -10.455754280090332
    9. ':' → logprob: -11.330754280090332
    10. '           ' → logprob: -12.205754280090332

Token 221: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009014541283249855
    2. ' raise' → logprob: -7.375901222229004
    3. '           ' → logprob: -9.750901222229004
    4. '                       ' → logprob: -9.875901222229004
    5. '               ' → logprob: -10.125901222229004
    6. '                    ' → logprob: -10.125901222229004
    7. '                  ' → logprob: -10.625901222229004
    8. ' return' → logprob: -11.375901222229004
    9. ' ' → logprob: -11.625901222229004
    10. '                    
' → logprob: -11.750901222229004

Token 222: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0014873623149469495
    2. 'raise' (adapté à ' raise') → logprob: -6.8764872550964355
    3. '                    ' → logprob: -8.001487731933594
    4. '                   ' → logprob: -9.876487731933594
    5. ' return' → logprob: -10.001487731933594
    6. '                       ' → logprob: -11.626487731933594
    7. '                ' → logprob: -12.001487731933594
    8. '                        ' → logprob: -12.751487731933594
    9. '	raise' → logprob: -13.001487731933594
    10. '    ' → logprob: -14.501487731933594

Token 223: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.47407856583595276
    2. ' Value' → logprob: -0.9740785360336304
    3. '	Value' → logprob: -13.974078178405762
    4. '_value' → logprob: -15.849078178405762
    5. 'value' → logprob: -15.974078178405762
    6. ' value' → logprob: -15.974078178405762
    7. ' ' → logprob: -16.224079132080078
    8. '_Value' → logprob: -16.474079132080078
    9. '<Value' → logprob: -17.599079132080078
    10. '(Value' → logprob: -17.724079132080078

Token 224: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.6240566083070007e-06
    2. 'Value' → logprob: -13.750001907348633
    3. 'rror' → logprob: -14.625001907348633
    4. 'alue' → logprob: -18.375001907348633
    5. ' Error' → logprob: -19.125001907348633
    6. 'error' → logprob: -20.625001907348633
    7. 'Input' → logprob: -21.000001907348633
    8. 'SError' → logprob: -21.375001907348633
    9. 'Warning' → logprob: -21.500001907348633
    10. 'Output' → logprob: -22.250001907348633

Token 225: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00021855637896806002
    2. '(' → logprob: -8.500218391418457
    3. '(f' → logprob: -11.125218391418457
    4. '('' → logprob: -15.625218391418457
    5. '(
' → logprob: -15.750218391418457
    6. '()' → logprob: -17.375219345092773
    7. '("")' → logprob: -17.375219345092773
    8. 'f' → logprob: -17.500219345092773
    9. ' ("' → logprob: -18.250219345092773
    10. '("'' → logprob: -18.750219345092773

Token 226: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -0.5824465751647949
    2. ' Coin' → logprob: -1.082446575164795
    3. 'Counts' → logprob: -3.457446575164795
    4. ' Counts' → logprob: -3.707446575164795
    5. 'Count' → logprob: -3.832446575164795
    6. 'Each' → logprob: -4.707446575164795
    7. 'Invalid' → logprob: -4.707446575164795
    8. ' Count' → logprob: -6.207446575164795
    9. ' Each' → logprob: -6.707446575164795
    10. ' coin' → logprob: -6.707446575164795

Token 227: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.3924959599971771
    2. ' count' → logprob: -1.1424959897994995
    3. 's' → logprob: -5.767496109008789
    4. 'count' → logprob: -6.267496109008789
    5. 'counts' → logprob: -7.892496109008789
    6. ' s' → logprob: -8.767496109008789
    7. ' ' → logprob: -10.642496109008789
    8. '_counts' → logprob: -11.517496109008789
    9. '	count' → logprob: -12.142496109008789
    10. '_count' → logprob: -12.642496109008789

Token 228: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.00990411825478077
    2. 'must' → logprob: -4.634903907775879
    3. ' should' → logprob: -9.384903907775879
    4. ' cannot' → logprob: -10.009903907775879
    5. '<|end|>' → logprob: -11.884903907775879
    6. ' out' → logprob: -12.134903907775879
    7. 'cannot' → logprob: -13.009903907775879
    8. 'should' → logprob: -13.009903907775879
    9. ' can' → logprob: -13.509903907775879
    10. '   ' → logprob: -15.384903907775879

Token 229: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.00041267683263868093
    2. ' not' → logprob: -7.875412464141846
    3. 'not' → logprob: -11.500412940979004
    4. '<|end|>' → logprob: -11.625412940979004
    5. 'be' → logprob: -11.875412940979004
    6. ' remain' → logprob: -12.875412940979004
    7. ' ' → logprob: -13.875412940979004
    8. ' have' → logprob: -14.000412940979004
    9. ' always' → logprob: -14.000412940979004
    10. '	be' → logprob: -15.125412940979004

Token 230: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.14198416471481323
    2. '0' → logprob: -2.641984224319458
    3. 'between' → logprob: -2.891984224319458
    4. ' ' → logprob: -5.266983985900879
    5. ' in' → logprob: -7.641983985900879
    6. 'in' → logprob: -11.016983985900879
    7. ' within' → logprob: -11.391983985900879
    8. 'Between' → logprob: -13.141983985900879
    9. '50' → logprob: -13.391983985900879
    10. ' at' → logprob: -13.641983985900879

Token 231: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993676722049713
    2. ' ' → logprob: -2.694936752319336
    3. '   ' → logprob: -15.694936752319336
    4. '```' → logprob: -15.944936752319336
    5. '1' → logprob: -16.569936752319336
    6. '  ' → logprob: -17.194936752319336
    7. '
' → logprob: -17.257436752319336
    8. '00' → logprob: -17.319936752319336
    9. ' ' → logprob: -17.382436752319336
    10. ' zero' → logprob: -17.444936752319336

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -16.500001907348633
    4. '00' → logprob: -18.625001907348633
    5. '000' → logprob: -18.750001907348633
    6. '1' → logprob: -19.437501907348633
    7. '۰' → logprob: -19.750001907348633
    8. 'zero' → logprob: -19.812501907348633
    9. '   ' → logprob: -19.875001907348633
    10. '[' → logprob: -20.125001907348633

Token 233: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.12693199515342712
    2. ' and' → logprob: -2.12693190574646
    3. '0' → logprob: -13.126932144165039
    4. '   ' → logprob: -13.751932144165039
    5. '```' → logprob: -15.126932144165039
    6. ',' → logprob: -15.626932144165039
    7. '	and' → logprob: -16.25193214416504
    8. ' ' → logprob: -16.62693214416504
    9. '       ' → logprob: -16.87693214416504
    10. '
' → logprob: -17.37693214416504

Token 234: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.009766715578734875
    2. ' ' → logprob: -4.634766578674316
    3. '   ' → logprob: -12.134766578674316
    4. '  ' → logprob: -13.134766578674316
    5. '
' → logprob: -13.884766578674316
    6. ' fifty' → logprob: -14.072266578674316
    7. '```' → logprob: -14.509766578674316
    8. '    ' → logprob: -15.134766578674316
    9. '5' → logprob: -15.634766578674316
    10. '51' → logprob: -16.197267532348633

Token 235: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -10.125053405761719
    3. '20' → logprob: -11.875053405761719
    4. '100' → logprob: -13.375053405761719
    5. '500' → logprob: -14.125053405761719
    6. '30' → logprob: -14.125053405761719
    7. '
' → logprob: -14.250053405761719
    8. '10' → logprob: -14.500053405761719
    9. '```' → logprob: -14.687553405761719
    10. '15' → logprob: -15.000053405761719

Token 236: ' inclusive' (ID: 29482)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.801369309425354
    2. '")' → logprob: -1.426369309425354
    3. ')")
' → logprob: -1.426369309425354
    4. ')' → logprob: -3.1763691902160645
    5. '")
' → logprob: -3.9263691902160645
    6. '.")' → logprob: -5.0513691902160645
    7. '.")
' → logprob: -5.9263691902160645
    8. ').' → logprob: -9.051369667053223
    9. ' )' → logprob: -9.551369667053223
    10. ')
' → logprob: -10.051369667053223

Token 237: '.")
' (ID: 27834)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")
' → logprob: -1.288379192352295
    2. '")' → logprob: -1.413379192352295
    3. '")
' → logprob: -1.538379192352295
    4. ')")' → logprob: -2.288379192352295
    5. '.")
' → logprob: -2.538379192352295
    6. ')' → logprob: -2.663379192352295
    7. '.")' → logprob: -4.288379192352295
    8. ')
' → logprob: -7.288379192352295
    9. '               ' → logprob: -7.413379192352295
    10. '           ' → logprob: -7.538379192352295

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003814925905317068
    2. ')' → logprob: -6.503814697265625
    3. '       ' → logprob: -6.628814697265625
    4. '               ' → logprob: -7.378814697265625
    5. '                   ' → logprob: -9.753814697265625
    6. 'except' → logprob: -10.003814697265625
    7. ',' → logprob: -10.378814697265625
    8. '            
' → logprob: -10.503814697265625
    9. '<|end|>' → logprob: -10.503814697265625
    10. ']' → logprob: -10.878814697265625

Token 239: ' denominations' (ID: 191046)
  Prédit: ' denominations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denominations' → logprob: -0.6879243850708008
    2. 'den' → logprob: -1.0629243850708008
    3. '           ' → logprob: -1.9379243850708008
    4. 'coins' → logprob: -5.812924385070801
    5. ' den' → logprob: -6.187924385070801
    6. ' coins' → logprob: -7.312924385070801
    7. '       ' → logprob: -7.562924385070801
    8. ' denomin' → logprob: -8.0629243850708
    9. 'coin' → logprob: -8.1879243850708
    10. ' denomination' → logprob: -8.8129243850708

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153101205825806
    2. '=' → logprob: -4.018153190612793
    3. '   ' → logprob: -13.893153190612793
    4. ' ' → logprob: -14.393153190612793
    5. ':' → logprob: -14.518153190612793
    6. '=[' → logprob: -14.518153190612793
    7. ' =[' → logprob: -14.893153190612793
    8. '    ' → logprob: -16.268152236938477
    9. 's' → logprob: -16.393152236938477
    10. ',' → logprob: -17.143152236938477

Token 241: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023248620331287384
    2. ' [' → logprob: -3.7732486724853516
    3. ' ' → logprob: -13.648248672485352
    4. '   ' → logprob: -13.648248672485352
    5. '100' → logprob: -15.273248672485352
    6. ' ' → logprob: -16.14824867248535
    7. '10' → logprob: -16.27324867248535
    8. '(' → logprob: -16.77324867248535
    9. '1' → logprob: -16.77324867248535
    10. '[
' → logprob: -16.77324867248535

Token 242: '1' (ID: 16)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.10430797189474106
    2. '1' → logprob: -2.6043078899383545
    3. '100' → logprob: -3.8543078899383545
    4. '[' → logprob: -5.854308128356934
    5. '10' → logprob: -7.479308128356934
    6. '200' → logprob: -8.229308128356934
    7. '50' → logprob: -8.604308128356934
    8. '(' → logprob: -11.479308128356934
    9. '5' → logprob: -12.104308128356934
    10. ' [' → logprob: -12.854308128356934

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002652944065630436
    2. '0' → logprob: -6.627653121948242
    3. ',
' → logprob: -7.377653121948242
    4. ' ,' → logprob: -7.377653121948242
    5. ' ' → logprob: -10.127653121948242
    6. '2' → logprob: -11.627653121948242
    7. '00' → logprob: -11.752653121948242
    8. '5' → logprob: -12.002653121948242
    9. ',

' → logprob: -12.502653121948242
    10. '000' → logprob: -13.377653121948242

Token 244: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.026880478486418724
    2. ' ' → logprob: -3.6518805027008057
    3. '10' → logprob: -7.776880264282227
    4. '   ' → logprob: -10.026880264282227
    5. '  ' → logprob: -10.276880264282227
    6. '2' → logprob: -10.651880264282227
    7. '50' → logprob: -10.776880264282227
    8. '500' → logprob: -12.151880264282227
    9. '1' → logprob: -12.214380264282227
    10. '
' → logprob: -12.464380264282227

Token 245: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0026134673971682787
    2. '10' → logprob: -6.127613544464111
    3. '2' → logprob: -8.002613067626953
    4. '50' → logprob: -10.377613067626953
    5. '1' → logprob: -11.002613067626953
    6. '3' → logprob: -11.377613067626953
    7. '4' → logprob: -12.127613067626953
    8. ' ' → logprob: -12.315113067626953
    9. '500' → logprob: -12.502613067626953
    10. '   ' → logprob: -12.502613067626953

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016877970192581415
    2. ' ,' → logprob: -6.751688003540039
    3. '10' → logprob: -7.876688003540039
    4. ',
' → logprob: -10.376688003540039
    5. '   ' → logprob: -10.376688003540039
    6. '100' → logprob: -10.501688003540039
    7. '20' → logprob: -11.251688003540039
    8. '0' → logprob: -11.376688003540039
    9. '1' → logprob: -12.126688003540039
    10. '2' → logprob: -12.251688003540039

Token 247: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00865605752915144
    2. ' ' → logprob: -4.758656024932861
    3. '   ' → logprob: -10.50865650177002
    4. '

' → logprob: -13.07115650177002
    5. '  ' → logprob: -13.25865650177002
    6. '
' → logprob: -13.44615650177002
    7. '25' → logprob: -13.94615650177002
    8. '    
' → logprob: -13.94615650177002
    9. '	' → logprob: -14.00865650177002
    10. '1' → logprob: -14.07115650177002

Token 248: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010550802107900381
    2. ' ' → logprob: -7.0010552406311035
    3. '   ' → logprob: -9.751054763793945
    4. '25' → logprob: -10.251054763793945
    5. '20' → logprob: -11.376054763793945
    6. '1' → logprob: -11.626054763793945
    7. '  ' → logprob: -12.251054763793945
    8. '100' → logprob: -12.376054763793945
    9. '15' → logprob: -12.876054763793945
    10. '11' → logprob: -13.063554763793945

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000577696890104562
    2. ' ,' → logprob: -7.750577926635742
    3. ',
' → logprob: -9.000577926635742
    4. '   ' → logprob: -11.375577926635742
    5. '1' → logprob: -12.875577926635742
    6. '100' → logprob: -13.125577926635742
    7. '0' → logprob: -14.125577926635742
    8. '10' → logprob: -14.125577926635742
    9. ',

' → logprob: -14.125577926635742
    10. '       ' → logprob: -14.375577926635742

Token 250: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.6234896183013916
    2. '25' → logprob: -0.9984896183013916
    3. ' ' → logprob: -2.3734896183013916
    4. '20' → logprob: -6.2484893798828125
    5. '   ' → logprob: -7.9984893798828125
    6. '	' → logprob: -11.123489379882812
    7. '```' → logprob: -11.248489379882812
    8. '  ' → logprob: -11.498489379882812
    9. '
' → logprob: -11.623489379882812
    10. '100' → logprob: -12.248489379882812

Token 251: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.0056269196793437
    2. '25' → logprob: -5.255627155303955
    3. ' ' → logprob: -7.880627155303955
    4. '20' → logprob: -12.130626678466797
    5. '   ' → logprob: -12.255626678466797
    6. '
' → logprob: -13.880626678466797
    7. '```' → logprob: -14.130626678466797
    8. '  ' → logprob: -14.505626678466797
    9. '	' → logprob: -14.505626678466797
    10. '100' → logprob: -14.755626678466797

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009249189170077443
    2. ' ,' → logprob: -7.125925064086914
    3. '100' → logprob: -9.625925064086914
    4. ',
' → logprob: -10.375925064086914
    5. '   ' → logprob: -11.875925064086914
    6. '0' → logprob: -12.875925064086914
    7. '1' → logprob: -13.000925064086914
    8. ' ' → logprob: -13.375925064086914
    9. '20' → logprob: -13.750925064086914
    10. '```' → logprob: -13.875925064086914

Token 253: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -6.8497312895488e-05
    2. ' ' → logprob: -9.625068664550781
    3. '   ' → logprob: -13.500068664550781
    4. '１００' → logprob: -14.750068664550781
    5. '500' → logprob: -15.000068664550781
    6. '  ' → logprob: -16.12506866455078
    7. '
' → logprob: -17.00006866455078
    8. '    
' → logprob: -17.62506866455078
    9. '    ' → logprob: -17.75006866455078
    10. ' hundred' → logprob: -17.81256866455078

Token 254: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -14.250003814697266
    3. '１００' → logprob: -14.625003814697266
    4. '500' → logprob: -14.750003814697266
    5. ' ' → logprob: -14.875003814697266
    6. '
' → logprob: -15.000003814697266
    7. '{' → logprob: -15.562503814697266
    8. '10' → logprob: -15.875003814697266
    9. '1' → logprob: -16.500003814697266
    10. '  ' → logprob: -16.500003814697266

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040695868665352464
    2. ' ,' → logprob: -7.875406742095947
    3. ',
' → logprob: -11.500407218933105
    4. '100' → logprob: -12.125407218933105
    5. '   ' → logprob: -12.500407218933105
    6. '250' → logprob: -13.500407218933105
    7. '500' → logprob: -13.625407218933105
    8. '200' → logprob: -13.875407218933105
    9. '       ' → logprob: -13.875407218933105
    10. '```' → logprob: -14.375407218933105

Token 256: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0059370906092226505
    2. ' ' → logprob: -5.130937099456787
    3. '   ' → logprob: -12.880936622619629
    4. '200' → logprob: -13.255936622619629
    5. '250' → logprob: -13.380936622619629
    6. '  ' → logprob: -13.630936622619629
    7. '100' → logprob: -15.005936622619629
    8. '
' → logprob: -15.380936622619629
    9. '	' → logprob: -16.130937576293945
    10. '    ' → logprob: -16.130937576293945

Token 257: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '200' → logprob: -16.62504005432129
    4. '
' → logprob: -17.12504005432129
    5. '   ' → logprob: -17.50004005432129
    6. '250' → logprob: -17.62504005432129
    7. '100' → logprob: -18.00004005432129
    8. '  ' → logprob: -18.12504005432129
    9. '5' → logprob: -19.00004005432129
    10. '```' → logprob: -19.50004005432129

Token 258: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018931744620203972
    2. ']
' → logprob: -4.018931865692139
    3. ',' → logprob: -7.393931865692139
    4. '   ' → logprob: -9.64393138885498
    5. '       ' → logprob: -10.14393138885498
    6. ' ]' → logprob: -10.39393138885498
    7. ']

' → logprob: -11.01893138885498
    8. ']
' → logprob: -11.89393138885498
    9. '           ' → logprob: -12.64393138885498
    10. ' ]
' → logprob: -13.26893138885498

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04085192084312439
    2. '
' → logprob: -3.2908518314361572
    3. '            
' → logprob: -6.790852069854736
    4. ' coins' → logprob: -7.290852069854736
    5. 'coins' → logprob: -7.415852069854736
    6. '	       ' → logprob: -9.665851593017578
    7. 'tokens' → logprob: -9.915851593017578
    8. '       ' → logprob: -10.165851593017578
    9. '    
' → logprob: -10.415851593017578
    10. '		' → logprob: -10.540851593017578

Token 260: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' (adapté à ' coins') → logprob: -0.042255762964487076
    2. ' coins' → logprob: -3.2922558784484863
    3. '           ' → logprob: -5.542255878448486
    4. '       ' → logprob: -8.417255401611328
    5. 'co' → logprob: -10.667255401611328
    6. '
' → logprob: -11.292255401611328
    7. '   ' → logprob: -11.417255401611328
    8. 'coin' → logprob: -12.167255401611328
    9. 'return' → logprob: -12.542255401611328
    10. '            
' → logprob: -12.917255401611328

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00975679699331522
    2. '=' → logprob: -4.634756565093994
    3. ' =[' → logprob: -14.384757041931152
    4. '=[]' → logprob: -16.384756088256836
    5. '=[' → logprob: -16.384756088256836
    6. '	' → logprob: -17.509756088256836
    7. '＝' → logprob: -18.384756088256836
    8. 's' → logprob: -18.509756088256836
    9. ' =
' → logprob: -18.634756088256836
    10. ' ' → logprob: -18.759756088256836

Token 262: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1930721551179886
    2. ' [' → logprob: -1.9430721998214722
    3. '[C' → logprob: -3.4430720806121826
    4. '[
' → logprob: -8.318072319030762
    5. '[]' → logprob: -9.693072319030762
    6. '[]
' → logprob: -10.568072319030762
    7. ' [
' → logprob: -12.068072319030762
    8. ' []' → logprob: -12.318072319030762
    9. ' []
' → logprob: -13.943072319030762
    10. '[A' → logprob: -14.193072319030762

Token 263: 'Coin' (ID: 40826)
  Prédit: 'Coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coin' → logprob: -3.7697225252486533e-06
    2. ' Coin' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.000003814697266
    4. 'Coins' → logprob: -19.875003814697266
    5. '
' → logprob: -20.875003814697266
    6. 'C' → logprob: -21.750003814697266
    7. '	C' → logprob: -22.250003814697266
    8. '  ' → logprob: -22.375003814697266
    9. '_coin' → logprob: -22.375003814697266
    10. 'coin' → logprob: -22.500003814697266

Token 264: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47522062063217163
    2. '(d' → logprob: -0.9752206206321716
    3. 'den' → logprob: -6.850220680236816
    4. 'd' → logprob: -9.600220680236816
    5. '(dom' → logprob: -12.350220680236816
    6. '(D' → logprob: -12.850220680236816
    7. '(
' → logprob: -13.100220680236816
    8. '(de' → logprob: -13.350220680236816
    9. '(dm' → logprob: -13.475220680236816
    10. ']' → logprob: -14.475220680236816

Token 265: ',' (ID: 11)
  Prédit: 'enom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enom' → logprob: -0.13007299602031708
    2. 'en' → logprob: -2.255073070526123
    3. ',' → logprob: -4.380073070526123
    4. 'den' → logprob: -6.130073070526123
    5. 'ominations' → logprob: -7.505073070526123
    6. 'o' → logprob: -8.255072593688965
    7. 'n' → logprob: -8.505072593688965
    8. 'om' → logprob: -8.630072593688965
    9. 'eno' → logprob: -9.130072593688965
    10. 'e' → logprob: -9.380072593688965

Token 266: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5043761134147644
    2. 'c' → logprob: -1.6293761730194092
    3. ' count' → logprob: -2.504376173019409
    4. ' c' → logprob: -2.629376173019409
    5. 'cnt' → logprob: -3.629376173019409
    6. 'counts' → logprob: -4.62937593460083
    7. ' cnt' → logprob: -5.50437593460083
    8. ' counts' → logprob: -6.00437593460083
    9. 'cc' → logprob: -7.00437593460083
    10. 'ct' → logprob: -7.25437593460083

Token 267: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. ')
' → logprob: -11.750019073486328
    3. 'd' → logprob: -12.750019073486328
    4. ',' → logprob: -12.875019073486328
    5. 'cnt' → logprob: -13.625019073486328
    6. ' )' → logprob: -13.875019073486328
    7. 's' → logprob: -14.125019073486328
    8. ')d' → logprob: -14.250019073486328
    9. '(cnt' → logprob: -14.875019073486328
    10. 'nt' → logprob: -15.375019073486328

Token 268: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029782656580209732
    2. 'for' → logprob: -3.529782772064209
    3. ' ' → logprob: -11.52978229522705
    4. '           ' → logprob: -11.90478229522705
    5. '            ' → logprob: -12.02978229522705
    6. ')' → logprob: -12.40478229522705
    7. '    ' → logprob: -13.90478229522705
    8. '        ' → logprob: -14.02978229522705
    9. '               ' → logprob: -14.27978229522705
    10. '                ' → logprob: -14.40478229522705

Token 269: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11284200847148895
    2. ' d' → logprob: -2.237842082977295
    3. 'den' → logprob: -12.112841606140137
    4. ',d' → logprob: -12.237841606140137
    5. '(d' → logprob: -12.487841606140137
    6. ',' → logprob: -12.612841606140137
    7. ')d' → logprob: -14.112841606140137
    8. '	d' → logprob: -14.612841606140137
    9. ' ' → logprob: -15.612841606140137
    10. '   ' → logprob: -15.737841606140137

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16034729778766632
    2. ',d' → logprob: -1.91034734249115
    3. ' ,' → logprob: -9.910346984863281
    4. 'd' → logprob: -10.285346984863281
    5. ',count' → logprob: -10.660346984863281
    6. ',c' → logprob: -11.535346984863281
    7. ',D' → logprob: -13.535346984863281
    8. ' d' → logprob: -13.785346984863281
    9. ',s' → logprob: -13.910346984863281
    10. '_,' → logprob: -14.785346984863281

Token 271: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.006780738476663828
    2. ' cnt' → logprob: -5.006780624389648
    3. 'c' → logprob: -9.756780624389648
    4. '(cnt' → logprob: -12.256780624389648
    5. '_cnt' → logprob: -14.006780624389648
    6. 'ct' → logprob: -14.131780624389648
    7. '	cnt' → logprob: -14.381780624389648
    8. '[cnt' → logprob: -15.006780624389648
    9. ' c' → logprob: -16.25678062438965
    10. '
' → logprob: -16.50678062438965

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011802274966612458
    2. 'in' → logprob: -6.751180171966553
    3. ')' → logprob: -12.126180648803711
    4. 's' → logprob: -13.251180648803711
    5. ' ' → logprob: -13.876180648803711
    6. '<|end|>' → logprob: -14.501180648803711
    7. ',' → logprob: -14.626180648803711
    8. '
' → logprob: -15.751180648803711
    9. 'd' → logprob: -16.12618064880371
    10. 'import' → logprob: -16.75118064880371

Token 273: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.1602327525615692
    2. ' zip' → logprob: -1.9102327823638916
    3. '(zip' → logprob: -11.785232543945312
    4. '_zip' → logprob: -14.285232543945312
    5. '.zip' → logprob: -14.910232543945312
    6. '
' → logprob: -17.535232543945312
    7. 'enumer' → logprob: -19.285232543945312
    8. 'z' → logprob: -19.285232543945312
    9. '```' → logprob: -19.410232543945312
    10. ' ' → logprob: -19.660232543945312

Token 274: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.8444881536415778e-05
    2. 'den' → logprob: -10.500028610229492
    3. ' (' → logprob: -14.000028610229492
    4. '(
' → logprob: -17.000028610229492
    5. '   ' → logprob: -17.625028610229492
    6. '(de' → logprob: -18.500028610229492
    7. ' den' → logprob: -18.500028610229492
    8. ')' → logprob: -18.625028610229492
    9. ']' → logprob: -18.875028610229492
    10. '    ' → logprob: -19.125028610229492

Token 275: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -4.4418171455617994e-05
    2. '(' → logprob: -10.625044822692871
    3. ' denominations' → logprob: -10.875044822692871
    4. ' den' → logprob: -14.500044822692871
    5. '   ' → logprob: -15.250044822692871
    6. ')' → logprob: -15.750044822692871
    7. '    ' → logprob: -17.375043869018555
    8. 'don' → logprob: -17.625043869018555
    9. ' ' → logprob: -18.000043869018555
    10. '           ' → logprob: -18.125043869018555

Token 276: 'ominations' (ID: 169517)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.016235534101724625
    2. 'ominations' → logprob: -4.3912353515625
    3. 'ot' → logprob: -5.7662353515625
    4. 'otions' → logprob: -8.2662353515625
    5. 'om' → logprob: -8.5162353515625
    6. 'inations' → logprob: -9.1412353515625
    7. 'er' → logprob: -13.1412353515625
    8. 's' → logprob: -13.2662353515625
    9. 'itations' → logprob: -13.2662353515625
    10. 'on' → logprob: -13.2662353515625

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034702493576332927
    2. ',count' → logprob: -8.625347137451172
    3. ' ,' → logprob: -9.375347137451172
    4. 'counts' → logprob: -9.750347137451172
    5. '(count' → logprob: -11.625347137451172
    6. ')' → logprob: -12.375347137451172
    7. ' counts' → logprob: -12.375347137451172
    8. ',
' → logprob: -13.000347137451172
    9. 'count' → logprob: -13.500347137451172
    10. '),' → logprob: -14.000347137451172

Token 278: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.023246990516781807
    2. ' counts' → logprob: -3.773247003555298
    3. 'count' → logprob: -14.023246765136719
    4. '           ' → logprob: -14.898246765136719
    5. '   ' → logprob: -15.648246765136719
    6. ' ' → logprob: -16.39824676513672
    7. '    ' → logprob: -17.89824676513672
    8. '               ' → logprob: -18.14824676513672
    9. '       ' → logprob: -18.39824676513672
    10. '_counts' → logprob: -18.52324676513672

Token 279: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.292095299111679e-05
    2. ')]
' → logprob: -9.500082969665527
    3. ')' → logprob: -12.000082969665527
    4. ')]

' → logprob: -14.250082969665527
    5. ']' → logprob: -14.625082969665527
    6. ' )' → logprob: -15.250082969665527
    7. '   ' → logprob: -16.37508201599121
    8. '       ' → logprob: -16.50008201599121
    9. ')]
' → logprob: -16.50008201599121
    10. ')])' → logprob: -16.87508201599121

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021796426735818386
    2. 'return' → logprob: -6.2521796226501465
    3. '       ' → logprob: -9.252180099487305
    4. ' return' → logprob: -9.377180099487305
    5. ')' → logprob: -9.877180099487305
    6. ')
' → logprob: -12.502180099487305
    7. '
' → logprob: -12.627180099487305
    8. '<|end|>' → logprob: -12.627180099487305
    9. ')return' → logprob: -13.252180099487305
    10. '            
' → logprob: -13.377180099487305

Token 281: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02334878034889698
    2. ' return' → logprob: -4.023348808288574
    3. '           ' → logprob: -5.273348808288574
    4. '       ' → logprob: -9.773348808288574
    5. '   ' → logprob: -13.898348808288574
    6. '
' → logprob: -14.398348808288574
    7. '	return' → logprob: -14.898348808288574
    8. ' ' → logprob: -17.273347854614258
    9. '            
' → logprob: -17.648347854614258
    10. '               ' → logprob: -17.648347854614258

Token 282: ' Wallet' (ID: 50822)
  Prédit: 'Wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Wallet' → logprob: -0.0788901224732399
    2. ' Wallet' → logprob: -2.578890085220337
    3. '_wallet' → logprob: -15.453889846801758
    4. 'wallet' → logprob: -15.703889846801758
    5. '   ' → logprob: -16.953889846801758
    6. ' wallet' → logprob: -17.578889846801758
    7. '       ' → logprob: -18.578889846801758
    8. 'W' → logprob: -18.578889846801758
    9. 'Wall' → logprob: -18.578889846801758
    10. ' ' → logprob: -19.078889846801758

Token 283: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.750003814697266
    3. 'coins' → logprob: -14.250003814697266
    4. '(
' → logprob: -15.125003814697266
    5. ' (' → logprob: -16.500003814697266
    6. ' coins' → logprob: -16.625003814697266
    7. '(coeff' → logprob: -16.750003814697266
    8. '(Co' → logprob: -17.250003814697266
    9. '```' → logprob: -17.750003814697266
    10. '((' → logprob: -18.250003814697266

Token 284: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -1.6166903151315637e-05
    2. 'coins' → logprob: -11.625016212463379
    3. '[' → logprob: -13.250016212463379
    4. 'in' → logprob: -13.500016212463379
    5. '(ins' → logprob: -13.875016212463379
    6. '   ' → logprob: -14.750016212463379
    7. 'i' → logprob: -15.125016212463379
    8. '```' → logprob: -15.125016212463379
    9. '.ins' → logprob: -15.250016212463379
    10. '(co' → logprob: -15.875016212463379

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007108822464942932
    2. ')
' → logprob: -7.250710964202881
    3. '       ' → logprob: -15.250710487365723
    4. ')

' → logprob: -15.250710487365723
    5. ' )' → logprob: -15.375710487365723
    6. '))' → logprob: -16.50071144104004
    7. ')
' → logprob: -16.62571144104004
    8. '   ' → logprob: -17.25071144104004
    9. ')return' → logprob: -18.25071144104004
    10. ' ' → logprob: -18.50071144104004

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032329712994396687
    2. 'except' → logprob: -6.003232955932617
    3. ' except' → logprob: -7.378232955932617
    4. '<|end|>' → logprob: -9.378232955932617
    5. '
' → logprob: -10.753232955932617
    6. '	except' → logprob: -11.378232955932617
    7. '<|end|>' → logprob: -12.378232955932617
    8. '           ' → logprob: -13.003232955932617
    9. 'Except' → logprob: -13.503232955932617
    10. '```' → logprob: -13.753232955932617

Token 287: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03829335421323776
    2. 'except' (adapté à ' except') → logprob: -3.5382933616638184
    3. ' except' → logprob: -4.788293361663818
    4. '	except' → logprob: -8.66329288482666
    5. '   ' → logprob: -12.78829288482666
    6. '
' → logprob: -13.66329288482666
    7. ',' → logprob: -14.28829288482666
    8. '      ' → logprob: -14.78829288482666
    9. '           ' → logprob: -15.16329288482666
    10. '}catch' → logprob: -15.41329288482666

Token 288: ' Exception' (ID: 6851)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.3140328526496887
    2. 'Value' → logprob: -1.314032793045044
    3. '(Value' → logprob: -7.814033031463623
    4. ' Exception' → logprob: -8.314032554626465
    5. 'Exception' → logprob: -9.439032554626465
    6. '(Exception' → logprob: -11.314032554626465
    7. '_value' → logprob: -11.689032554626465
    8. '	Value' → logprob: -11.814032554626465
    9. ' (' → logprob: -12.689032554626465
    10. '(value' → logprob: -12.939032554626465

Token 289: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.03809657692909241
    2. 'as' → logprob: -3.2880966663360596
    3. ':' → logprob: -10.03809642791748
    4. '	as' → logprob: -11.91309642791748
    5. ')' → logprob: -13.03809642791748
    6. ':
' → logprob: -13.53809642791748
    7. '<|end|>' → logprob: -15.16309642791748
    8. '<|end|>' → logprob: -15.16309642791748
    9. ',' → logprob: -15.53809642791748
    10. ' ' → logprob: -16.038097381591797

Token 290: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.0037140962667763233
    2. 'e' → logprob: -5.753714084625244
    3. ' ex' → logprob: -8.128714561462402
    4. ' ' → logprob: -9.628714561462402
    5. 'ex' → logprob: -10.003714561462402
    6. ' exc' → logprob: -10.128714561462402
    7. ' Value' → logprob: -11.128714561462402
    8. ':' → logprob: -11.253714561462402
    9. 'Value' → logprob: -11.503714561462402
    10. ' x' → logprob: -11.628714561462402

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013272109441459179
    2. ' as' → logprob: -4.638272285461426
    3. ':
' → logprob: -6.013272285461426
    4. '           ' → logprob: -7.013272285461426
    5. '       ' → logprob: -9.138272285461426
    6. '):' → logprob: -11.263272285461426
    7. ',' → logprob: -11.763272285461426
    8. '        ' → logprob: -12.138272285461426
    9. '               ' → logprob: -12.138272285461426
    10. '<|end|>' → logprob: -12.138272285461426

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.226628895296017e-06
    2. ' raise' → logprob: -12.625007629394531
    3. '          ' → logprob: -13.750007629394531
    4. 'raise' → logprob: -14.000007629394531
    5. '       ' → logprob: -14.625007629394531
    6. '	       ' → logprob: -14.750007629394531
    7. '            ' → logprob: -14.750007629394531
    8. '        ' → logprob: -15.125007629394531
    9. '         ' → logprob: -16.00000762939453
    10. ' as' → logprob: -16.75000762939453

Token 293: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.45348331332206726
    2. '           ' → logprob: -1.7034833431243896
    3. ' raise' → logprob: -1.7034833431243896
    4. 'print' → logprob: -8.203483581542969
    5. 'return' → logprob: -8.828483581542969
    6. '	raise' → logprob: -10.078483581542969
    7. '               ' → logprob: -11.703483581542969
    8. ' return' → logprob: -12.078483581542969
    9. '            ' → logprob: -12.328483581542969
    10. ' print' → logprob: -12.578483581542969

Token 294: ' Value' (ID: 9963)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.14368197321891785
    2. 'e' → logprob: -2.1436820030212402
    3. ' Value' → logprob: -4.26868200302124
    4. 'Value' → logprob: -6.51868200302124
    5. '<|end|>' → logprob: -7.01868200302124
    6. ' value' → logprob: -9.143681526184082
    7. 'value' → logprob: -9.768681526184082
    8. ' ' → logprob: -10.768681526184082
    9. '(e' → logprob: -10.768681526184082
    10. '_value' → logprob: -11.393681526184082

Token 295: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.004162333440035582
    2. 'rror' → logprob: -5.504162311553955
    3. 'ror' → logprob: -9.879162788391113
    4. 'Value' → logprob: -11.004162788391113
    5. 'SError' → logprob: -11.754162788391113
    6. 'LError' → logprob: -12.504162788391113
    7. 'or' → logprob: -13.379162788391113
    8. 'Errors' → logprob: -14.004162788391113
    9. 'n' → logprob: -14.129162788391113
    10. 'Erro' → logprob: -15.379162788391113

Token 296: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.43708255887031555
    2. '(f' → logprob: -1.1870825290679932
    3. '(' → logprob: -3.312082529067993
    4. '(str' → logprob: -4.437082767486572
    5. '("")' → logprob: -8.312082290649414
    6. '(
' → logprob: -9.562082290649414
    7. '('' → logprob: -9.937082290649414
    8. 'f' → logprob: -10.062082290649414
    9. '()' → logprob: -10.187082290649414
    10. '("("' → logprob: -10.687082290649414

Token 297: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.040468934923410416
    2. 'Invalid' → logprob: -3.66546893119812
    3. '("' → logprob: -4.540469169616699
    4. 'f' → logprob: -6.665469169616699
    5. '(f' → logprob: -7.040469169616699
    6. 'invalid' → logprob: -7.415469169616699
    7. ' f' → logprob: -8.5404691696167
    8. ' Invalid' → logprob: -9.0404691696167
    9. ')' → logprob: -9.4154691696167
    10. ' invalid' → logprob: -10.0404691696167

Token 298: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -3.8219583075260743e-05
    2. '"' → logprob: -10.875038146972656
    3. ' Invalid' → logprob: -11.125038146972656
    4. 'invalid' → logprob: -13.375038146972656
    5. 'Input' → logprob: -13.625038146972656
    6. 'f' → logprob: -14.500038146972656
    7. ' invalid' → logprob: -14.750038146972656
    8. 'Error' → logprob: -15.250038146972656
    9. 'Incorrect' → logprob: -15.750038146972656
    10. ' f' → logprob: -15.875038146972656

Token 299: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00012582694762386382
    2. 'input' → logprob: -9.000125885009766
    3. 'Input' → logprob: -13.875125885009766
    4. ' ' → logprob: -14.500125885009766
    5. '_input' → logprob: -14.500125885009766
    6. ' data' → logprob: -16.500125885009766
    7. '	input' → logprob: -16.625125885009766
    8. ' Input' → logprob: -17.125125885009766
    9. ' argument' → logprob: -17.625125885009766
    10. ' user' → logprob: -18.000125885009766

Token 300: ' format' (ID: 6011)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028369776904582977
    2. ' input' → logprob: -3.653369665145874
    3. 'input' → logprob: -6.403369903564453
    4. '")' → logprob: -8.528369903564453
    5. ' line' → logprob: -9.528369903564453
    6. ' format' → logprob: -10.278369903564453
    7. '(f' → logprob: -10.528369903564453
    8. '(input' → logprob: -10.903369903564453
    9. ')' → logprob: -11.153369903564453
    10. 'f' → logprob: -11.778369903564453

Token 301: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038348292582668364
    2. '")' → logprob: -7.875383377075195
    3. ' or' → logprob: -14.125383377075195
    4. ' :' → logprob: -14.500383377075195
    5. '.")' → logprob: -14.750383377075195
    6. ')' → logprob: -14.750383377075195
    7. ',' → logprob: -14.875383377075195
    8. '{' → logprob: -15.375383377075195
    9. '.' → logprob: -15.500383377075195
    10. '":' → logprob: -15.625383377075195

Token 302: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3133474588394165
    2. ' {' → logprob: -1.3133474588394165
    3. 'e' → logprob: -10.188347816467285
    4. ' input' → logprob: -10.563347816467285
    5. ' e' → logprob: -11.938347816467285
    6. ' str' → logprob: -12.438347816467285
    7. 'input' → logprob: -12.563347816467285
    8. '{text' → logprob: -12.563347816467285
    9. '{s' → logprob: -13.313347816467285
    10. '{i' → logprob: -13.563347816467285

Token 303: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.019409583881497383
    2. '{' → logprob: -4.019409656524658
    3. 'input' → logprob: -6.769409656524658
    4. 'str' → logprob: -9.1444091796875
    5. '}' → logprob: -13.3944091796875
    6. ' e' → logprob: -13.5194091796875
    7. ' input' → logprob: -15.0194091796875
    8. ')e' → logprob: -16.1444091796875
    9. '{
' → logprob: -16.3944091796875
    10. ' {' → logprob: -16.6444091796875

Token 304: '}"' (ID: 21503)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.412468820810318
    2. '")' → logprob: -1.1624687910079956
    3. ')")' → logprob: -4.037468910217285
    4. ')' → logprob: -4.912468910217285
    5. '}' → logprob: -8.537468910217285
    6. '")}' → logprob: -10.662468910217285
    7. '}")
' → logprob: -11.037468910217285
    8. '       ' → logprob: -11.037468910217285
    9. ' }' → logprob: -12.037468910217285
    10. ')}' → logprob: -12.412468910217285

Token 305: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.782141569303349e-05
    2. '       ' → logprob: -9.50009822845459
    3. ')
' → logprob: -11.12509822845459
    4. ' )' → logprob: -12.25009822845459
    5. '   ' → logprob: -14.12509822845459
    6. '")' → logprob: -14.12509822845459
    7. '())' → logprob: -14.37509822845459
    8. ')return' → logprob: -15.25009822845459
    9. ')}' → logprob: -15.75009822845459
    10. '))' → logprob: -15.87509822845459

Token 306: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0621583461761475
    2. 'class' → logprob: -1.0621583461761475
    3. 'def' → logprob: -1.3121583461761475
    4. 'input' → logprob: -3.3121583461761475
    5. '#' → logprob: -6.187158584594727
    6. 'line' → logprob: -7.937158584594727
    7. 'while' → logprob: -8.562158584594727
    8. 'import' → logprob: -8.937158584594727
    9. '```' → logprob: -9.312158584594727
    10. 'print' → logprob: -10.687158584594727

Token 307: ' Output' (ID: 18315)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.8239018321037292
    2. 'Coin' → logprob: -1.823901891708374
    3. 'Wallet' → logprob: -2.073901891708374
    4. 'Main' → logprob: -2.448901891708374
    5. 'Exchange' → logprob: -2.448901891708374
    6. 'Output' → logprob: -3.698901891708374
    7. 'main' → logprob: -4.573901653289795
    8. 'Program' → logprob: -4.948901653289795
    9. 'Change' → logprob: -4.948901653289795
    10. 'Validator' → logprob: -5.198901653289795

Token 308: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.1616653203964233
    2. 'Writer' → logprob: -1.4116653203964233
    3. 'Printer' → logprob: -1.4116653203964233
    4. 'ter' → logprob: -2.411665439605713
    5. 'Formatter' → logprob: -2.661665439605713
    6. 'Generator' → logprob: -3.786665439605713
    7. 'Manager' → logprob: -5.161665439605713
    8. ':' → logprob: -5.286665439605713
    9. 'Processor' → logprob: -6.286665439605713
    10. 'Builder' → logprob: -6.411665439605713

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34845730662345886
    2. ':
' → logprob: -1.2234573364257812
    3. ':

' → logprob: -12.348457336425781
    4. ':def' → logprob: -12.973457336425781
    5. '   ' → logprob: -13.098457336425781
    6. ' :
' → logprob: -13.848457336425781
    7. ':
' → logprob: -14.473457336425781
    8. '):
' → logprob: -14.723457336425781
    9. ' :' → logprob: -14.723457336425781
    10. '<|end|>' → logprob: -15.098457336425781

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001483564410591498
    2. '@' → logprob: -9.00014877319336
    3. 'class' → logprob: -11.75014877319336
    4. ' @' → logprob: -11.87514877319336
    5. '```' → logprob: -12.75014877319336
    6. ' def' → logprob: -12.87514877319336
    7. 'def' → logprob: -13.25014877319336
    8. 'staticmethod' → logprob: -13.37514877319336
    9. ' class' → logprob: -14.12514877319336
    10. ' static' → logprob: -15.62514877319336

Token 311: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.00034177995985373855
    2. ' @' → logprob: -8.000341415405273
    3. 'def' → logprob: -12.500341415405273
    4. '   ' → logprob: -12.875341415405273
    5. 'staticmethod' → logprob: -16.625341415405273
    6. 'class' → logprob: -18.000341415405273
    7. ' def' → logprob: -18.625341415405273
    8. '```' → logprob: -20.500341415405273
    9. ' ' → logprob: -21.875341415405273
    10. 'static' → logprob: -22.375341415405273

Token 312: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -7.896309739408025e-07
    2. 'static' → logprob: -14.750000953674316
    3. 'classmethod' → logprob: -15.125000953674316
    4. 'dat' → logprob: -17.0
    5. 'property' → logprob: -20.0
    6. ' static' → logprob: -22.625
    7. 'stat' → logprob: -22.875
    8. '
' → logprob: -23.375
    9. 'Static' → logprob: -23.5
    10. 'st' → logprob: -24.25

Token 313: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6041082143783569
    2. '   ' → logprob: -0.8541082143783569
    3. '
' → logprob: -3.7291083335876465
    4. ' def' → logprob: -5.7291083335876465
    5. '()
' → logprob: -8.604107856750488
    6. ' ' → logprob: -8.979107856750488
    7. '	def' → logprob: -9.729107856750488
    8. '()' → logprob: -10.104107856750488
    9. '```' → logprob: -10.104107856750488
    10. '  ' → logprob: -10.729107856750488

Token 314: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008456774055957794
    2. '   ' → logprob: -5.008456707000732
    3. ' def' → logprob: -6.383456707000732
    4. '
' → logprob: -10.25845718383789
    5. '	def' → logprob: -11.13345718383789
    6. '_def' → logprob: -15.50845718383789
    7. '  ' → logprob: -15.50845718383789
    8. ':def' → logprob: -15.63345718383789
    9. ' ' → logprob: -15.75845718383789
    10. '(def' → logprob: -15.88345718383789

Token 315: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003377270477358252
    2. ' def' → logprob: -8.000337600708008
    3. '
' → logprob: -13.000337600708008
    4. '```' → logprob: -18.750337600708008
    5. 'print' → logprob: -19.875337600708008
    6. 'staticmethod' → logprob: -20.000337600708008
    7. 'classmethod' → logprob: -20.250337600708008
    8. '	def' → logprob: -20.375337600708008
    9. 'code' → logprob: -21.125337600708008
    10. 'define' → logprob: -21.125337600708008

Token 316: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07173854112625122
    2. ' print' → logprob: -3.1967384815216064
    3. 'format' → logprob: -4.5717387199401855
    4. 'display' → logprob: -4.9467387199401855
    5. ' display' → logprob: -5.4467387199401855
    6. 'handle' → logprob: -5.6967387199401855
    7. 'output' → logprob: -7.1967387199401855
    8. ' format' → logprob: -7.3217387199401855
    9. ' handle' → logprob: -7.6967387199401855
    10. ' output' → logprob: -8.071738243103027

Token 317: '(can' (ID: 165148)
  Prédit: '(wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(wallet' → logprob: -0.16405919194221497
    2. '(' → logprob: -2.0390591621398926
    3. '(w' → logprob: -4.039059162139893
    4. '(input' → logprob: -6.539059162139893
    5. '(line' → logprob: -6.914059162139893
    6. '(output' → logprob: -8.41405963897705
    7. '(message' → logprob: -8.78905963897705
    8. '(result' → logprob: -9.16405963897705
    9. '(value' → logprob: -9.16405963897705
    10. ' (' → logprob: -9.41405963897705

Token 318: '_exchange' (ID: 152363)
  Prédit: '_exchange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exchange' → logprob: -0.00012570773833431304
    2. '_change' → logprob: -9.875125885009766
    3. '_ex' → logprob: -11.000125885009766
    4. '_execute' → logprob: -11.125125885009766
    5. '_' → logprob: -11.875125885009766
    6. '_replace' → logprob: -12.000125885009766
    7. '_continue' → logprob: -12.250125885009766
    8. '_purchase' → logprob: -12.375125885009766
    9. '_accept' → logprob: -12.875125885009766
    10. ' _' → logprob: -12.875125885009766

Token 319: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8194049596786499
    2. '):
' → logprob: -1.44440495967865
    3. '_for' → logprob: -1.94440495967865
    4. ':' → logprob: -2.3194050788879395
    5. ')' → logprob: -2.5694050788879395
    6. 'for' → logprob: -5.4444050788879395
    7. '   ' → logprob: -8.069404602050781
    8. '):

' → logprob: -8.194404602050781
    9. 'For' → logprob: -9.069404602050781
    10. ',' → logprob: -9.569404602050781

Token 320: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.10837115347385406
    2. ')' → logprob: -2.8583712577819824
    3. ' bool' → logprob: -3.1083712577819824
    4. ' )' → logprob: -8.108370780944824
    5. ' ' → logprob: -9.483370780944824
    6. 'True' → logprob: -9.733370780944824
    7. '   ' → logprob: -9.858370780944824
    8. 'str' → logprob: -10.483370780944824
    9. '(bool' → logprob: -10.608370780944824
    10. '):' → logprob: -10.983370780944824

Token 321: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002157518407329917
    2. '):
' → logprob: -6.627157688140869
    3. '):' → logprob: -7.127157688140869
    4. '   ' → logprob: -10.877157211303711
    5. ' )' → logprob: -12.252157211303711
    6. ')->' → logprob: -13.002157211303711
    7. '):
' → logprob: -13.377157211303711
    8. ':' → logprob: -15.002157211303711
    9. '):

' → logprob: -16.00215721130371
    10. '       ' → logprob: -16.75215721130371

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.8351892473874614e-05
    2. ' if' → logprob: -10.000048637390137
    3. '   ' → logprob: -13.500048637390137
    4. 'if' → logprob: -15.125048637390137
    5. ' print' → logprob: -15.250048637390137
    6. ',' → logprob: -15.750048637390137
    7. '```' → logprob: -16.12504768371582
    8. 'print' → logprob: -16.12504768371582
    9. ':' → logprob: -16.37504768371582
    10. '           ' → logprob: -16.62504768371582

Token 323: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5910850167274475
    2. 'if' → logprob: -1.5910849571228027
    3. 'print' (adapté à ' print') → logprob: -1.8410849571228027
    4. ' if' → logprob: -2.5910849571228027
    5. ' print' → logprob: -4.716084957122803
    6. '   ' → logprob: -10.591085433959961
    7. 'return' → logprob: -12.091085433959961
    8. '```' → logprob: -13.341085433959961
    9. '           ' → logprob: -14.091085433959961
    10. 'for' → logprob: -14.966085433959961

Token 324: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001997631276026368
    2. '(' → logprob: -6.376997470855713
    3. '('' → logprob: -8.376997947692871
    4. '"' → logprob: -10.126997947692871
    5. '(True' → logprob: -12.001997947692871
    6. '("#' → logprob: -12.251997947692871
    7. '(("' → logprob: -12.876997947692871
    8. '(f' → logprob: -13.126997947692871
    9. '1' → logprob: -13.751997947692871
    10. '("$' → logprob: -13.876997947692871

Token 325: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0028011982794851065
    2. ''' → logprob: -6.752801418304443
    3. '"You' → logprob: -7.502801418304443
    4. ' "' → logprob: -8.127800941467285
    5. '1' → logprob: -9.377800941467285
    6. '("' → logprob: -9.502800941467285
    7. '"O' → logprob: -9.502800941467285
    8. '"C' → logprob: -9.627800941467285
    9. '"The' → logprob: -9.627800941467285
    10. '"No' → logprob: -9.752800941467285

Token 326: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0005389740690588951
    2. 'if' → logprob: -7.8755388259887695
    3. ')' → logprob: -8.75053882598877
    4. '	if' → logprob: -15.25053882598877
    5. '   ' → logprob: -16.375539779663086
    6. '"' → logprob: -17.125539779663086
    7. '0' → logprob: -17.500539779663086
    8. ' ' → logprob: -17.875539779663086
    9. '()' → logprob: -18.000539779663086
    10. ')
' → logprob: -18.250539779663086

Token 327: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.02975071594119072
    2. ' can' → logprob: -3.5297508239746094
    3. '	can' → logprob: -15.27975082397461
    4. '(can' → logprob: -17.15475082397461
    5. '_can' → logprob: -17.65475082397461
    6. '.can' → logprob: -19.02975082397461
    7. '   ' → logprob: -21.27975082397461
    8. ' ' → logprob: -21.90475082397461
    9. '  ' → logprob: -22.40475082397461
    10. 'Can' → logprob: -22.52975082397461

Token 328: '_exchange' (ID: 152363)
  Prédit: '_exchange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exchange' → logprob: -7.941850526549388e-06
    2. 'exchange' → logprob: -11.875007629394531
    3. '_change' → logprob: -15.125007629394531
    4. '_ex' → logprob: -15.625007629394531
    5. '_can' → logprob: -16.50000762939453
    6. '_' → logprob: -16.50000762939453
    7. 'Exchange' → logprob: -17.25000762939453
    8. '_execute' → logprob: -17.25000762939453
    9. 'can' → logprob: -17.37500762939453
    10. '.exchange' → logprob: -17.62500762939453

Token 329: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.25192973017692566
    2. 'else' → logprob: -1.501929759979248
    3. '	else' → logprob: -15.00192928314209
    4. '   ' → logprob: -16.001930236816406
    5. '==' → logprob: -16.751930236816406
    6. ')' → logprob: -16.876930236816406
    7. '```' → logprob: -17.126930236816406
    8. '
' → logprob: -18.251930236816406
    9. '    ' → logprob: -18.376930236816406
    10. ' ' → logprob: -18.376930236816406

Token 330: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023245712742209435
    2. ' ' → logprob: -3.7732458114624023
    3. '   ' → logprob: -16.523244857788086
    4. ')' → logprob: -16.523244857788086
    5. ' ' → logprob: -18.898244857788086
    6. '(' → logprob: -19.648244857788086
    7. '  ' → logprob: -19.773244857788086
    8. ',' → logprob: -19.898244857788086
    9. '    ' → logprob: -20.398244857788086
    10. '1' → logprob: -20.648244857788086

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. ')' → logprob: -18.125009536743164
    4. '   ' → logprob: -18.625009536743164
    5. '  ' → logprob: -19.250009536743164
    6. '０' → logprob: -19.687509536743164
    7. '-' → logprob: -19.750009536743164
    8. '```' → logprob: -20.187509536743164
    9. '000' → logprob: -20.375009536743164
    10. '00' → logprob: -20.500009536743164

Token 332: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.875006675720215
    4. '       ' → logprob: -16.1250057220459
    5. '))' → logprob: -16.3750057220459
    6. '`)' → logprob: -16.6250057220459
    7. ' )' → logprob: -16.6250057220459
    8. ')`' → logprob: -17.2500057220459
    9. '<|end|>' → logprob: -18.2500057220459
    10. '())' → logprob: -18.3750057220459

Token 333: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015343042090535164
    2. 'input' → logprob: -4.515343189239502
    3. 'def' → logprob: -5.515343189239502
    4. 'line' → logprob: -8.390342712402344
    5. 'n' → logprob: -10.890342712402344
    6. '```' → logprob: -12.390342712402344
    7. 'count' → logprob: -13.140342712402344
    8. 'class' → logprob: -13.265342712402344
    9. '#' → logprob: -13.515342712402344
    10. 'user' → logprob: -13.765342712402344

Token 334: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00012415809032972902
    2. 'main' → logprob: -9.000123977661133
    3. ' process' → logprob: -15.125123977661133
    4. ' run' → logprob: -15.625123977661133
    5. '	main' → logprob: -15.750123977661133
    6. '_main' → logprob: -15.875123977661133
    7. ' solve' → logprob: -16.875123977661133
    8. ' solution' → logprob: -17.625123977661133
    9. ' check' → logprob: -18.000123977661133
    10. ' calculate' → logprob: -19.000123977661133

Token 335: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002334568416699767
    2. '():
' → logprob: -8.50023365020752
    3. '()' → logprob: -11.12523365020752
    4. ' ():' → logprob: -11.25023365020752
    5. '(' → logprob: -13.25023365020752
    6. ':' → logprob: -15.62523365020752
    7. '():
' → logprob: -15.75023365020752
    8. '():

' → logprob: -17.000232696533203
    9. '_' → logprob: -17.750232696533203
    10. '().' → logprob: -18.000232696533203

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6150164008140564
    2. 'input' → logprob: -1.3650164604187012
    3. ' input' → logprob: -1.6150164604187012
    4. 'import' → logprob: -5.615016460418701
    5. 'try' → logprob: -7.115016460418701
    6. ' import' → logprob: -8.240015983581543
    7. ' line' → logprob: -8.740015983581543
    8. ' try' → logprob: -9.115015983581543
    9. '	input' → logprob: -9.990015983581543
    10. 'line' → logprob: -10.115015983581543

Token 337: ' import' (ID: 1588)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5687814950942993
    2. ' input' → logprob: -1.4437814950942993
    3. 'import' (adapté à ' import') → logprob: -1.6937814950942993
    4. ' import' → logprob: -4.56878137588501
    5. 'try' → logprob: -5.94378137588501
    6. '   ' → logprob: -7.44378137588501
    7. 'line' → logprob: -8.693781852722168
    8. ' try' → logprob: -9.443781852722168
    9. ' line' → logprob: -9.693781852722168
    10. 'user' → logprob: -10.943781852722168

Token 338: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10021702200174332
    2. ' sys' → logprob: -2.35021710395813
    3. '=sys' → logprob: -11.60021686553955
    4. '	sys' → logprob: -13.72521686553955
    5. 's' → logprob: -16.725217819213867
    6. '(sys' → logprob: -16.850217819213867
    7. '_sys' → logprob: -17.225217819213867
    8. ' ' → logprob: -17.475217819213867
    9. '.sys' → logprob: -17.850217819213867
    10. 'io' → logprob: -18.850217819213867

Token 339: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030580461025238037
    2. '
' → logprob: -6.503057956695557
    3. 'input' → logprob: -7.253057956695557
    4. '    
' → logprob: -7.378057956695557
    5. ' input' → logprob: -9.253058433532715
    6. ' for' → logprob: -10.003058433532715
    7. 'for' → logprob: -10.003058433532715
    8. ' line' → logprob: -12.128058433532715
    9. '	input' → logprob: -12.128058433532715
    10. '   
' → logprob: -12.503058433532715

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03454137220978737
    2. ' input' → logprob: -3.909541368484497
    3. 'input' → logprob: -4.534541606903076
    4. ' for' → logprob: -6.034541606903076
    5. 'for' → logprob: -7.534541606903076
    6. ' line' → logprob: -8.909541130065918
    7. ' lines' → logprob: -10.284541130065918
    8. '    
' → logprob: -10.659541130065918
    9. '
' → logprob: -10.784541130065918
    10. 'line' → logprob: -11.284541130065918

Token 341: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.5176024436950684
    2. ' input' → logprob: -1.5176024436950684
    3. 'for' → logprob: -2.2676024436950684
    4. ' for' → logprob: -2.7676024436950684
    5. '   ' → logprob: -4.142602443695068
    6. 'line' → logprob: -6.642602443695068
    7. ' lines' → logprob: -7.267602443695068
    8. ' line' → logprob: -8.017602920532227
    9. 'lines' → logprob: -8.642602920532227
    10. 'data' → logprob: -10.767602920532227

Token 342: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.747814349073451e-05
    2. '_' → logprob: -11.250017166137695
    3. '_lines' → logprob: -12.500017166137695
    4. 'line' → logprob: -15.500017166137695
    5. '_=' → logprob: -15.625017166137695
    6. '_data' → logprob: -16.500017166137695
    7. '=' → logprob: -16.750017166137695
    8. '_input' → logprob: -17.375017166137695
    9. '_l' → logprob: -17.625017166137695
    10. ' =' → logprob: -17.750017166137695

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759525299072266
    2. '=' → logprob: -0.8259525299072266
    3. '=sys' → logprob: -11.325952529907227
    4. '   ' → logprob: -13.825952529907227
    5. ' ' → logprob: -16.825952529907227
    6. ' ' → logprob: -17.700952529907227
    7. '=input' → logprob: -17.825952529907227
    8. '＝' → logprob: -18.575952529907227
    9. 's' → logprob: -18.950952529907227
    10. '()' → logprob: -19.075952529907227

Token 344: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1002107709646225
    2. ' sys' → logprob: -2.350210666656494
    3. 'input' → logprob: -12.475211143493652
    4. ' input' → logprob: -15.600211143493652
    5. '=sys' → logprob: -17.850210189819336
    6. '	sys' → logprob: -17.975210189819336
    7. '(sys' → logprob: -18.350210189819336
    8. '   ' → logprob: -19.100210189819336
    9. '_sys' → logprob: -21.475210189819336
    10. 'Sys' → logprob: -21.725210189819336

Token 345: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00020711649267468601
    2. '.' → logprob: -8.62520694732666
    3. '.stdout' → logprob: -11.12520694732666
    4. '.argv' → logprob: -12.00020694732666
    5. '.readline' → logprob: -12.25020694732666
    6. 'stdin' → logprob: -14.00020694732666
    7. '.std' → logprob: -14.50020694732666
    8. '().' → logprob: -15.25020694732666
    9. '.input' → logprob: -16.750207901000977
    10. '(stdin' → logprob: -16.875207901000977

Token 346: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.500000953674316
    3. '.read' → logprob: -17.0
    4. '.readlines' → logprob: -18.625
    5. 'read' → logprob: -19.25
    6. ' readline' → logprob: -19.25
    7. '().' → logprob: -21.375
    8. '```' → logprob: -21.5
    9. ' .' → logprob: -22.625
    10. '.buffer' → logprob: -23.0

Token 347: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38502660393714905
    2. '().' → logprob: -1.5100265741348267
    3. '   ' → logprob: -2.510026693344116
    4. '()
' → logprob: -4.385026454925537
    5. '.rstrip' → logprob: -5.885026454925537
    6. '.strip' → logprob: -6.635026454925537
    7. 'rstrip' → logprob: -8.260026931762695
    8. '
' → logprob: -8.760026931762695
    9. '  ' → logprob: -9.510026931762695
    10. '    
' → logprob: -9.510026931762695

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0043396796099841595
    2. 'wallet' → logprob: -5.629339694976807
    3. ' wallet' → logprob: -7.254339694976807
    4. '
' → logprob: -11.379339218139648
    5. '    
' → logprob: -11.379339218139648
    6. '_wallet' → logprob: -12.754339218139648
    7. 'w' → logprob: -13.129339218139648
    8. '```' → logprob: -13.629339218139648
    9. '   ' → logprob: -14.004339218139648
    10. '(wallet' → logprob: -14.379339218139648

Token 349: ' wallet' (ID: 22762)
  Prédit: 'wallet'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wallet' (adapté à ' wallet') → logprob: -0.017212525010108948
    2. ' wallet' → logprob: -4.142212390899658
    3. 'try' → logprob: -7.392212390899658
    4. '   ' → logprob: -7.517212390899658
    5. ' try' → logprob: -12.142212867736816
    6. 'coin' → logprob: -12.392212867736816
    7. 'parser' → logprob: -12.892212867736816
    8. 'Wallet' → logprob: -13.642212867736816
    9. '_wallet' → logprob: -13.642212867736816
    10. 'w' → logprob: -14.142212867736816

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00360019039362669
    2. '=' → logprob: -5.628600120544434
    3. '.' → logprob: -17.37860107421875
    4. ' ' → logprob: -18.00360107421875
    5. ' =
' → logprob: -18.25360107421875
    6. ' =)' → logprob: -19.00360107421875
    7. ')' → logprob: -19.62860107421875
    8. '   ' → logprob: -19.87860107421875
    9. '    ' → logprob: -20.37860107421875
    10. '  ' → logprob: -20.50360107421875

Token 351: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.00033546582562848926
    2. ' Input' → logprob: -8.000335693359375
    3. '	Input' → logprob: -18.125335693359375
    4. '<Input' → logprob: -20.875335693359375
    5. '\Input' → logprob: -21.375335693359375
    6. '_Input' → logprob: -21.500335693359375
    7. 'Output' → logprob: -22.375335693359375
    8. '(Input' → logprob: -22.500335693359375
    9. '_input' → logprob: -23.125335693359375
    10. 'input' → logprob: -23.500335693359375

Token 352: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'Handler' → logprob: -17.0
    3. 'parser' → logprob: -18.0
    4. 'Parsed' → logprob: -19.25
    5. 'Parse' → logprob: -19.625
    6. '_parser' → logprob: -19.75
    7. ' Parser' → logprob: -20.25
    8. 'Wallet' → logprob: -20.75
    9. 'Processor' → logprob: -21.375
    10. 'Lexer' → logprob: -21.875

Token 353: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -1.9504606825648807e-05
    2. '.' → logprob: -10.875019073486328
    3. ' .' → logprob: -14.875019073486328
    4. '().' → logprob: -17.500019073486328
    5. '.decode' → logprob: -17.750019073486328
    6. '   ' → logprob: -18.125019073486328
    7. '```' → logprob: -18.125019073486328
    8. 'parse' → logprob: -18.750019073486328
    9. '=parse' → logprob: -19.625019073486328
    10. '.Parse' → logprob: -20.000019073486328

Token 354: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00026407750556245446
    2. '(' → logprob: -8.250264167785645
    3. ' (' → logprob: -13.875264167785645
    4. '(output' → logprob: -14.375264167785645
    5. '(line' → logprob: -14.875264167785645
    6. '(
' → logprob: -15.000264167785645
    7. '(user' → logprob: -16.000263214111328
    8. ',input' → logprob: -16.125263214111328
    9. '(in' → logprob: -17.000263214111328
    10. '(request' → logprob: -17.125263214111328

Token 355: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: 0.0
    2. 'line' → logprob: -17.375
    3. '_LINE' → logprob: -19.625
    4. 'Line' → logprob: -21.25
    5. '_' → logprob: -21.375
    6. '-line' → logprob: -22.25
    7. ' line' → logprob: -22.375
    8. ')_' → logprob: -22.375
    9. '```' → logprob: -22.375
    10. '_Line' → logprob: -22.625

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015056940028443933
    2. ')
' → logprob: -6.5015058517456055
    3. '   ' → logprob: -13.126505851745605
    4. ' )' → logprob: -13.876505851745605
    5. ')
' → logprob: -15.376505851745605
    6. ')

' → logprob: -16.50150489807129
    7. ')`' → logprob: -17.75150489807129
    8. ' )
' → logprob: -18.25150489807129
    9. '())' → logprob: -18.37650489807129
    10. ' ' → logprob: -18.50150489807129

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13039228320121765
    2. 'can' → logprob: -2.63039231300354
    3. ' can' → logprob: -3.13039231300354
    4. ' result' → logprob: -5.380392074584961
    5. 'result' → logprob: -7.005392074584961
    6. 'print' → logprob: -7.505392074584961
    7. ' print' → logprob: -8.880392074584961
    8. ' output' → logprob: -9.255392074584961
    9. 'output' → logprob: -9.630392074584961
    10. '
' → logprob: -10.130392074584961

Token 358: ' result' (ID: 1534)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.25701630115509033
    2. 'Output' → logprob: -1.5070163011550903
    3. 'print' → logprob: -6.007016181945801
    4. 'result' (adapté à ' result') → logprob: -6.132016181945801
    5. 'output' → logprob: -8.6320161819458
    6. ' Output' → logprob: -8.7570161819458
    7. '   ' → logprob: -9.8820161819458
    8. ' can' → logprob: -10.2570161819458
    9. 'Result' → logprob: -11.6320161819458
    10. 'out' → logprob: -12.8820161819458

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03814959153532982
    2. '=' → logprob: -3.28814959526062
    3. '.' → logprob: -9.4131498336792
    4. '   ' → logprob: -11.4131498336792
    5. '.can' → logprob: -12.1631498336792
    6. ' can' → logprob: -12.4131498336792
    7. ')' → logprob: -13.2881498336792
    8. '_' → logprob: -14.0381498336792
    9. '_can' → logprob: -14.4131498336792
    10. ' .' → logprob: -14.6631498336792

Token 360: ' wallet' (ID: 22762)
  Prédit: 'wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wallet' → logprob: -0.07889022678136826
    2. ' wallet' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.328889846801758
    4. '(wallet' → logprob: -15.453889846801758
    5. 'coin' → logprob: -18.203889846801758
    6. '.wallet' → logprob: -18.453889846801758
    7. 'Wallet' → logprob: -18.578889846801758
    8. '_wallet' → logprob: -18.828889846801758
    9. 'wall' → logprob: -20.578889846801758
    10. 'w' → logprob: -20.578889846801758

Token 361: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.500000953674316
    3. '.Can' → logprob: -15.625000953674316
    4. ' .' → logprob: -16.625
    5. '.has' → logprob: -17.375
    6. '   ' → logprob: -18.125
    7. '.should' → logprob: -18.375
    8. '_can' → logprob: -18.875
    9. '.total' → logprob: -19.0
    10. '.is' → logprob: -19.5

Token 362: '_exchange' (ID: 152363)
  Prédit: '_exchange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exchange' → logprob: -0.0024855269584804773
    2. 'exchange' → logprob: -6.002485752105713
    3. '_change' → logprob: -11.752485275268555
    4. 'change' → logprob: -14.127485275268555
    5. ' exchange' → logprob: -14.502485275268555
    6. 'Exchange' → logprob: -15.377485275268555
    7. '_ex' → logprob: -16.252485275268555
    8. 'ange' → logprob: -16.502485275268555
    9. '(exchange' → logprob: -16.627485275268555
    10. 'x' → logprob: -16.627485275268555

Token 363: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.9361264946837764e-07
    2. 'for' → logprob: -16.625
    3. '_' → logprob: -17.125
    4. '_FOR' → logprob: -18.375
    5. 'For' → logprob: -18.625
    6. '```' → logprob: -19.125
    7. ' for' → logprob: -19.375
    8. '_f' → logprob: -19.5
    9. '_or' → logprob: -19.5
    10. '   ' → logprob: -19.625

Token 364: '_bill' (ID: 147613)
  Prédit: '_bill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bill' → logprob: -0.0031804447062313557
    2. 'bill' → logprob: -5.753180503845215
    3. 'ill' → logprob: -13.253180503845215
    4. 'x' → logprob: -15.253180503845215
    5. '_exchange' → logprob: -15.628180503845215
    6. '_ball' → logprob: -16.0031795501709
    7. '_coin' → logprob: -16.1281795501709
    8. 'b' → logprob: -16.1281795501709
    9. '_b' → logprob: -16.6281795501709
    10. 'Bill' → logprob: -17.0031795501709

Token 365: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2520213723182678
    2. '()' → logprob: -1.502021312713623
    3. '   ' → logprob: -10.252021789550781
    4. '()
' → logprob: -10.502021789550781
    5. '()

' → logprob: -11.002021789550781
    6. 'result' → logprob: -12.877021789550781
    7. '()\' → logprob: -13.002021789550781
    8. '()`' → logprob: -13.377021789550781
    9. '
' → logprob: -13.627021789550781
    10. 'Output' → logprob: -14.127021789550781

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018173357471823692
    2. 'Output' → logprob: -4.0181732177734375
    3. '	Output' → logprob: -11.393173217773438
    4. '
' → logprob: -11.893173217773438
    5. ' Output' → logprob: -12.268173217773438
    6. '```' → logprob: -14.893173217773438
    7. '    
' → logprob: -16.018173217773438
    8. '(Output' → logprob: -16.893173217773438
    9. '_output' → logprob: -17.143173217773438
    10. '_Output' → logprob: -17.268173217773438

Token 367: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' (adapté à ' Output') → logprob: -6.277553620748222e-05
    2. '   ' → logprob: -10.000062942504883
    3. ' Output' → logprob: -11.000062942504883
    4. '	Output' → logprob: -14.375062942504883
    5. 'Answer' → logprob: -19.750062942504883
    6. '
' → logprob: -19.750062942504883
    7. '_Output' → logprob: -19.750062942504883
    8. '_output' → logprob: -19.875062942504883
    9. 'Input' → logprob: -19.875062942504883
    10. '  ' → logprob: -19.875062942504883

Token 368: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.9361264946837764e-07
    2. '_Handler' → logprob: -15.75
    3. '_handler' → logprob: -19.375
    4. ' Handler' → logprob: -20.125
    5. '.Handler' → logprob: -20.375
    6. 'Handle' → logprob: -21.0
    7. 'handler' → logprob: -21.5
    8. '   ' → logprob: -21.625
    9. '_HANDLER' → logprob: -22.125
    10. 'Handlers' → logprob: -23.125

Token 369: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.00018411019118502736
    2. '.' → logprob: -8.625184059143066
    3. ' .' → logprob: -12.750184059143066
    4. '.print' → logprob: -14.250184059143066
    5. '```' → logprob: -16.000185012817383
    6. '(output' → logprob: -16.125185012817383
    7. '.Output' → logprob: -16.500185012817383
    8. '.stdout' → logprob: -16.500185012817383
    9. ').' → logprob: -16.625185012817383
    10. 'output' → logprob: -16.750185012817383

Token 370: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005535095697268844
    2. '(' → logprob: -7.500553607940674
    3. '(results' → logprob: -15.000553131103516
    4. ' (' → logprob: -16.625553131103516
    5. '(resultado' → logprob: -16.750553131103516
    6. '(
' → logprob: -17.125553131103516
    7. '(res' → logprob: -17.500553131103516
    8. 'result' → logprob: -17.875553131103516
    9. '(return' → logprob: -18.500553131103516
    10. '()' → logprob: -18.500553131103516

Token 371: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.875003814697266
    3. '())' → logprob: -14.375003814697266
    4. '()' → logprob: -15.500003814697266
    5. '   ' → logprob: -16.500003814697266
    6. ' )' → logprob: -17.125003814697266
    7. '))' → logprob: -18.125003814697266
    8. ')`' → logprob: -18.875003814697266
    9. ')

' → logprob: -19.000003814697266
    10. '```' → logprob: -19.500003814697266

Token 372: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.749814019713085e-06
    2. ' if' → logprob: -12.125006675720215
    3. '```' → logprob: -14.125006675720215
    4. '#' → logprob: -15.000006675720215
    5. '<|end|>' → logprob: -16.12500762939453
    6. '
' → logprob: -17.00000762939453
    7. '#if' → logprob: -18.87500762939453
    8. '	if' → logprob: -19.12500762939453
    9. 'If' → logprob: -19.25000762939453
    10. '\n' → logprob: -19.25000762939453

Token 373: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10022026300430298
    2. '__' → logprob: -2.350220203399658
    3. 'name' → logprob: -12.350220680236816
    4. '_name' → logprob: -12.475220680236816
    5. '___' → logprob: -13.600220680236816
    6. ' ' → logprob: -13.600220680236816
    7. ' ' → logprob: -14.100220680236816
    8. '```' → logprob: -14.100220680236816
    9. ' name' → logprob: -14.850220680236816
    10. '/__' → logprob: -15.225220680236816

Token 374: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07924016565084457
    2. '==' → logprob: -2.829240083694458
    3. ' ==' → logprob: -4.204240322113037
    4. '=="' → logprob: -6.829240322113037
    5. 'name' → logprob: -7.329240322113037
    6. '=='' → logprob: -8.579239845275879
    7. '__.__' → logprob: -8.954239845275879
    8. ' __' → logprob: -10.829239845275879
    9. '__[' → logprob: -10.954239845275879
    10. '[' → logprob: -10.954239845275879

Token 375: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5048530030981055e-06
    2. '==' → logprob: -13.625001907348633
    3. '__.__' → logprob: -16.375001907348633
    4. '___' → logprob: -17.500001907348633
    5. '=="' → logprob: -17.625001907348633
    6. '____' → logprob: -18.250001907348633
    7. ' ==' → logprob: -18.250001907348633
    8. '__,' → logprob: -19.750001907348633
    9. '__('' → logprob: -19.750001907348633
    10. '__.' → logprob: -19.875001907348633

Token 376: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3806777000427246
    2. '__' → logprob: -1.3806777000427246
    3. ' ==' → logprob: -2.7556777000427246
    4. '=="' → logprob: -6.505677700042725
    5. '=='' → logprob: -9.255678176879883
    6. '=' → logprob: -10.880678176879883
    7. '_' → logprob: -12.130678176879883
    8. '===' → logprob: -12.255678176879883
    9. '"' → logprob: -13.005678176879883
    10. '___' → logprob: -13.380678176879883

Token 377: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019347082125023007
    2. ''' → logprob: -6.25193452835083
    3. ' "__' → logprob: -12.251935005187988
    4. '__' → logprob: -13.751935005187988
    5. '"user' → logprob: -16.751934051513672
    6. '"name' → logprob: -16.876934051513672
    7. ' '__' → logprob: -18.001934051513672
    8. '("__' → logprob: -18.001934051513672
    9. '"class' → logprob: -18.126934051513672
    10. ''"' → logprob: -18.251934051513672

Token 378: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008711484260857105
    2. '__' → logprob: -4.758711338043213
    3. 'name' → logprob: -9.758711814880371
    4. ''' → logprob: -10.883711814880371
    5. '"' → logprob: -11.008711814880371
    6. '_main' → logprob: -13.258711814880371
    7. ' main' → logprob: -13.758711814880371
    8. 'm' → logprob: -15.883711814880371
    9. '___' → logprob: -16.383710861206055
    10. 'built' → logprob: -16.383710861206055

Token 379: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06225357577204704
    2. '__' → logprob: -2.812253475189209
    3. '__':
' → logprob: -8.187253952026367
    4. '__:' → logprob: -12.312253952026367
    5. '__["' → logprob: -13.062253952026367
    6. '__.' → logprob: -14.937253952026367
    7. '__.__' → logprob: -15.312253952026367
    8. '_' → logprob: -15.937253952026367
    9. '__",' → logprob: -16.187253952026367
    10. '__[' → logprob: -16.562253952026367

Token 380: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18260879814624786
    2. ''' → logprob: -2.5576088428497314
    3. '   ' → logprob: -2.6826088428497314
    4. '__' → logprob: -4.307608604431152
    5. 'main' → logprob: -4.932608604431152
    6. ' main' → logprob: -9.057608604431152
    7. ' "__' → logprob: -9.182608604431152
    8. ' ' → logprob: -10.182608604431152
    9. '_main' → logprob: -11.682608604431152
    10. '    
' → logprob: -11.682608604431152

Token 381: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.8624639324116288e-06
    2. ' main' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '	main' → logprob: -19.375001907348633
    5. '_main' → logprob: -24.250001907348633
    6. '(main' → logprob: -24.375001907348633
    7. '.main' → logprob: -25.000001907348633
    8. '  ' → logprob: -25.250001907348633
    9. '
' → logprob: -25.375001907348633
    10. '    
' → logprob: -25.500001907348633

Token 382: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 380
Tokens correctement prédits (1ère position, stricte): 195
Tokens correctement prédits (1ère position, avec adaptation): 212
Tokens correctement prédits (top 10): 349
Précision stricte (1ère position): 51.32%
Précision adaptée (1ère position): 55.79%
Précision (top 10): 91.84%
================================================================================
