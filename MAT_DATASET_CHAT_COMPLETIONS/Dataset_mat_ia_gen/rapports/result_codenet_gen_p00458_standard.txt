================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:28:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

def solve():
    while True:
        m = int(input())
        n = int(input())
        if m == 0 and n == 0:
            break
        grid = [list(map(int, input().split())) for _ in range(n)]

        dp = [[-1]*m for _ in range(n)]

        def dfs(i, j):
            if dp[i][j] != -1:
                return dp[i][j]
            max_len = 1
            for dx, dy in [(1,0), (-1,0), (0,1), (0,-1)]:
                ni, nj = i+dy, j+dx
                if 0 <= ni < n and 0 <= nj < m and grid[ni][nj] == 1:
                    max_len = max(max_len, 1 + dfs(ni, nj))
            dp[i][j] = max_len
            return max_len

        ans = 0
        for i in range(n):
            for j in range(m):
                if grid[i][j] == 1:
                    ans = max(ans, dfs(i, j))
        print(ans)

solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30036604404449463
    2. '\n' → logprob: -1.5503660440444946
    3. '<|end|>' → logprob: -3.675365924835205
    4. '\' → logprob: -4.925365924835205
    5. 'newline' → logprob: -5.675365924835205
    6. 'import' → logprob: -5.675365924835205
    7. '<|end|>' → logprob: -6.050365924835205
    8. '
' → logprob: -6.925365924835205
    9. '```' → logprob: -6.925365924835205
    10. '' → logprob: -7.550365924835205

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00016539888747502118
    2. ' .' → logprob: -9.125164985656738
    3. '.import' → logprob: -11.625164985656738
    4. '.readline' → logprob: -12.000164985656738
    5. '.exit' → logprob: -12.625164985656738
    6. '.​' → logprob: -12.625164985656738
    7. '.user' → logprob: -12.750164985656738
    8. '​.' → logprob: -13.000164985656738
    9. '.stdout' → logprob: -13.125164985656738
    10. '.print' → logprob: -13.125164985656738

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7495635747909546
    2. 'trace' → logprob: -1.2495635747909546
    3. '_trace' → logprob: -2.499563694000244
    4. 't' → logprob: -3.499563694000244
    5. 'x' → logprob: -3.874563694000244
    6. '_version' → logprob: -4.374563694000244
    7. 'ex' → logprob: -4.374563694000244
    8. ' _' → logprob: -4.499563694000244
    9. 'default' → logprob: -4.874563694000244
    10. 'set' → logprob: -5.374563694000244

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0008840723894536495
    2. 'ursive' → logprob: -7.250884056091309
    3. '_limit' → logprob: -9.500884056091309
    4. 'limit' → logprob: -10.500884056091309
    5. 'urs' → logprob: -10.625884056091309
    6. 'ur' → logprob: -11.500884056091309
    7. 'ursively' → logprob: -11.625884056091309
    8. 'ursor' → logprob: -11.750884056091309
    9. 'urf' → logprob: -13.000884056091309
    10. 'urity' → logprob: -13.250884056091309

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.3142704665660858
    2. '_limit' → logprob: -1.3142704963684082
    3. '_depth' → logprob: -7.189270496368408
    4. 'depth' → logprob: -8.93927001953125
    5. ' limit' → logprob: -9.93927001953125
    6. 'lim' → logprob: -10.31427001953125
    7. '_stack' → logprob: -12.18927001953125
    8. '_lim' → logprob: -12.31427001953125
    9. '(limit' → logprob: -12.31427001953125
    10. '-limit' → logprob: -12.93927001953125

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6934542059898376
    2. '100' → logprob: -0.6934542059898376
    3. '500' → logprob: -8.943453788757324
    4. '300' → logprob: -9.193453788757324
    5. '999' → logprob: -10.443453788757324
    6. ' ' → logprob: -10.818453788757324
    7. '1' → logprob: -11.818453788757324
    8. '150' → logprob: -12.193453788757324
    9. '200' → logprob: -12.318453788757324
    10. '250' → logprob: -12.693453788757324

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17638230323791504
    2. '000' → logprob: -2.176382303237915
    3. '00' → logprob: -3.051382303237915
    4. '4' → logprob: -7.301382064819336
    5. '6' → logprob: -8.676382064819336
    6. '**' → logprob: -9.801382064819336
    7. '2' → logprob: -11.176382064819336
    8. '5' → logprob: -11.426382064819336
    9. '3' → logprob: -11.801382064819336
    10. '```' → logprob: -11.801382064819336

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0010229245526716113
    2. '6' → logprob: -7.251022815704346
    3. '9' → logprob: -8.126023292541504
    4. '8' → logprob: -11.001023292541504
    5. ' ' → logprob: -15.501023292541504
    6. '(' → logprob: -15.501023292541504
    7. '```' → logprob: -16.751022338867188
    8. '100' → logprob: -18.751022338867188
    9. '3' → logprob: -19.001022338867188
    10. '5' → logprob: -19.126022338867188

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2915230095386505
    2. ')' → logprob: -2.916522979736328
    3. '\n' → logprob: -2.916522979736328
    4. 'def' → logprob: -3.541522979736328
    5. '
' → logprob: -3.791522979736328
    6. '(' → logprob: -4.041522979736328
    7. '
' → logprob: -4.291522979736328
    8. '' → logprob: -4.541522979736328
    9. 'sys' → logprob: -4.541522979736328
    10. '#' → logprob: -4.916522979736328

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.335692822933197
    2. '()' → logprob: -1.3356928825378418
    3. '_data' → logprob: -4.335692882537842
    4. ' =' → logprob: -6.585692882537842
    5. 'data' → logprob: -6.585692882537842
    6. '=' → logprob: -6.710692882537842
    7. '().' → logprob: -6.960692882537842
    8. '.' → logprob: -7.335692882537842
    9. '_' → logprob: -7.460692882537842
    10. '```' → logprob: -7.460692882537842

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2547602355480194
    2. ' input' → logprob: -1.5047602653503418
    3. ' sys' → logprob: -6.629760265350342
    4. 'sys' → logprob: -6.629760265350342
    5. 'lambda' → logprob: -10.254759788513184
    6. '=input' → logprob: -10.629759788513184
    7. ' lambda' → logprob: -10.754759788513184
    8. '```' → logprob: -10.879759788513184
    9. 'open' → logprob: -11.129759788513184
    10. ' ' → logprob: -11.379759788513184

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06671422719955444
    2. '.readline' → logprob: -2.941714286804199
    3. '.' → logprob: -4.566714286804199
    4. '.stdout' → logprob: -7.566714286804199
    5. ' .' → logprob: -7.941714286804199
    6. '.input' → logprob: -8.8167142868042
    7. '.read' → logprob: -9.4417142868042
    8. '.std' → logprob: -9.4417142868042
    9. '.argv' → logprob: -9.9417142868042
    10. '.setdefault' → logprob: -10.5667142868042

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006280344910919666
    2. '.read' → logprob: -5.506280422210693
    3. 'read' → logprob: -6.381280422210693
    4. '.' → logprob: -7.881280422210693
    5. '.Read' → logprob: -9.256279945373535
    6. 'buffer' → logprob: -11.381279945373535
    7. '.buffer' → logprob: -11.756279945373535
    8. 'Read' → logprob: -12.631279945373535
    9. '_read' → logprob: -12.756279945373535
    10. '.readlines' → logprob: -13.131279945373535

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2764972448348999
    2. '(' → logprob: -2.7764973640441895
    3. 'def' → logprob: -2.9014973640441895
    4. '\n' → logprob: -3.2764973640441895
    5. '()
' → logprob: -3.9014973640441895
    6. '()

' → logprob: -4.1514973640441895
    7. '
' → logprob: -4.2764973640441895
    8. '```' → logprob: -4.9014973640441895
    9. '(
' → logprob: -5.0264973640441895
    10. '(n' → logprob: -5.4014973640441895

Token 19: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01824125461280346
    2. 'n' → logprob: -4.0182414054870605
    3. 'd' → logprob: -10.268240928649902
    4. 'N' → logprob: -11.143240928649902
    5. '```' → logprob: -11.518240928649902
    6. 'for' → logprob: -12.143240928649902
    7. 'class' → logprob: -12.143240928649902
    8. '\' → logprob: -12.268240928649902
    9. 't' → logprob: -12.393240928649902
    10. 'a' → logprob: -12.518240928649902

Token 20: ' solve' (ID: 17722)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.7451044917106628
    2. ' dfs' → logprob: -1.2451045513153076
    3. ' main' → logprob: -2.1201045513153076
    4. ' solve' → logprob: -2.4951045513153076
    5. ' factor' → logprob: -4.4951043128967285
    6. ' ' → logprob: -4.8701043128967285
    7. ' f' → logprob: -5.6201043128967285
    8. ' fibonacci' → logprob: -5.8701043128967285
    9. ' func' → logprob: -6.2451043128967285
    10. ' solution' → logprob: -6.9951043128967285

Token 21: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032189455814659595
    2. '_' → logprob: -5.878219127655029
    3. '():' → logprob: -9.253218650817871
    4. ':' → logprob: -9.378218650817871
    5. ' (' → logprob: -9.753218650817871
    6. '(:' → logprob: -10.628218650817871
    7. '```' → logprob: -10.753218650817871
    8. '("("' → logprob: -11.253218650817871
    9. '('' → logprob: -11.378218650817871
    10. '):' → logprob: -11.628218650817871

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004782069008797407
    2. 'n' → logprob: -6.129782199859619
    3. '    
' → logprob: -6.629782199859619
    4. '    ' → logprob: -7.379782199859619
    5. '(n' → logprob: -8.504781723022461
    6. ' n' → logprob: -8.879781723022461
    7. 'x' → logprob: -10.379781723022461
    8. 'a' → logprob: -10.379781723022461
    9. '<|end|>' → logprob: -11.004781723022461
    10. '\' → logprob: -11.129781723022461

Token 23: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6279363632202148
    2. ' n' → logprob: -0.8779363632202148
    3. ' ' → logprob: -3.377936363220215
    4. '   ' → logprob: -4.627936363220215
    5. '    ' → logprob: -5.502936363220215
    6. ' pass' → logprob: -7.502936363220215
    7. 'a' → logprob: -7.877936363220215
    8. 't' → logprob: -8.252936363220215
    9. '(n' → logprob: -8.502936363220215
    10. ' a' → logprob: -8.877936363220215

Token 24: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -8.25048828125
    3. 'True' → logprob: -8.87548828125
    4. '    ' → logprob: -9.62548828125
    5. ' not' → logprob: -11.37548828125
    6. '(True' → logprob: -12.62548828125
    7. '  ' → logprob: -12.87548828125
    8. ' input' → logprob: -13.37548828125
    9. '   ' → logprob: -14.50048828125
    10. ' (' → logprob: -14.62548828125

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019627612084150314
    2. '():' → logprob: -4.394627571105957
    3. ' :' → logprob: -5.144627571105957
    4. '   ' → logprob: -7.894627571105957
    5. '       ' → logprob: -8.269627571105957
    6. ':
' → logprob: -8.394627571105957
    7. '    ' → logprob: -8.769627571105957
    8. '):' → logprob: -9.394627571105957
    9. ' ():' → logprob: -10.269627571105957
    10. '(' → logprob: -10.644627571105957

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4263381063938141
    2. '    ' → logprob: -1.3013380765914917
    3. '   ' → logprob: -3.3013381958007812
    4. ' ' → logprob: -3.4263381958007812
    5. '        
' → logprob: -6.676338195800781
    6. '        ' → logprob: -6.801338195800781
    7. '(' → logprob: -7.551338195800781
    8. '  ' → logprob: -7.676338195800781
    9. '     ' → logprob: -7.801338195800781
    10. '      ' → logprob: -8.176338195800781

Token 27: ' m' (ID: 284)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9164648652076721
    2. '   ' → logprob: -1.2914648056030273
    3. 'line' → logprob: -1.2914648056030273
    4. 'data' → logprob: -4.291464805603027
    5. 'try' → logprob: -4.791464805603027
    6. 'n' → logprob: -4.791464805603027
    7. ' try' → logprob: -4.916464805603027
    8. '    ' → logprob: -6.166464805603027
    9. 'x' → logprob: -6.416464805603027
    10. ' n' → logprob: -6.541464805603027

Token 28: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12485872954130173
    2. ' ,' → logprob: -2.7498586177825928
    3. ' >' → logprob: -3.8748586177825928
    4. ' =' → logprob: -4.749858856201172
    5. '=' → logprob: -5.124858856201172
    6. ' ' → logprob: -5.374858856201172
    7. '>' → logprob: -5.624858856201172
    8. '  ' → logprob: -5.874858856201172
    9. ' ==' → logprob: -6.499858856201172
    10. ' :=' → logprob: -6.624858856201172

Token 29: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6922346353530884
    2. ' int' → logprob: -1.5672346353530884
    3. 'input' → logprob: -1.8172346353530884
    4. 'int' → logprob: -2.067234516143799
    5. ' sys' → logprob: -6.692234516143799
    6. ' ' → logprob: -7.942234516143799
    7. 'sys' → logprob: -9.817234992980957
    8. ' list' → logprob: -9.942234992980957
    9. '=int' → logprob: -10.192234992980957
    10. 'list' → logprob: -10.567234992980957

Token 30: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2014961838722229
    2. '(' → logprob: -1.7014961242675781
    3. 'input' → logprob: -10.076496124267578
    4. '(sys' → logprob: -10.576496124267578
    5. ' (' → logprob: -12.326496124267578
    6. '()' → logprob: -12.451496124267578
    7. '(
' → logprob: -12.451496124267578
    8. '(

' → logprob: -13.576496124267578
    9. '(in' → logprob: -14.076496124267578
    10. '((' → logprob: -15.451496124267578

Token 31: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014365635812282562
    2. '()' → logprob: -4.2643656730651855
    3. '().' → logprob: -8.889365196228027
    4. '()))' → logprob: -11.014365196228027
    5. ' ())' → logprob: -11.139365196228027
    6. '())
' → logprob: -11.264365196228027
    7. ')' → logprob: -11.514365196228027
    8. '(' → logprob: -12.389365196228027
    9. '();)' → logprob: -13.264365196228027
    10. '());' → logprob: -14.014365196228027

Token 32: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9400222301483154
    2. '<|end|>' → logprob: -1.0650222301483154
    3. '       ' → logprob: -2.1900222301483154
    4. ' ' → logprob: -2.4400222301483154
    5. 'if' → logprob: -3.6900222301483154
    6. '        ' → logprob: -3.6900222301483154
    7. '    ' → logprob: -5.0650224685668945
    8. '   ' → logprob: -6.0650224685668945
    9. '<|end|>' → logprob: -6.1900224685668945
    10. '  ' → logprob: -6.6900224685668945

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014175502583384514
    2. '=' → logprob: -4.2641754150390625
    3. ',' → logprob: -12.389175415039062
    4. ' >' → logprob: -13.139175415039062
    5. ' ,' → logprob: -13.514175415039062
    6. ' ' → logprob: -13.639175415039062
    7. '>' → logprob: -14.014175415039062
    8. ' ==' → logprob: -14.139175415039062
    9. ' =
' → logprob: -14.764175415039062
    10. ')' → logprob: -15.014175415039062

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07891952991485596
    2. 'int' → logprob: -2.5789194107055664
    3. '=int' → logprob: -11.328919410705566
    4. ' m' → logprob: -12.078919410705566
    5. ' ' → logprob: -12.203919410705566
    6. '(int' → logprob: -13.578919410705566
    7. ' input' → logprob: -13.828919410705566
    8. '    ' → logprob: -13.953919410705566
    9. 'm' → logprob: -14.078919410705566
    10. '	int' → logprob: -14.328919410705566

Token 36: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.3120038501219824e-05
    2. ' (' → logprob: -10.375053405761719
    3. '(' → logprob: -10.750053405761719
    4. 'input' → logprob: -15.625053405761719
    5. '=input' → logprob: -16.00005340576172
    6. '(int' → logprob: -17.00005340576172
    7. '(inp' → logprob: -17.75005340576172
    8. ' input' → logprob: -17.87505340576172
    9. '(output' → logprob: -18.25005340576172
    10. '(s' → logprob: -18.25005340576172

Token 37: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0055951569229364395
    2. '()' → logprob: -5.2555952072143555
    3. ')' → logprob: -8.005595207214355
    4. '())
' → logprob: -11.130595207214355
    5. ' ())' → logprob: -12.005595207214355
    6. '()
' → logprob: -12.755595207214355
    7. '();)' → logprob: -13.505595207214355
    8. '(' → logprob: -14.005595207214355
    9. '())

' → logprob: -14.880595207214355
    10. '()>' → logprob: -14.880595207214355

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044744424521923065
    2. '<|end|>' → logprob: -3.1697444915771484
    3. '   ' → logprob: -7.169744491577148
    4. ' ' → logprob: -8.294744491577148
    5. '        ' → logprob: -8.419744491577148
    6. 'if' → logprob: -9.169744491577148
    7. '<|end|>' → logprob: -9.294744491577148
    8. ' if' → logprob: -9.669744491577148
    9. '        
' → logprob: -9.794744491577148
    10. '    ' → logprob: -10.419744491577148

Token 39: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.029868628829717636
    2. ' not' → logprob: -3.6548686027526855
    3. 'm' → logprob: -5.7798686027526855
    4. ' n' → logprob: -7.9048686027526855
    5. 'not' → logprob: -9.654869079589844
    6. ' ' → logprob: -10.404869079589844
    7. 'n' → logprob: -12.029869079589844
    8. ' ' → logprob: -13.404869079589844
    9. ' (' → logprob: -13.529869079589844
    10. '	m' → logprob: -15.529869079589844

Token 41: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31356754899024963
    2. ' ==' → logprob: -1.3135675191879272
    3. '<' → logprob: -8.688567161560059
    4. '<=' → logprob: -9.563567161560059
    5. ' <' → logprob: -10.688567161560059
    6. '=' → logprob: -11.063567161560059
    7. ' <=' → logprob: -11.063567161560059
    8. '0' → logprob: -13.188567161560059
    9. '>' → logprob: -13.188567161560059
    10. '==-' → logprob: -13.313567161560059

Token 42: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25227874517440796
    2. ' ' → logprob: -1.5022788047790527
    3. 'n' → logprob: -8.502278327941895
    4. ' n' → logprob: -9.439778327941895
    5. '   ' → logprob: -11.939778327941895
    6. '  ' → logprob: -12.064778327941895
    7. '-' → logprob: -12.127278327941895
    8. '    ' → logprob: -12.814778327941895
    9. '_' → logprob: -12.877278327941895
    10. '```' → logprob: -13.002278327941895

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010001786286011338
    2. ' ' → logprob: -7.50100040435791
    3. 'n' → logprob: -7.87600040435791
    4. '-' → logprob: -10.00100040435791
    5. '   ' → logprob: -12.43850040435791
    6. ' n' → logprob: -12.43850040435791
    7. '```' → logprob: -12.81350040435791
    8. ' -' → logprob: -12.93850040435791
    9. '    ' → logprob: -13.93850040435791
    10. '  ' → logprob: -13.93850040435791

Token 44: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.031007081270217896
    2. 'and' → logprob: -3.6560070514678955
    3. ' or' → logprob: -5.531007289886475
    4. ' ' → logprob: -7.656007289886475
    5. ':' → logprob: -8.281006813049316
    6. 'or' → logprob: -12.781006813049316
    7. '	and' → logprob: -13.281006813049316
    8. '  ' → logprob: -14.406006813049316
    9. ' ' → logprob: -14.406006813049316
    10. ' :' → logprob: -15.031006813049316

Token 45: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048594068735837936
    2. 'n' → logprob: -3.0485939979553223
    3. '	n' → logprob: -12.04859447479248
    4. ' ' → logprob: -15.04859447479248
    5. ' ' → logprob: -15.17359447479248
    6. '<|end|>' → logprob: -16.798593521118164
    7. '  ' → logprob: -17.923593521118164
    8. '   ' → logprob: -18.048593521118164
    9. '_n' → logprob: -18.298593521118164
    10. ',n' → logprob: -18.548593521118164

Token 46: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04880809038877487
    2. '==' → logprob: -3.0488080978393555
    3. ' ' → logprob: -9.048808097839355
    4. '<|end|>' → logprob: -10.048808097839355
    5. '0' → logprob: -11.423808097839355
    6. '=' → logprob: -11.548808097839355
    7. ')==' → logprob: -11.673808097839355
    8. '<|end|>' → logprob: -12.048808097839355
    9. ' ' → logprob: -12.298808097839355
    10. ')' → logprob: -12.298808097839355

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17974531650543213
    2. '0' → logprob: -1.8047453165054321
    3. '<|end|>' → logprob: -14.9297456741333
    4. ' ' → logprob: -15.8047456741333
    5. '  ' → logprob: -16.179744720458984
    6. '<|end|>' → logprob: -16.367244720458984
    7. '۰' → logprob: -18.054744720458984
    8. '=' → logprob: -18.179744720458984
    9. '   ' → logprob: -18.429744720458984
    10. '	' → logprob: -18.492244720458984

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.750158309936523
    4. '  ' → logprob: -18.375158309936523
    5. '۰' → logprob: -19.000158309936523
    6. ' ' → logprob: -19.812658309936523
    7. '```' → logprob: -20.000158309936523
    8. '০' → logprob: -20.312658309936523
    9. '०' → logprob: -20.625158309936523
    10. '    ' → logprob: -20.812658309936523

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004023097571916878
    2. '       ' → logprob: -8.125402450561523
    3. ':
' → logprob: -9.750402450561523
    4. '           ' → logprob: -10.750402450561523
    5. '   ' → logprob: -11.375402450561523
    6. ' :' → logprob: -11.750402450561523
    7. ':return' → logprob: -12.500402450561523
    8. '):' → logprob: -13.625402450561523
    9. '.' → logprob: -14.875402450561523
    10. ',' → logprob: -15.125402450561523

Token 50: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6331623792648315
    2. '           ' → logprob: -0.7581623792648315
    3. '   ' → logprob: -8.508162498474121
    4. ':' → logprob: -9.758162498474121
    5. '        ' → logprob: -10.008162498474121
    6. '          ' → logprob: -10.633162498474121
    7. ' break' → logprob: -10.633162498474121
    8. '\n' → logprob: -10.758162498474121
    9. '<|end|>' → logprob: -10.758162498474121
    10. '      ' → logprob: -10.883162498474121

Token 51: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7025600671768188
    2. 'break' (adapté à ' break') → logprob: -1.3275600671768188
    3. '       ' → logprob: -1.8275600671768188
    4. '           ' → logprob: -2.5775599479675293
    5. 'return' → logprob: -6.702559947967529
    6. '	break' → logprob: -7.452559947967529
    7. '   ' → logprob: -8.077560424804688
    8. ' return' → logprob: -8.077560424804688
    9. '               ' → logprob: -8.327560424804688
    10. '_break' → logprob: -10.202560424804688

Token 52: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08774114400148392
    2. '<|end|>' → logprob: -2.8377411365509033
    3. '   ' → logprob: -4.587741374969482
    4. '        
' → logprob: -5.087741374969482
    5. '
' → logprob: -6.337741374969482
    6. '        ' → logprob: -6.462741374969482
    7. '    ' → logprob: -6.462741374969482
    8. '```' → logprob: -6.712741374969482
    9. '    
' → logprob: -7.212741374969482
    10. '<|end|>' → logprob: -8.087740898132324

Token 54: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -1.181186556816101
    2. 'graph' → logprob: -1.431186556816101
    3. '       ' → logprob: -2.3061866760253906
    4. 'board' → logprob: -2.9311866760253906
    5. ' grid' → logprob: -2.9311866760253906
    6. ' graph' → logprob: -3.3061866760253906
    7. 'map' → logprob: -3.4311866760253906
    8. 'forest' → logprob: -4.306186676025391
    9. ' farm' → logprob: -4.431186676025391
    10. 'field' → logprob: -4.556186676025391

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032709988299757242
    2. '=' → logprob: -5.753271102905273
    3. '[' → logprob: -10.003271102905273
    4. ' ' → logprob: -10.503271102905273
    5. ' =[' → logprob: -11.128271102905273
    6. ',' → logprob: -13.128271102905273
    7. '[:]' → logprob: -13.628271102905273
    8. ' =
' → logprob: -14.753271102905273
    9. '=[]' → logprob: -14.878271102905273
    10. ')' → logprob: -15.128271102905273

Token 56: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4779859483242035
    2. ' [' → logprob: -1.1029859781265259
    3. '[]' → logprob: -3.6029858589172363
    4. '[[' → logprob: -5.227985858917236
    5. '[m' → logprob: -5.727985858917236
    6. '[list' → logprob: -5.852985858917236
    7. '[n' → logprob: -5.977985858917236
    8. ' []' → logprob: -6.227985858917236
    9. ' [[' → logprob: -6.602985858917236
    10. '[['' → logprob: -7.352985858917236

Token 57: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4119006097316742
    2. ' list' → logprob: -1.6619006395339966
    3. '[list' → logprob: -2.411900520324707
    4. '[input' → logprob: -2.911900520324707
    5. ' [' → logprob: -6.036900520324707
    6. '[' → logprob: -7.411900520324707
    7. 'input' → logprob: -7.411900520324707
    8. ' input' → logprob: -9.411900520324707
    9. '[]' → logprob: -9.911900520324707
    10. '(list' → logprob: -10.911900520324707

Token 58: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002726601669564843
    2. '(' → logprob: -8.500272750854492
    3. '(input' → logprob: -10.125272750854492
    4. '()' → logprob: -10.875272750854492
    5. 'map' → logprob: -11.750272750854492
    6. '(int' → logprob: -13.375272750854492
    7. ' map' → logprob: -15.500272750854492
    8. '(range' → logprob: -16.000272750854492
    9. '()]' → logprob: -16.125272750854492
    10. '(
' → logprob: -16.500272750854492

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00016885579680092633
    2. 'int' → logprob: -9.375168800354004
    3. '(' → logprob: -10.250168800354004
    4. ',int' → logprob: -11.000168800354004
    5. ')' → logprob: -12.000168800354004
    6. '(str' → logprob: -12.125168800354004
    7. '(lambda' → logprob: -12.125168800354004
    8. '=int' → logprob: -12.500168800354004
    9. ' int' → logprob: -12.625168800354004
    10. '[int' → logprob: -12.875168800354004

Token 60: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.21919341385364532
    2. ',input' → logprob: -1.719193458557129
    3. ',' → logprob: -4.469193458557129
    4. '(' → logprob: -5.219193458557129
    5. 'input' → logprob: -7.344193458557129
    6. ' input' → logprob: -10.219193458557129
    7. ' ,' → logprob: -11.219193458557129
    8. '=input' → logprob: -11.219193458557129
    9. ' (' → logprob: -11.344193458557129
    10. ')' → logprob: -11.969193458557129

Token 61: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009759632870554924
    2. ' input' → logprob: -4.634759426116943
    3. 'list' → logprob: -13.884759902954102
    4. '(input' → logprob: -14.509759902954102
    5. 'sys' → logprob: -14.634759902954102
    6. '	input' → logprob: -14.884759902954102
    7. ',input' → logprob: -14.884759902954102
    8. '   ' → logprob: -15.009759902954102
    9. '<input' → logprob: -15.134759902954102
    10. ' ' → logprob: -16.0097599029541

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.500004768371582
    3. '(' → logprob: -14.125004768371582
    4. ' ().' → logprob: -15.750004768371582
    5. '.readline' → logprob: -16.3750057220459
    6. '()))' → logprob: -17.3750057220459
    7. '()
' → logprob: -17.5000057220459
    8. 'split' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.0000057220459
    10. '.split' → logprob: -18.3750057220459

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06283151358366013
    2. 'strip' → logprob: -2.812831401824951
    3. 'rstrip' → logprob: -7.062831401824951
    4. ' split' → logprob: -12.68783187866211
    5. '(split' → logprob: -12.68783187866211
    6. '().' → logprob: -14.43783187866211
    7. 'spl' → logprob: -15.56283187866211
    8. ' strip' → logprob: -15.93783187866211
    9. 'read' → logprob: -17.06283187866211
    10. ')' → logprob: -17.43783187866211

Token 64: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0026630505453795195
    2. '()' → logprob: -6.2526631355285645
    3. '))' → logprob: -8.502662658691406
    4. '())))' → logprob: -8.627662658691406
    5. '())' → logprob: -8.877662658691406
    6. '(' → logprob: -8.877662658691406
    7. '()))
' → logprob: -10.002662658691406
    8. '().' → logprob: -11.627662658691406
    9. '(),' → logprob: -12.377662658691406
    10. '()
' → logprob: -12.502662658691406

Token 65: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39431697130203247
    2. '()' → logprob: -1.1443169116973877
    3. '(' → logprob: -5.769317150115967
    4. '(n' → logprob: -6.394317150115967
    5. ')' → logprob: -6.894317150115967
    6. '(m' → logprob: -7.519317150115967
    7. '()]' → logprob: -7.519317150115967
    8. '()))' → logprob: -8.269316673278809
    9. 'for' → logprob: -9.144316673278809
    10. '(),' → logprob: -9.894316673278809

Token 66: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5567815899848938
    2. ' range' → logprob: -1.056781530380249
    3. ' _' → logprob: -3.306781530380249
    4. 'range' → logprob: -3.681781530380249
    5. '_range' → logprob: -4.306781768798828
    6. '(range' → logprob: -6.056781768798828
    7. ' in' → logprob: -6.431781768798828
    8. '	range' → logprob: -10.556781768798828
    9. '_i' → logprob: -10.931781768798828
    10. '_in' → logprob: -11.181781768798828

Token 67: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5045567750930786
    2. ' range' → logprob: -1.0045567750930786
    3. '(range' → logprob: -3.629556655883789
    4. ' in' → logprob: -5.879556655883789
    5. 'in' → logprob: -7.879556655883789
    6. '	range' → logprob: -8.254556655883789
    7. ' xrange' → logprob: -10.879556655883789
    8. '(' → logprob: -12.129556655883789
    9. '(r' → logprob: -12.254556655883789
    10. ' ' → logprob: -12.254556655883789

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06203703582286835
    2. ' range' → logprob: -2.8120369911193848
    3. '(range' → logprob: -9.687037467956543
    4. 'm' → logprob: -13.437037467956543
    5. '	range' → logprob: -13.562037467956543
    6. 'n' → logprob: -13.937037467956543
    7. ' ' → logprob: -14.062037467956543
    8. 'r' → logprob: -14.187037467956543
    9. '   ' → logprob: -14.562037467956543
    10. '[' → logprob: -14.937037467956543

Token 69: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02353556826710701
    2. '(m' → logprob: -3.7735354900360107
    3. '(' → logprob: -8.14853572845459
    4. '(s' → logprob: -14.89853572845459
    5. 'n' → logprob: -15.52353572845459
    6. ' (' → logprob: -15.77353572845459
    7. 'm' → logprob: -16.273534774780273
    8. '((' → logprob: -16.398534774780273
    9. '(r' → logprob: -18.023534774780273
    10. ')n' → logprob: -18.148534774780273

Token 70: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.2961512513575144e-05
    2. ')' → logprob: -11.625022888183594
    3. ']' → logprob: -11.625022888183594
    4. '   ' → logprob: -14.000022888183594
    5. ')]
' → logprob: -14.000022888183594
    6. '       ' → logprob: -14.125022888183594
    7. ')])' → logprob: -14.375022888183594
    8. '])]' → logprob: -14.750022888183594
    9. ')],' → logprob: -15.125022888183594
    10. ' )' → logprob: -15.375022888183594

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29736894369125366
    2. '<|end|>' → logprob: -2.0473690032958984
    3. '
' → logprob: -2.9223690032958984
    4. 'def' → logprob: -3.6723690032958984
    5. '   ' → logprob: -3.6723690032958984
    6. '        
' → logprob: -4.672369003295898
    7. '        ' → logprob: -5.547369003295898
    8. '    ' → logprob: -5.797369003295898
    9. 'for' → logprob: -7.047369003295898
    10. ' for' → logprob: -7.297369003295898

Token 72: ' dp' (ID: 21546)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.029489753767848015
    2. 'def' → logprob: -4.404489517211914
    3. 'dx' → logprob: -4.779489517211914
    4. 'dire' → logprob: -5.904489517211914
    5. 'dp' (adapté à ' dp') → logprob: -6.529489517211914
    6. 'visit' → logprob: -6.779489517211914
    7. '       ' → logprob: -6.904489517211914
    8. 'dirs' → logprob: -7.404489517211914
    9. 'vis' → logprob: -8.154489517211914
    10. 'dist' → logprob: -8.404489517211914

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024934951215982437
    2. '=' → logprob: -6.002493381500244
    3. '[' → logprob: -11.502493858337402
    4. ' ' → logprob: -12.627493858337402
    5. '<|end|>' → logprob: -13.752493858337402
    6. ' =[' → logprob: -14.127493858337402
    7. '=[]' → logprob: -14.502493858337402
    8. ')' → logprob: -14.752493858337402
    9. '  ' → logprob: -15.252493858337402
    10. '[:]' → logprob: -15.502493858337402

Token 74: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.029957130551338196
    2. ' [[' → logprob: -3.7799570560455322
    3. '[' → logprob: -5.029957294464111
    4. '[-' → logprob: -9.029956817626953
    5. ' [' → logprob: -11.654956817626953
    6. '[]' → logprob: -11.654956817626953
    7. '{}' → logprob: -12.404956817626953
    8. '[n' → logprob: -12.779956817626953
    9. '[['' → logprob: -13.154956817626953
    10. '   ' → logprob: -13.529956817626953

Token 75: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04872452840209007
    2. '0' → logprob: -3.048724412918091
    3. 'None' → logprob: -9.423724174499512
    4. 'False' → logprob: -10.548724174499512
    5. 'float' → logprob: -11.673724174499512
    6. ' -' → logprob: -11.798724174499512
    7. '-f' → logprob: -12.548724174499512
    8. '1' → logprob: -13.298724174499512
    9. '-inf' → logprob: -13.548724174499512
    10. '[' → logprob: -13.673724174499512

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '2' → logprob: -14.375001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '-' → logprob: -15.375001907348633
    5. '10' → logprob: -15.500001907348633
    6. 'float' → logprob: -15.500001907348633
    7. 'inf' → logprob: -17.000001907348633
    8. '100' → logprob: -17.750001907348633
    9. '0' → logprob: -17.812501907348633
    10. '11' → logprob: -17.875001907348633

Token 77: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0713290423154831
    2. ']' → logprob: -2.946329116821289
    3. ']*' → logprob: -4.446329116821289
    4. 'for' → logprob: -5.696329116821289
    5. ' ]' → logprob: -7.071329116821289
    6. ')' → logprob: -8.446329116821289
    7. ']*(' → logprob: -9.821329116821289
    8. '	for' → logprob: -9.946329116821289
    9. ' ' → logprob: -10.196329116821289
    10. ')]' → logprob: -11.946329116821289

Token 78: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005327790859155357
    2. ' m' → logprob: -7.750532627105713
    3. '(m' → logprob: -9.875533103942871
    4. '   ' → logprob: -10.750533103942871
    5. '(' → logprob: -11.000533103942871
    6. '           ' → logprob: -12.750533103942871
    7. '       ' → logprob: -13.125533103942871
    8. '	m' → logprob: -13.500533103942871
    9. '    ' → logprob: -13.625533103942871
    10. '               ' → logprob: -13.875533103942871

Token 79: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.078914575278759
    2. 'for' → logprob: -2.5789146423339844
    3. ']' → logprob: -11.578914642333984
    4. '   ' → logprob: -11.703914642333984
    5. '	for' → logprob: -12.953914642333984
    6. ')' → logprob: -13.078914642333984
    7. ' ' → logprob: -14.078914642333984
    8. '       ' → logprob: -14.203914642333984
    9. ' ]' → logprob: -14.703914642333984
    10. '    ' → logprob: -16.078914642333984

Token 80: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8073314428329468
    2. ' range' → logprob: -0.8073314428329468
    3. '_' → logprob: -2.3073315620422363
    4. 'range' → logprob: -5.307331562042236
    5. '_range' → logprob: -5.807331562042236
    6. ' in' → logprob: -7.932331562042236
    7. ' ' → logprob: -10.932331085205078
    8. ' i' → logprob: -11.557331085205078
    9. '	range' → logprob: -11.557331085205078
    10. '(range' → logprob: -12.432331085205078

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17010466754436493
    2. 'in' → logprob: -2.295104742050171
    3. 'range' → logprob: -2.920104742050171
    4. ' range' → logprob: -6.920104503631592
    5. '_' → logprob: -7.295104503631592
    6. ' ' → logprob: -9.92010498046875
    7. '_range' → logprob: -11.54510498046875
    8. '(range' → logprob: -12.42010498046875
    9. ' _' → logprob: -12.54510498046875
    10. '	range' → logprob: -13.17010498046875

Token 82: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004641711246222258
    2. ' range' → logprob: -5.379641532897949
    3. '[' → logprob: -11.00464153289795
    4. '(range' → logprob: -12.87964153289795
    5. '   ' → logprob: -14.25464153289795
    6. '	range' → logprob: -14.62964153289795
    7. ' xrange' → logprob: -15.37964153289795
    8. ']' → logprob: -15.37964153289795
    9. ' ' → logprob: -16.129642486572266
    10. 'grid' → logprob: -16.504642486572266

Token 83: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.8130049705505371
    2. 'range' → logprob: -1.063004970550537
    3. ' range' → logprob: -1.563004970550537
    4. '(n' → logprob: -6.688004970550537
    5. '   ' → logprob: -8.813005447387695
    6. '	range' → logprob: -9.438005447387695
    7. '(' → logprob: -10.438005447387695
    8. ']' → logprob: -11.563005447387695
    9. '.range' → logprob: -11.813005447387695
    10. ')' → logprob: -12.063005447387695

Token 84: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001249925117008388
    2. ']' → logprob: -9.25012493133545
    3. ')' → logprob: -10.62512493133545
    4. '       ' → logprob: -13.75012493133545
    5. ' )' → logprob: -14.00012493133545
    6. ')]
' → logprob: -14.50012493133545
    7. '   ' → logprob: -14.62512493133545
    8. ')],' → logprob: -14.62512493133545
    9. ' ]' → logprob: -15.37512493133545
    10. '])]' → logprob: -15.37512493133545

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.970367968082428
    2. '   ' → logprob: -1.4703679084777832
    3. '<|end|>' → logprob: -1.9703679084777832
    4. 'def' → logprob: -2.220367908477783
    5. '
' → logprob: -2.470367908477783
    6. '        
' → logprob: -4.595367908477783
    7. ' ' → logprob: -4.595367908477783
    8. '    
' → logprob: -4.720367908477783
    9. '' → logprob: -5.095367908477783
    10. '    ' → logprob: -5.095367908477783

Token 86: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000227496653678827
    2. '   ' → logprob: -8.750227928161621
    3. ' def' → logprob: -10.000227928161621
    4. 'for' → logprob: -11.750227928161621
    5. '       ' → logprob: -12.000227928161621
    6. ')' → logprob: -12.750227928161621
    7. '<|end|>' → logprob: -13.625227928161621
    8. '```' → logprob: -13.750227928161621
    9. '        
' → logprob: -14.375227928161621
    10. 'indent' → logprob: -14.375227928161621

Token 87: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6331185698509216
    2. 'dfs' → logprob: -0.7581185698509216
    3. 'dp' → logprob: -8.258118629455566
    4. ' dp' → logprob: -9.133118629455566
    5. 'f' → logprob: -10.133118629455566
    6. 'd' → logprob: -10.508118629455566
    7. ' ' → logprob: -11.383118629455566
    8. ' find' → logprob: -11.883118629455566
    9. '   ' → logprob: -12.133118629455566
    10. ' DFS' → logprob: -12.508118629455566

Token 88: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7164371013641357
    2. '(' → logprob: -1.4664371013641357
    3. '(row' → logprob: -2.4664371013641357
    4. '(i' → logprob: -2.5914371013641357
    5. '(y' → logprob: -2.5914371013641357
    6. '(r' → logprob: -3.0914371013641357
    7. ' (' → logprob: -9.091437339782715
    8. '(u' → logprob: -9.716437339782715
    9. '(n' → logprob: -9.841437339782715
    10. '(_' → logprob: -10.216437339782715

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0525028370320797
    2. ',j' → logprob: -3.0525028705596924
    3. ' ,' → logprob: -5.552502632141113
    4. ',d' → logprob: -11.302502632141113
    5. ' j' → logprob: -12.552502632141113
    6. '   ' → logprob: -13.052502632141113
    7. ' ' → logprob: -13.552502632141113
    8. ',s' → logprob: -13.677502632141113
    9. ',k' → logprob: -13.677502632141113
    10. ',x' → logprob: -13.927502632141113

Token 90: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06197071075439453
    2. ' j' → logprob: -2.8119707107543945
    3. '	j' → logprob: -13.811970710754395
    4. '    ' → logprob: -14.061970710754395
    5. '   ' → logprob: -14.311970710754395
    6. ',j' → logprob: -14.811970710754395
    7. ' ' → logprob: -15.686970710754395
    8. '  ' → logprob: -16.686969757080078
    9. ' ' → logprob: -17.061969757080078
    10. '_j' → logprob: -17.061969757080078

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.221884101862088e-05
    2. ')' → logprob: -9.875092506408691
    3. '):
' → logprob: -11.000092506408691
    4. ' ):' → logprob: -11.375092506408691
    5. ':' → logprob: -11.750092506408691
    6. ',' → logprob: -12.750092506408691
    7. '   ' → logprob: -14.375092506408691
    8. '):
' → logprob: -15.000092506408691
    9. '       ' → logprob: -15.625092506408691
    10. ' ' → logprob: -16.000091552734375

Token 92: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.053426094353199005
    2. '<|end|>' → logprob: -3.6784260272979736
    3. '       ' → logprob: -3.8034260272979736
    4. '):' → logprob: -6.928426265716553
    5. ' if' → logprob: -7.178426265716553
    6. ':return' → logprob: -7.303426265716553
    7. ',' → logprob: -8.053425788879395
    8. '[' → logprob: -8.303425788879395
    9. '           ' → logprob: -8.678425788879395
    10. '        ' → logprob: -8.803425788879395

Token 93: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38867080211639404
    2. '           ' → logprob: -2.2636709213256836
    3. ' ' → logprob: -2.6386709213256836
    4. 'if' (adapté à ' if') → logprob: -2.8886709213256836
    5. '               ' → logprob: -3.0136709213256836
    6. '            ' → logprob: -4.513670921325684
    7. '   ' → logprob: -5.013670921325684
    8. '       ' → logprob: -5.263670921325684
    9. '    ' → logprob: -5.388670921325684
    10. '        ' → logprob: -5.513670921325684

Token 94: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1622503101825714
    2. 'i' → logprob: -2.037250280380249
    3. ' dp' → logprob: -4.412250518798828
    4. ' i' → logprob: -5.037250518798828
    5. '   ' → logprob: -8.162250518798828
    6. 'not' → logprob: -8.662250518798828
    7. ' not' → logprob: -9.037250518798828
    8. ' ' → logprob: -9.537250518798828
    9. '	dp' → logprob: -10.287250518798828
    10. '(dp' → logprob: -11.162250518798828

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[j' → logprob: -14.250000953674316
    3. '[n' → logprob: -15.375000953674316
    4. '[' → logprob: -16.125001907348633
    5. '][' → logprob: -16.750001907348633
    6. '[I' → logprob: -17.000001907348633
    7. '[ii' → logprob: -17.375001907348633
    8. '```' → logprob: -17.625001907348633
    9. '
' → logprob: -17.750001907348633
    10. ')[' → logprob: -17.875001907348633

Token 96: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009898336604237556
    2. '[i' → logprob: -4.6348981857299805
    3. ']' → logprob: -9.13489818572998
    4. ' ][' → logprob: -10.88489818572998
    5. ']][' → logprob: -12.75989818572998
    6. '"][' → logprob: -13.13489818572998
    7. ')][' → logprob: -13.38489818572998
    8. ')[' → logprob: -13.38489818572998
    9. '   ' → logprob: -13.63489818572998
    10. 'i' → logprob: -13.63489818572998

Token 97: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.941850526549388e-06
    2. ' j' → logprob: -12.125007629394531
    3. '[j' → logprob: -13.250007629394531
    4. ']' → logprob: -15.375007629394531
    5. '	j' → logprob: -15.750007629394531
    6. '   ' → logprob: -16.00000762939453
    7. ' ' → logprob: -16.50000762939453
    8. '][' → logprob: -16.62500762939453
    9. '```' → logprob: -17.00000762939453
    10. ',j' → logprob: -17.25000762939453

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00438549043610692
    2. ']!=' → logprob: -5.504385471343994
    3. ')' → logprob: -8.879385948181152
    4. '!=' → logprob: -9.629385948181152
    5. ' ]' → logprob: -9.754385948181152
    6. ']==' → logprob: -10.879385948181152
    7. ' !=' → logprob: -11.129385948181152
    8. ')!=' → logprob: -12.129385948181152
    9. '!=-' → logprob: -13.504385948181152
    10. '[' → logprob: -13.879385948181152

Token 99: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25446027517318726
    2. ' !=' → logprob: -1.504460334777832
    3. '!=-' → logprob: -6.004460334777832
    4. ']!=' → logprob: -11.129460334777832
    5. '>' → logprob: -11.504460334777832
    6. '>=' → logprob: -11.629460334777832
    7. '[' → logprob: -11.754460334777832
    8. '==' → logprob: -12.379460334777832
    9. ')!=' → logprob: -12.379460334777832
    10. '()!=' → logprob: -12.629460334777832

Token 100: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011729635298252106
    2. ' -' → logprob: -6.75117301940918
    3. '   ' → logprob: -13.12617301940918
    4. ' ' → logprob: -14.25117301940918
    5. '  ' → logprob: -16.87617301940918
    6. '−' → logprob: -17.25117301940918
    7. '	' → logprob: -17.87617301940918
    8. '0' → logprob: -18.25117301940918
    9. '-l' → logprob: -18.50117301940918
    10. '    ' → logprob: -18.62617301940918

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.742448022123426e-05
    2. ' ' → logprob: -9.625067710876465
    3. '```' → logprob: -15.062567710876465
    4. '   ' → logprob: -15.437567710876465
    5. '  ' → logprob: -16.43756675720215
    6. '           ' → logprob: -16.50006675720215
    7. '2' → logprob: -16.87506675720215
    8. '                   ' → logprob: -17.06256675720215
    9. ',' → logprob: -17.12506675720215
    10. ')' → logprob: -17.12506675720215

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02258416824042797
    2. ':
' → logprob: -4.022583961486816
    3. ':return' → logprob: -5.522583961486816
    4. '           ' → logprob: -8.522583961486816
    5. '):' → logprob: -9.272583961486816
    6. '               ' → logprob: -10.147583961486816
    7. ' and' → logprob: -10.647583961486816
    8. '):
' → logprob: -11.022583961486816
    9. ' :' → logprob: -11.022583961486816
    10. '       ' → logprob: -11.272583961486816

Token 103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05595609173178673
    2. ' return' → logprob: -3.8059561252593994
    3. 'return' → logprob: -4.18095588684082
    4. '           ' → logprob: -4.30595588684082
    5. ':return' → logprob: -6.18095588684082
    6. '\n' → logprob: -7.05595588684082
    7. '   ' → logprob: -9.18095588684082
    8. '
' → logprob: -10.05595588684082
    9. '```' → logprob: -10.18095588684082
    10. '       ' → logprob: -10.18095588684082

Token 104: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17003990709781647
    2. 'return' (adapté à ' return') → logprob: -2.1700398921966553
    3. '               ' → logprob: -3.4200398921966553
    4. '           ' → logprob: -5.045040130615234
    5. '
' → logprob: -6.420040130615234
    6. ' 
' → logprob: -7.170040130615234
    7. '                   ' → logprob: -7.920040130615234
    8. ':return' → logprob: -9.420040130615234
    9. '\n' → logprob: -10.045040130615234
    10. '   ' → logprob: -10.420040130615234

Token 105: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4740787148475647
    2. ' dp' → logprob: -0.9740787148475647
    3. '	dp' → logprob: -13.849079132080078
    4. '(dp' → logprob: -14.974079132080078
    5. ' ' → logprob: -15.474079132080078
    6. '
' → logprob: -16.349079132080078
    7. ' ' → logprob: -17.099079132080078
    8. '0' → logprob: -17.349079132080078
    9. '.dp' → logprob: -17.599079132080078
    10. '_dp' → logprob: -17.974079132080078

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -13.125005722045898
    3. '```' → logprob: -13.750005722045898
    4. 'i' → logprob: -14.125005722045898
    5. '][' → logprob: -14.750005722045898
    6. '           ' → logprob: -15.000005722045898
    7. ' [' → logprob: -15.000005722045898
    8. 'dp' → logprob: -15.500005722045898
    9. '   ' → logprob: -15.875005722045898
    10. '       ' → logprob: -16.0000057220459

Token 107: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023363808169960976
    2. '[i' → logprob: -3.7733638286590576
    3. ']' → logprob: -10.398364067077637
    4. ')[' → logprob: -10.523364067077637
    5. 'i' → logprob: -10.648364067077637
    6. ' ][' → logprob: -11.148364067077637
    7. '   ' → logprob: -12.523364067077637
    8. '[I' → logprob: -12.648364067077637
    9. '```' → logprob: -13.148364067077637
    10. '[' → logprob: -13.273364067077637

Token 108: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.375001907348633
    3. ' ' → logprob: -15.625001907348633
    4. '```' → logprob: -15.750001907348633
    5. '	j' → logprob: -16.000001907348633
    6. '[j' → logprob: -16.750001907348633
    7. ']' → logprob: -16.875001907348633
    8. 'i' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '_j' → logprob: -17.625001907348633

Token 109: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11032887548208237
    2. ']' → logprob: -2.6103289127349854
    3. '])' → logprob: -3.4853289127349854
    4. ')
' → logprob: -9.360328674316406
    5. ')]' → logprob: -9.485328674316406
    6. '           ' → logprob: -9.735328674316406
    7. '）' → logprob: -10.860328674316406
    8. '       ' → logprob: -11.110328674316406
    9. '])
' → logprob: -11.110328674316406
    10. ' )' → logprob: -11.860328674316406

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6580620408058167
    2. '       ' → logprob: -1.4080619812011719
    3. '<|end|>' → logprob: -1.7830619812011719
    4. '
' → logprob: -3.908061981201172
    5. '   ' → logprob: -4.408061981201172
    6. '            
' → logprob: -5.033061981201172
    7. ')' → logprob: -5.283061981201172
    8. ' ' → logprob: -5.658061981201172
    9. '               ' → logprob: -5.658061981201172
    10. '    
' → logprob: -5.908061981201172

Token 111: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.591567039489746
    2. ' directions' → logprob: -2.091567039489746
    3. 'count' → logprob: -2.216567039489746
    4. '           ' → logprob: -2.466567039489746
    5. ' count' → logprob: -2.841567039489746
    6. '
' → logprob: -2.966567039489746
    7. 'max' (adapté à ' max') → logprob: -3.091567039489746
    8. ' ' → logprob: -3.216567039489746
    9. ' res' → logprob: -3.466567039489746
    10. ' dp' → logprob: -3.591567039489746

Token 112: '_len' (ID: 13683)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.1935936212539673
    2. '_depth' → logprob: -1.6935936212539673
    3. '_path' → logprob: -1.9435936212539673
    4. '_length' → logprob: -1.9435936212539673
    5. '_len' → logprob: -2.1935935020446777
    6. '_val' → logprob: -2.8185935020446777
    7. '_' → logprob: -3.8185935020446777
    8. '_sum' → logprob: -5.068593502044678
    9. '_height' → logprob: -5.693593502044678
    10. '_dp' → logprob: -5.693593502044678

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804539144039154
    2. '=' → logprob: -3.2880454063415527
    3. ' ' → logprob: -13.538044929504395
    4. ',' → logprob: -13.538044929504395
    5. '   ' → logprob: -14.913044929504395
    6. ')' → logprob: -15.538044929504395
    7. ' ' → logprob: -15.663044929504395
    8. ' =
' → logprob: -15.788044929504395
    9. '_' → logprob: -16.53804588317871
    10. '```' → logprob: -16.91304588317871

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032867982517927885
    2. ' ' → logprob: -5.753286838531494
    3. '0' → logprob: -9.128286361694336
    4. '   ' → logprob: -15.503286361694336
    5. ' ' → logprob: -16.315786361694336
    6. '```' → logprob: -16.815786361694336
    7. '  ' → logprob: -17.628286361694336
    8. '`' → logprob: -18.128286361694336
    9. '100' → logprob: -18.440786361694336
    10. 'dfs' → logprob: -18.503286361694336

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030042731668800116
    2. '0' → logprob: -8.750300407409668
    3. ' ' → logprob: -8.875300407409668
    4. '```' → logprob: -14.500300407409668
    5. '   ' → logprob: -15.125300407409668
    6. '-' → logprob: -15.375300407409668
    7. 'dfs' → logprob: -16.187801361083984
    8. '2' → logprob: -16.250301361083984
    9. 'float' → logprob: -16.312801361083984
    10. '``' → logprob: -16.312801361083984

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23369914293289185
    2. '<|end|>' → logprob: -2.233699083328247
    3. '           ' → logprob: -2.358699083328247
    4. '\n' → logprob: -6.858699321746826
    5. '            
' → logprob: -6.858699321746826
    6. '<|end|>' → logprob: -6.983699321746826
    7. ')' → logprob: -7.483699321746826
    8. '       ' → logprob: -7.483699321746826
    9. '    
' → logprob: -7.733699321746826
    10. ',' → logprob: -7.983699321746826

Token 117: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08744409680366516
    2. '           ' → logprob: -2.8374440670013428
    3. '\n' → logprob: -4.587444305419922
    4. '            
' → logprob: -5.212444305419922
    5. '    
' → logprob: -5.962444305419922
    6. '<|end|>' → logprob: -6.587444305419922
    7. '
' → logprob: -7.212444305419922
    8. ' 
' → logprob: -7.337444305419922
    9. '       ' → logprob: -7.462444305419922
    10. '   ' → logprob: -7.587444305419922

Token 118: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0034098625183105
    2. ' for' → logprob: -1.3784098625183105
    3. 'dire' → logprob: -1.3784098625183105
    4. ' directions' → logprob: -2.2534098625183105
    5. '
' → logprob: -4.0034098625183105
    6. 'dirs' → logprob: -5.3784098625183105
    7. '           ' → logprob: -7.0034098625183105
    8. ' dirs' → logprob: -9.003410339355469
    9. '   ' → logprob: -9.003410339355469
    10. ' 
' → logprob: -9.878410339355469

Token 119: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.25805723667144775
    2. 'di' → logprob: -1.5080572366714478
    3. 'ni' → logprob: -6.008057117462158
    4. ' dx' → logprob: -6.258057117462158
    5. 'x' → logprob: -6.758057117462158
    6. ' di' → logprob: -8.008057594299316
    7. '(dx' → logprob: -9.383057594299316
    8. ' ni' → logprob: -10.258057594299316
    9. '(x' → logprob: -10.758057594299316
    10. '(' → logprob: -11.508057594299316

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13955409824848175
    2. ' in' → logprob: -2.264554023742676
    3. 'in' → logprob: -4.139554023742676
    4. ',j' → logprob: -5.264554023742676
    5. ' ,' → logprob: -5.514554023742676
    6. ',d' → logprob: -7.139554023742676
    7. ',y' → logprob: -8.764554023742676
    8. ' ' → logprob: -9.764554023742676
    9. ',in' → logprob: -10.139554023742676
    10. ',v' → logprob: -10.514554023742676

Token 121: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.12693345546722412
    2. ' dy' → logprob: -2.1269335746765137
    3. '<|end|>' → logprob: -12.751933097839355
    4. 'dj' → logprob: -14.126933097839355
    5. '.dy' → logprob: -14.376933097839355
    6. 'd' → logprob: -14.626933097839355
    7. '[' → logprob: -15.126933097839355
    8. 'Dy' → logprob: -15.501933097839355
    9. ' (' → logprob: -16.876934051513672
    10. '<|end|>' → logprob: -17.126934051513672

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03807959705591202
    2. 'in' → logprob: -3.2880795001983643
    3. ' ' → logprob: -10.788079261779785
    4. '	in' → logprob: -11.538079261779785
    5. ',' → logprob: -13.163079261779785
    6. '<|end|>' → logprob: -13.538079261779785
    7. '   ' → logprob: -14.413079261779785
    8. ')' → logprob: -14.538079261779785
    9. 'import' → logprob: -14.788079261779785
    10. 's' → logprob: -14.788079261779785

Token 123: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.47455185651779175
    2. '[' → logprob: -0.9745518565177917
    3. ' [' → logprob: -8.474552154541016
    4. ' [(' → logprob: -8.599552154541016
    5. '[((' → logprob: -9.724552154541016
    6. '[-' → logprob: -11.349552154541016
    7. '[[' → logprob: -12.349552154541016
    8. '((' → logprob: -12.474552154541016
    9. '[
' → logprob: -13.849552154541016
    10. '((-' → logprob: -15.099552154541016

Token 124: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4130299687385559
    2. '0' → logprob: -1.1630299091339111
    3. '1' → logprob: -3.663029909133911
    4. '(-' → logprob: -9.413029670715332
    5. '(' → logprob: -9.663029670715332
    6. ' ' → logprob: -11.538029670715332
    7. ' -' → logprob: -11.788029670715332
    8. ')' → logprob: -14.663029670715332
    9. '[-' → logprob: -15.163029670715332
    10. '
' → logprob: -15.163029670715332

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010081578511744738
    2. ' ,' → logprob: -7.376008033752441
    3. '0' → logprob: -7.876008033752441
    4. ',
' → logprob: -14.001008033752441
    5. '),' → logprob: -15.376008033752441
    6. ')' → logprob: -16.001008987426758
    7. ' ' → logprob: -16.126008987426758
    8. '```' → logprob: -16.251008987426758
    9. '<|end|>' → logprob: -16.501008987426758
    10. '，' → logprob: -16.626008987426758

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003180563682690263
    2. ' ' → logprob: -5.753180503845215
    3. '1' → logprob: -13.003180503845215
    4. '-' → logprob: -15.128180503845215
    5. ' -' → logprob: -15.753180503845215
    6. '   ' → logprob: -16.12818145751953
    7. '  ' → logprob: -17.12818145751953
    8. ')' → logprob: -18.25318145751953
    9. '```' → logprob: -18.31568145751953
    10. ' ' → logprob: -18.44068145751953

Token 127: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.014232615008950233
    2. '),(' → logprob: -4.264232635498047
    3. ' ),' → logprob: -9.764232635498047
    4. '),
' → logprob: -12.264232635498047
    5. ')' → logprob: -12.389232635498047
    6. ',' → logprob: -13.639232635498047
    7. '],' → logprob: -14.639232635498047
    8. ',),' → logprob: -15.264232635498047
    9. '),

' → logprob: -15.639232635498047
    10. '},' → logprob: -15.889232635498047

Token 128: ' (-' (ID: 21382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6983452439308167
    2. '(-' → logprob: -0.6983452439308167
    3. ' (' → logprob: -5.948345184326172
    4. ' (-' → logprob: -6.698345184326172
    5. '0' → logprob: -6.823345184326172
    6. '-' → logprob: -8.323345184326172
    7. ' ' → logprob: -11.823345184326172
    8. ' -' → logprob: -13.573345184326172
    9. '   ' → logprob: -14.448345184326172
    10. '[' → logprob: -15.323345184326172

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '0' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.437504768371582
    4. '
' → logprob: -16.3750057220459
    5. ',' → logprob: -16.4375057220459
    6. '   ' → logprob: -17.0625057220459
    7. '```' → logprob: -17.3750057220459
    8. '

' → logprob: -17.4375057220459
    9. '-' → logprob: -17.4375057220459
    10. ')' → logprob: -18.1250057220459

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. '0' → logprob: -9.750085830688477
    3. ' ,' → logprob: -10.500085830688477
    4. '),' → logprob: -16.375085830688477
    5. '<|end|>' → logprob: -16.375085830688477
    6. ' ' → logprob: -16.500085830688477
    7. '```' → logprob: -17.875085830688477
    8. ')' → logprob: -18.750085830688477
    9. ',
' → logprob: -20.125085830688477
    10. '‌,' → logprob: -20.500085830688477

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. ',' → logprob: -17.62510871887207
    4. '<|end|>' → logprob: -18.25010871887207
    5. ')' → logprob: -18.37510871887207
    6. '
' → logprob: -19.00010871887207
    7. '```' → logprob: -19.56260871887207
    8. '۰' → logprob: -19.68760871887207
    9. '1' → logprob: -20.25010871887207
    10. ' ,' → logprob: -21.00010871887207

Token 132: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03197332099080086
    2. ',' → logprob: -3.656973361968994
    3. '),(' → logprob: -5.531973361968994
    4. ' ),' → logprob: -6.656973361968994
    5. ' ,' → logprob: -7.906973361968994
    6. '],' → logprob: -11.531972885131836
    7. ',),' → logprob: -11.531972885131836
    8. ')' → logprob: -11.906972885131836
    9. '(' → logprob: -12.031972885131836
    10. '>,' → logprob: -12.781972885131836

Token 133: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20493841171264648
    2. ' (' → logprob: -1.7049384117126465
    3. '0' → logprob: -5.8299384117126465
    4. ' ' → logprob: -7.4549384117126465
    5. '        ' → logprob: -14.204938888549805
    6. '       ' → logprob: -14.579938888549805
    7. '```' → logprob: -15.829938888549805
    8. '           ' → logprob: -15.954938888549805
    9. '<|end|>' → logprob: -15.954938888549805
    10. ',' → logprob: -15.954938888549805

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '(' → logprob: -17.625011444091797
    4. ',' → logprob: -17.750011444091797
    5. '```' → logprob: -17.750011444091797
    6. '1' → logprob: -18.562511444091797
    7. '   ' → logprob: -18.625011444091797
    8. ')' → logprob: -19.000011444091797
    9. '
' → logprob: -19.000011444091797
    10. '۰' → logprob: -19.437511444091797

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002557369298301637
    2. ',-' → logprob: -8.750255584716797
    3. '1' → logprob: -9.250255584716797
    4. ' ,' → logprob: -14.000255584716797
    5. '-' → logprob: -15.375255584716797
    6. ',
' → logprob: -16.625255584716797
    7. ' ' → logprob: -18.000255584716797
    8. ',+' → logprob: -19.125255584716797
    9. '```' → logprob: -19.125255584716797
    10. ',\
' → logprob: -19.250255584716797

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020830852736253291
    2. '-' → logprob: -8.500207901000977
    3. ' ' → logprob: -12.375207901000977
    4. ' -' → logprob: -15.500207901000977
    5. ')' → logprob: -16.500207901000977
    6. '+' → logprob: -16.500207901000977
    7. '
' → logprob: -16.750207901000977
    8. '```' → logprob: -17.125207901000977
    9. '<|end|>' → logprob: -17.562707901000977
    10. '   ' → logprob: -17.937707901000977

Token 137: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0033419253304600716
    2. '),(' → logprob: -5.753342151641846
    3. ',' → logprob: -9.628341674804688
    4. ')]' → logprob: -10.003341674804688
    5. ' ),' → logprob: -10.503341674804688
    6. ')' → logprob: -11.503341674804688
    7. '],' → logprob: -12.128341674804688
    8. ',),' → logprob: -12.628341674804688
    9. ')],' → logprob: -13.003341674804688
    10. '),
' → logprob: -13.128341674804688

Token 138: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2834380865097046
    2. ' (' → logprob: -1.4084380865097046
    3. '0' → logprob: -6.283438205718994
    4. ' ' → logprob: -7.783438205718994
    5. '        ' → logprob: -14.908437728881836
    6. ',' → logprob: -14.908437728881836
    7. '<|end|>' → logprob: -15.033437728881836
    8. ')' → logprob: -15.283437728881836
    9. '       ' → logprob: -15.908437728881836
    10. '           ' → logprob: -16.033437728881836

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043686782009899616
    2. '-' → logprob: -7.750436782836914
    3. ' ' → logprob: -12.125436782836914
    4. ' -' → logprob: -15.000436782836914
    5. ',' → logprob: -16.125436782836914
    6. '
' → logprob: -16.625436782836914
    7. ')' → logprob: -16.625436782836914
    8. '```' → logprob: -16.937936782836914
    9. '   ' → logprob: -17.875436782836914
    10. '(' → logprob: -17.937936782836914

Token 140: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.05095764994621277
    2. ',' → logprob: -3.050957679748535
    3. '-' → logprob: -6.050957679748535
    4. '1' → logprob: -12.425957679748535
    5. '0' → logprob: -13.050957679748535
    6. ',-
' → logprob: -13.925957679748535
    7. '```' → logprob: -14.050957679748535
    8. ')]' → logprob: -14.300957679748535
    9. ',-

' → logprob: -14.425957679748535
    10. ',
' → logprob: -14.550957679748535

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.75
    3. '```' → logprob: -16.25
    4. ')' → logprob: -16.625
    5. ')]' → logprob: -17.125
    6. ' ' → logprob: -17.375
    7. '-' → logprob: -19.0
    8. '   ' → logprob: -19.9375
    9. '<|end|>' → logprob: -20.25
    10. '১' → logprob: -20.6875

Token 142: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07121292501688004
    2. ')' → logprob: -2.6962130069732666
    3. ' )' → logprob: -7.4462127685546875
    4. '):' → logprob: -8.321212768554688
    5. '):
' → logprob: -8.946212768554688
    6. '       ' → logprob: -9.071212768554688
    7. '           ' → logprob: -9.696212768554688
    8. '   ' → logprob: -10.446212768554688
    9. ']' → logprob: -10.446212768554688
    10. ']]:
' → logprob: -10.821212768554688

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043553661555051804
    2. ':
' → logprob: -3.668553590774536
    3. ',' → logprob: -4.793553829193115
    4. '           ' → logprob: -5.543553829193115
    5. '<|end|>' → logprob: -5.918553829193115
    6. '       ' → logprob: -7.168553829193115
    7. '               ' → logprob: -7.168553829193115
    8. '):' → logprob: -8.418553352355957
    9. '):
' → logprob: -8.918553352355957
    10. '<|end|>' → logprob: -9.043553352355957

Token 144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2149641215801239
    2. ' ' → logprob: -2.3399641513824463
    3. '<|end|>' → logprob: -2.9649641513824463
    4. '           ' → logprob: -3.7149641513824463
    5. ' 
' → logprob: -4.589963912963867
    6. '                ' → logprob: -6.214963912963867
    7. '                
' → logprob: -6.339963912963867
    8. '            ' → logprob: -6.339963912963867
    9. '       ' → logprob: -6.964963912963867
    10. '            
' → logprob: -7.339963912963867

Token 145: ' ni' (ID: 2565)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.8269200921058655
    2. ' ni' → logprob: -0.9519200921058655
    3. ' x' → logprob: -1.8269200325012207
    4. 'x' → logprob: -4.701920032501221
    5. 'ni' (adapté à ' ni') → logprob: -5.951920032501221
    6. 'nx' → logprob: -6.076920032501221
    7. ' new' → logprob: -6.701920032501221
    8. ' nxt' → logprob: -8.951920509338379
    9. ' ny' → logprob: -9.201920509338379
    10. ' next' → logprob: -9.576920509338379

Token 146: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3928815722465515
    2. ' =' → logprob: -1.1428816318511963
    3. ',' → logprob: -5.142881393432617
    4. '=i' → logprob: -9.142881393432617
    5. '=j' → logprob: -10.767881393432617
    6. '=n' → logprob: -11.517881393432617
    7. ' ,' → logprob: -11.767881393432617
    8. ',j' → logprob: -12.892881393432617
    9. ' =
' → logprob: -14.392881393432617
    10. '=int' → logprob: -14.892881393432617

Token 147: ' nj' (ID: 8979)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05135589838027954
    2. ' i' → logprob: -3.1763558387756348
    3. 'j' → logprob: -5.051355838775635
    4. ' =' → logprob: -6.801355838775635
    5. ' j' → logprob: -8.301356315612793
    6. '<|end|>' → logprob: -8.301356315612793
    7. '=' → logprob: -8.551356315612793
    8. ' ' → logprob: -9.301356315612793
    9. '=i' → logprob: -11.426356315612793
    10. '```' → logprob: -11.801356315612793

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196802109479904
    2. ' =' → logprob: -2.8119680881500244
    3. '=i' → logprob: -14.936967849731445
    4. ')' → logprob: -16.936967849731445
    5. '=
' → logprob: -17.686967849731445
    6. '＝' → logprob: -18.061967849731445
    7. ' ' → logprob: -18.186967849731445
    8. '   ' → logprob: -18.311967849731445
    9. ' =
' → logprob: -18.561967849731445
    10. ',' → logprob: -18.936967849731445

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004079112783074379
    2. ' i' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.62907886505127
    4. '	i' → logprob: -15.37907886505127
    5. '(i' → logprob: -18.754079818725586
    6. '```' → logprob: -18.754079818725586
    7. ' ' → logprob: -19.004079818725586
    8. '<|end|>' → logprob: -19.379079818725586
    9. '    ' → logprob: -19.504079818725586
    10. '  ' → logprob: -19.629079818725586

Token 150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269354522228241
    2. ' +' → logprob: -2.1269354820251465
    3. '+d' → logprob: -12.001935005187988
    4. '+j' → logprob: -14.376935005187988
    5. '+x' → logprob: -15.251935005187988
    6. '+i' → logprob: -16.001935958862305
    7. '＋' → logprob: -16.126935958862305
    8. '+
' → logprob: -17.001935958862305
    9. '+k' → logprob: -17.126935958862305
    10. ' ' → logprob: -17.501935958862305

Token 151: 'dy' (ID: 7593)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.1279553291387856e-05
    2. ' dx' → logprob: -11.750011444091797
    3. '1' → logprob: -13.750011444091797
    4. '0' → logprob: -13.875011444091797
    5. 'dy' → logprob: -14.375011444091797
    6. '```' → logprob: -15.125011444091797
    7. '(dx' → logprob: -15.375011444091797
    8. '
' → logprob: -16.125011444091797
    9. '   ' → logprob: -16.625011444091797
    10. '.dx' → logprob: -17.375011444091797

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3464544432936236e-05
    2. ' ,' → logprob: -10.250043869018555
    3. ',j' → logprob: -12.125043869018555
    4. ',n' → logprob: -13.875043869018555
    5. ',i' → logprob: -14.125043869018555
    6. ',d' → logprob: -14.375043869018555
    7. ',m' → logprob: -15.375043869018555
    8. ',
' → logprob: -16.500043869018555
    9. ',y' → logprob: -17.875043869018555
    10. ',x' → logprob: -18.000043869018555

Token 153: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01883968710899353
    2. ' j' → logprob: -4.0188398361206055
    3. 'jx' → logprob: -7.8938398361206055
    4. 'i' → logprob: -8.143839836120605
    5. 'dx' → logprob: -11.768839836120605
    6. '   ' → logprob: -11.768839836120605
    7. ' i' → logprob: -12.143839836120605
    8. '  ' → logprob: -13.268839836120605
    9. ' ' → logprob: -13.893839836120605
    10. 'x' → logprob: -14.143839836120605

Token 154: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006168743595480919
    2. '+x' → logprob: -5.131168842315674
    3. '+j' → logprob: -9.006168365478516
    4. ' +' → logprob: -9.256168365478516
    5. '+d' → logprob: -10.881168365478516
    6. 'dx' → logprob: -14.006168365478516
    7. '+xml' → logprob: -14.506168365478516
    8. '+y' → logprob: -14.631168365478516
    9. '+n' → logprob: -14.756168365478516
    10. '+i' → logprob: -15.006168365478516

Token 155: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0005760280764661729
    2. ' dx' → logprob: -7.750576019287109
    3. '1' → logprob: -9.00057601928711
    4. 'x' → logprob: -11.12557601928711
    5. '(dx' → logprob: -12.37557601928711
    6. '.dx' → logprob: -13.87557601928711
    7. '_dx' → logprob: -14.00057601928711
    8. 'xi' → logprob: -15.00057601928711
    9. '0' → logprob: -15.75057601928711
    10. '[' → logprob: -16.00057601928711

Token 156: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23558637499809265
    2. '<|end|>' → logprob: -1.735586404800415
    3. '               ' → logprob: -4.735586166381836
    4. ' if' → logprob: -4.735586166381836
    5. '<|end|>' → logprob: -5.360586166381836
    6. '
' → logprob: -5.985586166381836
    7. '            
' → logprob: -6.735586166381836
    8. '       ' → logprob: -6.860586166381836
    9. '	       ' → logprob: -6.860586166381836
    10. 'if' → logprob: -6.860586166381836

Token 157: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010563143528997898
    2. '<|end|>' → logprob: -5.010563373565674
    3. '               ' → logprob: -6.010563373565674
    4. ' if' → logprob: -7.385563373565674
    5. '<|end|>' → logprob: -8.635562896728516
    6. '       ' → logprob: -9.010562896728516
    7. 'if' → logprob: -9.635562896728516
    8. '            
' → logprob: -9.635562896728516
    9. '          ' → logprob: -10.135562896728516
    10. ')' → logprob: -10.260562896728516

Token 158: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32845792174339294
    2. ' if' → logprob: -1.3284579515457153
    3. '               ' → logprob: -4.703457832336426
    4. 'if' (adapté à ' if') → logprob: -5.328457832336426
    5. '            ' → logprob: -8.078457832336426
    6. ' ' → logprob: -8.328457832336426
    7. ' 
' → logprob: -8.578457832336426
    8. ' ' → logprob: -9.203457832336426
    9. '            
' → logprob: -9.453457832336426
    10. '                ' → logprob: -9.828457832336426

Token 159: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036012595519423485
    2. ' ' → logprob: -5.62860107421875
    3. '(' → logprob: -14.50360107421875
    4. 'ni' → logprob: -14.87860107421875
    5. '   ' → logprob: -16.12860107421875
    6. ' ' → logprob: -16.25360107421875
    7. ' (' → logprob: -16.87860107421875
    8. '  ' → logprob: -17.94110107421875
    9. '                   ' → logprob: -18.31610107421875
    10. '
' → logprob: -18.37860107421875

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '(' → logprob: -14.750009536743164
    4. 'ni' → logprob: -15.125009536743164
    5. '   ' → logprob: -17.875009536743164
    6. '۰' → logprob: -18.125009536743164
    7. '```' → logprob: -18.250009536743164
    8. '
' → logprob: -18.250009536743164
    9. '-' → logprob: -18.437509536743164
    10. 'not' → logprob: -19.000009536743164

Token 161: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6938702464103699
    2. '<=' → logprob: -0.6938702464103699
    3. '<' → logprob: -7.5688700675964355
    4. ' <' → logprob: -8.568870544433594
    5. '[' → logprob: -11.943870544433594
    6. '<n' → logprob: -12.818870544433594
    7. '0' → logprob: -13.818870544433594
    8. ' ' → logprob: -14.068870544433594
    9. '[i' → logprob: -14.318870544433594
    10. '```' → logprob: -14.443870544433594

Token 162: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -5.848420551046729e-05
    2. ' ni' → logprob: -9.7500581741333
    3. 'n' → logprob: -16.125059127807617
    4. 'nj' → logprob: -17.375059127807617
    5. 'ny' → logprob: -17.500059127807617
    6. 'nii' → logprob: -17.875059127807617
    7. '   ' → logprob: -18.875059127807617
    8. 'mi' → logprob: -19.125059127807617
    9. 'nu' → logprob: -19.250059127807617
    10. ' ' → logprob: -19.375059127807617

Token 163: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07261647284030914
    2. '<n' → logprob: -3.3226165771484375
    3. ' <' → logprob: -3.4476165771484375
    4. '<m' → logprob: -6.4476165771484375
    5. 'and' → logprob: -8.822616577148438
    6. '<len' → logprob: -8.822616577148438
    7. ' and' → logprob: -8.822616577148438
    8. '<N' → logprob: -10.197616577148438
    9. '[' → logprob: -10.322616577148438
    10. '<size' → logprob: -10.447616577148438

Token 164: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00023071514442563057
    2. ' n' → logprob: -8.37523078918457
    3. '	n' → logprob: -16.75023078918457
    4. '   ' → logprob: -17.37523078918457
    5. '
' → logprob: -19.12523078918457
    6. ' ' → logprob: -19.62523078918457
    7. '       ' → logprob: -19.87523078918457
    8. ')n' → logprob: -19.87523078918457
    9. '```' → logprob: -20.62523078918457
    10. '[n' → logprob: -20.75023078918457

Token 165: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815076172351837
    2. 'and' → logprob: -4.018150806427002
    3. '           ' → logprob: -15.018150329589844
    4. ' ' → logprob: -15.393150329589844
    5. '               ' → logprob: -15.393150329589844
    6. '<|end|>' → logprob: -16.018150329589844
    7. '       ' → logprob: -17.018150329589844
    8. '        ' → logprob: -17.268150329589844
    9. '            ' → logprob: -17.768150329589844
    10. '	and' → logprob: -17.768150329589844

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019293478690087795
    2. ' ' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.25192928314209
    4. 'm' → logprob: -15.75192928314209
    5. 'mj' → logprob: -15.75192928314209
    6. 'nj' → logprob: -16.501930236816406
    7. ' nj' → logprob: -17.001930236816406
    8. '  ' → logprob: -17.501930236816406
    9. '    ' → logprob: -17.501930236816406
    10. '           ' → logprob: -18.376930236816406

Token 167: '0' (ID: 15)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009126556105911732
    2. ' m' → logprob: -7.000912666320801
    3. '0' → logprob: -14.3759126663208
    4. ' ' → logprob: -15.7509126663208
    5. '   ' → logprob: -16.000911712646484
    6. 'n' → logprob: -16.125911712646484
    7. 'mj' → logprob: -16.625911712646484
    8. '```' → logprob: -17.250911712646484
    9. 'j' → logprob: -17.375911712646484
    10. '	m' → logprob: -17.875911712646484

Token 168: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.41411471366882324
    2. '<' → logprob: -1.1641147136688232
    3. '<n' → logprob: -4.539114952087402
    4. '       ' → logprob: -4.914114952087402
    5. 'nj' → logprob: -5.914114952087402
    6. ' nj' → logprob: -6.039114952087402
    7. '        ' → logprob: -7.289114952087402
    8. 'and' → logprob: -7.414114952087402
    9. ' and' → logprob: -7.664114952087402
    10. ' ' → logprob: -7.789114952087402

Token 169: ' nj' (ID: 8979)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.659005157416686e-05
    2. ' m' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.750066757202148
    4. ' ' → logprob: -16.50006675720215
    5. 'j' → logprob: -16.62506675720215
    6. 'n' → logprob: -17.87506675720215
    7. '	m' → logprob: -18.37506675720215
    8. '  ' → logprob: -18.37506675720215
    9. '    ' → logprob: -18.50006675720215
    10. '
' → logprob: -18.50006675720215

Token 170: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06435912102460861
    2. '<m' → logprob: -2.814359188079834
    3. '<' → logprob: -6.064359188079834
    4. 'm' → logprob: -10.439358711242676
    5. '<n' → logprob: -11.189358711242676
    6. '[m' → logprob: -11.314358711242676
    7. ' ' → logprob: -12.564358711242676
    8. '[' → logprob: -13.189358711242676
    9. '<size' → logprob: -14.064358711242676
    10. '<len' → logprob: -14.064358711242676

Token 171: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010328111238777637
    2. ' m' → logprob: -6.876032829284668
    3. ' ' → logprob: -17.62603187561035
    4. '   ' → logprob: -17.87603187561035
    5. '	m' → logprob: -18.75103187561035
    6. 'м' → logprob: -19.50103187561035
    7. '[m' → logprob: -20.12603187561035
    8. '0' → logprob: -20.25103187561035
    9. '  ' → logprob: -20.50103187561035
    10. '           ' → logprob: -20.50103187561035

Token 172: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0020094106439501047
    2. 'and' → logprob: -6.252009391784668
    3. '               ' → logprob: -9.627009391784668
    4. '           ' → logprob: -12.252009391784668
    5. '<|end|>' → logprob: -12.877009391784668
    6. '                   ' → logprob: -13.252009391784668
    7. '              ' → logprob: -13.502009391784668
    8. '                ' → logprob: -13.752009391784668
    9. '            ' → logprob: -14.377009391784668
    10. ':
' → logprob: -14.502009391784668

Token 173: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1269458532333374
    2. ' grid' → logprob: -2.126945972442627
    3. '(grid' → logprob: -11.876945495605469
    4. '	grid' → logprob: -12.251945495605469
    5. '           ' → logprob: -13.751945495605469
    6. ' ' → logprob: -14.126945495605469
    7. '   ' → logprob: -14.126945495605469
    8. '               ' → logprob: -14.251945495605469
    9. 'abs' → logprob: -14.626945495605469
    10. '                   ' → logprob: -14.876945495605469

Token 174: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16023682057857513
    2. '[' → logprob: -1.9102368354797363
    3. 'i' → logprob: -12.160236358642578
    4. '[n' → logprob: -12.785236358642578
    5. '][' → logprob: -13.535236358642578
    6. '[ii' → logprob: -14.285236358642578
    7. '[I' → logprob: -14.535236358642578
    8. '```' → logprob: -15.285236358642578
    9. ')[' → logprob: -15.660236358642578
    10. '[ip' → logprob: -15.785236358642578

Token 175: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.03148609772324562
    2. 'i' → logprob: -3.9064860343933105
    3. '[' → logprob: -4.6564860343933105
    4. '[i' → logprob: -6.7814860343933105
    5. ' ni' → logprob: -9.406486511230469
    6. ']' → logprob: -10.406486511230469
    7. '][' → logprob: -10.656486511230469
    8. '   ' → logprob: -10.906486511230469
    9. '```' → logprob: -11.281486511230469
    10. 'nj' → logprob: -11.531486511230469

Token 176: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6427933573722839
    2. '][' → logprob: -0.7677933573722839
    3. '[i' → logprob: -4.64279317855835
    4. '[n' → logprob: -8.517793655395508
    5. ')[' → logprob: -9.017793655395508
    6. '[j' → logprob: -9.142793655395508
    7. ']' → logprob: -10.517793655395508
    8. '   ' → logprob: -11.142793655395508
    9. 'i' → logprob: -11.517793655395508
    10. ' ][' → logprob: -11.642793655395508

Token 177: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -8.077528764260933e-05
    2. 'j' → logprob: -10.000081062316895
    3. ' nj' → logprob: -10.625081062316895
    4. '[n' → logprob: -13.125081062316895
    5. '   ' → logprob: -13.625081062316895
    6. '0' → logprob: -14.000081062316895
    7. 'n' → logprob: -14.000081062316895
    8. ']' → logprob: -14.125081062316895
    9. '[j' → logprob: -14.125081062316895
    10. '```' → logprob: -14.125081062316895

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06314313411712646
    2. ']<' → logprob: -3.813143253326416
    3. '<' → logprob: -4.063143253326416
    4. '[' → logprob: -4.313143253326416
    5. '>' → logprob: -5.313143253326416
    6. ' <' → logprob: -5.938143253326416
    7. ']>' → logprob: -8.063142776489258
    8. ')' → logprob: -8.313142776489258
    9. ' ]' → logprob: -8.813142776489258
    10. '[j' → logprob: -9.813142776489258

Token 179: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09536857903003693
    2. ' <' → logprob: -2.4703686237335205
    3. '>' → logprob: -5.470368385314941
    4. '[' → logprob: -6.345368385314941
    5. ' >' → logprob: -8.345368385314941
    6. '<int' → logprob: -9.470368385314941
    7. '<Grid' → logprob: -10.845368385314941
    8. ']' → logprob: -10.970368385314941
    9. '```' → logprob: -11.095368385314941
    10. ']<' → logprob: -11.220368385314941

Token 180: ' ' (ID: 220)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.27099974633893e-05
    2. ' grid' → logprob: -11.375012397766113
    3. '1' → logprob: -14.250012397766113
    4. '   ' → logprob: -15.375012397766113
    5. ' ' → logprob: -16.00001335144043
    6. '	grid' → logprob: -16.37501335144043
    7. '
' → logprob: -17.62501335144043
    8. '  ' → logprob: -17.75001335144043
    9. '(grid' → logprob: -17.87501335144043
    10. '```' → logprob: -18.12501335144043

Token 181: '1' (ID: 16)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.9146995327901095e-05
    2. ' grid' → logprob: -11.000019073486328
    3. '1' → logprob: -13.375019073486328
    4. '	grid' → logprob: -15.375019073486328
    5. '   ' → logprob: -15.750019073486328
    6. ' ' → logprob: -15.875019073486328
    7. '(grid' → logprob: -16.125019073486328
    8. '0' → logprob: -17.125019073486328
    9. '
' → logprob: -17.750019073486328
    10. '.grid' → logprob: -17.875019073486328

Token 182: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5391549468040466
    2. '+' → logprob: -1.2891550064086914
    3. ' +' → logprob: -2.7891550064086914
    4. 'and' → logprob: -2.9141550064086914
    5. ':' → logprob: -4.039155006408691
    6. ':
' → logprob: -5.289155006408691
    7. '-' → logprob: -6.289155006408691
    8. ' -' → logprob: -7.914155006408691
    9. '           ' → logprob: -8.289155006408691
    10. '               ' → logprob: -9.289155006408691

Token 183: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19131919741630554
    2. '               ' → logprob: -1.941319227218628
    3. '                       ' → logprob: -4.316318988800049
    4. ':
' → logprob: -5.316318988800049
    5. ':' → logprob: -5.566318988800049
    6. '                               ' → logprob: -6.441318988800049
    7. ' and' → logprob: -6.566318988800049
    8. '<|end|>' → logprob: -6.941318988800049
    9. '                           ' → logprob: -7.191318988800049
    10. '           ' → logprob: -7.566318988800049

Token 184: ' max' (ID: 2999)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.30206412076950073
    2. ' length' → logprob: -2.4270641803741455
    3. '                   ' → logprob: -3.1770641803741455
    4. 'dp' → logprob: -3.3020641803741455
    5. 'next' → logprob: -3.6770641803741455
    6. 'max' (adapté à ' max') → logprob: -4.677063941955566
    7. 'temp' → logprob: -4.677063941955566
    8. 'len' → logprob: -4.677063941955566
    9. 'possible' → logprob: -4.927063941955566
    10. 'current' → logprob: -5.052063941955566

Token 185: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.1756367712223437e-05
    2. 'len' → logprob: -12.250011444091797
    3. '_LEN' → logprob: -13.625011444091797
    4. 'max' → logprob: -13.750011444091797
    5. '=' → logprob: -13.875011444091797
    6. 'Len' → logprob: -14.000011444091797
    7. '=len' → logprob: -14.125011444091797
    8. '(len' → logprob: -14.500011444091797
    9. '=max' → logprob: -14.625011444091797
    10. '(max' → logprob: -14.750011444091797

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03813948854804039
    2. ' =' → logprob: -3.288139581680298
    3. '=max' → logprob: -9.288139343261719
    4. '+=' → logprob: -12.288139343261719
    5. 'max' → logprob: -14.163139343261719
    6. '   ' → logprob: -16.53813934326172
    7. ' +=' → logprob: -16.78813934326172
    8. '+' → logprob: -17.41313934326172
    9. ' ' → logprob: -17.53813934326172
    10. '>' → logprob: -17.78813934326172

Token 187: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.07889000326395035
    2. 'max' → logprob: -2.578890085220337
    3. '(max' → logprob: -15.953889846801758
    4. ' ' → logprob: -16.453889846801758
    5. '	max' → logprob: -18.203889846801758
    6. '[max' → logprob: -18.203889846801758
    7. '=max' → logprob: -19.203889846801758
    8. ' 
' → logprob: -19.453889846801758
    9. '_max' → logprob: -19.578889846801758
    10. '
' → logprob: -19.953889846801758

Token 188: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.005935082212090492
    2. '(' → logprob: -5.130935192108154
    3. '(
' → logprob: -12.755934715270996
    4. ' (' → logprob: -13.130934715270996
    5. 'max' → logprob: -13.880934715270996
    6. ' max' → logprob: -16.130935668945312
    7. '(len' → logprob: -16.255935668945312
    8. ',max' → logprob: -16.505935668945312
    9. '(dp' → logprob: -16.630935668945312
    10. '=max' → logprob: -16.755935668945312

Token 189: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.2948405128554441e-05
    2. 'len' → logprob: -11.37501335144043
    3. '_LEN' → logprob: -14.50001335144043
    4. 'Len' → logprob: -14.62501335144043
    5. 'max' → logprob: -16.12501335144043
    6. '<len' → logprob: -16.25001335144043
    7. '(len' → logprob: -16.37501335144043
    8. ')_' → logprob: -17.25001335144043
    9. '[len' → logprob: -17.62501335144043
    10. '```' → logprob: -17.75001335144043

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027882419526576996
    2. ',max' → logprob: -6.127788066864014
    3. ' ,' → logprob: -7.627788066864014
    4. '+' → logprob: -9.252788543701172
    5. ' +' → logprob: -11.752788543701172
    6. '(max' → logprob: -12.377788543701172
    7. 'max' → logprob: -12.627788543701172
    8. '   ' → logprob: -13.002788543701172
    9. ',
' → logprob: -13.877788543701172
    10. ' max' → logprob: -14.502788543701172

Token 191: ' ' (ID: 220)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.2107754498720169
    2. '1' → logprob: -1.9607754945755005
    3. ' dfs' → logprob: -3.085775375366211
    4. ' ' → logprob: -5.710775375366211
    5. 'dp' → logprob: -8.460775375366211
    6. 'df' → logprob: -10.335775375366211
    7. '           ' → logprob: -11.960775375366211
    8. '   ' → logprob: -11.960775375366211
    9. ' dp' → logprob: -12.085775375366211
    10. '    ' → logprob: -12.585775375366211

Token 192: '1' (ID: 16)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.28126320242881775
    2. '1' → logprob: -1.4062632322311401
    3. ' dfs' → logprob: -9.65626335144043
    4. 'dp' → logprob: -10.78126335144043
    5. ' ' → logprob: -10.78126335144043
    6. 'df' → logprob: -12.53126335144043
    7. 'max' → logprob: -13.28126335144043
    8. 'DFS' → logprob: -14.03126335144043
    9. 'd' → logprob: -15.15626335144043
    10. '
' → logprob: -15.40626335144043

Token 193: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141616463661194
    2. ' +' → logprob: -1.7014161348342896
    3. '+
' → logprob: -13.701416015625
    4. ' ' → logprob: -14.951416015625
    5. ')+' → logprob: -15.451416015625
    6. ' plus' → logprob: -15.576416015625
    7. ' ' → logprob: -15.701416015625
    8. ' +
' → logprob: -16.076416015625
    9. '   ' → logprob: -16.201416015625
    10. '＋' → logprob: -16.326416015625

Token 194: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0002614550176076591
    2. ' dfs' → logprob: -8.250261306762695
    3. 'dp' → logprob: -16.000261306762695
    4. 'df' → logprob: -16.500261306762695
    5. 'DFS' → logprob: -19.250261306762695
    6. 'depth' → logprob: -21.875261306762695
    7. 'ds' → logprob: -21.875261306762695
    8. '
' → logprob: -21.875261306762695
    9. ' ' → logprob: -22.125261306762695
    10. '   ' → logprob: -22.250261306762695

Token 195: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. 'ni' → logprob: -15.125000953674316
    3. ' (' → logprob: -15.625000953674316
    4. ')' → logprob: -16.5
    5. '((' → logprob: -17.375
    6. '```' → logprob: -17.5
    7. ')(' → logprob: -17.75
    8. '(n' → logprob: -18.0
    9. '(
' → logprob: -18.0
    10. '   ' → logprob: -19.25

Token 196: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -8.53050296427682e-05
    2. '(' → logprob: -9.50008487701416
    3. ' ni' → logprob: -11.50008487701416
    4. ')' → logprob: -15.87508487701416
    5. '   ' → logprob: -16.250085830688477
    6. '```' → logprob: -17.000085830688477
    7. '
' → logprob: -18.250085830688477
    8. '                   ' → logprob: -18.375085830688477
    9. '               ' → logprob: -18.500085830688477
    10. '           ' → logprob: -18.500085830688477

Token 197: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012987985974177718
    2. 'ni' → logprob: -10.000129699707031
    3. ')(' → logprob: -10.750129699707031
    4. ' (' → logprob: -10.875129699707031
    5. '(n' → logprob: -10.875129699707031
    6. '(i' → logprob: -11.500129699707031
    7. ')' → logprob: -12.250129699707031
    8. '(
' → logprob: -12.500129699707031
    9. '
' → logprob: -13.125129699707031
    10. ' ni' → logprob: -14.250129699707031

Token 198: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -5.371605948312208e-05
    2. ' nj' → logprob: -9.875053405761719
    3. 'j' → logprob: -14.500053405761719
    4. '   ' → logprob: -14.750053405761719
    5. 'dj' → logprob: -15.125053405761719
    6. '
' → logprob: -15.250053405761719
    7. '    ' → logprob: -15.750053405761719
    8. '```' → logprob: -16.00005340576172
    9. ' ' → logprob: -16.12505340576172
    10. 'ni' → logprob: -16.12505340576172

Token 199: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031318482011556625
    2. ')
' → logprob: -3.531318426132202
    3. '))' → logprob: -6.781318664550781
    4. '))
' → logprob: -8.031318664550781
    5. '           ' → logprob: -9.406318664550781
    6. '               ' → logprob: -11.531318664550781
    7. ')))' → logprob: -12.281318664550781
    8. '                   ' → logprob: -12.781318664550781
    9. ')
' → logprob: -12.906318664550781
    10. ')`
' → logprob: -13.156318664550781

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01095867995172739
    2. ' dp' → logprob: -4.760958671569824
    3. 'dp' → logprob: -6.135958671569824
    4. '```' → logprob: -9.260958671569824
    5. ')' → logprob: -11.135958671569824
    6. '               ' → logprob: -11.385958671569824
    7. '       ' → logprob: -11.510958671569824
    8. '
' → logprob: -11.635958671569824
    9. '	dp' → logprob: -11.885958671569824
    10. '(dp' → logprob: -12.010958671569824

Token 201: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7745242118835449
    2. '           ' → logprob: -0.8995242118835449
    3. 'dp' (adapté à ' dp') → logprob: -2.024524211883545
    4. '	dp' → logprob: -9.149524688720703
    5. '(dp' → logprob: -10.024524688720703
    6. '       ' → logprob: -10.524524688720703
    7. ' return' → logprob: -10.649524688720703
    8. '   ' → logprob: -11.024524688720703
    9. '
' → logprob: -11.149524688720703
    10. '```' → logprob: -12.149524688720703

Token 202: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.500001907348633
    3. '[I' → logprob: -15.250001907348633
    4. '][' → logprob: -15.750001907348633
    5. '```' → logprob: -15.750001907348633
    6. '\[' → logprob: -18.500001907348633
    7. ')[' → logprob: -18.625001907348633
    8. '[ii' → logprob: -18.875001907348633
    9. ' [' → logprob: -19.125001907348633
    10. ']' → logprob: -19.125001907348633

Token 203: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -7.76759916334413e-05
    2. '[i' → logprob: -9.625077247619629
    3. ']' → logprob: -12.000077247619629
    4. '[' → logprob: -12.500077247619629
    5. '[j' → logprob: -14.500077247619629
    6. ' ][' → logprob: -14.750077247619629
    7. 'i' → logprob: -15.250077247619629
    8. ']][' → logprob: -15.625077247619629
    9. '"][' → logprob: -15.750077247619629
    10. ')[' → logprob: -16.500078201293945

Token 204: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5048530030981055e-06
    2. ' j' → logprob: -14.750001907348633
    3. ']' → logprob: -15.250001907348633
    4. '```' → logprob: -15.250001907348633
    5. ' ' → logprob: -15.750001907348633
    6. '[j' → logprob: -15.875001907348633
    7. '][' → logprob: -16.125001907348633
    8. '
' → logprob: -16.375001907348633
    9. '   ' → logprob: -16.625001907348633
    10. '	j' → logprob: -17.375001907348633

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.4034345187828876e-05
    2. ']=' → logprob: -11.12502384185791
    3. '=' → logprob: -11.87502384185791
    4. ' ]' → logprob: -13.62502384185791
    5. ')' → logprob: -13.75002384185791
    6. '[' → logprob: -17.000024795532227
    7. ' =' → logprob: -17.875024795532227
    8. '   ' → logprob: -18.875024795532227
    9. ']
' → logprob: -19.125024795532227
    10. '])' → logprob: -19.625024795532227

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=}' → logprob: -16.88604736328125
    4. '＝' → logprob: -17.63604736328125
    5. '.=' → logprob: -17.88604736328125
    6. '=int' → logprob: -18.88604736328125
    7. '=
' → logprob: -19.38604736328125
    8. '=max' → logprob: -19.76104736328125
    9. '=end' → logprob: -19.88604736328125
    10. '=

' → logprob: -20.01104736328125

Token 207: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005530327325686812
    2. ' max' → logprob: -7.500553131103516
    3. '(max' → logprob: -20.000553131103516
    4. '	max' → logprob: -21.875553131103516
    5. '[max' → logprob: -22.500553131103516
    6. '
' → logprob: -23.875553131103516
    7. '_max' → logprob: -24.250553131103516
    8. '           ' → logprob: -24.500553131103516
    9. '=max' → logprob: -24.625553131103516
    10. 'ma' → logprob: -25.000553131103516

Token 208: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.2729995988775045e-06
    2. 'len' → logprob: -12.625006675720215
    3. '(max' → logprob: -13.000006675720215
    4. '(len' → logprob: -15.250006675720215
    5. '_l' → logprob: -15.625006675720215
    6. '_' → logprob: -16.0000057220459
    7. '_LEN' → logprob: -16.2500057220459
    8. '(_' → logprob: -16.7500057220459
    9. 'Len' → logprob: -17.2500057220459
    10. 'max' → logprob: -17.2500057220459

Token 209: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014036978245712817
    2. 'return' → logprob: -10.000140190124512
    3. '		' → logprob: -10.125140190124512
    4. '       ' → logprob: -11.000140190124512
    5. ' return' → logprob: -11.375140190124512
    6. '
' → logprob: -11.625140190124512
    7. '   ' → logprob: -11.750140190124512
    8. '	return' → logprob: -12.625140190124512
    9. '<|end|>' → logprob: -12.875140190124512
    10. '	       ' → logprob: -14.000140190124512

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010080150241265073
    2. 'return' → logprob: -10.000101089477539
    3. '		' → logprob: -10.875101089477539
    4. ' return' → logprob: -11.375101089477539
    5. '       ' → logprob: -12.250101089477539
    6. '   ' → logprob: -12.250101089477539
    7. '<|end|>' → logprob: -12.375101089477539
    8. '	return' → logprob: -12.500101089477539
    9. '	       ' → logprob: -12.625101089477539
    10. '```' → logprob: -12.875101089477539

Token 211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31775280833244324
    2. '           ' → logprob: -1.3177528381347656
    3. ' return' → logprob: -5.442752838134766
    4. '       ' → logprob: -9.192752838134766
    5. '   ' → logprob: -10.192752838134766
    6. '	return' → logprob: -12.192752838134766
    7. '          ' → logprob: -13.192752838134766
    8. '```' → logprob: -13.192752838134766
    9. '               ' → logprob: -13.442752838134766
    10. ':return' → logprob: -13.567752838134766

Token 212: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6103599667549133
    2. 'max' → logprob: -0.8603599667549133
    3. ' max' → logprob: -3.8603599071502686
    4. ' dp' → logprob: -4.360360145568848
    5. '           ' → logprob: -15.735360145568848
    6. '(dp' → logprob: -16.11035919189453
    7. '   ' → logprob: -16.23535919189453
    8. '	dp' → logprob: -16.23535919189453
    9. '```' → logprob: -16.73535919189453
    10. '_dp' → logprob: -16.73535919189453

Token 213: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.3425219549390022e-05
    2. 'len' → logprob: -11.25001335144043
    3. '_' → logprob: -15.87501335144043
    4. '_LEN' → logprob: -16.50001335144043
    5. 'Len' → logprob: -16.87501335144043
    6. 'max' → logprob: -17.50001335144043
    7. '(len' → logprob: -18.00001335144043
    8. ' _' → logprob: -18.50001335144043
    9. '_l' → logprob: -18.62501335144043
    10. '[len' → logprob: -18.62501335144043

Token 214: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6674063205718994
    2. '       ' → logprob: -0.7924063205718994
    3. 'for' → logprob: -4.16740608215332
    4. '<|end|>' → logprob: -4.91740608215332
    5. ' for' → logprob: -5.66740608215332
    6. '    
' → logprob: -5.91740608215332
    7. '
' → logprob: -5.91740608215332
    8. '        
' → logprob: -6.29240608215332
    9. '```' → logprob: -8.54240608215332
    10. '  
' → logprob: -8.79240608215332

Token 215: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3897421360015869
    2. 'for' → logprob: -1.264742136001587
    3. 'result' → logprob: -3.889742136001587
    4. '    
' → logprob: -5.264741897583008
    5. '       ' → logprob: -5.389741897583008
    6. 'max' → logprob: -5.514741897583008
    7. ' for' → logprob: -5.889741897583008
    8. 'results' → logprob: -6.639741897583008
    9. '        
' → logprob: -7.514741897583008
    10. 'length' → logprob: -8.139741897583008

Token 216: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8511888980865479
    2. 'max' → logprob: -1.2261888980865479
    3. 'ans' (adapté à ' ans') → logprob: -2.226188898086548
    4. 'answer' → logprob: -2.351188898086548
    5. 'res' → logprob: -2.601188898086548
    6. 'print' → logprob: -6.476188659667969
    7. 'length' → logprob: -8.726188659667969
    8. 'results' → logprob: -8.976188659667969
    9. '   ' → logprob: -9.101188659667969
    10. 'long' → logprob: -9.226188659667969

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -16.143150329589844
    4. '   ' → logprob: -16.518150329589844
    5. ' =
' → logprob: -16.768150329589844
    6. ',' → logprob: -18.768150329589844
    7. '    ' → logprob: -18.768150329589844
    8. ' =)' → logprob: -19.018150329589844
    9. '=max' → logprob: -19.018150329589844
    10. '＝' → logprob: -19.143150329589844

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002214250387623906
    2. ' ' → logprob: -6.127214431762695
    3. 'max' → logprob: -10.877214431762695
    4. '1' → logprob: -11.752214431762695
    5. ' max' → logprob: -13.752214431762695
    6. '   ' → logprob: -14.127214431762695
    7. '  ' → logprob: -15.939714431762695
    8. '-' → logprob: -15.939714431762695
    9. ' -' → logprob: -16.564714431762695
    10. '```' → logprob: -16.752214431762695

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017803447553887963
    2. 'max' → logprob: -9.125178337097168
    3. '1' → logprob: -9.875178337097168
    4. ' ' → logprob: -11.250178337097168
    5. '-' → logprob: -12.750178337097168
    6. '[' → logprob: -15.562678337097168
    7. ' max' → logprob: -15.937678337097168
    8. 'float' → logprob: -16.06267738342285
    9. '   ' → logprob: -16.12517738342285
    10. '2' → logprob: -16.18767738342285

Token 220: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1769772320985794
    2. '       ' → logprob: -1.926977276802063
    3. ' for' → logprob: -5.301977157592773
    4. '<|end|>' → logprob: -5.551977157592773
    5. '        
' → logprob: -6.176977157592773
    6. '  
' → logprob: -6.301977157592773
    7. 'for' → logprob: -6.551977157592773
    8. ' 
' → logprob: -7.551977157592773
    9. '		
' → logprob: -7.801977157592773
    10. '	for' → logprob: -7.926977157592773

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05960146337747574
    2. '
' → logprob: -3.4346015453338623
    3. ' for' → logprob: -4.184601306915283
    4. '<|end|>' → logprob: -5.184601306915283
    5. '   ' → logprob: -6.684601306915283
    6. 'for' → logprob: -7.059601306915283
    7. '	' → logprob: -7.309601306915283
    8. '	for' → logprob: -7.309601306915283
    9. '        
' → logprob: -7.684601306915283
    10. '  
' → logprob: -8.434601783752441

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02333247661590576
    2. ' for' → logprob: -3.7733325958251953
    3. '       ' → logprob: -9.523332595825195
    4. '	for' → logprob: -11.523332595825195
    5. '   ' → logprob: -12.898332595825195
    6. '
' → logprob: -13.523332595825195
    7. '```' → logprob: -17.773332595825195
    8. '	' → logprob: -17.773332595825195
    9. ' ' → logprob: -18.023332595825195
    10. '           ' → logprob: -19.273332595825195

Token 223: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38687169551849365
    2. ' i' → logprob: -1.1368716955184937
    3. '	i' → logprob: -14.386871337890625
    4. '_i' → logprob: -16.386871337890625
    5. ' ' → logprob: -17.886871337890625
    6. ' ' → logprob: -18.261871337890625
    7. '_' → logprob: -18.386871337890625
    8. 'j' → logprob: -18.761871337890625
    9. '```' → logprob: -18.886871337890625
    10. '   ' → logprob: -19.511871337890625

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016044223681092262
    2. 'in' → logprob: -4.1410441398620605
    3. '	in' → logprob: -12.516044616699219
    4. ' ' → logprob: -12.766044616699219
    5. '```' → logprob: -14.516044616699219
    6. '   ' → logprob: -14.641044616699219
    7. '0' → logprob: -14.891044616699219
    8. 'range' → logprob: -15.141044616699219
    9. ',' → logprob: -15.391044616699219
    10. '<|end|>' → logprob: -15.516044616699219

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -20.251928329467773
    4. '	range' → logprob: -20.376928329467773
    5. ' ' → logprob: -21.876928329467773
    6. 'ange' → logprob: -22.626928329467773
    7. 'rang' → logprob: -22.626928329467773
    8. '   ' → logprob: -22.751928329467773
    9. '```' → logprob: -23.001928329467773
    10. '0' → logprob: -23.126928329467773

Token 226: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.464347173576243e-05
    2. '(' → logprob: -10.50003433227539
    3. 'n' → logprob: -11.87503433227539
    4. ' (' → logprob: -17.37503433227539
    5. ' n' → logprob: -18.37503433227539
    6. '(
' → logprob: -18.62503433227539
    7. '[n' → logprob: -20.37503433227539
    8. '(s' → logprob: -20.62503433227539
    9. ')n' → logprob: -20.62503433227539
    10. '(range' → logprob: -21.00003433227539

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2812019884586334
    2. '):
' → logprob: -1.406201958656311
    3. ':' → logprob: -10.40620231628418
    4. '   ' → logprob: -12.03120231628418
    5. '):
' → logprob: -12.03120231628418
    6. '       ' → logprob: -12.90620231628418
    7. ':
' → logprob: -13.15620231628418
    8. ')' → logprob: -13.53120231628418
    9. '):

' → logprob: -13.78120231628418
    10. '**' → logprob: -14.03120231628418

Token 228: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5645887851715088
    2. '       ' → logprob: -1.0645887851715088
    3. ' for' → logprob: -2.689588785171509
    4. '<|end|>' → logprob: -4.31458854675293
    5. '           ' → logprob: -6.31458854675293
    6. 'for' → logprob: -6.93958854675293
    7. '<|end|>' → logprob: -7.43958854675293
    8. '```' → logprob: -7.43958854675293
    9. ' ' → logprob: -7.56458854675293
    10. '    
' → logprob: -8.68958854675293

Token 229: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08514638990163803
    2. 'for' (adapté à ' for') → logprob: -2.585146427154541
    3. '   ' → logprob: -5.085146427154541
    4. '       ' → logprob: -10.835145950317383
    5. '	for' → logprob: -11.085145950317383
    6. ' ' → logprob: -11.460145950317383
    7. '    ' → logprob: -13.085145950317383
    8. '<|end|>' → logprob: -14.460145950317383
    9. '  ' → logprob: -15.210145950317383
    10. ' ' → logprob: -15.710145950317383

Token 230: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5759430527687073
    2. 'j' → logprob: -0.8259430527687073
    3. ' in' → logprob: -13.950942993164062
    4. '_j' → logprob: -14.325942993164062
    5. '0' → logprob: -14.450942993164062
    6. '	j' → logprob: -14.950942993164062
    7. ' range' → logprob: -15.075942993164062
    8. '   ' → logprob: -15.700942993164062
    9. ' ' → logprob: -15.825942993164062
    10. '<|end|>' → logprob: -15.825942993164062

Token 231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693557143211365
    2. 'in' → logprob: -2.1269354820251465
    3. '	in' → logprob: -12.876935958862305
    4. '<|end|>' → logprob: -14.126935958862305
    5. ' ' → logprob: -14.376935958862305
    6. '```' → logprob: -14.751935958862305
    7. '        ' → logprob: -14.876935958862305
    8. '   ' → logprob: -15.126935958862305
    9. '0' → logprob: -15.126935958862305
    10. ')' → logprob: -15.376935958862305

Token 232: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006721536163240671
    2. ' range' → logprob: -5.006721496582031
    3. '(range' → logprob: -12.006721496582031
    4. 'm' → logprob: -18.25672149658203
    5. '	range' → logprob: -19.88172149658203
    6. '(m' → logprob: -20.75672149658203
    7. '   ' → logprob: -21.38172149658203
    8. 'in' → logprob: -21.50672149658203
    9. ' ' → logprob: -21.50672149658203
    10. '(' → logprob: -21.63172149658203

Token 233: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.60414821645827e-06
    2. 'm' → logprob: -13.125004768371582
    3. 'range' → logprob: -13.375004768371582
    4. '(' → logprob: -14.625004768371582
    5. '(range' → logprob: -15.000004768371582
    6. ' (' → logprob: -16.000003814697266
    7. ' range' → logprob: -16.000003814697266
    8. '(M' → logprob: -17.125003814697266
    9. '[m' → logprob: -18.250003814697266
    10. '   ' → logprob: -18.375003814697266

Token 234: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5255095362663269
    2. '):' → logprob: -0.9005095362663269
    3. ':' → logprob: -6.150509357452393
    4. ':
' → logprob: -9.27550983428955
    5. ')' → logprob: -10.02550983428955
    6. '+' → logprob: -10.15050983428955
    7. '           ' → logprob: -10.90050983428955
    8. '       ' → logprob: -11.15050983428955
    9. '():
' → logprob: -11.27550983428955
    10. '):
' → logprob: -11.40050983428955

Token 235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016679229447618127
    2. '<|end|>' → logprob: -6.8766679763793945
    3. ' if' → logprob: -8.126667976379395
    4. '           ' → logprob: -9.376667976379395
    5. ',' → logprob: -10.001667976379395
    6. '<|end|>' → logprob: -10.126667976379395
    7. '[' → logprob: -11.001667976379395
    8. ':
' → logprob: -11.001667976379395
    9. '                
' → logprob: -11.126667976379395
    10. '       ' → logprob: -11.251667976379395

Token 236: ' if' (ID: 538)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.09144800901412964
    2. 'ans' → logprob: -2.7164480686187744
    3. '               ' → logprob: -4.591447830200195
    4. ' if' → logprob: -4.966447830200195
    5. '                   ' → logprob: -6.091447830200195
    6. 'if' (adapté à ' if') → logprob: -7.341447830200195
    7. '           ' → logprob: -7.466447830200195
    8. '   ' → logprob: -8.466447830200195
    9. '	ans' → logprob: -8.591447830200195
    10. '(ans' → logprob: -8.966447830200195

Token 237: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.3869016468524933
    2. 'grid' → logprob: -1.136901617050171
    3. '	grid' → logprob: -11.51190185546875
    4. 'dp' → logprob: -11.88690185546875
    5. '(grid' → logprob: -12.01190185546875
    6. ' ' → logprob: -13.38690185546875
    7. ' dp' → logprob: -14.01190185546875
    8. 'Grid' → logprob: -14.01190185546875
    9. '   ' → logprob: -14.13690185546875
    10. '    ' → logprob: -14.51190185546875

Token 238: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.73183855926618e-05
    2. '[j' → logprob: -9.500077247619629
    3. '[' → logprob: -13.500077247619629
    4. 'i' → logprob: -15.125077247619629
    5. '][' → logprob: -15.625077247619629
    6. '[I' → logprob: -15.625077247619629
    7. '[n' → logprob: -16.250078201293945
    8. ' [' → logprob: -16.625078201293945
    9. ')[' → logprob: -16.625078201293945
    10. '   ' → logprob: -16.750078201293945

Token 239: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.523501455783844
    2. '[i' → logprob: -0.898501455783844
    3. '[j' → logprob: -8.0235013961792
    4. ']' → logprob: -10.8985013961792
    5. '[' → logprob: -11.6485013961792
    6. '}[' → logprob: -12.2735013961792
    7. ' ][' → logprob: -12.5235013961792
    8. ')[' → logprob: -13.0235013961792
    9. '[I' → logprob: -13.2735013961792
    10. ' [' → logprob: -13.3985013961792

Token 240: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.41866585687967e-06
    2. '[j' → logprob: -11.875008583068848
    3. ' j' → logprob: -13.750008583068848
    4. '	j' → logprob: -15.625008583068848
    5. '   ' → logprob: -16.75000762939453
    6. '][' → logprob: -17.00000762939453
    7. '1' → logprob: -17.12500762939453
    8. '_j' → logprob: -17.12500762939453
    9. ']' → logprob: -17.25000762939453
    10. '```' → logprob: -17.25000762939453

Token 241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2992516756057739
    2. ']==' → logprob: -1.674251675605774
    3. '==' → logprob: -2.6742515563964844
    4. ' ==' → logprob: -6.174251556396484
    5. ')' → logprob: -9.299251556396484
    6. ')==' → logprob: -10.924251556396484
    7. '           ' → logprob: -11.549251556396484
    8. '']==' → logprob: -12.299251556396484
    9. ' ]' → logprob: -12.549251556396484
    10. ']:
' → logprob: -13.674251556396484

Token 242: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03379957005381584
    2. ' ==' → logprob: -3.408799648284912
    3. ']==' → logprob: -8.908799171447754
    4. ')==' → logprob: -11.533799171447754
    5. '=' → logprob: -13.158799171447754
    6. '==
' → logprob: -13.283799171447754
    7. ':' → logprob: -13.533799171447754
    8. '()==' → logprob: -14.158799171447754
    9. '===' → logprob: -14.408799171447754
    10. '[' → logprob: -14.408799171447754

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001835141738411039
    2. ' ' → logprob: -8.62518310546875
    3. '0' → logprob: -12.50018310546875
    4. '   ' → logprob: -15.37518310546875
    5. '```' → logprob: -17.50018310546875
    6. '2' → logprob: -18.12518310546875
    7. '  ' → logprob: -18.50018310546875
    8. ' ' → logprob: -19.06268310546875
    9. '<|end|>' → logprob: -19.06268310546875
    10. '...' → logprob: -19.62518310546875

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -15.125001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '```' → logprob: -18.875001907348633
    6. '2' → logprob: -20.437501907348633
    7. '' → logprob: -20.500001907348633
    8. '  ' → logprob: -20.687501907348633
    9. '１' → logprob: -20.750001907348633
    10. '
' → logprob: -20.875001907348633

Token 245: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20373329520225525
    2. ':' → logprob: -1.7037333250045776
    3. '                   ' → logprob: -6.578733444213867
    4. '):
' → logprob: -7.453733444213867
    5. '               ' → logprob: -8.703733444213867
    6. ' and' → logprob: -10.078733444213867
    7. '():
' → logprob: -10.453733444213867
    8. ',' → logprob: -10.828733444213867
    9. '                       ' → logprob: -10.828733444213867
    10. '<|end|>' → logprob: -10.953733444213867

Token 246: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005954991560429335
    2. ':
' → logprob: -5.880955219268799
    3. '               ' → logprob: -6.755955219268799
    4. ':' → logprob: -7.630955219268799
    5. '                       ' → logprob: -8.13095474243164
    6. '<|end|>' → logprob: -8.25595474243164
    7. '                    
' → logprob: -8.38095474243164
    8. '           ' → logprob: -8.50595474243164
    9. ',' → logprob: -9.00595474243164
    10. '<|end|>' → logprob: -9.25595474243164

Token 247: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.01822088100016117
    2. ' ans' → logprob: -4.018220901489258
    3. '                   ' → logprob: -10.143220901489258
    4. '               ' → logprob: -11.643220901489258
    5. '	ans' → logprob: -11.768220901489258
    6. 'anst' → logprob: -12.143220901489258
    7. 'answer' → logprob: -12.393220901489258
    8. '(ans' → logprob: -13.518220901489258
    9. '_ans' → logprob: -13.768220901489258
    10. 'temp' → logprob: -13.768220901489258

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018169725313782692
    2. '=' → logprob: -4.01816987991333
    3. '=max' → logprob: -10.893169403076172
    4. '+=' → logprob: -14.643169403076172
    5. ' +=' → logprob: -14.893169403076172
    6. '   ' → logprob: -15.768169403076172
    7. 'max' → logprob: -15.768169403076172
    8. '                   ' → logprob: -16.518169403076172
    9. '           ' → logprob: -17.143169403076172
    10. ' ' → logprob: -17.268169403076172

Token 249: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.029750484973192215
    2. 'max' → logprob: -3.5297505855560303
    3. '(max' → logprob: -19.02975082397461
    4. '	max' → logprob: -19.27975082397461
    5. '[max' → logprob: -20.90475082397461
    6. '.max' → logprob: -21.02975082397461
    7. '_max' → logprob: -21.02975082397461
    8. '=max' → logprob: -21.27975082397461
    9. ',max' → logprob: -21.77975082397461
    10. ' maximum' → logprob: -21.77975082397461

Token 250: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.750004768371582
    3. 'ans' → logprob: -13.500004768371582
    4. '	ans' → logprob: -19.000003814697266
    5. '(answer' → logprob: -19.500003814697266
    6. ' ans' → logprob: -19.500003814697266
    7. '(
' → logprob: -19.500003814697266
    8. ' (' → logprob: -20.875003814697266
    9. '(max' → logprob: -20.875003814697266
    10. '(err' → logprob: -21.000003814697266

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8206473871250637e-05
    2. '(ans' → logprob: -10.875028610229492
    3. ' ,' → logprob: -12.250028610229492
    4. 'ans' → logprob: -12.625028610229492
    5. ',
' → logprob: -14.250028610229492
    6. ',max' → logprob: -15.750028610229492
    7. '           ' → logprob: -16.125028610229492
    8. ' ans' → logprob: -16.875028610229492
    9. '   ' → logprob: -17.000028610229492
    10. '                   ' → logprob: -17.500028610229492

Token 252: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.061968810856342316
    2. ' dfs' → logprob: -2.8119688034057617
    3. 'df' → logprob: -13.811968803405762
    4. '                   ' → logprob: -16.561969757080078
    5. 'dp' → logprob: -16.936969757080078
    6. 'DFS' → logprob: -18.311969757080078
    7. ' DFS' → logprob: -18.561969757080078
    8. '                       ' → logprob: -18.936969757080078
    9. '               ' → logprob: -19.061969757080078
    10. 'dfa' → logprob: -19.436969757080078

Token 253: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -16.75
    3. ' (' → logprob: -18.875
    4. ')' → logprob: -19.375
    5. ')(' → logprob: -20.0
    6. '(ii' → logprob: -20.375
    7. ')i' → logprob: -21.125
    8. '(I' → logprob: -21.125
    9. '(j' → logprob: -21.625
    10. '((' → logprob: -22.25

Token 254: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001282376004382968
    2. ',i' → logprob: -8.126282691955566
    3. ')(' → logprob: -8.251282691955566
    4. ')' → logprob: -8.626282691955566
    5. ',' → logprob: -8.751282691955566
    6. '[i' → logprob: -9.126282691955566
    7. '(' → logprob: -9.251282691955566
    8. 'i' → logprob: -9.376282691955566
    9. ',j' → logprob: -10.751282691955566
    10. ' (' → logprob: -10.876282691955566

Token 255: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.7610454708337784e-05
    2. ' j' → logprob: -10.500027656555176
    3. ')' → logprob: -17.37502670288086
    4. '   ' → logprob: -18.00002670288086
    5. '<|end|>' → logprob: -18.37502670288086
    6. '	j' → logprob: -18.75002670288086
    7. '                   ' → logprob: -19.37502670288086
    8. ',j' → logprob: -19.50002670288086
    9. '_j' → logprob: -19.87502670288086
    10. ' ' → logprob: -19.87502670288086

Token 256: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006000844296067953
    2. ')' → logprob: -5.756000995635986
    3. '))
' → logprob: -5.881000995635986
    4. '               ' → logprob: -11.381000518798828
    5. ')))' → logprob: -11.881000518798828
    6. ')
' → logprob: -12.631000518798828
    7. '           ' → logprob: -13.131000518798828
    8. '                   ' → logprob: -13.756000518798828
    9. ' ))' → logprob: -14.006000518798828
    10. '()))' → logprob: -14.631000518798828

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2043250948190689
    2. '
' → logprob: -2.2043251991271973
    3. 'print' → logprob: -3.0793251991271973
    4. '   ' → logprob: -3.7043251991271973
    5. '```' → logprob: -6.579325199127197
    6. '        
' → logprob: -6.829325199127197
    7. '<|end|>' → logprob: -7.829325199127197
    8. '    
' → logprob: -8.329324722290039
    9. '  
' → logprob: -8.329324722290039
    10. ' print' → logprob: -8.329324722290039

Token 258: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08076032251119614
    2. '       ' → logprob: -2.5807602405548096
    3. '   ' → logprob: -6.455760478973389
    4. ' print' → logprob: -8.33076000213623
    5. '```' → logprob: -9.83076000213623
    6. '	print' → logprob: -13.20576000213623
    7. '        
' → logprob: -15.70576000213623
    8. ' ' → logprob: -16.080760955810547
    9. '#print' → logprob: -16.205760955810547
    10. '
' → logprob: -16.455760955810547

Token 259: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.006728634238243103
    2. '(' → logprob: -5.006728649139404
    3. '('' → logprob: -11.756728172302246
    4. '()' → logprob: -12.756728172302246
    5. '(f' → logprob: -13.381728172302246
    6. 'ans' → logprob: -15.381728172302246
    7. '(answer' → logprob: -15.506728172302246
    8. ' (' → logprob: -15.631728172302246
    9. '("' → logprob: -15.756728172302246
    10. '("("' → logprob: -16.131729125976562

Token 260: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '())' → logprob: -13.500004768371582
    3. ')
' → logprob: -13.625004768371582
    4. '()' → logprob: -13.750004768371582
    5. ')`' → logprob: -14.500004768371582
    6. '))' → logprob: -15.875004768371582
    7. ' )' → logprob: -16.125003814697266
    8. '`)' → logprob: -16.625003814697266
    9. ')}' → logprob: -17.375003814697266
    10. '   ' → logprob: -18.250003814697266

Token 261: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.5585033297538757
    2. 'if' → logprob: -0.9335033297538757
    3. '<|end|>' → logprob: -3.8085033893585205
    4. '```' → logprob: -5.058503150939941
    5. '
' → logprob: -6.058503150939941
    6. ' solve' → logprob: -6.183503150939941
    7. '#' → logprob: -6.933503150939941
    8. ' if' → logprob: -8.308503150939941
    9. '.solve' → logprob: -8.433503150939941
    10. '<|end|>' → logprob: -9.933503150939941

Token 262: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06299807876348495
    2. '(' → logprob: -2.812998056411743
    3. '()
' → logprob: -7.812998294830322
    4. '(
' → logprob: -8.312997817993164
    5. '```' → logprob: -8.562997817993164
    6. '<|end|>' → logprob: -9.562997817993164
    7. '()\' → logprob: -10.437997817993164
    8. '#' → logprob: -10.562997817993164
    9. '\' → logprob: -11.312997817993164
    10. '();' → logprob: -11.687997817993164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 260
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 143
Tokens correctement prédits (top 10): 237
Précision stricte (1ère position): 52.31%
Précision adaptée (1ère position): 55.00%
Précision (top 10): 91.15%
================================================================================
