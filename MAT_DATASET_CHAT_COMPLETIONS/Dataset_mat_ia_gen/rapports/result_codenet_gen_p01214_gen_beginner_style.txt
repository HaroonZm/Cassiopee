================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def rotate(block):
    H = len(block)
    W = len(block[0])
    new_block = []
    for c in range(W):
        new_row = ''
        for r in range(H-1, -1, -1):
            new_row += block[r][c]
        new_block.append(new_row)
    return new_block

def get_tiles(block):
    tiles = []
    for r in range(len(block)):
        for c in range(len(block[0])):
            if block[r][c] == '#':
                tiles.append((r,c))
    return tiles

def can_place(board, block_tiles, start_r, start_c):
    H = len(board)
    W = len(board[0])
    for (br, bc) in block_tiles:
        r = start_r + br
        c = start_c + bc
        if r < 0 or r >= H or c < 0 or c >= W:
            return False
        if board[r][c] == '#':
            return False
    return True

def place_block(board, block_tiles, start_r, start_c):
    new_board = [list(row) for row in board]
    for (br, bc) in block_tiles:
        r = start_r + br
        c = start_c + bc
        new_board[r][c] = '#'
    return [''.join(row) for row in new_board]

def count_full_lines(board):
    count = 0
    for row in board:
        if all(ch == '#' for ch in row):
            count += 1
    return count

N = int(input())
for _ in range(N):
    # Read block
    BH, BW = map(int, input().split())
    block = [input() for _ in range(BH)]

    # Read board
    BH2, BW2 = map(int, input().split())
    board = [input() for _ in range(BH2)]

    # Generate all rotations of block (max 4)
    rotations = []
    current = block
    for _r in range(4):
        # Normalize block to top-left position (remove empty rows and columns)
        rows = [row for row in current if '#' in row]
        min_col = None
        max_col = -1
        for row in rows:
            for i, ch in enumerate(row):
                if ch == '#':
                    if min_col is None or i < min_col:
                        min_col = i
                    if i > max_col:
                        max_col = i
        new_block = []
        for row in rows:
            new_block.append(row[min_col:max_col+1])
        current = new_block

        # Avoid adding duplicates
        if current not in rotations:
            rotations.append(current)
        current = rotate(current)

    max_score = -1
    for rblock in rotations:
        block_tiles = get_tiles(rblock)
        BH_rot = len(rblock)
        BW_rot = len(rblock[0])
        for sr in range(BH2 - BH_rot +1):
            for sc in range(BW2 - BW_rot +1):
                if can_place(board, block_tiles, sr, sc):
                    new_board = place_block(board, block_tiles, sr, sc)
                    score = count_full_lines(new_board)
                    if score > max_score:
                        max_score = score
    print(max_score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' rotate' (ID: 31987)
  → Token d'amorce (pas de prédiction)

Token 2: '(block' (ID: 36179)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13672783970832825
    2. '[' → logprob: -2.386727809906006
    3. ')' → logprob: -3.511727809906006
    4. ',' → logprob: -6.011727809906006
    5. '.' → logprob: -6.261727809906006
    6. ':' → logprob: -7.636727809906006
    7. 's' → logprob: -8.136728286743164
    8. '(' → logprob: -8.636728286743164
    9. '):
' → logprob: -9.011728286743164
    10. '```' → logprob: -9.136728286743164

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2276829183101654
    2. '(' → logprob: -1.9776829481124878
    3. '```' → logprob: -3.4776828289031982
    4. '   ' → logprob: -3.7276828289031982
    5. '_' → logprob: -5.977683067321777
    6. '(:' → logprob: -6.352683067321777
    7. '\' → logprob: -6.477683067321777
    8. '():' → logprob: -6.977683067321777
    9. ''' → logprob: -7.227683067321777
    10. ''s' → logprob: -7.977683067321777

Token 5: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17397983372211456
    2. '(' → logprob: -3.2989797592163086
    3. '\' → logprob: -3.2989797592163086
    4. '```' → logprob: -3.7989797592163086
    5. '[' → logprob: -3.9239797592163086
    6. ' ' → logprob: -4.548979759216309
    7. ''' → logprob: -4.673979759216309
    8. '\n' → logprob: -5.548979759216309
    9. '    ' → logprob: -6.173979759216309
    10. 'return' → logprob: -6.298979759216309

Token 6: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9583119750022888
    2. 'eight' → logprob: -1.3333120346069336
    3. 'e' → logprob: -1.4583120346069336
    4. ' =' → logprob: -2.8333120346069336
    5. '=' → logprob: -3.4583120346069336
    6. 'T' → logprob: -4.458312034606934
    7. 'E' → logprob: -5.083312034606934
    8. '[' → logprob: -6.083312034606934
    9. '   ' → logprob: -6.083312034606934
    10. 'ight' → logprob: -6.208312034606934

Token 7: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.47411537170410156
    2. 'len' → logprob: -0.9741153717041016
    3. ' block' → logprob: -10.724115371704102
    4. 'block' → logprob: -11.224115371704102
    5. '[len' → logprob: -13.224115371704102
    6. '(len' → logprob: -14.099115371704102
    7. '   ' → logprob: -15.224115371704102
    8. ' ' → logprob: -16.8491153717041
    9. '=len' → logprob: -16.8491153717041
    10. '	len' → logprob: -17.2241153717041

Token 8: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.00038539018714800477
    2. '(' → logprob: -7.875385284423828
    3. 'block' → logprob: -12.250385284423828
    4. '(H' → logprob: -15.500385284423828
    5. ' block' → logprob: -15.750385284423828
    6. ' (' → logprob: -17.000385284423828
    7. '(b' → logprob: -17.000385284423828
    8. '(Block' → logprob: -17.125385284423828
    9. '(
' → logprob: -17.375385284423828
    10. '	block' → logprob: -17.875385284423828

Token 9: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009697778150439262
    2. '[' → logprob: -4.884697914123535
    3. ')
' → logprob: -6.634697914123535
    4. '   ' → logprob: -7.259697914123535
    5. ' )' → logprob: -10.259697914123535
    6. ' ' → logprob: -11.259697914123535
    7. '```' → logprob: -12.134697914123535
    8. '[
' → logprob: -12.259697914123535
    9. ')
' → logprob: -13.134697914123535
    10. '[line' → logprob: -13.634697914123535

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13150139153003693
    2. ')' → logprob: -3.5065014362335205
    3. '    
' → logprob: -3.7565014362335205
    4. '```' → logprob: -3.7565014362335205
    5. '[' → logprob: -4.006501197814941
    6. '`' → logprob: -5.131501197814941
    7. '    ' → logprob: -5.131501197814941
    8. '\' → logprob: -5.881501197814941
    9. ',' → logprob: -6.006501197814941
    10. '*' → logprob: -6.506501197814941

Token 11: ' W' (ID: 486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059705667197704315
    2. '`' → logprob: -4.30970573425293
    3. ' return' → logprob: -4.30970573425293
    4. ' W' → logprob: -4.55970573425293
    5. '```' → logprob: -4.80970573425293
    6. 'W' (adapté à ' W') → logprob: -5.68470573425293
    7. '    ' → logprob: -6.30970573425293
    8. ' ' → logprob: -6.43470573425293
    9. 'return' → logprob: -6.55970573425293
    10. ' rotated' → logprob: -6.93470573425293

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023307671770453453
    2. '=' → logprob: -3.7733075618743896
    3. ')' → logprob: -10.523307800292969
    4. ' ' → logprob: -10.648307800292969
    5. '   ' → logprob: -12.898307800292969
    6. ' =)' → logprob: -13.398307800292969
    7. '=len' → logprob: -13.398307800292969
    8. '[' → logprob: -13.898307800292969
    9. '.' → logprob: -14.523307800292969
    10. '<|end|>' → logprob: -14.523307800292969

Token 13: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2014133334159851
    2. ' len' → logprob: -1.7014133930206299
    3. '(len' → logprob: -16.451414108276367
    4. '[len' → logprob: -17.326414108276367
    5. '=len' → logprob: -17.576414108276367
    6. '	len' → logprob: -18.326414108276367
    7. '   ' → logprob: -19.201414108276367
    8. '0' → logprob: -20.451414108276367
    9. ' ' → logprob: -20.826414108276367
    10. '<len' → logprob: -21.076414108276367

Token 14: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.0007311395602300763
    2. '(' → logprob: -7.250730991363525
    3. 'block' → logprob: -10.875731468200684
    4. ' block' → logprob: -14.000731468200684
    5. ' (' → logprob: -14.625731468200684
    6. ')' → logprob: -15.250731468200684
    7. '	block' → logprob: -15.875731468200684
    8. '(
' → logprob: -16.125730514526367
    9. '```' → logprob: -16.500730514526367
    10. '(

' → logprob: -17.500730514526367

Token 15: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. ')' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.62500286102295
    4. '[-' → logprob: -16.750001907348633
    5. '```' → logprob: -17.375001907348633
    6. '[h' → logprob: -18.375001907348633
    7. ' [' → logprob: -18.625001907348633
    8. '[i' → logprob: -18.625001907348633
    9. '[T' → logprob: -19.625001907348633
    10. ' ' → logprob: -20.000001907348633

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '۰' → logprob: -17.125001907348633
    6. '-' → logprob: -17.375001907348633
    7. '(' → logprob: -17.500001907348633
    8. '```' → logprob: -17.562501907348633
    9. 'H' → logprob: -17.812501907348633
    10. '０' → logprob: -18.000001907348633

Token 17: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0004043361986987293
    2. ')' → logprob: -8.875404357910156
    3. '])]' → logprob: -9.125404357910156
    4. ']' → logprob: -9.750404357910156
    5. ')])' → logprob: -9.750404357910156
    6. ']))' → logprob: -11.500404357910156
    7. ' ])' → logprob: -11.625404357910156
    8. '])
' → logprob: -12.125404357910156
    9. ')]' → logprob: -12.375404357910156
    10. ']])' → logprob: -12.500404357910156

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2747669816017151
    2. '\n' → logprob: -2.0247669219970703
    3. '\' → logprob: -3.7747669219970703
    4. '[' → logprob: -3.8997669219970703
    5. ')' → logprob: -4.52476692199707
    6. '    
' → logprob: -4.64976692199707
    7. '```' → logprob: -4.77476692199707
    8. ' ' → logprob: -5.02476692199707
    9. '\r' → logprob: -5.14976692199707
    10. '`' → logprob: -5.39976692199707

Token 19: ' new' (ID: 620)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17876410484313965
    2. '\n' → logprob: -2.8037641048431396
    3. 'result' → logprob: -4.303764343261719
    4. ' ' → logprob: -4.553764343261719
    5. 'new' (adapté à ' new') → logprob: -4.678764343261719
    6. '[' → logprob: -4.678764343261719
    7. 'n' → logprob: -4.678764343261719
    8. 'r' → logprob: -4.928764343261719
    9. '`' → logprob: -5.053764343261719
    10. ')' → logprob: -5.178764343261719

Token 20: '_block' (ID: 15644)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12809637188911438
    2. '_block' → logprob: -2.128096342086792
    3. ' _' → logprob: -7.628096580505371
    4. 'block' → logprob: -7.878096580505371
    5. ' ' → logprob: -9.753096580505371
    6. ' =' → logprob: -9.878096580505371
    7. '_bloc' → logprob: -9.878096580505371
    8. '_space' → logprob: -10.753096580505371
    9. '_blocks' → logprob: -11.003096580505371
    10. '_matrix' → logprob: -11.003096580505371

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043828319758176804
    2. '=' → logprob: -3.168828248977661
    3. '[' → logprob: -7.54382848739624
    4. '_' → logprob: -9.293828010559082
    5. ' ' → logprob: -9.668828010559082
    6. ' =[' → logprob: -10.543828010559082
    7. '   ' → logprob: -10.668828010559082
    8. ',' → logprob: -10.918828010559082
    9. '[:]' → logprob: -11.293828010559082
    10. '=[]' → logprob: -11.543828010559082

Token 22: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.5699095726013184
    2. '[' → logprob: -1.3199095726013184
    3. ' [[' → logprob: -2.0699095726013184
    4. ' [' → logprob: -3.3199095726013184
    5. '[['' → logprob: -6.069909572601318
    6. '[]' → logprob: -6.194909572601318
    7. ' []' → logprob: -8.569910049438477
    8. ' [['' → logprob: -8.819910049438477
    9. '[list' → logprob: -9.319910049438477
    10. ' [[]' → logprob: -10.069910049438477

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24711231887340546
    2. '[' → logprob: -2.497112274169922
    3. '\' → logprob: -2.497112274169922
    4. ' for' → logprob: -4.497112274169922
    5. '    ' → logprob: -4.622112274169922
    6. '```' → logprob: -4.997112274169922
    7. '\t' → logprob: -5.497112274169922
    8. ' ' → logprob: -5.747112274169922
    9. '\n' → logprob: -5.747112274169922
    10. 'for' → logprob: -6.122112274169922

Token 24: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7537632584571838
    2. '\n' → logprob: -1.753763198852539
    3. '\' → logprob: -2.253763198852539
    4. ' ' → logprob: -2.503763198852539
    5. '[' → logprob: -2.753763198852539
    6. ' for' → logprob: -3.003763198852539
    7. '    ' → logprob: -4.503763198852539
    8. '\t' → logprob: -4.503763198852539
    9. '    
' → logprob: -5.128763198852539
    10. ' 
' → logprob: -5.378763198852539

Token 25: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42160528898239136
    2. 'i' → logprob: -1.4216053485870361
    3. ' j' → logprob: -2.421605348587036
    4. 'j' → logprob: -4.796605110168457
    5. ' y' → logprob: -5.921605110168457
    6. ' ' → logprob: -7.671605110168457
    7. ' x' → logprob: -7.671605110168457
    8. ' col' → logprob: -8.046605110168457
    9. ' row' → logprob: -8.046605110168457
    10. ' r' → logprob: -8.296605110168457

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026203924790024757
    2. 'in' → logprob: -3.7762038707733154
    3. ' ' → logprob: -6.2762041091918945
    4. 'n' → logprob: -7.6512041091918945
    5. '  ' → logprob: -8.526204109191895
    6. '   ' → logprob: -9.151204109191895
    7. ' i' → logprob: -9.401204109191895
    8. 'i' → logprob: -9.526204109191895
    9. ',' → logprob: -9.776204109191895
    10. ')' → logprob: -10.776204109191895

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889363914728165
    2. 'range' → logprob: -2.5788936614990234
    3. '	range' → logprob: -13.703893661499023
    4. ' xrange' → logprob: -13.828893661499023
    5. '0' → logprob: -14.203893661499023
    6. ' ' → logprob: -14.703893661499023
    7. '   ' → logprob: -15.578893661499023
    8. '  ' → logprob: -16.328893661499023
    9. 're' → logprob: -16.578893661499023
    10. '(range' → logprob: -16.578893661499023

Token 28: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0031922089401632547
    2. '(' → logprob: -5.75319242477417
    3. 'W' → logprob: -12.128191947937012
    4. ' W' → logprob: -12.378191947937012
    5. ' (' → logprob: -13.253191947937012
    6. '(H' → logprob: -13.503191947937012
    7. '	W' → logprob: -13.878191947937012
    8. ')' → logprob: -15.128191947937012
    9. '(
' → logprob: -15.503191947937012
    10. '(len' → logprob: -16.253192901611328

Token 29: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3982785940170288
    2. '):' → logprob: -1.3982785940170288
    3. ' -' → logprob: -2.8982787132263184
    4. ')' → logprob: -3.8982787132263184
    5. '   ' → logprob: -5.773278713226318
    6. ',' → logprob: -6.398278713226318
    7. ' ):' → logprob: -7.398278713226318
    8. '):
' → logprob: -7.898278713226318
    9. '-)' → logprob: -9.39827823638916
    10. ' ' → logprob: -10.39827823638916

Token 30: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8599292039871216
    2. ' new' → logprob: -1.6099292039871216
    3. 'new' → logprob: -1.7349292039871216
    4. '       ' → logprob: -2.109929084777832
    5. '[' → logprob: -2.859929084777832
    6. '    ' → logprob: -4.234929084777832
    7. '	new' → logprob: -6.609929084777832
    8. 'n' → logprob: -6.734929084777832
    9. '[]' → logprob: -6.859929084777832
    10. ' ' → logprob: -6.984929084777832

Token 31: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9180941581726074
    2. 'new' (adapté à ' new') → logprob: -0.9180941581726074
    3. '   ' → logprob: -2.1680941581726074
    4. '[' → logprob: -2.7930941581726074
    5. 'n' → logprob: -4.668094158172607
    6. '    ' → logprob: -5.168094158172607
    7. ' ' → logprob: -5.918094158172607
    8. '[new' → logprob: -6.168094158172607
    9. ' [' → logprob: -6.418094158172607
    10. '       ' → logprob: -6.418094158172607

Token 32: '_row' (ID: 19157)
  Prédit: '_block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.43453869223594666
    2. '_' → logprob: -1.059538722038269
    3. '_row' → logprob: -5.559538841247559
    4. ' _' → logprob: -7.184538841247559
    5. '_line' → logprob: -7.309538841247559
    6. 'block' → logprob: -8.559538841247559
    7. '   ' → logprob: -9.309538841247559
    8. '_bloc' → logprob: -10.059538841247559
    9. '_b' → logprob: -10.184538841247559
    10. '[' → logprob: -10.184538841247559

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04310321435332298
    2. '=' → logprob: -3.1681032180786133
    3. '=[]' → logprob: -9.418103218078613
    4. ' ' → logprob: -11.418103218078613
    5. '.append' → logprob: -12.043103218078613
    6. '   ' → logprob: -13.918103218078613
    7. ' =[' → logprob: -13.918103218078613
    8. ')' → logprob: -14.293103218078613
    9. 's' → logprob: -14.668103218078613
    10. '[:]' → logprob: -14.918103218078613

Token 34: ' ''
' (ID: 25366)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000431861262768507
    2. ' []' → logprob: -8.000432014465332
    3. '[' → logprob: -9.250432014465332
    4. '[]
' → logprob: -16.250431060791016
    5. '[]}' → logprob: -16.500431060791016
    6. '[]>' → logprob: -16.750431060791016
    7. ' [' → logprob: -16.750431060791016
    8. ' ' → logprob: -17.000431060791016
    9. '[],' → logprob: -17.875431060791016
    10. '[]

' → logprob: -18.375431060791016

Token 35: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43363144993782043
    2. '   ' → logprob: -1.808631420135498
    3. 'for' → logprob: -2.433631420135498
    4. '<|end|>' → logprob: -2.433631420135498
    5. ' ' → logprob: -4.558631420135498
    6. '	for' → logprob: -6.558631420135498
    7. '<|end|>' → logprob: -8.808631896972656
    8. '       ' → logprob: -8.808631896972656
    9. '  ' → logprob: -9.183631896972656
    10. '    ' → logprob: -10.183631896972656

Token 36: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0036796480417251587
    2. ' for' → logprob: -5.6286797523498535
    3. '   ' → logprob: -9.503679275512695
    4. ' ' → logprob: -13.003679275512695
    5. 'new' → logprob: -13.503679275512695
    6. 'r' → logprob: -14.628679275512695
    7. '	for' → logprob: -14.753679275512695
    8. '       ' → logprob: -15.753679275512695
    9. 'row' → logprob: -15.753679275512695
    10. 'For' → logprob: -16.753679275512695

Token 37: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.31407245993614197
    2. 'r' → logprob: -1.3140724897384644
    3. 'H' → logprob: -7.814072608947754
    4. ' H' → logprob: -7.939072608947754
    5. '	r' → logprob: -11.564072608947754
    6. ' row' → logprob: -11.814072608947754
    7. '(r' → logprob: -11.939072608947754
    8. 'row' → logprob: -12.814072608947754
    9. 'h' → logprob: -12.939072608947754
    10. ' h' → logprob: -12.939072608947754

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013321444857865572
    2. 'in' → logprob: -6.6263322830200195
    3. '<|end|>' → logprob: -13.12633228302002
    4. 'H' → logprob: -13.50133228302002
    5. ')' → logprob: -14.37633228302002
    6. 's' → logprob: -14.87633228302002
    7. ' range' → logprob: -15.12633228302002
    8. ' reversed' → logprob: -15.12633228302002
    9. 'In' → logprob: -15.12633228302002
    10. 'range' → logprob: -15.50133228302002

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4799552261829376
    2. ' range' → logprob: -0.9799551963806152
    3. 'H' → logprob: -5.854955196380615
    4. ' reversed' → logprob: -6.104955196380615
    5. 're' → logprob: -7.229955196380615
    6. ' H' → logprob: -10.854955673217773
    7. 'reverse' → logprob: -11.979955673217773
    8. ' xrange' → logprob: -12.604955673217773
    9. 'rev' → logprob: -12.854955673217773
    10. 'r' → logprob: -12.854955673217773

Token 40: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.013476423919200897
    2. 'H' → logprob: -5.013476371765137
    3. ' H' → logprob: -5.388476371765137
    4. '(' → logprob: -7.388476371765137
    5. ' (' → logprob: -7.388476371765137
    6. ' range' → logprob: -7.638476371765137
    7. '-' → logprob: -8.388476371765137
    8. 'range' → logprob: -9.513476371765137
    9. '0' → logprob: -10.513476371765137
    10. ' -' → logprob: -10.638476371765137

Token 41: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12694239616394043
    2. ' -' → logprob: -2.1269423961639404
    3. ')' → logprob: -11.50194263458252
    4. ' ' → logprob: -13.50194263458252
    5. '   ' → logprob: -13.50194263458252
    6. '-H' → logprob: -14.62694263458252
    7. '1' → logprob: -15.87694263458252
    8. ')-' → logprob: -16.001941680908203
    9. '-re' → logprob: -16.376941680908203
    10. '[::-' → logprob: -16.751941680908203

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014478032244369388
    2. ' ' → logprob: -8.875144958496094
    3. '-' → logprob: -12.375144958496094
    4. '   ' → logprob: -15.250144958496094
    5. ' -' → logprob: -15.875144958496094
    6. '```' → logprob: -15.875144958496094
    7. '    ' → logprob: -17.250144958496094
    8. '  ' → logprob: -17.687644958496094
    9. '2' → logprob: -17.875144958496094
    10. '`' → logprob: -18.187644958496094

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01936258003115654
    2. ',-' → logprob: -4.519362449645996
    3. ' ,' → logprob: -4.894362449645996
    4. ' -' → logprob: -8.144362449645996
    5. ' ,-' → logprob: -8.394362449645996
    6. '-' → logprob: -8.519362449645996
    7. ')' → logprob: -10.519362449645996
    8. '   ' → logprob: -11.269362449645996
    9. '-,' → logprob: -12.019362449645996
    10. ' ' → logprob: -12.019362449645996

Token 44: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014165272004902363
    2. ' -' → logprob: -4.26416540145874
    3. ' ' → logprob: -13.389164924621582
    4. '	' → logprob: -16.5141658782959
    5. '   ' → logprob: -16.6391658782959
    6. '  ' → logprob: -17.8891658782959
    7. '0' → logprob: -18.1391658782959
    8. '```' → logprob: -18.5141658782959
    9. '    ' → logprob: -19.0141658782959
    10. '−' → logprob: -19.3891658782959

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -15.250003814697266
    4. '   ' → logprob: -15.375003814697266
    5. '  ' → logprob: -16.625003814697266
    6. '2' → logprob: -17.062503814697266
    7. '１' → logprob: -17.250003814697266
    8. '۱' → logprob: -17.625003814697266
    9. '``' → logprob: -17.687503814697266
    10. ' -' → logprob: -17.750003814697266

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007743701571598649
    2. '-' → logprob: -7.375774383544922
    3. ',-' → logprob: -9.500774383544922
    4. '1' → logprob: -10.375774383544922
    5. ' ,' → logprob: -10.875774383544922
    6. ' -' → logprob: -11.000774383544922
    7. '```' → logprob: -12.625774383544922
    8. '   ' → logprob: -14.000774383544922
    9. ' ' → logprob: -14.750774383544922
    10. '-,' → logprob: -15.000774383544922

Token 47: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020567815750837326
    2. ' -' → logprob: -3.8955678939819336
    3. ' ' → logprob: -11.020567893981934
    4. '<|end|>' → logprob: -12.770567893981934
    5. ')' → logprob: -13.145567893981934
    6. '```' → logprob: -13.270567893981934
    7. '1' → logprob: -13.895567893981934
    8. '-step' → logprob: -14.770567893981934
    9. '   ' → logprob: -14.895567893981934
    10. '  ' → logprob: -15.520567893981934

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -16.250001907348633
    4. ')' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '۱' → logprob: -17.750001907348633
    7. '１' → logprob: -18.000001907348633
    8. '  ' → logprob: -18.437501907348633
    9. '<|end|>' → logprob: -18.812501907348633
    10. '১' → logprob: -19.000001907348633

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014148113317787647
    2. ')' → logprob: -4.389148235321045
    3. '):
' → logprob: -6.514148235321045
    4. ' ):' → logprob: -9.139147758483887
    5. ':' → logprob: -11.014147758483887
    6. '   ' → logprob: -11.764147758483887
    7. ',' → logprob: -12.389147758483887
    8. ' ' → logprob: -12.514147758483887
    9. ' )' → logprob: -12.639147758483887
    10. '):
' → logprob: -12.764147758483887

Token 50: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6768179535865784
    2. '           ' → logprob: -0.9268179535865784
    3. '<|end|>' → logprob: -3.4268178939819336
    4. ' ' → logprob: -3.6768178939819336
    5. 'new' → logprob: -3.8018178939819336
    6. '       ' → logprob: -5.176817893981934
    7. '            ' → logprob: -5.801817893981934
    8. ')' → logprob: -6.051817893981934
    9. '        ' → logprob: -6.676817893981934
    10. '               ' → logprob: -7.301817893981934

Token 51: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.09870124608278275
    2. 'new' (adapté à ' new') → logprob: -2.473701238632202
    3. '           ' → logprob: -4.973701477050781
    4. '<|end|>' → logprob: -6.723701477050781
    5. '               ' → logprob: -7.348701477050781
    6. ' ' → logprob: -8.098701477050781
    7. '            ' → logprob: -8.098701477050781
    8. ' block' → logprob: -8.598701477050781
    9. 'block' → logprob: -10.348701477050781
    10. ')' → logprob: -10.348701477050781

Token 52: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.048738718032836914
    2. '_block' → logprob: -3.048738718032837
    3. 'row' → logprob: -9.548738479614258
    4. '_' → logprob: -9.798738479614258
    5. 'block' → logprob: -11.673738479614258
    6. 'new' → logprob: -11.923738479614258
    7. '_r' → logprob: -13.673738479614258
    8. '_token' → logprob: -13.798738479614258
    9. '_new' → logprob: -13.798738479614258
    10. '```' → logprob: -13.798738479614258

Token 53: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.36104971170425415
    2. '+=' → logprob: -1.2360496520996094
    3. '+' → logprob: -4.611049652099609
    4. ' +' → logprob: -5.986049652099609
    5. '+='' → logprob: -9.98604965209961
    6. '.append' → logprob: -11.98604965209961
    7. '=' → logprob: -12.11104965209961
    8. '+="' → logprob: -12.23604965209961
    9. ']+=' → logprob: -12.86104965209961
    10. '+=(' → logprob: -13.86104965209961

Token 54: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.20141959190368652
    2. 'block' → logprob: -1.7014195919036865
    3. '(block' → logprob: -12.701419830322266
    4. '	block' → logprob: -13.201419830322266
    5. ' ' → logprob: -14.201419830322266
    6. '.block' → logprob: -15.576419830322266
    7. ':block' → logprob: -15.826419830322266
    8. '   ' → logprob: -16.201419830322266
    9. ' bloc' → logprob: -16.576419830322266
    10. '-block' → logprob: -16.951419830322266

Token 55: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.250005722045898
    3. 'r' → logprob: -14.500005722045898
    4. '```' → logprob: -17.0000057220459
    5. ' [' → logprob: -18.1250057220459
    6. '[row' → logprob: -18.8750057220459
    7. '[R' → logprob: -19.2500057220459
    8. '   ' → logprob: -19.2500057220459
    9. '	r' → logprob: -19.3750057220459
    10. ' r' → logprob: -19.6250057220459

Token 56: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008184424950741231
    2. ']' → logprob: -7.250818252563477
    3. '[c' → logprob: -9.750818252563477
    4. ' ][' → logprob: -10.375818252563477
    5. '[' → logprob: -11.125818252563477
    6. ''][' → logprob: -12.875818252563477
    7. '"][' → logprob: -13.750818252563477
    8. ']
' → logprob: -15.875818252563477
    9. '   ' → logprob: -16.375818252563477
    10. '[col' → logprob: -16.500818252563477

Token 57: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.836499985889532e-05
    2. ' c' → logprob: -9.7500581741333
    3. ')c' → logprob: -18.750059127807617
    4. ' ' → logprob: -19.000059127807617
    5. '	c' → logprob: -19.000059127807617
    6. '   ' → logprob: -19.250059127807617
    7. '<|end|>' → logprob: -19.625059127807617
    8. '%c' → logprob: -20.000059127807617
    9. ':c' → logprob: -20.375059127807617
    10. '  ' → logprob: -20.500059127807617

Token 58: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3141350746154785
    2. ']' → logprob: -1.3141350746154785
    3. '])' → logprob: -7.8141350746154785
    4. ')]' → logprob: -8.06413459777832
    5. ' )' → logprob: -9.93913459777832
    6. ' ]' → logprob: -9.93913459777832
    7. ')
' → logprob: -10.18913459777832
    8. ']
' → logprob: -11.93913459777832
    9. '']' → logprob: -12.18913459777832
    10. '）' → logprob: -12.56413459777832

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008130351081490517
    2. ' new' → logprob: -5.8831305503845215
    3. '   ' → logprob: -6.3831305503845215
    4. 'new' → logprob: -6.3831305503845215
    5. '
' → logprob: -7.0081305503845215
    6. ')' → logprob: -8.008130073547363
    7. '        
' → logprob: -8.383130073547363
    8. '<|end|>' → logprob: -8.758130073547363
    9. '\n' → logprob: -9.883130073547363
    10. 'newline' → logprob: -10.133130073547363

Token 60: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.805383026599884
    2. 'new' (adapté à ' new') → logprob: -1.4303829669952393
    3. '   ' → logprob: -1.5553829669952393
    4. '
' → logprob: -2.9303829669952393
    5. ')' → logprob: -3.5553829669952393
    6. '       ' → logprob: -5.180383205413818
    7. '\n' → logprob: -5.305383205413818
    8. '<|end|>' → logprob: -6.305383205413818
    9. ')new' → logprob: -6.555383205413818
    10. '_new' → logprob: -6.555383205413818

Token 61: '_block' (ID: 15644)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.016813594847917557
    2. '_block' → logprob: -4.6418137550354
    3. '_' → logprob: -5.0168137550354
    4. 'w' → logprob: -8.516813278198242
    5. '_line' → logprob: -9.641813278198242
    6. '_w' → logprob: -10.516813278198242
    7. 'row' → logprob: -10.766813278198242
    8. '_new' → logprob: -11.016813278198242
    9. '_ro' → logprob: -11.016813278198242
    10. 's' → logprob: -11.141813278198242

Token 62: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5759782791137695
    2. '.' → logprob: -0.8259782791137695
    3. '.Append' → logprob: -10.70097827911377
    4. 'append' → logprob: -11.82597827911377
    5. '.app' → logprob: -12.45097827911377
    6. 'Append' → logprob: -13.57597827911377
    7. '.ap' → logprob: -14.20097827911377
    8. '.push' → logprob: -14.45097827911377
    9. ').' → logprob: -14.82597827911377
    10. '\.' → logprob: -14.82597827911377

Token 63: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.01105300523340702
    2. '(' → logprob: -4.511053085327148
    3. '('' → logprob: -12.386053085327148
    4. '("("' → logprob: -15.261053085327148
    5. '(
' → logprob: -15.386053085327148
    6. '((' → logprob: -15.511053085327148
    7. '(`' → logprob: -16.01105308532715
    8. ' (' → logprob: -16.13605308532715
    9. '(

' → logprob: -16.88605308532715
    10. '(New' → logprob: -17.01105308532715

Token 64: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0005774584715254605
    2. '_block' → logprob: -7.875577449798584
    3. '_' → logprob: -8.750577926635742
    4. 'row' → logprob: -10.750577926635742
    5. '_w' → logprob: -12.125577926635742
    6. '_ro' → logprob: -13.125577926635742
    7. 'w' → logprob: -13.375577926635742
    8. '_token' → logprob: -13.750577926635742
    9. '_line' → logprob: -13.750577926635742
    10. ')' → logprob: -13.875577926635742

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004360334132798016
    2. ')
' → logprob: -7.750435829162598
    3. ')return' → logprob: -12.875435829162598
    4. '   ' → logprob: -13.125435829162598
    5. ' )' → logprob: -14.750435829162598
    6. ')
' → logprob: -16.625436782836914
    7. '`)' → logprob: -16.625436782836914
    8. ')`' → logprob: -16.750436782836914
    9. '```' → logprob: -16.875436782836914
    10. '')' → logprob: -17.000436782836914

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47640755772590637
    2. ' return' → logprob: -2.351407527923584
    3. '
' → logprob: -2.601407527923584
    4. '<|end|>' → logprob: -2.726407527923584
    5. 'return' → logprob: -2.976407527923584
    6. '\n' → logprob: -3.351407527923584
    7. '    
' → logprob: -3.851407527923584
    8. ' ' → logprob: -4.226407527923584
    9. ')' → logprob: -4.976407527923584
    10. '	return' → logprob: -5.726407527923584

Token 67: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5152296423912048
    2. '   ' → logprob: -1.1402297019958496
    3. ' return' → logprob: -2.7652297019958496
    4. '\n' → logprob: -5.26522970199585
    5. '    
' → logprob: -5.26522970199585
    6. '<|end|>' → logprob: -5.51522970199585
    7. '	return' → logprob: -6.51522970199585
    8. ' ' → logprob: -7.14022970199585
    9. '  
' → logprob: -7.14022970199585
    10. ':return' → logprob: -7.26522970199585

Token 68: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.0007100477814674377
    2. 'new' → logprob: -7.2507100105285645
    3. ' ' → logprob: -16.750709533691406
    4. '(new' → logprob: -18.875709533691406
    5. ' ' → logprob: -19.250709533691406
    6. '[new' → logprob: -19.500709533691406
    7. ')new' → logprob: -19.750709533691406
    8. 'space' → logprob: -19.875709533691406
    9. ' space' → logprob: -20.000709533691406
    10. '_new' → logprob: -20.000709533691406

Token 69: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.06286419928073883
    2. '_' → logprob: -2.812864303588867
    3. '_bloc' → logprob: -7.187864303588867
    4. '_b' → logprob: -9.812864303588867
    5. '_blk' → logprob: -9.812864303588867
    6. '_bl' → logprob: -11.937864303588867
    7. '__' → logprob: -12.062864303588867
    8. ' _' → logprob: -12.437864303588867
    9. '_token' → logprob: -13.062864303588867
    10. '_blocks' → logprob: -13.312864303588867

Token 70: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' get' (ID: 717)
  Prédit: ' rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotate' → logprob: -0.4320993423461914
    2. ' ' → logprob: -2.0570993423461914
    3. ' reverse' → logprob: -2.4320993423461914
    4. ' flip' → logprob: -2.5570993423461914
    5. ' space' → logprob: -4.432099342346191
    6. ' ' → logprob: -5.182099342346191
    7. ' insert' → logprob: -5.432099342346191
    8. ' get' → logprob: -5.557099342346191
    9. ' check' → logprob: -5.682099342346191
    10. ' counter' → logprob: -6.057099342346191

Token 73: '_tiles' (ID: 147480)
  Prédit: '_block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.42935794591903687
    2. '_' → logprob: -2.5543580055236816
    3. '_rotation' → logprob: -2.8043580055236816
    4. '_blocks' → logprob: -3.0543580055236816
    5. '_possible' → logprob: -3.1793580055236816
    6. '_max' → logprob: -3.6793580055236816
    7. '_valid' → logprob: -3.9293580055236816
    8. '_rot' → logprob: -4.179358005523682
    9. '_next' → logprob: -4.304358005523682
    10. '_shape' → logprob: -5.179358005523682

Token 74: '(block' (ID: 36179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01508663035929203
    2. '():' → logprob: -4.390086650848389
    3. '(block' → logprob: -7.015086650848389
    4. '("("' → logprob: -7.890086650848389
    5. '(_' → logprob: -8.51508617401123
    6. '_tiles' → logprob: -8.89008617401123
    7. '((' → logprob: -9.39008617401123
    8. ' (' → logprob: -9.51508617401123
    9. '_' → logprob: -9.51508617401123
    10. ':' → logprob: -9.64008617401123

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026217024424113333
    2. ',' → logprob: -9.125262260437012
    3. ')' → logprob: -9.500262260437012
    4. '[' → logprob: -10.625262260437012
    5. '):
' → logprob: -11.500262260437012
    6. '[]):' → logprob: -12.250262260437012
    7. '_blocks' → logprob: -12.250262260437012
    8. ' ):' → logprob: -12.375262260437012
    9. '():' → logprob: -12.375262260437012
    10. '   ' → logprob: -12.375262260437012

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.437054842710495
    2. '<|end|>' → logprob: -1.5620548725128174
    3. '    ' → logprob: -3.1870548725128174
    4. ':' → logprob: -3.3120548725128174
    5. ' ' → logprob: -4.062054634094238
    6. '(' → logprob: -4.562054634094238
    7. '    
' → logprob: -4.937054634094238
    8. ' 
' → logprob: -5.312054634094238
    9. '<|end|>' → logprob: -5.437054634094238
    10. '\' → logprob: -5.812054634094238

Token 77: ' tiles' (ID: 33001)
  Prédit: ' tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -0.5185310244560242
    2. ' 
' → logprob: -2.518531084060669
    3. '
' → logprob: -2.768531084060669
    4. '    ' → logprob: -3.018531084060669
    5. '   ' → logprob: -3.518531084060669
    6. '[' → logprob: -3.643531084060669
    7. '     
' → logprob: -3.768531084060669
    8. 'tiles' (adapté à ' tiles') → logprob: -3.893531084060669
    9. '_tiles' → logprob: -4.01853084564209
    10. '    
' → logprob: -4.39353084564209

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05029129609465599
    2. '=' → logprob: -3.0502912998199463
    3. '(' → logprob: -6.925291061401367
    4. '[:]' → logprob: -8.800291061401367
    5. '=[]' → logprob: -8.925291061401367
    6. '   ' → logprob: -9.175291061401367
    7. ' ' → logprob: -9.300291061401367
    8. '[' → logprob: -9.550291061401367
    9. 's' → logprob: -9.800291061401367
    10. '(block' → logprob: -10.675291061401367

Token 79: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.10112430155277252
    2. '[]' → logprob: -2.3511242866516113
    3. ' [' → logprob: -8.10112476348877
    4. ' set' → logprob: -8.60112476348877
    5. '[' → logprob: -8.72612476348877
    6. ' block' → logprob: -9.22612476348877
    7. ' ['' → logprob: -10.10112476348877
    8. ' ' → logprob: -10.35112476348877
    9. 'set' → logprob: -10.72612476348877
    10. '['' → logprob: -11.35112476348877

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11487483978271484
    2. ':' → logprob: -2.864874839782715
    3. ' for' → logprob: -3.489874839782715
    4. '<|end|>' → logprob: -4.364874839782715
    5. '    
' → logprob: -6.489874839782715
    6. 'for' → logprob: -6.864874839782715
    7. '
' → logprob: -6.989874839782715
    8. '    ' → logprob: -7.114874839782715
    9. '[' → logprob: -7.489874839782715
    10. '<|end|>' → logprob: -7.864874839782715

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3202384412288666
    2. 'for' (adapté à ' for') → logprob: -1.320238471031189
    3. 'H' → logprob: -5.3202385902404785
    4. ' H' → logprob: -6.8202385902404785
    5. '   ' → logprob: -7.1952385902404785
    6. 'n' → logprob: -9.19523811340332
    7. ' n' → logprob: -10.32023811340332
    8. ' current' → logprob: -11.19523811340332
    9. '    
' → logprob: -11.19523811340332
    10. '```' → logprob: -11.44523811340332

Token 82: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.12033767253160477
    2. 'r' → logprob: -2.370337724685669
    3. ' row' → logprob: -4.12033748626709
    4. ' h' → logprob: -6.74533748626709
    5. 'row' → logprob: -7.12033748626709
    6. ' i' → logprob: -7.37033748626709
    7. ' H' → logprob: -7.62033748626709
    8. 'i' → logprob: -8.74533748626709
    9. 'h' → logprob: -8.99533748626709
    10. 'H' → logprob: -9.24533748626709

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016304967924952507
    2. 'in' → logprob: -4.141304969787598
    3. ' ' → logprob: -8.266304969787598
    4. '    ' → logprob: -13.141304969787598
    5. 'range' → logprob: -13.266304969787598
    6. '	in' → logprob: -13.266304969787598
    7. ',' → logprob: -13.391304969787598
    8. ')' → logprob: -13.766304969787598
    9. '   ' → logprob: -14.016304969787598
    10. '  ' → logprob: -14.266304969787598

Token 84: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142892003059387
    2. 'range' → logprob: -1.7014288902282715
    3. ' block' → logprob: -11.57642936706543
    4. 'block' → logprob: -12.57642936706543
    5. 'ange' → logprob: -14.57642936706543
    6. '	range' → logprob: -14.70142936706543
    7. '(range' → logprob: -14.82642936706543
    8. ' in' → logprob: -15.07642936706543
    9. ' ' → logprob: -15.07642936706543
    10. ' xrange' → logprob: -15.57642936706543

Token 85: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.06151862442493439
    2. '(H' → logprob: -3.061518669128418
    3. '(' → logprob: -4.811518669128418
    4. ' len' → logprob: -5.561518669128418
    5. 'len' → logprob: -7.686518669128418
    6. ' (' → logprob: -8.186518669128418
    7. ' H' → logprob: -9.186518669128418
    8. ')' → logprob: -10.936518669128418
    9. 'H' → logprob: -12.811518669128418
    10. '(range' → logprob: -13.061518669128418

Token 86: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -4.179569077678025e-05
    2. '(' → logprob: -10.125041961669922
    3. 'block' → logprob: -13.875041961669922
    4. '(b' → logprob: -15.625041961669922
    5. ' block' → logprob: -15.750041961669922
    6. ')' → logprob: -16.000041961669922
    7. ' (' → logprob: -16.625041961669922
    8. '(
' → logprob: -16.625041961669922
    9. '	block' → logprob: -16.625041961669922
    10. ':block' → logprob: -16.625041961669922

Token 87: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.010676965117454529
    2. '))' → logprob: -5.260676860809326
    3. '):' → logprob: -5.760676860809326
    4. ')):
' → logprob: -6.885676860809326
    5. '[' → logprob: -7.260676860809326
    6. '   ' → logprob: -7.885676860809326
    7. ')' → logprob: -9.510677337646484
    8. ' ' → logprob: -9.635677337646484
    9. ' ))' → logprob: -11.385677337646484
    10. ')):
' → logprob: -12.010677337646484

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4031045436859131
    2. '       ' → logprob: -1.153104543685913
    3. '    ' → logprob: -4.528104782104492
    4. ' ' → logprob: -5.778104782104492
    5. '[' → logprob: -7.278104782104492
    6. '```' → logprob: -7.903104782104492
    7. ' for' → logprob: -8.028104782104492
    8. ':' → logprob: -9.028104782104492
    9. ')' → logprob: -9.153104782104492
    10. '        ' → logprob: -9.528104782104492

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03190404921770096
    2. '   ' → logprob: -3.7819039821624756
    3. 'for' (adapté à ' for') → logprob: -5.281904220581055
    4. ' ' → logprob: -6.156904220581055
    5. '    ' → logprob: -7.656904220581055
    6. ' t' → logprob: -8.031904220581055
    7. ' tile' → logprob: -8.531904220581055
    8. ' row' → logprob: -9.281904220581055
    9. ' tiles' → logprob: -9.531904220581055
    10. '	for' → logprob: -9.531904220581055

Token 90: ' c' (ID: 274)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.219009667634964
    2. 'len' → logprob: -2.0940096378326416
    3. '(len' → logprob: -2.7190096378326416
    4. ' W' → logprob: -4.969009876251221
    5. '   ' → logprob: -8.344009399414062
    6. ' (' → logprob: -8.844009399414062
    7. 'W' → logprob: -9.219009399414062
    8. '(' → logprob: -10.719009399414062
    9. '    ' → logprob: -10.844009399414062
    10. ' ' → logprob: -10.844009399414062

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015249599702656269
    2. '<|end|>' → logprob: -4.515249729156494
    3. 'in' → logprob: -5.515249729156494
    4. ')' → logprob: -9.640249252319336
    5. '<|end|>' → logprob: -10.140249252319336
    6. ' ' → logprob: -10.765249252319336
    7. ' =' → logprob: -11.890249252319336
    8. '(range' → logprob: -12.140249252319336
    9. '(' → logprob: -12.577749252319336
    10. ',' → logprob: -12.640249252319336

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25605735182762146
    2. '(len' → logprob: -2.1310572624206543
    3. ' len' → logprob: -2.6310572624206543
    4. 'range' → logprob: -3.7560572624206543
    5. ' (' → logprob: -4.756057262420654
    6. 'len' → logprob: -6.131057262420654
    7. '(' → logprob: -7.381057262420654
    8. '(range' → logprob: -7.881057262420654
    9. ')' → logprob: -11.381057739257812
    10. '[len' → logprob: -11.631057739257812

Token 93: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00013655527436640114
    2. '(' → logprob: -9.250136375427246
    3. ' (' → logprob: -10.250136375427246
    4. '[len' → logprob: -13.375136375427246
    5. 'len' → logprob: -13.875136375427246
    6. ' len' → logprob: -14.125136375427246
    7. ')' → logprob: -14.250136375427246
    8. '<len' → logprob: -14.250136375427246
    9. '(range' → logprob: -15.750136375427246
    10. ',len' → logprob: -16.250137329101562

Token 94: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -1.1875571544806007e-05
    2. 'block' → logprob: -11.750011444091797
    3. '(' → logprob: -12.750011444091797
    4. ' block' → logprob: -14.750011444091797
    5. ':block' → logprob: -15.875011444091797
    6. '(b' → logprob: -16.375011444091797
    7. '	block' → logprob: -16.500011444091797
    8. ')' → logprob: -16.500011444091797
    9. '(Block' → logprob: -16.625011444091797
    10. '(
' → logprob: -16.875011444091797

Token 95: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759462714195251
    2. '[r' → logprob: -0.8259462714195251
    3. '))' → logprob: -12.950945854187012
    4. '   ' → logprob: -13.200945854187012
    5. '[row' → logprob: -13.950945854187012
    6. '0' → logprob: -14.075945854187012
    7. ')' → logprob: -15.075945854187012
    8. 'r' → logprob: -15.700945854187012
    9. ' [' → logprob: -16.075946807861328
    10. ' ' → logprob: -16.450946807861328

Token 96: '0' (ID: 15)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.02286931686103344
    2. 'r' → logprob: -4.272869110107422
    3. '0' → logprob: -5.272869110107422
    4. '[' → logprob: -5.647869110107422
    5. '(r' → logprob: -12.022869110107422
    6. 'block' → logprob: -12.522869110107422
    7. '   ' → logprob: -13.772869110107422
    8. '])' → logprob: -13.897869110107422
    9. '[row' → logprob: -14.897869110107422
    10. '```' → logprob: -15.022869110107422

Token 97: '])):
' (ID: 145266)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.034380361437797546
    2. '))' → logprob: -4.0343804359436035
    3. ']))' → logprob: -4.7843804359436035
    4. ')):
' → logprob: -5.6593804359436035
    5. ']):' → logprob: -6.2843804359436035
    6. '])):
' → logprob: -6.6593804359436035
    7. ')' → logprob: -7.5343804359436035
    8. '):' → logprob: -8.534379959106445
    9. '[' → logprob: -8.909379959106445
    10. ')):
' → logprob: -10.284379959106445

Token 98: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027020431589335203
    2. ':' → logprob: -6.252702236175537
    3. ' :' → logprob: -8.127701759338379
    4. ' if' → logprob: -8.627701759338379
    5. '            
' → logprob: -9.127701759338379
    6. ':
' → logprob: -10.127701759338379
    7. ',' → logprob: -10.377701759338379
    8. '<|end|>' → logprob: -10.377701759338379
    9. '          ' → logprob: -11.002701759338379
    10. 'if' → logprob: -11.127701759338379

Token 99: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5558006763458252
    2. ' if' → logprob: -1.4308006763458252
    3. '               ' → logprob: -1.8058006763458252
    4. 'if' (adapté à ' if') → logprob: -4.930800437927246
    5. '            
' → logprob: -5.430800437927246
    6. ' ' → logprob: -5.680800437927246
    7. ' 
' → logprob: -5.930800437927246
    8. '            ' → logprob: -6.430800437927246
    9. '                
' → logprob: -6.555800437927246
    10. '             
' → logprob: -7.430800437927246

Token 100: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.002207712270319462
    2. 'block' → logprob: -6.1272077560424805
    3. '(block' → logprob: -11.25220775604248
    4. '	block' → logprob: -11.75220775604248
    5. ':block' → logprob: -13.62720775604248
    6. ' blocks' → logprob: -16.127206802368164
    7. ' bloc' → logprob: -16.752206802368164
    8. '.block' → logprob: -16.752206802368164
    9. '```' → logprob: -17.127206802368164
    10. ' ' → logprob: -17.377206802368164

Token 101: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00042804674012586474
    2. '[' → logprob: -8.000428199768066
    3. '[c' → logprob: -9.500428199768066
    4. ' [' → logprob: -11.625428199768066
    5. '[
' → logprob: -12.375428199768066
    6. '[row' → logprob: -14.125428199768066
    7. '[s' → logprob: -14.375428199768066
    8. '[n' → logprob: -15.000428199768066
    9. '[t' → logprob: -15.000428199768066
    10. '][' → logprob: -15.125428199768066

Token 102: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020135628059506416
    2. '[c' → logprob: -4.020135402679443
    3. ']' → logprob: -6.645135402679443
    4. '[' → logprob: -7.895135402679443
    5. '[r' → logprob: -8.895135879516602
    6. ' ][' → logprob: -9.520135879516602
    7. ''][' → logprob: -10.145135879516602
    8. ']][' → logprob: -11.645135879516602
    9. '"][' → logprob: -11.770135879516602
    10. '[
' → logprob: -11.770135879516602

Token 103: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5928495486150496e-05
    2. ' c' → logprob: -11.625016212463379
    3. '][' → logprob: -12.000016212463379
    4. ')c' → logprob: -14.875016212463379
    5. '<|end|>' → logprob: -15.625016212463379
    6. ']' → logprob: -15.875016212463379
    7. '   ' → logprob: -16.875015258789062
    8. '	c' → logprob: -17.250015258789062
    9. '[c' → logprob: -17.500015258789062
    10. ' ' → logprob: -17.625015258789062

Token 104: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6201362013816833
    2. ']' → logprob: -1.3701362609863281
    3. '==' → logprob: -2.370136260986328
    4. ')' → logprob: -2.495136260986328
    5. ' !=' → logprob: -3.995136260986328
    6. ' ' → logprob: -5.370136260986328
    7. '!=' → logprob: -5.995136260986328
    8. '=' → logprob: -6.495136260986328
    9. ']==' → logprob: -6.620136260986328
    10. ' ]' → logprob: -7.245136260986328

Token 105: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.37342631816864014
    2. '==' → logprob: -1.4984263181686401
    3. ' !=' → logprob: -2.7484264373779297
    4. '!=' → logprob: -3.8734264373779297
    5. ' ' → logprob: -6.49842643737793
    6. '=' → logprob: -7.49842643737793
    7. ')' → logprob: -7.99842643737793
    8. '=='' → logprob: -8.49842643737793
    9. ' not' → logprob: -8.62342643737793
    10. '#' → logprob: -9.24842643737793

Token 106: ' '#' (ID: 11284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7166059017181396
    2. ''#' → logprob: -0.7166059017181396
    3. ''*' → logprob: -4.091606140136719
    4. ' '#'' → logprob: -6.091606140136719
    5. '"' → logprob: -6.466606140136719
    6. '"#' → logprob: -7.216606140136719
    7. ' '' → logprob: -7.341606140136719
    8. ''x' → logprob: -8.091606140136719
    9. ''a' → logprob: -8.966606140136719
    10. ''t' → logprob: -9.091606140136719

Token 107: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5196162462234497
    2. ':' → logprob: -1.1446162462234497
    3. '):' → logprob: -2.64461612701416
    4. ''):' → logprob: -4.76961612701416
    5. ')' → logprob: -5.51961612701416
    6. ''' → logprob: -7.14461612701416
    7. ' ':' → logprob: -7.51961612701416
    8. ']:' → logprob: -8.01961612701416
    9. '':
' → logprob: -8.01961612701416
    10. ' '' → logprob: -8.14461612701416

Token 108: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05523305386304855
    2. ' tiles' → logprob: -3.3052330017089844
    3. '                
' → logprob: -5.180233001708984
    4. 'tiles' → logprob: -5.555233001708984
    5. ' ' → logprob: -6.055233001708984
    6. '                ' → logprob: -6.555233001708984
    7. '           ' → logprob: -7.430233001708984
    8. '.tiles' → logprob: -7.430233001708984
    9. 'tokens' → logprob: -7.930233001708984
    10. '            ' → logprob: -8.305233001708984

Token 109: ' tiles' (ID: 33001)
  Prédit: ' tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -0.009902702644467354
    2. 'tiles' (adapté à ' tiles') → logprob: -4.634902477264404
    3. '               ' → logprob: -9.884902954101562
    4. '                
' → logprob: -10.509902954101562
    5. '.tiles' → logprob: -10.634902954101562
    6. '                ' → logprob: -11.009902954101562
    7. '_tiles' → logprob: -11.384902954101562
    8. ' t' → logprob: -12.259902954101562
    9. ' tile' → logprob: -13.134902954101562
    10. ' 
' → logprob: -13.259902954101562

Token 110: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10076641291379929
    2. '.' → logprob: -2.35076642036438
    3. ' .' → logprob: -7.725766181945801
    4. '               ' → logprob: -9.4757661819458
    5. '                   ' → logprob: -11.8507661819458
    6. '           ' → logprob: -12.2257661819458
    7. ').' → logprob: -12.6007661819458
    8. '.push' → logprob: -12.7257661819458
    9. '.add' → logprob: -12.7257661819458
    10. '<|end|>' → logprob: -12.7257661819458

Token 111: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44918543100357056
    2. '((' → logprob: -1.6991853713989258
    3. ' (' → logprob: -1.8241853713989258
    4. '(r' → logprob: -4.074185371398926
    5. ' ((' → logprob: -8.324185371398926
    6. '(block' → logprob: -8.574185371398926
    7. '(c' → logprob: -9.199185371398926
    8. '(
' → logprob: -10.074185371398926
    9. '(row' → logprob: -11.074185371398926
    10. '   ' → logprob: -11.824185371398926

Token 112: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00017970333283301443
    2. ' r' → logprob: -8.625179290771484
    3. 'c' → logprob: -16.750179290771484
    4. '   ' → logprob: -17.375179290771484
    5. '(r' → logprob: -18.125179290771484
    6. '	r' → logprob: -18.250179290771484
    7. ' (' → logprob: -18.625179290771484
    8. ')' → logprob: -19.125179290771484
    9. '_r' → logprob: -19.250179290771484
    10. ',r' → logprob: -19.625179290771484

Token 113: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011604580795392394
    2. ',c' → logprob: -6.876160621643066
    3. ' ,' → logprob: -9.001160621643066
    4. ',
' → logprob: -12.751160621643066
    5. ',

' → logprob: -15.001160621643066
    6. '‌,' → logprob: -15.376160621643066
    7. ' ' → logprob: -15.751160621643066
    8. '<|end|>' → logprob: -15.876160621643066
    9. '   ' → logprob: -16.00115966796875
    10. ')' → logprob: -16.00115966796875

Token 114: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07904401421546936
    2. ')' → logprob: -2.5790441036224365
    3. '))
' → logprob: -8.954044342041016
    4. ')))' → logprob: -10.829044342041016
    5. ')
' → logprob: -12.954044342041016
    6. ' ))' → logprob: -13.954044342041016
    7. '       ' → logprob: -14.329044342041016
    8. '),' → logprob: -14.954044342041016
    9. '   ' → logprob: -15.579044342041016
    10. ''))' → logprob: -15.829044342041016

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07647833973169327
    2. ' return' → logprob: -3.2014782428741455
    3. '
' → logprob: -3.9514782428741455
    4. 'return' → logprob: -4.826478481292725
    5. '	return' → logprob: -5.826478481292725
    6. '    
' → logprob: -6.326478481292725
    7. ' ' → logprob: -8.701478004455566
    8. ' 
' → logprob: -8.951478004455566
    9. ':return' → logprob: -8.951478004455566
    10. ')' → logprob: -9.076478004455566

Token 116: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2506762444972992
    2. ' return' → logprob: -1.7506762742996216
    3. '   ' → logprob: -3.125676155090332
    4. '
' → logprob: -6.375676155090332
    5. '    
' → logprob: -7.000676155090332
    6. '	return' → logprob: -7.625676155090332
    7. ' ' → logprob: -7.875676155090332
    8. ')' → logprob: -8.625676155090332
    9. ':return' → logprob: -8.625676155090332
    10. '  
' → logprob: -9.500676155090332

Token 117: ' tiles' (ID: 33001)
  Prédit: ' tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -0.2014141082763672
    2. 'tiles' → logprob: -1.7014141082763672
    3. '.tiles' → logprob: -14.701414108276367
    4. 'tile' → logprob: -15.576414108276367
    5. '_tiles' → logprob: -16.451414108276367
    6. ' tile' → logprob: -16.826414108276367
    7. ' ' → logprob: -17.451414108276367
    8. 'til' → logprob: -17.826414108276367
    9. 'tokens' → logprob: -18.076414108276367
    10. 'Tiles' → logprob: -18.326414108276367

Token 118: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18544931709766388
    2. '

' → logprob: -2.3104493618011475
    3. 'def' → logprob: -2.8104493618011475
    4. '<|end|>' → logprob: -4.685449123382568
    5. '```' → logprob: -9.435449600219727
    6. '\n' → logprob: -9.435449600219727
    7. '<|end|>' → logprob: -9.560449600219727
    8. ' 
' → logprob: -9.935449600219727
    9. '[' → logprob: -9.935449600219727
    10. '  
' → logprob: -9.935449600219727

Token 119: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2731252610683441
    2. 'def' → logprob: -1.5231252908706665
    3. '

' → logprob: -4.023125171661377
    4. '```' → logprob: -7.273125171661377
    5. 'd' → logprob: -7.398125171661377
    6. '\' → logprob: -7.523125171661377
    7. '<|end|>' → logprob: -7.523125171661377
    8. '
' → logprob: -8.898125648498535
    9. '  
' → logprob: -8.898125648498535
    10. ' 
' → logprob: -9.523125648498535

Token 120: ' can' (ID: 665)
  Prédit: ' normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normalize' → logprob: -0.8833000659942627
    2. ' is' → logprob: -1.5083000659942627
    3. ' rotate' → logprob: -2.6333000659942627
    4. ' get' → logprob: -3.2583000659942627
    5. ' find' → logprob: -3.3833000659942627
    6. ' count' → logprob: -3.3833000659942627
    7. 'normalize' → logprob: -3.3833000659942627
    8. ' can' → logprob: -3.6333000659942627
    9. 'is' → logprob: -4.133299827575684
    10. ' place' → logprob: -4.383299827575684

Token 121: '_place' (ID: 81501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4879797399044037
    2. '_place' → logprob: -0.9879797697067261
    3. '_move' → logprob: -5.862979888916016
    4. ' _' → logprob: -6.112979888916016
    5. '_insert' → logprob: -6.612979888916016
    6. '_p' → logprob: -6.862979888916016
    7. '_use' → logprob: -6.987979888916016
    8. '_rotate' → logprob: -7.112979888916016
    9. '_accept' → logprob: -7.362979888916016
    10. '_continue' → logprob: -7.487979888916016

Token 122: '(board' (ID: 41261)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.25685423612594604
    2. '(' → logprob: -1.5068542957305908
    3. ' (' → logprob: -5.381854057312012
    4. '(tile' → logprob: -8.756854057312012
    5. '(board' → logprob: -9.881854057312012
    6. '(grid' → logprob: -10.381854057312012
    7. '(
' → logprob: -11.381854057312012
    8. '(space' → logprob: -11.506854057312012
    9. '(parent' → logprob: -11.881854057312012
    10. ' block' → logprob: -12.131854057312012

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09212739020586014
    2. '(board' → logprob: -2.7171273231506348
    3. '(block' → logprob: -4.217127323150635
    4. ' ,' → logprob: -4.967127323150635
    5. '(' → logprob: -9.217127799987793
    6. '   ' → logprob: -10.467127799987793
    7. '	board' → logprob: -10.717127799987793
    8. ' (' → logprob: -11.092127799987793
    9. ',b' → logprob: -11.592127799987793
    10. ')' → logprob: -11.842127799987793

Token 124: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.10852859914302826
    2. ' tiles' → logprob: -2.9835286140441895
    3. 'block' → logprob: -3.6085286140441895
    4. ' tile' → logprob: -4.7335286140441895
    5. ' piece' → logprob: -4.9835286140441895
    6. ' shape' → logprob: -5.4835286140441895
    7. 'tiles' → logprob: -6.6085286140441895
    8. ' r' → logprob: -6.6085286140441895
    9. 'tile' → logprob: -7.1085286140441895
    10. 'r' → logprob: -7.6085286140441895

Token 125: '_tiles' (ID: 147480)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010926496179308742
    2. ',r' → logprob: -9.500109672546387
    3. ' ,' → logprob: -10.500109672546387
    4. ',row' → logprob: -12.750109672546387
    5. '   ' → logprob: -12.875109672546387
    6. '):' → logprob: -14.875109672546387
    7. ',
' → logprob: -15.250109672546387
    8. ' ' → logprob: -15.875109672546387
    9. ',b' → logprob: -16.37510871887207
    10. '_,' → logprob: -16.37510871887207

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005778160993941128
    2. ' ,' → logprob: -7.500577926635742
    3. ',r' → logprob: -10.750577926635742
    4. '   ' → logprob: -13.750577926635742
    5. ',row' → logprob: -14.750577926635742
    6. ',b' → logprob: -15.000577926635742
    7. ',pos' → logprob: -15.875577926635742
    8. ',
' → logprob: -16.000577926635742
    9. '):' → logprob: -16.000577926635742
    10. ',n' → logprob: -16.125577926635742

Token 127: ' start' (ID: 1604)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.5399987101554871
    2. 'top' → logprob: -2.039998769760132
    3. 'r' → logprob: -2.289998769760132
    4. ' r' → logprob: -2.664998769760132
    5. 'br' → logprob: -3.539998769760132
    6. ' start' → logprob: -4.039998531341553
    7. 'start' → logprob: -4.164998531341553
    8. ' br' → logprob: -4.164998531341553
    9. 'row' → logprob: -4.664998531341553
    10. ' row' → logprob: -4.914998531341553

Token 128: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.3189789950847626
    2. '_row' → logprob: -1.443979024887085
    3. '):' → logprob: -3.568979024887085
    4. '_pos' → logprob: -5.068978786468506
    5. ')' → logprob: -6.693978786468506
    6. ',' → logprob: -7.193978786468506
    7. '_' → logprob: -8.193979263305664
    8. '_position' → logprob: -9.818979263305664
    9. '_x' → logprob: -9.818979263305664
    10. 'row' → logprob: -9.943979263305664

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026765360962599516
    2. ' ,' → logprob: -8.25026798248291
    3. ',int' → logprob: -13.00026798248291
    4. ',start' → logprob: -13.00026798248291
    5. ',
' → logprob: -14.25026798248291
    6. '‌,' → logprob: -15.12526798248291
    7. ',n' → logprob: -16.125267028808594
    8. ',r' → logprob: -16.375267028808594
    9. ',c' → logprob: -16.500267028808594
    10. ',current' → logprob: -16.500267028808594

Token 130: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.12693744897842407
    2. 'start' → logprob: -2.1269373893737793
    3. ' ' → logprob: -12.376937866210938
    4. ',start' → logprob: -13.876937866210938
    5. '    ' → logprob: -14.126937866210938
    6. ')' → logprob: -14.251937866210938
    7. ',' → logprob: -14.376937866210938
    8. '   ' → logprob: -14.501937866210938
    9. '	start' → logprob: -15.126937866210938
    10. ' 
' → logprob: -15.126937866210938

Token 131: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0011767742689698935
    2. '_r' → logprob: -7.251176834106445
    3. ',' → logprob: -8.501176834106445
    4. '_,' → logprob: -8.751176834106445
    5. '_' → logprob: -10.001176834106445
    6. ')' → logprob: -10.626176834106445
    7. ',c' → logprob: -11.626176834106445
    8. '_)' → logprob: -12.126176834106445
    9. ',_' → logprob: -12.251176834106445
    10. ' _' → logprob: -12.751176834106445

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003710894088726491
    2. ',' → logprob: -8.500370979309082
    3. ')' → logprob: -9.500370979309082
    4. ' ):' → logprob: -9.625370979309082
    5. '):
' → logprob: -10.625370979309082
    6. ':' → logprob: -13.750370979309082
    7. '   ' → logprob: -14.250370979309082
    8. ' ,' → logprob: -15.250370979309082
    9. ' )' → logprob: -17.2503719329834
    10. ' ' → logprob: -17.2503719329834

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10654325783252716
    2. ':' → logprob: -3.2315433025360107
    3. ' ' → logprob: -3.3565433025360107
    4. ' :' → logprob: -4.856543064117432
    5. ' 
' → logprob: -5.481543064117432
    6. '    ' → logprob: -5.481543064117432
    7. ' :
' → logprob: -5.981543064117432
    8. '    
' → logprob: -6.481543064117432
    9. ':
' → logprob: -6.731543064117432
    10. ')' → logprob: -6.981543064117432

Token 134: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17385812103748322
    2. ' for' → logprob: -1.9238581657409668
    3. ' ' → logprob: -5.423858165740967
    4. ' 
' → logprob: -5.673858165740967
    5. 'for' → logprob: -6.048858165740967
    6. '    ' → logprob: -6.673858165740967
    7. '    
' → logprob: -7.173858165740967
    8. ':' → logprob: -8.923857688903809
    9. ' (' → logprob: -8.923857688903809
    10. '   
' → logprob: -8.923857688903809

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1372278481721878
    2. '=' → logprob: -2.137227773666382
    3. ',' → logprob: -4.637228012084961
    4. ')' → logprob: -8.137228012084961
    5. '   ' → logprob: -9.637228012084961
    6. ' ' → logprob: -9.762228012084961
    7. '=len' → logprob: -9.887228012084961
    8. ' =
' → logprob: -10.387228012084961
    9. ' ,' → logprob: -10.762228012084961
    10. ' board' → logprob: -11.012228012084961

Token 136: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.47407984733581543
    2. 'len' → logprob: -0.9740798473358154
    3. '(len' → logprob: -13.099080085754395
    4. '=len' → logprob: -14.724080085754395
    5. '[len' → logprob: -15.599080085754395
    6. ',len' → logprob: -16.474079132080078
    7. '	len' → logprob: -17.099079132080078
    8. '   ' → logprob: -17.474079132080078
    9. ' ' → logprob: -18.349079132080078
    10. '<len' → logprob: -18.599079132080078

Token 137: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.0015411654021590948
    2. '(block' → logprob: -6.5015411376953125
    3. '(' → logprob: -10.251541137695312
    4. ' board' → logprob: -13.501541137695312
    5. 'board' → logprob: -13.751541137695312
    6. '	board' → logprob: -14.376541137695312
    7. ' (' → logprob: -16.001541137695312
    8. '(
' → logprob: -16.376541137695312
    9. '(b' → logprob: -16.376541137695312
    10. '(Board' → logprob: -16.501541137695312

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043119657784700394
    2. ')
' → logprob: -3.1681196689605713
    3. '   ' → logprob: -9.418119430541992
    4. '[' → logprob: -10.543119430541992
    5. ' )' → logprob: -11.668119430541992
    6. ')
' → logprob: -13.918119430541992
    7. ' )
' → logprob: -13.918119430541992
    8. ')

' → logprob: -13.918119430541992
    9. ' ' → logprob: -14.793119430541992
    10. '#' → logprob: -15.293119430541992

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011662358418107033
    2. ' W' → logprob: -4.761662483215332
    3. '<|end|>' → logprob: -6.261662483215332
    4. '    ' → logprob: -8.261662483215332
    5. 'W' → logprob: -8.511662483215332
    6. '    
' → logprob: -8.636662483215332
    7. '  ' → logprob: -8.886662483215332
    8. '	W' → logprob: -9.386662483215332
    9. ' ' → logprob: -9.886662483215332
    10. ' 
' → logprob: -10.011662483215332

Token 140: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.5786512494087219
    2. ' W' → logprob: -0.8286512494087219
    3. '   ' → logprob: -5.953651428222656
    4. ' ' → logprob: -9.453651428222656
    5. '  ' → logprob: -10.953651428222656
    6. '    ' → logprob: -11.953651428222656
    7. '
' → logprob: -12.703651428222656
    8. '```' → logprob: -13.453651428222656
    9. '	W' → logprob: -13.703651428222656
    10. ' 
' → logprob: -13.828651428222656

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008625687099993229
    2. '=' → logprob: -4.758625507354736
    3. ' ' → logprob: -12.258625984191895
    4. '   ' → logprob: -13.258625984191895
    5. '(board' → logprob: -13.883625984191895
    6. ')' → logprob: -14.008625984191895
    7. '<|end|>' → logprob: -14.008625984191895
    8. '=len' → logprob: -14.133625984191895
    9. ' =
' → logprob: -14.133625984191895
    10. '[' → logprob: -15.133625984191895

Token 142: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519330680370331
    2. ' len' → logprob: -1.5019330978393555
    3. '[len' → logprob: -12.876933097839355
    4. '(len' → logprob: -13.626933097839355
    5. '	len' → logprob: -16.25193214416504
    6. '=len' → logprob: -16.37693214416504
    7. '<len' → logprob: -17.25193214416504
    8. ',len' → logprob: -18.87693214416504
    9. ' ' → logprob: -19.12693214416504
    10. '   ' → logprob: -19.50193214416504

Token 143: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -1.0445127372804563e-05
    2. 'board' → logprob: -11.50001049041748
    3. '(block' → logprob: -15.87501049041748
    4. ' board' → logprob: -16.750009536743164
    5. '(' → logprob: -17.375009536743164
    6. '	board' → logprob: -18.000009536743164
    7. '.board' → logprob: -19.875009536743164
    8. '(
' → logprob: -20.125009536743164
    9. ' (' → logprob: -20.875009536743164
    10. '(Board' → logprob: -21.125009536743164

Token 144: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020473242329899222
    2. ')' → logprob: -8.500205039978027
    3. ')[' → logprob: -14.250205039978027
    4. ')
' → logprob: -15.500205039978027
    5. '   ' → logprob: -15.625205039978027
    6. '0' → logprob: -16.37520408630371
    7. '```' → logprob: -16.50020408630371
    8. ' [' → logprob: -17.62520408630371
    9. '[
' → logprob: -18.37520408630371
    10. ' ' → logprob: -18.37520408630371

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043026819825172424
    2. '[' → logprob: -3.168026924133301
    3. 'board' → logprob: -11.4180269241333
    4. '   ' → logprob: -12.0430269241333
    5. ' ' → logprob: -12.7930269241333
    6. ' board' → logprob: -12.7930269241333
    7. '(' → logprob: -12.9180269241333
    8. '```' → logprob: -14.0430269241333
    9. '
' → logprob: -14.5430269241333
    10. '(board' → logprob: -14.6680269241333

Token 146: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003365350130479783
    2. '])' → logprob: -8.250336647033691
    3. ')
' → logprob: -10.000336647033691
    4. ']' → logprob: -11.625336647033691
    5. ')]' → logprob: -11.625336647033691
    6. ' )' → logprob: -11.750336647033691
    7. ')])' → logprob: -13.500336647033691
    8. '   ' → logprob: -13.625336647033691
    9. '))' → logprob: -14.375336647033691
    10. '）' → logprob: -15.375336647033691

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14818595349788666
    2. '
' → logprob: -2.648185968399048
    3. ' for' → logprob: -3.523185968399048
    4. '    
' → logprob: -4.398185729980469
    5. 'for' → logprob: -4.773185729980469
    6. '  
' → logprob: -4.898185729980469
    7. '<|end|>' → logprob: -5.523185729980469
    8. ' 
' → logprob: -6.273185729980469
    9. '   
' → logprob: -6.648185729980469
    10. '	for' → logprob: -7.148185729980469

Token 148: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.035530466586351395
    2. 'for' (adapté à ' for') → logprob: -3.5355305671691895
    3. '   ' → logprob: -5.1605305671691895
    4. '
' → logprob: -11.410530090332031
    5. '    
' → logprob: -12.285530090332031
    6. '	for' → logprob: -12.535530090332031
    7. ' 
' → logprob: -12.785530090332031
    8. '```' → logprob: -14.035530090332031
    9. '    ' → logprob: -14.160530090332031
    10. ' ' → logprob: -15.035530090332031

Token 149: ' (' (ID: 350)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.9535729289054871
    2. 'r' → logprob: -1.2035729885101318
    3. ' dr' → logprob: -1.7035729885101318
    4. ' (' → logprob: -3.078572988510132
    5. '(r' → logprob: -3.578572988510132
    6. 'dr' → logprob: -4.203572750091553
    7. ' tile' → logprob: -4.328572750091553
    8. ' br' → logprob: -5.078572750091553
    9. 'tr' → logprob: -5.203572750091553
    10. '(' → logprob: -5.453572750091553

Token 150: 'br' (ID: 1697)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.055259790271520615
    2. 'dr' → logprob: -3.6802597045898438
    3. ' dr' → logprob: -4.430259704589844
    4. ' r' → logprob: -5.180259704589844
    5. 'tr' → logprob: -5.180259704589844
    6. 'tile' → logprob: -5.930259704589844
    7. 'br' → logprob: -6.180259704589844
    8. ' tile' → logprob: -8.180259704589844
    9. ' tr' → logprob: -9.055259704589844
    10. ' br' → logprob: -9.555259704589844

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014773675939068198
    2. ' ,' → logprob: -7.001477241516113
    3. ',r' → logprob: -8.126477241516113
    4. '_r' → logprob: -10.001477241516113
    5. ',c' → logprob: -10.126477241516113
    6. ',b' → logprob: -10.126477241516113
    7. '),' → logprob: -10.501477241516113
    8. 'r' → logprob: -10.501477241516113
    9. '   ' → logprob: -10.626477241516113
    10. ',_' → logprob: -10.876477241516113

Token 152: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.014164921827614307
    2. ' bc' → logprob: -4.264164924621582
    3. 'bcc' → logprob: -13.639164924621582
    4. '_bc' → logprob: -16.389163970947266
    5. '   ' → logprob: -16.639163970947266
    6. ' ' → logprob: -17.139163970947266
    7. 'Bc' → logprob: -17.514163970947266
    8. 'bs' → logprob: -19.264163970947266
    9. '.bc' → logprob: -19.514163970947266
    10. '  ' → logprob: -19.639163970947266

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006597769097425044
    2. ' )' → logprob: -7.500659942626953
    3. 'in' → logprob: -9.500659942626953
    4. '),' → logprob: -11.125659942626953
    5. ' in' → logprob: -11.250659942626953
    6. '   ' → logprob: -13.375659942626953
    7. '    ' → logprob: -13.750659942626953
    8. '),(' → logprob: -14.875659942626953
    9. ')
' → logprob: -15.375659942626953
    10. ' ),' → logprob: -15.500659942626953

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05012169107794762
    2. 'in' → logprob: -3.050121784210205
    3. ',' → logprob: -6.550121784210205
    4. ' ,' → logprob: -9.675121307373047
    5. ')' → logprob: -10.675121307373047
    6. ' ' → logprob: -11.675121307373047
    7. '   ' → logprob: -13.175121307373047
    8. '  ' → logprob: -13.175121307373047
    9. ',in' → logprob: -13.675121307373047
    10. 's' → logprob: -14.300121307373047

Token 155: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.5759589672088623
    2. ' block' → logprob: -0.8259589672088623
    3. '	block' → logprob: -11.825959205627441
    4. ':block' → logprob: -12.575959205627441
    5. '   ' → logprob: -12.950959205627441
    6. ' ' → logprob: -13.200959205627441
    7. '(block' → logprob: -13.325959205627441
    8. '    ' → logprob: -14.075959205627441
    9. ')' → logprob: -15.075959205627441
    10. '<|end|>' → logprob: -15.075959205627441

Token 156: '_tiles' (ID: 147480)
  Prédit: '_tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -3.054500666621607e-06
    2. 'tiles' → logprob: -13.87500286102295
    3. '   ' → logprob: -14.37500286102295
    4. ')_' → logprob: -15.12500286102295
    5. '_' → logprob: -15.12500286102295
    6. '```' → logprob: -15.25000286102295
    7. '_tokens' → logprob: -15.75000286102295
    8. ')' → logprob: -15.87500286102295
    9. ' _' → logprob: -16.250003814697266
    10. '.tiles' → logprob: -17.375003814697266

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005039428360760212
    2. ':
' → logprob: -8.250503540039062
    3. '<|end|>' → logprob: -8.750503540039062
    4. '):' → logprob: -9.875503540039062
    5. ' :' → logprob: -10.875503540039062
    6. '<|end|>' → logprob: -12.375503540039062
    7. ',' → logprob: -12.875503540039062
    8. '):
' → logprob: -13.125503540039062
    9. '   ' → logprob: -13.875503540039062
    10. ':**' → logprob: -13.875503540039062

Token 158: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.32573285698890686
    2. ' if' → logprob: -1.9507328271865845
    3. '       ' → logprob: -2.950732946395874
    4. 'r' (adapté à ' r') → logprob: -3.700732946395874
    5. ' 
' → logprob: -3.700732946395874
    6. '
' → logprob: -4.075732707977295
    7. '        
' → logprob: -4.950732707977295
    8. ' new' → logprob: -5.575732707977295
    9. 'if' → logprob: -6.700732707977295
    10. ' ' → logprob: -6.700732707977295

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06198146939277649
    2. ' =' → logprob: -2.811981439590454
    3. '=start' → logprob: -11.311981201171875
    4. ',' → logprob: -14.311981201171875
    5. '=
' → logprob: -14.686981201171875
    6. ')' → logprob: -15.811981201171875
    7. '=

' → logprob: -16.186981201171875
    8. '=}' → logprob: -16.561981201171875
    9. 's' → logprob: -16.686981201171875
    10. ' ' → logprob: -16.811981201171875

Token 161: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.061968132853507996
    2. ' start' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.686967849731445
    4. ' ' → logprob: -16.561967849731445
    5. '
' → logprob: -16.936967849731445
    6. '<|end|>' → logprob: -17.061967849731445
    7. '[start' → logprob: -17.186967849731445
    8. 'star' → logprob: -17.311967849731445
    9. '	start' → logprob: -17.436967849731445
    10. '```' → logprob: -17.936967849731445

Token 162: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -6.158350151963532e-05
    2. '_c' → logprob: -9.875061988830566
    3. '_' → logprob: -11.750061988830566
    4. 'r' → logprob: -13.625061988830566
    5. ' _' → logprob: -14.125061988830566
    6. '_s' → logprob: -16.00006103515625
    7. '```' → logprob: -18.12506103515625
    8. '_i' → logprob: -18.25006103515625
    9. '_b' → logprob: -18.37506103515625
    10. ')' → logprob: -18.37506103515625

Token 163: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193077325820923
    2. '+' → logprob: -1.5019307136535645
    3. '+r' → logprob: -14.251931190490723
    4. ' +
' → logprob: -14.751931190490723
    5. '<|end|>' → logprob: -15.376931190490723
    6. ' plus' → logprob: -15.876931190490723
    7. '+
' → logprob: -16.001930236816406
    8. ')' → logprob: -17.251930236816406
    9. '+b' → logprob: -17.376930236816406
    10. ' ' → logprob: -17.501930236816406

Token 164: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.011049231514334679
    2. ' br' → logprob: -4.511049270629883
    3. 'bc' → logprob: -14.511049270629883
    4. 'r' → logprob: -14.886049270629883
    5. 'b' → logprob: -15.261049270629883
    6. '	br' → logprob: -15.261049270629883
    7. '   ' → logprob: -17.511049270629883
    8. ' ' → logprob: -17.761049270629883
    9. '(br' → logprob: -17.886049270629883
    10. '
' → logprob: -18.261049270629883

Token 165: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25108328461647034
    2. '       ' → logprob: -1.876083254814148
    3. '<|end|>' → logprob: -2.7510833740234375
    4. '   ' → logprob: -6.6260833740234375
    5. ' if' → logprob: -6.7510833740234375
    6. ' 
' → logprob: -7.2510833740234375
    7. ' ' → logprob: -7.6260833740234375
    8. '  
' → logprob: -8.001083374023438
    9. '        
' → logprob: -8.376083374023438
    10. '<|end|>' → logprob: -8.501083374023438

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10351520031690598
    2. '<|end|>' → logprob: -2.728515148162842
    3. '
' → logprob: -3.603515148162842
    4. ' if' → logprob: -5.853515148162842
    5. ' ' → logprob: -6.978515148162842
    6. ' <' → logprob: -7.853515148162842
    7. ' 
' → logprob: -7.853515148162842
    8. '   ' → logprob: -7.978515148162842
    9. '  
' → logprob: -8.728515625
    10. 'if' → logprob: -8.728515625

Token 167: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1002412959933281
    2. 'c' (adapté à ' c') → logprob: -2.350241184234619
    3. ' ' → logprob: -11.100241661071777
    4. '       ' → logprob: -12.100241661071777
    5. '    ' → logprob: -12.475241661071777
    6. '   ' → logprob: -13.225241661071777
    7. ''' → logprob: -13.475241661071777
    8. ' 
' → logprob: -13.600241661071777
    9. '        ' → logprob: -14.475241661071777
    10. ' ' → logprob: -14.725241661071777

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32054537534713745
    2. '=' → logprob: -1.3205454349517822
    3. '<|end|>' → logprob: -5.070545196533203
    4. ' ' → logprob: -7.820545196533203
    5. ' +' → logprob: -8.695545196533203
    6. ' +=' → logprob: -9.195545196533203
    7. '<|end|>' → logprob: -9.570545196533203
    8. '+' → logprob: -9.695545196533203
    9. ')' → logprob: -9.945545196533203
    10. '=start' → logprob: -10.195545196533203

Token 169: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.01815006136894226
    2. ' start' → logprob: -4.0181498527526855
    3. '[start' → logprob: -16.393150329589844
    4. '(start' → logprob: -17.268150329589844
    5. '_start' → logprob: -17.768150329589844
    6. ' ' → logprob: -17.893150329589844
    7. '	start' → logprob: -18.393150329589844
    8. '=start' → logprob: -18.893150329589844
    9. 'star' → logprob: -19.768150329589844
    10. '   ' → logprob: -19.893150329589844

Token 170: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -12.87500286102295
    3. '_r' → logprob: -14.87500286102295
    4. 'c' → logprob: -15.12500286102295
    5. 'C' → logprob: -17.250003814697266
    6. '+' → logprob: -18.125003814697266
    7. '_C' → logprob: -19.125003814697266
    8. '+c' → logprob: -19.875003814697266
    9. '_b' → logprob: -20.125003814697266
    10. '_
' → logprob: -20.750003814697266

Token 171: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' bc' (ID: 51743)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0036582681350409985
    2. ' start' → logprob: -5.628658294677734
    3. 'bc' → logprob: -9.878658294677734
    4. ' ' → logprob: -12.503658294677734
    5. '(start' → logprob: -14.503658294677734
    6. '=start' → logprob: -14.753658294677734
    7. '0' → logprob: -14.878658294677734
    8. 'c' → logprob: -15.253658294677734
    9. '[start' → logprob: -15.378658294677734
    10. '  ' → logprob: -15.378658294677734

Token 173: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38118839263916016
    2. '       ' → logprob: -1.3811883926391602
    3. '<|end|>' → logprob: -3.88118839263916
    4. ' 
' → logprob: -4.25618839263916
    5. ' if' → logprob: -4.50618839263916
    6. '        
' → logprob: -4.75618839263916
    7. '  
' → logprob: -5.00618839263916
    8. '   ' → logprob: -6.00618839263916
    9. '    
' → logprob: -7.13118839263916
    10. '   
' → logprob: -8.13118839263916

Token 175: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03839511424303055
    2. 'if' (adapté à ' if') → logprob: -3.2883951663970947
    3. ' ' → logprob: -8.913394927978516
    4. '       ' → logprob: -9.288394927978516
    5. ' 
' → logprob: -9.288394927978516
    6. '   ' → logprob: -11.413394927978516
    7. ' i' → logprob: -12.288394927978516
    8. '
' → logprob: -12.538394927978516
    9. '    ' → logprob: -12.538394927978516
    10. ')' → logprob: -13.288394927978516

Token 176: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.011687691323459148
    2. 'r' → logprob: -4.511687755584717
    3. ' not' → logprob: -7.386687755584717
    4. 'not' → logprob: -11.761687278747559
    5. ' c' → logprob: -12.511687278747559
    6. ' ' → logprob: -12.886687278747559
    7. '   ' → logprob: -12.886687278747559
    8. ' (' → logprob: -13.386687278747559
    9. '(r' → logprob: -14.511687278747559
    10. 'c' → logprob: -14.636687278747559

Token 177: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3871529698371887
    2. '<' → logprob: -1.137152910232544
    3. ' >=' → logprob: -8.262152671813965
    4. '>=' → logprob: -11.262152671813965
    5. ')' → logprob: -12.137152671813965
    6. '<|end|>' → logprob: -13.137152671813965
    7. ' ' → logprob: -13.387152671813965
    8. ' not' → logprob: -14.512152671813965
    9. ')<' → logprob: -14.512152671813965
    10. '0' → logprob: -14.887152671813965

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715728435665369
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -14.881715774536133
    4. '
' → logprob: -17.756715774536133
    5. '  ' → logprob: -17.819215774536133
    6. '۰' → logprob: -17.944215774536133
    7. '```' → logprob: -18.256715774536133
    8. '<|end|>' → logprob: -18.756715774536133
    9. '    ' → logprob: -19.319215774536133
    10. '       ' → logprob: -19.444215774536133

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.875024795532227
    4. '۰' → logprob: -18.312524795532227
    5. '```' → logprob: -19.375024795532227
    6. '  ' → logprob: -19.375024795532227
    7. '       ' → logprob: -19.625024795532227
    8. '00' → logprob: -19.812524795532227
    9. '     ' → logprob: -20.062524795532227
    10. '
' → logprob: -20.125024795532227

Token 180: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.009825745597481728
    2. 'or' → logprob: -4.634825706481934
    3. '<|end|>' → logprob: -9.634825706481934
    4. ' ' → logprob: -13.009825706481934
    5. '	or' → logprob: -13.134825706481934
    6. '<|end|>' → logprob: -16.50982666015625
    7. ' orun' → logprob: -17.50982666015625
    8. ')' → logprob: -17.75982666015625
    9. '0' → logprob: -18.75982666015625
    10. '```' → logprob: -19.25982666015625

Token 181: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1624700278043747
    2. 'r' → logprob: -1.9124699831008911
    3. ' c' → logprob: -6.412469863891602
    4. 'c' → logprob: -7.537469863891602
    5. ' H' → logprob: -10.662469863891602
    6. 'H' → logprob: -11.037469863891602
    7. ' W' → logprob: -11.662469863891602
    8. ' ' → logprob: -12.287469863891602
    9. '   ' → logprob: -12.287469863891602
    10. '<|end|>' → logprob: -12.787469863891602

Token 182: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5759875774383545
    2. ' >=' → logprob: -0.8259875774383545
    3. ']>=' → logprob: -10.450987815856934
    4. ')>=' → logprob: -11.950987815856934
    5. ' ' → logprob: -12.325987815856934
    6. '<|end|>' → logprob: -12.575987815856934
    7. '>' → logprob: -13.450987815856934
    8. '[' → logprob: -13.950987815856934
    9. '   ' → logprob: -14.325987815856934
    10. '≥' → logprob: -14.575987815856934

Token 183: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.008617054671049118
    2. ' H' → logprob: -4.758616924285889
    3. '   ' → logprob: -13.508617401123047
    4. ' ' → logprob: -14.133617401123047
    5. '	H' → logprob: -15.758617401123047
    6. '
' → logprob: -16.508617401123047
    7. '  ' → logprob: -16.758617401123047
    8. '```' → logprob: -17.883617401123047
    9. '       ' → logprob: -18.383617401123047
    10. '    ' → logprob: -18.508617401123047

Token 184: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0004691610229201615
    2. 'or' → logprob: -7.750469207763672
    3. ' ' → logprob: -10.250469207763672
    4. '<|end|>' → logprob: -13.250469207763672
    5. '	or' → logprob: -13.625469207763672
    6. '    ' → logprob: -17.125469207763672
    7. '       ' → logprob: -17.250469207763672
    8. '  ' → logprob: -17.375469207763672
    9. '        ' → logprob: -17.625469207763672
    10. ':' → logprob: -17.625469207763672

Token 185: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931554675102234
    2. ' c' → logprob: -0.6931554675102234
    3. '   ' → logprob: -13.068155288696289
    4. '           ' → logprob: -13.443155288696289
    5. '    ' → logprob: -13.943155288696289
    6. ' ' → logprob: -13.943155288696289
    7. '       ' → logprob: -13.943155288696289
    8. '<|end|>' → logprob: -14.693155288696289
    9. '  ' → logprob: -15.068155288696289
    10. '	c' → logprob: -15.693155288696289

Token 186: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.29728269577026367
    2. ' >=' → logprob: -1.4222826957702637
    3. '<' → logprob: -4.547282695770264
    4. '>=' → logprob: -5.297282695770264
    5. '<|end|>' → logprob: -8.047283172607422
    6. ' ' → logprob: -9.922283172607422
    7. ')' → logprob: -11.172283172607422
    8. ')>=' → logprob: -12.297283172607422
    9. '[' → logprob: -12.672283172607422
    10. ']>=' → logprob: -12.797283172607422

Token 187: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3485007882118225
    2. ' ' → logprob: -1.2235007286071777
    3. 'W' → logprob: -10.473501205444336
    4. ' W' → logprob: -10.723501205444336
    5. '  ' → logprob: -12.598501205444336
    6. '   ' → logprob: -13.223501205444336
    7. '    ' → logprob: -15.473501205444336
    8. '```' → logprob: -15.911001205444336
    9. ' or' → logprob: -16.098501205444336
    10. ' ' → logprob: -17.036001205444336

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008796324953436852
    2. ' ' → logprob: -4.758796215057373
    3. 'W' → logprob: -8.883796691894531
    4. ' W' → logprob: -10.133796691894531
    5. '  ' → logprob: -13.633796691894531
    6. '   ' → logprob: -14.008796691894531
    7. ' or' → logprob: -14.508796691894531
    8. 'len' → logprob: -15.633796691894531
    9. '    ' → logprob: -15.883796691894531
    10. ' len' → logprob: -16.13379669189453

Token 189: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07004047185182571
    2. 'or' → logprob: -2.695040464401245
    3. ' ' → logprob: -9.945040702819824
    4. ')' → logprob: -10.695040702819824
    5. '<|end|>' → logprob: -10.695040702819824
    6. '	or' → logprob: -12.320040702819824
    7. '>=' → logprob: -13.570040702819824
    8. '>' → logprob: -13.945040702819824
    9. ' >=' → logprob: -14.070040702819824
    10. '  ' → logprob: -14.320040702819824

Token 190: ' c' (ID: 274)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.11282645910978317
    2. ' W' → logprob: -2.237826347351074
    3. ' ' → logprob: -13.362826347351074
    4. '   ' → logprob: -14.362826347351074
    5. '0' → logprob: -14.487826347351074
    6. '  ' → logprob: -14.612826347351074
    7. '	W' → logprob: -15.737826347351074
    8. 'c' → logprob: -15.862826347351074
    9. '    ' → logprob: -16.11282730102539
    10. '=W' → logprob: -16.48782730102539

Token 191: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.22867943346500397
    2. ' >=' → logprob: -1.6036794185638428
    3. '<|end|>' → logprob: -6.353679656982422
    4. ' or' → logprob: -6.978679656982422
    5. 'or' → logprob: -8.103679656982422
    6. ')>=' → logprob: -9.353679656982422
    7. ']>=' → logprob: -9.478679656982422
    8. '>' → logprob: -9.853679656982422
    9. ' ' → logprob: -9.978679656982422
    10. '≥' → logprob: -12.228679656982422

Token 192: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0019452953711152077
    2. ' W' → logprob: -6.251945495605469
    3. '   ' → logprob: -11.751945495605469
    4. ' ' → logprob: -12.126945495605469
    5. '  ' → logprob: -13.376945495605469
    6. '	W' → logprob: -14.751945495605469
    7. '       ' → logprob: -15.001945495605469
    8. '    ' → logprob: -15.251945495605469
    9. '```' → logprob: -15.376945495605469
    10. 'len' → logprob: -15.501945495605469

Token 193: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02723957970738411
    2. ':' → logprob: -3.6522395610809326
    3. 'or' → logprob: -7.402239799499512
    4. '       ' → logprob: -8.777239799499512
    5. ':
' → logprob: -9.527239799499512
    6. ':return' → logprob: -9.652239799499512
    7. '           ' → logprob: -11.527239799499512
    8. '   ' → logprob: -11.652239799499512
    9. '	or' → logprob: -12.277239799499512
    10. '<|end|>' → logprob: -12.402239799499512

Token 194: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6732434034347534
    2. '           ' → logprob: -0.7982434034347534
    3. ' or' → logprob: -3.673243522644043
    4. '
' → logprob: -4.673243522644043
    5. ' return' → logprob: -6.423243522644043
    6. ':' → logprob: -6.798243522644043
    7. ':return' → logprob: -7.423243522644043
    8. '               ' → logprob: -7.548243522644043
    9. 'return' → logprob: -8.173243522644043
    10. '   ' → logprob: -8.173243522644043

Token 195: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8463680744171143
    2. 'return' (adapté à ' return') → logprob: -1.3463680744171143
    3. '           ' → logprob: -1.7213680744171143
    4. '
' → logprob: -3.0963680744171143
    5. '               ' → logprob: -3.2213680744171143
    6. '       ' → logprob: -3.3463680744171143
    7. ' 
' → logprob: -5.346367835998535
    8. 'False' → logprob: -5.721367835998535
    9. ' False' → logprob: -6.096367835998535
    10. '   ' → logprob: -7.221367835998535

Token 196: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.029750484973192215
    2. ' False' → logprob: -3.5297505855560303
    3. 'True' → logprob: -19.52975082397461
    4. '(False' → logprob: -20.15475082397461
    5. ' True' → logprob: -22.40475082397461
    6. 'F' → logprob: -22.40475082397461
    7. 'false' → logprob: -23.15475082397461
    8. '_false' → logprob: -23.27975082397461
    9. '=False' → logprob: -24.02975082397461
    10. ' false' → logprob: -24.40475082397461

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09362993389368057
    2. '
' → logprob: -2.468629837036133
    3. '        
' → logprob: -6.593629837036133
    4. '\n' → logprob: -7.093629837036133
    5. '<|end|>' → logprob: -7.093629837036133
    6. '   ' → logprob: -7.468629837036133
    7. '  
' → logprob: -7.968629837036133
    8. ' 
' → logprob: -8.468629837036133
    9. '    
' → logprob: -8.468629837036133
    10. '\' → logprob: -9.593629837036133

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000559108448214829
    2. '        
' → logprob: -8.000558853149414
    3. ' if' → logprob: -9.250558853149414
    4. '
' → logprob: -10.000558853149414
    5. '   ' → logprob: -10.625558853149414
    6. '  
' → logprob: -11.250558853149414
    7. '    
' → logprob: -11.500558853149414
    8. '           ' → logprob: -12.125558853149414
    9. '<|end|>' → logprob: -12.125558853149414
    10. '            
' → logprob: -12.625558853149414

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09456665813922882
    2. '       ' → logprob: -2.719566583633423
    3. ' if' → logprob: -3.719566583633423
    4. '   ' → logprob: -9.469566345214844
    5. ' ' → logprob: -13.094566345214844
    6. '           ' → logprob: -13.344566345214844
    7. '	if' → logprob: -13.719566345214844
    8. '```' → logprob: -13.844566345214844
    9. '        
' → logprob: -14.094566345214844
    10. 'elif' → logprob: -15.094566345214844

Token 200: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.4755554795265198
    2. ' board' → logprob: -0.9755554795265198
    3. ' not' → logprob: -6.975555419921875
    4. 'not' → logprob: -7.600555419921875
    5. '   ' → logprob: -10.850555419921875
    6. '(board' → logprob: -11.350555419921875
    7. '	board' → logprob: -11.850555419921875
    8. '.board' → logprob: -13.225555419921875
    9. ' ' → logprob: -13.850555419921875
    10. 'boards' → logprob: -15.288055419921875

Token 201: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.750000953674316
    3. 'r' → logprob: -14.875000953674316
    4. '[start' → logprob: -17.875
    5. '[row' → logprob: -18.625
    6. ' [' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. '[c' → logprob: -19.0
    9. '[s' → logprob: -19.125
    10. '][' → logprob: -19.25

Token 202: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00043496055877767503
    2. '[c' → logprob: -8.125434875488281
    3. '[r' → logprob: -9.875434875488281
    4. '[' → logprob: -10.250434875488281
    5. ']' → logprob: -10.375434875488281
    6. ' ][' → logprob: -11.250434875488281
    7. '[start' → logprob: -12.500434875488281
    8. '   ' → logprob: -13.000434875488281
    9. ']==' → logprob: -14.750434875488281
    10. '[row' → logprob: -14.875434875488281

Token 203: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.180258191714529e-06
    2. ' c' → logprob: -12.000008583068848
    3. '   ' → logprob: -14.000008583068848
    4. ']' → logprob: -14.625008583068848
    5. '][' → logprob: -14.750008583068848
    6. ')c' → logprob: -15.750008583068848
    7. '
' → logprob: -16.62500762939453
    8. ' ' → logprob: -17.25000762939453
    9. '```' → logprob: -18.00000762939453
    10. '	c' → logprob: -18.50000762939453

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025191817432641983
    2. ']==' → logprob: -4.150191783905029
    3. ' ]' → logprob: -5.275191783905029
    4. ']!=' → logprob: -5.900191783905029
    5. ']=='' → logprob: -8.025192260742188
    6. ' !=' → logprob: -8.275192260742188
    7. ' ==' → logprob: -8.400192260742188
    8. '==' → logprob: -8.525192260742188
    9. '!=' → logprob: -9.275192260742188
    10. ']!='' → logprob: -9.400192260742188

Token 205: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8455013632774353
    2. ' ==' → logprob: -1.47050142288208
    3. '!=' → logprob: -1.72050142288208
    4. ' !=' → logprob: -1.84550142288208
    5. '!='' → logprob: -6.72050142288208
    6. '=='' → logprob: -7.34550142288208
    7. ')' → logprob: -7.84550142288208
    8. ']==' → logprob: -8.095500946044922
    9. ']' → logprob: -8.095500946044922
    10. '[' → logprob: -8.470500946044922

Token 206: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.3287060260772705
    2. ''' → logprob: -1.9537060260772705
    3. ''.' → logprob: -2.0787060260772705
    4. ''*' → logprob: -4.703705787658691
    5. ''x' → logprob: -5.703705787658691
    6. ' '#'' → logprob: -7.703705787658691
    7. '1' → logprob: -8.578705787658691
    8. ''o' → logprob: -9.703705787658691
    9. ''-' → logprob: -10.453705787658691
    10. ' '' → logprob: -11.078705787658691

Token 207: '':
' (ID: 7669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21001610159873962
    2. ' return' → logprob: -1.960016131401062
    3. '           ' → logprob: -3.5850160121917725
    4. ':return' → logprob: -4.835016250610352
    5. '   ' → logprob: -5.335016250610352
    6. '               ' → logprob: -6.335016250610352
    7. ' ' → logprob: -6.335016250610352
    8. '<|end|>' → logprob: -6.585016250610352
    9. 'return' → logprob: -7.210016250610352
    10. ')' → logprob: -7.585016250610352

Token 209: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.023962927982211113
    2. 'return' (adapté à ' return') → logprob: -4.14896297454834
    3. ' 
' → logprob: -5.77396297454834
    4. '       ' → logprob: -6.14896297454834
    5. '           ' → logprob: -6.52396297454834
    6. ' False' → logprob: -7.27396297454834
    7. 'False' → logprob: -8.77396297454834
    8. '               ' → logprob: -9.14896297454834
    9. '   ' → logprob: -9.39896297454834
    10. '
' → logprob: -10.27396297454834

Token 210: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.002511212369427085
    2. ' False' → logprob: -6.002511024475098
    3. 'True' → logprob: -10.252511024475098
    4. ' True' → logprob: -15.252511024475098
    5. 'F' → logprob: -20.002511978149414
    6. '(False' → logprob: -20.377511978149414
    7. 'Fal' → logprob: -22.377511978149414
    8. '=False' → logprob: -23.877511978149414
    9. '_false' → logprob: -24.127511978149414
    10. 'false' → logprob: -24.502511978149414

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6776054501533508
    2. '
' → logprob: -0.8026054501533508
    3. '\n' → logprob: -4.302605628967285
    4. '    
' → logprob: -4.552605628967285
    5. 'return' → logprob: -5.177605628967285
    6. ' return' → logprob: -5.302605628967285
    7. '  
' → logprob: -6.052605628967285
    8. '<|end|>' → logprob: -6.302605628967285
    9. 'newline' → logprob: -6.552605628967285
    10. '	return' → logprob: -6.677605628967285

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007245010696351528
    2. '
' → logprob: -5.382245063781738
    3. 'return' → logprob: -6.757245063781738
    4. '    
' → logprob: -7.132245063781738
    5. ' return' → logprob: -8.007245063781738
    6. '	return' → logprob: -9.007245063781738
    7. '       ' → logprob: -9.382245063781738
    8. '\n' → logprob: -10.507245063781738
    9. ' 
' → logprob: -10.632245063781738
    10. '  
' → logprob: -10.757245063781738

Token 213: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22945913672447205
    2. '   ' → logprob: -1.9794591665267944
    3. ' return' → logprob: -2.729459047317505
    4. '
' → logprob: -6.729459285736084
    5. '	return' → logprob: -8.104458808898926
    6. '    
' → logprob: -9.729458808898926
    7. ' ' → logprob: -10.729458808898926
    8. 'eturn' → logprob: -10.854458808898926
    9. '  
' → logprob: -11.979458808898926
    10. '       ' → logprob: -12.229458808898926

Token 214: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.25192928314208984
    2. 'True' → logprob: -1.5019292831420898
    3. 'False' → logprob: -16.501930236816406
    4. '(True' → logprob: -18.126930236816406
    5. ' False' → logprob: -18.251930236816406
    6. '   ' → logprob: -18.501930236816406
    7. ' ' → logprob: -20.501930236816406
    8. '=True' → logprob: -21.501930236816406
    9. ' Tru' → logprob: -21.626930236816406
    10. ' ' → logprob: -22.751930236816406

Token 215: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008436090312898159
    2. '
' → logprob: -4.88343620300293
    3. '<|end|>' → logprob: -7.38343620300293
    4. '

' → logprob: -9.25843620300293
    5. ' def' → logprob: -10.00843620300293
    6. '\' → logprob: -11.00843620300293
    7. '  
' → logprob: -11.50843620300293
    8. '\n' → logprob: -11.75843620300293
    9. '#' → logprob: -11.88343620300293
    10. '```' → logprob: -12.13343620300293

Token 216: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.75
    3. '
' → logprob: -17.375
    4. '<|end|>' → logprob: -17.75
    5. '    
' → logprob: -18.75
    6. '```' → logprob: -19.125
    7. '  
' → logprob: -19.375
    8. '#' → logprob: -19.75
    9. 'ndef' → logprob: -20.375
    10. ':def' → logprob: -20.625

Token 217: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.3139258921146393
    2. 'place' → logprob: -1.313925862312317
    3. 'solve' → logprob: -8.188925743103027
    4. ' solve' → logprob: -9.063925743103027
    5. 'dfs' → logprob: -9.563925743103027
    6. ' can' → logprob: -10.688925743103027
    7. 'can' → logprob: -10.688925743103027
    8. ' dfs' → logprob: -10.813925743103027
    9. 'search' → logprob: -11.063925743103027
    10. ' back' → logprob: -11.063925743103027

Token 218: '_block' (ID: 15644)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.21191614866256714
    2. '(board' → logprob: -1.711916208267212
    3. '(' → logprob: -4.586915969848633
    4. '_block' → logprob: -8.336915969848633
    5. ' (' → logprob: -11.711915969848633
    6. 'block' → logprob: -13.336915969848633
    7. ' block' → logprob: -13.586915969848633
    8. '(tile' → logprob: -13.836915969848633
    9. '_' → logprob: -14.086915969848633
    10. '_board' → logprob: -14.086915969848633

Token 219: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.004786699544638395
    2. '(block' → logprob: -5.504786491394043
    3. '(' → logprob: -7.254786491394043
    4. '(Board' → logprob: -14.504786491394043
    5. ' (' → logprob: -15.254786491394043
    6. '(body' → logprob: -16.62978744506836
    7. '(branch' → logprob: -16.62978744506836
    8. '(
' → logprob: -16.62978744506836
    9. '(deck' → logprob: -16.62978744506836
    10. '(bank' → logprob: -16.75478744506836

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',
' → logprob: -16.250001907348633
    4. '(block' → logprob: -17.750001907348633
    5. ',b' → logprob: -18.125001907348633
    6. '‌,' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.750001907348633
    8. ',

' → logprob: -20.000001907348633
    9. ',row' → logprob: -20.000001907348633
    10. '

' → logprob: -20.250001907348633

Token 221: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.3132706880569458
    2. 'block' → logprob: -1.3132706880569458
    3. 'board' → logprob: -13.563270568847656
    4. 'tile' → logprob: -13.813270568847656
    5. ' tile' → logprob: -13.813270568847656
    6. '	block' → logprob: -13.938270568847656
    7. ' ' → logprob: -14.063270568847656
    8. '(block' → logprob: -14.063270568847656
    9. '   ' → logprob: -14.188270568847656
    10. 'b' → logprob: -15.063270568847656

Token 222: '_tiles' (ID: 147480)
  Prédit: '_tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.576418399810791
    2. ',' → logprob: -0.826418399810791
    3. '_,' → logprob: -9.076417922973633
    4. 'tiles' → logprob: -9.201417922973633
    5. ',_' → logprob: -9.701417922973633
    6. ' ,' → logprob: -9.826417922973633
    7. '):' → logprob: -10.326417922973633
    8. 'Tiles' → logprob: -10.326417922973633
    9. '_t' → logprob: -11.326417922973633
    10. '_tokens' → logprob: -11.451417922973633

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8802491215174086e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ',start' → logprob: -14.125028610229492
    4. '   ' → logprob: -14.625028610229492
    5. ',
' → logprob: -17.250028610229492
    6. '[],' → logprob: -18.250028610229492
    7. '‌,' → logprob: -18.875028610229492
    8. '_,' → logprob: -19.750028610229492
    9. ',int' → logprob: -20.000028610229492
    10. '       ' → logprob: -20.750028610229492

Token 224: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0789291188120842
    2. ' start' → logprob: -2.5789291858673096
    3. 'r' → logprob: -10.95392894744873
    4. '   ' → logprob: -11.32892894744873
    5. ' ' → logprob: -12.32892894744873
    6. ' r' → logprob: -13.70392894744873
    7. ')' → logprob: -13.95392894744873
    8. '  ' → logprob: -14.57892894744873
    9. 'pos' → logprob: -14.57892894744873
    10. '```' → logprob: -14.57892894744873

Token 225: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -8.77627644513268e-06
    2. ' _' → logprob: -13.000008583068848
    3. '_c' → logprob: -13.250008583068848
    4. '_' → logprob: -13.500008583068848
    5. '_s' → logprob: -13.750008583068848
    6. '_t' → logprob: -14.000008583068848
    7. ')_' → logprob: -14.500008583068848
    8. ')' → logprob: -15.500008583068848
    9. '_row' → logprob: -15.875008583068848
    10. '_x' → logprob: -16.000009536743164

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014048899174667895
    2. ' ,' → logprob: -8.875140190124512
    3. ',start' → logprob: -15.250140190124512
    4. ',
' → logprob: -15.625140190124512
    5. ',int' → logprob: -16.875141143798828
    6. '‌,' → logprob: -17.125141143798828
    7. '   ' → logprob: -17.500141143798828
    8. ',c' → logprob: -18.875141143798828
    9. ' ' → logprob: -19.375141143798828
    10. ',s' → logprob: -19.500141143798828

Token 227: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.575939953327179
    2. 'start' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.200940132141113
    4. '   ' → logprob: -15.950940132141113
    5. '    ' → logprob: -16.200939178466797
    6. ':start' → logprob: -17.450939178466797
    7. ',start' → logprob: -17.825939178466797
    8. '=start' → logprob: -17.950939178466797
    9. '[start' → logprob: -18.075939178466797
    10. '	start' → logprob: -18.575939178466797

Token 228: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9862216504407115e-05
    2. ',' → logprob: -11.375020027160645
    3. 'c' → logprob: -12.875020027160645
    4. '_r' → logprob: -13.125020027160645
    5. '   ' → logprob: -13.500020027160645
    6. '_' → logprob: -13.750020027160645
    7. '_,' → logprob: -14.375020027160645
    8. '```' → logprob: -15.125020027160645
    9. '_s' → logprob: -16.000019073486328
    10. ' ,' → logprob: -16.750019073486328

Token 229: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009783949702978134
    2. '):
' → logprob: -4.759783744812012
    3. ',' → logprob: -6.884783744812012
    4. ' ):' → logprob: -9.134783744812012
    5. '   ' → logprob: -10.634783744812012
    6. ':' → logprob: -11.884783744812012
    7. ')' → logprob: -12.759783744812012
    8. ' ,' → logprob: -13.384783744812012
    9. '):
' → logprob: -13.759783744812012
    10. ' ):
' → logprob: -14.509783744812012

Token 230: '   ' (ID: 271)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5366858243942261
    2. '   ' → logprob: -1.161685824394226
    3. 'new' → logprob: -2.9116859436035156
    4. ' for' → logprob: -3.4116859436035156
    5. 'for' → logprob: -4.536685943603516
    6. ' H' → logprob: -6.411685943603516
    7. 'H' → logprob: -6.911685943603516
    8. ' board' → logprob: -7.036685943603516
    9. 'board' → logprob: -7.536685943603516
    10. '```' → logprob: -10.161685943603516

Token 231: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.13533860445022583
    2. 'board' → logprob: -2.510338544845581
    3. ' new' → logprob: -3.385338544845581
    4. 'for' → logprob: -5.01033878326416
    5. '   ' → logprob: -5.51033878326416
    6. ' board' → logprob: -7.51033878326416
    7. ' for' → logprob: -8.76033878326416
    8. 'H' → logprob: -11.51033878326416
    9. 'b' → logprob: -11.88533878326416
    10. ' ' → logprob: -12.01033878326416

Token 232: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.0009676800691522658
    2. '_' → logprob: -7.000967502593994
    3. 'board' → logprob: -10.000967979431152
    4. '_block' → logprob: -11.875967979431152
    5. '_bo' → logprob: -13.500967979431152
    6. ' _' → logprob: -14.000967979431152
    7. '_b' → logprob: -14.250967979431152
    8. 'Board' → logprob: -15.000967979431152
    9. '_
' → logprob: -16.000967025756836
    10. '[' → logprob: -16.000967025756836

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006719163153320551
    2. '=' → logprob: -5.00671911239624
    3. ' =[' → logprob: -13.631719589233398
    4. '[' → logprob: -14.006719589233398
    5. ' ' → logprob: -14.131719589233398
    6. '   ' → logprob: -14.881719589233398
    7. ' =
' → logprob: -15.131719589233398
    8. '[:]' → logprob: -16.0067195892334
    9. ',' → logprob: -16.5067195892334
    10. '=[]' → logprob: -16.7567195892334

Token 234: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010456704767420888
    2. ' [' → logprob: -7.0010457038879395
    3. 'board' → logprob: -10.001045227050781
    4. '[]
' → logprob: -10.001045227050781
    5. '[list' → logprob: -10.751045227050781
    6. '[]' → logprob: -11.626045227050781
    7. '[b' → logprob: -12.501045227050781
    8. ' board' → logprob: -12.751045227050781
    9. '[row' → logprob: -13.501045227050781
    10. '[line' → logprob: -13.751045227050781

Token 235: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009396891109645367
    2. 'row' → logprob: -7.000939846038818
    3. ' list' → logprob: -10.50093936920166
    4. ' row' → logprob: -15.00093936920166
    5. 'board' → logprob: -15.50093936920166
    6. 'b' → logprob: -16.000940322875977
    7. 'line' → logprob: -16.500940322875977
    8. '[list' → logprob: -19.500940322875977
    9. '(list' → logprob: -19.625940322875977
    10. '[' → logprob: -19.750940322875977

Token 236: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0011945136357098818
    2. 'row' → logprob: -6.751194477081299
    3. '(line' → logprob: -11.001194953918457
    4. '(' → logprob: -12.876194953918457
    5. ' row' → logprob: -13.001194953918457
    6. '(board' → logprob: -13.251194953918457
    7. '	row' → logprob: -15.251194953918457
    8. '(r' → logprob: -15.501194953918457
    9. '
' → logprob: -16.12619400024414
    10. '(map' → logprob: -16.12619400024414

Token 237: ')' (ID: 8)
  Prédit: '(board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.5859665870666504
    2. '(row' → logprob: -0.8359665870666504
    3. ')' → logprob: -4.96096658706665
    4. '(line' → logprob: -6.08596658706665
    5. '(' → logprob: -7.96096658706665
    6. 'row' → logprob: -8.335966110229492
    7. '   ' → logprob: -10.835966110229492
    8. '(b' → logprob: -10.960966110229492
    9. '(block' → logprob: -11.085966110229492
    10. ' row' → logprob: -11.085966110229492

Token 238: ' for' (ID: 395)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.22864368557929993
    2. ' for' → logprob: -2.1036436557769775
    3. '(board' → logprob: -2.6036436557769775
    4. 'for' → logprob: -5.853643894195557
    5. ')' → logprob: -6.103643894195557
    6. '   ' → logprob: -6.228643894195557
    7. '(line' → logprob: -7.228643894195557
    8. ']' → logprob: -8.603643417358398
    9. '(' → logprob: -8.978643417358398
    10. 'row' → logprob: -9.978643417358398

Token 239: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.01963544823229313
    2. ' row' → logprob: -4.0196356773376465
    3. 'board' → logprob: -6.5196356773376465
    4. ' board' → logprob: -11.519635200500488
    5. ' ' → logprob: -16.019636154174805
    6. 'r' → logprob: -17.144636154174805
    7. '	row' → logprob: -17.394636154174805
    8. '   ' → logprob: -18.019636154174805
    9. '(row' → logprob: -18.269636154174805
    10. 'ro' → logprob: -18.394636154174805

Token 240: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014381390064954758
    2. 'in' → logprob: -4.514381408691406
    3. 'row' → logprob: -6.139381408691406
    4. ' row' → logprob: -6.764381408691406
    5. ' ' → logprob: -11.139381408691406
    6. '(row' → logprob: -13.014381408691406
    7. 'board' → logprob: -15.389381408691406
    8. ' ' → logprob: -15.764381408691406
    9. ',row' → logprob: -16.139381408691406
    10. '	row' → logprob: -16.389381408691406

Token 241: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.04859066382050514
    2. ' board' → logprob: -3.048590660095215
    3. ' ' → logprob: -14.048590660095215
    4. '	board' → logprob: -14.048590660095215
    5. '(board' → logprob: -14.298590660095215
    6. '   ' → logprob: -14.298590660095215
    7. 'b' → logprob: -15.423590660095215
    8. '
' → logprob: -16.29859161376953
    9. '  ' → logprob: -16.92359161376953
    10. 'boards' → logprob: -17.29859161376953

Token 242: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010774685069918633
    2. ']
' → logprob: -7.126077651977539
    3. '   ' → logprob: -8.376077651977539
    4. ' ]' → logprob: -10.126077651977539
    5. '
' → logprob: -14.126077651977539
    6. ']

' → logprob: -14.501077651977539
    7. ')]' → logprob: -14.501077651977539
    8. ')' → logprob: -14.626077651977539
    9. ']
' → logprob: -14.876077651977539
    10. ' ]
' → logprob: -16.37607765197754

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006725206621922553
    2. ' for' → logprob: -8.000672340393066
    3. 'for' → logprob: -9.000672340393066
    4. '
' → logprob: -9.125672340393066
    5. '    
' → logprob: -10.000672340393066
    6. '<|end|>' → logprob: -10.125672340393066
    7. '	for' → logprob: -11.375672340393066
    8. '       ' → logprob: -12.625672340393066
    9. '<|end|>' → logprob: -13.500672340393066
    10. '```' → logprob: -14.625672340393066

Token 244: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005653943866491318
    2. ' for' → logprob: -5.7556538581848145
    3. '   ' → logprob: -6.0056538581848145
    4. '	for' → logprob: -11.755654335021973
    5. '       ' → logprob: -14.380654335021973
    6. '    
' → logprob: -17.630653381347656
    7. ' ' → logprob: -17.880653381347656
    8. '  ' → logprob: -18.005653381347656
    9. '```' → logprob: -19.005653381347656
    10. '
' → logprob: -19.130653381347656

Token 245: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4319935441017151
    2. '(br' → logprob: -1.0569934844970703
    3. '(r' → logprob: -5.80699348449707
    4. ' br' → logprob: -8.55699348449707
    5. 'br' → logprob: -10.05699348449707
    6. '(' → logprob: -11.05699348449707
    7. '(b' → logprob: -11.55699348449707
    8. '(tr' → logprob: -12.05699348449707
    9. '(dr' → logprob: -12.30699348449707
    10. '(t' → logprob: -13.43199348449707

Token 246: 'br' (ID: 1697)
  Prédit: 'br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.006285202689468861
    2. ' br' → logprob: -5.506285190582275
    3. '(br' → logprob: -6.131285190582275
    4. 'r' → logprob: -11.631285667419434
    5. ' (' → logprob: -11.631285667419434
    6. '	br' → logprob: -11.631285667419434
    7. '(r' → logprob: -13.506285667419434
    8. '(' → logprob: -14.006285667419434
    9. '_br' → logprob: -14.506285667419434
    10. 'b' → logprob: -15.131285667419434

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011450992315076292
    2. ' ,' → logprob: -9.125114440917969
    3. ',c' → logprob: -12.500114440917969
    4. ',r' → logprob: -14.125114440917969
    5. '),' → logprob: -14.750114440917969
    6. ',
' → logprob: -15.375114440917969
    7. ')' → logprob: -15.375114440917969
    8. '_,' → logprob: -16.25011444091797
    9. ',b' → logprob: -16.50011444091797
    10. '‌,' → logprob: -17.50011444091797

Token 248: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.1602269560098648
    2. ' bc' → logprob: -1.9102269411087036
    3. '_bc' → logprob: -13.535226821899414
    4. 'br' → logprob: -14.035226821899414
    5. ' br' → logprob: -15.160226821899414
    6. '.bc' → logprob: -15.410226821899414
    7. ' ' → logprob: -16.160226821899414
    8. 'bcc' → logprob: -17.160226821899414
    9. 'Bc' → logprob: -17.410226821899414
    10. 'xbc' → logprob: -18.285226821899414

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002918446552939713
    2. ' )' → logprob: -9.00029182434082
    3. '),' → logprob: -9.12529182434082
    4. 'in' → logprob: -10.62529182434082
    5. ' in' → logprob: -10.75029182434082
    6. ',' → logprob: -11.50029182434082
    7. '   ' → logprob: -13.50029182434082
    8. ')
' → logprob: -14.50029182434082
    9. '),(' → logprob: -15.12529182434082
    10. ' ),' → logprob: -15.37529182434082

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023602403700351715
    2. 'in' → logprob: -3.7736024856567383
    3. '   ' → logprob: -8.648602485656738
    4. ',' → logprob: -9.148602485656738
    5. ')' → logprob: -10.898602485656738
    6. ' ,' → logprob: -10.898602485656738
    7. '    ' → logprob: -11.273602485656738
    8. ' ' → logprob: -11.398602485656738
    9. '  ' → logprob: -12.773602485656738
    10. '```' → logprob: -13.023602485656738

Token 251: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.009757863357663155
    2. ' block' → logprob: -4.634757995605469
    3. '(block' → logprob: -14.384757995605469
    4. '	block' → logprob: -15.009757995605469
    5. ':block' → logprob: -15.634757995605469
    6. '   ' → logprob: -15.759757995605469
    7. ' ' → logprob: -16.00975799560547
    8. '_block' → logprob: -16.13475799560547
    9. 'tile' → logprob: -16.25975799560547
    10. 'blocks' → logprob: -16.38475799560547

Token 252: '_tiles' (ID: 147480)
  Prédit: '_tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -4.3822154111694545e-05
    2. 'tiles' → logprob: -10.125043869018555
    3. 'Tiles' → logprob: -14.000043869018555
    4. '   ' → logprob: -14.125043869018555
    5. '):' → logprob: -14.250043869018555
    6. ')' → logprob: -14.875043869018555
    7. ' tiles' → logprob: -15.500043869018555
    8. '.tiles' → logprob: -15.625043869018555
    9. '):
' → logprob: -15.750043869018555
    10. '```' → logprob: -16.000043869018555

Token 253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5838791728019714
    2. ':
' → logprob: -0.8338791728019714
    3. '   ' → logprob: -5.833878993988037
    4. '       ' → logprob: -6.083878993988037
    5. ' new' → logprob: -6.083878993988037
    6. 'new' → logprob: -9.083879470825195
    7. ' :
' → logprob: -9.083879470825195
    8. '):
' → logprob: -9.583879470825195
    9. ',' → logprob: -10.583879470825195
    10. ':new' → logprob: -10.708879470825195

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.086623914539814
    2. ' new' → logprob: -2.5866239070892334
    3. '   ' → logprob: -5.4616241455078125
    4. '        
' → logprob: -6.4616241455078125
    5. 'new' → logprob: -7.3366241455078125
    6. '    
' → logprob: -7.9616241455078125
    7. '    ' → logprob: -7.9616241455078125
    8. ' ' → logprob: -9.586624145507812
    9. ' 
' → logprob: -9.586624145507812
    10. '<|end|>' → logprob: -9.836624145507812

Token 255: ' r' (ID: 428)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5053442716598511
    2. ' r' → logprob: -1.005344271659851
    3. 'r' (adapté à ' r') → logprob: -3.7553443908691406
    4. 'new' → logprob: -5.005344390869141
    5. '   ' → logprob: -8.25534439086914
    6. 'nr' → logprob: -8.63034439086914
    7. '    ' → logprob: -9.00534439086914
    8. ' nr' → logprob: -9.38034439086914
    9. ' row' → logprob: -11.00534439086914
    10. '       ' → logprob: -11.13034439086914

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695299088954926
    2. ' =' → logprob: -2.126952886581421
    3. '=start' → logprob: -10.626953125
    4. '=
' → logprob: -15.001953125
    5. '[start' → logprob: -16.001953125
    6. '   ' → logprob: -16.501953125
    7. ' =
' → logprob: -17.376953125
    8. '=

' → logprob: -17.626953125
    9. '=int' → logprob: -17.876953125
    10. '>' → logprob: -17.876953125

Token 257: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.0380416102707386
    2. 'start' → logprob: -3.288041591644287
    3. '[start' → logprob: -16.788042068481445
    4. ' ' → logprob: -17.038042068481445
    5. '=start' → logprob: -17.163042068481445
    6. '(start' → logprob: -17.788042068481445
    7. 'Start' → logprob: -18.413042068481445
    8. '	start' → logprob: -19.163042068481445
    9. ':start' → logprob: -19.163042068481445
    10. '   ' → logprob: -19.288042068481445

Token 258: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0003933768020942807
    2. '_c' → logprob: -7.875393390655518
    3. 'r' → logprob: -11.25039291381836
    4. '_s' → logprob: -15.50039291381836
    5. '_' → logprob: -17.37539291381836
    6. '   ' → logprob: -17.62539291381836
    7. '_start' → logprob: -17.62539291381836
    8. 'c' → logprob: -18.12539291381836
    9. ' _' → logprob: -18.37539291381836
    10. 'start' → logprob: -19.37539291381836

Token 259: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889165729284286
    2. '+' → logprob: -2.5788917541503906
    3. '+r' → logprob: -13.82889175415039
    4. '+c' → logprob: -15.45389175415039
    5. ' ' → logprob: -15.70389175415039
    6. ' +
' → logprob: -15.82889175415039
    7. ' ' → logprob: -15.95389175415039
    8. '<|end|>' → logprob: -16.32889175415039
    9. '+b' → logprob: -16.57889175415039
    10. '+
' → logprob: -17.57889175415039

Token 260: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -7.941850526549388e-06
    2. ' br' → logprob: -11.750007629394531
    3. '	br' → logprob: -17.87500762939453
    4. 'b' → logprob: -18.37500762939453
    5. 'bc' → logprob: -18.87500762939453
    6. 'brane' → logprob: -19.75000762939453
    7. 'bro' → logprob: -20.25000762939453
    8. '   ' → logprob: -20.25000762939453
    9. ' ' → logprob: -20.25000762939453
    10. '(br' → logprob: -20.87500762939453

Token 261: '
' (ID: 198)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.17002151906490326
    2. '
' → logprob: -2.9200215339660645
    3. '       ' → logprob: -2.9200215339660645
    4. 'c' → logprob: -3.7950215339660645
    5. '[c' → logprob: -5.0450215339660645
    6. '<|end|>' → logprob: -5.1700215339660645
    7. '[' → logprob: -5.6700215339660645
    8. '][' → logprob: -5.9200215339660645
    9. '   ' → logprob: -6.5450215339660645
    10. ']' → logprob: -6.7950215339660645

Token 262: '       ' (ID: 309)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.13112474977970123
    2. 'c' → logprob: -2.13112473487854
    3. '       ' → logprob: -5.506124973297119
    4. '   ' → logprob: -10.756124496459961
    5. '        ' → logprob: -10.881124496459961
    6. '	c' → logprob: -11.006124496459961
    7. ' ' → logprob: -11.131124496459961
    8. '    ' → logprob: -11.131124496459961
    9. '           ' → logprob: -11.631124496459961
    10. ' ' → logprob: -11.631124496459961

Token 263: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.014163628220558167
    2. ' c' → logprob: -4.264163494110107
    3. '       ' → logprob: -16.389163970947266
    4. '   ' → logprob: -16.639163970947266
    5. '	c' → logprob: -17.639163970947266
    6. '    ' → logprob: -19.514163970947266
    7. '           ' → logprob: -19.514163970947266
    8. ')c' → logprob: -20.389163970947266
    9. ' ' → logprob: -20.639163970947266
    10. 'C' → logprob: -20.639163970947266

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327313184738159
    2. '=' → logprob: -0.7577313184738159
    3. '<|end|>' → logprob: -10.507731437683105
    4. 'new' → logprob: -10.757731437683105
    5. ' +=' → logprob: -10.882731437683105
    6. '       ' → logprob: -11.257731437683105
    7. ' new' → logprob: -11.382731437683105
    8. '[' → logprob: -11.757731437683105
    9. ')' → logprob: -12.007731437683105
    10. '        ' → logprob: -12.757731437683105

Token 265: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.01814994215965271
    2. ' start' → logprob: -4.0181498527526855
    3. 'c' → logprob: -17.143150329589844
    4. '   ' → logprob: -18.518150329589844
    5. ' ' → logprob: -18.893150329589844
    6. ' c' → logprob: -19.143150329589844
    7. '[start' → logprob: -19.768150329589844
    8. '=start' → logprob: -19.768150329589844
    9. '(start' → logprob: -20.018150329589844
    10. '	start' → logprob: -20.143150329589844

Token 266: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.015231640078127384
    2. '_' → logprob: -4.265231609344482
    3. '_r' → logprob: -7.015231609344482
    4. 'C' → logprob: -9.01523208618164
    5. '_C' → logprob: -11.26523208618164
    6. '_s' → logprob: -11.51523208618164
    7. 'c' → logprob: -11.76523208618164
    8. '_=' → logprob: -12.64023208618164
    9. '+' → logprob: -12.76523208618164
    10. 'r' → logprob: -13.51523208618164

Token 267: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868791460990906
    2. '+' → logprob: -1.1368792057037354
    3. ' +=' → logprob: -12.636878967285156
    4. '+=' → logprob: -13.511878967285156
    5. ' +
' → logprob: -13.761878967285156
    6. '[' → logprob: -14.636878967285156
    7. '+
' → logprob: -14.886878967285156
    8. ')' → logprob: -14.886878967285156
    9. ']' → logprob: -15.386878967285156
    10. ' ' → logprob: -15.386878967285156

Token 268: ' bc' (ID: 51743)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20736686885356903
    2. 'bc' → logprob: -1.7073668241500854
    3. 'c' → logprob: -5.832366943359375
    4. ' start' → logprob: -6.582366943359375
    5. 'sc' → logprob: -6.832366943359375
    6. 'cc' → logprob: -8.707366943359375
    7. ' bc' → logprob: -8.957366943359375
    8. 'cs' → logprob: -10.082366943359375
    9. 'pc' → logprob: -10.082366943359375
    10. 'new' → logprob: -10.707366943359375

Token 269: '
' (ID: 198)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8204702734947205
    2. '   ' → logprob: -0.9454702734947205
    3. '       ' → logprob: -2.6954703330993652
    4. 'new' → logprob: -3.1954703330993652
    5. '
' → logprob: -3.4454703330993652
    6. '    
' → logprob: -3.8204703330993652
    7. '           ' → logprob: -6.070470333099365
    8. '        
' → logprob: -6.320470333099365
    9. ' 
' → logprob: -6.945470333099365
    10. '[new' → logprob: -7.070470333099365

Token 270: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3207993507385254
    2. ' new' → logprob: -1.4457993507385254
    3. '       ' → logprob: -3.6957993507385254
    4. 'new' → logprob: -4.695799350738525
    5. '#' → logprob: -6.195799350738525
    6. '    
' → logprob: -6.695799350738525
    7. ')' → logprob: -8.070798873901367
    8. '           ' → logprob: -8.195798873901367
    9. '[new' → logprob: -8.320798873901367
    10. '[' → logprob: -8.945798873901367

Token 271: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.3868822753429413
    2. ' new' → logprob: -1.1368823051452637
    3. '   ' → logprob: -12.136881828308105
    4. '#' → logprob: -12.636881828308105
    5. '       ' → logprob: -14.636881828308105
    6. '	new' → logprob: -14.636881828308105
    7. '[new' → logprob: -14.886881828308105
    8. '_new' → logprob: -15.011881828308105
    9. 'n' → logprob: -15.011881828308105
    10. '
' → logprob: -16.011882781982422

Token 272: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.375005722045898
    3. 'board' → logprob: -14.625005722045898
    4. '_bo' → logprob: -15.125005722045898
    5. '_BOARD' → logprob: -16.7500057220459
    6. '_b' → logprob: -16.8750057220459
    7. '_block' → logprob: -17.1250057220459
    8. '[' → logprob: -17.2500057220459
    9. '	board' → logprob: -17.6250057220459
    10. '   ' → logprob: -17.8750057220459

Token 273: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. 'r' → logprob: -16.25
    4. ' [' → logprob: -19.5
    5. '[row' → logprob: -19.75
    6. '][' → logprob: -20.125
    7. '	r' → logprob: -20.5
    8. '[t' → logprob: -20.5
    9. ' r' → logprob: -20.625
    10. '   ' → logprob: -21.0

Token 274: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006467910134233534
    2. ']' → logprob: -7.375646591186523
    3. ' ][' → logprob: -11.125646591186523
    4. '[c' → logprob: -12.750646591186523
    5. '][]' → logprob: -14.125646591186523
    6. '[' → logprob: -14.375646591186523
    7. '[r' → logprob: -14.750646591186523
    8. '   ' → logprob: -15.375646591186523
    9. ''][' → logprob: -15.625646591186523
    10. ']][' → logprob: -15.625646591186523

Token 275: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.558399319241289e-05
    2. ' c' → logprob: -10.625025749206543
    3. ')c' → logprob: -15.125025749206543
    4. '
' → logprob: -15.625025749206543
    5. '   ' → logprob: -15.750025749206543
    6. ' ' → logprob: -15.750025749206543
    7. '<|end|>' → logprob: -16.000024795532227
    8. '	c' → logprob: -16.750024795532227
    9. '```' → logprob: -17.000024795532227
    10. ')' → logprob: -17.125024795532227

Token 276: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045319506898522377
    2. '=' → logprob: -8.750452995300293
    3. ' ]' → logprob: -9.125452995300293
    4. ']=' → logprob: -9.125452995300293
    5. ' =' → logprob: -9.500452995300293
    6. ']='' → logprob: -14.000452995300293
    7. ')' → logprob: -14.500452995300293
    8. '[' → logprob: -14.750452995300293
    9. ']
' → logprob: -16.12545394897461
    10. '#' → logprob: -16.37545394897461

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890256494283676
    2. ' =' → logprob: -2.57890248298645
    3. '='#' → logprob: -11.828902244567871
    4. '=#' → logprob: -13.453902244567871
    5. '#' → logprob: -13.828902244567871
    6. ']' → logprob: -14.078902244567871
    7. ' ='' → logprob: -14.328902244567871
    8. ')' → logprob: -14.953902244567871
    9. ' ' → logprob: -15.078902244567871
    10. '='' → logprob: -15.203902244567871

Token 278: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.00010211274639004841
    2. ' '#'' → logprob: -9.875102043151855
    3. '#' → logprob: -10.875102043151855
    4. '"#' → logprob: -11.125102043151855
    5. ''' → logprob: -11.250102043151855
    6. ''*' → logprob: -13.250102043151855
    7. '`' → logprob: -14.625102043151855
    8. ''''' → logprob: -15.000102043151855
    9. '','#' → logprob: -15.250102043151855
    10. ''.' → logprob: -16.000102996826172

Token 279: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001205893131555058
    2. ''
' → logprob: -9.750120162963867
    3. '#' → logprob: -11.000120162963867
    4. '"' → logprob: -11.250120162963867
    5. '<|end|>' → logprob: -11.375120162963867
    6. '```' → logprob: -12.125120162963867
    7. ''#' → logprob: -12.375120162963867
    8. '')' → logprob: -12.625120162963867
    9. ''''' → logprob: -12.875120162963867
    10. ')' → logprob: -13.125120162963867

Token 280: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40513870120048523
    2. '   ' → logprob: -1.1551387310028076
    3. ' return' → logprob: -4.7801384925842285
    4. '<|end|>' → logprob: -5.4051384925842285
    5. 'return' → logprob: -5.9051384925842285
    6. '    
' → logprob: -6.7801384925842285
    7. '	return' → logprob: -7.6551384925842285
    8. ')' → logprob: -8.405138969421387
    9. '  
' → logprob: -8.655138969421387
    10. ' ' → logprob: -9.280138969421387

Token 281: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9166018962860107
    2. '
' → logprob: -1.1666018962860107
    3. 'return' (adapté à ' return') → logprob: -1.4166018962860107
    4. ' 
' → logprob: -3.9166018962860107
    5. '   ' → logprob: -4.04160213470459
    6. '    
' → logprob: -5.41660213470459
    7. '  
' → logprob: -6.29160213470459
    8. ' ' → logprob: -6.79160213470459
    9. '	return' → logprob: -7.54160213470459
    10. '\n' → logprob: -8.04160213470459

Token 282: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.1551658660173416
    2. '["' → logprob: -2.155165910720825
    3. ' ['' → logprob: -3.780165910720825
    4. 'new' → logprob: -5.530165672302246
    5. ' ["' → logprob: -7.280165672302246
    6. '[' → logprob: -8.530165672302246
    7. '[new' → logprob: -8.905165672302246
    8. ' new' → logprob: -10.905165672302246
    9. '[['' → logprob: -11.155165672302246
    10. '(['' → logprob: -13.655165672302246

Token 283: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.6946028470993042
    2. '''.' → logprob: -0.6946028470993042
    3. '"' → logprob: -6.819602966308594
    4. '".' → logprob: -8.194602966308594
    5. ''' → logprob: -9.819602966308594
    6. '''' → logprob: -11.069602966308594
    7. ' ''.' → logprob: -11.194602966308594
    8. ' "".' → logprob: -14.069602966308594
    9. '```' → logprob: -14.194602966308594
    10. '""' → logprob: -14.319602966308594

Token 284: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.961759259458631e-06
    2. '''.' → logprob: -12.625004768371582
    3. ' join' → logprob: -13.500004768371582
    4. ''.' → logprob: -15.375004768371582
    5. '.join' → logprob: -16.7500057220459
    6. 'jo' → logprob: -18.7500057220459
    7. '(join' → logprob: -18.7500057220459
    8. ' ''.' → logprob: -19.7500057220459
    9. ' ' → logprob: -20.2500057220459
    10. '_join' → logprob: -20.6250057220459

Token 285: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.006716555915772915
    2. 'row' → logprob: -5.006716728210449
    3. ' row' → logprob: -13.88171672821045
    4. '(r' → logprob: -16.631715774536133
    5. '(new' → logprob: -17.131715774536133
    6. '(line' → logprob: -17.256715774536133
    7. '	row' → logprob: -17.256715774536133
    8. '(list' → logprob: -18.006715774536133
    9. 'new' → logprob: -18.256715774536133
    10. '[row' → logprob: -18.631715774536133

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3902033970225602e-05
    2. '(row' → logprob: -12.250014305114746
    3. 'for' → logprob: -12.625014305114746
    4. ' for' → logprob: -12.750014305114746
    5. '])' → logprob: -14.625014305114746
    6. '')' → logprob: -14.750014305114746
    7. ')]' → logprob: -14.875014305114746
    8. ')
' → logprob: -15.125014305114746
    9. '(r' → logprob: -15.250014305114746
    10. '))' → logprob: -15.250014305114746

Token 287: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1490851640701294
    2. 'for' → logprob: -2.39908504486084
    3. '(row' → logprob: -3.27408504486084
    4. '(new' → logprob: -4.89908504486084
    5. 'new' → logprob: -6.89908504486084
    6. ')' → logprob: -7.14908504486084
    7. ']' → logprob: -8.27408504486084
    8. ' new' → logprob: -8.89908504486084
    9. '   ' → logprob: -9.89908504486084
    10. ' ' → logprob: -9.89908504486084

Token 288: ' row' (ID: 5225)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03044729121029377
    2. ' new' → logprob: -3.530447244644165
    3. 'row' → logprob: -7.280447483062744
    4. ' row' → logprob: -11.780447006225586
    5. '(new' → logprob: -16.155447006225586
    6. '	new' → logprob: -17.905447006225586
    7. '[new' → logprob: -19.155447006225586
    8. ' ' → logprob: -19.780447006225586
    9. ')new' → logprob: -20.655447006225586
    10. '   ' → logprob: -20.655447006225586

Token 289: ' in' (ID: 306)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.07185159623622894
    2. ' in' → logprob: -3.0718514919281006
    3. 'new' → logprob: -4.19685173034668
    4. ']' → logprob: -5.69685173034668
    5. ' new' → logprob: -5.94685173034668
    6. ')new' → logprob: -7.32185173034668
    7. '[new' → logprob: -7.57185173034668
    8. 'in' → logprob: -8.07185173034668
    9. '(row' → logprob: -8.07185173034668
    10. ')' → logprob: -10.19685173034668

Token 290: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00033546582562848926
    2. ' new' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.500335693359375
    4. '	new' → logprob: -19.250335693359375
    5. '(new' → logprob: -20.125335693359375
    6. ' ' → logprob: -20.750335693359375
    7. '[new' → logprob: -20.750335693359375
    8. '_new' → logprob: -21.375335693359375
    9. ')new' → logprob: -21.625335693359375
    10. 'New' → logprob: -21.750335693359375

Token 291: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -2.8325677703833207e-05
    2. '_block' → logprob: -10.500028610229492
    3. 'board' → logprob: -14.875028610229492
    4. '_' → logprob: -15.750028610229492
    5. '_bo' → logprob: -15.875028610229492
    6. '_new' → logprob: -17.625028610229492
    7. '_b' → logprob: -18.125028610229492
    8. ' board' → logprob: -18.250028610229492
    9. '_BOARD' → logprob: -18.625028610229492
    10. '_bloc' → logprob: -19.000028610229492

Token 292: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.8325677703833207e-05
    2. '<|end|>' → logprob: -11.250028610229492
    3. ' ]' → logprob: -11.500028610229492
    4. ']
' → logprob: -12.875028610229492
    5. ')]' → logprob: -14.000028610229492
    6. '']' → logprob: -14.500028610229492
    7. ')' → logprob: -14.500028610229492
    8. ']

' → logprob: -15.250028610229492
    9. '}' → logprob: -15.750028610229492
    10. '`]' → logprob: -16.250028610229492

Token 293: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.75
    3. ' def' → logprob: -18.375
    4. '#' → logprob: -18.5
    5. '```' → logprob: -18.5
    6. '  
' → logprob: -19.0
    7. 'ndef' → logprob: -19.375
    8. '    
' → logprob: -19.875
    9. ' 
' → logprob: -20.0
    10. 'import' → logprob: -20.25

Token 294: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.4727199971675873
    2. ' solve' → logprob: -2.09771990776062
    3. 'count' → logprob: -2.72271990776062
    4. ' search' → logprob: -3.22271990776062
    5. 'solve' → logprob: -3.22271990776062
    6. ' dfs' → logprob: -3.34771990776062
    7. 'search' → logprob: -4.097720146179199
    8. ' can' → logprob: -4.222720146179199
    9. 'dfs' → logprob: -4.222720146179199
    10. ' back' → logprob: -4.347720146179199

Token 295: '_full' (ID: 36973)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6619766354560852
    2. '_fill' → logprob: -1.6619765758514404
    3. '_arr' → logprob: -2.1619765758514404
    4. '_f' → logprob: -2.9119765758514404
    5. '_blocks' → logprob: -3.2869765758514404
    6. '_config' → logprob: -4.4119768142700195
    7. '_complete' → logprob: -4.5369768142700195
    8. '_cover' → logprob: -4.5369768142700195
    9. '_positions' → logprob: -4.7869768142700195
    10. '_full' → logprob: -4.9119768142700195

Token 296: '_lines' (ID: 42980)
  Prédit: '_rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.05355966463685036
    2. '_lines' → logprob: -3.0535597801208496
    3. '(board' → logprob: -5.55355978012085
    4. 'rows' → logprob: -7.17855978012085
    5. '_board' → logprob: -8.928559303283691
    6. '_columns' → logprob: -10.303559303283691
    7. 'lines' → logprob: -10.428559303283691
    8. 'board' → logprob: -10.678559303283691
    9. ' rows' → logprob: -10.803559303283691
    10. '_row' → logprob: -10.928559303283691

Token 297: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.0009529097587801516
    2. '(' → logprob: -7.00095272064209
    3. '(block' → logprob: -10.12595272064209
    4. '(Board' → logprob: -15.00095272064209
    5. ' (' → logprob: -15.12595272064209
    6. '(b' → logprob: -15.50095272064209
    7. '(box' → logprob: -15.75095272064209
    8. '(deck' → logprob: -16.125953674316406
    9. '(body' → logprob: -16.500953674316406
    10. '(stack' → logprob: -16.750953674316406

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07890499383211136
    2. '):
' → logprob: -2.5789051055908203
    3. ')' → logprob: -12.20390510559082
    4. '):
' → logprob: -12.20390510559082
    5. ' ):' → logprob: -12.45390510559082
    6. '):

' → logprob: -14.45390510559082
    7. '   ' → logprob: -15.20390510559082
    8. ',' → logprob: -15.70390510559082
    9. ' ):
' → logprob: -15.82890510559082
    10. ':' → logprob: -16.70390510559082

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06293125450611115
    2. 'count' → logprob: -2.8129312992095947
    3. 'full' → logprob: -7.437931060791016
    4. ' count' → logprob: -9.062931060791016
    5. 'cnt' → logprob: -9.062931060791016
    6. '
' → logprob: -10.062931060791016
    7. ' full' → logprob: -10.187931060791016
    8. 'total' → logprob: -11.062931060791016
    9. 'return' → logprob: -11.437931060791016
    10. 'lines' → logprob: -11.937931060791016

Token 300: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.08476981520652771
    2. 'return' → logprob: -3.0847697257995605
    3. '   ' → logprob: -3.5847697257995605
    4. 'cnt' → logprob: -5.5847697257995605
    5. ' count' → logprob: -5.8347697257995605
    6. ' return' → logprob: -6.9597697257995605
    7. 'full' → logprob: -9.834770202636719
    8. 'sum' → logprob: -10.084770202636719
    9. 'counter' → logprob: -10.584770202636719
    10. '
' → logprob: -11.709770202636719

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858839511871338
    2. '=' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.298588752746582
    4. ' ' → logprob: -14.798588752746582
    5. ' =
' → logprob: -16.798587799072266
    6. '  ' → logprob: -17.048587799072266
    7. 'def' → logprob: -18.673587799072266
    8. ',' → logprob: -19.423587799072266
    9. ' ' → logprob: -19.798587799072266
    10. ' +=' → logprob: -20.173587799072266

Token 302: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012530720792710781
    2. ' ' → logprob: -4.38753080368042
    3. ' sum' → logprob: -11.512530326843262
    4. 'board' → logprob: -12.137530326843262
    5. 'sum' → logprob: -12.762530326843262
    6. ' board' → logprob: -13.012530326843262
    7. ' len' → logprob: -15.137530326843262
    8. 'len' → logprob: -15.262530326843262
    9. '   ' → logprob: -15.387530326843262
    10. '=' → logprob: -18.512531280517578

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045914790825918317
    2. 'sum' → logprob: -7.75045919418335
    3. 'board' → logprob: -10.750458717346191
    4. ' ' → logprob: -12.125458717346191
    5. ' sum' → logprob: -13.875458717346191
    6. 'len' → logprob: -14.625458717346191
    7. '1' → logprob: -16.250459671020508
    8. '   ' → logprob: -17.125459671020508
    9. ' board' → logprob: -17.500459671020508
    10. 'row' → logprob: -18.125459671020508

Token 304: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024124568328261375
    2. '   ' → logprob: -3.7741246223449707
    3. ' for' → logprob: -7.149124622344971
    4. '
' → logprob: -10.524124145507812
    5. '\n' → logprob: -10.649124145507812
    6. 'for' → logprob: -10.774124145507812
    7. '    
' → logprob: -11.649124145507812
    8. '  
' → logprob: -12.274124145507812
    9. ' 
' → logprob: -12.774124145507812
    10. ':
' → logprob: -13.774124145507812

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028545670211315155
    2. ' for' → logprob: -6.502854347229004
    3. 'for' → logprob: -6.627854347229004
    4. '
' → logprob: -10.502854347229004
    5. '	for' → logprob: -14.377854347229004
    6. '    
' → logprob: -15.127854347229004
    7. 'def' → logprob: -17.25285530090332
    8. '       ' → logprob: -18.00285530090332
    9. '
' → logprob: -18.50285530090332
    10. '   ' → logprob: -18.87785530090332

Token 306: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029802793636918068
    2. ' for' → logprob: -3.5298027992248535
    3. '   ' → logprob: -9.904802322387695
    4. 'H' → logprob: -13.779802322387695
    5. 'W' → logprob: -13.904802322387695
    6. '
' → logprob: -15.654802322387695
    7. ' H' → logprob: -16.154802322387695
    8. 'n' → logprob: -16.654802322387695
    9. '	for' → logprob: -16.904802322387695
    10. ' W' → logprob: -17.529802322387695

Token 307: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.03804585337638855
    2. ' row' → logprob: -3.288045883178711
    3. 'r' → logprob: -12.413045883178711
    4. 'line' → logprob: -15.038045883178711
    5. '	row' → logprob: -17.03804588317871
    6. ' ' → logprob: -17.16304588317871
    7. '   ' → logprob: -17.66304588317871
    8. ' r' → logprob: -18.78804588317871
    9. '(row' → logprob: -19.41304588317871
    10. 'rown' → logprob: -19.66304588317871

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006763564422726631
    2. 'in' → logprob: -5.006763458251953
    3. ' ' → logprob: -10.006763458251953
    4. '   ' → logprob: -14.381763458251953
    5. '	in' → logprob: -14.506763458251953
    6. 's' → logprob: -15.131763458251953
    7. 'n' → logprob: -15.256763458251953
    8. '  ' → logprob: -15.506763458251953
    9. ' ' → logprob: -16.006763458251953
    10. 'i' → logprob: -16.256763458251953

Token 309: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.018151111900806427
    2. ' board' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.76815128326416
    4. '(board' → logprob: -15.51815128326416
    5. '   ' → logprob: -15.64315128326416
    6. '	board' → logprob: -15.64315128326416
    7. 'range' → logprob: -15.76815128326416
    8. 'b' → logprob: -16.268150329589844
    9. ' range' → logprob: -17.018150329589844
    10. '.board' → logprob: -17.143150329589844

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31331852078437805
    2. ':
' → logprob: -1.3133184909820557
    3. '   ' → logprob: -10.688318252563477
    4. ' :' → logprob: -11.438318252563477
    5. ' :
' → logprob: -11.938318252563477
    6. ' if' → logprob: -12.563318252563477
    7. ':

' → logprob: -12.563318252563477
    8. '[' → logprob: -13.188318252563477
    9. ':
' → logprob: -13.188318252563477
    10. 'if' → logprob: -13.438318252563477

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4464870095252991
    2. ' if' → logprob: -1.0714869499206543
    3. 'if' → logprob: -4.321486949920654
    4. '   ' → logprob: -5.446486949920654
    5. '    ' → logprob: -11.821487426757812
    6. '	if' → logprob: -12.446487426757812
    7. ' ' → logprob: -12.946487426757812
    8. ':' → logprob: -13.071487426757812
    9. '      ' → logprob: -13.196487426757812
    10. ' for' → logprob: -13.321487426757812

Token 312: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014171031303703785
    2. ' if' → logprob: -4.264171123504639
    3. '   ' → logprob: -12.01417064666748
    4. '
' → logprob: -14.26417064666748
    5. '       ' → logprob: -15.01417064666748
    6. 'all' → logprob: -15.26417064666748
    7. '	if' → logprob: -15.63917064666748
    8. '    ' → logprob: -16.889171600341797
    9. ' all' → logprob: -17.014171600341797
    10. 'count' → logprob: -17.514171600341797

Token 313: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10984205454587936
    2. ''#' → logprob: -2.35984206199646
    3. 'row' → logprob: -5.109841823577881
    4. ' all' → logprob: -5.984841823577881
    5. ''' → logprob: -7.359841823577881
    6. ' '#'' → logprob: -8.359842300415039
    7. ''all' → logprob: -9.359842300415039
    8. 'set' → logprob: -9.984842300415039
    9. ''.' → logprob: -10.984842300415039
    10. ' row' → logprob: -12.234842300415039

Token 314: '(ch' (ID: 15574)
  Prédit: '(cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.10246327519416809
    2. '(c' → logprob: -2.3524632453918457
    3. '(ch' → logprob: -6.102463245391846
    4. '((' → logprob: -12.227463722229004
    5. '([' → logprob: -12.852463722229004
    6. '(tile' → logprob: -12.852463722229004
    7. '(x' → logprob: -12.977463722229004
    8. '(' → logprob: -13.227463722229004
    9. 'cell' → logprob: -13.477463722229004
    10. '(pos' → logprob: -14.977463722229004

Token 315: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5876705050468445
    2. ' ==' → logprob: -0.8376705050468445
    3. '=='' → logprob: -4.46267032623291
    4. '=' → logprob: -9.71267032623291
    5. '==
' → logprob: -11.21267032623291
    6. '=="' → logprob: -11.46267032623291
    7. '#' → logprob: -11.71267032623291
    8. '   ' → logprob: -11.83767032623291
    9. ' =='' → logprob: -11.96267032623291
    10. '===' → logprob: -12.21267032623291

Token 316: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -3.273621405242011e-05
    2. ' '#'' → logprob: -10.750032424926758
    3. ' '#' → logprob: -11.500032424926758
    4. ''' → logprob: -14.750032424926758
    5. '"#' → logprob: -14.875032424926758
    6. '('#' → logprob: -15.375032424926758
    7. ':'#' → logprob: -16.750032424926758
    8. '='#' → logprob: -17.125032424926758
    9. '  ' → logprob: -17.875032424926758
    10. '   ' → logprob: -17.875032424926758

Token 317: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.048602476716041565
    2. 'for' → logprob: -3.04860258102417
    3. ' ' → logprob: -11.298602104187012
    4. '   ' → logprob: -13.923602104187012
    5. ')' → logprob: -14.173602104187012
    6. '	for' → logprob: -14.173602104187012
    7. '  ' → logprob: -16.048603057861328
    8. '    ' → logprob: -16.048603057861328
    9. '
' → logprob: -16.548603057861328
    10. '#' → logprob: -17.423603057861328

Token 318: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.01815216802060604
    2. 'ch' → logprob: -4.018152236938477
    3. '	ch' → logprob: -13.143152236938477
    4. ' row' → logprob: -15.768152236938477
    5. '(ch' → logprob: -16.018152236938477
    6. '[ch' → logprob: -16.643152236938477
    7. ' ' → logprob: -16.893152236938477
    8. '_ch' → logprob: -17.018152236938477
    9. 'row' → logprob: -18.268152236938477
    10. 'Ch' → logprob: -19.393152236938477

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023772960528731346
    2. ' ch' → logprob: -4.023773193359375
    3. 'in' → logprob: -5.773773193359375
    4. 'ch' → logprob: -6.523773193359375
    5. ' ' → logprob: -7.773773193359375
    6. 'row' → logprob: -8.148773193359375
    7. ' row' → logprob: -8.273773193359375
    8. '
' → logprob: -10.648773193359375
    9. '  ' → logprob: -10.898773193359375
    10. ')' → logprob: -12.773773193359375

Token 320: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.023245826363563538
    2. ' row' → logprob: -3.7732458114624023
    3. '	row' → logprob: -16.14824676513672
    4. '(row' → logprob: -16.14824676513672
    5. '[row' → logprob: -16.89824676513672
    6. ' ' → logprob: -17.77324676513672
    7. '=row' → logprob: -18.27324676513672
    8. '
' → logprob: -18.64824676513672
    9. 'ro' → logprob: -19.14824676513672
    10. 'range' → logprob: -19.27324676513672

Token 321: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014198172837495804
    2. '):
' → logprob: -4.264198303222656
    3. ' ):' → logprob: -10.639198303222656
    4. ')' → logprob: -11.639198303222656
    5. '):
' → logprob: -13.639198303222656
    6. ' ):
' → logprob: -14.889198303222656
    7. '):

' → logprob: -15.639198303222656
    8. ' ' → logprob: -17.014198303222656
    9. ':' → logprob: -17.514198303222656
    10. '   ' → logprob: -17.514198303222656

Token 322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013994961977005005
    2. '       ' → logprob: -4.388995170593262
    3. ' count' → logprob: -6.888995170593262
    4. 'count' → logprob: -8.013995170593262
    5. '
' → logprob: -9.888995170593262
    6. ',count' → logprob: -11.263995170593262
    7. '		' → logprob: -11.513995170593262
    8. '	       ' → logprob: -11.763995170593262
    9. '               ' → logprob: -11.763995170593262
    10. ',' → logprob: -12.138995170593262

Token 323: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7643772959709167
    2. 'count' (adapté à ' count') → logprob: -1.0143773555755615
    3. ' count' → logprob: -1.7643773555755615
    4. '           ' → logprob: -8.38937759399414
    5. '   ' → logprob: -8.51437759399414
    6. '
' → logprob: -11.26437759399414
    7. '	count' → logprob: -12.38937759399414
    8. '               ' → logprob: -13.01437759399414
    9. ' ' → logprob: -13.51437759399414
    10. '_count' → logprob: -14.13937759399414

Token 324: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07889595627784729
    2. '+=' → logprob: -2.5788960456848145
    3. '+' → logprob: -12.328895568847656
    4. ']+=' → logprob: -14.453895568847656
    5. '    ' → logprob: -14.828895568847656
    6. '   ' → logprob: -15.203895568847656
    7. '<|end|>' → logprob: -15.703895568847656
    8. '=' → logprob: -15.828895568847656
    9. ' ' → logprob: -15.953895568847656
    10. ' +' → logprob: -16.953895568847656

Token 325: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -21.125158309936523
    4. '```' → logprob: -22.000158309936523
    5. '
' → logprob: -22.625158309936523
    6. ' ' → logprob: -23.125158309936523
    7. '１' → logprob: -23.125158309936523
    8. '100' → logprob: -23.500158309936523
    9. '2' → logprob: -23.625158309936523
    10. '۱' → logprob: -23.750158309936523

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -21.875
    4. '
' → logprob: -22.625
    5. '１' → logprob: -23.625
    6. '۱' → logprob: -23.875
    7. '<|end|>' → logprob: -24.0
    8. '100' → logprob: -24.375
    9. '   ' → logprob: -24.375
    10. '10' → logprob: -25.125

Token 327: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07113899290561676
    2. '
' → logprob: -3.071139097213745
    3. ' return' → logprob: -4.446138858795166
    4. 'return' → logprob: -4.571138858795166
    5. '	return' → logprob: -8.821139335632324
    6. '    
' → logprob: -10.446139335632324
    7. '<|end|>' → logprob: -10.946139335632324
    8. ' 
' → logprob: -11.321139335632324
    9. ':return' → logprob: -12.071139335632324
    10. ' ' → logprob: -12.821139335632324

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010475130751729012
    2. ' return' → logprob: -5.260475158691406
    3. 'return' → logprob: -5.260475158691406
    4. '
' → logprob: -10.760475158691406
    5. '	return' → logprob: -11.385475158691406
    6. '       ' → logprob: -13.885475158691406
    7. ' ' → logprob: -14.885475158691406
    8. 'def' → logprob: -15.135475158691406
    9. ':return' → logprob: -15.510475158691406
    10. '    
' → logprob: -16.260475158691406

Token 329: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005362179130315781
    2. ' return' → logprob: -5.255362033843994
    3. '   ' → logprob: -9.005362510681152
    4. '
' → logprob: -12.505362510681152
    5. '	return' → logprob: -13.755362510681152
    6. ' ' → logprob: -14.255362510681152
    7. 'def' → logprob: -16.380361557006836
    8. 'eturn' → logprob: -16.880361557006836
    9. '       ' → logprob: -17.005361557006836
    10. '```' → logprob: -17.755361557006836

Token 330: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6931471824645996
    2. 'count' → logprob: -0.6931471824645996
    3. '	count' → logprob: -17.943147659301758
    4. '[count' → logprob: -18.193147659301758
    5. '(count' → logprob: -18.943147659301758
    6. '$count' → logprob: -19.443147659301758
    7. '<count' → logprob: -19.693147659301758
    8. '=count' → logprob: -20.443147659301758
    9. 'c' → logprob: -20.693147659301758
    10. '_count' → logprob: -20.943147659301758

Token 331: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3243907392024994
    2. '
' → logprob: -1.5743907690048218
    3. '

' → logprob: -2.6993906497955322
    4. '<|end|>' → logprob: -5.949390888214111
    5. ' def' → logprob: -11.449390411376953
    6. '<|end|>' → logprob: -11.574390411376953
    7. '


' → logprob: -12.199390411376953
    8. '```' → logprob: -12.199390411376953
    9. '
' → logprob: -12.574390411376953
    10. '#' → logprob: -12.824390411376953

Token 332: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. '
' → logprob: -17.625
    3. ' def' → logprob: -18.875
    4. '```' → logprob: -19.375
    5. '#' → logprob: -20.25
    6. 'ndef' → logprob: -20.375
    7. 'import' → logprob: -20.875
    8. '  
' → logprob: -21.0
    9. '    
' → logprob: -21.25
    10. 'from' → logprob: -21.5

Token 333: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22921685874462128
    2. '=' → logprob: -1.9792168140411377
    3. ',' → logprob: -2.9792168140411377
    4. ' ' → logprob: -4.229217052459717
    5. '_' → logprob: -7.854217052459717
    6. '  ' → logprob: -8.604216575622559
    7. ' ,' → logprob: -8.729216575622559
    8. '.' → logprob: -9.354216575622559
    9. 'M' → logprob: -9.729216575622559
    10. ')' → logprob: -9.979216575622559

Token 334: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2411348819732666
    2. '20' → logprob: -1.3661348819732666
    3. ' ' → logprob: -1.4911348819732666
    4. 'int' → logprob: -2.8661348819732666
    5. ' int' → logprob: -2.9911348819732666
    6. '6' → logprob: -3.1161348819732666
    7. '4' → logprob: -3.3661348819732666
    8. '5' → logprob: -3.6161348819732666
    9. '7' → logprob: -4.7411346435546875
    10. '8' → logprob: -5.9911346435546875

Token 335: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001135454629547894
    2. '(' → logprob: -7.001135349273682
    3. 'input' → logprob: -8.50113582611084
    4. '()' → logprob: -10.87613582611084
    5. ' input' → logprob: -14.12613582611084
    6. '(
' → logprob: -14.87613582611084
    7. '('' → logprob: -15.00113582611084
    8. '=input' → logprob: -15.50113582611084
    9. ' (' → logprob: -17.001134872436523
    10. '("' → logprob: -17.376134872436523

Token 336: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005252256989479065
    2. '()' → logprob: -5.255252361297607
    3. '())
' → logprob: -11.50525188446045
    4. ')' → logprob: -12.38025188446045
    5. '(' → logprob: -13.38025188446045
    6. '()
' → logprob: -13.75525188446045
    7. ' ())' → logprob: -14.13025188446045
    8. '().' → logprob: -14.63025188446045
    9. '()>' → logprob: -16.130252838134766
    10. '())

' → logprob: -16.505252838134766

Token 337: 'for' (ID: 1938)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.3706084191799164
    2. 'boards' → logprob: -1.4956084489822388
    3. 'for' → logprob: -3.370608329772949
    4. 'blocks' → logprob: -3.870608329772949
    5. 'M' → logprob: -4.495608329772949
    6. ' boards' → logprob: -5.245608329772949
    7. 'W' → logprob: -5.245608329772949
    8. ' board' → logprob: -5.995608329772949
    9. ' for' → logprob: -6.745608329772949
    10. 'block' → logprob: -6.745608329772949

Token 338: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004104404244571924
    2. '_' → logprob: -5.5041046142578125
    3. ' i' → logprob: -10.629104614257812
    4. ' ' → logprob: -13.504104614257812
    5. ' ' → logprob: -15.629104614257812
    6. '_i' → logprob: -16.254104614257812
    7. ' _
' → logprob: -17.629104614257812
    8. ' range' → logprob: -17.754104614257812
    9. ' ‌' → logprob: -18.254104614257812
    10. ' ▁' → logprob: -18.879104614257812

Token 339: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05524003878235817
    2. 'in' → logprob: -2.9302401542663574
    3. ' ' → logprob: -8.5552396774292
    4. 'range' → logprob: -8.8052396774292
    5. ' range' → logprob: -12.9302396774292
    6. 'N' → logprob: -13.1802396774292
    7. ' _' → logprob: -13.3052396774292
    8. '_' → logprob: -13.5552396774292
    9. '	in' → logprob: -13.8052396774292
    10. '0' → logprob: -13.8052396774292

Token 340: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150413408875465
    2. ' range' → logprob: -4.018150329589844
    3. '	range' → logprob: -16.143150329589844
    4. 'N' → logprob: -16.393150329589844
    5. 'rang' → logprob: -16.518150329589844
    6. 'input' → logprob: -16.643150329589844
    7. '(range' → logprob: -16.768150329589844
    8. '[' → logprob: -17.768150329589844
    9. '...' → logprob: -18.268150329589844
    10. ' ' → logprob: -18.393150329589844

Token 341: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.30126065015792847
    2. '(' → logprob: -1.9262607097625732
    3. ' (' → logprob: -2.1762607097625732
    4. ' N' → logprob: -7.551260471343994
    5. '()' → logprob: -8.426260948181152
    6. 'N' → logprob: -9.426260948181152
    7. ' ()' → logprob: -9.551260948181152
    8. '(
' → logprob: -10.426260948181152
    9. ' (
' → logprob: -11.426260948181152
    10. ' ' → logprob: -11.801260948181152

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006763683166354895
    2. '):
' → logprob: -5.256763458251953
    3. ' ):' → logprob: -6.756763458251953
    4. ':' → logprob: -8.006763458251953
    5. ')' → logprob: -10.881763458251953
    6. '():' → logprob: -12.256763458251953
    7. ' ):
' → logprob: -12.381763458251953
    8. ' :' → logprob: -13.131763458251953
    9. ' )' → logprob: -14.256763458251953
    10. ':
' → logprob: -14.381763458251953

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047816142439842224
    2. ' block' → logprob: -4.047816276550293
    3. ' H' → logprob: -4.422816276550293
    4. ' board' → logprob: -4.672816276550293
    5. '    ' → logprob: -6.297816276550293
    6. ' W' → logprob: -6.422816276550293
    7. 'block' → logprob: -7.422816276550293
    8. ' s' → logprob: -7.672816276550293
    9. ' size' → logprob: -7.672816276550293
    10. 'board' → logprob: -7.922816276550293

Token 344: ' #' (ID: 1069)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.016411686316132545
    2. 'R' → logprob: -5.141411781311035
    3. 'h' → logprob: -5.641411781311035
    4. ' H' → logprob: -5.641411781311035
    5. 'board' → logprob: -6.516411781311035
    6. 'W' → logprob: -7.141411781311035
    7. 'M' → logprob: -8.391411781311035
    8. 'block' → logprob: -8.641411781311035
    9. ' board' → logprob: -9.141411781311035
    10. 'B' → logprob: -9.141411781311035

Token 345: ' Read' (ID: 5405)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.022579623386263847
    2. 'R' → logprob: -4.772579669952393
    3. 'h' → logprob: -5.272579669952393
    4. ' H' → logprob: -5.522579669952393
    5. 'block' → logprob: -6.022579669952393
    6. 'board' → logprob: -7.522579669952393
    7. 'M' → logprob: -7.897579669952393
    8. 'W' → logprob: -8.147579193115234
    9. 'r' → logprob: -8.272579193115234
    10. ' block' → logprob: -9.272579193115234

Token 346: ' block' (ID: 4355)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5687755346298218
    2. ' H' → logprob: -1.4437755346298218
    3. 'board' → logprob: -2.8187756538391113
    4. ' board' → logprob: -3.1937756538391113
    5. 'h' → logprob: -3.9437756538391113
    6. 'R' → logprob: -4.068775653839111
    7. ' h' → logprob: -4.068775653839111
    8. ' R' → logprob: -4.318775653839111
    9. 'block' → logprob: -4.443775653839111
    10. ' block' → logprob: -4.818775653839111

Token 347: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5643815994262695
    2. '_type' → logprob: -1.9393815994262695
    3. '_size' → logprob: -2.6893815994262695
    4. '_h' → logprob: -2.8143815994262695
    5. 'H' → logprob: -3.1893815994262695
    6. '_shape' → logprob: -3.4393815994262695
    7. '_height' → logprob: -3.5643815994262695
    8. '_H' → logprob: -3.8143815994262695
    9. '=' → logprob: -5.1893815994262695
    10. '_lines' → logprob: -5.1893815994262695

Token 348: '   ' (ID: 271)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07368256896734238
    2. 'size' → logprob: -4.32368278503418
    3. '   ' → logprob: -4.44868278503418
    4. 'h' → logprob: -4.44868278503418
    5. ' H' → logprob: -4.44868278503418
    6. ' h' → logprob: -5.19868278503418
    7. 'height' → logprob: -5.82368278503418
    8. ' =' → logprob: -6.07368278503418
    9. ',' → logprob: -6.32368278503418
    10. 'R' → logprob: -6.57368278503418

Token 349: ' BH' (ID: 79683)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.35044339299201965
    2. 'h' → logprob: -1.8504433631896973
    3. 'R' → logprob: -2.6004433631896973
    4. ' H' → logprob: -3.4754433631896973
    5. ' h' → logprob: -4.100443363189697
    6. ' R' → logprob: -4.725443363189697
    7. 'block' → logprob: -6.100443363189697
    8. 'r' → logprob: -6.475443363189697
    9. 'B' → logprob: -6.975443363189697
    10. ' block' → logprob: -7.100443363189697

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028408952057361603
    2. ' =' → logprob: -6.127840995788574
    3. ',W' → logprob: -7.877840995788574
    4. ' ,' → logprob: -9.127840995788574
    5. '=' → logprob: -9.627840995788574
    6. ',B' → logprob: -10.002840995788574
    7. ',H' → logprob: -10.252840995788574
    8. ' ' → logprob: -12.627840995788574
    9. '   ' → logprob: -12.627840995788574
    10. 'H' → logprob: -12.752840995788574

Token 351: ' BW' (ID: 92765)
  Prédit: ' BW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BW' → logprob: -0.07109035551548004
    2. 'BW' → logprob: -2.6960904598236084
    3. ' BL' → logprob: -7.446090221405029
    4. ',' → logprob: -8.321090698242188
    5. ' BH' → logprob: -8.821090698242188
    6. ' B' → logprob: -10.071090698242188
    7. 'BL' → logprob: -10.196090698242188
    8. ' BC' → logprob: -10.196090698242188
    9. ' ' → logprob: -10.946090698242188
    10. 'B' → logprob: -11.321090698242188

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234813690185547
    2. '=' → logprob: -0.8984813690185547
    3. ',' → logprob: -8.523481369018555
    4. ' ' → logprob: -9.273481369018555
    5. '=int' → logprob: -10.523481369018555
    6. '=input' → logprob: -10.648481369018555
    7. '   ' → logprob: -12.398481369018555
    8. '=B' → logprob: -13.023481369018555
    9. ',B' → logprob: -13.273481369018555
    10. ' ,' → logprob: -13.398481369018555

Token 353: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03806180879473686
    2. 'map' → logprob: -3.2880618572235107
    3. ' [' → logprob: -11.66306209564209
    4. '[' → logprob: -11.91306209564209
    5. ' list' → logprob: -12.53806209564209
    6. ' ' → logprob: -14.53806209564209
    7. 'list' → logprob: -14.66306209564209
    8. '	map' → logprob: -15.53806209564209
    9. 'm' → logprob: -15.91306209564209
    10. ' m' → logprob: -16.413061141967773

Token 354: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.233804303221405e-05
    2. '(input' → logprob: -10.125092506408691
    3. 'int' → logprob: -10.500092506408691
    4. '(' → logprob: -11.000092506408691
    5. '(str' → logprob: -12.000092506408691
    6. ' (' → logprob: -13.875092506408691
    7. ' int' → logprob: -15.500092506408691
    8. '<int' → logprob: -15.750092506408691
    9. '=int' → logprob: -15.875092506408691
    10. 'input' → logprob: -16.375091552734375

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31589215993881226
    2. ',input' → logprob: -1.315892219543457
    3. '(input' → logprob: -6.065892219543457
    4. ' ,' → logprob: -8.940892219543457
    5. 'input' → logprob: -8.940892219543457
    6. '(' → logprob: -10.315892219543457
    7. ',int' → logprob: -12.565892219543457
    8. ' (' → logprob: -12.940892219543457
    9. ' input' → logprob: -13.190892219543457
    10. '   ' → logprob: -13.940892219543457

Token 356: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196768581867218
    2. ' input' → logprob: -2.811967611312866
    3. ',input' → logprob: -18.061967849731445
    4. ' ' → logprob: -18.436967849731445
    5. '<input' → logprob: -18.936967849731445
    6. ')' → logprob: -19.061967849731445
    7. '=input' → logprob: -19.061967849731445
    8. '(input' → logprob: -19.311967849731445
    9. 'int' → logprob: -20.186967849731445
    10. '
' → logprob: -20.561967849731445

Token 357: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. ' ().' → logprob: -16.0
    3. '()' → logprob: -16.25
    4. '(' → logprob: -17.75
    5. '.split' → logprob: -18.75
    6. ')' → logprob: -19.5
    7. 'split' → logprob: -20.0
    8. '.' → logprob: -20.625
    9. ' .' → logprob: -21.0
    10. '()
' → logprob: -21.25

Token 358: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.392202976712724e-06
    2. 'strip' → logprob: -12.000006675720215
    3. ' split' → logprob: -16.1250057220459
    4. '(split' → logprob: -18.7500057220459
    5. '().' → logprob: -19.1250057220459
    6. '.split' → logprob: -19.1250057220459
    7. 'spl' → logprob: -19.7500057220459
    8. 'rstrip' → logprob: -21.1250057220459
    9. 's' → logprob: -21.3750057220459
    10. 'sp' → logprob: -21.7500057220459

Token 359: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023014359176158905
    2. '())' → logprob: -6.127301216125488
    3. '()' → logprob: -9.627301216125488
    4. ')
' → logprob: -10.127301216125488
    5. '))' → logprob: -12.127301216125488
    6. ' )' → logprob: -13.252301216125488
    7. '(' → logprob: -13.502301216125488
    8. '())
' → logprob: -13.752301216125488
    9. ')`' → logprob: -15.002301216125488
    10. ')
' → logprob: -15.627301216125488

Token 360: '   ' (ID: 271)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.37679561972618103
    2. ' block' → logprob: -1.7517956495285034
    3. '   ' → logprob: -2.001795530319214
    4. '
' → logprob: -6.126795768737793
    5. '	block' → logprob: -6.251795768737793
    6. '    
' → logprob: -7.501795768737793
    7. ')
' → logprob: -8.751795768737793
    8. ')' → logprob: -8.876795768737793
    9. ':block' → logprob: -9.376795768737793
    10. '_block' → logprob: -9.626795768737793

Token 361: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' (adapté à ' block') → logprob: -0.0017462196992710233
    2. ' block' → logprob: -6.37674617767334
    3. '   ' → logprob: -10.87674617767334
    4. '    
' → logprob: -11.50174617767334
    5. 'blocks' → logprob: -12.62674617767334
    6. '
' → logprob: -13.00174617767334
    7. '_block' → logprob: -13.50174617767334
    8. 'blk' → logprob: -13.62674617767334
    9. 'b' → logprob: -14.00174617767334
    10. '	block' → logprob: -14.12674617767334

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858918860554695
    2. '=' → logprob: -3.0485892295837402
    3. '=[]' → logprob: -13.548588752746582
    4. '_block' → logprob: -16.1735897064209
    5. ' =[' → logprob: -16.6735897064209
    6. ' =
' → logprob: -16.6735897064209
    7. '=[]
' → logprob: -16.7985897064209
    8. 'block' → logprob: -16.9235897064209
    9. ' ' → logprob: -16.9235897064209
    10. '=[' → logprob: -17.2985897064209

Token 363: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14074791967868805
    2. '[input' → logprob: -2.6407480239868164
    3. ' [' → logprob: -2.8907480239868164
    4. '[str' → logprob: -6.390748023986816
    5. '[line' → logprob: -8.015748023986816
    6. '[B' → logprob: -8.140748023986816
    7. '[int' → logprob: -8.515748023986816
    8. '[item' → logprob: -8.640748023986816
    9. '[class' → logprob: -8.640748023986816
    10. '[b' → logprob: -8.890748023986816

Token 364: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.088346359931165e-07
    2. ' input' → logprob: -14.000000953674316
    3. 'list' → logprob: -21.875
    4. '<input' → logprob: -22.25
    5. '(input' → logprob: -22.75
    6. '=input' → logprob: -23.375
    7. '_input' → logprob: -24.75
    8. '
' → logprob: -25.0
    9. '   ' → logprob: -25.0
    10. '	input' → logprob: -25.5

Token 365: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016274561639875174
    2. '()]' → logprob: -7.001627445220947
    3. '().' → logprob: -7.251627445220947
    4. '())' → logprob: -12.751627922058105
    5. '()
' → logprob: -13.501627922058105
    6. '(' → logprob: -13.876627922058105
    7. ' ()' → logprob: -14.126627922058105
    8. '()].' → logprob: -15.876627922058105
    9. '（）' → logprob: -16.12662696838379
    10. '()>' → logprob: -16.62662696838379

Token 366: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06203131750226021
    2. 'for' → logprob: -2.8120312690734863
    3. '	for' → logprob: -10.312031745910645
    4. ')' → logprob: -11.312031745910645
    5. '()' → logprob: -12.312031745910645
    6. '<|end|>' → logprob: -12.312031745910645
    7. '.strip' → logprob: -12.812031745910645
    8. ' ' → logprob: -12.937031745910645
    9. '.rstrip' → logprob: -13.312031745910645
    10. '   ' → logprob: -13.937031745910645

Token 367: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26163268089294434
    2. ' _' → logprob: -1.5116326808929443
    3. ' range' → logprob: -5.011632919311523
    4. 'range' → logprob: -6.511632919311523
    5. ' in' → logprob: -6.761632919311523
    6. ' ' → logprob: -9.261632919311523
    7. '_B' → logprob: -9.636632919311523
    8. '_range' → logprob: -9.761632919311523
    9. '_b' → logprob: -10.136632919311523
    10. '__' → logprob: -10.136632919311523

Token 368: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052342405542731285
    2. ' range' → logprob: -5.255234241485596
    3. 'BH' → logprob: -16.005233764648438
    4. ' in' → logprob: -16.130233764648438
    5. '(range' → logprob: -16.505233764648438
    6. '_range' → logprob: -17.255233764648438
    7. '	range' → logprob: -17.880233764648438
    8. 'in' → logprob: -18.005233764648438
    9. ')' → logprob: -18.130233764648438
    10. ' ' → logprob: -18.130233764648438

Token 369: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -17.503177642822266
    4. ' ' → logprob: -17.628177642822266
    5. '   ' → logprob: -18.503177642822266
    6. '  ' → logprob: -19.753177642822266
    7. '	range' → logprob: -20.128177642822266
    8. '
' → logprob: -20.253177642822266
    9. 'BH' → logprob: -20.378177642822266
    10. '    ' → logprob: -21.628177642822266

Token 370: '(B' (ID: 8409)
  Prédit: 'BH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BH' → logprob: -0.05624236911535263
    2. '(B' → logprob: -2.9312424659729004
    3. ' BH' → logprob: -6.9312424659729
    4. 'BW' → logprob: -8.056241989135742
    5. 'B' → logprob: -10.306241989135742
    6. '   ' → logprob: -10.806241989135742
    7. '	B' → logprob: -13.431241989135742
    8. '_B' → logprob: -13.556241989135742
    9. ' (' → logprob: -13.681241989135742
    10. '
' → logprob: -13.681241989135742

Token 371: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.12763838469982147
    2. 'W' → logprob: -2.127638339996338
    3. 'BH' → logprob: -7.377638339996338
    4. 'HW' → logprob: -9.877638816833496
    5. 'BW' → logprob: -11.002638816833496
    6. ')' → logprob: -12.002638816833496
    7. 'WH' → logprob: -13.127638816833496
    8. 'I' → logprob: -13.627638816833496
    9. 'h' → logprob: -13.752638816833496
    10. '
' → logprob: -14.002638816833496

Token 372: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001006846665404737
    2. ']' → logprob: -7.251007080078125
    3. ')' → logprob: -8.126007080078125
    4. '])' → logprob: -15.251007080078125
    5. ')]
' → logprob: -15.376007080078125
    6. ' )' → logprob: -15.626007080078125
    7. '   ' → logprob: -16.376007080078125
    8. ']
' → logprob: -16.501007080078125
    9. '])]' → logprob: -16.501007080078125
    10. ')],' → logprob: -16.876007080078125

Token 373: '   ' (ID: 271)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.8576592206954956
    2. '   ' → logprob: -1.6076592206954956
    3. 'score' → logprob: -2.982659339904785
    4. 'best' → logprob: -3.107659339904785
    5. 'max' → logprob: -3.357659339904785
    6. ' best' → logprob: -3.482659339904785
    7. 'SH' → logprob: -3.982659339904785
    8. 'BW' → logprob: -4.482659339904785
    9. ' board' → logprob: -4.607659339904785
    10. 'scores' → logprob: -4.732659339904785

Token 374: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.442596673965454
    2. 'best' → logprob: -1.442596673965454
    3. 'board' → logprob: -1.442596673965454
    4. 'block' → logprob: -2.192596673965454
    5. 'all' → logprob: -3.442596673965454
    6. 'full' → logprob: -3.942596673965454
    7. 'for' → logprob: -3.942596673965454
    8. '#' (adapté à ' #') → logprob: -4.567596435546875
    9. 'placed' → logprob: -4.817596435546875
    10. 'M' → logprob: -4.942596435546875

Token 375: ' Read' (ID: 5405)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9834908246994019
    2. 'best' → logprob: -0.9834908246994019
    3. 'block' → logprob: -2.2334909439086914
    4. 'board' → logprob: -3.4834909439086914
    5. ' best' → logprob: -3.7334909439086914
    6. 'all' → logprob: -4.108490943908691
    7. 'rot' → logprob: -4.608490943908691
    8. ' max' → logprob: -4.858490943908691
    9. 'answer' → logprob: -4.858490943908691
    10. 'result' → logprob: -4.983490943908691

Token 376: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.05925784632563591
    2. ' board' → logprob: -3.184257745742798
    3. 'BH' → logprob: -4.309257984161377
    4. ' BH' → logprob: -6.434257984161377
    5. 'BR' → logprob: -8.434257507324219
    6. 'H' → logprob: -8.434257507324219
    7. ' H' → logprob: -9.684257507324219
    8. '   ' → logprob: -9.684257507324219
    9. 'bh' → logprob: -9.934257507324219
    10. 'BOARD' → logprob: -10.184257507324219

Token 377: '
' (ID: 198)
  Prédit: 'BH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BH' → logprob: -0.05460713431239128
    2. 'H' → logprob: -3.1796071529388428
    3. ' BH' → logprob: -4.679606914520264
    4. '
' → logprob: -7.304606914520264
    5. '   ' → logprob: -7.679606914520264
    6. ' H' → logprob: -8.054607391357422
    7. 'SH' → logprob: -8.054607391357422
    8. 'board' → logprob: -8.304607391357422
    9. 'bh' → logprob: -10.304607391357422
    10. '
' → logprob: -10.554607391357422

Token 378: '   ' (ID: 271)
  Prédit: 'BH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BH' → logprob: -0.5995773673057556
    2. 'H' → logprob: -0.8495773673057556
    3. ' BH' → logprob: -4.4745774269104
    4. '   ' → logprob: -5.0995774269104
    5. ' H' → logprob: -5.7245774269104
    6. '
' → logprob: -6.7245774269104
    7. 'board' → logprob: -7.4745774269104
    8. 'B' → logprob: -8.349576950073242
    9. 'SH' → logprob: -8.599576950073242
    10. 'RH' → logprob: -9.724576950073242

Token 379: ' BH' (ID: 79683)
  Prédit: 'BH'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BH' (adapté à ' BH') → logprob: -0.42466139793395996
    2. 'H' → logprob: -1.17466139793396
    3. '20' → logprob: -3.92466139793396
    4. 'board' → logprob: -5.549661636352539
    5. ' BH' → logprob: -5.799661636352539
    6. 'RH' → logprob: -6.424661636352539
    7. '10' → logprob: -6.424661636352539
    8. 'SH' → logprob: -6.674661636352539
    9. ' H' → logprob: -6.674661636352539
    10. '16' → logprob: -7.674661636352539

Token 380: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008154943585395813
    2. '2' → logprob: -5.25815486907959
    3. 'W' → logprob: -6.63315486907959
    4. 'B' → logprob: -8.13315486907959
    5. 'BW' → logprob: -8.13315486907959
    6. 'H' → logprob: -8.38315486907959
    7. ' ,' → logprob: -8.38315486907959
    8. 'board' → logprob: -9.25815486907959
    9. '_,' → logprob: -9.38315486907959
    10. '1' → logprob: -9.88315486907959

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0391463193809614e-05
    2. ' ,' → logprob: -10.375060081481934
    3. 'BW' → logprob: -11.500060081481934
    4. ' BW' → logprob: -12.000060081481934
    5. ',B' → logprob: -12.500060081481934
    6. ',W' → logprob: -12.750060081481934
    7. 'W' → logprob: -13.125060081481934
    8. '=' → logprob: -13.500060081481934
    9. ',
' → logprob: -14.375060081481934
    10. '2' → logprob: -15.000060081481934

Token 382: ' BW' (ID: 92765)
  Prédit: ' BW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BW' → logprob: -0.6380571126937866
    2. 'BW' → logprob: -0.8880571126937866
    3. ' BH' → logprob: -3.138057231903076
    4. 'BH' → logprob: -4.138057231903076
    5. 'B' → logprob: -8.013056755065918
    6. '<|end|>' → logprob: -8.138056755065918
    7. ' ' → logprob: -9.263056755065918
    8. 'BS' → logprob: -10.013056755065918
    9. 'BR' → logprob: -10.513056755065918
    10. ' B' → logprob: -10.513056755065918

Token 383: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741256833076477
    2. ' =' → logprob: -0.9741256833076477
    3. '2' → logprob: -10.224125862121582
    4. ',' → logprob: -12.099125862121582
    5. ' ' → logprob: -12.099125862121582
    6. '   ' → logprob: -15.099125862121582
    7. ')' → logprob: -15.224125862121582
    8. '=input' → logprob: -15.224125862121582
    9. '＝' → logprob: -16.724124908447266
    10. '=
' → logprob: -16.974124908447266

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759416818618774
    2. ' =' → logprob: -0.8259416818618774
    3. ' ' → logprob: -13.325942039489746
    4. ',' → logprob: -14.450942039489746
    5. '=input' → logprob: -17.07594108581543
    6. ')' → logprob: -17.32594108581543
    7. '=
' → logprob: -17.45094108581543
    8. '   ' → logprob: -18.07594108581543
    9. ' =
' → logprob: -18.07594108581543
    10. '＝' → logprob: -18.32594108581543

Token 385: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.061968132853507996
    2. 'map' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.686967849731445
    4. 'm' → logprob: -16.311967849731445
    5. '   ' → logprob: -16.436967849731445
    6. '    ' → logprob: -16.436967849731445
    7. '(map' → logprob: -17.186967849731445
    8. '	map' → logprob: -17.436967849731445
    9. ' mapa' → logprob: -17.811967849731445
    10. '_map' → logprob: -17.936967849731445

Token 386: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.248469718324486e-05
    2. '=int' → logprob: -12.000022888183594
    3. 'int' → logprob: -12.125022888183594
    4. '(str' → logprob: -12.250022888183594
    5. '   ' → logprob: -12.875022888183594
    6. ' (' → logprob: -14.125022888183594
    7. '(lambda' → logprob: -14.375022888183594
    8. '(input' → logprob: -14.625022888183594
    9. '(' → logprob: -14.875022888183594
    10. '(tuple' → logprob: -15.000022888183594

Token 387: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05301613360643387
    2. ',' → logprob: -3.178016185760498
    3. ',int' → logprob: -4.928016185760498
    4. '=int' → logprob: -6.178016185760498
    5. 'int' → logprob: -7.553016185760498
    6. '(' → logprob: -10.17801570892334
    7. '[int' → logprob: -10.17801570892334
    8. '(str' → logprob: -11.80301570892334
    9. ')' → logprob: -11.80301570892334
    10. '   ' → logprob: -11.92801570892334

Token 388: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04871328920125961
    2. ' input' → logprob: -3.048713207244873
    3. 'int' → logprob: -9.048713684082031
    4. 'str' → logprob: -12.048713684082031
    5. '(input' → logprob: -14.798713684082031
    6. 'map' → logprob: -14.923713684082031
    7. '   ' → logprob: -15.048713684082031
    8. ' ' → logprob: -15.173713684082031
    9. ' str' → logprob: -15.298713684082031
    10. 'list' → logprob: -15.798713684082031

Token 389: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.372294698550832e-06
    2. '=' → logprob: -12.375009536743164
    3. '()' → logprob: -12.500009536743164
    4. ' ().' → logprob: -14.500009536743164
    5. '()
' → logprob: -15.000009536743164
    6. '   ' → logprob: -16.250009536743164
    7. '.' → logprob: -16.375009536743164
    8. '=int' → logprob: -16.375009536743164
    9. '=input' → logprob: -16.625009536743164
    10. '(' → logprob: -16.875009536743164

Token 390: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -14.750000953674316
    3. 'strip' → logprob: -16.25
    4. 'spl' → logprob: -17.875
    5. '(split' → logprob: -18.25
    6. 'skip' → logprob: -18.75
    7. 's' → logprob: -18.875
    8. '.split' → logprob: -19.5
    9. 'sl' → logprob: -21.25
    10. '_split' → logprob: -21.375

Token 391: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008379586972296238
    2. ')
' → logprob: -5.0083794593811035
    3. '())' → logprob: -6.5083794593811035
    4. '()' → logprob: -9.008379936218262
    5. '())
' → logprob: -10.133379936218262
    6. ' )' → logprob: -12.383379936218262
    7. '()
' → logprob: -12.883379936218262
    8. ')

' → logprob: -13.508379936218262
    9. ')
' → logprob: -14.008379936218262
    10. '   ' → logprob: -15.508379936218262

Token 392: '   ' (ID: 271)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.06382591277360916
    2. '   ' → logprob: -2.813825845718384
    3. ' board' → logprob: -6.313826084136963
    4. '	board' → logprob: -10.688825607299805
    5. 'boards' → logprob: -12.188825607299805
    6. '.board' → logprob: -12.438825607299805
    7. '(board' → logprob: -12.563825607299805
    8. 'Board' → logprob: -12.938825607299805
    9. '_board' → logprob: -12.938825607299805
    10. '  ' → logprob: -14.063825607299805

Token 393: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -4.246537173457909e-06
    2. ' board' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.000003814697266
    4. 'boards' → logprob: -17.375003814697266
    5. 'block' → logprob: -17.500003814697266
    6. 'boa' → logprob: -17.750003814697266
    7. '	board' → logprob: -18.000003814697266
    8. 'Board' → logprob: -18.250003814697266
    9. 'b' → logprob: -18.375003814697266
    10. '
' → logprob: -18.625003814697266

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759401321411133
    2. '=' → logprob: -0.8259401321411133
    3. ' ' → logprob: -15.450940132141113
    4. '[' → logprob: -16.325939178466797
    5. '=
' → logprob: -16.700939178466797
    6. ' =
' → logprob: -16.700939178466797
    7. '=[]' → logprob: -16.700939178466797
    8. '=input' → logprob: -17.075939178466797
    9. ')' → logprob: -17.200939178466797
    10. ' =[' → logprob: -17.200939178466797

Token 395: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.05916920676827431
    2. '[' → logprob: -3.059169292449951
    3. ' [' → logprob: -4.559169292449951
    4. '[int' → logprob: -10.309168815612793
    5. '[b' → logprob: -11.434168815612793
    6. '[B' → logprob: -13.184168815612793
    7. '[item' → logprob: -13.309168815612793
    8. '[in' → logprob: -13.434168815612793
    9. '[str' → logprob: -14.434168815612793
    10. '[line' → logprob: -14.684168815612793

Token 396: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. '(input' → logprob: -19.00009536743164
    4. '<input' → logprob: -19.87509536743164
    5. '[input' → logprob: -20.37509536743164
    6. '=input' → logprob: -20.50009536743164
    7. '   ' → logprob: -21.00009536743164
    8. '	input' → logprob: -21.62509536743164
    9. '.input' → logprob: -21.87509536743164
    10. '
' → logprob: -22.00009536743164

Token 397: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0802738870552275e-05
    2. ' ()' → logprob: -11.62501049041748
    3. ' for' → logprob: -14.50001049041748
    4. ')' → logprob: -14.75001049041748
    5. 'for' → logprob: -15.00001049041748
    6. '().' → logprob: -15.25001049041748
    7. '()
' → logprob: -15.25001049041748
    8. '()]' → logprob: -16.500011444091797
    9. '(' → logprob: -17.750011444091797
    10. '())' → logprob: -18.125011444091797

Token 398: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8439525961875916
    2. 'for' → logprob: -1.0939526557922363
    3. '()' → logprob: -1.5939526557922363
    4. ')' → logprob: -3.4689526557922363
    5. '   ' → logprob: -7.843952655792236
    6. ' ' → logprob: -8.718952178955078
    7. ']' → logprob: -8.968952178955078
    8. '	for' → logprob: -9.718952178955078
    9. ' ()' → logprob: -10.843952178955078
    10. '  ' → logprob: -11.718952178955078

Token 399: ' _' (ID: 1175)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.26677367091178894
    2. ' range' → logprob: -1.7667737007141113
    3. ' (' → logprob: -3.1417737007141113
    4. '(range' → logprob: -4.016773700714111
    5. 'range' → logprob: -6.266773700714111
    6. '(' → logprob: -9.391773223876953
    7. '_' → logprob: -10.391773223876953
    8. '_range' → logprob: -11.516773223876953
    9. ' _' → logprob: -12.016773223876953
    10. ' ' → logprob: -12.266773223876953

Token 400: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5760324597358704
    2. 'range' → logprob: -0.8260324597358704
    3. ' in' → logprob: -9.451032638549805
    4. '_' → logprob: -12.326032638549805
    5. '_range' → logprob: -12.326032638549805
    6. 'in' → logprob: -12.826032638549805
    7. '(range' → logprob: -13.451032638549805
    8. ' _' → logprob: -14.326032638549805
    9. ' ' → logprob: -15.451032638549805
    10. '	range' → logprob: -15.451032638549805

Token 401: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1002088338136673
    2. 'range' → logprob: -2.3502087593078613
    3. '(range' → logprob: -13.10020923614502
    4. '_range' → logprob: -16.350208282470703
    5. '	range' → logprob: -18.600208282470703
    6. 'Range' → logprob: -18.850208282470703
    7. '
' → logprob: -19.100208282470703
    8. '   ' → logprob: -19.350208282470703
    9. ' ' → logprob: -19.725208282470703
    10. '(B' → logprob: -19.975208282470703

Token 402: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0033963483292609453
    2. 'BW' → logprob: -5.753396511077881
    3. 'BH' → logprob: -9.128396034240723
    4. ' BW' → logprob: -10.128396034240723
    5. ' (' → logprob: -10.253396034240723
    6. '   ' → logprob: -10.753396034240723
    7. 'B' → logprob: -12.128396034240723
    8. '(' → logprob: -13.378396034240723
    9. '_B' → logprob: -13.878396034240723
    10. ' BH' → logprob: -14.128396034240723

Token 403: 'H' (ID: 39)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009829283691942692
    2. 'W' → logprob: -4.634829521179199
    3. 'H' → logprob: -9.6348295211792
    4. 'BW' → logprob: -12.1348295211792
    5. 'HW' → logprob: -14.1348295211792
    6. '_' → logprob: -15.0098295211792
    7. 'w' → logprob: -15.1348295211792
    8. '_W' → logprob: -15.3848295211792
    9. '
' → logprob: -15.3848295211792
    10. 'h' → logprob: -15.6348295211792

Token 404: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. ')]' → logprob: -13.250004768371582
    3. ')' → logprob: -14.000004768371582
    4. '])' → logprob: -14.250004768371582
    5. '
' → logprob: -14.375004768371582
    6. '   ' → logprob: -15.750004768371582
    7. ' ' → logprob: -16.312503814697266
    8. ')]
' → logprob: -16.937503814697266
    9. '

' → logprob: -17.125003814697266
    10. ']' → logprob: -17.187503814697266

Token 405: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.313314952421933e-05
    2. ')' → logprob: -10.125062942504883
    3. ']' → logprob: -10.750062942504883
    4. ')]
' → logprob: -13.750062942504883
    5. ' )' → logprob: -15.125062942504883
    6. '   ' → logprob: -16.125062942504883
    7. ')]

' → logprob: -16.875062942504883
    8. ' ]' → logprob: -17.625062942504883
    9. ')][' → logprob: -17.750062942504883
    10. ')],' → logprob: -17.875062942504883

Token 406: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15645068883895874
    2. 'best' → logprob: -2.1564507484436035
    3. 'result' → logprob: -5.4064507484436035
    4. 'answer' → logprob: -5.4064507484436035
    5. 'found' → logprob: -5.4064507484436035
    6. 'placed' → logprob: -5.7814507484436035
    7. ' max' → logprob: -6.0314507484436035
    8. 'possible' → logprob: -6.4064507484436035
    9. 'valid' → logprob: -6.5314507484436035
    10. 'count' → logprob: -6.5314507484436035

Token 407: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13782615959644318
    2. 'best' → logprob: -2.1378262042999268
    3. 'answer' → logprob: -5.762825965881348
    4. 'ans' → logprob: -6.512825965881348
    5. 'found' → logprob: -6.512825965881348
    6. 'result' → logprob: -6.512825965881348
    7. 'block' → logprob: -7.012825965881348
    8. ' max' → logprob: -7.512825965881348
    9. 'placed' → logprob: -7.762825965881348
    10. 'all' → logprob: -8.137825965881348

Token 408: ' Generate' (ID: 33886)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.7297648191452026
    2. 'max' → logprob: -0.9797648191452026
    3. 'block' → logprob: -2.479764938354492
    4. ' best' → logprob: -4.729764938354492
    5. 'rot' → logprob: -4.729764938354492
    6. 'all' → logprob: -5.104764938354492
    7. 'answer' → logprob: -5.479764938354492
    8. 'ans' → logprob: -5.479764938354492
    9. ' max' → logprob: -5.604764938354492
    10. 'result' → logprob: -5.854764938354492

Token 409: ' all' (ID: 722)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.5401073694229126
    2. 'all' → logprob: -1.4151073694229126
    3. ' rotations' → logprob: -3.165107250213623
    4. 'results' → logprob: -3.540107250213623
    5. 'blocks' → logprob: -3.915107250213623
    6. 'block' → logprob: -3.915107250213623
    7. 'best' → logprob: -4.040107250213623
    8. ' all' → logprob: -4.290107250213623
    9. ' rotated' → logprob: -5.415107250213623
    10. 'placements' → logprob: -5.665107250213623

Token 410: ' rotations' (ID: 141136)
  Prédit: ' rotations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotations' → logprob: -0.13047713041305542
    2. 'rot' → logprob: -2.6304771900177
    3. '_rot' → logprob: -3.5054771900177
    4. ' orientations' → logprob: -4.505476951599121
    5. '   ' → logprob: -5.505476951599121
    6. ' rotated' → logprob: -6.130476951599121
    7. 'orient' → logprob: -6.755476951599121
    8. ' rot' → logprob: -6.880476951599121
    9. ' block' → logprob: -9.255476951599121
    10. 'blocks' → logprob: -9.380476951599121

Token 411: ' of' (ID: 328)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.21128106117248535
    2. 'blocks' → logprob: -1.9612810611724854
    3. '   ' → logprob: -3.2112810611724854
    4. ' rotations' → logprob: -4.961280822753906
    5. ' blocks' → logprob: -7.336280822753906
    6. 'all' → logprob: -7.336280822753906
    7. 'block' → logprob: -7.586280822753906
    8. 'rots' → logprob: -8.461280822753906
    9. ' rot' → logprob: -9.336280822753906
    10. 'rotation' → logprob: -9.461280822753906

Token 412: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.08899922668933868
    2. ' block' → logprob: -2.4639992713928223
    3. 'the' → logprob: -10.963998794555664
    4. '   ' → logprob: -11.088998794555664
    5. '(block' → logprob: -11.463998794555664
    6. 'blocks' → logprob: -11.838998794555664
    7. ' the' → logprob: -12.588998794555664
    8. '	block' → logprob: -13.463998794555664
    9. ' blocks' → logprob: -13.963998794555664
    10. '```' → logprob: -14.588998794555664

Token 413: ' (' (ID: 350)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.3923465311527252
    2. 'blocks' → logprob: -1.3923465013504028
    3. '   ' → logprob: -3.1423466205596924
    4. 'all' → logprob: -3.7673466205596924
    5. ' rotations' → logprob: -4.892346382141113
    6. 'block' → logprob: -7.267346382141113
    7. ' blocks' → logprob: -7.392346382141113
    8. 'rots' → logprob: -8.142346382141113
    9. 'rotation' → logprob: -8.642346382141113
    10. ' all' → logprob: -9.017346382141113

Token 414: 'max' (ID: 3228)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.6016561985015869
    2. 'rot' → logprob: -1.601656198501587
    3. ')' → logprob: -1.976656198501587
    4. 'block' → logprob: -3.226656198501587
    5. ')
' → logprob: -3.226656198501587
    6. ' blocks' → logprob: -4.726655960083008
    7. 'all' → logprob: -5.101655960083008
    8. '   ' → logprob: -5.226655960083008
    9. 'tiles' → logprob: -5.726655960083008
    10. ' rotations' → logprob: -5.976655960083008

Token 415: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.17550481855869293
    2. ' ' → logprob: -2.1755049228668213
    3. '=' → logprob: -3.1755049228668213
    4. ' four' → logprob: -6.050504684448242
    5. ')' → logprob: -6.550504684448242
    6. ' =' → logprob: -7.425504684448242
    7. ' of' → logprob: -8.175504684448242
    8. '   ' → logprob: -8.425504684448242
    9. '(' → logprob: -8.425504684448242
    10. ':' → logprob: -9.175504684448242

Token 416: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.001574971480295062
    2. '=' → logprob: -6.751574993133545
    3. ' ' → logprob: -8.126574516296387
    4. ')' → logprob: -10.501574516296387
    5. ' =' → logprob: -10.876574516296387
    6. ' four' → logprob: -10.876574516296387
    7. '   ' → logprob: -11.126574516296387
    8. '```' → logprob: -11.376574516296387
    9. ')
' → logprob: -12.751574516296387
    10. 'rot' → logprob: -12.876574516296387

Token 417: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3548698127269745
    2. ')
' → logprob: -1.2298698425292969
    3. ' )
' → logprob: -5.604869842529297
    4. ' )' → logprob: -6.104869842529297
    5. '):' → logprob: -8.479869842529297
    6. '):
' → logprob: -9.229869842529297
    7. 'block' → logprob: -9.354869842529297
    8. ')
' → logprob: -10.354869842529297
    9. 'blocks' → logprob: -11.354869842529297
    10. ']' → logprob: -11.479869842529297

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15482404828071594
    2. ' rotations' → logprob: -2.2798240184783936
    3. 'rot' → logprob: -4.279824256896973
    4. 'all' → logprob: -4.654824256896973
    5. 'blocks' → logprob: -4.654824256896973
    6. ' all' → logprob: -6.029824256896973
    7. ' blocks' → logprob: -6.154824256896973
    8. '    
' → logprob: -6.529824256896973
    9. ' rotated' → logprob: -7.529824256896973
    10. ' rot' → logprob: -7.654824256896973

Token 419: ' rotations' (ID: 141136)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.14620345830917358
    2. 'blocks' → logprob: -2.0212035179138184
    3. 'all' → logprob: -6.271203517913818
    4. 'block' → logprob: -6.896203517913818
    5. ' rotations' → logprob: -8.39620304107666
    6. '   ' → logprob: -8.52120304107666
    7. 'rots' → logprob: -9.02120304107666
    8. '    
' → logprob: -11.02120304107666
    9. 'rotation' → logprob: -11.02120304107666
    10. ' blocks' → logprob: -11.14620304107666

Token 420: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022859513759613
    2. '=' → logprob: -1.9102286100387573
    3. '=[]' → logprob: -12.535228729248047
    4. '=[' → logprob: -15.035228729248047
    5. ' =[' → logprob: -15.660228729248047
    6. '[' → logprob: -15.910228729248047
    7. '=[]
' → logprob: -16.160228729248047
    8. 's' → logprob: -16.535228729248047
    9. ',' → logprob: -17.160228729248047
    10. '[]' → logprob: -17.535228729248047

Token 421: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011203341418877244
    2. ' [' → logprob: -7.001120567321777
    3. '[]
' → logprob: -9.126120567321777
    4. '[b' → logprob: -9.501120567321777
    5. '[array' → logprob: -12.001120567321777
    6. '   ' → logprob: -12.626120567321777
    7. '[]' → logprob: -12.751120567321777
    8. '[start' → logprob: -14.001120567321777
    9. '[new' → logprob: -14.001120567321777
    10. '[get' → logprob: -14.126120567321777

Token 422: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.720469057559967
    2. '   ' → logprob: -1.5954689979553223
    3. 'block' → logprob: -1.5954689979553223
    4. 'curr' → logprob: -3.0954689979553223
    5. 'cur' → logprob: -4.095468997955322
    6. 'rot' → logprob: -4.470468997955322
    7. ' current' → logprob: -4.720468997955322
    8. 'for' → logprob: -4.720468997955322
    9. ' block' → logprob: -5.595468997955322
    10. 'seen' → logprob: -5.595468997955322

Token 423: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.24289698898792267
    2. 'curr' → logprob: -2.2428970336914062
    3. 'rot' → logprob: -2.4928970336914062
    4. 'cur' → logprob: -4.117897033691406
    5. 'seen' → logprob: -4.742897033691406
    6. 'block' → logprob: -7.117897033691406
    7. 'temp' → logprob: -8.367897033691406
    8. 'tmp' → logprob: -8.742897033691406
    9. 'for' → logprob: -8.867897033691406
    10. 'visited' → logprob: -8.992897033691406

Token 424: ' =' (ID: 314)
  Prédit: '_block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.025500169023871422
    2. ' =' → logprob: -3.7755000591278076
    3. '=' → logprob: -6.275500297546387
    4. '_' → logprob: -8.275500297546387
    5. 'block' → logprob: -9.275500297546387
    6. '_rot' → logprob: -12.150500297546387
    7. '_bloc' → logprob: -12.525500297546387
    8. '=_' → logprob: -12.900500297546387
    9. ' block' → logprob: -13.150500297546387
    10. '_rotation' → logprob: -13.275500297546387

Token 425: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.014167269691824913
    2. ' block' → logprob: -4.264167308807373
    3. 'rotate' → logprob: -12.889166831970215
    4. ' rotate' → logprob: -15.139166831970215
    5. '	block' → logprob: -15.389166831970215
    6. 'bloc' → logprob: -15.639166831970215
    7. '   ' → logprob: -15.764166831970215
    8. ' ' → logprob: -16.01416778564453
    9. 'blocks' → logprob: -16.26416778564453
    10. '(block' → logprob: -16.63916778564453

Token 426: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023068899288773537
    2. 'for' → logprob: -4.023068904876709
    3. 'while' → logprob: -6.398068904876709
    4. '   ' → logprob: -6.648068904876709
    5. ' for' → logprob: -7.523068904876709
    6. ')' → logprob: -7.898068904876709
    7. ')
' → logprob: -8.02306842803955
    8. '    
' → logprob: -8.14806842803955
    9. '  
' → logprob: -8.89806842803955
    10. ' 
' → logprob: -9.77306842803955

Token 427: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5301093459129333
    2. 'for' → logprob: -1.2801094055175781
    3. ' for' → logprob: -2.530109405517578
    4. '   ' → logprob: -3.030109405517578
    5. ' rotations' → logprob: -6.530109405517578
    6. '    
' → logprob: -7.030109405517578
    7. ' 
' → logprob: -7.155109405517578
    8. 'while' → logprob: -7.155109405517578
    9. '<|end|>' → logprob: -7.780109405517578
    10. '  
' → logprob: -8.030109405517578

Token 428: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.64970643306151e-05
    2. ' for' → logprob: -9.500086784362793
    3. '
' → logprob: -11.750086784362793
    4. 'rot' → logprob: -12.625086784362793
    5. '   ' → logprob: -15.250086784362793
    6. 'while' → logprob: -16.250085830688477
    7. ' rotations' → logprob: -17.250085830688477
    8. '```' → logprob: -17.375085830688477
    9. '    
' → logprob: -17.500085830688477
    10. 'rotation' → logprob: -19.250085830688477

Token 429: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02326865680515766
    2. ' _' → logprob: -3.773268699645996
    3. '_i' → logprob: -10.898268699645996
    4. ' i' → logprob: -12.398268699645996
    5. ' ' → logprob: -15.023268699645996
    6. 'i' → logprob: -16.02326774597168
    7. '_=' → logprob: -17.52326774597168
    8. '_
' → logprob: -17.64826774597168
    9. '_rotation' → logprob: -17.77326774597168
    10. '_in' → logprob: -17.89826774597168

Token 430: 'r' (ID: 81)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1273651272058487
    2. ' in' → logprob: -2.1273651123046875
    3. 'range' → logprob: -7.7523651123046875
    4. ' ' → logprob: -12.627365112304688
    5. '(' → logprob: -13.002365112304688
    6. ' range' → logprob: -14.502365112304688
    7. '4' → logprob: -15.502365112304688
    8. '(range' → logprob: -15.627365112304688
    9. '   ' → logprob: -16.002365112304688
    10. 'import' → logprob: -16.127365112304688

Token 431: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08520353585481644
    2. 'ot' → logprob: -2.5852036476135254
    3. 'in' → logprob: -6.210203647613525
    4. 'otation' → logprob: -6.210203647613525
    5. 'otate' → logprob: -6.835203647613525
    6. 'ange' → logprob: -6.835203647613525
    7. 'o' → logprob: -10.585203170776367
    8. ' ' → logprob: -11.085203170776367
    9. 'ota' → logprob: -11.460203170776367
    10. '_' → logprob: -11.585203170776367

Token 432: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407791018486023
    2. ' range' → logprob: -0.9740779399871826
    3. ' ' → logprob: -15.099078178405762
    4. 'ange' → logprob: -15.474078178405762
    5. '(range' → logprob: -15.849078178405762
    6. '	range' → logprob: -16.224077224731445
    7. '_range' → logprob: -17.349077224731445
    8. '   ' → logprob: -17.724077224731445
    9. '  ' → logprob: -18.099077224731445
    10. '_' → logprob: -18.099077224731445

Token 433: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1271083801984787
    2. '(' → logprob: -2.127108335494995
    3. ' ' → logprob: -8.627108573913574
    4. ' (' → logprob: -14.627108573913574
    5. '3' → logprob: -15.502108573913574
    6. '   ' → logprob: -15.627108573913574
    7. ')' → logprob: -16.502107620239258
    8. '(
' → logprob: -16.877107620239258
    9. '```' → logprob: -18.002107620239258
    10. '' → logprob: -18.252107620239258

Token 434: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3750057220459
    4. ')' → logprob: -19.1250057220459
    5. '```' → logprob: -19.3750057220459
    6. '４' → logprob: -19.8750057220459
    7. '۴' → logprob: -20.4375057220459
    8. '' → logprob: -20.5000057220459
    9. '3' → logprob: -20.5000057220459
    10. '٤' → logprob: -21.1250057220459

Token 435: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04890243336558342
    2. '):' → logprob: -3.0489025115966797
    3. '   ' → logprob: -9.04890251159668
    4. ':
' → logprob: -9.42390251159668
    5. ':' → logprob: -9.67390251159668
    6. ' ):
' → logprob: -10.67390251159668
    7. ')' → logprob: -11.04890251159668
    8. '):
' → logprob: -11.42390251159668
    9. '):

' → logprob: -13.54890251159668
    10. '():
' → logprob: -14.04890251159668

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015112892724573612
    2. '
' → logprob: -7.626511096954346
    3. ' if' → logprob: -7.751511096954346
    4. '   ' → logprob: -8.126511573791504
    5. 'if' → logprob: -9.251511573791504
    6. '        
' → logprob: -9.751511573791504
    7. '    
' → logprob: -9.751511573791504
    8. '```' → logprob: -11.251511573791504
    9. 'tokens' → logprob: -11.626511573791504
    10. ',' → logprob: -11.751511573791504

Token 437: ' #' (ID: 1069)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.826277494430542
    2. '   ' → logprob: -1.076277494430542
    3. 'if' → logprob: -2.201277494430542
    4. '       ' → logprob: -2.576277494430542
    5. ' if' → logprob: -4.076277732849121
    6. 'current' → logprob: -4.326277732849121
    7. ' current' → logprob: -6.076277732849121
    8. ' rotations' → logprob: -6.951277732849121
    9. 'tokens' → logprob: -7.951277732849121
    10. ' rot' → logprob: -7.951277732849121

Token 438: ' Normalize' (ID: 155762)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36312222480773926
    2. 'rot' → logprob: -1.3631222248077393
    3. 'current' → logprob: -3.6131222248077393
    4. 'tiles' → logprob: -4.61312198638916
    5. '   ' → logprob: -5.23812198638916
    6. ' if' → logprob: -5.98812198638916
    7. '       ' → logprob: -6.48812198638916
    8. 'block' → logprob: -6.86312198638916
    9. 'tile' → logprob: -8.23812198638916
    10. ' current' → logprob: -8.48812198638916

Token 439: ' block' (ID: 4355)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4150978922843933
    2. 'current' → logprob: -1.665097951889038
    3. '#' → logprob: -3.040097951889038
    4. ' min' → logprob: -3.790097951889038
    5. 'while' → logprob: -3.790097951889038
    6. 'max' → logprob: -4.165097713470459
    7. ' current' → logprob: -4.290097713470459
    8. 'block' → logprob: -5.290097713470459
    9. '   ' → logprob: -5.415097713470459
    10. 'if' → logprob: -5.665097713470459

Token 440: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29964300990104675
    2. ' =' → logprob: -1.4246430397033691
    3. 'current' → logprob: -5.674643039703369
    4. 'tiles' → logprob: -5.924643039703369
    5. '_tiles' → logprob: -6.299643039703369
    6. 'def' → logprob: -6.549643039703369
    7. '   ' → logprob: -6.549643039703369
    8. '=
' → logprob: -6.799643039703369
    9. '       ' → logprob: -7.049643039703369
    10. '=min' → logprob: -7.549643039703369

Token 441: ' top' (ID: 2344)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1548246592283249
    2. '['' → logprob: -2.529824733734131
    3. '[get' → logprob: -3.654824733734131
    4. 'remove' → logprob: -4.029824733734131
    5. '[' → logprob: -5.029824733734131
    6. 'rotate' → logprob: -5.529824733734131
    7. 'tuple' → logprob: -5.904824733734131
    8. 'strip' → logprob: -6.779824733734131
    9. ' get' → logprob: -6.779824733734131
    10. 'def' → logprob: -7.154824733734131

Token 442: '-left' (ID: 17007)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.6022388935089111
    2. 'left' → logprob: -1.6022388935089111
    3. '   ' → logprob: -2.227238893508911
    4. '=' → logprob: -2.477238893508911
    5. ' =' → logprob: -4.352238655090332
    6. '-left' → logprob: -4.477238655090332
    7. 'current' → logprob: -5.227238655090332
    8. '_block' → logprob: -5.477238655090332
    9. ',' → logprob: -5.727238655090332
    10. '[' → logprob: -6.477238655090332

Token 443: ' position' (ID: 4010)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3285458981990814
    2. ' while' → logprob: -1.5785459280014038
    3. '   ' → logprob: -3.8285458087921143
    4. '
' → logprob: -4.828546047210693
    5. '#' → logprob: -4.953546047210693
    6. 'current' → logprob: -5.203546047210693
    7. ' block' → logprob: -5.328546047210693
    8. ' current' → logprob: -5.703546047210693
    9. ' #' → logprob: -5.828546047210693
    10. 'tiles' → logprob: -5.828546047210693

Token 444: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12786415219306946
    2. ' while' → logprob: -3.127864122390747
    3. 'while' → logprob: -3.252864122390747
    4. '<|end|>' → logprob: -3.877864122390747
    5. '        
' → logprob: -4.877864360809326
    6. 'current' → logprob: -6.002864360809326
    7. '   ' → logprob: -6.252864360809326
    8. '#' → logprob: -6.377864360809326
    9. ' current' → logprob: -7.627864360809326
    10. ')' → logprob: -7.877864360809326

Token 445: 'remove' (ID: 4942)
  Prédit: 'tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tiles' → logprob: -0.1502561718225479
    2. ')' → logprob: -3.0252561569213867
    3. ' tiles' → logprob: -3.4002561569213867
    4. '#' → logprob: -3.7752561569213867
    5. 'while' → logprob: -4.775256156921387
    6. 'current' → logprob: -4.900256156921387
    7. '       ' → logprob: -5.775256156921387
    8. ')
' → logprob: -6.025256156921387
    9. '   ' → logprob: -6.150256156921387
    10. 'block' → logprob: -6.400256156921387

Token 446: ' empty' (ID: 8213)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.8216323256492615
    2. 'def' → logprob: -1.9466323852539062
    3. 'empty' → logprob: -2.1966323852539062
    4. ' empty' → logprob: -2.9466323852539062
    5. '[' → logprob: -3.0716323852539062
    6. ')' → logprob: -3.4466323852539062
    7. 'leading' → logprob: -3.5716323852539062
    8. '['' → logprob: -3.8216323852539062
    9. ''\' → logprob: -4.321632385253906
    10. '[
' → logprob: -4.321632385253906

Token 447: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.6939864754676819
    2. ' rows' → logprob: -0.6939864754676819
    3. ' lines' → logprob: -7.568986415863037
    4. 'lines' → logprob: -8.568986892700195
    5. '_rows' → logprob: -9.818986892700195
    6. 'def' → logprob: -10.568986892700195
    7. 'row' → logprob: -11.068986892700195
    8. '	rows' → logprob: -11.693986892700195
    9. '
' → logprob: -12.068986892700195
    10. ' 
' → logprob: -12.443986892700195

Token 448: ' and' (ID: 326)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5330206155776978
    2. 'and' → logprob: -1.5330206155776978
    3. ' and' → logprob: -1.7830206155776978
    4. ' while' → logprob: -3.658020496368408
    5. ')' → logprob: -6.158020496368408
    6. 'def' → logprob: -8.033020973205566
    7. '   ' → logprob: -8.783020973205566
    8. '       ' → logprob: -9.033020973205566
    9. ')
' → logprob: -9.408020973205566
    10. ' or' → logprob: -9.408020973205566

Token 449: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.19405487179756165
    2. 'cols' → logprob: -2.0690548419952393
    3. ' columns' → logprob: -3.0690548419952393
    4. ' cols' → logprob: -5.694055080413818
    5. 'while' → logprob: -9.06905460357666
    6. ' while' → logprob: -10.44405460357666
    7. 'col' → logprob: -10.94405460357666
    8. 'left' → logprob: -11.06905460357666
    9. 'def' → logprob: -11.44405460357666
    10. 'c' → logprob: -11.56905460357666

Token 450: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4340185821056366
    2. '       ' → logprob: -1.184018611907959
    3. ')
' → logprob: -3.184018611907959
    4. '   ' → logprob: -5.934018611907959
    5. '):' → logprob: -7.309018611907959
    6. '):
' → logprob: -7.434018611907959
    7. 'def' → logprob: -9.0590181350708
    8. ',' → logprob: -9.1840181350708
    9. ').' → logprob: -9.3090181350708
    10. ' and' → logprob: -9.5590181350708

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07906262576580048
    2. ' while' → logprob: -3.7040627002716064
    3. '
' → logprob: -4.079062461853027
    4. 'while' → logprob: -4.204062461853027
    5. '        
' → logprob: -4.704062461853027
    6. 'empty' → logprob: -5.954062461853027
    7. '    
' → logprob: -6.079062461853027
    8. '   ' → logprob: -6.579062461853027
    9. '#' → logprob: -6.579062461853027
    10. '<|end|>' → logprob: -7.704062461853027

Token 452: ' rows' (ID: 13585)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.7364228367805481
    2. 'while' → logprob: -1.4864227771759033
    3. '#' → logprob: -1.8614227771759033
    4. 'min' → logprob: -3.2364227771759033
    5. ' top' → logprob: -3.3614227771759033
    6. '       ' → logprob: -3.6114227771759033
    7. ' while' → logprob: -4.236423015594482
    8. 'rows' (adapté à ' rows') → logprob: -4.861423015594482
    9. '   ' → logprob: -5.361423015594482
    10. 'empty' → logprob: -5.736423015594482

Token 453: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6358948349952698
    2. ' =' → logprob: -1.135894775390625
    3. '_to' → logprob: -2.010894775390625
    4. '_' → logprob: -5.010894775390625
    5. 'to' → logprob: -5.635894775390625
    6. 'while' → logprob: -6.510894775390625
    7. '_with' → logprob: -6.885894775390625
    8. '=[]' → logprob: -8.010894775390625
    9. '_non' → logprob: -8.260894775390625
    10. 'with' → logprob: -8.260894775390625

Token 454: ' [' (ID: 723)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.05115589126944542
    2. '[len' → logprob: -3.8011558055877686
    3. '[' → logprob: -3.9261558055877686
    4. 'current' → logprob: -6.176156044006348
    5. '[i' → logprob: -6.301156044006348
    6. '[new' → logprob: -6.926156044006348
    7. '[r' → logprob: -7.051156044006348
    8. ' [' → logprob: -7.926156044006348
    9. '[list' → logprob: -7.926156044006348
    10. '[c' → logprob: -8.426156044006348

Token 455: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.019469095394015312
    2. 'r' → logprob: -4.019469261169434
    3. '''.' → logprob: -6.769469261169434
    4. ' row' → logprob: -9.019469261169434
    5. 'line' → logprob: -10.769469261169434
    6. 'i' → logprob: -11.769469261169434
    7. 'current' → logprob: -11.894469261169434
    8. ' ''.' → logprob: -12.519469261169434
    9. ''' → logprob: -13.269469261169434
    10. 'new' → logprob: -13.519469261169434

Token 456: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.202312633395195
    2. ' for' → logprob: -1.7023125886917114
    3. '.rstrip' → logprob: -7.327312469482422
    4. '.strip' → logprob: -8.952312469482422
    5. '   ' → logprob: -10.077312469482422
    6. 'rstrip' → logprob: -10.702312469482422
    7. '    ' → logprob: -12.077312469482422
    8. '.' → logprob: -12.327312469482422
    9. 'if' → logprob: -12.327312469482422
    10. ' ' → logprob: -12.452312469482422

Token 457: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.033695150166749954
    2. ' row' → logprob: -3.4086952209472656
    3. 'current' → logprob: -10.408695220947266
    4. 'rows' → logprob: -12.033695220947266
    5. ' current' → logprob: -12.033695220947266
    6. '	row' → logprob: -12.533695220947266
    7. ' ' → logprob: -13.783695220947266
    8. '   ' → logprob: -14.533695220947266
    9. 'r' → logprob: -14.533695220947266
    10. '
' → logprob: -14.908695220947266

Token 458: ' in' (ID: 306)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.24794957041740417
    2. ' in' → logprob: -1.8729496002197266
    3. ' row' → logprob: -3.1229496002197266
    4. 'in' → logprob: -3.8729496002197266
    5. 'current' → logprob: -7.497949600219727
    6. ' current' → logprob: -8.247949600219727
    7. 'rows' → logprob: -8.747949600219727
    8. ' ' → logprob: -9.997949600219727
    9. 'r' → logprob: -10.622949600219727
    10. '	row' → logprob: -11.497949600219727

Token 459: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.009917576797306538
    2. ' current' → logprob: -4.634917736053467
    3. 'block' → logprob: -9.134917259216309
    4. 'rows' → logprob: -10.759917259216309
    5. 'new' → logprob: -11.509917259216309
    6. 'row' → logprob: -12.259917259216309
    7. 'rot' → logprob: -12.384917259216309
    8. '_current' → logprob: -12.759917259216309
    9. 'range' → logprob: -12.884917259216309
    10. 'rotate' → logprob: -13.509917259216309

Token 460: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31327739357948303
    2. ' if' → logprob: -1.3132773637771606
    3. ' in' → logprob: -11.563277244567871
    4. 'in' → logprob: -12.688277244567871
    5. ' ' → logprob: -13.938277244567871
    6. ']' → logprob: -14.313277244567871
    7. '   ' → logprob: -14.438277244567871
    8. '  ' → logprob: -14.563277244567871
    9. '    ' → logprob: -15.313277244567871
    10. '
' → logprob: -17.188278198242188

Token 461: ' '#'' (ID: 139870)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.2540452778339386
    2. ''#' → logprob: -1.5040452480316162
    3. '('#' → logprob: -7.504045486450195
    4. ' '#'' → logprob: -7.629045486450195
    5. ''any' → logprob: -7.754045486450195
    6. 'set' → logprob: -7.879045486450195
    7. ''' → logprob: -9.754045486450195
    8. 'not' → logprob: -9.754045486450195
    9. ' any' → logprob: -9.879045486450195
    10. '"#' → logprob: -10.004045486450195

Token 462: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5231823325157166
    2. 'in' → logprob: -0.8981823325157166
    3. '#' → logprob: -11.023181915283203
    4. ']' → logprob: -11.148181915283203
    5. ')' → logprob: -11.898181915283203
    6. '
' → logprob: -12.273181915283203
    7. ' ' → logprob: -12.523181915283203
    8. ''in' → logprob: -12.523181915283203
    9. ''' → logprob: -12.898181915283203
    10. '  ' → logprob: -13.523181915283203

Token 463: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.00861456897109747
    2. ' row' → logprob: -4.758614540100098
    3. '(row' → logprob: -17.008615493774414
    4. '	row' → logprob: -18.633615493774414
    5. ' ' → logprob: -18.758615493774414
    6. '[row' → logprob: -19.133615493774414
    7. 'rows' → logprob: -19.383615493774414
    8. '
' → logprob: -19.883615493774414
    9. 'ro' → logprob: -20.508615493774414
    10. 'rown' → logprob: -21.008615493774414

Token 464: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.160459503531456
    2. ']' → logprob: -1.9104595184326172
    3. ']

' → logprob: -9.660459518432617
    4. '   ' → logprob: -9.785459518432617
    5. ']
' → logprob: -10.035459518432617
    6. '       ' → logprob: -10.160459518432617
    7. ' ]
' → logprob: -10.410459518432617
    8. ' ]' → logprob: -13.285459518432617
    9. '']
' → logprob: -14.910459518432617
    10. '()]
' → logprob: -15.910459518432617

Token 465: '       ' (ID: 309)
  Prédit: 'cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.104679174721241
    2. ' cols' → logprob: -2.7296791076660156
    3. 'columns' → logprob: -4.229679107666016
    4. '   ' → logprob: -4.479679107666016
    5. 'min' → logprob: -6.354679107666016
    6. 'top' → logprob: -6.479679107666016
    7. 'col' → logprob: -6.479679107666016
    8. '       ' → logprob: -6.604679107666016
    9. ' columns' → logprob: -7.354679107666016
    10. ' top' → logprob: -8.104679107666016

Token 466: ' min' (ID: 1349)
  Prédit: 'cols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cols' → logprob: -0.042295876890420914
    2. 'min' (adapté à ' min') → logprob: -3.5422959327697754
    3. ' cols' → logprob: -4.667295932769775
    4. ' min' → logprob: -6.042295932769775
    5. 'columns' → logprob: -8.042295455932617
    6. '   ' → logprob: -9.292295455932617
    7. 'top' → logprob: -9.667295455932617
    8. 'col' → logprob: -9.792295455932617
    9. 'if' → logprob: -9.917295455932617
    10. ' if' → logprob: -10.792295455932617

Token 467: '_col' (ID: 7255)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.05611209198832512
    2. '_col' → logprob: -2.931112051010132
    3. 'c' → logprob: -6.931112289428711
    4. '_cols' → logprob: -9.181112289428711
    5. '_r' → logprob: -9.931112289428711
    6. 'C' → logprob: -10.306112289428711
    7. 'r' → logprob: -11.056112289428711
    8. '_' → logprob: -11.056112289428711
    9. '_row' → logprob: -11.431112289428711
    10. 'col' → logprob: -12.306112289428711

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17998720705509186
    2. ' =' → logprob: -1.8049871921539307
    3. '_' → logprob: -9.304986953735352
    4. '_=' → logprob: -9.929986953735352
    5. '_idx' → logprob: -9.929986953735352
    6. 's' → logprob: -10.554986953735352
    7. '=int' → logprob: -12.304986953735352
    8. '=_' → logprob: -12.304986953735352
    9. '_index' → logprob: -12.554986953735352
    10. '=min' → logprob: -12.554986953735352

Token 469: ' None' (ID: 4662)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04428744688630104
    2. ' min' → logprob: -4.16928768157959
    3. 'None' → logprob: -5.04428768157959
    4. 'BW' → logprob: -5.04428768157959
    5. 'W' → logprob: -5.16928768157959
    6. 'len' → logprob: -5.66928768157959
    7. 'float' → logprob: -5.79428768157959
    8. '10' → logprob: -7.04428768157959
    9. '100' → logprob: -7.16928768157959
    10. 'next' → logprob: -8.29428768157959

Token 470: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44138404726982117
    2. '
' → logprob: -1.4413840770721436
    3. '=' → logprob: -2.9413840770721436
    4. '<|end|>' → logprob: -3.5663840770721436
    5. ' for' → logprob: -3.8163840770721436
    6. ' =' → logprob: -4.4413838386535645
    7. '0' → logprob: -6.8163838386535645
    8. 'None' → logprob: -7.1913838386535645
    9. '=None' → logprob: -7.5663838386535645
    10. ',' → logprob: -8.066384315490723

Token 471: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2177457809448242
    2. '<|end|>' → logprob: -1.3427457809448242
    3. '=' → logprob: -1.5927457809448242
    4. ' for' → logprob: -2.342745780944824
    5. ' =' → logprob: -2.467745780944824
    6. '0' → logprob: -3.342745780944824
    7. '
' → logprob: -4.592745780944824
    8. ',' → logprob: -5.467745780944824
    9. ' ' → logprob: -6.092745780944824
    10. '=None' → logprob: -6.967745780944824

Token 472: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07906185835599899
    2. ' for' → logprob: -2.57906174659729
    3. '0' → logprob: -8.829061508178711
    4. 'min' → logprob: -11.079061508178711
    5. '
' → logprob: -12.954061508178711
    6. 'c' → logprob: -13.704061508178711
    7. '[' → logprob: -13.829061508178711
    8. 'cols' → logprob: -13.829061508178711
    9. ' col' → logprob: -13.954061508178711
    10. '   ' → logprob: -13.954061508178711

Token 473: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00038980069803074
    2. '_c' → logprob: -7.875389575958252
    3. '_' → logprob: -13.00039005279541
    4. '_len' → logprob: -13.50039005279541
    5. 'col' → logprob: -13.50039005279541
    6. '(' → logprob: -13.75039005279541
    7. '_row' → logprob: -14.25039005279541
    8. 'c' → logprob: -14.37539005279541
    9. '=' → logprob: -15.12539005279541
    10. '(_' → logprob: -15.37539005279541

Token 474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005529473535716534
    2. ' =' → logprob: -5.255529403686523
    3. '=None' → logprob: -8.130529403686523
    4. 'None' → logprob: -14.380529403686523
    5. '=
' → logprob: -15.130529403686523
    6. '   ' → logprob: -15.630529403686523
    7. '=

' → logprob: -16.880529403686523
    8. ' None' → logprob: -17.005529403686523
    9. ' ' → logprob: -17.380529403686523
    10. '=[]' → logprob: -17.505529403686523

Token 475: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19625116884708405
    2. '-' → logprob: -2.321251153945923
    3. 'None' → logprob: -3.321251153945923
    4. ' ' → logprob: -4.071251392364502
    5. ' None' → logprob: -4.321251392364502
    6. ' -' → logprob: -4.321251392364502
    7. '   ' → logprob: -9.321250915527344
    8. 'max' → logprob: -9.321250915527344
    9. 'len' → logprob: -10.321250915527344
    10. ' max' → logprob: -10.446250915527344

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '-' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '
' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. ' -' → logprob: -18.000001907348633
    8. 'float' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.500001907348633
    10. '2' → logprob: -19.000001907348633

Token 477: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3671697676181793
    2. '<|end|>' → logprob: -1.492169737815857
    3. '   ' → logprob: -2.7421698570251465
    4. 'for' → logprob: -4.6171698570251465
    5. '
' → logprob: -5.3671698570251465
    6. '<|end|>' → logprob: -6.8671698570251465
    7. ' ' → logprob: -7.4921698570251465
    8. ',' → logprob: -7.8671698570251465
    9. ' 
' → logprob: -8.117169380187988
    10. ')' → logprob: -8.492169380187988

Token 478: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22749294340610504
    2. '   ' → logprob: -2.2274930477142334
    3. 'for' → logprob: -2.6024930477142334
    4. '<|end|>' → logprob: -4.477492809295654
    5. '
' → logprob: -5.102492809295654
    6. ' 
' → logprob: -6.477492809295654
    7. '  
' → logprob: -6.602492809295654
    8. '    
' → logprob: -7.477492809295654
    9. ' ' → logprob: -9.102493286132812
    10. '   
' → logprob: -9.227493286132812

Token 479: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31345847249031067
    2. 'for' (adapté à ' for') → logprob: -1.3134584426879883
    3. '   ' → logprob: -8.563458442687988
    4. '	for' → logprob: -13.188458442687988
    5. '
' → logprob: -13.813458442687988
    6. '    
' → logprob: -14.688458442687988
    7. ' col' → logprob: -14.813458442687988
    8. '<|end|>' → logprob: -14.938458442687988
    9. '       ' → logprob: -15.063458442687988
    10. '```' → logprob: -15.188458442687988

Token 480: ' row' (ID: 5225)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8162980079650879
    2. 'r' → logprob: -0.8162980079650879
    3. 'row' → logprob: -2.191298007965088
    4. 'col' → logprob: -6.066298007965088
    5. ' c' → logprob: -7.566298007965088
    6. ' row' → logprob: -7.566298007965088
    7. 'i' → logprob: -7.941298007965088
    8. ' r' → logprob: -8.06629753112793
    9. '   ' → logprob: -11.06629753112793
    10. 'j' → logprob: -11.19129753112793

Token 481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06238395720720291
    2. 'in' → logprob: -2.8123838901519775
    3. 'i' → logprob: -8.812383651733398
    4. 'idx' → logprob: -9.062383651733398
    5. '_idx' → logprob: -9.437383651733398
    6. 'index' → logprob: -10.937383651733398
    7. ',' → logprob: -11.062383651733398
    8. ' i' → logprob: -11.062383651733398
    9. '_index' → logprob: -12.312383651733398
    10. ' idx' → logprob: -12.687383651733398

Token 482: ' rows' (ID: 13585)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.536076009273529
    2. 'rows' → logprob: -1.4110760688781738
    3. 'current' → logprob: -2.036076068878174
    4. ' range' → logprob: -3.661076068878174
    5. ' current' → logprob: -4.536076068878174
    6. ' rows' → logprob: -5.661076068878174
    7. 'row' → logprob: -7.536076068878174
    8. ' ' → logprob: -10.661075592041016
    9. 'ranges' → logprob: -11.161075592041016
    10. 'r' → logprob: -11.161075592041016

Token 483: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020051153376698494
    2. ':
' → logprob: -4.645051002502441
    3. 'in' → logprob: -5.395051002502441
    4. ':' → logprob: -5.645051002502441
    5. ',' → logprob: -6.770051002502441
    6. ' for' → logprob: -7.645051002502441
    7. '           ' → logprob: -8.395051002502441
    8. 'for' → logprob: -9.270051002502441
    9. '=' → logprob: -9.645051002502441
    10. '       ' → logprob: -9.895051002502441

Token 484: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22917573153972626
    2. ' for' → logprob: -1.6041756868362427
    3. '       ' → logprob: -6.354175567626953
    4. 'for' → logprob: -6.479175567626953
    5. '               ' → logprob: -8.979175567626953
    6. ' in' → logprob: -9.729175567626953
    7. ',' → logprob: -9.854175567626953
    8. ' c' → logprob: -10.229175567626953
    9. '	       ' → logprob: -10.479175567626953
    10. ':' → logprob: -10.604175567626953

Token 485: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5389723777770996
    2. 'for' (adapté à ' for') → logprob: -0.9139723777770996
    3. ' cols' → logprob: -4.9139723777771
    4. '           ' → logprob: -5.0389723777771
    5. 'cols' → logprob: -7.0389723777771
    6. ' min' → logprob: -7.7889723777771
    7. 'min' → logprob: -8.163972854614258
    8. ' col' → logprob: -9.913972854614258
    9. '               ' → logprob: -9.913972854614258
    10. ' c' → logprob: -10.413972854614258

Token 486: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3946071267127991
    2. 'i' → logprob: -1.1446070671081543
    3. 'idx' → logprob: -5.769607067108154
    4. ' i' → logprob: -5.894607067108154
    5. ' c' → logprob: -6.394607067108154
    6. 'j' → logprob: -9.894607543945312
    7. 'ci' → logprob: -10.269607543945312
    8. 'col' → logprob: -10.394607543945312
    9. ' idx' → logprob: -10.394607543945312
    10. 'index' → logprob: -11.769607543945312

Token 487: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5135141611099243
    2. 'in' → logprob: -1.1385141611099243
    3. ',' → logprob: -2.5135140419006348
    4. ',c' → logprob: -9.138514518737793
    5. ' ,' → logprob: -9.513514518737793
    6. ',in' → logprob: -10.513514518737793
    7. ' ' → logprob: -10.763514518737793
    8. 'range' → logprob: -11.013514518737793
    9. ',len' → logprob: -11.138514518737793
    10. 'i' → logprob: -11.263514518737793

Token 488: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -4.4418171455617994e-05
    2. ' ch' → logprob: -10.250044822692871
    3. 'c' → logprob: -11.875044822692871
    4. 'char' → logprob: -13.125044822692871
    5. 'cell' → logprob: -17.500043869018555
    6. '	ch' → logprob: -18.250043869018555
    7. '(ch' → logprob: -18.375043869018555
    8. '[ch' → logprob: -19.250043869018555
    9. '```' → logprob: -20.250043869018555
    10. 'chi' → logprob: -20.625043869018555

Token 489: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4742073714733124
    2. 'in' → logprob: -0.9742074012756348
    3. ' ' → logprob: -9.724206924438477
    4. ',' → logprob: -10.099206924438477
    5. 'i' → logprob: -10.974206924438477
    6. ' i' → logprob: -12.349206924438477
    7. '	in' → logprob: -12.724206924438477
    8. '<|end|>' → logprob: -13.599206924438477
    9. ' ,' → logprob: -14.099206924438477
    10. 'import' → logprob: -14.974206924438477

Token 490: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.3132617771625519
    2. ' enumerate' → logprob: -1.3132617473602295
    3. '```' → logprob: -16.438261032104492
    4. 'enum' → logprob: -17.688261032104492
    5. ' ' → logprob: -18.063261032104492
    6. 'range' → logprob: -18.313261032104492
    7. '
' → logprob: -18.813261032104492
    8. '.enumer' → logprob: -19.313261032104492
    9. '(en' → logprob: -19.813261032104492
    10. '   ' → logprob: -19.813261032104492

Token 491: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.47491395473480225
    2. 'row' → logprob: -0.9749139547348022
    3. ' row' → logprob: -7.099914073944092
    4. '	row' → logprob: -12.349913597106934
    5. '[row' → logprob: -12.849913597106934
    6. '=row' → logprob: -12.974913597106934
    7. '(' → logprob: -14.349913597106934
    8. ',row' → logprob: -14.599913597106934
    9. ' ' → logprob: -14.724913597106934
    10. ' (' → logprob: -15.849913597106934

Token 492: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5847623944282532
    2. ':' → logprob: -1.8347623348236084
    3. ':
' → logprob: -2.0847623348236084
    4. '):
' → logprob: -3.3347623348236084
    5. ' in' → logprob: -3.4597623348236084
    6. ' if' → logprob: -3.8347623348236084
    7. '():
' → logprob: -3.8347623348236084
    8. '=' → logprob: -4.2097625732421875
    9. '           ' → logprob: -4.2097625732421875
    10. 'if' → logprob: -5.8347625732421875

Token 493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013843539170920849
    2. ' if' → logprob: -4.388843536376953
    3. ':
' → logprob: -8.263843536376953
    4. '<|end|>' → logprob: -8.638843536376953
    5. ':' → logprob: -8.763843536376953
    6. 'if' → logprob: -9.138843536376953
    7. '                
' → logprob: -9.263843536376953
    8. ' ' → logprob: -9.388843536376953
    9. ' in' → logprob: -9.763843536376953
    10. '                ' → logprob: -9.888843536376953

Token 494: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8167130947113037
    2. ' if' → logprob: -0.9417130947113037
    3. '                   ' → logprob: -2.0667130947113037
    4. 'if' (adapté à ' if') → logprob: -3.9417130947113037
    5. ' ' → logprob: -5.066713333129883
    6. '<|end|>' → logprob: -5.316713333129883
    7. '                ' → logprob: -5.441713333129883
    8. '                       ' → logprob: -6.191713333129883
    9. '	               ' → logprob: -6.316713333129883
    10. '		           ' → logprob: -7.566713333129883

Token 495: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.3132679760456085
    2. ' ch' → logprob: -1.3132679462432861
    3. '	ch' → logprob: -12.688267707824707
    4. '(ch' → logprob: -13.688267707824707
    5. '   ' → logprob: -14.563267707824707
    6. ' ' → logprob: -14.938267707824707
    7. '           ' → logprob: -15.188267707824707
    8. '               ' → logprob: -15.313267707824707
    9. '[ch' → logprob: -15.938267707824707
    10. 'c' → logprob: -16.313268661499023

Token 496: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48038026690483093
    2. ' ==' → logprob: -0.9803802967071533
    3. '=='' → logprob: -5.105380058288574
    4. '==
' → logprob: -8.730380058288574
    5. '=' → logprob: -10.105380058288574
    6. '#' → logprob: -12.230380058288574
    7. '=="' → logprob: -12.605380058288574
    8. ' =='' → logprob: -12.730380058288574
    9. '           ' → logprob: -13.605380058288574
    10. ')==' → logprob: -14.355380058288574

Token 497: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.007659515831619501
    2. ' '#' → logprob: -4.882659435272217
    3. ' '#'' → logprob: -10.257659912109375
    4. '"#' → logprob: -11.507659912109375
    5. '#' → logprob: -12.632659912109375
    6. '('#' → logprob: -13.382659912109375
    7. ''' → logprob: -13.882659912109375
    8. ':'#' → logprob: -14.382659912109375
    9. ' ' → logprob: -14.632659912109375
    10. '','#' → logprob: -14.632659912109375

Token 498: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17190392315387726
    2. ' and' → logprob: -2.5469038486480713
    3. ':' → logprob: -2.6719038486480713
    4. '':
' → logprob: -5.04690408706665
    5. 'and' → logprob: -6.04690408706665
    6. '):
' → logprob: -6.67190408706665
    7. '':' → logprob: -8.546903610229492
    8. ''):
' → logprob: -9.921903610229492
    9. '                   ' → logprob: -10.171903610229492
    10. ''' → logprob: -10.171903610229492

Token 499: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8687648177146912
    2. ':
' → logprob: -0.9937648177146912
    3. ' and' → logprob: -1.868764877319336
    4. ':' → logprob: -3.118764877319336
    5. '               ' → logprob: -5.368764877319336
    6. 'and' → logprob: -5.868764877319336
    7. '                       ' → logprob: -6.618764877319336
    8. ' if' → logprob: -6.743764877319336
    9. 'if' → logprob: -7.493764877319336
    10. '):
' → logprob: -7.868764877319336

Token 500: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34549158811569214
    2. 'if' (adapté à ' if') → logprob: -1.345491647720337
    3. ' min' → logprob: -3.595491647720337
    4. 'min' → logprob: -5.470491409301758
    5. '                   ' → logprob: -10.470491409301758
    6. '
' → logprob: -11.345491409301758
    7. '               ' → logprob: -11.970491409301758
    8. '                       ' → logprob: -12.595491409301758
    9. '=min' → logprob: -13.345491409301758
    10. '.min' → logprob: -13.470491409301758

Token 501: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029750484973192215
    2. ' min' → logprob: -3.5297505855560303
    3. '	min' → logprob: -17.52975082397461
    4. '(min' → logprob: -17.77975082397461
    5. '           ' → logprob: -19.65475082397461
    6. '   ' → logprob: -19.77975082397461
    7. '_min' → logprob: -19.90475082397461
    8. ' ' → logprob: -20.27975082397461
    9. '               ' → logprob: -20.77975082397461
    10. '
' → logprob: -21.02975082397461

Token 502: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0046075377613306046
    2. ' is' → logprob: -5.629607677459717
    3. 'min' → logprob: -7.629607677459717
    4. ' min' → logprob: -8.504607200622559
    5. 'col' → logprob: -8.754607200622559
    6. '_' → logprob: -9.629607200622559
    7. 'is' → logprob: -10.129607200622559
    8. '=' → logprob: -11.379607200622559
    9. '_c' → logprob: -11.379607200622559
    10. ' col' → logprob: -11.629607200622559

Token 503: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.31326642632484436
    2. 'is' → logprob: -1.313266396522522
    3. '=' → logprob: -12.81326675415039
    4. '==' → logprob: -14.31326675415039
    5. 'i' → logprob: -15.18826675415039
    6. '	is' → logprob: -15.68826675415039
    7. ' i' → logprob: -15.81326675415039
    8. '                   ' → logprob: -15.93826675415039
    9. '=None' → logprob: -15.93826675415039
    10. 's' → logprob: -16.31326675415039

Token 504: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019286326132714748
    2. ' None' → logprob: -6.251928806304932
    3. '=None' → logprob: -17.626928329467773
    4. '0' → logprob: -19.376928329467773
    5. '(None' → logprob: -19.501928329467773
    6. '_None' → logprob: -19.751928329467773
    7. '                   ' → logprob: -20.126928329467773
    8. '                       ' → logprob: -20.126928329467773
    9. '               ' → logprob: -20.501928329467773
    10. ',None' → logprob: -20.751928329467773

Token 505: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0010908045805990696
    2. 'or' → logprob: -7.626091003417969
    3. '                   ' → logprob: -7.751091003417969
    4. '                       ' → logprob: -8.876091003417969
    5. ':' → logprob: -10.626091003417969
    6. '               ' → logprob: -13.001091003417969
    7. ' ' → logprob: -13.751091003417969
    8. '                           ' → logprob: -13.751091003417969
    9. '                    ' → logprob: -14.001091003417969
    10. ':
' → logprob: -14.376091003417969

Token 506: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08897054940462112
    2. ' i' → logprob: -2.46397066116333
    3. '                   ' → logprob: -11.713970184326172
    4. 'min' → logprob: -11.838970184326172
    5. ' min' → logprob: -11.963970184326172
    6. '                       ' → logprob: -12.963970184326172
    7. '               ' → logprob: -13.338970184326172
    8. '   ' → logprob: -13.338970184326172
    9. '	i' → logprob: -13.963970184326172
    10. ' ' → logprob: -14.338970184326172

Token 507: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.693195104598999
    2. ' <' → logprob: -0.693195104598999
    3. '<int' → logprob: -11.068195343017578
    4. 'min' → logprob: -11.818195343017578
    5. '<size' → logprob: -12.443195343017578
    6. ' ' → logprob: -12.568195343017578
    7. '<m' → logprob: -12.693195343017578
    8. '<num' → logprob: -12.943195343017578
    9. '<len' → logprob: -13.443195343017578
    10. '<i' → logprob: -13.693195343017578

Token 508: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0019286326132714748
    2. ' min' → logprob: -6.251928806304932
    3. '
' → logprob: -17.251928329467773
    4. '	min' → logprob: -17.626928329467773
    5. '   ' → logprob: -18.001928329467773
    6. '_min' → logprob: -18.751928329467773
    7. '=min' → logprob: -18.751928329467773
    8. 'mini' → logprob: -19.751928329467773
    9. '(min' → logprob: -19.876928329467773
    10. 'm' → logprob: -19.876928329467773

Token 509: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0011559356935322285
    2. 'min' → logprob: -7.001155853271484
    3. 'col' → logprob: -8.626155853271484
    4. ' min' → logprob: -10.376155853271484
    5. '_min' → logprob: -10.751155853271484
    6. '(min' → logprob: -12.001155853271484
    7. '_c' → logprob: -13.376155853271484
    8. '=min' → logprob: -14.001155853271484
    9. '[min' → logprob: -14.126155853271484
    10. 'c' → logprob: -14.126155853271484

Token 510: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02347513660788536
    2. ':' → logprob: -3.773475170135498
    3. '                       ' → logprob: -9.02347469329834
    4. '):
' → logprob: -10.02347469329834
    5. ':min' → logprob: -10.52347469329834
    6. '                   ' → logprob: -10.64847469329834
    7. '               ' → logprob: -12.52347469329834
    8. ':
' → logprob: -13.02347469329834
    9. ' :
' → logprob: -13.27347469329834
    10. ':

' → logprob: -13.64847469329834

Token 511: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03150862455368042
    2. '                   ' → logprob: -4.156508445739746
    3. ':
' → logprob: -4.906508445739746
    4. ':' → logprob: -5.281508445739746
    5. ' min' → logprob: -6.156508445739746
    6. 'min' → logprob: -8.031508445739746
    7. '                      ' → logprob: -9.281508445739746
    8. '                           ' → logprob: -9.781508445739746
    9. ' i' → logprob: -10.031508445739746
    10. '               ' → logprob: -10.156508445739746

Token 512: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.2529371976852417
    2. ' min' → logprob: -1.5029371976852417
    3. 'i' → logprob: -7.002937316894531
    4. ' i' → logprob: -9.252937316894531
    5. '                           ' → logprob: -13.252937316894531
    6. '                       ' → logprob: -14.752937316894531
    7. '	min' → logprob: -15.877937316894531
    8. '                   ' → logprob: -16.75293731689453
    9. '_min' → logprob: -17.00293731689453
    10. '=min' → logprob: -17.12793731689453

Token 513: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -2.45848218582978e-06
    2. 'col' → logprob: -14.00000286102295
    3. '_min' → logprob: -14.12500286102295
    4. '_c' → logprob: -14.87500286102295
    5. 'min' → logprob: -15.37500286102295
    6. '_' → logprob: -15.62500286102295
    7. '
' → logprob: -17.500001907348633
    8. '(min' → logprob: -17.625001907348633
    9. '_COL' → logprob: -18.375001907348633
    10. '=min' → logprob: -18.375001907348633

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386979877948761
    2. ' =' → logprob: -1.1369798183441162
    3. '=i' → logprob: -9.136980056762695
    4. '=
' → logprob: -14.636980056762695
    5. ' ' → logprob: -14.761980056762695
    6. ' =
' → logprob: -15.636980056762695
    7. ' i' → logprob: -16.386980056762695
    8. 'i' → logprob: -17.136980056762695
    9. ',' → logprob: -17.511980056762695
    10. '=

' → logprob: -17.636980056762695

Token 515: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759395956993103
    2. ' i' → logprob: -0.8259395956993103
    3. '	i' → logprob: -16.700939178466797
    4. ' ' → logprob: -17.075939178466797
    5. ' ' → logprob: -17.200939178466797
    6. '=i' → logprob: -18.450939178466797
    7. '   ' → logprob: -19.325939178466797
    8. ',i' → logprob: -19.325939178466797
    9. '_i' → logprob: -19.575939178466797
    10. '[i' → logprob: -20.075939178466797

Token 516: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.035933300852775574
    2. '           ' → logprob: -3.910933256149292
    3. '       ' → logprob: -4.785933494567871
    4. '               ' → logprob: -5.660933494567871
    5. '<|end|>' → logprob: -6.660933494567871
    6. '                       ' → logprob: -8.035933494567871
    7. ' if' → logprob: -8.160933494567871
    8. '        ' → logprob: -8.285933494567871
    9. '                ' → logprob: -8.535933494567871
    10. ',' → logprob: -8.660933494567871

Token 517: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.033054910600185394
    2. '           ' → logprob: -3.533054828643799
    3. '               ' → logprob: -6.533054828643799
    4. ' if' → logprob: -7.158054828643799
    5. '       ' → logprob: -7.283054828643799
    6. '
' → logprob: -8.408055305480957
    7. '                       ' → logprob: -10.533055305480957
    8. '<|end|>' → logprob: -10.783055305480957
    9. '```' → logprob: -10.783055305480957
    10. 'if' → logprob: -10.908055305480957

Token 518: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6617322564125061
    2. ' if' → logprob: -1.1617321968078613
    3. 'if' (adapté à ' if') → logprob: -1.9117321968078613
    4. '           ' → logprob: -4.411732196807861
    5. '               ' → logprob: -4.661732196807861
    6. '       ' → logprob: -7.411732196807861
    7. '                       ' → logprob: -7.911732196807861
    8. '```' → logprob: -8.41173267364502
    9. '                    ' → logprob: -9.66173267364502
    10. '   ' → logprob: -9.66173267364502

Token 519: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003632731270045042
    2. ' i' → logprob: -5.628632545471191
    3. '   ' → logprob: -10.753632545471191
    4. ' ' → logprob: -12.753632545471191
    5. '  ' → logprob: -13.128632545471191
    6. 'max' → logprob: -13.753632545471191
    7. '	i' → logprob: -13.878632545471191
    8. '     ' → logprob: -14.378632545471191
    9. '                   ' → logprob: -14.378632545471191
    10. '    ' → logprob: -14.753632545471191

Token 520: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3132636249065399
    2. ' >' → logprob: -1.3132636547088623
    3. ' ' → logprob: -14.188263893127441
    4. '>
' → logprob: -15.563263893127441
    5. '>end' → logprob: -15.813263893127441
    6. ')>' → logprob: -16.063262939453125
    7. ' >
' → logprob: -16.563262939453125
    8. '   ' → logprob: -16.563262939453125
    9. '>#' → logprob: -16.813262939453125
    10. '<|end|>' → logprob: -16.813262939453125

Token 521: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014163747429847717
    2. ' max' → logprob: -4.264163970947266
    3. '=max' → logprob: -16.764163970947266
    4. 'min' → logprob: -17.014163970947266
    5. '	max' → logprob: -17.139163970947266
    6. '(max' → logprob: -17.264163970947266
    7. '_max' → logprob: -17.514163970947266
    8. '```' → logprob: -18.014163970947266
    9. '
' → logprob: -18.264163970947266
    10. '[max' → logprob: -18.889163970947266

Token 522: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -1.735893965815194e-05
    2. '_c' → logprob: -11.000017166137695
    3. '_' → logprob: -15.250017166137695
    4. '_COL' → logprob: -15.625017166137695
    5. 'col' → logprob: -16.250017166137695
    6. '_row' → logprob: -17.125017166137695
    7. 'Col' → logprob: -17.875017166137695
    8. '_cols' → logprob: -17.875017166137695
    9. '
' → logprob: -18.000017166137695
    10. 'c' → logprob: -18.125017166137695

Token 523: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0137519836425781
    2. '                       ' → logprob: -1.5137519836425781
    3. '=' → logprob: -1.7637519836425781
    4. ':' → logprob: -1.7637519836425781
    5. ':
' → logprob: -3.763751983642578
    6. '=max' → logprob: -4.263751983642578
    7. ' max' → logprob: -4.388751983642578
    8. ' ' → logprob: -5.388751983642578
    9. '<|end|>' → logprob: -5.513751983642578
    10. 'max' → logprob: -5.638751983642578

Token 524: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.32921478152275085
    2. ' max' → logprob: -1.9542148113250732
    3. ' i' → logprob: -2.4542148113250732
    4. 'max' → logprob: -3.4542148113250732
    5. 'i' → logprob: -4.079214572906494
    6. '                   ' → logprob: -7.079214572906494
    7. '                        ' → logprob: -7.204214572906494
    8. '                           ' → logprob: -7.329214572906494
    9. '=' → logprob: -7.829214572906494
    10. ' =' → logprob: -8.079215049743652

Token 525: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2054567039012909
    2. 'max' (adapté à ' max') → logprob: -1.7054567337036133
    3. 'i' → logprob: -5.830456733703613
    4. ' i' → logprob: -6.830456733703613
    5. '=max' → logprob: -11.455456733703613
    6. '=' → logprob: -12.705456733703613
    7. '                       ' → logprob: -13.205456733703613
    8. 'm' → logprob: -14.455456733703613
    9. ' =' → logprob: -14.955456733703613
    10. '=i' → logprob: -15.330456733703613

Token 526: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -1.282920129597187e-05
    2. '_c' → logprob: -11.750012397766113
    3. 'col' → logprob: -12.375012397766113
    4. 'Col' → logprob: -15.125012397766113
    5. 'c' → logprob: -15.875012397766113
    6. '
' → logprob: -17.00001335144043
    7. '_row' → logprob: -17.00001335144043
    8. '_COL' → logprob: -17.12501335144043
    9. '=' → logprob: -17.87501335144043
    10. 'max' → logprob: -18.37501335144043

Token 527: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132789433002472
    2. ' =' → logprob: -1.3132789134979248
    3. '=max' → logprob: -11.063279151916504
    4. '=
' → logprob: -14.313279151916504
    5. '=i' → logprob: -15.188279151916504
    6. 'max' → logprob: -15.313279151916504
    7. ' =
' → logprob: -15.688279151916504
    8. ' ' → logprob: -15.688279151916504
    9. ' max' → logprob: -17.563278198242188
    10. '+=' → logprob: -18.313278198242188

Token 528: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16022726893424988
    2. 'i' → logprob: -1.9102272987365723
    3. ' max' → logprob: -13.660226821899414
    4. 'max' → logprob: -13.785226821899414
    5. ' ' → logprob: -14.285226821899414
    6. '	i' → logprob: -16.410226821899414
    7. '```' → logprob: -17.035226821899414
    8. ' ' → logprob: -17.160226821899414
    9. '(i' → logprob: -17.410226821899414
    10. 'c' → logprob: -17.785226821899414

Token 529: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005669722449965775
    2. '<|end|>' → logprob: -7.8755669593811035
    3. '   ' → logprob: -9.875567436218262
    4. '        
' → logprob: -10.000567436218262
    5. '
' → logprob: -11.125567436218262
    6. '           ' → logprob: -11.500567436218262
    7. '#' → logprob: -11.875567436218262
    8. '<|end|>' → logprob: -12.125567436218262
    9. '    
' → logprob: -12.250567436218262
    10. ',' → logprob: -12.313067436218262

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043053762055933475
    2. '
' → logprob: -5.754305362701416
    3. '        
' → logprob: -7.504305362701416
    4. '   ' → logprob: -8.879305839538574
    5. '<|end|>' → logprob: -9.129305839538574
    6. '    
' → logprob: -9.754305839538574
    7. '  
' → logprob: -9.879305839538574
    8. ' 
' → logprob: -9.879305839538574
    9. ')' → logprob: -10.629305839538574
    10. '           ' → logprob: -10.879305839538574

Token 531: ' new' (ID: 620)
  Prédit: ' cropped'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cropped' → logprob: -0.4827978014945984
    2. 'normalized' → logprob: -2.232797861099243
    3. 'cols' → logprob: -2.607797861099243
    4. 'new' (adapté à ' new') → logprob: -2.982797861099243
    5. 'current' → logprob: -3.107797861099243
    6. ' normalized' → logprob: -3.607797861099243
    7. ' current' → logprob: -3.982797861099243
    8. ' new' → logprob: -4.232797622680664
    9. ' cols' → logprob: -4.482797622680664
    10. 'trim' → logprob: -4.607797622680664

Token 532: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.02101360633969307
    2. 'block' → logprob: -3.8960134983062744
    3. '_rows' → logprob: -8.271013259887695
    4. '_current' → logprob: -9.271013259887695
    5. '_' → logprob: -9.646013259887695
    6. 'current' → logprob: -10.646013259887695
    7. 'rows' → logprob: -11.521013259887695
    8. '_row' → logprob: -11.771013259887695
    9. ' block' → logprob: -13.021013259887695
    10. '_rot' → logprob: -13.146013259887695

Token 533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012520482763648033
    2. ' =' → logprob: -4.3875203132629395
    3. '.append' → logprob: -12.512520790100098
    4. '=[]' → logprob: -12.512520790100098
    5. '=[' → logprob: -13.887520790100098
    6. '=[]
' → logprob: -14.012520790100098
    7. 'append' → logprob: -15.137520790100098
    8. '=
' → logprob: -15.262520790100098
    9. 'rows' → logprob: -15.512520790100098
    10. '[' → logprob: -15.637520790100098

Token 534: ' []
' (ID: 8911)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.6224498748779297
    2. '[' → logprob: -1.1224498748779297
    3. '[]' → logprob: -2.8724498748779297
    4. '['' → logprob: -3.3724498748779297
    5. '[]
' → logprob: -3.8724498748779297
    6. ' [' → logprob: -4.49744987487793
    7. '[r' → logprob: -4.87244987487793
    8. '[line' → logprob: -5.99744987487793
    9. '[new' → logprob: -7.12244987487793
    10. '[
' → logprob: -7.24744987487793

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01209210604429245
    2. 'for' → logprob: -5.012092113494873
    3. ' for' → logprob: -5.262092113494873
    4. '[]' → logprob: -9.637091636657715
    5. '[' → logprob: -10.137091636657715
    6. '[row' → logprob: -10.387091636657715
    7. 'row' → logprob: -11.387091636657715
    8. '           ' → logprob: -12.512091636657715
    9. ' ' → logprob: -12.512091636657715
    10. '   ' → logprob: -12.512091636657715

Token 536: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6042389869689941
    2. '       ' → logprob: -1.1042389869689941
    3. ' for' → logprob: -2.104238986968994
    4. '   ' → logprob: -9.604238510131836
    5. '           ' → logprob: -10.979238510131836
    6. '	for' → logprob: -11.104238510131836
    7. ' ' → logprob: -12.729238510131836
    8. '        ' → logprob: -13.979238510131836
    9. '[' → logprob: -14.104238510131836
    10. '    ' → logprob: -14.354238510131836

Token 537: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.003207300091162324
    2. 'r' → logprob: -6.378207206726074
    3. ' row' → logprob: -6.503207206726074
    4. ' r' → logprob: -13.003207206726074
    5. '	row' → logprob: -13.753207206726074
    6. '   ' → logprob: -14.253207206726074
    7. ' ' → logprob: -14.628207206726074
    8. 'rown' → logprob: -15.378207206726074
    9. 'ro' → logprob: -15.628207206726074
    10. 'rr' → logprob: -16.12820816040039

Token 538: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054936330765485764
    2. 'in' → logprob: -2.929936408996582
    3. 'row' → logprob: -10.929936408996582
    4. ' ' → logprob: -11.554936408996582
    5. 'n' → logprob: -12.679936408996582
    6. '	in' → logprob: -12.679936408996582
    7. '   ' → logprob: -13.054936408996582
    8. '    ' → logprob: -13.617436408996582
    9. '_in' → logprob: -13.679936408996582
    10. 'In' → logprob: -13.679936408996582

Token 539: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.007620468270033598
    2. ' rows' → logprob: -4.882620334625244
    3. '   ' → logprob: -12.132620811462402
    4. 'row' → logprob: -13.132620811462402
    5. '	rows' → logprob: -13.132620811462402
    6. ' ' → logprob: -13.382620811462402
    7. '(rows' → logprob: -13.632620811462402
    8. '[
' → logprob: -14.507620811462402
    9. '[' → logprob: -14.507620811462402
    10. '
' → logprob: -15.257620811462402

Token 540: ':
' (ID: 734)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.5071667432785034
    2. ':' → logprob: -1.8821667432785034
    3. ':
' → logprob: -2.507166862487793
    4. '           ' → logprob: -3.257166862487793
    5. ' new' → logprob: -3.257166862487793
    6. '[' → logprob: -3.257166862487793
    7. 'new' → logprob: -3.382166862487793
    8. ':new' → logprob: -5.632166862487793
    9. '[:' → logprob: -6.007166862487793
    10. '[row' → logprob: -6.757166862487793

Token 541: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.012154287658631802
    2. '           ' → logprob: -4.5121541023254395
    3. '[new' → logprob: -7.6371541023254395
    4. 'new' → logprob: -7.7621541023254395
    5. ' ' → logprob: -10.262154579162598
    6. '            ' → logprob: -10.637154579162598
    7. '[' → logprob: -10.762154579162598
    8. '.append' → logprob: -11.387154579162598
    9. '[:]' → logprob: -11.387154579162598
    10. '<|end|>' → logprob: -11.387154579162598

Token 542: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.016097482293844223
    2. 'new' (adapté à ' new') → logprob: -4.141097545623779
    3. '               ' → logprob: -10.516097068786621
    4. '           ' → logprob: -11.016097068786621
    5. '[new' → logprob: -11.891097068786621
    6. ' row' → logprob: -12.141097068786621
    7. '            ' → logprob: -12.516097068786621
    8. '   ' → logprob: -13.641097068786621
    9. 'row' → logprob: -14.641097068786621
    10. '	new' → logprob: -14.766097068786621

Token 543: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.8768137693405151
    2. '_row' → logprob: -1.0018137693405151
    3. '.append' → logprob: -2.2518138885498047
    4. 'row' → logprob: -3.1268138885498047
    5. 'block' → logprob: -3.5018138885498047
    6. 'new' → logprob: -3.8768138885498047
    7. ' +=' → logprob: -6.001813888549805
    8. '[new' → logprob: -6.126813888549805
    9. ' row' → logprob: -6.251813888549805
    10. '+=' → logprob: -6.501813888549805

Token 544: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00022523177904076874
    2. '.' → logprob: -8.625225067138672
    3. ' .' → logprob: -11.000225067138672
    4. ' +=' → logprob: -11.250225067138672
    5. '+=' → logprob: -11.375225067138672
    6. '=' → logprob: -13.500225067138672
    7. 'append' → logprob: -13.625225067138672
    8. '.ap' → logprob: -14.125225067138672
    9. ' append' → logprob: -14.625225067138672
    10. '.=' → logprob: -15.000225067138672

Token 545: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.4749141037464142
    2. ' row' → logprob: -1.2249140739440918
    3. '(row' → logprob: -2.474914073944092
    4. '(' → logprob: -9.34991455078125
    5. ' (' → logprob: -11.22491455078125
    6. '	row' → logprob: -13.22491455078125
    7. '               ' → logprob: -13.72491455078125
    8. '(
' → logprob: -14.22491455078125
    9. '           ' → logprob: -14.22491455078125
    10. '('' → logprob: -14.34991455078125

Token 546: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -7.421908958349377e-05
    2. '[' → logprob: -9.75007438659668
    3. '[
' → logprob: -11.75007438659668
    4. '[max' → logprob: -13.12507438659668
    5. '           ' → logprob: -13.25007438659668
    6. ' [' → logprob: -13.87507438659668
    7. '   ' → logprob: -14.25007438659668
    8. '       ' → logprob: -14.37507438659668
    9. '=min' → logprob: -14.37507438659668
    10. '=' → logprob: -14.87507438659668

Token 547: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0009138475870713592
    2. 'col' → logprob: -7.000913619995117
    3. 'c' → logprob: -13.875913619995117
    4. '_COL' → logprob: -14.750913619995117
    5. 'Col' → logprob: -15.250913619995117
    6. '_' → logprob: -15.250913619995117
    7. '_cols' → logprob: -15.875913619995117
    8. '_c' → logprob: -16.500913619995117
    9. ' col' → logprob: -16.625913619995117
    10. 'icol' → logprob: -16.750913619995117

Token 548: ':max' (ID: 179407)
  Prédit: ':max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':max' → logprob: -7.32654589228332e-05
    2. ':' → logprob: -10.250073432922363
    3. ' :' → logprob: -10.250073432922363
    4. 'max' → logprob: -13.000073432922363
    5. ' ' → logprob: -16.625072479248047
    6. ' max' → logprob: -17.250072479248047
    7. ':(' → logprob: -17.375072479248047
    8. ':
' → logprob: -17.375072479248047
    9. '	max' → logprob: -18.000072479248047
    10. '   ' → logprob: -18.125072479248047

Token 549: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0003452368837315589
    2. 'col' → logprob: -8.000345230102539
    3. 'c' → logprob: -12.000345230102539
    4. 'Col' → logprob: -13.750345230102539
    5. 'max' → logprob: -14.125345230102539
    6. 'ol' → logprob: -14.750345230102539
    7. 'r' → logprob: -15.000345230102539
    8. '+' → logprob: -15.125345230102539
    9. 'o' → logprob: -15.625345230102539
    10. '=' → logprob: -16.00034523010254

Token 550: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004306692280806601
    2. ' +' → logprob: -7.750430583953857
    3. '＋' → logprob: -17.750431060791016
    4. ']+' → logprob: -18.250431060791016
    5. '1' → logprob: -18.375431060791016
    6. '   ' → logprob: -19.625431060791016
    7. '+c' → logprob: -20.500431060791016
    8. '()+' → logprob: -20.500431060791016
    9. '+
' → logprob: -20.500431060791016
    10. '```' → logprob: -20.500431060791016

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.50000286102295
    3. '+' → logprob: -13.87500286102295
    4. '   ' → logprob: -19.500001907348633
    5. ')' → logprob: -20.375001907348633
    6. 'None' → logprob: -20.500001907348633
    7. '
' → logprob: -21.125001907348633
    8. 'max' → logprob: -21.125001907348633
    9. '۱' → logprob: -21.375001907348633
    10. ']' → logprob: -21.500001907348633

Token 552: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.043396953493356705
    2. '])
' → logprob: -3.2933969497680664
    3. ']' → logprob: -5.543396949768066
    4. ')' → logprob: -6.793396949768066
    5. ')
' → logprob: -8.918396949768066
    6. ']
' → logprob: -9.793396949768066
    7. ' ])' → logprob: -9.918396949768066
    8. '       ' → logprob: -10.543396949768066
    9. '   ' → logprob: -10.793396949768066
    10. ' ])
' → logprob: -11.918396949768066

Token 553: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1632615327835083
    2. '<|end|>' → logprob: -2.1632614135742188
    3. '   ' → logprob: -4.288261413574219
    4. '    
' → logprob: -4.788261413574219
    5. '  
' → logprob: -5.538261413574219
    6. '       ' → logprob: -6.288261413574219
    7. '
' → logprob: -6.413261413574219
    8. '        
' → logprob: -6.413261413574219
    9. ' 
' → logprob: -6.663261413574219
    10. 'current' → logprob: -7.288261413574219

Token 554: ' current' (ID: 2208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3385116457939148
    2. ' if' → logprob: -1.5885117053985596
    3. 'if' → logprob: -3.4635117053985596
    4. '       ' → logprob: -4.2135114669799805
    5. 'rot' → logprob: -4.4635114669799805
    6. '
' → logprob: -4.5885114669799805
    7. 'current' (adapté à ' current') → logprob: -4.8385114669799805
    8. ' current' → logprob: -5.8385114669799805
    9. '    
' → logprob: -6.4635114669799805
    10. ' rotations' → logprob: -6.9635114669799805

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. ',' → logprob: -16.811967849731445
    4. '＝' → logprob: -17.311967849731445
    5. ' ' → logprob: -18.311967849731445
    6. '=create' → logprob: -18.436967849731445
    7. 'rotate' → logprob: -18.936967849731445
    8. '=

' → logprob: -18.936967849731445
    9. '<|end|>' → logprob: -19.061967849731445
    10. '=}' → logprob: -19.311967849731445

Token 556: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07563761621713638
    2. ' new' → logprob: -2.7006375789642334
    3. 'rotate' → logprob: -5.2006378173828125
    4. ' rotate' → logprob: -8.700637817382812
    5. '   ' → logprob: -13.825637817382812
    6. '	new' → logprob: -13.950637817382812
    7. 'rot' → logprob: -14.075637817382812
    8. '[new' → logprob: -14.325637817382812
    9. ' ' → logprob: -14.450637817382812
    10. '(new' → logprob: -15.325637817382812

Token 557: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.0010353106772527099
    2. 'block' → logprob: -6.876035213470459
    3. 'Block' → logprob: -14.501035690307617
    4. 'new' → logprob: -15.001035690307617
    5. '_bloc' → logprob: -15.001035690307617
    6. ' block' → logprob: -15.126035690307617
    7. '_row' → logprob: -15.626035690307617
    8. 'rotate' → logprob: -15.751035690307617
    9. '(block' → logprob: -15.876035690307617
    10. '_BLOCK' → logprob: -16.251035690307617

Token 558: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5663920640945435
    2. '       ' → logprob: -0.9413920640945435
    3. '<|end|>' → logprob: -3.816391944885254
    4. '   ' → logprob: -4.316391944885254
    5. '        
' → logprob: -5.941391944885254
    6. '    
' → logprob: -6.566391944885254
    7. ' if' → logprob: -7.316391944885254
    8. '
' → logprob: -7.816391944885254
    9. '<|end|>' → logprob: -7.816391944885254
    10. '  
' → logprob: -8.441391944885254

Token 559: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22414471209049225
    2. ' if' → logprob: -2.849144697189331
    3. 'if' → logprob: -2.974144697189331
    4. '       ' → logprob: -3.099144697189331
    5. '
' → logprob: -3.724144697189331
    6. 'rot' → logprob: -4.34914493560791
    7. 'tokens' → logprob: -5.22414493560791
    8. '    
' → logprob: -6.22414493560791
    9. '```' → logprob: -7.59914493560791
    10. '        
' → logprob: -7.72414493560791

Token 560: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5701209902763367
    2. '   ' → logprob: -1.1951210498809814
    3. 'block' → logprob: -2.9451210498809814
    4. 'tiles' → logprob: -2.9451210498809814
    5. 'rot' → logprob: -4.320120811462402
    6. ' if' → logprob: -4.570120811462402
    7. ' tiles' → logprob: -7.195120811462402
    8. 'tile' → logprob: -7.320120811462402
    9. '       ' → logprob: -8.070120811462402
    10. 'blocks' → logprob: -8.195120811462402

Token 561: ' Avoid' (ID: 46613)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.6724196076393127
    2. 'if' → logprob: -1.672419548034668
    3. 'rot' → logprob: -1.797419548034668
    4. 'tiles' → logprob: -2.172419548034668
    5. 'bt' → logprob: -4.672419548034668
    6. 'current' → logprob: -5.297419548034668
    7. 'rt' → logprob: -6.297419548034668
    8. 'tile' → logprob: -6.422419548034668
    9. '   ' → logprob: -7.047419548034668
    10. ' if' → logprob: -7.547419548034668

Token 562: ' adding' (ID: 12673)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3363092541694641
    2. 'if' → logprob: -1.3363091945648193
    3. ' duplicate' → logprob: -4.711309432983398
    4. ' duplicates' → logprob: -5.336309432983398
    5. 'duplicate' → logprob: -5.586309432983398
    6. 'duplicates' → logprob: -6.086309432983398
    7. '   ' → logprob: -6.961309432983398
    8. 'found' → logprob: -7.336309432983398
    9. 'already' → logprob: -8.461309432983398
    10. ' found' → logprob: -8.836309432983398

Token 563: ' duplicates' (ID: 91135)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.38664600253105164
    2. ' any' → logprob: -2.136646032333374
    3. 'current' → logprob: -2.386646032333374
    4. ' new' → logprob: -2.761646032333374
    5. 'if' → logprob: -3.886646032333374
    6. ' if' → logprob: -4.386645793914795
    7. 'new' → logprob: -4.761645793914795
    8. 'any' → logprob: -5.386645793914795
    9. ' next' → logprob: -7.761645793914795
    10. ' duplicates' → logprob: -8.386646270751953

Token 564: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1621692180633545
    2. ' if' → logprob: -1.9121692180633545
    3. '
' → logprob: -7.287169456481934
    4. ',' → logprob: -8.162169456481934
    5. ' and' → logprob: -8.662169456481934
    6. '   ' → logprob: -8.662169456481934
    7. 'if' → logprob: -8.662169456481934
    8. '        
' → logprob: -8.662169456481934
    9. ':' → logprob: -9.412169456481934
    10. ' (' → logprob: -9.912169456481934

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25628089904785156
    2. ' if' → logprob: -1.5062808990478516
    3. '   ' → logprob: -5.756280899047852
    4. 'if' → logprob: -6.881280899047852
    5. ',' → logprob: -10.006280899047852
    6. '
' → logprob: -10.631280899047852
    7. '        
' → logprob: -11.131280899047852
    8. '	if' → logprob: -11.256280899047852
    9. ' and' → logprob: -11.756280899047852
    10. '	' → logprob: -12.131280899047852

Token 566: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4886224865913391
    2. 'if' (adapté à ' if') → logprob: -0.9886224865913391
    3. '       ' → logprob: -4.238622665405273
    4. '   ' → logprob: -11.613622665405273
    5. 'for' → logprob: -14.363622665405273
    6. ' for' → logprob: -14.488622665405273
    7. '	if' → logprob: -14.738622665405273
    8. '```' → logprob: -14.988622665405273
    9. 'found' → logprob: -15.113622665405273
    10. ' ' → logprob: -15.238622665405273

Token 567: ' current' (ID: 2208)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5043911933898926
    2. 'current' → logprob: -1.2543911933898926
    3. 'not' → logprob: -2.5043911933898926
    4. ' current' → logprob: -4.629391193389893
    5. 'all' → logprob: -4.879391193389893
    6. ' new' → logprob: -4.879391193389893
    7. ' not' → logprob: -6.129391193389893
    8. 'len' → logprob: -6.879391193389893
    9. ' all' → logprob: -7.379391193389893
    10. 'any' → logprob: -8.629390716552734

Token 568: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5759609341621399
    2. ' not' → logprob: -0.8259609341621399
    3. ')' → logprob: -11.825961112976074
    4. '==' → logprob: -12.325961112976074
    5. ']' → logprob: -13.450961112976074
    6. 'and' → logprob: -13.700961112976074
    7. ':' → logprob: -13.825961112976074
    8. 'in' → logprob: -13.825961112976074
    9. '	not' → logprob: -13.825961112976074
    10. 'no' → logprob: -14.075961112976074

Token 569: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14289291203022003
    2. 'in' → logprob: -2.017892837524414
    3. ' rotations' → logprob: -8.767892837524414
    4. 'rot' → logprob: -10.267892837524414
    5. 'to' → logprob: -12.017892837524414
    6. ' to' → logprob: -12.267892837524414
    7. ')' → logprob: -12.392892837524414
    8. ',' → logprob: -12.767892837524414
    9. '   ' → logprob: -13.142892837524414
    10. 's' → logprob: -13.642892837524414

Token 570: ' rotations' (ID: 141136)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -8.625866030342877e-05
    2. ' rotations' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.625085830688477
    4. '[' → logprob: -14.875085830688477
    5. 'rots' → logprob: -15.000085830688477
    6. '
' → logprob: -16.625085830688477
    7. 'rott' → logprob: -17.250085830688477
    8. '_rot' → logprob: -17.250085830688477
    9. ' rot' → logprob: -17.750085830688477
    10. '(rot' → logprob: -18.125085830688477

Token 571: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08979194611310959
    2. ':
' → logprob: -2.464792013168335
    3. '       ' → logprob: -8.214792251586914
    4. '):' → logprob: -8.339792251586914
    5. '):
' → logprob: -8.714792251586914
    6. '.append' → logprob: -9.214792251586914
    7. ' and' → logprob: -11.214792251586914
    8. '           ' → logprob: -11.339792251586914
    9. '   ' → logprob: -11.464792251586914
    10. ',' → logprob: -11.464792251586914

Token 572: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001499983249232173
    2. '           ' → logprob: -7.501500129699707
    3. '   ' → logprob: -7.751500129699707
    4. 'rot' → logprob: -8.251500129699707
    5. ' rotations' → logprob: -9.251500129699707
    6. '        
' → logprob: -10.376500129699707
    7. '<|end|>' → logprob: -10.751500129699707
    8. '```' → logprob: -10.751500129699707
    9. ' rot' → logprob: -11.001500129699707
    10. '(rot' → logprob: -11.501500129699707

Token 573: ' rotations' (ID: 141136)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.013402438722550869
    2. '       ' → logprob: -4.638402462005615
    3. ' rotations' → logprob: -5.763402462005615
    4. '   ' → logprob: -7.763402462005615
    5. ' rot' → logprob: -10.263401985168457
    6. 'rots' → logprob: -10.388401985168457
    7. '           ' → logprob: -13.138401985168457
    8. '_rot' → logprob: -13.138401985168457
    9. '(rot' → logprob: -13.263401985168457
    10. 'rotate' → logprob: -14.263401985168457

Token 574: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00193149340339005
    2. '.' → logprob: -6.251931667327881
    3. '.app' → logprob: -13.376931190490723
    4. ' .' → logprob: -15.126931190490723
    5. '.extend' → logprob: -15.126931190490723
    6. 'append' → logprob: -15.251931190490723
    7. '.ap' → logprob: -15.501931190490723
    8. '.add' → logprob: -16.25193214416504
    9. '.Append' → logprob: -16.37693214416504
    10. '.push' → logprob: -16.87693214416504

Token 575: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -2.2127087504486553e-05
    2. 'current' → logprob: -11.375021934509277
    3. '(' → logprob: -11.500021934509277
    4. '(
' → logprob: -15.375021934509277
    5. '(curr' → logprob: -16.750022888183594
    6. '(copy' → logprob: -17.125022888183594
    7. '(cur' → logprob: -17.125022888183594
    8. ' current' → logprob: -17.625022888183594
    9. ',current' → logprob: -18.250022888183594
    10. '(c' → logprob: -18.625022888183594

Token 576: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00837332010269165
    2. '<|end|>' → logprob: -4.883373260498047
    3. ')
' → logprob: -7.633373260498047
    4. '<|end|>' → logprob: -9.008373260498047
    5. '       ' → logprob: -9.633373260498047
    6. ' )' → logprob: -10.258373260498047
    7. '
' → logprob: -10.758373260498047
    8. '   ' → logprob: -11.133373260498047
    9. '    
' → logprob: -12.758373260498047
    10. ')return' → logprob: -13.133373260498047

Token 577: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.405699223279953
    2. '   ' → logprob: -1.7806992530822754
    3. '    
' → logprob: -2.5306992530822754
    4. '<|end|>' → logprob: -2.9056992530822754
    5. ' 
' → logprob: -4.655699253082275
    6. '  
' → logprob: -5.530699253082275
    7. '#' → logprob: -5.530699253082275
    8. ' for' → logprob: -5.905699253082275
    9. 'for' → logprob: -6.405699253082275
    10. '        
' → logprob: -6.655699253082275

Token 578: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.3800792396068573
    2. ' current' → logprob: -1.5050792694091797
    3. '   ' → logprob: -2.3800792694091797
    4. '       ' → logprob: -6.50507926940918
    5. '	current' → logprob: -9.38007926940918
    6. ' ' → logprob: -10.75507926940918
    7. '
' → logprob: -11.13007926940918
    8. '    
' → logprob: -11.63007926940918
    9. '```' → logprob: -12.50507926940918
    10. ',current' → logprob: -12.63007926940918

Token 579: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -19.889163970947266
    4. ' ' → logprob: -20.264163970947266
    5. 'rotate' → logprob: -22.139163970947266
    6. '.=' → logprob: -22.389163970947266
    7. '=
' → logprob: -22.639163970947266
    8. '+=' → logprob: -23.389163970947266
    9. '*=' → logprob: -23.514163970947266
    10. '=}' → logprob: -23.514163970947266

Token 580: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.00033546582562848926
    2. ' rotate' → logprob: -8.000335693359375
    3. '.rotate' → logprob: -20.125335693359375
    4. '   ' → logprob: -20.375335693359375
    5. 'rot' → logprob: -20.750335693359375
    6. ' ' → logprob: -20.750335693359375
    7. '  ' → logprob: -21.625335693359375
    8. '_rotate' → logprob: -22.625335693359375
    9. '
' → logprob: -22.750335693359375
    10. 'resize' → logprob: -22.875335693359375

Token 581: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.001224989420734346
    2. '(' → logprob: -6.751224994659424
    3. 'current' → logprob: -9.876224517822266
    4. '(
' → logprob: -13.001224517822266
    5. '(block' → logprob: -14.251224517822266
    6. ' (' → logprob: -15.376224517822266
    7. 'block' → logprob: -16.501224517822266
    8. '(

' → logprob: -17.126224517822266
    9. '[current' → logprob: -17.626224517822266
    10. '(cur' → logprob: -17.876224517822266

Token 582: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ')
' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.375008583068848
    4. ')

' → logprob: -18.500009536743164
    5. '),' → logprob: -18.625009536743164
    6. '())' → logprob: -19.000009536743164
    7. '<|end|>' → logprob: -19.125009536743164
    8. ')return' → logprob: -19.875009536743164
    9. '[' → logprob: -20.000009536743164
    10. '   ' → logprob: -20.000009536743164

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4620981812477112
    2. 'for' → logprob: -1.7120981216430664
    3. 'max' → logprob: -2.4620981216430664
    4. 'result' → logprob: -3.0870981216430664
    5. 'answer' → logprob: -4.212098121643066
    6. 'best' → logprob: -4.212098121643066
    7. 'results' → logprob: -4.337098121643066
    8. 'answers' → logprob: -5.712098121643066
    9. 'count' → logprob: -6.337098121643066
    10. '    
' → logprob: -6.337098121643066

Token 584: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.25981420278549194
    2. 'best' → logprob: -1.5098142623901367
    3. 'result' → logprob: -5.759814262390137
    4. 'answer' → logprob: -6.259814262390137
    5. 'ans' → logprob: -6.759814262390137
    6. 'results' → logprob: -7.259814262390137
    7. '   ' → logprob: -7.634814262390137
    8. 'res' → logprob: -8.634814262390137
    9. 'answers' → logprob: -9.009814262390137
    10. ' best' → logprob: -9.759814262390137

Token 585: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.1125322580337524
    2. '_lines' → logprob: -1.2375322580337524
    3. '_full' → logprob: -1.6125322580337524
    4. '_count' → logprob: -1.7375322580337524
    5. '_clear' → logprob: -6.362532138824463
    6. '_blocks' → logprob: -6.987532138824463
    7. '_complete' → logprob: -7.237532138824463
    8. '_max' → logprob: -7.487532138824463
    9. '_c' → logprob: -7.612532138824463
    10. '_result' → logprob: -7.862532138824463

Token 586: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868725001811981
    2. '=' → logprob: -1.1368725299835205
    3. '_' → logprob: -14.511872291564941
    4. ',' → logprob: -14.886872291564941
    5. ' =
' → logprob: -15.636872291564941
    6. '   ' → logprob: -15.761872291564941
    7. ' ' → logprob: -15.761872291564941
    8. ')' → logprob: -17.136873245239258
    9. 's' → logprob: -17.386873245239258
    10. '=
' → logprob: -17.511873245239258

Token 587: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03395986929535866
    2. '-' → logprob: -3.4089598655700684
    3. ' ' → logprob: -8.283960342407227
    4. ' -' → logprob: -9.908960342407227
    5. 'float' → logprob: -11.658960342407227
    6. '   ' → logprob: -14.158960342407227
    7. 'None' → logprob: -14.783960342407227
    8. '1' → logprob: -15.846460342407227
    9. '-m' → logprob: -15.971460342407227
    10. 'int' → logprob: -16.158960342407227

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003919768612831831
    2. 'float' → logprob: -5.62891960144043
    3. '10' → logprob: -8.75391960144043
    4. '100' → logprob: -9.00391960144043
    5. '999' → logprob: -10.87891960144043
    6. '   ' → logprob: -12.12891960144043
    7. 'int' → logprob: -12.75391960144043
    8. ' ' → logprob: -13.25391960144043
    9. '0' → logprob: -13.37891960144043
    10. 'inf' → logprob: -13.87891960144043

Token 589: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5010354518890381
    2. 'for' → logprob: -1.001035451889038
    3. 'max' → logprob: -4.751035690307617
    4. '   ' → logprob: -4.751035690307617
    5. '    
' → logprob: -5.126035690307617
    6. ' for' → logprob: -6.001035690307617
    7. ' 
' → logprob: -7.751035690307617
    8. ',' → logprob: -8.751035690307617
    9. '   
' → logprob: -9.626035690307617
    10. 'positions' → logprob: -9.751035690307617

Token 590: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09322918206453323
    2. 'max' → logprob: -2.718229293823242
    3. 'best' → logprob: -4.968229293823242
    4. ' for' → logprob: -5.218229293823242
    5. '   ' → logprob: -5.468229293823242
    6. '
' → logprob: -5.718229293823242
    7. 'positions' → logprob: -6.343229293823242
    8. 'possible' → logprob: -7.718229293823242
    9. '    
' → logprob: -8.843229293823242
    10. 'valid' → logprob: -9.093229293823242

Token 591: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017946461215615273
    2. 'best' → logprob: -4.267946243286133
    3. 'H' → logprob: -6.142946243286133
    4. 'max' → logprob: -6.642946243286133
    5. ' for' → logprob: -9.517946243286133
    6. 'found' → logprob: -9.892946243286133
    7. 'BH' → logprob: -10.142946243286133
    8. 'answer' → logprob: -10.517946243286133
    9. 'result' → logprob: -10.642946243286133
    10. 'positions' → logprob: -11.142946243286133

Token 592: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.169600486755371
    2. 'rotation' → logprob: -1.294600486755371
    3. ' rotation' → logprob: -2.044600486755371
    4. 'rot' → logprob: -2.169600486755371
    5. 'block' → logprob: -2.544600486755371
    6. 'board' → logprob: -3.294600486755371
    7. ' r' → logprob: -3.669600486755371
    8. ' block' → logprob: -4.794600486755371
    9. ' board' → logprob: -4.919600486755371
    10. ' rot' → logprob: -5.169600486755371

Token 593: 'block' (ID: 6230)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4926520884037018
    2. 'otation' → logprob: -1.2426520586013794
    3. 'ot' → logprob: -2.367652177810669
    4. 'in' → logprob: -6.11765193939209
    5. 'o' → logprob: -6.36765193939209
    6. 'otate' → logprob: -7.24265193939209
    7. ',' → logprob: -7.99265193939209
    8. 'ation' → logprob: -8.24265193939209
    9. '_rotation' → logprob: -8.49265193939209
    10. 'ots' → logprob: -9.11765193939209

Token 594: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004094427917152643
    2. 'in' → logprob: -5.50409460067749
    3. ',' → logprob: -12.004094123840332
    4. ' ' → logprob: -12.629094123840332
    5. 's' → logprob: -14.504094123840332
    6. '
' → logprob: -14.754094123840332
    7. 'ot' → logprob: -14.754094123840332
    8. 'e' → logprob: -14.754094123840332
    9. '_idx' → logprob: -14.879094123840332
    10. 'import' → logprob: -15.379094123840332

Token 595: ' rotations' (ID: 141136)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.005682399030774832
    2. ' rotations' → logprob: -5.255682468414307
    3. 'range' → logprob: -7.755682468414307
    4. ' range' → logprob: -11.755681991577148
    5. '   ' → logprob: -12.380681991577148
    6. 'rots' → logprob: -12.880681991577148
    7. '[' → logprob: -13.630681991577148
    8. 'rotate' → logprob: -14.130681991577148
    9. 'rott' → logprob: -14.380681991577148
    10. 'ranges' → logprob: -14.630681991577148

Token 596: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08940406143665314
    2. ':
' → logprob: -2.4644041061401367
    3. '   ' → logprob: -8.089404106140137
    4. '       ' → logprob: -9.464404106140137
    5. ',' → logprob: -9.839404106140137
    6. '=' → logprob: -11.714404106140137
    7. '):
' → logprob: -11.839404106140137
    8. '):' → logprob: -12.964404106140137
    9. ':

' → logprob: -13.464404106140137
    10. ' =' → logprob: -13.464404106140137

Token 597: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692100763320923
    2. '       ' → logprob: -2.2419209480285645
    3. 'H' → logprob: -6.6169209480285645
    4. ' for' → logprob: -6.8669209480285645
    5. '    ' → logprob: -7.7419209480285645
    6. 'for' → logprob: -8.491921424865723
    7. ':' → logprob: -8.491921424865723
    8. ' H' → logprob: -8.616921424865723
    9. '     ' → logprob: -8.616921424865723
    10. '    
' → logprob: -9.116921424865723

Token 598: ' block' (ID: 4355)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.000725269317627
    2. 'block' (adapté à ' block') → logprob: -1.125725269317627
    3. '   ' → logprob: -1.625725269317627
    4. 'H' → logprob: -3.500725269317627
    5. 'BH' → logprob: -3.750725269317627
    6. '       ' → logprob: -4.750725269317627
    7. 'tiles' → logprob: -4.750725269317627
    8. 'rb' → logprob: -5.500725269317627
    9. ' r' → logprob: -5.625725269317627
    10. 'for' → logprob: -5.625725269317627

Token 599: '_tiles' (ID: 147480)
  Prédit: '_tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -8.387458365177736e-05
    2. 'tiles' → logprob: -9.875083923339844
    3. '_' → logprob: -10.625083923339844
    4. '   ' → logprob: -12.375083923339844
    5. ' tiles' → logprob: -14.375083923339844
    6. '_tile' → logprob: -14.375083923339844
    7. '
' → logprob: -14.875083923339844
    8. '=' → logprob: -15.000083923339844
    9. '.tiles' → logprob: -15.000083923339844
    10. 'Tiles' → logprob: -15.250083923339844

Token 600: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150413408875465
    2. '=' → logprob: -4.018150329589844
    3. '=get' → logprob: -14.643150329589844
    4. ')' → logprob: -17.768150329589844
    5. '<|end|>' → logprob: -18.018150329589844
    6. ',' → logprob: -18.143150329589844
    7. ' =
' → logprob: -19.643150329589844
    8. ' =)' → logprob: -19.768150329589844
    9. '=create' → logprob: -20.018150329589844
    10. ' ' → logprob: -20.018150329589844

Token 601: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.01815006136894226
    2. ' get' → logprob: -4.0181498527526855
    3. '[get' → logprob: -16.893150329589844
    4. '(get' → logprob: -18.018150329589844
    5. '=get' → logprob: -18.143150329589844
    6. '	get' → logprob: -19.143150329589844
    7. '.get' → logprob: -19.268150329589844
    8. ')get' → logprob: -21.143150329589844
    9. '_get' → logprob: -21.143150329589844
    10. '   ' → logprob: -21.393150329589844

Token 602: '_tiles' (ID: 147480)
  Prédit: '_tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.00778879364952445
    2. 'tiles' → logprob: -4.88278865814209
    3. '(r' → logprob: -8.88278865814209
    4. 'block' → logprob: -11.13278865814209
    5. '_blocks' → logprob: -11.88278865814209
    6. '(block' → logprob: -12.13278865814209
    7. 'Tiles' → logprob: -12.13278865814209
    8. 'r' → logprob: -12.25778865814209
    9. ' tiles' → logprob: -13.25778865814209
    10. '_' → logprob: -13.63278865814209

Token 603: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.625001907348633
    3. ' (' → logprob: -14.250001907348633
    4. '(
' → logprob: -15.750001907348633
    5. '(rb' → logprob: -17.000001907348633
    6. '(re' → logprob: -17.375001907348633
    7. ')' → logprob: -17.500001907348633
    8. '       ' → logprob: -18.250001907348633
    9. '(block' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.500001907348633

Token 604: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.004907704424113035
    2. 'lock' → logprob: -5.754907608032227
    3. '(r' → logprob: -6.379907608032227
    4. '(block' → logprob: -11.129907608032227
    5. 'ock' → logprob: -12.004907608032227
    6. ')' → logprob: -12.379907608032227
    7. 'r' → logprob: -12.754907608032227
    8. '_block' → logprob: -14.004907608032227
    9. '(' → logprob: -14.004907608032227
    10. '```' → logprob: -14.379907608032227

Token 605: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2903613746166229
    2. '       ' → logprob: -1.9153614044189453
    3. ')
' → logprob: -2.4153614044189453
    4. '   ' → logprob: -4.665361404418945
    5. '
' → logprob: -5.915361404418945
    6. '<|end|>' → logprob: -6.165361404418945
    7. '        
' → logprob: -7.790361404418945
    8. '):
' → logprob: -8.790361404418945
    9. ',' → logprob: -9.290361404418945
    10. '<|end|>' → logprob: -9.290361404418945

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3631470203399658
    2. '   ' → logprob: -1.4881470203399658
    3. ' for' → logprob: -3.363147020339966
    4. '
' → logprob: -3.738147020339966
    5. '        
' → logprob: -4.988146781921387
    6. '<|end|>' → logprob: -5.238146781921387
    7. '    
' → logprob: -5.488146781921387
    8. '  
' → logprob: -6.238146781921387
    9. ' 
' → logprob: -7.863146781921387
    10. 'for' → logprob: -7.988146781921387

Token 607: ' BH' (ID: 79683)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3021007776260376
    2. 'H' → logprob: -1.4271007776260376
    3. 'BH' (adapté à ' BH') → logprob: -4.677100658416748
    4. '   ' → logprob: -5.052100658416748
    5. 'board' → logprob: -5.427100658416748
    6. ' for' → logprob: -8.427101135253906
    7. 'bh' → logprob: -8.927101135253906
    8. 'RH' → logprob: -9.552101135253906
    9. 'h' → logprob: -9.927101135253906
    10. 'r' → logprob: -10.302101135253906

Token 608: '_rot' (ID: 90451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32112330198287964
    2. '=' → logprob: -1.3211233615875244
    3. ',' → logprob: -5.321123123168945
    4. '2' → logprob: -6.196123123168945
    5. '=len' → logprob: -7.446123123168945
    6. '   ' → logprob: -9.321123123168945
    7. '       ' → logprob: -9.446123123168945
    8. '<|end|>' → logprob: -10.446123123168945
    9. ' ' → logprob: -10.571123123168945
    10. 'len' → logprob: -11.071123123168945

Token 609: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17576973140239716
    2. '=' → logprob: -2.175769805908203
    3. ',' → logprob: -3.050769805908203
    4. '   ' → logprob: -8.675769805908203
    5. '=len' → logprob: -9.175769805908203
    6. ' ,' → logprob: -11.050769805908203
    7. ' ' → logprob: -11.050769805908203
    8. '       ' → logprob: -11.550769805908203
    9. '=size' → logprob: -12.050769805908203
    10. 'ight' → logprob: -12.425769805908203

Token 610: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007100477814674377
    2. ' len' → logprob: -7.2507100105285645
    3. '(len' → logprob: -18.000709533691406
    4. '=len' → logprob: -19.375709533691406
    5. '[len' → logprob: -19.875709533691406
    6. '   ' → logprob: -21.125709533691406
    7. '	len' → logprob: -21.375709533691406
    8. ',len' → logprob: -21.375709533691406
    9. 'length' → logprob: -21.875709533691406
    10. '
' → logprob: -22.625709533691406

Token 611: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.214019307051785e-05
    2. 'r' → logprob: -10.375032424926758
    3. '(block' → logprob: -14.625032424926758
    4. 'block' → logprob: -15.750032424926758
    5. '[r' → logprob: -16.125032424926758
    6. '(' → logprob: -17.125032424926758
    7. ' r' → logprob: -17.500032424926758
    8. '(b' → logprob: -18.125032424926758
    9. '	r' → logprob: -18.250032424926758
    10. ' (' → logprob: -18.375032424926758

Token 612: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.03433889150619507
    2. 'r' → logprob: -3.40933895111084
    3. 'b' → logprob: -8.15933895111084
    4. 'lock' → logprob: -8.28433895111084
    5. '(r' → logprob: -9.53433895111084
    6. 'ot' → logprob: -10.65933895111084
    7. ' r' → logprob: -10.65933895111084
    8. '(block' → logprob: -11.40933895111084
    9. '_block' → logprob: -12.15933895111084
    10. 'rot' → logprob: -12.28433895111084

Token 613: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016054192557930946
    2. ')
' → logprob: -4.141054153442383
    3. '<|end|>' → logprob: -11.641054153442383
    4. '[' → logprob: -12.016054153442383
    5. ' )' → logprob: -13.141054153442383
    6. '   ' → logprob: -14.391054153442383
    7. '       ' → logprob: -14.516054153442383
    8. ')

' → logprob: -15.016054153442383
    9. ')
' → logprob: -15.391054153442383
    10. '#' → logprob: -15.391054153442383

Token 614: '       ' (ID: 309)
  Prédit: 'BW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BW' → logprob: -0.9977677464485168
    2. ' BW' → logprob: -1.372767686843872
    3. '   ' → logprob: -1.497767686843872
    4. '       ' → logprob: -1.872767686843872
    5. 'W' → logprob: -8.747767448425293
    6. '           ' → logprob: -9.247767448425293
    7. ' ' → logprob: -9.747767448425293
    8. ' BH' → logprob: -10.122767448425293
    9. 'BH' → logprob: -10.122767448425293
    10. '
' → logprob: -10.872767448425293

Token 615: ' BW' (ID: 92765)
  Prédit: 'BW'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BW' (adapté à ' BW') → logprob: -0.0008372656302526593
    2. ' BW' → logprob: -7.125837326049805
    3. '   ' → logprob: -10.500837326049805
    4. 'bw' → logprob: -12.875837326049805
    5. 'BH' → logprob: -13.500837326049805
    6. '
' → logprob: -15.125837326049805
    7. 'W' → logprob: -15.250837326049805
    8. ' ' → logprob: -15.375837326049805
    9. '       ' → logprob: -15.875837326049805
    10. 'B' → logprob: -15.875837326049805

Token 616: '_rot' (ID: 90451)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13360707461833954
    2. ' =' → logprob: -2.1336071491241455
    3. '_rot' → logprob: -5.133606910705566
    4. '=len' → logprob: -7.383606910705566
    5. 'rot' → logprob: -9.133606910705566
    6. 'len' → logprob: -11.883606910705566
    7. '   ' → logprob: -12.008606910705566
    8. '(rot' → logprob: -12.133606910705566
    9. '2' → logprob: -12.633606910705566
    10. '```' → logprob: -13.258606910705566

Token 617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21074290573596954
    2. ' =' → logprob: -1.7107429504394531
    3. '<|end|>' → logprob: -4.710742950439453
    4. '<|end|>' → logprob: -8.835742950439453
    5. ' ' → logprob: -9.960742950439453
    6. ')' → logprob: -10.835742950439453
    7. '#' → logprob: -10.835742950439453
    8. ',' → logprob: -11.460742950439453
    9. '   ' → logprob: -11.460742950439453
    10. 'for' → logprob: -12.085742950439453

Token 618: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031777136027812958
    2. ' len' → logprob: -5.753177642822266
    3. '(len' → logprob: -18.128177642822266
    4. '[len' → logprob: -19.628177642822266
    5. '	len' → logprob: -19.628177642822266
    6. '=len' → logprob: -20.003177642822266
    7. '   ' → logprob: -20.878177642822266
    8. ' ' → logprob: -22.003177642822266
    9. '       ' → logprob: -23.003177642822266
    10. 'length' → logprob: -23.128177642822266

Token 619: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00031043673516251147
    2. 'r' → logprob: -8.125310897827148
    3. '[r' → logprob: -11.250310897827148
    4. 'block' → logprob: -13.750310897827148
    5. '   ' → logprob: -16.50031089782715
    6. '[' → logprob: -16.62531089782715
    7. ' (' → logprob: -16.75031089782715
    8. ' r' → logprob: -16.87531089782715
    9. '(' → logprob: -17.12531089782715
    10. '(block' → logprob: -17.75031089782715

Token 620: 'block' (ID: 6230)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.374227425316349e-05
    2. '(r' → logprob: -9.875073432922363
    3. '[' → logprob: -11.375073432922363
    4. ' r' → logprob: -12.000073432922363
    5. 'block' → logprob: -13.125073432922363
    6. '[r' → logprob: -13.250073432922363
    7. 'rot' → logprob: -15.000073432922363
    8. '0' → logprob: -15.125073432922363
    9. ')' → logprob: -16.75007438659668
    10. '_r' → logprob: -17.00007438659668

Token 621: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3871029019355774
    2. '[' → logprob: -1.1371028423309326
    3. ')
' → logprob: -8.512103080749512
    4. '0' → logprob: -11.637103080749512
    5. '   ' → logprob: -12.012103080749512
    6. '```' → logprob: -12.387103080749512
    7. '<|end|>' → logprob: -12.762103080749512
    8. '#' → logprob: -13.637103080749512
    9. ')[' → logprob: -13.762103080749512
    10. '[
' → logprob: -14.012103080749512

Token 622: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012987985974177718
    2. '[' → logprob: -9.000129699707031
    3. ' ' → logprob: -12.125129699707031
    4. '   ' → logprob: -14.500129699707031
    5. '
' → logprob: -15.250129699707031
    6. ')' → logprob: -15.875129699707031
    7. 'r' → logprob: -16.50012969970703
    8. '(' → logprob: -16.75012969970703
    9. '```' → logprob: -18.25012969970703
    10. ' [' → logprob: -18.62512969970703

Token 623: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002489423204679042
    2. ')
' → logprob: -8.375248908996582
    3. '])' → logprob: -12.000248908996582
    4. ' )' → logprob: -12.125248908996582
    5. '   ' → logprob: -13.750248908996582
    6. '})' → logprob: -14.000248908996582
    7. ')]' → logprob: -14.250248908996582
    8. '<|end|>' → logprob: -14.250248908996582
    9. ')])' → logprob: -14.500248908996582
    10. '`)' → logprob: -14.625248908996582

Token 624: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34304308891296387
    2. '   ' → logprob: -1.3430430889129639
    3. 'for' → logprob: -4.218043327331543
    4. '
' → logprob: -4.468043327331543
    5. '    
' → logprob: -6.593043327331543
    6. '<|end|>' → logprob: -7.593043327331543
    7. '  
' → logprob: -7.718043327331543
    8. '       ' → logprob: -7.968043327331543
    9. ' 
' → logprob: -8.843043327331543
    10. '        
' → logprob: -9.093043327331543

Token 625: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4745248854160309
    2. 'for' (adapté à ' for') → logprob: -0.9745248556137085
    3. '   ' → logprob: -7.724524974822998
    4. '       ' → logprob: -13.09952449798584
    5. '
' → logprob: -13.22452449798584
    6. '    
' → logprob: -14.22452449798584
    7. '	for' → logprob: -14.47452449798584
    8. ' 
' → logprob: -14.97452449798584
    9. '        
' → logprob: -16.099525451660156
    10. '    ' → logprob: -16.099525451660156

Token 626: ' sr' (ID: 29405)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6629844307899475
    2. ' r' → logprob: -2.0379843711853027
    3. 'start' → logprob: -2.0379843711853027
    4. ' start' → logprob: -2.1629843711853027
    5. ' br' → logprob: -3.0379843711853027
    6. 'br' → logprob: -3.1629843711853027
    7. 'sr' → logprob: -5.162984371185303
    8. ' sr' → logprob: -5.537984371185303
    9. 'row' → logprob: -5.787984371185303
    10. 'board' → logprob: -5.787984371185303

Token 627: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18835332989692688
    2. 't' → logprob: -1.8133533000946045
    3. 'in' → logprob: -5.938353538513184
    4. 'art' → logprob: -6.313353538513184
    5. 'ange' → logprob: -6.688353538513184
    6. ' ' → logprob: -7.313353538513184
    7. '   ' → logprob: -7.563353538513184
    8. ',' → logprob: -7.563353538513184
    9. 'c' → logprob: -7.813353538513184
    10. '       ' → logprob: -8.688353538513184

Token 628: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31333377957344055
    2. ' range' → logprob: -1.3133337497711182
    3. '0' → logprob: -10.313333511352539
    4. ' in' → logprob: -10.438333511352539
    5. 'in' → logprob: -11.688333511352539
    6. ' ' → logprob: -15.188333511352539
    7. ')' → logprob: -15.188333511352539
    8. '(range' → logprob: -15.188333511352539
    9. '
' → logprob: -15.938333511352539
    10. 'r' → logprob: -16.81333351135254

Token 629: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.08009517192840576
    2. '(len' → logprob: -2.5800952911376953
    3. '(' → logprob: -7.080095291137695
    4. 'len' → logprob: -8.580095291137695
    5. ' (' → logprob: -9.830095291137695
    6. '   ' → logprob: -10.330095291137695
    7. ' len' → logprob: -10.705095291137695
    8. 'B' → logprob: -11.205095291137695
    9. ' BH' → logprob: -11.455095291137695
    10. 'BH' → logprob: -11.705095291137695

Token 630: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.05639313533902168
    2. '(B' → logprob: -3.3063931465148926
    3. 'BH' → logprob: -5.056393146514893
    4. '2' → logprob: -5.431393146514893
    5. 'W' → logprob: -6.181393146514893
    6. '   ' → logprob: -6.431393146514893
    7. 'B' → logprob: -7.056393146514893
    8. '0' → logprob: -7.056393146514893
    9. ' BH' → logprob: -8.181392669677734
    10. '(' → logprob: -8.306392669677734

Token 631: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6339232325553894
    2. '_rot' → logprob: -0.7589232325553894
    3. '
' → logprob: -8.008923530578613
    4. ')' → logprob: -8.383923530578613
    5. 'rot' → logprob: -8.383923530578613
    6. '   ' → logprob: -9.383923530578613
    7. '(rot' → logprob: -9.383923530578613
    8. ',' → logprob: -9.508923530578613
    9. ')
' → logprob: -9.883923530578613
    10. '(B' → logprob: -10.258923530578613

Token 632: ' -' (ID: 533)
  Prédit: '-B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.8909118175506592
    2. '):
' → logprob: -1.5159118175506592
    3. '):' → logprob: -1.7659118175506592
    4. ' -' → logprob: -1.7659118175506592
    5. '-' → logprob: -3.765911817550659
    6. '   ' → logprob: -5.765912055969238
    7. '+' → logprob: -7.390912055969238
    8. ' ' → logprob: -8.265912055969238
    9. '-H' → logprob: -8.640912055969238
    10. ' ):
' → logprob: -8.765912055969238

Token 633: ' BH' (ID: 79683)
  Prédit: 'BH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BH' → logprob: -0.008655465207993984
    2. ' BH' → logprob: -4.758655548095703
    3. '(B' → logprob: -10.133655548095703
    4. '   ' → logprob: -14.258655548095703
    5. ' (' → logprob: -15.133655548095703
    6. '(' → logprob: -15.633655548095703
    7. '       ' → logprob: -18.008655548095703
    8. '           ' → logprob: -18.133655548095703
    9. ' ' → logprob: -18.258655548095703
    10. '-B' → logprob: -18.758655548095703

Token 634: '_rot' (ID: 90451)
  Prédit: '_rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rot' → logprob: -3.941161776310764e-05
    2. 'rot' → logprob: -10.875039100646973
    3. '+' → logprob: -11.000039100646973
    4. ' +' → logprob: -14.000039100646973
    5. '_r' → logprob: -14.125039100646973
    6. '   ' → logprob: -14.375039100646973
    7. '
' → logprob: -14.625039100646973
    8. 'r' → logprob: -15.500039100646973
    9. '       ' → logprob: -16.00004005432129
    10. 'Rot' → logprob: -16.37504005432129

Token 635: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141470432281494
    2. ' +' → logprob: -1.701414704322815
    3. ')+' → logprob: -14.826415061950684
    4. '   ' → logprob: -14.826415061950684
    5. '+
' → logprob: -15.076415061950684
    6. ')' → logprob: -15.826415061950684
    7. ' ' → logprob: -16.201414108276367
    8. ' +
' → logprob: -16.451414108276367
    9. '＋' → logprob: -17.201414108276367
    10. '()+' → logprob: -17.701414108276367

Token 636: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.5000057220459
    4. '```' → logprob: -18.3750057220459
    5. '
' → logprob: -18.6250057220459
    6. '{
' → logprob: -20.6250057220459
    7. ')' → logprob: -20.6250057220459
    8. '  ' → logprob: -20.8750057220459
    9. '`' → logprob: -21.3125057220459
    10. '１' → logprob: -21.3750057220459

Token 637: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31331589818000793
    2. '):' → logprob: -1.3133158683776855
    3. '   ' → logprob: -10.938316345214844
    4. '):
' → logprob: -11.563316345214844
    5. ' ):
' → logprob: -11.938316345214844
    6. ':' → logprob: -12.313316345214844
    7. '+' → logprob: -12.313316345214844
    8. ' ):' → logprob: -12.563316345214844
    9. '):

' → logprob: -13.313316345214844
    10. '       ' → logprob: -13.313316345214844

Token 638: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015586663503199816
    2. ' for' → logprob: -7.001558780670166
    3. '<|end|>' → logprob: -8.501558303833008
    4. '        
' → logprob: -9.001558303833008
    5. '           ' → logprob: -9.751558303833008
    6. ' ' → logprob: -9.876558303833008
    7. '   ' → logprob: -10.126558303833008
    8. ' 
' → logprob: -10.501558303833008
    9. '[' → logprob: -10.626558303833008
    10. ' ' → logprob: -10.876558303833008

Token 639: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21046791970729828
    2. ' for' → logprob: -1.7104679346084595
    3. 'for' (adapté à ' for') → logprob: -4.96046781539917
    4. '               ' → logprob: -6.83546781539917
    5. '            ' → logprob: -7.08546781539917
    6. ' ' → logprob: -10.960468292236328
    7. ' ' → logprob: -11.210468292236328
    8. '             ' → logprob: -11.210468292236328
    9. '          ' → logprob: -11.585468292236328
    10. '   ' → logprob: -12.210468292236328

Token 640: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.0380503311753273
    2. ' sc' → logprob: -3.288050413131714
    3. '(sc' → logprob: -11.788050651550293
    4. '_sc' → logprob: -14.663050651550293
    5. ' ' → logprob: -15.038050651550293
    6. '   ' → logprob: -15.288050651550293
    7. '	sc' → logprob: -15.663050651550293
    8. '
' → logprob: -16.663049697875977
    9. '=sc' → logprob: -17.163049697875977
    10. 'sr' → logprob: -17.288049697875977

Token 641: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008616581559181213
    2. 'in' → logprob: -4.7586164474487305
    3. ' ' → logprob: -13.63361644744873
    4. 'range' → logprob: -14.25861644744873
    5. '<|end|>' → logprob: -16.258617401123047
    6. ' range' → logprob: -16.383617401123047
    7. 'import' → logprob: -18.008617401123047
    8. 'In' → logprob: -18.133617401123047
    9. ' =' → logprob: -18.133617401123047
    10. 'inthe' → logprob: -18.133617401123047

Token 642: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038047224283218384
    2. ' range' → logprob: -3.2880473136901855
    3. '(range' → logprob: -12.163046836853027
    4. ' ' → logprob: -15.663046836853027
    5. '(B' → logprob: -15.788046836853027
    6. ' in' → logprob: -16.663047790527344
    7. 'BW' → logprob: -16.913047790527344
    8. '   ' → logprob: -16.913047790527344
    9. 'in' → logprob: -17.038047790527344
    10. ' BW' → logprob: -17.663047790527344

Token 643: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.03356132656335831
    2. 'BW' → logprob: -3.5335612297058105
    3. ' BW' → logprob: -5.6585612297058105
    4. ' (' → logprob: -8.408561706542969
    5. '   ' → logprob: -9.783561706542969
    6. '(' → logprob: -10.783561706542969
    7. '           ' → logprob: -12.783561706542969
    8. '0' → logprob: -13.033561706542969
    9. '       ' → logprob: -13.158561706542969
    10. ' ' → logprob: -13.408561706542969

Token 644: 'W' (ID: 54)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14759041368961334
    2. 'W' → logprob: -2.147590398788452
    3. '0' → logprob: -4.647590637207031
    4. 'BW' → logprob: -5.272590637207031
    5. ' BW' → logprob: -6.272590637207031
    6. '+' → logprob: -7.022590637207031
    7. '_W' → logprob: -7.647590637207031
    8. ')' → logprob: -7.772590637207031
    9. '(W' → logprob: -7.772590637207031
    10. '_rot' → logprob: -7.772590637207031

Token 645: '2' (ID: 17)
  Prédit: '_rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rot' → logprob: -0.28578075766563416
    2. '2' → logprob: -1.4107807874679565
    3. 'rot' → logprob: -5.410780906677246
    4. ')' → logprob: -10.035780906677246
    5. ' -' → logprob: -10.410780906677246
    6. 'Rot' → logprob: -11.035780906677246
    7. '-' → logprob: -11.285780906677246
    8. '   ' → logprob: -11.660780906677246
    9. '_r' → logprob: -11.785780906677246
    10. '+' → logprob: -11.910780906677246

Token 646: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.024274678900837898
    2. '-' → logprob: -3.7742745876312256
    3. '-B' → logprob: -6.899274826049805
    4. ' ' → logprob: -11.274274826049805
    5. '-W' → logprob: -13.149274826049805
    6. '+' → logprob: -13.149274826049805
    7. ')' → logprob: -13.649274826049805
    8. '   ' → logprob: -13.774274826049805
    9. '           ' → logprob: -15.274274826049805
    10. '  ' → logprob: -16.024274826049805

Token 647: ' BW' (ID: 92765)
  Prédit: 'BW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BW' → logprob: -0.0015031944494694471
    2. ' BW' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.626502990722656
    4. '(B' → logprob: -15.001502990722656
    5. 'bw' → logprob: -16.876502990722656
    6. '           ' → logprob: -17.376502990722656
    7. ' ' → logprob: -17.751502990722656
    8. '       ' → logprob: -17.876502990722656
    9. 'BH' → logprob: -17.876502990722656
    10. 'Bw' → logprob: -18.501502990722656

Token 648: '_rot' (ID: 90451)
  Prédit: '_rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rot' → logprob: -0.0010007746750488877
    2. '+' → logprob: -7.001000881195068
    3. 'rot' → logprob: -9.50100040435791
    4. ' +' → logprob: -11.75100040435791
    5. '   ' → logprob: -13.87600040435791
    6. ')+' → logprob: -14.00100040435791
    7. '_bw' → logprob: -14.00100040435791
    8. '```' → logprob: -14.12600040435791
    9. '_r' → logprob: -15.00100040435791
    10. 'Rot' → logprob: -15.50100040435791

Token 649: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5231310725212097
    2. ' +' → logprob: -0.8981310725212097
    3. '()+' → logprob: -13.023131370544434
    4. ')+' → logprob: -13.898131370544434
    5. '   ' → logprob: -14.023131370544434
    6. '           ' → logprob: -14.148131370544434
    7. ' ' → logprob: -14.648131370544434
    8. '):
' → logprob: -14.648131370544434
    9. ')' → logprob: -14.898131370544434
    10. '+
' → logprob: -15.023131370544434

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. '+' → logprob: -11.50001049041748
    3. ' ' → logprob: -14.75001049041748
    4. ' +' → logprob: -17.250011444091797
    5. '   ' → logprob: -17.875011444091797
    6. '```' → logprob: -19.125011444091797
    7. '
' → logprob: -19.375011444091797
    8. '{
' → logprob: -19.375011444091797
    9. ')' → logprob: -19.750011444091797
    10. '2' → logprob: -19.875011444091797

Token 651: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01123715192079544
    2. '):' → logprob: -4.761237144470215
    3. ':
' → logprob: -6.386237144470215
    4. ':' → logprob: -7.636237144470215
    5. '               ' → logprob: -8.511237144470215
    6. '           ' → logprob: -8.761237144470215
    7. '():
' → logprob: -10.011237144470215
    8. '):
' → logprob: -10.636237144470215
    9. '       ' → logprob: -11.511237144470215
    10. ')' → logprob: -12.636237144470215

Token 652: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00692968163639307
    2. ' if' → logprob: -5.131929874420166
    3. '```' → logprob: -7.756929874420166
    4. '       ' → logprob: -8.131929397583008
    5. 'if' → logprob: -8.881929397583008
    6. '<|end|>' → logprob: -10.256929397583008
    7. '                
' → logprob: -10.381929397583008
    8. ',' → logprob: -10.881929397583008
    9. '           ' → logprob: -11.006929397583008
    10. '              ' → logprob: -12.381929397583008

Token 653: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.35657450556755066
    2. ' if' → logprob: -1.231574535369873
    3. '                   ' → logprob: -5.106574535369873
    4. '               ' → logprob: -6.231574535369873
    5. '   ' → logprob: -10.606574058532715
    6. 'block' → logprob: -10.856574058532715
    7. '           ' → logprob: -11.856574058532715
    8. '```' → logprob: -12.731574058532715
    9. '#' → logprob: -12.981574058532715
    10. ' ' → logprob: -13.106574058532715

Token 654: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.011049824766814709
    2. 'can' → logprob: -4.511049747467041
    3. '	can' → logprob: -13.7610502243042
    4. '(can' → logprob: -14.6360502243042
    5. ' not' → logprob: -15.2610502243042
    6. '_can' → logprob: -15.7610502243042
    7. '.can' → logprob: -16.261049270629883
    8. ' could' → logprob: -16.761049270629883
    9. ' is' → logprob: -18.636049270629883
    10. '   ' → logprob: -19.011049270629883

Token 655: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -1.4140441635390744e-05
    2. '_' → logprob: -11.625014305114746
    3. ' _' → logprob: -13.125014305114746
    4. '_can' → logprob: -13.875014305114746
    5. 'place' → logprob: -14.000014305114746
    6. '_put' → logprob: -14.750014305114746
    7. '_PLACE' → logprob: -15.375014305114746
    8. '```' → logprob: -15.625014305114746
    9. '_continue' → logprob: -15.750014305114746
    10. 'Place' → logprob: -16.12501335144043

Token 656: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.250016212463379
    3. ' (' → logprob: -13.000016212463379
    4. '(
' → logprob: -14.125016212463379
    5. '(block' → logprob: -14.875016212463379
    6. '(Board' → logprob: -17.125017166137695
    7. '	board' → logprob: -18.375017166137695
    8. ')' → logprob: -18.375017166137695
    9. ' board' → logprob: -18.625017166137695
    10. '```' → logprob: -18.875017166137695

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013655527436640114
    2. '(block' → logprob: -9.375136375427246
    3. ' ,' → logprob: -10.000136375427246
    4. ',
' → logprob: -12.250136375427246
    5. ',b' → logprob: -14.375136375427246
    6. 'block' → logprob: -16.000137329101562
    7. '<Block' → logprob: -16.125137329101562
    8. ',[' → logprob: -16.375137329101562
    9. '(' → logprob: -16.375137329101562
    10. ',(' → logprob: -16.750137329101562

Token 658: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.4740876853466034
    2. 'block' → logprob: -0.9740877151489258
    3. '(block' → logprob: -11.724087715148926
    4. '	block' → logprob: -13.349087715148926
    5. ')' → logprob: -14.724087715148926
    6. ':block' → logprob: -14.974087715148926
    7. '<|end|>' → logprob: -16.09908676147461
    8. '.block' → logprob: -16.72408676147461
    9. '_block' → logprob: -16.97408676147461
    10. 'tile' → logprob: -17.22408676147461

Token 659: '_tiles' (ID: 147480)
  Prédit: '_tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.00019376569252926856
    2. 'tiles' → logprob: -8.75019359588623
    3. 'Tiles' → logprob: -10.50019359588623
    4. ',' → logprob: -13.00019359588623
    5. ')' → logprob: -13.62519359588623
    6. '_tokens' → logprob: -13.75019359588623
    7. '(block' → logprob: -14.37519359588623
    8. '   ' → logprob: -14.50019359588623
    9. 'block' → logprob: -14.50019359588623
    10. '_blocks' → logprob: -14.87519359588623

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001681405701674521
    2. ',s' → logprob: -9.125167846679688
    3. ' ,' → logprob: -9.750167846679688
    4. ',start' → logprob: -15.000167846679688
    5. ',r' → logprob: -15.750167846679688
    6. ',
' → logprob: -16.000167846679688
    7. '   ' → logprob: -16.375167846679688
    8. ',user' → logprob: -17.125167846679688
    9. ',n' → logprob: -17.250167846679688
    10. ',S' → logprob: -17.625167846679688

Token 661: ' sr' (ID: 29405)
  Prédit: 'sr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sr' → logprob: -0.00862143188714981
    2. ' sr' → logprob: -4.7586212158203125
    3. '(sr' → logprob: -12.008621215820312
    4. '_sr' → logprob: -14.508621215820312
    5. 'sc' → logprob: -16.133621215820312
    6. '                   ' → logprob: -18.133621215820312
    7. '   ' → logprob: -18.258621215820312
    8. '               ' → logprob: -18.383621215820312
    9. 's' → logprob: -18.383621215820312
    10. '           ' → logprob: -18.508621215820312

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.984787902794778e-05
    2. ' ,' → logprob: -9.250100135803223
    3. ',
' → logprob: -13.250100135803223
    4. ',s' → logprob: -13.250100135803223
    5. ',c' → logprob: -17.250099182128906
    6. '‌,' → logprob: -17.500099182128906
    7. '<|end|>' → logprob: -17.500099182128906
    8. ',

' → logprob: -18.250099182128906
    9. ',user' → logprob: -18.500099182128906
    10. '   ' → logprob: -18.750099182128906

Token 663: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.0024762547109276056
    2. ' sc' → logprob: -6.002476215362549
    3. '(sc' → logprob: -15.752476692199707
    4. '   ' → logprob: -16.62747573852539
    5. '	sc' → logprob: -16.62747573852539
    6. ' ' → logprob: -16.75247573852539
    7. '       ' → logprob: -17.25247573852539
    8. '           ' → logprob: -17.37747573852539
    9. '_sc' → logprob: -17.75247573852539
    10. '```' → logprob: -17.87747573852539

Token 664: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009892315603792667
    2. '):
' → logprob: -4.634892463684082
    3. ':' → logprob: -9.134892463684082
    4. ')' → logprob: -11.134892463684082
    5. ' ):' → logprob: -12.134892463684082
    6. '):

' → logprob: -12.884892463684082
    7. '               ' → logprob: -13.634892463684082
    8. '                   ' → logprob: -13.884892463684082
    9. '):
' → logprob: -13.884892463684082
    10. ',' → logprob: -14.259892463684082

Token 665: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003366754623129964
    2. '                    
' → logprob: -6.753366947174072
    3. 'new' → logprob: -7.628366947174072
    4. '               ' → logprob: -7.628366947174072
    5. ' new' → logprob: -7.753366947174072
    6. '                       ' → logprob: -8.878366470336914
    7. ':
' → logprob: -9.378366470336914
    8. ':' → logprob: -9.378366470336914
    9. '```' → logprob: -9.503366470336914
    10. '                  ' → logprob: -9.753366470336914

Token 666: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.08054565638303757
    2. ' new' → logprob: -2.580545663833618
    3. '                   ' → logprob: -6.830545425415039
    4. '   ' → logprob: -8.205545425415039
    5. 'placed' → logprob: -8.205545425415039
    6. ' placed' → logprob: -11.580545425415039
    7. 'temp' → logprob: -12.330545425415039
    8. 'updated' → logprob: -12.580545425415039
    9. '```' → logprob: -12.955545425415039
    10. ' ' → logprob: -13.330545425415039

Token 667: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.0001450187264708802
    2. 'board' → logprob: -9.000144958496094
    3. '_' → logprob: -11.875144958496094
    4. '```' → logprob: -13.000144958496094
    5. '_block' → logprob: -13.125144958496094
    6. '	board' → logprob: -13.250144958496094
    7. '<|end|>' → logprob: -13.250144958496094
    8. '   ' → logprob: -13.625144958496094
    9. 'Board' → logprob: -13.750144958496094
    10. '_code' → logprob: -14.625144958496094

Token 668: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868715465068817
    2. '=' → logprob: -1.136871576309204
    3. ')' → logprob: -14.511871337890625
    4. ' ' → logprob: -18.636871337890625
    5. ')=' → logprob: -18.636871337890625
    6. '=

' → logprob: -18.761871337890625
    7. ' =)' → logprob: -18.761871337890625
    8. '=create' → logprob: -19.011871337890625
    9. ' =
' → logprob: -19.136871337890625
    10. ' =
' → logprob: -19.136871337890625

Token 669: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.07888989895582199
    2. ' place' → logprob: -2.578889846801758
    3. '(place' → logprob: -15.578889846801758
    4. '.place' → logprob: -19.328889846801758
    5. '-place' → logprob: -19.328889846801758
    6. 'Place' → logprob: -19.703889846801758
    7. '   ' → logprob: -19.953889846801758
    8. '_place' → logprob: -19.953889846801758
    9. 'placement' → logprob: -20.328889846801758
    10. 'plac' → logprob: -20.328889846801758

Token 670: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.00044425477972254157
    2. '(board' → logprob: -8.250444412231445
    3. 'block' → logprob: -9.250444412231445
    4. '_board' → logprob: -10.000444412231445
    5. '(block' → logprob: -10.125444412231445
    6. '(' → logprob: -14.875444412231445
    7. '_' → logprob: -14.875444412231445
    8. '_BLOCK' → logprob: -15.750444412231445
    9. 'board' → logprob: -16.250444412231445
    10. '```' → logprob: -16.250444412231445

Token 671: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.875007629394531
    3. '(block' → logprob: -14.125007629394531
    4. '(
' → logprob: -15.750007629394531
    5. '(Board' → logprob: -16.12500762939453
    6. '```' → logprob: -17.12500762939453
    7. 'board' → logprob: -17.62500762939453
    8. '	board' → logprob: -18.00000762939453
    9. ' (' → logprob: -18.12500762939453
    10. '(bank' → logprob: -18.62500762939453

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005779353086836636
    2. '(block' → logprob: -7.500577926635742
    3. ' ,' → logprob: -11.375577926635742
    4. '<|end|>' → logprob: -11.750577926635742
    5. ',
' → logprob: -13.375577926635742
    6. ',b' → logprob: -13.500577926635742
    7. ')' → logprob: -14.625577926635742
    8. 'block' → logprob: -14.625577926635742
    9. ':block' → logprob: -14.875577926635742
    10. '(' → logprob: -15.125577926635742

Token 673: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.03804183006286621
    2. ' block' → logprob: -3.288041830062866
    3. '(block' → logprob: -15.288042068481445
    4. '                   ' → logprob: -16.163042068481445
    5. '	block' → logprob: -17.163042068481445
    6. ':block' → logprob: -17.663042068481445
    7. 'tile' → logprob: -18.913042068481445
    8. '                    ' → logprob: -19.163042068481445
    9. '.block' → logprob: -19.288042068481445
    10. 'blocks' → logprob: -19.288042068481445

Token 674: '_tiles' (ID: 147480)
  Prédit: '_tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.00020127551397308707
    2. 'tiles' → logprob: -8.875201225280762
    3. ',' → logprob: -10.000201225280762
    4. '_tokens' → logprob: -11.625201225280762
    5. 'Tiles' → logprob: -12.750201225280762
    6. 'block' → logprob: -13.625201225280762
    7. '_blocks' → logprob: -13.875201225280762
    8. '   ' → logprob: -14.500201225280762
    9. ' tiles' → logprob: -15.000201225280762
    10. '```' → logprob: -15.125201225280762

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048238897579722106
    2. ',s' → logprob: -8.000482559204102
    3. ' ,' → logprob: -9.000482559204102
    4. ',r' → logprob: -10.875482559204102
    5. '(sr' → logprob: -13.375482559204102
    6. ',new' → logprob: -14.500482559204102
    7. ',n' → logprob: -14.625482559204102
    8. '   ' → logprob: -14.750482559204102
    9. '                   ' → logprob: -14.875482559204102
    10. ',S' → logprob: -15.625482559204102

Token 676: ' sr' (ID: 29405)
  Prédit: 'sr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sr' → logprob: -0.0015087933279573917
    2. ' sr' → logprob: -6.501508712768555
    3. '(sr' → logprob: -12.001508712768555
    4. '_sr' → logprob: -15.251508712768555
    5. 'SR' → logprob: -17.626508712768555
    6. '                   ' → logprob: -18.001508712768555
    7. '                           ' → logprob: -18.501508712768555
    8. 'sc' → logprob: -18.751508712768555
    9. '                               ' → logprob: -19.501508712768555
    10. 's' → logprob: -19.751508712768555

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',s' → logprob: -14.625036239624023
    4. '```' → logprob: -16.250036239624023
    5. '   ' → logprob: -16.500036239624023
    6. '+' → logprob: -17.125036239624023
    7. ',c' → logprob: -17.375036239624023
    8. ',
' → logprob: -17.375036239624023
    9. '           ' → logprob: -17.625036239624023
    10. '[' → logprob: -17.750036239624023

Token 678: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.0011703446507453918
    2. ' sc' → logprob: -6.7511701583862305
    3. '(sc' → logprob: -16.501171112060547
    4. '	sc' → logprob: -17.376171112060547
    5. '_sc' → logprob: -18.376171112060547
    6. '       ' → logprob: -19.001171112060547
    7. '=sc' → logprob: -19.376171112060547
    8. '           ' → logprob: -19.501171112060547
    9. 'Sc' → logprob: -19.751171112060547
    10. 'scp' → logprob: -19.751171112060547

Token 679: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008144784718751907
    2. ')' → logprob: -5.008144855499268
    3. '               ' → logprob: -7.508144855499268
    4. '
' → logprob: -8.13314437866211
    5. ')
' → logprob: -8.63314437866211
    6. ',' → logprob: -9.00814437866211
    7. '                    
' → logprob: -9.25814437866211
    8. '           ' → logprob: -9.88314437866211
    9. '                  ' → logprob: -10.75814437866211
    10. '),' → logprob: -10.75814437866211

Token 680: '                   ' (ID: 699)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.09073996543884277
    2. '                   ' → logprob: -2.8407399654388428
    3. ' score' → logprob: -4.215740203857422
    4. 'count' → logprob: -5.215740203857422
    5. ' lines' → logprob: -5.590740203857422
    6. '```' → logprob: -6.215740203857422
    7. 'lines' → logprob: -6.590740203857422
    8. 'full' → logprob: -8.590740203857422
    9. '
' → logprob: -8.590740203857422
    10. 'scores' → logprob: -8.965740203857422

Token 681: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.002144908532500267
    2. 'lines' → logprob: -6.252144813537598
    3. 'full' → logprob: -9.002144813537598
    4. 'max' → logprob: -9.752144813537598
    5. ' score' → logprob: -10.877144813537598
    6. 'current' → logprob: -12.377144813537598
    7. 'line' → logprob: -12.627144813537598
    8. 'count' → logprob: -13.377144813537598
    9. 'sc' → logprob: -13.502144813537598
    10. 'points' → logprob: -14.002144813537598

Token 682: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326377391815186
    2. ' =' → logprob: -1.3132637739181519
    3. '=count' → logprob: -13.938263893127441
    4. '_' → logprob: -14.938263893127441
    5. ' +=' → logprob: -15.063263893127441
    6. '+=' → logprob: -15.563263893127441
    7. ')' → logprob: -15.938263893127441
    8. '_=' → logprob: -16.188262939453125
    9. '＝' → logprob: -16.938262939453125
    10. 's' → logprob: -17.313262939453125

Token 683: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0002613358374219388
    2. ' count' → logprob: -8.250261306762695
    3. 'max' → logprob: -17.500261306762695
    4. '(count' → logprob: -21.375261306762695
    5. '[count' → logprob: -22.250261306762695
    6. '=count' → logprob: -22.875261306762695
    7. 'score' → logprob: -23.625261306762695
    8. '	count' → logprob: -23.625261306762695
    9. '.count' → logprob: -23.875261306762695
    10. ' max' → logprob: -24.250261306762695

Token 684: '_full' (ID: 36973)
  Prédit: '_full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_full' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.875004768371582
    3. 'full' → logprob: -13.250004768371582
    4. '_new' → logprob: -15.250004768371582
    5. 'Full' → logprob: -15.875004768371582
    6. '(full' → logprob: -15.875004768371582
    7. '_f' → logprob: -16.8750057220459
    8. '_complete' → logprob: -17.1250057220459
    9. '_FULL' → logprob: -17.3750057220459
    10. '```' → logprob: -17.8750057220459

Token 685: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.000700045726262033
    2. '_full' → logprob: -7.375699996948242
    3. 'lines' → logprob: -10.250699996948242
    4. '_new' → logprob: -11.250699996948242
    5. '_rows' → logprob: -11.375699996948242
    6. 'full' → logprob: -12.625699996948242
    7. 'new' → logprob: -12.625699996948242
    8. '_' → logprob: -13.375699996948242
    9. '_line' → logprob: -13.625699996948242
    10. '(lines' → logprob: -13.625699996948242

Token 686: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'new' → logprob: -17.375001907348633
    4. '(
' → logprob: -18.000001907348633
    5. ' (' → logprob: -19.875001907348633
    6. ')new' → logprob: -20.125001907348633
    7. '[new' → logprob: -20.375001907348633
    8. ' new' → logprob: -20.500001907348633
    9. ',new' → logprob: -21.125001907348633
    10. '(New' → logprob: -21.375001907348633

Token 687: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.00033522743615321815
    2. '_lines' → logprob: -8.625335693359375
    3. 'board' → logprob: -9.125335693359375
    4. 'new' → logprob: -10.375335693359375
    5. '(new' → logprob: -11.500335693359375
    6. '_block' → logprob: -12.875335693359375
    7. '(board' → logprob: -14.750335693359375
    8. '_bo' → logprob: -14.750335693359375
    9. '[new' → logprob: -14.750335693359375
    10. 'Board' → logprob: -15.375335693359375

Token 688: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2664487063884735
    2. '                   ' → logprob: -2.641448736190796
    3. '   ' → logprob: -3.391448736190796
    4. ')
' → logprob: -3.641448736190796
    5. ' +' → logprob: -3.641448736190796
    6. '+' → logprob: -3.641448736190796
    7. '
' → logprob: -4.016448497772217
    8. '<|end|>' → logprob: -4.266448497772217
    9. '()' → logprob: -5.266448497772217
    10. '()
' → logprob: -5.641448497772217

Token 689: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00035250463406555355
    2. '                    
' → logprob: -9.00035285949707
    3. '               ' → logprob: -9.50035285949707
    4. '                    ' → logprob: -10.62535285949707
    5. '
' → logprob: -10.62535285949707
    6. '           ' → logprob: -11.00035285949707
    7. '       ' → logprob: -11.00035285949707
    8. '                       ' → logprob: -11.37535285949707
    9. ' if' → logprob: -11.50035285949707
    10. '                  ' → logprob: -11.75035285949707

Token 690: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04206639900803566
    2. ' if' → logprob: -3.2920663356781006
    3. '                   ' → logprob: -5.54206657409668
    4. 'max' → logprob: -9.29206657409668
    5. '                       ' → logprob: -12.79206657409668
    6. '                           ' → logprob: -14.16706657409668
    7. '               ' → logprob: -14.16706657409668
    8. '           ' → logprob: -14.29206657409668
    9. ' max' → logprob: -14.29206657409668
    10. '                    ' → logprob: -15.04206657409668

Token 691: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.10020678490400314
    2. 'score' → logprob: -2.3502068519592285
    3. '(score' → logprob: -16.60020637512207
    4. '	score' → logprob: -16.85020637512207
    5. '                       ' → logprob: -19.10020637512207
    6. '_score' → logprob: -20.72520637512207
    7. '                   ' → logprob: -21.10020637512207
    8. ' ' → logprob: -21.72520637512207
    9. '.score' → logprob: -21.72520637512207
    10. 'Score' → logprob: -22.35020637512207

Token 692: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759447813034058
    2. ' >' → logprob: -0.8259447813034058
    3. '   ' → logprob: -13.200944900512695
    4. ' ' → logprob: -13.700944900512695
    5. '>
' → logprob: -14.450944900512695
    6. ' >
' → logprob: -14.825944900512695
    7. '<|end|>' → logprob: -15.450944900512695
    8. '```' → logprob: -15.700944900512695
    9. '=' → logprob: -15.950944900512695
    10. '">' → logprob: -15.950944900512695

Token 693: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.676292231422849e-05
    2. ' max' → logprob: -11.000017166137695
    3. '                   ' → logprob: -19.875017166137695
    4. '	max' → logprob: -21.000017166137695
    5. '_max' → logprob: -21.500017166137695
    6. '(max' → logprob: -21.875017166137695
    7. '
' → logprob: -22.000017166137695
    8. '=max' → logprob: -22.125017166137695
    9. '                       ' → logprob: -23.625017166137695
    10. '[max' → logprob: -24.000017166137695

Token 694: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -6.749814019713085e-06
    2. 'score' → logprob: -12.875006675720215
    3. '_s' → logprob: -13.125006675720215
    4. '_max' → logprob: -14.000006675720215
    5. '_' → logprob: -14.125006675720215
    6. '_sc' → logprob: -15.625006675720215
    7. '_code' → logprob: -16.75000762939453
    8. 'max' → logprob: -16.87500762939453
    9. ' _' → logprob: -17.37500762939453
    10. '_scores' → logprob: -17.75000762939453

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4264231026172638
    2. ':
' → logprob: -1.3014230728149414
    3. '                       ' → logprob: -2.6764230728149414
    4. '                   ' → logprob: -5.301423072814941
    5. '       ' → logprob: -7.801423072814941
    6. '                           ' → logprob: -8.551423072814941
    7. '               ' → logprob: -8.676423072814941
    8. '           ' → logprob: -9.176423072814941
    9. '):
' → logprob: -9.176423072814941
    10. ':max' → logprob: -10.051423072814941

Token 696: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0024190605618059635
    2. '                   ' → logprob: -6.2524189949035645
    3. ' max' → logprob: -8.252419471740723
    4. 'max' → logprob: -9.252419471740723
    5. '                           ' → logprob: -10.252419471740723
    6. '
' → logprob: -10.627419471740723
    7. '```' → logprob: -10.627419471740723
    8. '                        
' → logprob: -11.627419471740723
    9. '               ' → logprob: -11.752419471740723
    10. '(max' → logprob: -12.002419471740723

Token 697: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.39446380734443665
    2. ' max' → logprob: -1.1444637775421143
    3. '                       ' → logprob: -4.894464015960693
    4. '                           ' → logprob: -10.144463539123535
    5. '```' → logprob: -10.644463539123535
    6. '                   ' → logprob: -12.394463539123535
    7. '           ' → logprob: -13.394463539123535
    8. '(max' → logprob: -13.519463539123535
    9. '   ' → logprob: -13.519463539123535
    10. '               ' → logprob: -14.269463539123535

Token 698: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.1398757123970427e-05
    2. 'score' → logprob: -12.375011444091797
    3. '_code' → logprob: -12.875011444091797
    4. '_scores' → logprob: -13.375011444091797
    5. '_s' → logprob: -13.625011444091797
    6. '```' → logprob: -14.250011444091797
    7. '_SCORE' → logprob: -15.625011444091797
    8. '_' → logprob: -15.625011444091797
    9. '_max' → logprob: -15.750011444091797
    10. 'Score' → logprob: -15.875011444091797

Token 699: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193288922309875
    2. '=' → logprob: -1.5019328594207764
    3. '=max' → logprob: -13.251933097839355
    4. '<|end|>' → logprob: -14.376933097839355
    5. ' =
' → logprob: -15.251933097839355
    6. '=s' → logprob: -15.376933097839355
    7. '=
' → logprob: -15.626933097839355
    8. '=create' → logprob: -16.00193214416504
    9. '＝' → logprob: -16.12693214416504
    10. ' ' → logprob: -16.12693214416504

Token 700: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.005233763717114925
    2. ' score' → logprob: -5.2552337646484375
    3. '	score' → logprob: -20.380233764648438
    4. '(score' → logprob: -20.630233764648438
    5. '_score' → logprob: -21.255233764648438
    6. '
' → logprob: -21.880233764648438
    7. '                       ' → logprob: -22.880233764648438
    8. 'Score' → logprob: -23.630233764648438
    9. 'code' → logprob: -23.630233764648438
    10. '                   ' → logprob: -23.880233764648438

Token 701: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 702: '   ' (ID: 271)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7008817791938782
    2. '<|end|>' → logprob: -1.0758817195892334
    3. '```' → logprob: -2.8258817195892334
    4. '                        
' → logprob: -3.2008817195892334
    5. 'print' → logprob: -4.2008819580078125
    6. '                        ' → logprob: -4.5758819580078125
    7. '                   ' → logprob: -5.0758819580078125
    8. '                           ' → logprob: -5.9508819580078125
    9. '
' → logprob: -5.9508819580078125
    10. '#' → logprob: -6.0758819580078125

Token 703: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0020013193134218454
    2. '
' → logprob: -6.2520012855529785
    3. ' print' → logprob: -9.752001762390137
    4. '```' → logprob: -11.377001762390137
    5. 'if' → logprob: -13.377001762390137
    6. '
' → logprob: -15.002001762390137
    7. '\n' → logprob: -15.002001762390137
    8. '    
' → logprob: -15.252001762390137
    9. '  
' → logprob: -15.627001762390137
    10. ' 
' → logprob: -16.12700080871582

Token 704: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -3.650518920039758e-06
    2. 'max' → logprob: -12.750003814697266
    3. '(' → logprob: -14.250003814697266
    4. ' max' → logprob: -19.250003814697266
    5. '(min' → logprob: -19.875003814697266
    6. '(m' → logprob: -19.875003814697266
    7. '=max' → logprob: -20.625003814697266
    8. ' (' → logprob: -21.250003814697266
    9. ',max' → logprob: -21.375003814697266
    10. '()' → logprob: -21.500003814697266

Token 705: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.5928495486150496e-05
    2. 'score' → logprob: -11.500016212463379
    3. 'Score' → logprob: -12.375016212463379
    4. ')' → logprob: -15.000016212463379
    5. '_scores' → logprob: -15.000016212463379
    6. '_size' → logprob: -15.875016212463379
    7. '(score' → logprob: -15.875016212463379
    8. '_max' → logprob: -16.375015258789062
    9. '_SCORE' → logprob: -16.375015258789062
    10. 'max' → logprob: -16.500015258789062

Token 706: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '())' → logprob: -13.500004768371582
    3. '()' → logprob: -13.625004768371582
    4. ' )' → logprob: -14.000004768371582
    5. ' if' → logprob: -14.875004768371582
    6. ')
' → logprob: -15.000004768371582
    7. ')`' → logprob: -15.250004768371582
    8. '')' → logprob: -16.0000057220459
    9. '))' → logprob: -16.5000057220459
    10. '`)' → logprob: -16.5000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 704
Tokens correctement prédits (1ère position, stricte): 327
Tokens correctement prédits (1ère position, avec adaptation): 358
Tokens correctement prédits (top 10): 644
Précision stricte (1ère position): 46.45%
Précision adaptée (1ère position): 50.85%
Précision (top 10): 91.48%
================================================================================
