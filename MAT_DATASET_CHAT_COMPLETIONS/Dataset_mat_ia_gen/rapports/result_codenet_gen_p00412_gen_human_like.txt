================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def main():
    input = sys.stdin.readline
    N, M = map(int, input().split())
    lanes = [deque() for _ in range(N)]

    for _ in range(M):
        info = input().split()
        t = int(info[0])

        if t == 1:
            car = int(info[1])
            # Trouver la file avec le moins de voitures
            min_len = min(len(lane) for lane in lanes)
            for i in range(N):
                if len(lanes[i]) == min_len:
                    lanes[i].append(car)
                    break
        else:
            lane_num = int(info[1]) - 1
            # Retirer la voiture en tête et afficher son numéro
            finished_car = lanes[lane_num].popleft()
            print(finished_car)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6760729551315308
    2. 'import' → logprob: -0.8010729551315308
    3. '.' → logprob: -3.1760730743408203
    4. ' ' → logprob: -8.67607307434082
    5. '.import' → logprob: -8.92607307434082
    6. '```' → logprob: -9.05107307434082
    7. '_' → logprob: -9.17607307434082
    8. '<|end|>' → logprob: -9.17607307434082
    9. '_import' → logprob: -10.05107307434082
    10. '	import' → logprob: -10.05107307434082

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.28958559036254883
    2. ' deque' → logprob: -1.6645855903625488
    3. ' abc' → logprob: -3.039585590362549
    4. 'deque' → logprob: -4.539585590362549
    5. 'abc' → logprob: -6.414585590362549
    6. ' Counter' → logprob: -6.914585590362549
    7. ' named' → logprob: -7.289585590362549
    8. ' Ordered' → logprob: -9.91458511352539
    9. 'default' → logprob: -10.03958511352539
    10. ' import' → logprob: -10.03958511352539

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9681236147880554
    2. '

' → logprob: -1.4681236743927002
    3. 'import' → logprob: -1.7181236743927002
    4. '
' → logprob: -2.0931236743927
    5. '```' → logprob: -3.4681236743927
    6. '\' → logprob: -3.8431236743927
    7. '<|end|>' → logprob: -3.8431236743927
    8. 'newline' → logprob: -5.593123435974121
    9. '<|end|>' → logprob: -5.968123435974121
    10. '' → logprob: -6.218123435974121

Token 8: 'def' (ID: 1314)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.5165592432022095
    2. 'd' → logprob: -1.6415592432022095
    3. '```' → logprob: -1.8915592432022095
    4. 'def' → logprob: -2.26655912399292
    5. '`' → logprob: -2.39155912399292
    6. 'import' → logprob: -2.89155912399292
    7. '\n' → logprob: -3.01655912399292
    8. '.' → logprob: -4.01655912399292
    9. 'a' → logprob: -4.39155912399292
    10. ',' → logprob: -4.51655912399292

Token 9: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04748743772506714
    2. ' bfs' → logprob: -3.172487497329712
    3. ' process' → logprob: -6.422487258911133
    4. ' breadth' → logprob: -7.797487258911133
    5. ' BFS' → logprob: -7.797487258911133
    6. ' dfs' → logprob: -8.172487258911133
    7. ' space' → logprob: -8.172487258911133
    8. ' main' → logprob: -8.422487258911133
    9. ' ' → logprob: -9.047487258911133
    10. ' deque' → logprob: -9.422487258911133

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007344625773839653
    2. '():' → logprob: -7.875734329223633
    3. ':' → logprob: -8.750734329223633
    4. ' (' → logprob: -9.500734329223633
    5. '(:' → logprob: -9.500734329223633
    6. '("("' → logprob: -12.000734329223633
    7. '(
' → logprob: -12.125734329223633
    8. '):' → logprob: -12.375734329223633
    9. '(`' → logprob: -12.625734329223633
    10. ')' → logprob: -12.625734329223633

Token 11: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9481287002563477
    2. '   ' → logprob: -1.1981287002563477
    3. '(' → logprob: -2.3231287002563477
    4. ' ' → logprob: -2.3231287002563477
    5. '\' → logprob: -3.0731287002563477
    6. '[' → logprob: -4.198128700256348
    7. '```' → logprob: -4.698128700256348
    8. '    
' → logprob: -4.948128700256348
    9. '     
' → logprob: -5.198128700256348
    10. ' 
' → logprob: -5.323128700256348

Token 12: ' input' (ID: 3422)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -1.144724726676941
    2. ' ' → logprob: -1.644724726676941
    3. ' n' → logprob: -1.769724726676941
    4. 'n' → logprob: -2.3947248458862305
    5. ' input' → logprob: -3.0197248458862305
    6. 'queue' → logprob: -3.1447248458862305
    7. ' q' → logprob: -3.8947248458862305
    8. 'input' (adapté à ' input') → logprob: -4.1447248458862305
    9. ' stack' → logprob: -4.3947248458862305
    10. '   ' → logprob: -4.6447248458862305

Token 13: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.122200146317482
    2. '()' → logprob: -2.6222002506256104
    3. '_data' → logprob: -4.497200012207031
    4. '_' → logprob: -4.622200012207031
    5. '_line' → logprob: -4.747200012207031
    6. ' =' → logprob: -5.372200012207031
    7. '=' → logprob: -5.497200012207031
    8. '('' → logprob: -7.872200012207031
    9. '.' → logprob: -7.872200012207031
    10. '_str' → logprob: -7.997200012207031

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0032063538674265146
    2. 'sys' → logprob: -5.753206253051758
    3. ' input' → logprob: -10.878206253051758
    4. 'input' → logprob: -12.753206253051758
    5. ' ' → logprob: -13.253206253051758
    6. '(sys' → logprob: -13.503206253051758
    7. '	sys' → logprob: -13.628206253051758
    8. ' deque' → logprob: -13.753206253051758
    9. 'deque' → logprob: -14.253206253051758
    10. '=sys' → logprob: -14.503206253051758

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07143448293209076
    2. '.' → logprob: -2.696434497833252
    3. '.readline' → logprob: -7.321434497833252
    4. ' .' → logprob: -7.696434497833252
    5. '.stdout' → logprob: -8.446434020996094
    6. '.argv' → logprob: -9.321434020996094
    7. '.std' → logprob: -10.321434020996094
    8. '.input' → logprob: -11.321434020996094
    9. '.setdefault' → logprob: -11.821434020996094
    10. '.exit' → logprob: -11.821434020996094

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0020794784650206566
    2. '.read' → logprob: -6.252079486846924
    3. '.' → logprob: -8.877079010009766
    4. '.readlines' → logprob: -12.002079010009766
    5. '.buffer' → logprob: -13.002079010009766
    6. 'read' → logprob: -13.002079010009766
    7. ' .' → logprob: -15.127079010009766
    8. '.stdin' → logprob: -15.877079010009766
    9. ' readline' → logprob: -16.002079010009766
    10. '.Read' → logprob: -16.252079010009766

Token 17: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002257071901112795
    2. '()
' → logprob: -6.877256870269775
    3. '().' → logprob: -7.252256870269775
    4. '(' → logprob: -7.877256870269775
    5. '()\' → logprob: -9.752257347106934
    6. ' ()' → logprob: -11.002257347106934
    7. '(
' → logprob: -11.502257347106934
    8. '   ' → logprob: -11.502257347106934
    9. '
' → logprob: -11.877257347106934
    10. '()

' → logprob: -11.877257347106934

Token 18: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0928734615445137
    2. '   ' → logprob: -3.0928735733032227
    3. '(' → logprob: -3.3428735733032227
    4. '()
' → logprob: -5.467873573303223
    5. '    
' → logprob: -6.467873573303223
    6. '(
' → logprob: -6.967873573303223
    7. '()\' → logprob: -7.967873573303223
    8. ' ()' → logprob: -8.842873573303223
    9. '()

' → logprob: -8.967873573303223
    10. '
' → logprob: -8.967873573303223

Token 19: ' N' (ID: 478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6561010479927063
    2. '()' → logprob: -0.9061010479927063
    3. '   ' → logprob: -3.2811009883880615
    4. 'data' → logprob: -3.5311009883880615
    5. 'n' → logprob: -6.406101226806641
    6. '(
' → logprob: -6.656101226806641
    7. 's' → logprob: -7.031101226806641
    8. 'for' → logprob: -7.156101226806641
    9. 'queue' → logprob: -7.406101226806641
    10. 'stack' → logprob: -7.531101226806641

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06763260066509247
    2. ' ' → logprob: -2.9426326751708984
    3. '=' → logprob: -4.692632675170898
    4. ',' → logprob: -6.192632675170898
    5. ' ,' → logprob: -7.442632675170898
    6. '  ' → logprob: -8.942632675170898
    7. '    ' → logprob: -9.067632675170898
    8. ')' → logprob: -9.192632675170898
    9. ' >' → logprob: -9.317632675170898
    10. '<|end|>' → logprob: -9.317632675170898

Token 21: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4212268888950348
    2. ' M' → logprob: -1.6712268590927124
    3. 'K' → logprob: -2.296226978302002
    4. 'M' → logprob: -3.171226978302002
    5. 'Q' → logprob: -5.296226978302002
    6. ' Q' → logprob: -5.546226978302002
    7. ' ' → logprob: -6.171226978302002
    8. 'input' → logprob: -7.296226978302002
    9. ' input' → logprob: -7.546226978302002
    10. 'space' → logprob: -8.546226501464844

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03366425633430481
    2. '=' → logprob: -3.4086642265319824
    3. ',' → logprob: -11.53366470336914
    4. ' ' → logprob: -11.78366470336914
    5. ')' → logprob: -15.40866470336914
    6. '=line' → logprob: -16.03366470336914
    7. '=int' → logprob: -16.15866470336914
    8. ' ,' → logprob: -16.15866470336914
    9. ' =
' → logprob: -16.15866470336914
    10. '```' → logprob: -16.28366470336914

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00023774817236699164
    2. 'map' → logprob: -8.375237464904785
    3. ' input' → logprob: -12.000237464904785
    4. ' ' → logprob: -14.375237464904785
    5. ' list' → logprob: -15.125237464904785
    6. '	map' → logprob: -17.3752384185791
    7. 'input' → logprob: -17.5002384185791
    8. ' tuple' → logprob: -17.8752384185791
    9. '  ' → logprob: -18.6252384185791
    10. ' ' → logprob: -18.6252384185791

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16285958886146545
    2. '(int' → logprob: -2.4128596782684326
    3. '(str' → logprob: -3.2878596782684326
    4. '(input' → logprob: -4.2878594398498535
    5. '(lambda' → logprob: -4.6628594398498535
    6. '(
' → logprob: -9.662859916687012
    7. '(list' → logprob: -9.787859916687012
    8. '(eval' → logprob: -10.287859916687012
    9. '(tuple' → logprob: -11.787859916687012
    10. '(len' → logprob: -11.912859916687012

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07444857805967331
    2. ',input' → logprob: -2.824448585510254
    3. '(input' → logprob: -4.699448585510254
    4. '(' → logprob: -6.074448585510254
    5. 'input' → logprob: -7.574448585510254
    6. '(sys' → logprob: -8.699448585510254
    7. ' ,' → logprob: -8.699448585510254
    8. ')' → logprob: -9.574448585510254
    9. ',int' → logprob: -10.949448585510254
    10. ' (' → logprob: -11.324448585510254

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07903123646974564
    2. 'input' → logprob: -2.579031229019165
    3. ' sys' → logprob: -8.954030990600586
    4. 'sys' → logprob: -12.204030990600586
    5. ' ' → logprob: -12.829030990600586
    6. ')' → logprob: -12.954030990600586
    7. ' )' → logprob: -14.454030990600586
    8. ' str' → logprob: -14.829030990600586
    9. ',input' → logprob: -15.079030990600586
    10. 'str' → logprob: -15.579030990600586

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.558399319241289e-05
    2. '()' → logprob: -10.625025749206543
    3. '())' → logprob: -14.375025749206543
    4. ' ().' → logprob: -14.375025749206543
    5. '(' → logprob: -17.000024795532227
    6. '()))' → logprob: -17.375024795532227
    7. '()
' → logprob: -18.375024795532227
    8. ')' → logprob: -18.750024795532227
    9. '()[' → logprob: -19.000024795532227
    10. '()),' → logprob: -20.000024795532227

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.027258025482296944
    2. 'strip' → logprob: -3.7772579193115234
    3. 'rstrip' → logprob: -5.527257919311523
    4. ')' → logprob: -11.027257919311523
    5. '(split' → logprob: -12.402257919311523
    6. '())' → logprob: -13.152257919311523
    7. 'read' → logprob: -13.152257919311523
    8. ' split' → logprob: -13.902257919311523
    9. '()' → logprob: -14.152257919311523
    10. '().' → logprob: -14.152257919311523

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032995089422911406
    2. '))' → logprob: -5.753299713134766
    3. '()' → logprob: -9.753299713134766
    4. '())' → logprob: -9.753299713134766
    5. '(' → logprob: -12.878299713134766
    6. '),' → logprob: -14.378299713134766
    7. ')`' → logprob: -14.378299713134766
    8. '`)' → logprob: -14.753299713134766
    9. ')))' → logprob: -14.753299713134766
    10. ' )' → logprob: -15.378299713134766

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4152781963348389
    2. '   ' → logprob: -1.4152781963348389
    3. ')' → logprob: -1.6652781963348389
    4. '\n' → logprob: -2.165278196334839
    5. ' 
' → logprob: -2.790278196334839
    6. '    
' → logprob: -3.540278196334839
    7. '\' → logprob: -3.790278196334839
    8. ' ' → logprob: -3.915278196334839
    9. '  
' → logprob: -4.415278434753418
    10. '' → logprob: -4.540278434753418

Token 31: ' lanes' (ID: 72055)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.3614025115966797
    2. ')' → logprob: -1.6114025115966797
    3. ' ' → logprob: -1.6114025115966797
    4. 'd' → logprob: -2.4864025115966797
    5. ' graph' → logprob: -2.7364025115966797
    6. ' 
' → logprob: -2.7364025115966797
    7. '[' → logprob: -3.4864025115966797
    8. 'a' → logprob: -3.9864025115966797
    9. '
' → logprob: -4.36140251159668
    10. 'n' → logprob: -4.36140251159668

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004977574571967125
    2. '=' → logprob: -5.379977703094482
    3. '[' → logprob: -8.879977226257324
    4. '_' → logprob: -8.879977226257324
    5. ' ' → logprob: -11.004977226257324
    6. '[]' → logprob: -11.129977226257324
    7. '[:]' → logprob: -11.379977226257324
    8. '_queue' → logprob: -12.129977226257324
    9. '   ' → logprob: -12.129977226257324
    10. 's' → logprob: -12.754977226257324

Token 33: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5012602806091309
    2. ' []' → logprob: -1.2512602806091309
    3. '[]' → logprob: -3.626260280609131
    4. '[' → logprob: -3.626260280609131
    5. ' [[]' → logprob: -3.751260280609131
    6. ' deque' → logprob: -4.001260280609131
    7. 'deque' → logprob: -4.501260280609131
    8. ' [[' → logprob: -6.876260280609131
    9. ' ' → logprob: -8.626260757446289
    10. ' list' → logprob: -8.876260757446289

Token 34: 'deque' (ID: 143563)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0246950387954712
    2. '[]' → logprob: -1.1496950387954712
    3. 'deque' → logprob: -1.1496950387954712
    4. '0' → logprob: -5.899694919586182
    5. 'input' → logprob: -6.774694919586182
    6. ' deque' → logprob: -7.274694919586182
    7. ' []' → logprob: -7.524694919586182
    8. 'int' → logprob: -7.649694919586182
    9. ' list' → logprob: -8.02469539642334
    10. 'de' → logprob: -8.14969539642334

Token 35: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5767119526863098
    2. '()]' → logprob: -0.8267119526863098
    3. '(' → logprob: -7.326712131500244
    4. '([]' → logprob: -9.326711654663086
    5. '(range' → logprob: -12.201711654663086
    6. '([' → logprob: -12.576711654663086
    7. '(),' → logprob: -13.076711654663086
    8. '()
' → logprob: -13.076711654663086
    9. '()]
' → logprob: -13.326711654663086
    10. '()}' → logprob: -13.451711654663086

Token 36: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1928166002035141
    2. ' for' → logprob: -2.0678164958953857
    3. ']' → logprob: -3.4428164958953857
    4. '()' → logprob: -5.067816734313965
    5. ')]' → logprob: -5.192816734313965
    6. 'for' → logprob: -5.442816734313965
    7. '()]' → logprob: -8.067816734313965
    8. '(' → logprob: -8.567816734313965
    9. ' )' → logprob: -10.067816734313965
    10. ',' → logprob: -10.192816734313965

Token 37: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.14577192068099976
    2. '_' → logprob: -2.2707719802856445
    3. ' range' → logprob: -3.5207719802856445
    4. ' ' → logprob: -7.0207719802856445
    5. 'range' → logprob: -7.3957719802856445
    6. '_range' → logprob: -7.5207719802856445
    7. ' i' → logprob: -7.7707719802856445
    8. '(range' → logprob: -9.145771980285645
    9. ' in' → logprob: -9.270771980285645
    10. '(' → logprob: -9.520771980285645

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006797082256525755
    2. 'in' → logprob: -5.0067973136901855
    3. '(' → logprob: -10.631796836853027
    4. ' ' → logprob: -10.631796836853027
    5. 'range' → logprob: -10.631796836853027
    6. '(range' → logprob: -13.756796836853027
    7. '0' → logprob: -14.006796836853027
    8. ' range' → logprob: -14.256796836853027
    9. 'i' → logprob: -14.256796836853027
    10. '	in' → logprob: -14.506796836853027

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380479171872139
    2. ' range' → logprob: -3.288048028945923
    3. ' ' → logprob: -12.663047790527344
    4. '(range' → logprob: -13.913047790527344
    5. '   ' → logprob: -14.038047790527344
    6. '	range' → logprob: -14.163047790527344
    7. 'rang' → logprob: -15.288047790527344
    8. '  ' → logprob: -15.413047790527344
    9. 'ran' → logprob: -15.913047790527344
    10. ')' → logprob: -16.413047790527344

Token 40: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00038837024476379156
    2. '(' → logprob: -8.000388145446777
    3. '(M' → logprob: -9.875388145446777
    4. '(n' → logprob: -14.500388145446777
    5. ' (' → logprob: -15.250388145446777
    6. '((' → logprob: -16.125389099121094
    7. '(int' → logprob: -16.375389099121094
    8. ')' → logprob: -16.500389099121094
    9. ')(' → logprob: -16.875389099121094
    10. '(A' → logprob: -16.875389099121094

Token 41: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011415231710998341
    2. ']' → logprob: -9.375114440917969
    3. ')' → logprob: -10.750114440917969
    4. '])]' → logprob: -12.875114440917969
    5. ')]
' → logprob: -13.500114440917969
    6. ')])' → logprob: -13.750114440917969
    7. '')]' → logprob: -14.375114440917969
    8. '   ' → logprob: -14.750114440917969
    9. ' )' → logprob: -14.750114440917969
    10. '))' → logprob: -15.375114440917969

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.251800000667572
    2. 'for' → logprob: -2.626800060272217
    3. '
' → logprob: -3.001800060272217
    4. '    
' → logprob: -3.626800060272217
    5. ' ' → logprob: -4.126800060272217
    6. '<|end|>' → logprob: -4.126800060272217
    7. ' for' → logprob: -4.501800060272217
    8. ')' → logprob: -5.251800060272217
    9. ' 
' → logprob: -5.251800060272217
    10. '  
' → logprob: -5.376800060272217

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005077921785414219
    2. ' for' → logprob: -5.380077838897705
    3. '   ' → logprob: -7.755077838897705
    4. ' ' → logprob: -12.005078315734863
    5. '	for' → logprob: -12.130078315734863
    6. '<|end|>' → logprob: -12.380078315734863
    7. ')' → logprob: -12.755078315734863
    8. '#' → logprob: -12.755078315734863
    9. '    ' → logprob: -13.505078315734863
    10. '```' → logprob: -13.880078315734863

Token 44: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.019292082637548447
    2. ' i' → logprob: -4.644291877746582
    3. ' ' → logprob: -4.769291877746582
    4. ' range' → logprob: -7.394291877746582
    5. '_' → logprob: -7.894291877746582
    6. '  ' → logprob: -11.894291877746582
    7. ' ‌' → logprob: -13.144291877746582
    8. 'range' → logprob: -13.269291877746582
    9. ' in' → logprob: -13.519291877746582
    10. 'i' → logprob: -13.769291877746582

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031229177489876747
    2. 'in' → logprob: -3.531229257583618
    3. ' ' → logprob: -6.906229019165039
    4. ' i' → logprob: -7.906229019165039
    5. '  ' → logprob: -10.406229019165039
    6. ' _' → logprob: -10.906229019165039
    7. 'i' → logprob: -11.031229019165039
    8. '	in' → logprob: -11.531229019165039
    9. 'import' → logprob: -12.281229019165039
    10. '   ' → logprob: -12.406229019165039

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004081485792994499
    2. ' range' → logprob: -5.5040812492370605
    3. '(range' → logprob: -12.879081726074219
    4. 'ange' → logprob: -15.379081726074219
    5. '	range' → logprob: -16.12908172607422
    6. '```' → logprob: -16.75408172607422
    7. 'ran' → logprob: -17.00408172607422
    8. 'rang' → logprob: -17.75408172607422
    9. '(' → logprob: -17.87908172607422
    10. ' ' → logprob: -18.00408172607422

Token 47: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.13213518261909485
    2. '(' → logprob: -2.1321351528167725
    3. '(N' → logprob: -5.382135391235352
    4. ' (' → logprob: -7.507135391235352
    5. '(range' → logprob: -11.632135391235352
    6. '(s' → logprob: -11.757135391235352
    7. ' M' → logprob: -11.757135391235352
    8. '(int' → logprob: -11.757135391235352
    9. '()' → logprob: -12.007135391235352
    10. '(
' → logprob: -13.507135391235352

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11503583192825317
    2. ')' → logprob: -2.3650357723236084
    3. ' ):' → logprob: -4.7400360107421875
    4. ' )' → logprob: -5.2400360107421875
    5. ',' → logprob: -7.6150360107421875
    6. ' ,' → logprob: -9.990036010742188
    7. '):
' → logprob: -10.115036010742188
    8. ':' → logprob: -10.240036010742188
    9. '   ' → logprob: -10.740036010742188
    10. '),' → logprob: -11.115036010742188

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4282700717449188
    2. '   ' → logprob: -1.4282701015472412
    3. '    ' → logprob: -2.428270101547241
    4. ' ' → logprob: -5.178269863128662
    5. ' 
' → logprob: -5.928269863128662
    6. '        ' → logprob: -6.303269863128662
    7. ' input' → logprob: -6.303269863128662
    8. 'input' → logprob: -6.428269863128662
    9. '        
' → logprob: -6.678269863128662
    10. '    
' → logprob: -6.928269863128662

Token 50: ' info' (ID: 5377)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.936881184577942
    2. ' a' → logprob: -1.936881184577942
    3. ' command' → logprob: -2.0618810653686523
    4. ' direction' → logprob: -2.6868810653686523
    5. 'command' → logprob: -3.0618810653686523
    6. 'x' → logprob: -3.3118810653686523
    7. ' x' → logprob: -3.3118810653686523
    8. ' s' → logprob: -3.4368810653686523
    9. 'cmd' → logprob: -3.4368810653686523
    10. 's' → logprob: -3.5618810653686523

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011073758825659752
    2. '=' → logprob: -4.511073589324951
    3. '_line' → logprob: -11.76107406616211
    4. 's' → logprob: -12.38607406616211
    5. '=line' → logprob: -12.51107406616211
    6. '_' → logprob: -13.01107406616211
    7. 'line' → logprob: -13.38607406616211
    8. ' ' → logprob: -13.51107406616211
    9. '[' → logprob: -13.51107406616211
    10. '   ' → logprob: -14.01107406616211

Token 52: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.40504512190818787
    2. 'input' → logprob: -1.1550451517105103
    3. ' list' → logprob: -4.405045032501221
    4. ' input' → logprob: -5.155045032501221
    5. 'map' → logprob: -11.155045509338379
    6. 'tuple' → logprob: -12.530045509338379
    7. '[input' → logprob: -14.280045509338379
    8. 'in' → logprob: -14.655045509338379
    9. '=input' → logprob: -14.780045509338379
    10. ' tuple' → logprob: -14.780045509338379

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00862131267786026
    2. '()' → logprob: -4.7586212158203125
    3. ' ().' → logprob: -12.133621215820312
    4. '(' → logprob: -14.633621215820312
    5. '()
' → logprob: -15.133621215820312
    6. ' ()' → logprob: -15.133621215820312
    7. '())' → logprob: -15.508621215820312
    8. '()

' → logprob: -16.883621215820312
    9. '()).' → logprob: -17.008621215820312
    10. '()`' → logprob: -17.008621215820312

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018305746838450432
    2. 'strip' → logprob: -4.018305778503418
    3. 'rstrip' → logprob: -8.768305778503418
    4. ' split' → logprob: -15.893305778503418
    5. '(split' → logprob: -17.0183048248291
    6. 'spl' → logprob: -17.3933048248291
    7. '```' → logprob: -18.3933048248291
    8. 'plit' → logprob: -19.7683048248291
    9. 'rs' → logprob: -20.0183048248291
    10. ' strip' → logprob: -20.3933048248291

Token 55: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017714503919705749
    2. '(' → logprob: -6.376771450042725
    3. '()
' → logprob: -10.751771926879883
    4. '())' → logprob: -10.751771926879883
    5. '()]' → logprob: -11.501771926879883
    6. '('' → logprob: -11.751771926879883
    7. ')' → logprob: -13.126771926879883
    8. '()`' → logprob: -14.001771926879883
    9. '()[' → logprob: -14.126771926879883
    10. '(
' → logprob: -14.251771926879883

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6812428832054138
    2. '   ' → logprob: -0.9312428832054138
    3. ' ' → logprob: -2.9312429428100586
    4. '    ' → logprob: -3.9312429428100586
    5. '<|end|>' → logprob: -4.556242942810059
    6. ' if' → logprob: -5.681242942810059
    7. '  ' → logprob: -5.931242942810059
    8. '[' → logprob: -6.306242942810059
    9. '        
' → logprob: -6.306242942810059
    10. '    
' → logprob: -6.556242942810059

Token 57: ' t' (ID: 260)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3455110788345337
    2. 'if' → logprob: -1.8455110788345337
    3. ' car' → logprob: -2.970510959625244
    4. 'command' → logprob: -4.720510959625244
    5. 'car' → logprob: -4.720510959625244
    6. 'i' → logprob: -4.845510959625244
    7. 'cmd' → logprob: -4.845510959625244
    8. ' i' → logprob: -5.345510959625244
    9. ' idx' → logprob: -5.345510959625244
    10. ' command' → logprob: -5.345510959625244

Token 58: ' =' (ID: 314)
  Prédit: 'ype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ype' → logprob: -0.0157686285674572
    2. ' =' → logprob: -4.265768527984619
    3. '=' → logprob: -6.890768527984619
    4. ',' → logprob: -8.265769004821777
    5. 'yp' → logprob: -9.140769004821777
    6. 'oken' → logprob: -9.390769004821777
    7. 'y' → logprob: -10.140769004821777
    8. ' ' → logprob: -10.890769004821777
    9. 'p' → logprob: -11.015769004821777
    10. 'ypes' → logprob: -11.390769004821777

Token 59: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4390520453453064
    2. ' info' → logprob: -1.1890521049499512
    3. 'int' → logprob: -3.189052104949951
    4. 'info' → logprob: -4.689052104949951
    5. ' ' → logprob: -7.814052104949951
    6. ' i' → logprob: -11.314051628112793
    7. ' in' → logprob: -11.814051628112793
    8. '  ' → logprob: -12.939051628112793
    9. 'in' → logprob: -13.439051628112793
    10. '	info' → logprob: -13.439051628112793

Token 60: '(info' (ID: 28422)
  Prédit: '(info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(info' → logprob: -0.3868776857852936
    2. '(' → logprob: -1.1368776559829712
    3. ' (' → logprob: -13.01187801361084
    4. '(
' → logprob: -13.26187801361084
    5. '(

' → logprob: -13.76187801361084
    6. '(in' → logprob: -14.13687801361084
    7. '(t' → logprob: -15.26187801361084
    8. '(i' → logprob: -15.38687801361084
    9. '((' → logprob: -16.261877059936523
    10. 'info' → logprob: -16.511877059936523

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. ' [' → logprob: -13.000004768371582
    3. '0' → logprob: -13.125004768371582
    4. ' ' → logprob: -16.000003814697266
    5. ')' → logprob: -16.500003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '(' → logprob: -17.125003814697266
    8. '```' → logprob: -17.250003814697266
    9. '1' → logprob: -17.500003814697266
    10. '	' → logprob: -17.750003814697266

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.061676347395405e-05
    2. ' ' → logprob: -10.50005054473877
    3. '1' → logprob: -10.75005054473877
    4. '   ' → logprob: -14.12505054473877
    5. '[' → logprob: -15.25005054473877
    6. ')' → logprob: -15.37505054473877
    7. '       ' → logprob: -16.500051498413086
    8. '2' → logprob: -17.187551498413086
    9. '     ' → logprob: -17.250051498413086
    10. '  ' → logprob: -17.250051498413086

Token 63: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002779014757834375
    2. ')' → logprob: -8.500277519226074
    3. '])
' → logprob: -10.125277519226074
    4. ']' → logprob: -11.125277519226074
    5. ' ])' → logprob: -11.125277519226074
    6. ')])' → logprob: -13.750277519226074
    7. ''])' → logprob: -13.875277519226074
    8. ')]' → logprob: -13.875277519226074
    9. '],' → logprob: -15.375277519226074
    10. ']])' → logprob: -15.625277519226074

Token 64: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44443976879119873
    2. 'if' (adapté à ' if') → logprob: -1.8194397687911987
    3. ' ' → logprob: -1.9444397687911987
    4. '       ' → logprob: -3.8194398880004883
    5. '<|end|>' → logprob: -4.069439888000488
    6. '    ' → logprob: -4.944439888000488
    7. '        ' → logprob: -5.819439888000488
    8. ' 
' → logprob: -6.569439888000488
    9. '
' → logprob: -6.819439888000488
    10. '   ' → logprob: -7.444439888000488

Token 66: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.0015035520773380995
    2. 't' → logprob: -6.5015034675598145
    3. ' ' → logprob: -13.876503944396973
    4. ' ' → logprob: -15.376503944396973
    5. ' т' → logprob: -17.501502990722656
    6. '	t' → logprob: -17.876502990722656
    7. '(' → logprob: -18.251502990722656
    8. '(t' → logprob: -18.251502990722656
    9. ' (' → logprob: -18.876502990722656
    10. '```' → logprob: -19.251502990722656

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0054480209946632385
    2. '==' → logprob: -5.255447864532471
    3. ' ' → logprob: -8.630448341369629
    4. '[' → logprob: -11.505448341369629
    5. ')' → logprob: -11.630448341369629
    6. ' ' → logprob: -12.505448341369629
    7. '1' → logprob: -12.630448341369629
    8. '=' → logprob: -13.630448341369629
    9. ' ===' → logprob: -13.630448341369629
    10. '```' → logprob: -13.630448341369629

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18002812564373016
    2. '1' → logprob: -1.8050280809402466
    3. '0' → logprob: -8.305027961730957
    4. '2' → logprob: -10.430027961730957
    5. '3' → logprob: -12.555027961730957
    6. '4' → logprob: -13.430027961730957
    7. '  ' → logprob: -14.805027961730957
    8. '6' → logprob: -15.930027961730957
    9. '7' → logprob: -16.055028915405273
    10. ')' → logprob: -16.242528915405273

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14384829998016357
    2. '0' → logprob: -2.018848419189453
    3. '2' → logprob: -7.018848419189453
    4. '3' → logprob: -8.643848419189453
    5. ' ' → logprob: -10.018848419189453
    6. '4' → logprob: -10.643848419189453
    7. ')' → logprob: -12.268848419189453
    8. ''' → logprob: -12.706348419189453
    9. '```' → logprob: -12.831348419189453
    10. '5' → logprob: -12.893848419189453

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000549218209926039
    2. '):' → logprob: -7.62554931640625
    3. ':
' → logprob: -10.25054931640625
    4. ' :' → logprob: -11.00054931640625
    5. ' and' → logprob: -12.00054931640625
    6. ' or' → logprob: -13.62554931640625
    7. ')' → logprob: -14.62554931640625
    8. '():' → logprob: -15.12554931640625
    9. ' ):' → logprob: -15.50054931640625
    10. ',' → logprob: -15.50054931640625

Token 71: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5391499400138855
    2. '       ' → logprob: -1.6641499996185303
    3. '        ' → logprob: -2.4141499996185303
    4. ' :' → logprob: -2.7891499996185303
    5. '):' → logprob: -3.6641499996185303
    6. ' ' → logprob: -4.039149761199951
    7. '    ' → logprob: -5.039149761199951
    8. ' ):' → logprob: -5.039149761199951
    9. '   ' → logprob: -5.664149761199951
    10. ',' → logprob: -5.664149761199951

Token 72: ' car' (ID: 1669)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.913446843624115
    2. 'x' → logprob: -1.6634469032287598
    3. ' i' → logprob: -2.5384469032287598
    4. ' a' → logprob: -2.7884469032287598
    5. 'a' → logprob: -3.0384469032287598
    6. 'i' → logprob: -3.0384469032287598
    7. ' lane' → logprob: -3.4134469032287598
    8. '   ' → logprob: -3.5384469032287598
    9. ' l' → logprob: -3.7884469032287598
    10. ' idx' → logprob: -3.9134469032287598

Token 73: ' =' (ID: 314)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.18308767676353455
    2. ' =' → logprob: -2.3080875873565674
    3. ',' → logprob: -3.5580875873565674
    4. '_num' → logprob: -4.3080878257751465
    5. '_lane' → logprob: -4.5580878257751465
    6. '_' → logprob: -5.3080878257751465
    7. '_number' → logprob: -5.4330878257751465
    8. '_color' → logprob: -6.5580878257751465
    9. 's' → logprob: -6.9330878257751465
    10. '=' → logprob: -7.4330878257751465

Token 74: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23274700343608856
    2. ' int' → logprob: -1.607746958732605
    3. 'info' → logprob: -5.3577470779418945
    4. ' info' → logprob: -5.9827470779418945
    5. '(int' → logprob: -10.607747077941895
    6. ' ' → logprob: -10.732747077941895
    7. '[int' → logprob: -12.107747077941895
    8. '<int' → logprob: -12.732747077941895
    9. '	int' → logprob: -12.732747077941895
    10. '  ' → logprob: -13.357747077941895

Token 75: '(info' (ID: 28422)
  Prédit: '(info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(info' → logprob: -6.635164754698053e-05
    2. '(' → logprob: -9.625066757202148
    3. '(in' → logprob: -16.50006675720215
    4. ' (' → logprob: -16.50006675720215
    5. 'info' → logprob: -17.87506675720215
    6. '	info' → logprob: -17.87506675720215
    7. '(INFO' → logprob: -18.87506675720215
    8. '((' → logprob: -19.37506675720215
    9. ' info' → logprob: -19.37506675720215
    10. '(i' → logprob: -19.50006675720215

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.500003814697266
    3. '1' → logprob: -14.125003814697266
    4. ')[' → logprob: -15.500003814697266
    5. '```' → logprob: -15.625003814697266
    6. '\[' → logprob: -15.625003814697266
    7. ' [' → logprob: -15.750003814697266
    8. '   ' → logprob: -16.000003814697266
    9. '[-' → logprob: -16.750003814697266
    10. '()[' → logprob: -16.750003814697266

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.578184497309849e-05
    2. '2' → logprob: -9.750085830688477
    3. ' ' → logprob: -10.750085830688477
    4. '[' → logprob: -13.125085830688477
    5. '   ' → logprob: -13.125085830688477
    6. '3' → logprob: -14.000085830688477
    7. '```' → logprob: -15.312585830688477
    8. '  ' → logprob: -16.062585830688477
    9. ']' → logprob: -16.375085830688477
    10. ')' → logprob: -16.375085830688477

Token 78: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07614312320947647
    2. '])
' → logprob: -2.8261430263519287
    3. ')' → logprob: -4.326143264770508
    4. ')
' → logprob: -7.451143264770508
    5. ']' → logprob: -9.701143264770508
    6. ')]' → logprob: -10.201143264770508
    7. '])
' → logprob: -10.326143264770508
    8. ')])' → logprob: -10.576143264770508
    9. ' ])' → logprob: -10.951143264770508
    10. '])

' → logprob: -10.951143264770508

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10507858544588089
    2. ' lanes' → logprob: -2.85507869720459
    3. ')' → logprob: -4.10507869720459
    4. ' 
' → logprob: -4.73007869720459
    5. '            
' → logprob: -5.48007869720459
    6. '<|end|>' → logprob: -6.10507869720459
    7. ',' → logprob: -6.23007869720459
    8. '
' → logprob: -6.73007869720459
    9. '            ' → logprob: -6.73007869720459
    10. 'n' → logprob: -7.10507869720459

Token 80: ' #' (ID: 1069)
  Prédit: 'lane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lane' → logprob: -0.9988327026367188
    2. '           ' → logprob: -1.6238327026367188
    3. ' lane' → logprob: -1.9988327026367188
    4. 'l' → logprob: -2.2488327026367188
    5. 'idx' → logprob: -2.9988327026367188
    6. 'i' → logprob: -3.6238327026367188
    7. 'lan' → logprob: -3.8738327026367188
    8. 'x' → logprob: -4.498832702636719
    9. 'a' → logprob: -4.498832702636719
    10. ' lanes' → logprob: -4.873832702636719

Token 81: ' Trou' (ID: 58947)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.6937810182571411
    2. ' lanes' → logprob: -0.6937810182571411
    3. ' lan' → logprob: -7.818780899047852
    4. '           ' → logprob: -10.068780899047852
    5. ' for' → logprob: -10.568780899047852
    6. '```' → logprob: -10.568780899047852
    7. ' if' → logprob: -11.131280899047852
    8. 'l' → logprob: -11.318780899047852
    9. ' continue' → logprob: -11.631280899047852
    10. ' spaces' → logprob: -11.631280899047852

Token 82: 'ver' (ID: 445)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.5789144039154053
    2. 'bles' → logprob: -0.8289144039154053
    3. 'b' → logprob: -6.703914642333984
    4. 'bl' → logprob: -7.203914642333984
    5. 'blem' → logprob: -7.328914642333984
    6. 'bled' → logprob: -8.953914642333984
    7. 'bling' → logprob: -9.453914642333984
    8. 'bly' → logprob: -10.203914642333984
    9. 'bel' → logprob: -10.578914642333984
    10. 'mble' → logprob: -11.078914642333984

Token 83: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1180448532104492
    2. 'le' → logprob: -2.243044853210449
    3. ' l' → logprob: -2.368044853210449
    4. ' quelle' → logprob: -2.368044853210449
    5. ' the' → logprob: -2.993044853210449
    6. ' which' → logprob: -3.243044853210449
    7. ' quel' → logprob: -3.493044853210449
    8. ' lequel' → logprob: -3.618044853210449
    9. ' le' → logprob: -3.743044853210449
    10. ' laquelle' → logprob: -3.743044853210449

Token 84: ' file' (ID: 1974)
  Prédit: 'lane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lane' → logprob: -1.1520450115203857
    2. ' lane' → logprob: -1.2770450115203857
    3. ' bonne' → logprob: -1.7770450115203857
    4. ' place' → logprob: -2.7770450115203857
    5. ' position' → logprob: -3.5270450115203857
    6. 'position' → logprob: -3.9020450115203857
    7. ' meilleure' → logprob: -4.152045249938965
    8. 'place' → logprob: -4.277045249938965
    9. ' ' → logprob: -4.527045249938965
    10. 'bonne' → logprob: -4.527045249938965

Token 85: ' avec' (ID: 3937)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5921040773391724
    2. '.' → logprob: -1.4671040773391724
    3. '<|end|>' → logprob: -2.467103958129883
    4. '.append' → logprob: -3.592103958129883
    5. '[' → logprob: -3.967103958129883
    6. ')' → logprob: -4.467103958129883
    7. 'de' → logprob: -4.967103958129883
    8. ' ' → logprob: -5.092103958129883
    9. '[line' → logprob: -5.342103958129883
    10. 'es' → logprob: -5.592103958129883

Token 86: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.40153205394744873
    2. ' la' → logprob: -1.6515320539474487
    3. '<|end|>' → logprob: -3.1515321731567383
    4. 'len' → logprob: -4.276532173156738
    5. 'lan' → logprob: -4.401532173156738
    6. 'le' → logprob: -4.526532173156738
    7. 'l' → logprob: -4.526532173156738
    8. 'least' → logprob: -4.776532173156738
    9. '```' → logprob: -4.901532173156738
    10. 'the' → logprob: -5.026532173156738

Token 87: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.9183422327041626
    2. ' moins' → logprob: -1.6683422327041626
    3. ' plus' → logprob: -2.043342113494873
    4. 'plus' → logprob: -2.168342113494873
    5. '```' → logprob: -2.543342113494873
    6. ' minimum' → logprob: -3.793342113494873
    7. 'minimum' → logprob: -4.043342113494873
    8. 'mo' → logprob: -4.043342113494873
    9. '+' → logprob: -5.293342113494873
    10. 'm' → logprob: -6.043342113494873

Token 88: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2782733738422394
    2. 'de' → logprob: -3.028273344039917
    3. 'deque' → logprob: -3.153273344039917
    4. '<|end|>' → logprob: -3.153273344039917
    5. 'd' → logprob: -3.403273344039917
    6. '    ' → logprob: -3.528273344039917
    7. ' d' → logprob: -4.653273582458496
    8. 'len' → logprob: -4.778273582458496
    9. ' deque' → logprob: -5.403273582458496
    10. '<|end|>' → logprob: -5.528273582458496

Token 89: ' voitures' (ID: 109433)
  Prédit: 'cars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cars' → logprob: -0.5956519246101379
    2. ' voitures' → logprob: -1.7206518650054932
    3. ' cars' → logprob: -2.095651865005493
    4. ' elements' → logprob: -2.470651865005493
    5. '<|end|>' → logprob: -4.095652103424072
    6. ' ' → logprob: -4.345652103424072
    7. 'vo' → logprob: -5.095652103424072
    8. ' véhicules' → logprob: -5.220652103424072
    9. 'elements' → logprob: -5.595652103424072
    10. 'car' → logprob: -5.970652103424072

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4454249143600464
    2. ' min' → logprob: -1.8204249143600464
    3. '<|end|>' → logprob: -2.320425033569336
    4. ',' → logprob: -2.445425033569336
    5. '            ' → logprob: -2.945425033569336
    6. '    ' → logprob: -2.945425033569336
    7. ' ,' → logprob: -3.195425033569336
    8. ' 
' → logprob: -3.320425033569336
    9. 'min' → logprob: -3.445425033569336
    10. ' if' → logprob: -3.445425033569336

Token 92: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.25388309359550476
    2. 'min' (adapté à ' min') → logprob: -1.7538831233978271
    3. ' lengths' → logprob: -3.378883123397827
    4. 'length' → logprob: -5.128882884979248
    5. ' idx' → logprob: -5.378882884979248
    6. ' length' → logprob: -6.003882884979248
    7. 'idx' → logprob: -6.503882884979248
    8. 'sizes' → logprob: -7.128882884979248
    9. ' sizes' → logprob: -8.003883361816406
    10. ' lane' → logprob: -8.628883361816406

Token 93: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.11350680887699127
    2. '_length' → logprob: -2.48850679397583
    3. '_lane' → logprob: -4.23850679397583
    4. '_' → logprob: -5.86350679397583
    5. '_l' → logprob: -6.11350679397583
    6. 'len' → logprob: -6.61350679397583
    7. '_size' → logprob: -6.61350679397583
    8. '_idx' → logprob: -7.11350679397583
    9. '_index' → logprob: -7.61350679397583
    10. '_queue' → logprob: -7.86350679397583

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9774243235588074
    2. '=' → logprob: -1.7274243831634521
    3. '_idx' → logprob: -1.8524243831634521
    4. '_index' → logprob: -2.102424383163452
    5. '_lane' → logprob: -2.227424383163452
    6. '_' → logprob: -3.727424383163452
    7. '_l' → logprob: -3.852424383163452
    8. '_car' → logprob: -5.852424144744873
    9. '_queue' → logprob: -6.102424144744873
    10. '_len' → logprob: -6.227424144744873

Token 95: ' min' (ID: 1349)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0453689880669117
    2. 'min' → logprob: -3.6703689098358154
    3. ' float' → logprob: -4.6703691482543945
    4. 'len' → logprob: -4.9203691482543945
    5. ' min' → logprob: -7.1703691482543945
    6. 'N' → logprob: -7.2953691482543945
    7. '10' → logprob: -7.4203691482543945
    8. '100' → logprob: -9.920369148254395
    9. ' len' → logprob: -10.670369148254395
    10. ' N' → logprob: -10.920369148254395

Token 96: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.009822671301662922
    2. '(l' → logprob: -4.634822845458984
    3. '([' → logprob: -10.884822845458984
    4. 'len' → logprob: -11.009822845458984
    5. '(' → logprob: -11.134822845458984
    6. '(map' → logprob: -11.884822845458984
    7. '((' → logprob: -12.134822845458984
    8. '[len' → logprob: -12.884822845458984
    9. '(length' → logprob: -14.259822845458984
    10. ' len' → logprob: -15.634822845458984

Token 97: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.019146958366036415
    2. '(queue' → logprob: -4.144146919250488
    3. '(q' → logprob: -6.644146919250488
    4. '(de' → logprob: -7.144146919250488
    5. '(d' → logprob: -7.769146919250488
    6. '(' → logprob: -7.769146919250488
    7. 'lane' → logprob: -9.644146919250488
    8. '(x' → logprob: -10.769146919250488
    9. '(line' → logprob: -11.144146919250488
    10. '(deck' → logprob: -11.394146919250488

Token 98: 'ane' (ID: 1986)
  Prédit: 'anes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anes' → logprob: -0.4295421540737152
    2. 'ane' → logprob: -1.0545421838760376
    3. '[' → logprob: -8.804542541503906
    4. 'an' → logprob: -9.304542541503906
    5. 'lane' → logprob: -9.429542541503906
    6. 'a' → logprob: -9.429542541503906
    7. 'nes' → logprob: -9.992042541503906
    8. 'e' → logprob: -10.304542541503906
    9. 'ne' → logprob: -10.367042541503906
    10. ')' → logprob: -10.367042541503906

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.947715832618997e-05
    2. '))' → logprob: -10.375089645385742
    3. ' )' → logprob: -11.000089645385742
    4. 's' → logprob: -11.125089645385742
    5. '(l' → logprob: -11.875089645385742
    6. ')
' → logprob: -12.625089645385742
    7. 'lane' → logprob: -12.625089645385742
    8. 'e' → logprob: -13.250089645385742
    9. '(s' → logprob: -13.625089645385742
    10. '   ' → logprob: -13.625089645385742

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0146895507350564
    2. 'for' → logprob: -4.3896894454956055
    3. ')' → logprob: -6.1396894454956055
    4. ' ' → logprob: -11.514689445495605
    5. '   ' → logprob: -11.889689445495605
    6. ' )' → logprob: -13.014689445495605
    7. '	for' → logprob: -14.389689445495605
    8. '
' → logprob: -14.889689445495605
    9. '    ' → logprob: -14.889689445495605
    10. ')
' → logprob: -15.014689445495605

Token 101: ' lane' (ID: 39989)
  Prédit: ' lanes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lanes' → logprob: -0.6638992428779602
    2. 'lan' → logprob: -0.9138992428779602
    3. 'lane' → logprob: -2.7888991832733154
    4. ' lane' → logprob: -3.7888991832733154
    5. ' lan' → logprob: -9.788899421691895
    6. 'l' → logprob: -11.538899421691895
    7. ' ' → logprob: -11.538899421691895
    8. '_lane' → logprob: -13.101399421691895
    9. '```' → logprob: -13.351399421691895
    10. '
' → logprob: -13.351399421691895

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004357960075139999
    2. 'in' → logprob: -5.879357814788818
    3. 's' → logprob: -6.504357814788818
    4. ' ' → logprob: -10.504358291625977
    5. ')' → logprob: -10.879358291625977
    6. ' s' → logprob: -12.254358291625977
    7. ' )' → logprob: -14.254358291625977
    8. '<|end|>' → logprob: -14.254358291625977
    9. '  ' → logprob: -14.879358291625977
    10. '	in' → logprob: -15.379358291625977

Token 103: ' lanes' (ID: 72055)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.08902213722467422
    2. ' lanes' → logprob: -2.464022159576416
    3. 'lane' → logprob: -10.714021682739258
    4. '   ' → logprob: -11.089021682739258
    5. '```' → logprob: -11.839021682739258
    6. 'l' → logprob: -11.839021682739258
    7. ')' → logprob: -12.089021682739258
    8. 'layers' → logprob: -12.089021682739258
    9. ' ' → logprob: -12.214021682739258
    10. ' lan' → logprob: -12.714021682739258

Token 104: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18531455099582672
    2. ')' → logprob: -1.8103145360946655
    3. '           ' → logprob: -5.810314655303955
    4. ' )
' → logprob: -6.060314655303955
    5. ' )' → logprob: -8.810314178466797
    6. ')
' → logprob: -10.310314178466797
    7. '       ' → logprob: -10.435314178466797
    8. ' if' → logprob: -12.810314178466797
    9. '               ' → logprob: -13.060314178466797
    10. ')

' → logprob: -13.310314178466797

Token 105: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09879466891288757
    2. '           ' → logprob: -2.59879469871521
    3. '<|end|>' → logprob: -4.223794460296631
    4. ' 
' → logprob: -6.973794460296631
    5. '            
' → logprob: -6.973794460296631
    6. '       ' → logprob: -7.223794460296631
    7. '  
' → logprob: -7.473794460296631
    8. '\n' → logprob: -7.973794460296631
    9. '    
' → logprob: -8.098794937133789
    10. '<|end|>' → logprob: -8.223794937133789

Token 106: ' for' (ID: 395)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.0160530805587769
    2. '           ' → logprob: -1.5160530805587769
    3. '
' → logprob: -1.7660530805587769
    4. ' idx' → logprob: -2.0160531997680664
    5. ' for' → logprob: -2.8910531997680664
    6. 'min' → logprob: -3.8910531997680664
    7. ' index' → logprob: -4.766053199768066
    8. 'idx' → logprob: -5.141053199768066
    9. ' candidate' → logprob: -5.141053199768066
    10. ' target' → logprob: -5.641053199768066

Token 107: ' i' (ID: 575)
  Prédit: ' lane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lane' → logprob: -0.043098874390125275
    2. 'lane' → logprob: -3.1680989265441895
    3. ' i' → logprob: -9.668098449707031
    4. 'lan' → logprob: -11.168098449707031
    5. 'i' → logprob: -11.543098449707031
    6. ' lan' → logprob: -12.668098449707031
    7. '_lane' → logprob: -13.043098449707031
    8. 'l' → logprob: -13.168098449707031
    9. ' l' → logprob: -14.043098449707031
    10. ' ' → logprob: -14.043098449707031

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01748327538371086
    2. ',' → logprob: -4.267483234405518
    3. 'in' → logprob: -5.767483234405518
    4. ' ,' → logprob: -8.892483711242676
    5. ' ' → logprob: -10.017483711242676
    6. 'range' → logprob: -13.892483711242676
    7. ',in' → logprob: -13.892483711242676
    8. ' range' → logprob: -14.767483711242676
    9. ',l' → logprob: -14.767483711242676
    10. '  ' → logprob: -15.017483711242676

Token 109: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47408822178840637
    2. 'range' → logprob: -0.974088191986084
    3. '   ' → logprob: -12.599088668823242
    4. '	range' → logprob: -12.599088668823242
    5. '(range' → logprob: -13.474088668823242
    6. ' ' → logprob: -13.974088668823242
    7. 'ange' → logprob: -14.349088668823242
    8. 'rang' → logprob: -14.974088668823242
    9. '  ' → logprob: -15.099088668823242
    10. '    ' → logprob: -15.224088668823242

Token 110: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.039840925484895706
    2. 'N' → logprob: -3.2898409366607666
    3. 'len' → logprob: -7.1648406982421875
    4. '(len' → logprob: -7.2898406982421875
    5. ' N' → logprob: -8.539840698242188
    6. '   ' → logprob: -9.039840698242188
    7. '(' → logprob: -10.914840698242188
    8. ' len' → logprob: -12.414840698242188
    9. '	N' → logprob: -12.664840698242188
    10. '(n' → logprob: -14.539840698242188

Token 111: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0037629054859280586
    2. '):' → logprob: -5.628762722015381
    3. '):
' → logprob: -9.378763198852539
    4. ' ):
' → logprob: -9.503763198852539
    5. '   ' → logprob: -14.128763198852539
    6. ')' → logprob: -14.378763198852539
    7. ' ):' → logprob: -14.378763198852539
    8. '       ' → logprob: -14.628763198852539
    9. ' ' → logprob: -14.878763198852539
    10. '):

' → logprob: -15.003763198852539

Token 112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25341594219207764
    2. '<|end|>' → logprob: -1.6284159421920776
    3. '           ' → logprob: -4.378416061401367
    4. ':' → logprob: -5.503416061401367
    5. '<|end|>' → logprob: -6.003416061401367
    6. ' 
' → logprob: -6.128416061401367
    7. '                
' → logprob: -6.503416061401367
    8. ' ' → logprob: -6.628416061401367
    9. ':
' → logprob: -7.628416061401367
    10. '            
' → logprob: -7.878416061401367

Token 113: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18417885899543762
    2. ' if' → logprob: -2.4341788291931152
    3. '<|end|>' → logprob: -3.0591788291931152
    4. '           ' → logprob: -3.5591788291931152
    5. ' ' → logprob: -7.059178829193115
    6. '                ' → logprob: -7.434178829193115
    7. 'if' (adapté à ' if') → logprob: -7.434178829193115
    8. '            ' → logprob: -7.559178829193115
    9. '                
' → logprob: -7.684178829193115
    10. ' 
' → logprob: -7.684178829193115

Token 114: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06995166093111038
    2. 'len' → logprob: -2.6949517726898193
    3. '(len' → logprob: -11.569952011108398
    4. '               ' → logprob: -12.944952011108398
    5. '	len' → logprob: -13.569952011108398
    6. '   ' → logprob: -14.194952011108398
    7. '           ' → logprob: -14.444952011108398
    8. '                   ' → logprob: -15.569952011108398
    9. '            ' → logprob: -16.0699520111084
    10. '[len' → logprob: -16.0699520111084

Token 115: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.750018119812012
    3. ' (' → logprob: -11.875018119812012
    4. 'lan' → logprob: -12.750018119812012
    5. ' lanes' → logprob: -16.250019073486328
    6. ')' → logprob: -16.500019073486328
    7. '(
' → logprob: -16.750019073486328
    8. '(ls' → logprob: -17.250019073486328
    9. 'l' → logprob: -17.750019073486328
    10. '	l' → logprob: -18.125019073486328

Token 116: 'anes' (ID: 28047)
  Prédit: 'anes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anes' → logprob: -0.0017551452619954944
    2. 'lan' → logprob: -6.501755237579346
    3. 'nes' → logprob: -9.376754760742188
    4. 'es' → logprob: -9.626754760742188
    5. ' lanes' → logprob: -10.376754760742188
    6. 'ane' → logprob: -10.751754760742188
    7. 'an' → logprob: -11.001754760742188
    8. '   ' → logprob: -11.501754760742188
    9. '[' → logprob: -12.376754760742188
    10. 'ans' → logprob: -12.501754760742188

Token 117: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.625001907348633
    3. ')' → logprob: -16.750001907348633
    4. ')[' → logprob: -16.750001907348633
    5. '[I' → logprob: -17.375001907348633
    6. '[
' → logprob: -18.000001907348633
    7. '[index' → logprob: -18.250001907348633
    8. '[j' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. '[idx' → logprob: -18.750001907348633

Token 118: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003678932785987854
    2. '])' → logprob: -5.878678798675537
    3. ' )' → logprob: -7.128678798675537
    4. ')==' → logprob: -10.878679275512695
    5. ')<' → logprob: -11.003679275512695
    6. '）' → logprob: -11.128679275512695
    7. '`)' → logprob: -12.003679275512695
    8. '))' → logprob: -12.253679275512695
    9. '})' → logprob: -13.253679275512695
    10. '())' → logprob: -13.628679275512695

Token 119: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04314339905977249
    2. '==' → logprob: -3.1681435108184814
    3. ' <' → logprob: -9.293143272399902
    4. ' <=' → logprob: -10.668143272399902
    5. ' ' → logprob: -11.543143272399902
    6. ')' → logprob: -12.043143272399902
    7. ')==' → logprob: -12.543143272399902
    8. '<' → logprob: -12.668143272399902
    9. '<=' → logprob: -13.668143272399902
    10. '=' → logprob: -13.668143272399902

Token 120: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.10020849853754044
    2. 'min' → logprob: -2.3502085208892822
    3. ' ' → logprob: -13.975208282470703
    4. '	min' → logprob: -14.475208282470703
    5. '(min' → logprob: -16.100208282470703
    6. '_min' → logprob: -16.475208282470703
    7. '=min' → logprob: -16.725208282470703
    8. '[min' → logprob: -16.850208282470703
    9. '    ' → logprob: -18.475208282470703
    10. '   ' → logprob: -18.475208282470703

Token 121: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.128163257315464e-07
    2. '_min' → logprob: -15.75
    3. 'len' → logprob: -16.125
    4. ' _' → logprob: -17.875
    5. '_LEN' → logprob: -18.625
    6. 'Len' → logprob: -18.75
    7. '._' → logprob: -18.875
    8. '_le' → logprob: -19.0
    9. '_l' → logprob: -19.0
    10. '__' → logprob: -19.125

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6962335705757141
    2. ':
' → logprob: -0.6962335705757141
    3. '                   ' → logprob: -6.321233749389648
    4. '):
' → logprob: -7.571233749389648
    5. '               ' → logprob: -8.446233749389648
    6. ' and' → logprob: -9.446233749389648
    7. '):' → logprob: -9.571233749389648
    8. '           ' → logprob: -9.696233749389648
    9. '                       ' → logprob: -9.821233749389648
    10. '<|end|>' → logprob: -10.071233749389648

Token 123: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030791403725743294
    2. '                    
' → logprob: -4.655791282653809
    3. '
' → logprob: -5.030791282653809
    4. '               ' → logprob: -5.155791282653809
    5. '           ' → logprob: -5.780791282653809
    6. '                       ' → logprob: -6.780791282653809
    7. ':
' → logprob: -6.905791282653809
    8. '):
' → logprob: -7.655791282653809
    9. '                        
' → logprob: -7.780791282653809
    10. '                
' → logprob: -8.030791282653809

Token 124: ' lanes' (ID: 72055)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.10090436786413193
    2. ' lanes' → logprob: -2.3509044647216797
    3. '                   ' → logprob: -7.72590446472168
    4. ' lan' → logprob: -8.47590446472168
    5. '               ' → logprob: -10.97590446472168
    6. '           ' → logprob: -11.85090446472168
    7. '
' → logprob: -12.35090446472168
    8. '                    
' → logprob: -12.35090446472168
    9. '                       ' → logprob: -12.35090446472168
    10. '```' → logprob: -12.47590446472168

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -11.500011444091797
    3. '```' → logprob: -14.750011444091797
    4. '[I' → logprob: -14.875011444091797
    5. '[idx' → logprob: -16.375011444091797
    6. '\[' → logprob: -16.500011444091797
    7. ' [' → logprob: -17.625011444091797
    8. '[
' → logprob: -17.750011444091797
    9. '[index' → logprob: -17.875011444091797
    10. '[s' → logprob: -17.875011444091797

Token 126: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005989041528664529
    2. '.append' → logprob: -7.625598907470703
    3. ']' → logprob: -9.875598907470703
    4. ').' → logprob: -10.375598907470703
    5. '.' → logprob: -11.375598907470703
    6. ' ].' → logprob: -11.625598907470703
    7. '   ' → logprob: -13.125598907470703
    8. 'append' → logprob: -13.250598907470703
    9. '}.' → logprob: -14.000598907470703
    10. ''].' → logprob: -14.500598907470703

Token 127: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.5048530030981055e-06
    2. '.append' → logprob: -13.750001907348633
    3. ' append' → logprob: -15.375001907348633
    4. 'appen' → logprob: -15.625001907348633
    5. '_append' → logprob: -17.875001907348633
    6. 'Append' → logprob: -18.625001907348633
    7. 'app' → logprob: -18.625001907348633
    8. '	append' → logprob: -19.125001907348633
    9. 'extend' → logprob: -20.625001907348633
    10. '```' → logprob: -21.000001907348633

Token 128: '(car' (ID: 77006)
  Prédit: '(car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(car' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. 'left' → logprob: -18.500003814697266
    4. '(c' → logprob: -18.750003814697266
    5. '(card' → logprob: -19.750003814697266
    6. '	car' → logprob: -19.875003814697266
    7. '(Car' → logprob: -20.250003814697266
    8. ' (' → logprob: -20.500003814697266
    9. 'car' → logprob: -20.875003814697266
    10. '(
' → logprob: -21.000003814697266

Token 129: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01929980143904686
    2. ')' → logprob: -4.0192999839782715
    3. '                   ' → logprob: -6.8942999839782715
    4. ')
' → logprob: -9.394299507141113
    5. '           ' → logprob: -10.394299507141113
    6. '               ' → logprob: -11.019299507141113
    7. ' )
' → logprob: -12.894299507141113
    8. ')

' → logprob: -13.269299507141113
    9. '                       ' → logprob: -15.519299507141113
    10. '       ' → logprob: -15.769299507141113

Token 130: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.194110756041482e-05
    2. '           ' → logprob: -10.500061988830566
    3. '               ' → logprob: -11.375061988830566
    4. 'break' → logprob: -11.750061988830566
    5. '                    
' → logprob: -12.125061988830566
    6. '                       ' → logprob: -12.500061988830566
    7. '       ' → logprob: -12.875061988830566
    8. ' break' → logprob: -13.625061988830566
    9. '                    ' → logprob: -14.625061988830566
    10. '   ' → logprob: -14.625061988830566

Token 131: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.38767218589782715
    2. 'break' (adapté à ' break') → logprob: -1.1376721858978271
    3. '                   ' → logprob: -7.137672424316406
    4. '               ' → logprob: -13.012672424316406
    5. '	break' → logprob: -13.387672424316406
    6. '```' → logprob: -14.512672424316406
    7. '           ' → logprob: -14.637672424316406
    8. '                    
' → logprob: -14.762672424316406
    9. '
' → logprob: -14.887672424316406
    10. '                       ' → logprob: -15.387672424316406

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6437279582023621
    2. '       ' → logprob: -1.0187280178070068
    3. 'elif' → logprob: -2.768728017807007
    4. '
' → logprob: -3.143728017807007
    5. '```' → logprob: -5.893727779388428
    6. ' elif' → logprob: -6.518727779388428
    7. '   ' → logprob: -7.018727779388428
    8. 'newline' → logprob: -7.768727779388428
    9. '    
' → logprob: -8.143728256225586
    10. '        
' → logprob: -8.268728256225586

Token 134: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2538091838359833
    2. ' elif' → logprob: -2.1288092136383057
    3. '       ' → logprob: -2.2538092136383057
    4. '   ' → logprob: -9.253808975219727
    5. '	elif' → logprob: -10.003808975219727
    6. '        
' → logprob: -11.003808975219727
    7. 'else' (adapté à ' else') → logprob: -12.128808975219727
    8. '    ' → logprob: -12.378808975219727
    9. '```' → logprob: -12.753808975219727
    10. 'el' → logprob: -12.878808975219727

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1690760999917984
    2. ':
' → logprob: -1.9190760850906372
    3. ' if' → logprob: -5.294075965881348
    4. ' :' → logprob: -5.919075965881348
    5. ' :
' → logprob: -7.169075965881348
    6. 'if' → logprob: -8.794075965881348
    7. '       ' → logprob: -9.419075965881348
    8. '   ' → logprob: -10.544075965881348
    9. ':

' → logprob: -11.044075965881348
    10. '           ' → logprob: -11.169075965881348

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018443379551172256
    2. ' if' → logprob: -4.393443584442139
    3. ' car' → logprob: -5.518443584442139
    4. 'if' → logprob: -8.01844310760498
    5. 'car' → logprob: -8.39344310760498
    6. '       ' → logprob: -8.51844310760498
    7. ' #' → logprob: -8.64344310760498
    8. 't' → logprob: -8.89344310760498
    9. '1' → logprob: -9.01844310760498
    10. '   ' → logprob: -9.33094310760498

Token 137: ' lane' (ID: 39989)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' car' → logprob: -1.1076844930648804
    2. ' k' → logprob: -2.23268461227417
    3. ' idx' → logprob: -2.35768461227417
    4. 'k' → logprob: -2.48268461227417
    5. 'car' → logprob: -3.10768461227417
    6. ' x' → logprob: -3.23268461227417
    7. 'x' → logprob: -3.48268461227417
    8. 'lane' (adapté à ' lane') → logprob: -3.60768461227417
    9. ' pos' → logprob: -3.85768461227417
    10. ' i' → logprob: -3.85768461227417

Token 138: '_num' (ID: 9834)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.6355137228965759
    2. '_id' → logprob: -1.5105137825012207
    3. '_index' → logprob: -1.5105137825012207
    4. ' =' → logprob: -4.010513782501221
    5. '_num' → logprob: -4.885513782501221
    6. '_' → logprob: -6.885513782501221
    7. '=' → logprob: -7.510513782501221
    8. '_i' → logprob: -7.635513782501221
    9. ',' → logprob: -7.760513782501221
    10. 's' → logprob: -8.635513305664062

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10028592497110367
    2. '=' → logprob: -2.3502860069274902
    3. '=int' → logprob: -9.850285530090332
    4. ',' → logprob: -11.225285530090332
    5. ' ' → logprob: -11.850285530090332
    6. ')' → logprob: -12.475285530090332
    7. '.' → logprob: -15.225285530090332
    8. 's' → logprob: -15.225285530090332
    9. '=input' → logprob: -15.350285530090332
    10. ']' → logprob: -15.850285530090332

Token 140: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031781906727701426
    2. ' int' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.378178596496582
    4. '           ' → logprob: -16.753177642822266
    5. '	int' → logprob: -17.378177642822266
    6. '[int' → logprob: -17.378177642822266
    7. '(int' → logprob: -17.503177642822266
    8. '  ' → logprob: -17.753177642822266
    9. ' ' → logprob: -17.753177642822266
    10. '<int' → logprob: -17.878177642822266

Token 141: '(info' (ID: 28422)
  Prédit: '(info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(info' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. '(in' → logprob: -16.125
    4. ' (' → logprob: -16.625
    5. 'info' → logprob: -16.875
    6. ' info' → logprob: -18.375
    7. '	info' → logprob: -18.625
    8. '(input' → logprob: -19.0
    9. '(INFO' → logprob: -19.875
    10. '(
' → logprob: -20.125

Token 142: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2961512513575144e-05
    2. '1' → logprob: -11.000022888183594
    3. '][' → logprob: -12.750022888183594
    4. '       ' → logprob: -14.375022888183594
    5. ' [' → logprob: -14.625022888183594
    6. '   ' → logprob: -14.875022888183594
    7. ')[' → logprob: -15.000022888183594
    8. '```' → logprob: -15.000022888183594
    9. '2' → logprob: -15.375022888183594
    10. '           ' → logprob: -15.625022888183594

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. '2' → logprob: -11.000027656555176
    3. '[' → logprob: -12.000027656555176
    4. ' ' → logprob: -12.750027656555176
    5. '```' → logprob: -14.500027656555176
    6. '   ' → logprob: -14.625027656555176
    7. ')' → logprob: -15.687527656555176
    8. '0' → logprob: -16.43752670288086
    9. '])' → logprob: -17.00002670288086
    10. ']' → logprob: -17.25002670288086

Token 144: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09187643975019455
    2. ')' → logprob: -2.46687650680542
    3. '])-' → logprob: -6.34187650680542
    4. '-' → logprob: -6.84187650680542
    5. '])
' → logprob: -11.091876029968262
    6. ' -' → logprob: -11.216876029968262
    7. ''])' → logprob: -11.341876029968262
    8. ')-' → logprob: -11.466876029968262
    9. '）' → logprob: -11.466876029968262
    10. ']' → logprob: -11.716876029968262

Token 145: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5570601224899292
    2. '
' → logprob: -1.4320601224899292
    3. '-' → logprob: -2.0570602416992188
    4. '       ' → logprob: -3.1820602416992188
    5. ' -' → logprob: -4.557060241699219
    6. '            
' → logprob: -6.182060241699219
    7. '        
' → logprob: -6.682060241699219
    8. '   ' → logprob: -6.682060241699219
    9. '               ' → logprob: -7.432060241699219
    10. '                   ' → logprob: -7.557060241699219

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -17.750085830688477
    4. '   ' → logprob: -18.375085830688477
    5. '```' → logprob: -19.125085830688477
    6. '           ' → logprob: -19.500085830688477
    7. '=' → logprob: -21.000085830688477
    8. '[' → logprob: -21.375085830688477
    9. '       ' → logprob: -21.625085830688477
    10. ')' → logprob: -21.625085830688477

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -14.750009536743164
    4. '```' → logprob: -18.250009536743164
    5. '   ' → logprob: -19.125009536743164
    6. '0' → logprob: -19.625009536743164
    7. '[' → logprob: -20.000009536743164
    8. '           ' → logprob: -20.500009536743164
    9. '=' → logprob: -20.750009536743164
    10. 'for' → logprob: -21.000009536743164

Token 148: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006266012322157621
    2. ' if' → logprob: -5.631266117095947
    3. 'if' → logprob: -6.756266117095947
    4. '            
' → logprob: -7.756266117095947
    5. '
' → logprob: -8.006265640258789
    6. 'print' → logprob: -8.631265640258789
    7. '<|end|>' → logprob: -8.756265640258789
    8. ')' → logprob: -9.131265640258789
    9. ',' → logprob: -9.506265640258789
    10. ' lanes' → logprob: -9.756265640258789

Token 149: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6365672945976257
    2. '           ' → logprob: -1.2615673542022705
    3. 'if' → logprob: -1.7615673542022705
    4. 'car' → logprob: -5.136567115783691
    5. 'lan' → logprob: -5.261567115783691
    6. ' if' → logprob: -6.386567115783691
    7. ' print' → logprob: -7.886567115783691
    8. '       ' → logprob: -8.136567115783691
    9. 'answer' → logprob: -8.136567115783691
    10. '   ' → logprob: -8.261567115783691

Token 150: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.447184294462204
    2. 'if' → logprob: -1.3221843242645264
    3. 'car' → logprob: -3.3221843242645264
    4. 'lan' → logprob: -3.6971843242645264
    5. ' if' → logprob: -4.572184085845947
    6. ' print' → logprob: -4.947184085845947
    7. ' lanes' → logprob: -5.697184085845947
    8. '   ' → logprob: -6.072184085845947
    9. 'removed' → logprob: -6.572184085845947
    10. 'out' → logprob: -6.572184085845947

Token 151: ' Ret' (ID: 16724)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9855437874794006
    2. 'lan' → logprob: -1.1105437278747559
    3. 'print' → logprob: -1.9855437278747559
    4. ' if' → logprob: -2.735543727874756
    5. 'car' → logprob: -3.360543727874756
    6. ' lanes' → logprob: -3.735543727874756
    7. 'removed' → logprob: -5.485543727874756
    8. 'lane' → logprob: -5.610543727874756
    9. 's' → logprob: -5.860543727874756
    10. 'ret' → logprob: -5.860543727874756

Token 152: 'irer' (ID: 85189)
  Prédit: 'irer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irer' → logprob: -0.004140972159802914
    2. 'r' → logprob: -6.129140853881836
    3. 'urn' → logprob: -7.504140853881836
    4. 'ire' → logprob: -7.504140853881836
    5. 've' → logprob: -8.629140853881836
    6. 'ra' → logprob: -9.129140853881836
    7. 'ir' → logprob: -9.879140853881836
    8. 'rir' → logprob: -10.129140853881836
    9. 'ove' → logprob: -10.129140853881836
    10. 'if' → logprob: -10.129140853881836

Token 153: ' la' (ID: 557)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.0872688814997673
    2. ' lanes' → logprob: -2.587268829345703
    3. 'le' → logprob: -5.837268829345703
    4. ' la' → logprob: -6.462268829345703
    5. 'la' → logprob: -6.712268829345703
    6. 'car' → logprob: -7.712268829345703
    7. ' the' → logprob: -7.837268829345703
    8. 'the' → logprob: -8.212268829345703
    9. 'cars' → logprob: -8.462268829345703
    10. ' le' → logprob: -8.712268829345703

Token 154: ' voiture' (ID: 49186)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.8364235162734985
    2. 'first' → logprob: -1.7114235162734985
    3. 'lan' → logprob: -1.9614235162734985
    4. ' lanes' → logprob: -2.586423397064209
    5. ' first' → logprob: -2.711423397064209
    6. ' première' → logprob: -3.336423397064209
    7. ' premiere' → logprob: -4.336423397064209
    8. 'lane' → logprob: -4.836423397064209
    9. 'car' → logprob: -5.211423397064209
    10. 'front' → logprob: -5.336423397064209

Token 155: ' en' (ID: 469)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.2526770532131195
    2. '           ' → logprob: -2.5026769638061523
    3. 's' → logprob: -2.7526769638061523
    4. '   ' → logprob: -3.6276769638061523
    5. 'from' → logprob: -5.127676963806152
    6. '       ' → logprob: -5.127676963806152
    7. ')' → logprob: -5.377676963806152
    8. '(l' → logprob: -5.377676963806152
    9. 'de' → logprob: -5.752676963806152
    10. 'l' → logprob: -5.752676963806152

Token 156: ' tête' (ID: 36447)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1357261687517166
    2. 'front' → logprob: -3.5107262134552
    3. ' tete' → logprob: -3.6357262134552
    4. 'deque' → logprob: -4.010725975036621
    5. 'queue' → logprob: -4.135725975036621
    6. ' tête' → logprob: -4.760725975036621
    7. ' ' → logprob: -5.135725975036621
    8. 'prem' → logprob: -5.385725975036621
    9. 'head' → logprob: -5.385725975036621
    10. ' t' → logprob: -6.260725975036621

Token 157: ' et' (ID: 859)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.5338723063468933
    2. '           ' → logprob: -1.033872365951538
    3. '(l' → logprob: -3.408872365951538
    4. '       ' → logprob: -4.783872127532959
    5. ' lanes' → logprob: -5.408872127532959
    6. '().' → logprob: -6.408872127532959
    7. '()' → logprob: -6.408872127532959
    8. '   ' → logprob: -6.783872127532959
    9. '               ' → logprob: -7.283872127532959
    10. '            
' → logprob: -7.408872127532959

Token 158: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020692525431513786
    2. ' print' → logprob: -6.627069473266602
    3. '           ' → logprob: -7.377069473266602
    4. 'im' → logprob: -9.627069473266602
    5. 'return' → logprob: -11.252069473266602
    6. ' impr' → logprob: -12.252069473266602
    7. '
' → logprob: -13.002069473266602
    8. 'pr' → logprob: -13.002069473266602
    9. '	print' → logprob: -13.252069473266602
    10. 'pop' → logprob: -13.252069473266602

Token 159: ' son' (ID: 2391)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.0040514483116567135
    2. '(l' → logprob: -6.004051685333252
    3. ' lanes' → logprob: -6.504051685333252
    4. '           ' → logprob: -10.129051208496094
    5. 'l' → logprob: -11.629051208496094
    6. '(' → logprob: -11.879051208496094
    7. 'lane' → logprob: -12.004051208496094
    8. ' lan' → logprob: -12.254051208496094
    9. 'len' → logprob: -13.254051208496094
    10. ' (' → logprob: -13.254051208496094

Token 160: ' numéro' (ID: 65036)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4001917243003845
    2. ' numéro' → logprob: -1.4001917839050293
    3. ' num' → logprob: -3.5251917839050293
    4. 'ident' → logprob: -3.9001917839050293
    5. 'numero' → logprob: -4.025191783905029
    6. ' number' → logprob: -5.150191783905029
    7. 'number' → logprob: -6.275191783905029
    8. ' numero' → logprob: -6.525191783905029
    9. 'car' → logprob: -6.650191783905029
    10. ' ident' → logprob: -6.775191783905029

Token 161: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009989102371037006
    2. 'print' → logprob: -5.634989261627197
    3. ' if' → logprob: -5.634989261627197
    4. 'if' → logprob: -6.259989261627197
    5. 'car' → logprob: -8.134988784790039
    6. ' print' → logprob: -8.259988784790039
    7. '
' → logprob: -9.009988784790039
    8. ' car' → logprob: -9.509988784790039
    9. '       ' → logprob: -10.009988784790039
    10. '```' → logprob: -10.009988784790039

Token 162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24112559854984283
    2. ' if' → logprob: -1.7411255836486816
    3. 'if' → logprob: -4.116125583648682
    4. '
' → logprob: -4.366125583648682
    5. ' car' → logprob: -5.491125583648682
    6. '            
' → logprob: -6.241125583648682
    7. 'car' → logprob: -6.866125583648682
    8. 'print' → logprob: -7.116125583648682
    9. ' print' → logprob: -7.241125583648682
    10. '```' → logprob: -7.991125583648682

Token 163: ' finished' (ID: 11684)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8042958974838257
    2. ' if' → logprob: -1.4292958974838257
    3. ' print' → logprob: -1.9292958974838257
    4. 'if' → logprob: -2.1792960166931152
    5. 'car' → logprob: -3.0542960166931152
    6. ' car' → logprob: -5.429296016693115
    7. ' removed' → logprob: -6.679296016693115
    8. 'removed' → logprob: -7.054296016693115
    9. '           ' → logprob: -7.179296016693115
    10. '   ' → logprob: -9.679295539855957

Token 164: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.017726195976138115
    2. ' =' → logprob: -4.142726421356201
    3. '=' → logprob: -7.517726421356201
    4. '_lane' → logprob: -7.517726421356201
    5. 'car' → logprob: -8.142725944519043
    6. '_' → logprob: -8.892725944519043
    7. 'Car' → logprob: -9.767725944519043
    8. '_c' → logprob: -10.267725944519043
    9. '_vehicle' → logprob: -11.267725944519043
    10. '_id' → logprob: -11.517725944519043

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693829834461212
    2. '=' → logprob: -2.1269383430480957
    3. ' ' → logprob: -11.876937866210938
    4. '   ' → logprob: -14.126937866210938
    5. ')' → logprob: -14.501937866210938
    6. ',' → logprob: -14.626937866210938
    7. '	' → logprob: -15.251937866210938
    8. 's' → logprob: -15.501937866210938
    9. '  ' → logprob: -15.501937866210938
    10. '=l' → logprob: -16.126937866210938

Token 166: ' lanes' (ID: 72055)
  Prédit: 'lan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lan' → logprob: -0.00523719098418951
    2. ' lanes' → logprob: -5.255237102508545
    3. 'lane' → logprob: -14.005237579345703
    4. '```' → logprob: -14.255237579345703
    5. 'layers' → logprob: -14.255237579345703
    6. 'len' → logprob: -15.505237579345703
    7. '   ' → logprob: -15.630237579345703
    8. 'lines' → logprob: -15.880237579345703
    9. 'laps' → logprob: -16.005237579345703
    10. ' lan' → logprob: -16.130237579345703

Token 167: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -8.895480277715251e-06
    2. '[' → logprob: -12.125008583068848
    3. '[line' → logprob: -14.000008583068848
    4. '	l' → logprob: -14.000008583068848
    5. '[layer' → logprob: -14.875008583068848
    6. '   ' → logprob: -15.250008583068848
    7. ',l' → logprob: -15.500008583068848
    8. ' [' → logprob: -15.875008583068848
    9. '```' → logprob: -15.875008583068848
    10. '\[' → logprob: -16.000009536743164

Token 168: 'ane' (ID: 1986)
  Prédit: 'ane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ane' → logprob: -0.010068533942103386
    2. 'lane' → logprob: -4.885068416595459
    3. 'anes' → logprob: -6.385068416595459
    4. 'ne' → logprob: -8.260068893432617
    5. 'e' → logprob: -8.635068893432617
    6. '[' → logprob: -9.010068893432617
    7. ' lane' → logprob: -9.260068893432617
    8. '           ' → logprob: -11.135068893432617
    9. 'anel' → logprob: -11.135068893432617
    10. 'ine' → logprob: -11.260068893432617

Token 169: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.001352379797026515
    2. 'num' → logprob: -6.626352310180664
    3. '[l' → logprob: -11.876352310180664
    4. 'lane' → logprob: -12.126352310180664
    5. 'Num' → logprob: -12.501352310180664
    6. '```' → logprob: -13.001352310180664
    7. '][' → logprob: -13.876352310180664
    8. '[' → logprob: -14.126352310180664
    9. 'um' → logprob: -14.251352310180664
    10. 'm' → logprob: -14.376352310180664

Token 170: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.76472008228302
    2. '.p' → logprob: -1.01472008228302
    3. ').' → logprob: -1.76472008228302
    4. '.pop' → logprob: -8.13971996307373
    5. 'p' → logprob: -8.51471996307373
    6. '.' → logprob: -8.63971996307373
    7. '().' → logprob: -9.51471996307373
    8. '}.' → logprob: -11.76471996307373
    9. ' .' → logprob: -11.88971996307373
    10. ')' → logprob: -12.01471996307373

Token 171: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.650518920039758e-06
    2. 'pop' → logprob: -13.125003814697266
    3. '.p' → logprob: -13.500003814697266
    4. '```' → logprob: -16.375003814697266
    5. ' p' → logprob: -18.500003814697266
    6. 'opleft' → logprob: -19.000003814697266
    7. '
' → logprob: -21.500003814697266
    8. '	p' → logprob: -21.750003814697266
    9. '`' → logprob: -22.750003814697266
    10. '*p' → logprob: -22.875003814697266

Token 172: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0022492227144539356
    2. 'ople' → logprob: -6.252249240875244
    3. 'op' → logprob: -8.252248764038086
    4. 'opl' → logprob: -9.752248764038086
    5. 'opf' → logprob: -13.627248764038086
    6. 'oplevel' → logprob: -15.002248764038086
    7. 'o' → logprob: -17.377248764038086
    8. 'opt' → logprob: -17.377248764038086
    9. 'opy' → logprob: -17.377248764038086
    10. 'opr' → logprob: -17.502248764038086

Token 173: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011774895247071981
    2. '()
' → logprob: -6.7511773109436035
    3. '(' → logprob: -12.501177787780762
    4. '()

' → logprob: -13.251177787780762
    5. '()]' → logprob: -14.751177787780762
    6. '()
' → logprob: -14.751177787780762
    7. ' ()' → logprob: -15.376177787780762
    8. '())' → logprob: -15.626177787780762
    9. '()\' → logprob: -15.626177787780762
    10. '()`' → logprob: -16.001176834106445

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07983522862195969
    2. 'print' → logprob: -2.5798351764678955
    3. ' print' → logprob: -7.579835414886475
    4. '
' → logprob: -8.079834938049316
    5. '       ' → logprob: -9.954834938049316
    6. '   ' → logprob: -9.954834938049316
    7. '```' → logprob: -10.579834938049316
    8. '            
' → logprob: -13.204834938049316
    9. '<|end|>' → logprob: -15.079834938049316
    10. '
' → logprob: -15.204834938049316

Token 175: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.500000953674316
    3. '           ' → logprob: -16.0
    4. '```' → logprob: -17.25
    5. '   ' → logprob: -17.625
    6. '       ' → logprob: -18.25
    7. '
' → logprob: -21.375
    8. '``' → logprob: -22.375
    9. '#print' → logprob: -23.5
    10. '	print' → logprob: -23.625

Token 176: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0002980432182084769
    2. '(' → logprob: -8.250298500061035
    3. '(fin' → logprob: -10.250298500061035
    4. 'finished' → logprob: -14.125298500061035
    5. ' (' → logprob: -14.375298500061035
    6. '(final' → logprob: -17.00029754638672
    7. '(F' → logprob: -17.25029754638672
    8. ' finished' → logprob: -17.87529754638672
    9. '(fi' → logprob: -18.62529754638672
    10. '(found' → logprob: -18.75029754638672

Token 177: 'inished' (ID: 67941)
  Prédit: 'inished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inished' → logprob: -1.0280383548888494e-06
    2. 'ished' → logprob: -14.500000953674316
    3. 'in' → logprob: -15.000000953674316
    4. 'ins' → logprob: -16.750001907348633
    5. 'inis' → logprob: -16.875001907348633
    6. 'n' → logprob: -17.000001907348633
    7. 'inish' → logprob: -17.125001907348633
    8. 'finished' → logprob: -17.500001907348633
    9. 'insi' → logprob: -18.500001907348633
    10. 'ini' → logprob: -20.500001907348633

Token 178: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -1.1875571544806007e-05
    2. 'ed' → logprob: -13.000011444091797
    3. 'finished' → logprob: -13.250011444091797
    4. '_finished' → logprob: -13.250011444091797
    5. ')_' → logprob: -13.375011444091797
    6. 'd' → logprob: -13.375011444091797
    7. 'car' → logprob: -14.125011444091797
    8. 'e' → logprob: -14.375011444091797
    9. '_' → logprob: -15.250011444091797
    10. 'f' → logprob: -15.500011444091797

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.000001907348633
    4. '())' → logprob: -17.125001907348633
    5. '()' → logprob: -17.250001907348633
    6. ')`' → logprob: -17.250001907348633
    7. '))' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.125001907348633
    9. ')}' → logprob: -18.750001907348633
    10. '       ' → logprob: -18.750001907348633

Token 180: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7482655644416809
    2. 'if' → logprob: -1.1232655048370361
    3. '<|end|>' → logprob: -1.6232655048370361
    4. '```' → logprob: -6.623265743255615
    5. '

' → logprob: -6.873265743255615
    6. ' if' → logprob: -7.248265743255615
    7. '\n' → logprob: -7.373265743255615
    8. '<|end|>' → logprob: -8.498265266418457
    9. ')' → logprob: -9.248265266418457
    10. '#' → logprob: -9.498265266418457

Token 181: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10039029270410538
    2. '__' → logprob: -2.3503901958465576
    3. '_' → logprob: -9.225390434265137
    4. ' ' → logprob: -9.725390434265137
    5. '_name' → logprob: -11.725390434265137
    6. 'name' → logprob: -12.100390434265137
    7. ' ' → logprob: -12.100390434265137
    8. '___' → logprob: -13.725390434265137
    9. 'if' → logprob: -14.100390434265137
    10. ' _' → logprob: -14.100390434265137

Token 182: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09102646261453629
    2. ' ==' → logprob: -2.591026544570923
    3. ' __' → logprob: -4.591026306152344
    4. '==' → logprob: -6.466026306152344
    5. 'name' → logprob: -8.841026306152344
    6. 'if' → logprob: -10.216026306152344
    7. '__[' → logprob: -10.841026306152344
    8. '.__' → logprob: -11.091026306152344
    9. '__.__' → logprob: -11.216026306152344
    10. '_' → logprob: -11.216026306152344

Token 183: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.180258191714529e-06
    2. '==' → logprob: -12.375008583068848
    3. '__.__' → logprob: -12.625008583068848
    4. '__.' → logprob: -14.625008583068848
    5. ' ==' → logprob: -16.87500762939453
    6. '____' → logprob: -17.50000762939453
    7. '___' → logprob: -17.62500762939453
    8. '_' → logprob: -17.87500762939453
    9. '__["' → logprob: -18.87500762939453
    10. '__('' → logprob: -19.25000762939453

Token 184: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8662930130958557
    2. ' ==' → logprob: -1.241292953491211
    3. '__' → logprob: -1.241292953491211
    4. '=="' → logprob: -6.616292953491211
    5. '=='' → logprob: -9.991292953491211
    6. '_' → logprob: -10.616292953491211
    7. '.__' → logprob: -11.366292953491211
    8. '=' → logprob: -11.491292953491211
    9. '.' → logprob: -11.741292953491211
    10. '__.__' → logprob: -11.991292953491211

Token 185: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048597704619169235
    2. ''' → logprob: -3.048597812652588
    3. ' "__' → logprob: -11.79859733581543
    4. '__' → logprob: -13.04859733581543
    5. ' '__' → logprob: -15.29859733581543
    6. '"user' → logprob: -16.67359733581543
    7. '"name' → logprob: -16.79859733581543
    8. ''"' → logprob: -17.92359733581543
    9. '   ' → logprob: -18.29859733581543
    10. '"class' → logprob: -18.42359733581543

Token 186: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005773392622359097
    2. '__' → logprob: -7.750577449798584
    3. 'name' → logprob: -9.000576972961426
    4. '"' → logprob: -10.750576972961426
    5. ' main' → logprob: -14.250576972961426
    6. '_main' → logprob: -14.625576972961426
    7. 'built' → logprob: -15.625576972961426
    8. '```' → logprob: -15.750576972961426
    9. '__":
' → logprob: -16.000577926635742
    10. ''' → logprob: -16.250577926635742

Token 187: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011107368394732475
    2. '__' → logprob: -4.511107444763184
    3. '__':
' → logprob: -9.761107444763184
    4. '__.' → logprob: -14.011107444763184
    5. '__["' → logprob: -14.386107444763184
    6. '__.__' → logprob: -15.511107444763184
    7. '_' → logprob: -16.136106491088867
    8. '__:' → logprob: -16.386106491088867
    9. '__
' → logprob: -17.386106491088867
    10. '__("' → logprob: -17.636106491088867

Token 188: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16058550775051117
    2. '   ' → logprob: -2.160585403442383
    3. ' main' → logprob: -3.660585403442383
    4. '	main' → logprob: -4.910585403442383
    5. ' ' → logprob: -12.285585403442383
    6. '_main' → logprob: -12.785585403442383
    7. '   ' → logprob: -13.660585403442383
    8. '(main' → logprob: -13.910585403442383
    9. '    
' → logprob: -14.035585403442383
    10. '  ' → logprob: -14.410585403442383

Token 189: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.014165272004902363
    2. ' main' → logprob: -4.26416540145874
    3. '	main' → logprob: -13.389164924621582
    4. '   ' → logprob: -15.389164924621582
    5. '_main' → logprob: -18.8891658782959
    6. '(main' → logprob: -19.2641658782959
    7. ' ' → logprob: -19.7641658782959
    8. '.main' → logprob: -20.5141658782959
    9. '  ' → logprob: -20.6391658782959
    10. 'Main' → logprob: -21.0141658782959

Token 190: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 188
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 157
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 51.60%
Précision (top 10): 83.51%
================================================================================
