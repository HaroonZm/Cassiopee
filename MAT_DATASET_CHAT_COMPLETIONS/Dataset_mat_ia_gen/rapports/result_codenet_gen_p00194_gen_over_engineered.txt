================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict, deque
import sys
import heapq

# Abstraction for a 2D grid coordinate system using named roads
class Coordinate:
    def __init__(self, east_west: str, north_south: int):
        self.east_west = east_west
        self.north_south = north_south

    @staticmethod
    def from_str(s: str):
        # parse strings like 'a-1'
        ew, ns = s.split('-')
        return Coordinate(ew, int(ns))

    def __str__(self):
        return f"{self.east_west}-{self.north_south}"

    def __repr__(self):
        return str(self)

    def __eq__(self, other):
        if not isinstance(other, Coordinate):
            return False
        return self.east_west == other.east_west and self.north_south == other.north_south

    def __hash__(self):
        return hash((self.east_west, self.north_south))

    # For sorting or comparisons
    def __lt__(self, other):
        if self.east_west != other.east_west:
            return self.east_west < other.east_west
        return self.north_south < other.north_south

# Represents a traffic signal with a cycle
class TrafficSignal:
    def __init__(self, coord: Coordinate, cycle: int):
        self.coord = coord
        self.cycle = cycle

    def is_green_at(self, direction: str, time: int) -> bool:
        # Direction: one of 'N', 'S', 'E', 'W'
        # Initial state at t=0: NS green, EW red.
        # signal toggles every k minutes; green for NS then EW alternating.
        # Return True if green on approach direction at given time.
        phase_time = time % (2 * self.cycle)
        ns_green = phase_time < self.cycle
        if direction in ('N', 'S'):
            return ns_green
        else:
            return not ns_green

# Represents a road between two intersections
class Road:
    def __init__(self, coord1: Coordinate, coord2: Coordinate, base_time: int):
        self.coord1 = coord1
        self.coord2 = coord2
        self.base_time = base_time
        self.congested_delay = 0
        self.closed = False

    def travel_time(self):
        if self.closed:
            return None
        return self.base_time + self.congested_delay

    def connects(self, c1: Coordinate, c2: Coordinate) -> bool:
        return (self.coord1 == c1 and self.coord2 == c2) or (self.coord1 == c2 and self.coord2 == c1)

    def other_end(self, c: Coordinate) -> Coordinate:
        if c == self.coord1:
            return self.coord2
        elif c == self.coord2:
            return self.coord1
        else:
            return None

# Encapsulates the whole city map, roads and signals
class CityMap:
    def __init__(self, M: int, N: int, base_travel_time: int):
        self.M = M
        self.N = N
        self.base_travel_time = base_travel_time
        self.signals = dict()  # Coordinate -> TrafficSignal
        self.roads = dict()    # frozenset{Coordinate, Coordinate} -> Road
        # Adjacent intersections by coordinate
        self.adjacency = defaultdict(list)
        # Precompute valid intersections for grid
        self.valid_intersections = set()
        ew_roads = [chr(ord('a') + i) for i in range(M)]
        ns_roads = [i + 1 for i in range(N)]
        for ew in ew_roads:
            for ns in ns_roads:
                self.valid_intersections.add(Coordinate(ew, ns))

        # Construct full grid roads (all connections between adjacent intersections)
        self._build_all_roads()

    def _build_all_roads(self):
        # Add roads connecting adjacent intersections East-West and North-South
        for coord in self.valid_intersections:
            # East neighbor
            ew_ord = ord(coord.east_west)
            east_ew_ord = ew_ord + 1
            if east_ew_ord < ord('a') + self.M:
                east_coord = Coordinate(chr(east_ew_ord), coord.north_south)
                self.add_road(coord, east_coord, self.base_travel_time)
            # South neighbor
            south_ns = coord.north_south + 1
            if south_ns <= self.N:
                south_coord = Coordinate(coord.east_west, south_ns)
                self.add_road(coord, south_coord, self.base_travel_time)

    def add_road(self, c1: Coordinate, c2: Coordinate, base_time: int):
        key = frozenset([c1, c2])
        if key not in self.roads:
            road = Road(c1, c2, base_time)
            self.roads[key] = road
            self.adjacency[c1].append(c2)
            self.adjacency[c2].append(c1)
        else:
            # Possibly update base_time if different?
            pass

    def set_signal(self, coord: Coordinate, cycle: int):
        self.signals[coord] = TrafficSignal(coord, cycle)

    def close_road(self, c1: Coordinate, c2: Coordinate):
        key = frozenset([c1, c2])
        if key in self.roads:
            self.roads[key].closed = True

    def set_congested_delay(self, c1: Coordinate, c2: Coordinate, delay: int):
        key = frozenset([c1, c2])
        if key in self.roads:
            self.roads[key].congested_delay = delay

    def get_road_between(self, c1: Coordinate, c2: Coordinate) -> Road:
        key = frozenset([c1, c2])
        return self.roads.get(key, None)

    def has_signal(self, coord: Coordinate) -> bool:
        return coord in self.signals

    def get_signal(self, coord: Coordinate) -> TrafficSignal:
        return self.signals.get(coord, None)

# Enumeration to represent movement directions
class Direction:
    # Mappings for coordinate axis changes
    EAST = 'E'
    WEST = 'W'
    NORTH = 'N'
    SOUTH = 'S'

    @staticmethod
    def between(c_from: Coordinate, c_to: Coordinate):
        # Determine direction of movement from c_from to c_to
        if c_from.east_west == c_to.east_west:
            if c_from.north_south < c_to.north_south:
                return Direction.SOUTH
            else:
                return Direction.NORTH
        elif c_from.north_south == c_to.north_south:
            if c_from.east_west < c_to.east_west:
                return Direction.EAST
            else:
                return Direction.WEST
        else:
            return None

    @staticmethod
    def opposite(direction: str):
        return {'N':'S', 'S':'N', 'E':'W', 'W':'E'}[direction]

# State for Dijkstra's with directions and time
class State:
    def __init__(self, coordinate: Coordinate, facing: str, time: int):
        self.coordinate = coordinate
        self.facing = facing
        self.time = time

    def __lt__(self, other):
        return self.time < other.time

# A complex car navigation system encapsulation
class CarNavigationSystem:
    def __init__(self, city_map: CityMap, start: Coordinate, destination: Coordinate):
        self.city_map = city_map
        self.start = start
        self.destination = destination
        self.max_time_limit = 100  # given problem constraint

    def compute_shortest_time(self) -> int:
        # Use Dijkstra but state includes facing direction and current intersection and time
        # Facing direction at start = East, time=0
        # At each intersection, cannot do U-turn

        # Distances dictionary: (Coordinate, facing) -> minimum time
        dist = dict()

        # Priority queue: (time, Coordinate, facing)
        heap = []
        start_facing = Direction.EAST
        start_state = State(self.start, start_facing, 0)
        dist[(self.start, start_facing)] = 0
        heapq.heappush(heap, (0, start_state))

        while heap:
            current_time, current_state = heapq.heappop(heap)
            c = current_state.coordinate
            f = current_state.facing
            t = current_state.time
            if (c, f) not in dist or dist[(c, f)] < t:
                continue
            if c == self.destination:
                # Destination reached
                return t

            # Explore neighbors
            for neighbor in self.city_map.adjacency[c]:
                road = self.city_map.get_road_between(c, neighbor)
                if road is None or road.closed:
                    continue

                travel_time = road.travel_time()
                if travel_time is None:
                    continue

                # Determine direction from c to neighbor
                move_dir = Direction.between(c, neighbor)
                if move_dir is None:
                    continue

                # No U-turn
                if Direction.opposite(f) == move_dir:
                    continue

                # Calculate arrival time at neighbor
                depart_time = t

                arrival_time = depart_time + travel_time

                # Must check signal at neighbor at arrival_time for movement direction
                # The direction we arrive from is opposite of move_dir
                # Because signal controls arrival into intersection
                if self.city_map.has_signal(neighbor):
                    signal = self.city_map.get_signal(neighbor)
                    arrive_dir = Direction.opposite(move_dir)  # direction from which we arrive
                    # If red at arrival time, must wait until green
                    if not signal.is_green_at(arrive_dir, arrival_time):
                        # Wait until next green
                        cycle = signal.cycle
                        # calculate wait time until green for arrive_dir
                        # cycle: green time is first k, red next k, repeat
                        # if arrive_dir is NS, green in [0,k), red in [k,2k)
                        # if arrive_dir is EW, inverse
                        time_in_cycle = arrival_time % (2*cycle)
                        if arrive_dir in ('N','S'):
                            # NS green if time_in_cycle < k
                            wait = 0
                            if time_in_cycle >= cycle:
                                wait = (2*cycle) - time_in_cycle
                        else:
                            # EW green if time_in_cycle >= k
                            wait = 0
                            if time_in_cycle < cycle:
                                wait = cycle - time_in_cycle
                        arrival_time += wait

                # After arriving, can face any direction except the opposite direction of arrival_dir
                # But from problem: truck can only turn directions at intersection
                # It can face N, S, E, W as long as not the direction of coming back (u-turn)
                # For next edge, facing is the direction truck will go,
                # So set facing = move_dir (direction to neighbor)
                new_facing = move_dir

                # Check dist and update
                key = (neighbor, new_facing)
                if key not in dist or dist[key] > arrival_time:
                    dist[key] = arrival_time
                    if arrival_time <= self.max_time_limit:
                        heapq.heappush(heap, (arrival_time, State(neighbor, new_facing, arrival_time)))

        # If no path found within limit, problem states reachable within 100 minutes.
        # So return something large or no solution fallback
        return -1

# Main input/output processing and calculation engine
class Solver:
    def __init__(self):
        self.results = []

    def solve(self):
        input_lines = sys.stdin.read().strip().split('\n')
        idx = 0
        while idx < len(input_lines):
            line = input_lines[idx].strip()
            if line == "0 0":
                break
            if not line:
                idx += 1
                continue
            M, N = map(int, line.split())
            idx += 1
            D = int(input_lines[idx].strip())
            idx += 1
            ns = int(input_lines[idx].strip())
            idx += 1

            city_map = CityMap(M, N, D)

            # Signals
            for _ in range(ns):
                parts = input_lines[idx].strip().split()
                idx += 1
                coord = Coordinate.from_str(parts[0])
                cycle = int(parts[1])
                city_map.set_signal(coord, cycle)

            nc = int(input_lines[idx].strip())
            idx += 1
            # Closed roads
            for _ in range(nc):
                parts = input_lines[idx].strip().split()
                idx += 1
                c1 = Coordinate.from_str(parts[0])
                c2 = Coordinate.from_str(parts[1])
                city_map.close_road(c1, c2)

            nj = int(input_lines[idx].strip())
            idx += 1
            # Congested roads
            for _ in range(nj):
                parts = input_lines[idx].strip().split()
                idx += 1
                c1 = Coordinate.from_str(parts[0])
                c2 = Coordinate.from_str(parts[1])
                delay = int(parts[2])
                city_map.set_congested_delay(c1, c2, delay)

            # Start and destination coordinates
            sd = input_lines[idx].strip().split()
            idx += 1
            start = Coordinate.from_str(sd[0])
            destination = Coordinate.from_str(sd[1])

            nav = CarNavigationSystem(city_map, start, destination)
            shortest_time = nav.compute_shortest_time()
            self.results.append(str(shortest_time))

        # Output results
        print('\n'.join(self.results))


if __name__ == "__main__":
    Solver().solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.037925124168396
    2. 'default' → logprob: -1.162925124168396
    3. 'abc' → logprob: -1.787925124168396
    4. 'Counter' → logprob: -2.4129252433776855
    5. ' defaultdict' → logprob: -2.7879252433776855
    6. 'named' → logprob: -5.4129252433776855
    7. ' Counter' → logprob: -5.5379252433776855
    8. ' abc' → logprob: -6.0379252433776855
    9. ' deque' → logprob: -6.4129252433776855
    10. '```' → logprob: -6.7879252433776855

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015419998671859503
    2. '(
' → logprob: -7.126542091369629
    3. '\' → logprob: -8.501542091369629
    4. '\(' → logprob: -8.626542091369629
    5. '\n' → logprob: -9.126542091369629
    6. 'newline' → logprob: -10.251542091369629
    7. '```' → logprob: -10.376542091369629
    8. '()' → logprob: -10.501542091369629
    9. '(

' → logprob: -10.626542091369629
    10. '
' → logprob: -11.126542091369629

Token 5: ' deque' (ID: 90347)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.3504667282104492
    2. 'Counter' → logprob: -1.6004667282104492
    3. ' deque' → logprob: -2.975466728210449
    4. 'deque' → logprob: -3.475466728210449
    5. ' Ordered' → logprob: -4.725466728210449
    6. 'Ordered' → logprob: -5.975466728210449
    7. ' named' → logprob: -8.72546672821045
    8. ' abc' → logprob: -8.97546672821045
    9. 'named' → logprob: -9.60046672821045
    10. 'abc' → logprob: -10.35046672821045

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00790258776396513
    2. '(
' → logprob: -5.8829026222229
    3. '\' → logprob: -6.5079026222229
    4. '\n' → logprob: -6.8829026222229
    5. ',' → logprob: -7.5079026222229
    6. '```' → logprob: -7.8829026222229
    7. 'newline' → logprob: -8.257902145385742
    8. '\(' → logprob: -8.382902145385742
    9. '' → logprob: -8.757902145385742
    10. '
' → logprob: -8.882902145385742

Token 7: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6058382391929626
    2. '\' → logprob: -1.9808382987976074
    3. '\n' → logprob: -2.1058382987976074
    4. '```' → logprob: -2.7308382987976074
    5. '

' → logprob: -4.230838298797607
    6. ',' → logprob: -4.230838298797607
    7. 'd' → logprob: -4.230838298797607
    8. '(' → logprob: -4.355838298797607
    9. '' → logprob: -4.605838298797607
    10. ' 
' → logprob: -4.855838298797607

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10596281290054321
    2. ' os' → logprob: -2.9809627532958984
    3. ' collections' → logprob: -4.105962753295898
    4. ' heap' → logprob: -4.230962753295898
    5. ' threading' → logprob: -4.730962753295898
    6. ' itertools' → logprob: -5.605962753295898
    7. ' json' → logprob: -5.855962753295898
    8. ' queue' → logprob: -6.980962753295898
    9. ' re' → logprob: -6.980962753295898
    10. ' random' → logprob: -7.855962753295898

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5031896829605103
    2. '\' → logprob: -1.5031896829605103
    3. '.' → logprob: -2.3781895637512207
    4. '
' → logprob: -3.0031895637512207
    5. '```' → logprob: -4.378189563751221
    6. '.
' → logprob: -5.253189563751221
    7. 'def' → logprob: -5.628189563751221
    8. 'for' → logprob: -6.628189563751221
    9. '

' → logprob: -6.628189563751221
    10. 'import' → logprob: -6.878189563751221

Token 10: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19226694107055664
    2. '\' → logprob: -2.5672669410705566
    3. '\n' → logprob: -2.6922669410705566
    4. '```' → logprob: -3.9422669410705566
    5. '.readline' → logprob: -6.317266941070557
    6. 'import' → logprob: -6.442266941070557
    7. '[' → logprob: -6.692266941070557
    8. '
' → logprob: -6.692266941070557
    9. ',' → logprob: -7.192266941070557
    10. '.
' → logprob: -7.317266941070557

Token 11: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.19248349964618683
    2. ' heap' → logprob: -1.9424835443496704
    3. ' threading' → logprob: -3.817483425140381
    4. 'os' → logprob: -5.692483425140381
    5. ' itertools' → logprob: -5.692483425140381
    6. 'heap' → logprob: -6.817483425140381
    7. ' re' → logprob: -7.067483425140381
    8. ' math' → logprob: -7.442483425140381
    9. ' collections' → logprob: -7.942483425140381
    10. ' io' → logprob: -9.692483901977539

Token 12: 'q' (ID: 80)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48963069915771484
    2. 'q' → logprob: -1.1146306991577148
    3. '.' → logprob: -2.864630699157715
    4. '#' → logprob: -7.614630699157715
    5. 'space' → logprob: -7.614630699157715
    6. ')' → logprob: -8.114630699157715
    7. ',' → logprob: -8.364630699157715
    8. '=' → logprob: -8.864630699157715
    9. ' ' → logprob: -8.989630699157715
    10. '[' → logprob: -9.489630699157715

Token 13: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4777700901031494
    2. '\' → logprob: -1.3527700901031494
    3. '
' → logprob: -2.9777700901031494
    4. '```' → logprob: -3.9777700901031494
    5. 'def' → logprob: -3.9777700901031494
    6. '.' → logprob: -4.47776985168457
    7. '' → logprob: -4.97776985168457
    8. '#' → logprob: -5.85276985168457
    9. '

' → logprob: -6.10276985168457
    10. '<|end|>' → logprob: -6.10276985168457

Token 14: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4642723798751831
    2. 'def' → logprob: -2.5892724990844727
    3. '\' → logprob: -2.7142724990844727
    4. 'd' → logprob: -3.2142724990844727
    5. '```' → logprob: -3.2142724990844727
    6. '`' → logprob: -3.5892724990844727
    7. '#' → logprob: -3.8392724990844727
    8. '
' → logprob: -3.8392724990844727
    9. 'class' → logprob: -3.9642724990844727
    10. '\n' → logprob: -4.214272499084473

Token 15: ' Ab' (ID: 3483)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13261198997497559
    2. ' class' → logprob: -3.3826119899749756
    3. ' #' → logprob: -3.8826119899749756
    4. 'def' → logprob: -4.007612228393555
    5. 'class' → logprob: -4.257612228393555
    6. ' `' → logprob: -5.382612228393555
    7. ' def' → logprob: -5.382612228393555
    8. '#' → logprob: -5.507612228393555
    9. ' defaultdict' → logprob: -6.382612228393555
    10. 'A' → logprob: -6.507612228393555

Token 16: 'straction' (ID: 79887)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28773683309555054
    2. 'stract' → logprob: -2.0377368927001953
    3. 'c' → logprob: -3.6627368927001953
    4. 'ort' → logprob: -4.037736892700195
    5. 'solute' → logprob: -4.412736892700195
    6. 'b' → logprob: -4.412736892700195
    7. '#' → logprob: -4.662736892700195
    8. 'str' → logprob: -5.162736892700195
    9. 'solutely' → logprob: -5.162736892700195
    10. 'spath' → logprob: -5.287736892700195

Token 17: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09214935451745987
    2. ':' → logprob: -2.967149257659912
    3. ' class' → logprob: -3.967149257659912
    4. '
' → logprob: -4.842149257659912
    5. '_' → logprob: -5.592149257659912
    6. ' ' → logprob: -6.592149257659912
    7. '.' → logprob: -7.467149257659912
    8. '(' → logprob: -7.592149257659912
    9. '#' → logprob: -7.842149257659912
    10. ':
' → logprob: -7.842149257659912

Token 18: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5217034816741943
    2. ' class' → logprob: -1.8967034816741943
    3. 'class' → logprob: -1.8967034816741943
    4. ' the' → logprob: -2.8967034816741943
    5. 'Graph' → logprob: -4.271703720092773
    6. ' graph' → logprob: -4.646703720092773
    7. ' Graph' → logprob: -5.271703720092773
    8. ' an' → logprob: -5.646703720092773
    9. 'the' → logprob: -5.646703720092773
    10. ' Priority' → logprob: -5.646703720092773

Token 19: ' ' (ID: 220)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.10833863914012909
    2. ' priority' → logprob: -3.2333385944366455
    3. 'n' → logprob: -3.3583385944366455
    4. 'graph' → logprob: -5.358338832855225
    5. ' binary' → logprob: -5.608338832855225
    6. ' ' → logprob: -5.733338832855225
    7. 'priority' → logprob: -5.983338832855225
    8. ' node' → logprob: -6.108338832855225
    9. ' Graph' → logprob: -6.483338832855225
    10. ' min' → logprob: -6.483338832855225

Token 20: '2' (ID: 17)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.41637423634529114
    2. 'priority' → logprob: -1.1663742065429688
    3. 'Priority' → logprob: -4.166374206542969
    4. 'Graph' → logprob: -5.041374206542969
    5. 'class' → logprob: -6.291374206542969
    6. 'p' → logprob: -7.166374206542969
    7. 'min' → logprob: -7.166374206542969
    8. 'node' → logprob: -7.291374206542969
    9. 'prior' → logprob: -7.666374206542969
    10. 'binary' → logprob: -8.166374206542969

Token 21: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2527560293674469
    2. '0' → logprob: -2.377756118774414
    3. 'd' → logprob: -2.752756118774414
    4. ' ' → logprob: -3.502756118774414
    5. '-' → logprob: -3.752756118774414
    6. '-dimensional' → logprob: -4.627756118774414
    7. '_' → logprob: -7.377756118774414
    8. '-D' → logprob: -7.502756118774414
    9. ' D' → logprob: -8.377756118774414
    10. '-level' → logprob: -8.627756118774414

Token 22: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.10701669007539749
    2. 'grid' → logprob: -2.4820168018341064
    3. 'matrix' → logprob: -5.232016563415527
    4. ' matrix' → logprob: -5.732016563415527
    5. 'graph' → logprob: -6.107016563415527
    6. 'array' → logprob: -6.857016563415527
    7. ' graph' → logprob: -6.857016563415527
    8. '-grid' → logprob: -7.357016563415527
    9. '_grid' → logprob: -7.482016563415527
    10. ' array' → logprob: -7.482016563415527

Token 23: ' coordinate' (ID: 30380)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09679820388555527
    2. '
' → logprob: -3.2217981815338135
    3. ' class' → logprob: -3.2217981815338135
    4. '```' → logprob: -4.971798419952393
    5. ':' → logprob: -5.971798419952393
    6. '\n' → logprob: -6.846798419952393
    7. '\' → logprob: -7.471798419952393
    8. '' → logprob: -7.971798419952393
    9. '.' → logprob: -8.596797943115234
    10. '#' → logprob: -8.846797943115234

Token 24: ' system' (ID: 2420)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.23956678807735443
    2. ':' → logprob: -2.2395668029785156
    3. '```' → logprob: -3.1145668029785156
    4. ' class' → logprob: -3.7395668029785156
    5. '\n' → logprob: -4.489566802978516
    6. '\' → logprob: -4.489566802978516
    7. '#' → logprob: -5.864566802978516
    8. '`' → logprob: -5.864566802978516
    9. 's' → logprob: -5.989566802978516
    10. '
' → logprob: -6.114566802978516

Token 25: ' using' (ID: 2360)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.559112548828125
    2. 'class' → logprob: -1.434112548828125
    3. ':' → logprob: -3.184112548828125
    4. '\n' → logprob: -3.309112548828125
    5. '\' → logprob: -3.559112548828125
    6. '' → logprob: -3.684112548828125
    7. '#' → logprob: -3.809112548828125
    8. '```' → logprob: -4.434112548828125
    9. 'n' → logprob: -5.184112548828125
    10. 'd' → logprob: -5.309112548828125

Token 26: ' named' (ID: 11484)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -1.2122764587402344
    2. ' named' → logprob: -1.7122764587402344
    3. ' Point' → logprob: -1.7122764587402344
    4. ' a' → logprob: -1.9622764587402344
    5. ' tuples' → logprob: -2.4622764587402344
    6. ' class' → logprob: -2.8372764587402344
    7. 'named' → logprob: -4.087276458740234
    8. ' Named' → logprob: -5.337276458740234
    9. ' Tuple' → logprob: -5.462276458740234
    10. 'class' → logprob: -5.837276458740234

Token 27: ' roads' (ID: 30027)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.003828225424513221
    2. ' tuple' → logprob: -6.003828048706055
    3. 'tu' → logprob: -6.628828048706055
    4. ' tuples' → logprob: -10.878828048706055
    5. '_tuple' → logprob: -11.628828048706055
    6. 'Tuple' → logprob: -14.503828048706055
    7. 't' → logprob: -15.128828048706055
    8. ' ' → logprob: -15.128828048706055
    9. 'entity' → logprob: -15.753828048706055
    10. ' entity' → logprob: -15.878828048706055

Token 28: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09561508148908615
    2. '.' → logprob: -3.5956151485443115
    3. ':' → logprob: -4.220614910125732
    4. '#' → logprob: -4.220614910125732
    5. 'class' → logprob: -5.220614910125732
    6. ',' → logprob: -5.220614910125732
    7. '```' → logprob: -5.470614910125732
    8. '
' → logprob: -5.595614910125732
    9. '_
' → logprob: -5.595614910125732
    10. '' → logprob: -5.970614910125732

Token 29: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12198417633771896
    2. '#' → logprob: -3.1219842433929443
    3. '
' → logprob: -3.6219842433929443
    4. '' → logprob: -3.8719842433929443
    5. 'c' → logprob: -5.371984004974365
    6. '\' → logprob: -5.371984004974365
    7. '\n' → logprob: -5.746984004974365
    8. ' class' → logprob: -6.246984004974365
    9. '_' → logprob: -6.496984004974365
    10. 'n' → logprob: -6.496984004974365

Token 30: ' Coordinate' (ID: 78454)
  Prédit: ' Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Grid' → logprob: -0.02617952786386013
    2. ' Coordinate' → logprob: -4.651179313659668
    3. 'Grid' → logprob: -5.026179313659668
    4. ' Road' → logprob: -5.151179313659668
    5. ' City' → logprob: -6.151179313659668
    6. 'Coordinate' → logprob: -7.276179313659668
    7. ' Coord' → logprob: -8.151179313659668
    8. ' Point' → logprob: -8.401179313659668
    9. ' Graph' → logprob: -8.526179313659668
    10. 'Road' → logprob: -8.776179313659668

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022920407354831696
    2. '(' → logprob: -6.752292156219482
    3. 'System' → logprob: -7.377292156219482
    4. ':
' → logprob: -9.002291679382324
    5. '):' → logprob: -9.252291679382324
    6. '():' → logprob: -9.502291679382324
    7. 's' → logprob: -9.752291679382324
    8. '>:' → logprob: -10.627291679382324
    9. '(Point' → logprob: -10.752291679382324
    10. '(object' → logprob: -11.377291679382324

Token 32: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6383047699928284
    2. ':' → logprob: -1.1383047103881836
    3. '   ' → logprob: -2.0133047103881836
    4. ' ' → logprob: -4.888304710388184
    5. '<|end|>' → logprob: -6.013304710388184
    6. '```' → logprob: -6.263304710388184
    7. ' (' → logprob: -6.638304710388184
    8. '(object' → logprob: -6.638304710388184
    9. '    ' → logprob: -7.263304710388184
    10. '  ' → logprob: -7.388304710388184

Token 33: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5559725165367126
    2. ' def' → logprob: -1.1809725761413574
    3. '    ' → logprob: -2.6809725761413574
    4. 'def' (adapté à ' def') → logprob: -3.4309725761413574
    5. '    
' → logprob: -4.430972576141357
    6. ' ' → logprob: -6.305972576141357
    7. ' __' → logprob: -6.555972576141357
    8. ' 
' → logprob: -6.555972576141357
    9. '```' → logprob: -7.180972576141357
    10. '     
' → logprob: -7.305972576141357

Token 34: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6047994494438171
    2. 'init' → logprob: -0.8547994494438171
    3. ' init' → logprob: -3.979799509048462
    4. '__' → logprob: -5.229799270629883
    5. '_init' → logprob: -5.854799270629883
    6. ' def' → logprob: -7.229799270629883
    7. ' ' → logprob: -8.104799270629883
    8. 'int' → logprob: -8.854799270629883
    9. '```' → logprob: -9.604799270629883
    10. '_' → logprob: -9.979799270629883

Token 35: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.75
    3. ' init' → logprob: -17.875
    4. 'int' → logprob: -18.25
    5. 'inite' → logprob: -18.375
    6. 'in' → logprob: -18.5
    7. '_init' → logprob: -18.625
    8. '	init' → logprob: -20.125
    9. '-init' → logprob: -20.5
    10. '```' → logprob: -20.5

Token 36: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6368829011917114
    2. ' (' → logprob: -1.2618829011917114
    3. '__(' → logprob: -1.7618829011917114
    4. '<|end|>' → logprob: -4.636882781982422
    5. '__' → logprob: -5.886882781982422
    6. '__(
' → logprob: -6.886882781982422
    7. '(self' → logprob: -7.261882781982422
    8. '__((' → logprob: -7.636882781982422
    9. '<|end|>' → logprob: -7.761882781982422
    10. '__(*' → logprob: -8.761882781982422

Token 37: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040807779878377914
    2. ' self' → logprob: -5.504080772399902
    3. ')' → logprob: -14.129080772399902
    4. '(self' → logprob: -14.129080772399902
    5. '	self' → logprob: -15.254080772399902
    6. ' ' → logprob: -16.00408172607422
    7. '0' → logprob: -16.37908172607422
    8. '<|end|>' → logprob: -16.37908172607422
    9. ',self' → logprob: -16.87908172607422
    10. ',' → logprob: -16.87908172607422

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47490668296813965
    2. ' ,' → logprob: -0.9749066829681396
    3. '_coordinates' → logprob: -7.974906921386719
    4. 'coordinates' → logprob: -8.599906921386719
    5. '_,' → logprob: -9.224906921386719
    6. 'self' → logprob: -9.599906921386719
    7. '(' → logprob: -10.724906921386719
    8. ')' → logprob: -10.849906921386719
    9. ' )' → logprob: -10.849906921386719
    10. ' ' → logprob: -10.974906921386719

Token 39: ' east' (ID: 23557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0845813751220703
    2. ' x' → logprob: -1.2095813751220703
    3. ' self' → logprob: -1.4595813751220703
    4. 'self' → logprob: -2.4595813751220703
    5. ' name' → logprob: -3.9595813751220703
    6. ' road' → logprob: -4.33458137512207
    7. 'name' → logprob: -4.45958137512207
    8. 'road' → logprob: -6.83458137512207
    9. ' street' → logprob: -7.20958137512207
    10. ' row' → logprob: -10.20958137512207

Token 40: '_w' (ID: 3567)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1617845892906189
    2. '=' → logprob: -2.0367846488952637
    3. ' ,' → logprob: -4.536784648895264
    4. '_offset' → logprob: -6.411784648895264
    5. '):' → logprob: -6.411784648895264
    6. ' =' → logprob: -6.661784648895264
    7. '_' → logprob: -7.036784648895264
    8. ':' → logprob: -7.536784648895264
    9. '_direction' → logprob: -7.536784648895264
    10. ')' → logprob: -8.161784172058105

Token 41: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3123582601547241
    2. 'ay' → logprob: -2.0623583793640137
    3. '_' → logprob: -2.8123583793640137
    4. 'ays' → logprob: -3.1873583793640137
    5. 'ind' → logprob: -3.8123583793640137
    6. 'ards' → logprob: -5.062358379364014
    7. 'ard' → logprob: -5.437358379364014
    8. 'all' → logprob: -6.687358379364014
    9. '_ind' → logprob: -6.812358379364014
    10. '```' → logprob: -7.312358379364014

Token 42: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3110910654067993
    2. '_' → logprob: -2.4360909461975098
    3. '):' → logprob: -2.4360909461975098
    4. '=' → logprob: -2.6860909461975098
    5. ' ,' → logprob: -5.18609094619751
    6. '_ro' → logprob: -5.31109094619751
    7. '_direction' → logprob: -5.56109094619751
    8. '=None' → logprob: -5.81109094619751
    9. ' =' → logprob: -6.56109094619751
    10. ' ):' → logprob: -6.68609094619751

Token 43: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3076348900794983
    2. ' str' → logprob: -1.6826348304748535
    3. 'int' → logprob: -2.6826348304748535
    4. ' int' → logprob: -4.5576348304748535
    5. ')' → logprob: -10.682635307312012
    6. 'bool' → logprob: -10.932635307312012
    7. '[str' → logprob: -12.432635307312012
    8. 'float' → logprob: -12.432635307312012
    9. ' ' → logprob: -12.557635307312012
    10. ' bool' → logprob: -12.682635307312012

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03155655786395073
    2. '):' → logprob: -3.5315566062927246
    3. ' ,' → logprob: -6.656556606292725
    4. ')' → logprob: -8.781556129455566
    5. ':' → logprob: -8.781556129455566
    6. '   ' → logprob: -9.781556129455566
    7. '       ' → logprob: -10.031556129455566
    8. '<|end|>' → logprob: -10.406556129455566
    9. ' ' → logprob: -10.906556129455566
    10. '):
' → logprob: -11.156556129455566

Token 45: ' north' (ID: 16173)
  Prédit: ' north'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' north' → logprob: -0.023804625496268272
    2. 'north' → logprob: -3.7738046646118164
    3. ' south' → logprob: -7.898804664611816
    4. ' west' → logprob: -9.648804664611816
    5. ' ' → logprob: -10.648804664611816
    6. ' northeast' → logprob: -10.898804664611816
    7. '   ' → logprob: -11.523804664611816
    8. ' east' → logprob: -11.898804664611816
    9. ' block' → logprob: -12.148804664611816
    10. ' street' → logprob: -12.148804664611816

Token 46: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.001379402237944305
    2. 'south' → logprob: -7.126379489898682
    3. '_w' → logprob: -8.126379013061523
    4. '_' → logprob: -9.001379013061523
    5. '<|end|>' → logprob: -9.376379013061523
    6. ')' → logprob: -11.251379013061523
    7. '_n' → logprob: -11.751379013061523
    8. '-s' → logprob: -11.876379013061523
    9. '<|end|>' → logprob: -12.251379013061523
    10. 'north' → logprob: -12.376379013061523

Token 47: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.02407197840511799
    2. 'orth' → logprob: -3.7740719318389893
    3. '_' → logprob: -7.399072170257568
    4. 'out' → logprob: -9.89907169342041
    5. ' orth' → logprob: -9.89907169342041
    6. '_out' → logprob: -10.02407169342041
    7. '__' → logprob: -10.64907169342041
    8. 'uth' → logprob: -11.27407169342041
    9. '```' → logprob: -11.77407169342041
    10. 'o' → logprob: -12.52407169342041

Token 48: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04912286251783371
    2. '):' → logprob: -3.0491228103637695
    3. ':str' → logprob: -7.7991228103637695
    4. '):
' → logprob: -9.79912281036377
    5. ' :' → logprob: -10.54912281036377
    6. ')' → logprob: -11.04912281036377
    7. ',' → logprob: -11.79912281036377
    8. '   ' → logprob: -11.92412281036377
    9. ' ):' → logprob: -12.04912281036377
    10. '_str' → logprob: -14.04912281036377

Token 49: ' int' (ID: 677)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6957458853721619
    2. ' str' → logprob: -0.6957458853721619
    3. 'int' → logprob: -6.195745944976807
    4. ' int' → logprob: -7.570745944976807
    5. '[str' → logprob: -11.445745468139648
    6. ' ' → logprob: -11.820745468139648
    7. '	str' → logprob: -12.195745468139648
    8. '(str' → logprob: -12.320745468139648
    9. ')' → logprob: -12.445745468139648
    10. ':str' → logprob: -13.195745468139648

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005348019185476005
    2. ')' → logprob: -7.750535011291504
    3. ',' → logprob: -9.375535011291504
    4. '):
' → logprob: -11.625535011291504
    5. ':' → logprob: -12.125535011291504
    6. '   ' → logprob: -12.750535011291504
    7. ' ):' → logprob: -13.625535011291504
    8. ' ' → logprob: -14.875535011291504
    9. '):
' → logprob: -15.625535011291504
    10. '       ' → logprob: -16.000534057617188

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25160399079322815
    2. '):' → logprob: -2.0016040802001953
    3. ':' → logprob: -2.5016040802001953
    4. ')' → logprob: -5.376604080200195
    5. '():' → logprob: -8.876604080200195
    6. '<|end|>' → logprob: -8.876604080200195
    7. '   ' → logprob: -9.126604080200195
    8. 'self' → logprob: -9.126604080200195
    9. '):
' → logprob: -9.876604080200195
    10. ',' → logprob: -10.126604080200195

Token 52: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.44222694635391235
    2. '       ' → logprob: -1.0672268867492676
    3. ' self' → logprob: -4.317226886749268
    4. '   ' → logprob: -9.942227363586426
    5. ' ' → logprob: -11.442227363586426
    6. '(self' → logprob: -11.692227363586426
    7. '           ' → logprob: -12.317227363586426
    8. '        ' → logprob: -12.442227363586426
    9. '	self' → logprob: -12.442227363586426
    10. '      ' → logprob: -12.692227363586426

Token 53: '.e' (ID: 2560)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0067568132653832436
    2. '.e' → logprob: -5.006756782531738
    3. ' .' → logprob: -10.256756782531738
    4. 'east' → logprob: -14.006756782531738
    5. '.eql' → logprob: -14.131756782531738
    6. '.е' → logprob: -14.131756782531738
    7. ' ' → logprob: -14.381756782531738
    8. '.E' → logprob: -15.006756782531738
    9. '.eas' → logprob: -15.256756782531738
    10. '.eclipse' → logprob: -15.381756782531738

Token 54: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.7815589904785156
    2. '.' → logprob: -0.9065589904785156
    3. '.ast' → logprob: -2.0315589904785156
    4. 'a' → logprob: -6.406558990478516
    5. '._' → logprob: -6.406558990478516
    6. '_ast' → logprob: -6.531558990478516
    7. 'east' → logprob: -6.781558990478516
    8. '_' → logprob: -8.281558990478516
    9. '.a' → logprob: -8.406558990478516
    10. '=' → logprob: -8.781558990478516

Token 55: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -8.304016228066757e-05
    2. '_' → logprob: -9.500082969665527
    3. '_s' → logprob: -12.375082969665527
    4. ' _' → logprob: -13.000082969665527
    5. '_b' → logprob: -14.875082969665527
    6. ')_' → logprob: -16.125083923339844
    7. ')' → logprob: -16.375083923339844
    8. '       ' → logprob: -16.500083923339844
    9. '<|end|>' → logprob: -16.750083923339844
    10. 'underscore' → logprob: -16.875083923339844

Token 56: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -5.633853652398102e-05
    2. '_est' → logprob: -9.875056266784668
    3. 'west' → logprob: -12.625056266784668
    4. 'east' → logprob: -15.000056266784668
    5. 'estr' → logprob: -15.750056266784668
    6. '_' → logprob: -16.000057220458984
    7. 'ест' → logprob: -16.125057220458984
    8. 'st' → logprob: -16.375057220458984
    9. 'es' → logprob: -16.500057220458984
    10. '```' → logprob: -16.625057220458984

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699697807431221
    2. '=' → logprob: -2.694969892501831
    3. ' ' → logprob: -11.19497013092041
    4. ',' → logprob: -11.56997013092041
    5. ')' → logprob: -12.06997013092041
    6. '    ' → logprob: -13.44497013092041
    7. '   ' → logprob: -14.06997013092041
    8. ' ==' → logprob: -14.56997013092041
    9. '<|end|>' → logprob: -14.81997013092041
    10. ' ,' → logprob: -15.06997013092041

Token 58: ' east' (ID: 23557)
  Prédit: ' east'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' east' → logprob: -0.07892856746912003
    2. 'east' → logprob: -2.5789284706115723
    3. ' ' → logprob: -10.32892894744873
    4. 'e' → logprob: -12.95392894744873
    5. ' ' → logprob: -13.57892894744873
    6. ''' → logprob: -14.95392894744873
    7. '"' → logprob: -14.95392894744873
    8. '-east' → logprob: -15.07892894744873
    9. ' '' → logprob: -15.32892894744873
    10. '   ' → logprob: -15.45392894744873

Token 59: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0489325225353241
    2. '_' → logprob: -3.0489325523376465
    3. '._' → logprob: -8.548932075500488
    4. '.' → logprob: -9.423932075500488
    5. '[' → logprob: -10.673932075500488
    6. '_s' → logprob: -12.048932075500488
    7. '<|end|>' → logprob: -12.048932075500488
    8. '_.' → logprob: -12.173932075500488
    9. '.w' → logprob: -12.548932075500488
    10. '_user' → logprob: -12.798932075500488

Token 60: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.28298142552375793
    2. '_w' → logprob: -1.6579813957214355
    3. '_' → logprob: -3.6579813957214355
    4. '_est' → logprob: -3.6579813957214355
    5. '_s' → logprob: -5.6579813957214355
    6. '_e' → logprob: -7.5329813957214355
    7. '_st' → logprob: -8.782981872558594
    8. '_rest' → logprob: -10.157981872558594
    9. '_o' → logprob: -10.782981872558594
    10. ' _' → logprob: -10.907981872558594

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23291437327861786
    2. '<|end|>' → logprob: -1.6079143285751343
    3. '
' → logprob: -5.107914447784424
    4. '<|end|>' → logprob: -7.482914447784424
    5. ' ' → logprob: -8.107913970947266
    6. '        
' → logprob: -9.232913970947266
    7. '        ' → logprob: -9.357913970947266
    8. ',' → logprob: -9.732913970947266
    9. '   ' → logprob: -9.857913970947266
    10. ')' → logprob: -10.232913970947266

Token 63: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47257161140441895
    2. 'self' (adapté à ' self') → logprob: -1.597571611404419
    3. ' self' → logprob: -2.472571611404419
    4. '
' → logprob: -2.722571611404419
    5. 'north' → logprob: -4.22257137298584
    6. ' north' → logprob: -4.97257137298584
    7. ' ' → logprob: -6.84757137298584
    8. ' east' → logprob: -8.47257137298584
    9. '        ' → logprob: -8.47257137298584
    10. '        
' → logprob: -8.59757137298584

Token 64: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2529393434524536
    2. '.n' → logprob: -1.5029393434524536
    3. 'north' → logprob: -8.252939224243164
    4. '.e' → logprob: -8.877939224243164
    5. 'east' → logprob: -8.877939224243164
    6. '_n' → logprob: -8.877939224243164
    7. '_' → logprob: -9.502939224243164
    8. '._' → logprob: -9.877939224243164
    9. ' .' → logprob: -9.877939224243164
    10. '=' → logprob: -10.252939224243164

Token 65: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.21970993280410767
    2. '_' → logprob: -2.344709873199463
    3. '_s' → logprob: -2.719709873199463
    4. 'south' → logprob: -3.719709873199463
    5. 'o' → logprob: -6.219709873199463
    6. 'north' → logprob: -7.219709873199463
    7. 'ort' → logprob: -7.219709873199463
    8. 'ame' → logprob: -7.219709873199463
    9. '```' → logprob: -7.219709873199463
    10. '_or' → logprob: -7.469709873199463

Token 66: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.4121114822482923e-06
    2. 'south' → logprob: -13.000003814697266
    3. '_w' → logprob: -14.375003814697266
    4. '_' → logprob: -15.125003814697266
    5. '```' → logprob: -16.750003814697266
    6. '\' → logprob: -17.000003814697266
    7. '_n' → logprob: -17.375003814697266
    8. ' _' → logprob: -17.375003814697266
    9. 'South' → logprob: -17.625003814697266
    10. '<|end|>' → logprob: -18.125003814697266

Token 67: 'outh' (ID: 4656)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.17600390315055847
    2. 'outh' → logprob: -1.9260039329528809
    3. 's' → logprob: -4.801003932952881
    4. '_s' → logprob: -5.551003932952881
    5. 'orth' → logprob: -5.676003932952881
    6. 'sou' → logprob: -10.426003456115723
    7. '_' → logprob: -10.676003456115723
    8. 'uth' → logprob: -11.301003456115723
    9. 'South' → logprob: -11.426003456115723
    10. 'out' → logprob: -11.676003456115723

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868725895881653
    2. '=' → logprob: -1.1368725299835205
    3. ' ' → logprob: -14.011872291564941
    4. '<|end|>' → logprob: -14.511872291564941
    5. '=int' → logprob: -15.511872291564941
    6. ')' → logprob: -16.886873245239258
    7. '   ' → logprob: -17.136873245239258
    8. '<|end|>' → logprob: -17.761873245239258
    9. '＝' → logprob: -18.886873245239258
    10. '=line' → logprob: -18.886873245239258

Token 69: ' north' (ID: 16173)
  Prédit: ' north'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' north' → logprob: -0.2014232873916626
    2. 'north' → logprob: -1.7014232873916626
    3. 'n' → logprob: -12.076423645019531
    4. ' ' → logprob: -13.576423645019531
    5. ' ' → logprob: -13.576423645019531
    6. 'int' → logprob: -13.951423645019531
    7. ' northeast' → logprob: -15.326423645019531
    8. ' nord' → logprob: -15.826423645019531
    9. ' int' → logprob: -15.826423645019531
    10. ' n' → logprob: -16.07642364501953

Token 70: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00017183588352054358
    2. '_w' → logprob: -9.125171661376953
    3. 'south' → logprob: -10.500171661376953
    4. '_' → logprob: -10.750171661376953
    5. '       ' → logprob: -12.375171661376953
    6. ' _' → logprob: -13.250171661376953
    7. '   ' → logprob: -13.375171661376953
    8. '<|end|>' → logprob: -13.500171661376953
    9. '        ' → logprob: -14.500171661376953
    10. '\' → logprob: -14.750171661376953

Token 71: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.007817894220352173
    2. 'o' → logprob: -5.50781774520874
    3. '_s' → logprob: -6.13281774520874
    4. '_' → logprob: -7.75781774520874
    5. 'ou' → logprob: -7.88281774520874
    6. '_out' → logprob: -8.257818222045898
    7. 's' → logprob: -9.007818222045898
    8. 'ous' → logprob: -9.132818222045898
    9. '_o' → logprob: -9.382818222045898
    10. 'out' → logprob: -10.007818222045898

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6335403323173523
    2. '   ' → logprob: -0.8835403323173523
    3. '<|end|>' → logprob: -3.258540391921997
    4. '    
' → logprob: -4.258540153503418
    5. '<|end|>' → logprob: -7.133540153503418
    6. ' 
' → logprob: -7.508540153503418
    7. '       ' → logprob: -7.883540153503418
    8. '\n' → logprob: -8.258540153503418
    9. ':' → logprob: -8.258540153503418
    10. '\' → logprob: -8.383540153503418

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40025120973587036
    2. ':' → logprob: -1.5252511501312256
    3. '
' → logprob: -2.9002511501312256
    4. '<|end|>' → logprob: -3.6502511501312256
    5. ' def' → logprob: -4.650251388549805
    6. ' ' → logprob: -5.150251388549805
    7. 'def' → logprob: -5.275251388549805
    8. '    
' → logprob: -5.775251388549805
    9. ':
' → logprob: -5.775251388549805
    10. '<|end|>' → logprob: -6.650251388549805

Token 74: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.868959367275238
    2. 'def' → logprob: -0.868959367275238
    3. '   ' → logprob: -1.9939594268798828
    4. ':' → logprob: -4.618959426879883
    5. ' ' → logprob: -5.118959426879883
    6. ')' → logprob: -5.368959426879883
    7. '    ' → logprob: -6.743959426879883
    8. '<|end|>' → logprob: -7.118959426879883
    9. '       ' → logprob: -7.493959426879883
    10. ':def' → logprob: -7.618959426879883

Token 75: 'staticmethod' (ID: 53164)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.00034118397161364555
    2. 'staticmethod' → logprob: -8.000341415405273
    3. 'classmethod' → logprob: -12.250341415405273
    4. 'dat' → logprob: -14.000341415405273
    5. ' property' → logprob: -16.125341415405273
    6. '@property' → logprob: -18.875341415405273
    7. '_property' → logprob: -19.125341415405273
    8. 'pro' → logprob: -19.250341415405273
    9. '__' → logprob: -20.125341415405273
    10. 'eq' → logprob: -20.250341415405273

Token 76: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.697900116443634
    2. '(' → logprob: -0.822900116443634
    3. ' def' → logprob: -2.8229000568389893
    4. ' (' → logprob: -6.697900295257568
    5. '('' → logprob: -7.072900295257568
    6. '(
' → logprob: -8.44789981842041
    7. '   ' → logprob: -8.69789981842041
    8. '<|end|>' → logprob: -8.69789981842041
    9. '```' → logprob: -8.94789981842041
    10. '`' → logprob: -9.07289981842041

Token 77: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008209927007555962
    2. ' def' → logprob: -5.008209705352783
    3. '(' → logprob: -6.883209705352783
    4. '('' → logprob: -8.258210182189941
    5. '("' → logprob: -10.258210182189941
    6. '
' → logprob: -10.508210182189941
    7. '<|end|>' → logprob: -10.758210182189941
    8. '\' → logprob: -10.758210182189941
    9. '   ' → logprob: -10.883210182189941
    10. '(def' → logprob: -11.008210182189941

Token 78: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005970507860183716
    2. ' def' → logprob: -5.130970478057861
    3. '
' → logprob: -10.38097095489502
    4. 'from' → logprob: -12.50597095489502
    5. '   ' → logprob: -13.13097095489502
    6. ' ' → logprob: -13.13097095489502
    7. 'classmethod' → logprob: -14.63097095489502
    8. '  ' → logprob: -14.88097095489502
    9. '```' → logprob: -15.50597095489502
    10. 'convert' → logprob: -15.63097095489502

Token 79: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6352741718292236
    2. 'from' → logprob: -1.5102741718292236
    3. ' def' → logprob: -2.3852741718292236
    4. ' east' → logprob: -3.2602741718292236
    5. ' parse' → logprob: -4.6352739334106445
    6. ' compare' → logprob: -4.7602739334106445
    7. 'east' → logprob: -4.8852739334106445
    8. ' _' → logprob: -5.0102739334106445
    9. ' distance' → logprob: -5.1352739334106445
    10. ' ' → logprob: -5.2602739334106445

Token 80: '_str' (ID: 6182)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0037924700882285833
    2. '_str' → logprob: -6.1287922859191895
    3. '_' → logprob: -7.2537922859191895
    4. '_name' → logprob: -8.128792762756348
    5. '_tuple' → logprob: -8.253792762756348
    6. '_input' → logprob: -9.003792762756348
    7. '_text' → logprob: -9.628792762756348
    8. '_strings' → logprob: -9.628792762756348
    9. '_token' → logprob: -11.503792762756348
    10. '_coordinates' → logprob: -11.628792762756348

Token 81: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01081965770572424
    2. '("("' → logprob: -5.010819435119629
    3. '('' → logprob: -6.260819435119629
    4. '(token' → logprob: -7.135819435119629
    5. '(string' → logprob: -8.260819435119629
    6. '(s' → logprob: -8.260819435119629
    7. '(line' → logprob: -8.385819435119629
    8. ' (' → logprob: -8.760819435119629
    9. '(cls' → logprob: -8.885819435119629
    10. '("' → logprob: -8.885819435119629

Token 82: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023438571020960808
    2. ':' → logprob: -3.8984384536743164
    3. ' ):' → logprob: -6.648438453674316
    4. '):
' → logprob: -6.648438453674316
    5. ')' → logprob: -8.523438453674316
    6. ':str' → logprob: -9.523438453674316
    7. '():' → logprob: -12.023438453674316
    8. ']:' → logprob: -13.148438453674316
    9. '[]):' → logprob: -13.398438453674316
    10. ' :' → logprob: -13.398438453674316

Token 83: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.7318398952484131
    2. ' str' → logprob: -0.7318398952484131
    3. ')' → logprob: -3.356839895248413
    4. ' )' → logprob: -6.856840133666992
    5. '<|end|>' → logprob: -6.856840133666992
    6. '[str' → logprob: -7.856840133666992
    7. ' ' → logprob: -8.606840133666992
    8. 's' → logprob: -8.856840133666992
    9. '	str' → logprob: -9.606840133666992
    10. ':str' → logprob: -10.106840133666992

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2020995318889618
    2. ')' → logprob: -1.7020995616912842
    3. '):
' → logprob: -8.077099800109863
    4. ' ):' → logprob: -8.702099800109863
    5. ')->' → logprob: -9.452099800109863
    6. ':' → logprob: -9.577099800109863
    7. ' )' → logprob: -9.952099800109863
    8. '   ' → logprob: -12.577099800109863
    9. '):
' → logprob: -12.827099800109863
    10. ')>' → logprob: -13.452099800109863

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002455203328281641
    2. ':' → logprob: -7.252455234527588
    3. ',' → logprob: -7.627455234527588
    4. '(' → logprob: -8.25245475769043
    5. '        ' → logprob: -8.50245475769043
    6. 'return' → logprob: -9.12745475769043
    7. '      ' → logprob: -9.25245475769043
    8. ')' → logprob: -9.37745475769043
    9. ' return' → logprob: -9.50245475769043
    10. '   ' → logprob: -10.12745475769043

Token 86: ' #' (ID: 1069)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.5306847095489502
    2. ' if' → logprob: -1.6556847095489502
    3. ' return' → logprob: -2.03068470954895
    4. '       ' → logprob: -2.28068470954895
    5. ' east' → logprob: -2.28068470954895
    6. ' ew' → logprob: -2.53068470954895
    7. ' direction' → logprob: -2.78068470954895
    8. 'return' → logprob: -3.40568470954895
    9. 'ew' → logprob: -3.90568470954895
    10. 'if' → logprob: -4.655684471130371

Token 87: ' parse' (ID: 8420)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44457462430000305
    2. ' parts' → logprob: -2.1945745944976807
    3. ' east' → logprob: -2.6945745944976807
    4. ' return' → logprob: -3.3195745944976807
    5. '       ' → logprob: -3.4445745944976807
    6. ' s' → logprob: -4.06957483291626
    7. 'if' → logprob: -4.19457483291626
    8. ' direction' → logprob: -4.31957483291626
    9. ' ew' → logprob: -4.69457483291626
    10. ' e' → logprob: -4.81957483291626

Token 88: ' strings' (ID: 18279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5144484043121338
    2. ' s' → logprob: -2.014448404312134
    3. 's' → logprob: -2.014448404312134
    4. '(' → logprob: -2.139448404312134
    5. ')' → logprob: -2.264448404312134
    6. '(s' → logprob: -2.389448404312134
    7. '       ' → logprob: -3.264448404312134
    8. ' (' → logprob: -3.514448404312134
    9. '<|end|>' → logprob: -3.764448404312134
    10. '   ' → logprob: -3.889448404312134

Token 89: ' like' (ID: 1299)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0612487755715847
    2. '[' → logprob: -4.061248779296875
    3. '('' → logprob: -4.311248779296875
    4. '(s' → logprob: -4.686248779296875
    5. ' (' → logprob: -5.186248779296875
    6. '       ' → logprob: -5.436248779296875
    7. ')' → logprob: -6.186248779296875
    8. '   ' → logprob: -6.186248779296875
    9. '("("' → logprob: -6.811248779296875
    10. ',' → logprob: -7.061248779296875

Token 90: ' '' (ID: 461)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4997692108154297
    2. '"' → logprob: -1.3747692108154297
    3. '"N' → logprob: -2.8747692108154297
    4. '"A' → logprob: -3.4997692108154297
    5. '"E' → logprob: -4.12476921081543
    6. ' '' → logprob: -4.12476921081543
    7. '"W' → logprob: -5.49976921081543
    8. ' N' → logprob: -5.62476921081543
    9. ''' → logprob: -5.62476921081543
    10. ' ' → logprob: -5.74976921081543

Token 91: 'a' (ID: 64)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17613235116004944
    2. 'E' → logprob: -2.6761324405670166
    3. 'N' → logprob: -3.4261324405670166
    4. ''A' → logprob: -3.8011324405670166
    5. 'B' → logprob: -4.6761322021484375
    6. '"A' → logprob: -5.0511322021484375
    7. ''E' → logprob: -5.5511322021484375
    8. ''' → logprob: -5.6761322021484375
    9. '"' → logprob: -6.0511322021484375
    10. 'C' → logprob: -6.0511322021484375

Token 92: '-' (ID: 12)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7701007723808289
    2. '5' → logprob: -1.0201008319854736
    3. '3' → logprob: -1.8951008319854736
    4. '2' → logprob: -4.5201005935668945
    5. '4' → logprob: -4.7701005935668945
    6. '0' → logprob: -5.6451005935668945
    7. '12' → logprob: -6.6451005935668945
    8. '10' → logprob: -6.8951005935668945
    9. '7' → logprob: -7.7701005935668945
    10. ' ' → logprob: -9.270100593566895

Token 93: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.660491943359375
    2. '1' → logprob: -1.285491943359375
    3. '3' → logprob: -1.785491943359375
    4. '10' → logprob: -4.035491943359375
    5. '12' → logprob: -4.535491943359375
    6. '2' → logprob: -5.285491943359375
    7. '0' → logprob: -5.785491943359375
    8. '4' → logprob: -6.410491943359375
    9. '7' → logprob: -8.410491943359375
    10. '42' → logprob: -8.410491943359375

Token 94: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28211790323257446
    2. '')' → logprob: -1.4071178436279297
    3. '0' → logprob: -8.15711784362793
    4. ')' → logprob: -8.90711784362793
    5. ')'' → logprob: -8.90711784362793
    6. '1' → logprob: -9.28211784362793
    7. '',' → logprob: -9.40711784362793
    8. 'a' → logprob: -9.65711784362793
    9. '2' → logprob: -10.15711784362793
    10. '3' → logprob: -11.03211784362793

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0081363869830966
    2. ':' → logprob: -5.50813627243042
    3. ',' → logprob: -6.50813627243042
    4. '<|end|>' → logprob: -7.25813627243042
    5. ')' → logprob: -7.75813627243042
    6. '   ' → logprob: -7.88313627243042
    7. '        
' → logprob: -7.88313627243042
    8. '      ' → logprob: -8.883136749267578
    9. '        ' → logprob: -9.258136749267578
    10. '<|end|>' → logprob: -9.633136749267578

Token 96: ' ew' (ID: 64459)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.6703198552131653
    2. ' east' → logprob: -1.2953197956085205
    3. 'e' → logprob: -3.0453197956085205
    4. 'parts' → logprob: -3.0453197956085205
    5. 'east' → logprob: -3.1703197956085205
    6. '       ' → logprob: -3.9203197956085205
    7. 'ew' (adapté à ' ew') → logprob: -3.9203197956085205
    8. ' ew' → logprob: -4.4203200340271
    9. '        ' → logprob: -4.6703200340271
    10. ' e' → logprob: -5.0453200340271

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1671493947505951
    2. '_' → logprob: -2.042149305343628
    3. ' =' → logprob: -4.917149543762207
    4. '_,' → logprob: -4.917149543762207
    5. '=' → logprob: -5.667149543762207
    6. ',_' → logprob: -6.292149543762207
    7. ' ,' → logprob: -6.667149543762207
    8. '_split' → logprob: -7.417149543762207
    9. ')' → logprob: -7.792149543762207
    10. ' ' → logprob: -7.792149543762207

Token 98: ' ns' (ID: 18343)
  Prédit: ' ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ns' → logprob: -0.2048526406288147
    2. 'ns' → logprob: -1.70485258102417
    3. ' ' → logprob: -6.45485258102417
    4. '_ns' → logprob: -7.32985258102417
    5. '	ns' → logprob: -7.32985258102417
    6. ' nsh' → logprob: -9.329853057861328
    7. 'sn' → logprob: -9.704853057861328
    8. ' sn' → logprob: -9.954853057861328
    9. 'num' → logprob: -9.954853057861328
    10. ' n' → logprob: -10.079853057861328

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.57597815990448
    2. ' =' → logprob: -0.82597815990448
    3. ',' → logprob: -10.32597827911377
    4. 's' → logprob: -13.07597827911377
    5. '_' → logprob: -13.82597827911377
    6. ')' → logprob: -14.32597827911377
    7. '_str' → logprob: -15.07597827911377
    8. ' ' → logprob: -15.20097827911377
    9. ')=' → logprob: -15.32597827911377
    10. '_=' → logprob: -15.57597827911377

Token 100: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06196824833750725
    2. 's' → logprob: -2.8119683265686035
    3. '<|end|>' → logprob: -15.061967849731445
    4. ' ' → logprob: -15.936967849731445
    5. '(s' → logprob: -16.811967849731445
    6. '	s' → logprob: -17.811967849731445
    7. '<|end|>' → logprob: -18.561967849731445
    8. 'map' → logprob: -19.311967849731445
    9. 'swer' → logprob: -19.811967849731445
    10. '{s' → logprob: -19.811967849731445

Token 101: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.06210638955235481
    2. '.' → logprob: -2.8121063709259033
    3. ' .' → logprob: -9.062106132507324
    4. '.strip' → logprob: -11.562106132507324
    5. 'split' → logprob: -12.562106132507324
    6. '.s' → logprob: -12.812106132507324
    7. '.rstrip' → logprob: -13.437106132507324
    8. '.Split' → logprob: -13.812106132507324
    9. ' split' → logprob: -14.187106132507324
    10. '.strptime' → logprob: -14.187106132507324

Token 102: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.0019913245923817158
    2. '('' → logprob: -7.376991271972656
    3. ''-' → logprob: -7.876991271972656
    4. '('-',' → logprob: -7.876991271972656
    5. '(' → logprob: -8.001991271972656
    6. '("-' → logprob: -8.876991271972656
    7. '-' → logprob: -9.001991271972656
    8. '('='' → logprob: -13.001991271972656
    9. '"-' → logprob: -14.251991271972656
    10. ' '-'' → logprob: -14.501991271972656

Token 103: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5876561403274536
    2. ')' → logprob: -0.8376561403274536
    3. '1' → logprob: -4.462656021118164
    4. ',' → logprob: -9.712656021118164
    5. '',' → logprob: -10.337656021118164
    6. '")' → logprob: -11.212656021118164
    7. '2' → logprob: -12.712656021118164
    8. ''' → logprob: -13.087656021118164
    9. '')
' → logprob: -13.587656021118164
    10. ' )' → logprob: -14.462656021118164

Token 104: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7214521169662476
    2. '       ' → logprob: -0.9714521169662476
    3. '<|end|>' → logprob: -2.346452236175537
    4. '        ' → logprob: -4.721452236175537
    5. 'int' → logprob: -4.971452236175537
    6. ' ' → logprob: -5.221452236175537
    7. ')' → logprob: -5.596452236175537
    8. '  ' → logprob: -5.971452236175537
    9. '<|end|>' → logprob: -5.971452236175537
    10. 'return' → logprob: -6.471452236175537

Token 105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05299409106373787
    2. ' return' → logprob: -3.0529940128326416
    3. '       ' → logprob: -5.427994251251221
    4. ')return' → logprob: -13.802993774414062
    5. '{return' → logprob: -14.052993774414062
    6. ':return' → logprob: -14.302993774414062
    7. '	return' → logprob: -14.802993774414062
    8. ' ' → logprob: -15.052993774414062
    9. 'eturn' → logprob: -15.177993774414062
    10. '<|end|>' → logprob: -15.177993774414062

Token 106: ' Coordinate' (ID: 78454)
  Prédit: ' Coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Coordinate' → logprob: -0.1602243334054947
    2. 'Coordinate' → logprob: -1.9102243185043335
    3. ' coordinate' → logprob: -15.910223960876465
    4. '_coordinate' → logprob: -17.03522491455078
    5. ' Coordinates' → logprob: -17.41022491455078
    6. ' Coordinator' → logprob: -17.91022491455078
    7. ' ' → logprob: -18.16022491455078
    8. 'Coord' → logprob: -18.53522491455078
    9. 'Coordinates' → logprob: -18.53522491455078
    10. ' Coorden' → logprob: -19.16022491455078

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011975488450843841
    2. '(e' → logprob: -9.125120162963867
    3. '(E' → logprob: -12.125120162963867
    4. '('' → logprob: -13.500120162963867
    5. '(
' → logprob: -13.500120162963867
    6. '((' → logprob: -13.625120162963867
    7. '(ev' → logprob: -15.000120162963867
    8. '(s' → logprob: -15.125120162963867
    9. ' (' → logprob: -15.875120162963867
    10. '(

' → logprob: -16.125120162963867

Token 108: 'ew' (ID: 937)
  Prédit: 'ew'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -6.635164754698053e-05
    2. ' ew' → logprob: -9.625066757202148
    3. 'e' → logprob: -17.00006675720215
    4. '-ew' → logprob: -17.50006675720215
    5. 'ews' → logprob: -18.00006675720215
    6. '   ' → logprob: -18.00006675720215
    7. 'ewu' → logprob: -18.00006675720215
    8. '```' → logprob: -18.62506675720215
    9. 'ewel' → logprob: -18.87506675720215
    10. 'ewo' → logprob: -19.25006675720215

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010688931215554476
    2. ',int' → logprob: -7.376069068908691
    3. ' ,' → logprob: -7.751069068908691
    4. ',n' → logprob: -12.251069068908691
    5. ',
' → logprob: -13.751069068908691
    6. '),' → logprob: -14.126069068908691
    7. '_ns' → logprob: -14.251069068908691
    8. ',str' → logprob: -14.376069068908691
    9. ' ' → logprob: -14.501069068908691
    10. '_,' → logprob: -14.626069068908691

Token 110: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.547789674485102e-05
    2. ' int' → logprob: -10.250035285949707
    3. '(int' → logprob: -20.250036239624023
    4. '=int' → logprob: -21.375036239624023
    5. '[int' → logprob: -21.750036239624023
    6. '<int' → logprob: -22.375036239624023
    7. 'in' → logprob: -22.375036239624023
    8. ':int' → logprob: -22.625036239624023
    9. ']int' → logprob: -22.875036239624023
    10. 'ints' → logprob: -23.125036239624023

Token 111: '(ns' (ID: 79469)
  Prédit: '(ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ns' → logprob: -0.0003436872211750597
    2. '(' → logprob: -8.000343322753906
    3. ' (' → logprob: -12.875343322753906
    4. '(n' → logprob: -13.625343322753906
    5. 'ns' → logprob: -13.750343322753906
    6. '(NS' → logprob: -14.125343322753906
    7. '(
' → logprob: -14.500343322753906
    8. '	ns' → logprob: -14.500343322753906
    9. '/ns' → logprob: -14.625343322753906
    10. ')' → logprob: -14.750343322753906

Token 112: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017032715259119868
    2. '))' → logprob: -6.376703262329102
    3. ' )' → logprob: -14.626703262329102
    4. ')))' → logprob: -15.126703262329102
    5. '())' → logprob: -15.751703262329102
    6. ')
' → logprob: -16.2517032623291
    7. '()' → logprob: -17.0017032623291
    8. '),' → logprob: -18.0017032623291
    9. '])' → logprob: -18.1267032623291
    10. '})' → logprob: -18.1267032623291

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6483669877052307
    2. '
' → logprob: -1.398366928100586
    3. '<|end|>' → logprob: -1.648366928100586
    4. '    
' → logprob: -4.523366928100586
    5. ' ' → logprob: -5.398366928100586
    6. ' 
' → logprob: -5.398366928100586
    7. ')' → logprob: -5.398366928100586
    8. '<|end|>' → logprob: -5.898366928100586
    9. '  
' → logprob: -6.148366928100586
    10. '\' → logprob: -6.773366928100586

Token 114: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6031398773193359
    2. '
' → logprob: -1.728139877319336
    3. '<|end|>' → logprob: -2.228139877319336
    4. ' ' → logprob: -2.978139877319336
    5. 'def' (adapté à ' def') → logprob: -3.353139877319336
    6. ')' → logprob: -3.728139877319336
    7. ' def' → logprob: -3.978139877319336
    8. ' 
' → logprob: -4.228139877319336
    9. '    
' → logprob: -4.603139877319336
    10. '  
' → logprob: -5.978139877319336

Token 115: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0008731092675589025
    2. ' ==' → logprob: -7.37587308883667
    3. ' ' → logprob: -8.875873565673828
    4. '__' → logprob: -9.875873565673828
    5. ' def' → logprob: -10.500873565673828
    6. ' _' → logprob: -11.375873565673828
    7. ' ' → logprob: -12.375873565673828
    8. '.__' → logprob: -12.375873565673828
    9. 'to' → logprob: -14.125873565673828
    10. '==' → logprob: -14.125873565673828

Token 116: 'str' (ID: 689)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -8.542423165636137e-05
    2. 'lt' → logprob: -9.875085830688477
    3. 'str' → logprob: -11.125085830688477
    4. 'repr' → logprob: -11.500085830688477
    5. 'hash' → logprob: -11.625085830688477
    6. ' eq' → logprob: -16.625085830688477
    7. 'init' → logprob: -16.750085830688477
    8. '_eq' → logprob: -18.875085830688477
    9. 'e' → logprob: -19.875085830688477
    10. 'gt' → logprob: -20.125085830688477

Token 117: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16150285303592682
    2. '__' → logprob: -1.9115028381347656
    3. '__('' → logprob: -7.161502838134766
    4. '__(
' → logprob: -7.786502838134766
    5. '__("' → logprob: -10.536502838134766
    6. '__((' → logprob: -10.661502838134766
    7. '__.__' → logprob: -11.286502838134766
    8. '__(*' → logprob: -12.161502838134766
    9. '(' → logprob: -12.286502838134766
    10. '_' → logprob: -12.536502838134766

Token 118: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001741104875691235
    2. ')' → logprob: -6.3767409324646
    3. ' self' → logprob: -10.626741409301758
    4. '	self' → logprob: -12.251741409301758
    5. '):
' → logprob: -13.001741409301758
    6. ' ' → logprob: -13.376741409301758
    7. '
' → logprob: -13.501741409301758
    8. '):' → logprob: -13.626741409301758
    9. '(self' → logprob: -14.001741409301758
    10. ')(' → logprob: -14.126741409301758

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12103711813688278
    2. '__' → logprob: -2.496037006378174
    3. ')' → logprob: -3.871037006378174
    4. '):
' → logprob: -5.371037006378174
    5. ')__' → logprob: -5.496037006378174
    6. '__)' → logprob: -6.871037006378174
    7. '__:' → logprob: -7.871037006378174
    8. ' ):' → logprob: -7.996037006378174
    9. ').__' → logprob: -9.496037483215332
    10. '_' → logprob: -10.496037483215332

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13328243792057037
    2. 'return' → logprob: -2.133282423019409
    3. ' return' → logprob: -5.133282661437988
    4. 'f' → logprob: -8.133282661437988
    5. '   ' → logprob: -9.008282661437988
    6. ' f' → logprob: -12.508282661437988
    7. '(' → logprob: -12.633282661437988
    8. '    ' → logprob: -13.008282661437988
    9. '"' → logprob: -13.383282661437988
    10. ''' → logprob: -13.508282661437988

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.053861647844314575
    2. ' return' → logprob: -3.053861618041992
    3. 'f' → logprob: -5.303861618041992
    4. ' f' → logprob: -8.303861618041992
    5. '   ' → logprob: -10.553861618041992
    6. '       ' → logprob: -11.428861618041992
    7. '	return' → logprob: -13.928861618041992
    8. '{return' → logprob: -13.928861618041992
    9. '
' → logprob: -14.678861618041992
    10. ' ' → logprob: -15.053861618041992

Token 122: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019565867260098457
    2. ' f' → logprob: -6.251956462860107
    3. 'self' → logprob: -10.501956939697266
    4. ' self' → logprob: -15.376956939697266
    5. '	f' → logprob: -15.751956939697266
    6. ''f' → logprob: -15.876956939697266
    7. '"' → logprob: -17.751956939697266
    8. ' ' → logprob: -17.876956939697266
    9. '   ' → logprob: -18.501956939697266
    10. '(f' → logprob: -18.751956939697266

Token 123: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.0004231667553540319
    2. '"' → logprob: -8.500423431396484
    3. ''{' → logprob: -8.500423431396484
    4. 'f' → logprob: -11.250423431396484
    5. '{' → logprob: -13.250423431396484
    6. '""' → logprob: -14.250423431396484
    7. '("{' → logprob: -15.000423431396484
    8. ''' → logprob: -16.125423431396484
    9. ' f' → logprob: -16.375423431396484
    10. ' "{' → logprob: -16.500423431396484

Token 124: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.703443770878948e-06
    2. ' self' → logprob: -11.875007629394531
    3. '{' → logprob: -15.125007629394531
    4. 'elf' → logprob: -15.125007629394531
    5. '   ' → logprob: -17.12500762939453
    6. '.self' → logprob: -17.12500762939453
    7. ' ' → logprob: -17.75000762939453
    8. '	self' → logprob: -18.12500762939453
    9. '[self' → logprob: -18.62500762939453
    10. '
' → logprob: -18.75000762939453

Token 125: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.001190702780149877
    2. '.' → logprob: -6.751190662384033
    3. 'east' → logprob: -11.126191139221191
    4. '.eas' → logprob: -12.501191139221191
    5. ' .' → logprob: -13.876191139221191
    6. '.w' → logprob: -15.001191139221191
    7. '.E' → logprob: -15.751191139221191
    8. '}.' → logprob: -16.626190185546875
    9. '.е' → logprob: -16.751190185546875
    10. '.eclipse' → logprob: -16.876190185546875

Token 126: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.05606372654438019
    2. '_w' → logprob: -3.306063652038574
    3. 'w' → logprob: -4.681063652038574
    4. 'st' → logprob: -5.556063652038574
    5. '.ast' → logprob: -6.056063652038574
    6. 'a' → logprob: -7.056063652038574
    7. '_ast' → logprob: -7.681063652038574
    8. '_' → logprob: -8.431063652038574
    9. '_st' → logprob: -8.681063652038574
    10. '.w' → logprob: -8.806063652038574

Token 127: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.259079363080673e-05
    2. 'west' → logprob: -11.875012397766113
    3. '_' → logprob: -12.125012397766113
    4. 'w' → logprob: -16.00001335144043
    5. ' _' → logprob: -18.12501335144043
    6. '_we' → logprob: -18.50001335144043
    7. '_s' → logprob: -18.75001335144043
    8. 'West' → logprob: -19.12501335144043
    9. '_web' → logprob: -19.50001335144043
    10. ' west' → logprob: -19.50001335144043

Token 128: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.023851076140999794
    2. '_w' → logprob: -4.023850917816162
    3. 'w' → logprob: -6.273850917816162
    4. '_est' → logprob: -6.648850917816162
    5. '_' → logprob: -6.773850917816162
    6. 'st' → logprob: -7.023850917816162
    7. 'west' → logprob: -8.14885139465332
    8. '_st' → logprob: -9.77385139465332
    9. 'es' → logprob: -9.77385139465332
    10. '_rest' → logprob: -11.64885139465332

Token 129: '}-{' (ID: 173471)
  Prédit: '}-{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}-{' → logprob: -0.01587587222456932
    2. '}-' → logprob: -4.390875816345215
    3. '-' → logprob: -6.265875816345215
    4. '}{' → logprob: -6.765875816345215
    5. '}-${' → logprob: -8.515875816345215
    6. '}' → logprob: -10.265875816345215
    7. ' }' → logprob: -10.515875816345215
    8. '"}' → logprob: -11.765875816345215
    9. ''}' → logprob: -12.015875816345215
    10. ' ' → logprob: -12.015875816345215

Token 130: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815567910671234
    2. '{' → logprob: -4.018155574798584
    3. ' self' → logprob: -12.143156051635742
    4. '[self' → logprob: -16.018156051635742
    5. '(self' → logprob: -16.143156051635742
    6. '{
' → logprob: -16.143156051635742
    7. '}{' → logprob: -16.268156051635742
    8. '
' → logprob: -17.143156051635742
    9. '1' → logprob: -17.518156051635742
    10. '$self' → logprob: -17.768156051635742

Token 131: '.n' (ID: 1835)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.004339560400694609
    2. 'north' → logprob: -5.504339694976807
    3. '_ns' → logprob: -9.004339218139648
    4. '.n' → logprob: -9.254339218139648
    5. '_s' → logprob: -10.629339218139648
    6. 'ns' → logprob: -12.129339218139648
    7. '_sn' → logprob: -12.379339218139648
    8. '}' → logprob: -13.004339218139648
    9. '._' → logprob: -13.129339218139648
    10. 'n' → logprob: -13.754339218139648

Token 132: 'orth' (ID: 2909)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00731767388060689
    2. 'south' → logprob: -5.007317543029785
    3. '_' → logprob: -8.132317543029785
    4. 's' → logprob: -8.632317543029785
    5. 'orth' → logprob: -9.257317543029785
    6. 'o' → logprob: -12.132317543029785
    7. '```' → logprob: -12.257317543029785
    8. ' _' → logprob: -12.382317543029785
    9. 'sou' → logprob: -12.507317543029785
    10. 'outh' → logprob: -13.007317543029785

Token 133: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00013929695705883205
    2. 'south' → logprob: -9.750139236450195
    3. '_w' → logprob: -9.750139236450195
    4. '_' → logprob: -11.500139236450195
    5. 's' → logprob: -12.250139236450195
    6. '_sn' → logprob: -12.625139236450195
    7. ' _' → logprob: -14.000139236450195
    8. 'w' → logprob: -14.250139236450195
    9. '```' → logprob: -14.250139236450195
    10. '   ' → logprob: -14.375139236450195

Token 134: 'outh' (ID: 4656)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.21132390201091766
    2. 'outh' → logprob: -1.961323857307434
    3. '_s' → logprob: -3.0863239765167236
    4. 'sou' → logprob: -5.7113237380981445
    5. 's' → logprob: -8.336323738098145
    6. 'South' → logprob: -9.086323738098145
    7. 'orth' → logprob: -9.461323738098145
    8. 'uth' → logprob: -9.586323738098145
    9. '_' → logprob: -10.086323738098145
    10. 'out' → logprob: -10.336323738098145

Token 135: '}"

' (ID: 103433)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}"' → logprob: -7.159660890465602e-05
    2. '"' → logprob: -9.75007152557373
    3. '"}' → logprob: -11.37507152557373
    4. '}' → logprob: -13.75007152557373
    5. '}"
' → logprob: -15.50007152557373
    6. ')"' → logprob: -15.75007152557373
    7. ' }' → logprob: -16.250072479248047
    8. '}")' → logprob: -16.250072479248047
    9. '}}"' → logprob: -16.500072479248047
    10. '```' → logprob: -16.750072479248047

Token 136: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5040252804756165
    2. '   ' → logprob: -1.0040252208709717
    3. '<|end|>' → logprob: -3.8790252208709717
    4. '    
' → logprob: -5.129025459289551
    5. '

' → logprob: -7.004025459289551
    6. ' 
' → logprob: -7.129025459289551
    7. '<|end|>' → logprob: -7.254025459289551
    8. '    ' → logprob: -9.50402545928955
    9. '  
' → logprob: -9.50402545928955
    10. ':' → logprob: -9.87902545928955

Token 137: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5819095373153687
    2. '   ' → logprob: -0.8319095373153687
    3. ' def' → logprob: -5.206909656524658
    4. '    
' → logprob: -8.4569091796875
    5. '<|end|>' → logprob: -9.9569091796875
    6. '<|end|>' → logprob: -9.9569091796875
    7. '
' → logprob: -10.3319091796875
    8. ' ' → logprob: -10.7069091796875
    9. '	def' → logprob: -10.8319091796875
    10. '  ' → logprob: -11.3319091796875

Token 138: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.046270228922367096
    2. ' ==' → logprob: -3.2962701320648193
    3. ' def' → logprob: -5.171270370483398
    4. '__' → logprob: -6.671270370483398
    5. '==' → logprob: -7.171270370483398
    6. ' ' → logprob: -8.546270370483398
    7. 'def' → logprob: -8.671270370483398
    8. ' eql' → logprob: -10.421270370483398
    9. ' eq' → logprob: -10.671270370483398
    10. '_eq' → logprob: -11.296270370483398

Token 139: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.009163524024188519
    2. 'lt' → logprob: -4.7591633796691895
    3. 'hash' → logprob: -7.5091633796691895
    4. 'repr' → logprob: -15.009163856506348
    5. ' eq' → logprob: -15.384163856506348
    6. 'le' → logprob: -16.50916290283203
    7. 'gt' → logprob: -16.63416290283203
    8. 'cmp' → logprob: -17.50916290283203
    9. '_eq' → logprob: -17.50916290283203
    10. 'init' → logprob: -17.50916290283203

Token 140: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015791363548487425
    2. '__' → logprob: -6.501579284667969
    3. '__(
' → logprob: -9.876579284667969
    4. '__('' → logprob: -11.126579284667969
    5. '__((' → logprob: -11.876579284667969
    6. '(self' → logprob: -13.126579284667969
    7. '__("' → logprob: -13.876579284667969
    8. '__(*' → logprob: -15.001579284667969
    9. '(' → logprob: -15.501579284667969
    10. '__:' → logprob: -15.751579284667969

Token 141: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003712085890583694
    2. '(self' → logprob: -8.250370979309082
    3. ' self' → logprob: -9.250370979309082
    4. ')' → logprob: -11.375370979309082
    5. ')(' → logprob: -13.875370979309082
    6. '
' → logprob: -14.750370979309082
    7. ' ' → logprob: -15.250370979309082
    8. '   ' → logprob: -15.625370979309082
    9. 's' → logprob: -15.750370979309082
    10. 'Self' → logprob: -16.1253719329834

Token 142: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.037575218826532364
    2. '(self' → logprob: -3.4125752449035645
    3. '__' → logprob: -6.4125752449035645
    4. ')(' → logprob: -7.0375752449035645
    5. '(' → logprob: -7.2875752449035645
    6. '__(
' → logprob: -8.287574768066406
    7. '__('' → logprob: -8.412574768066406
    8. '):' → logprob: -10.037574768066406
    9. ')(__' → logprob: -10.412574768066406
    10. '__:' → logprob: -10.412574768066406

Token 143: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.884960949420929
    2. '       ' → logprob: -1.1349608898162842
    3. ' return' → logprob: -1.3849608898162842
    4. 'self' → logprob: -4.634961128234863
    5. ' f' → logprob: -5.759961128234863
    6. 'f' → logprob: -6.509961128234863
    7. ' self' → logprob: -7.009961128234863
    8. '   ' → logprob: -9.259961128234863
    9. 'def' → logprob: -10.509961128234863
    10. 'str' → logprob: -10.759961128234863

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11369185894727707
    2. ' return' → logprob: -2.613691806793213
    3. 'f' → logprob: -4.113691806793213
    4. '       ' → logprob: -4.113691806793213
    5. ' f' → logprob: -6.738691806793213
    6. '   ' → logprob: -8.363692283630371
    7. 'str' → logprob: -9.863692283630371
    8. '           ' → logprob: -10.863692283630371
    9. '
' → logprob: -12.613692283630371
    10. '        ' → logprob: -12.863692283630371

Token 145: ' str' (ID: 989)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.01822521537542343
    2. 'f' → logprob: -4.018225193023682
    3. ' str' → logprob: -9.64322566986084
    4. ' ' → logprob: -12.51822566986084
    5. 'str' → logprob: -12.89322566986084
    6. ' self' → logprob: -12.89322566986084
    7. ' ' → logprob: -13.39322566986084
    8. 'self' → logprob: -15.64322566986084
    9. '	f' → logprob: -16.018224716186523
    10. ' repr' → logprob: -18.143224716186523

Token 146: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03805858641862869
    2. '(' → logprob: -3.2880585193634033
    3. 'self' → logprob: -12.413058280944824
    4. '(s' → logprob: -12.663058280944824
    5. '((' → logprob: -13.413058280944824
    6. '(`' → logprob: -13.538058280944824
    7. '(
' → logprob: -13.788058280944824
    8. '(Self' → logprob: -13.788058280944824
    9. '(sel' → logprob: -13.788058280944824
    10. ' (' → logprob: -13.913058280944824

Token 147: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.625
    3. '}' → logprob: -17.625
    4. ')`' → logprob: -17.75
    5. ' )' → logprob: -18.25
    6. '))' → logprob: -18.375
    7. ')

' → logprob: -18.375
    8. ')}' → logprob: -18.5
    9. ')return' → logprob: -18.875
    10. '<|end|>' → logprob: -19.0

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024013089016079903
    2. '<|end|>' → logprob: -4.774013042449951
    3. '    
' → logprob: -5.274013042449951
    4. '
' → logprob: -5.524013042449951
    5. ' ' → logprob: -6.524013042449951
    6. 'def' → logprob: -6.649013042449951
    7. '<|end|>' → logprob: -7.524013042449951
    8. ' def' → logprob: -7.774013042449951
    9. '_' → logprob: -7.899013042449951
    10. '    ' → logprob: -8.02401351928711

Token 149: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005791443400084972
    2. '__' → logprob: -5.880791664123535
    3. ' def' → logprob: -6.005791664123535
    4. '   ' → logprob: -7.630791664123535
    5. ' __' → logprob: -11.255791664123535
    6. '    
' → logprob: -11.380791664123535
    7. ' ' → logprob: -12.755791664123535
    8. '	def' → logprob: -14.005791664123535
    9. '___' → logprob: -14.005791664123535
    10. '  ' → logprob: -14.380791664123535

Token 150: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011416548863053322
    2. '__' → logprob: -5.011416435241699
    3. ' def' → logprob: -5.511416435241699
    4. ' ==' → logprob: -8.0114164352417
    5. 'def' → logprob: -8.3864164352417
    6. '==' → logprob: -10.0114164352417
    7. ' ' → logprob: -10.8864164352417
    8. 'eq' → logprob: -11.6364164352417
    9. '_eq' → logprob: -12.3864164352417
    10. ' eq' → logprob: -12.8864164352417

Token 151: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.005575236864387989
    2. 'lt' → logprob: -5.505575180053711
    3. 'hash' → logprob: -6.505575180053711
    4. ' eq' → logprob: -14.255575180053711
    5. ' lt' → logprob: -18.13057518005371
    6. '_eq' → logprob: -18.38057518005371
    7. ' hash' → logprob: -18.38057518005371
    8. 'gt' → logprob: -18.50557518005371
    9. ' ' → logprob: -18.75557518005371
    10. 'e' → logprob: -19.00557518005371

Token 152: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16032922267913818
    2. '__(' → logprob: -1.9103292226791382
    3. '__('' → logprob: -10.03532886505127
    4. '__((' → logprob: -10.03532886505127
    5. '__(*' → logprob: -12.03532886505127
    6. '__(
' → logprob: -12.41032886505127
    7. '__("' → logprob: -12.66032886505127
    8. '_' → logprob: -13.53532886505127
    9. '(' → logprob: -13.78532886505127
    10. '___' → logprob: -14.41032886505127

Token 153: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08528049290180206
    2. 'other' → logprob: -2.710280418395996
    3. '<|end|>' → logprob: -4.335280418395996
    4. ' other' → logprob: -7.335280418395996
    5. ' self' → logprob: -7.460280418395996
    6. ')' → logprob: -7.960280418395996
    7. '<|end|>' → logprob: -8.210280418395996
    8. ',' → logprob: -9.085280418395996
    9. ' ' → logprob: -9.710280418395996
    10. 'obj' → logprob: -10.335280418395996

Token 154: ',' (ID: 11)
  Prédit: '__,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__,' → logprob: -0.3373635411262512
    2. ',' → logprob: -1.8373634815216064
    3. '__' → logprob: -2.0873634815216064
    4. '__(' → logprob: -6.7123637199401855
    5. '__,
' → logprob: -7.2123637199401855
    6. '<|end|>' → logprob: -8.212363243103027
    7. '__(*' → logprob: -8.587363243103027
    8. ' ,' → logprob: -8.587363243103027
    9. '__((' → logprob: -8.837363243103027
    10. ',__' → logprob: -9.212363243103027

Token 155: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3132629096508026
    2. 'other' → logprob: -1.313262939453125
    3. ' o' → logprob: -14.688262939453125
    4. '(other' → logprob: -14.938262939453125
    5. 'Other' → logprob: -16.063262939453125
    6. ' oth' → logprob: -16.188262939453125
    7. 'o' → logprob: -16.313262939453125
    8. ' ' → logprob: -16.813262939453125
    9. 'othe' → logprob: -16.938262939453125
    10. '_other' → logprob: -17.188262939453125

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024522303137928247
    2. ':' → logprob: -6.252452373504639
    3. ')' → logprob: -7.877452373504639
    4. ' ):' → logprob: -9.12745189666748
    5. '):
' → logprob: -10.50245189666748
    6. '<|end|>' → logprob: -13.50245189666748
    7. ',' → logprob: -13.62745189666748
    8. ' :' → logprob: -13.87745189666748
    9. '}:' → logprob: -14.37745189666748
    10. ':)' → logprob: -14.50245189666748

Token 157: '       ' (ID: 309)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.22300581634044647
    2. ' self' → logprob: -2.723005771636963
    3. '<|end|>' → logprob: -2.723005771636963
    4. ' ' → logprob: -3.723005771636963
    5. '    ' → logprob: -3.723005771636963
    6. ' (' → logprob: -4.848005771636963
    7. ' True' → logprob: -5.223005771636963
    8. 'self' → logprob: -6.598005771636963
    9. '       ' → logprob: -6.973005771636963
    10. ' other' → logprob: -7.473005771636963

Token 158: ' if' (ID: 538)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0012553498381748796
    2. ' other' → logprob: -7.126255512237549
    3. ' self' → logprob: -8.62625503540039
    4. 'other' → logprob: -8.62625503540039
    5. 'is' → logprob: -10.25125503540039
    6. 'self' → logprob: -10.50125503540039
    7. ' (' → logprob: -11.00125503540039
    8. ' ' → logprob: -11.87625503540039
    9. ' type' → logprob: -13.62625503540039
    10. ' if' → logprob: -14.12625503540039

Token 159: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.018576083704829216
    2. 'not' → logprob: -4.018576145172119
    3. ' isinstance' → logprob: -7.893576145172119
    4. 'other' → logprob: -10.518575668334961
    5. ' other' → logprob: -10.768575668334961
    6. ' ' → logprob: -12.643575668334961
    7. '	not' → logprob: -13.643575668334961
    8. ' ' → logprob: -15.393575668334961
    9. '  ' → logprob: -17.14357566833496
    10. '_not' → logprob: -17.26857566833496

Token 160: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.023329567164182663
    2. 'is' → logprob: -3.773329496383667
    3. 'other' → logprob: -9.398329734802246
    4. ' other' → logprob: -14.648329734802246
    5. ' hasattr' → logprob: -15.023329734802246
    6. '
' → logprob: -15.773329734802246
    7. '(is' → logprob: -16.14832878112793
    8. 'has' → logprob: -16.27332878112793
    9. 'instance' → logprob: -17.14832878112793
    10. '

' → logprob: -18.02332878112793

Token 161: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -2.9875325708417222e-05
    2. 'other' → logprob: -10.500029563903809
    3. ' other' → logprob: -13.125029563903809
    4. '(' → logprob: -15.125029563903809
    5. 'Other' → logprob: -17.750030517578125
    6. ' (' → logprob: -19.500030517578125
    7. '(self' → logprob: -19.500030517578125
    8. '_other' → logprob: -21.750030517578125
    9. 'OTHER' → logprob: -22.125030517578125
    10. '.other' → logprob: -22.625030517578125

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6935099959373474
    2. '(other' → logprob: -0.6935099959373474
    3. 'other' → logprob: -8.068510055541992
    4. '(self' → logprob: -10.818510055541992
    5. ' ,' → logprob: -11.318510055541992
    6. '(' → logprob: -11.443510055541992
    7. 'self' → logprob: -13.068510055541992
    8. ' other' → logprob: -13.068510055541992
    9. 'Other' → logprob: -13.568510055541992
    10. ' (' → logprob: -14.818510055541992

Token 163: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.011048528365790844
    2. ' Coordinate' → logprob: -4.511048316955566
    3. 'Coordinates' → logprob: -14.761048316955566
    4. 'Coordinator' → logprob: -16.136049270629883
    5. 'Coord' → logprob: -16.511049270629883
    6. 'self' → logprob: -17.011049270629883
    7. ' coordinate' → logprob: -17.636049270629883
    8. ' ' → logprob: -18.136049270629883
    9. '_coordinate' → logprob: -18.136049270629883
    10. ' Coordinates' → logprob: -18.511049270629883

Token 164: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06216105446219444
    2. '):
' → logprob: -2.8121609687805176
    3. ' ):' → logprob: -9.187161445617676
    4. ')' → logprob: -9.437161445617676
    5. '):
' → logprob: -12.312161445617676
    6. ' ):
' → logprob: -12.812161445617676
    7. '):

' → logprob: -12.937161445617676
    8. '   ' → logprob: -14.437161445617676
    9. ':' → logprob: -14.812161445617676
    10. '       ' → logprob: -15.312161445617676

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7602349519729614
    2. 'return' → logprob: -0.7602349519729614
    3. ' return' → logprob: -2.760234832763672
    4. '       ' → logprob: -7.260234832763672
    5. ':return' → logprob: -7.385234832763672
    6. ':
' → logprob: -9.635234832763672
    7. '
' → logprob: -10.260234832763672
    8. '               ' → logprob: -10.385234832763672
    9. ':' → logprob: -10.385234832763672
    10. ')return' → logprob: -10.510234832763672

Token 166: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006943640764802694
    2. ' return' → logprob: -5.006943702697754
    3. '           ' → logprob: -9.131943702697754
    4. '       ' → logprob: -9.381943702697754
    5. 'False' → logprob: -10.631943702697754
    6. '
' → logprob: -12.006943702697754
    7. ':return' → logprob: -13.006943702697754
    8. '```' → logprob: -13.631943702697754
    9. '   ' → logprob: -14.256943702697754
    10. '               ' → logprob: -15.006943702697754

Token 167: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00021140782337170094
    2. 'Not' → logprob: -8.500211715698242
    3. ' False' → logprob: -11.750211715698242
    4. '(False' → logprob: -17.375211715698242
    5. ' Not' → logprob: -18.750211715698242
    6. '=False' → logprob: -19.875211715698242
    7. 'True' → logprob: -20.750211715698242
    8. 'false' → logprob: -20.875211715698242
    9. '_Not' → logprob: -21.375211715698242
    10. '   ' → logprob: -21.750211715698242

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02067933976650238
    2. '   ' → logprob: -5.395679473876953
    3. '<|end|>' → logprob: -6.020679473876953
    4. ')' → logprob: -6.145679473876953
    5. ' and' → logprob: -6.270679473876953
    6. '    ' → logprob: -6.395679473876953
    7. '
' → logprob: -6.395679473876953
    8. '        ' → logprob: -6.770679473876953
    9. '        
' → logprob: -7.020679473876953
    10. ':' → logprob: -7.270679473876953

Token 169: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.26190251111984253
    2. '       ' → logprob: -1.5119025707244873
    3. '   ' → logprob: -5.511902332305908
    4. 'and' → logprob: -6.011902332305908
    5. '        ' → logprob: -7.011902332305908
    6. '    ' → logprob: -7.136902332305908
    7. ':' → logprob: -8.261902809143066
    8. '        
' → logprob: -8.636902809143066
    9. ' or' → logprob: -8.761902809143066
    10. '           ' → logprob: -8.761902809143066

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26843827962875366
    2. ' return' → logprob: -1.5184383392333984
    3. '       ' → logprob: -4.143438339233398
    4. '   ' → logprob: -8.018438339233398
    5. '
' → logprob: -9.768438339233398
    6. '	return' → logprob: -9.893438339233398
    7. '    ' → logprob: -11.018438339233398
    8. '        ' → logprob: -11.393438339233398
    9. '        
' → logprob: -11.643438339233398
    10. ' ' → logprob: -11.893438339233398

Token 171: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6948870420455933
    2. 'self' → logprob: -0.6948870420455933
    3. '(self' → logprob: -6.444887161254883
    4. ' (' → logprob: -8.819887161254883
    5. '(' → logprob: -13.444887161254883
    6. ' ' → logprob: -15.194887161254883
    7. '(
' → logprob: -15.569887161254883
    8. '	self' → logprob: -15.694887161254883
    9. '   ' → logprob: -17.069887161254883
    10. ' ' → logprob: -17.444887161254883

Token 172: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -5.228561349213123e-05
    2. 'east' → logprob: -10.250052452087402
    3. '.' → logprob: -11.125052452087402
    4. '.eas' → logprob: -13.875052452087402
    5. '.eql' → logprob: -14.375052452087402
    6. 'self' → logprob: -16.250051498413086
    7. '.__' → logprob: -16.375051498413086
    8. ' .' → logprob: -16.750051498413086
    9. '.е' → logprob: -16.875051498413086
    10. ' east' → logprob: -17.125051498413086

Token 173: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.007420621812343597
    2. '_w' → logprob: -5.132420539855957
    3. 'w' → logprob: -7.007420539855957
    4. '_' → logprob: -8.382420539855957
    5. 'q' → logprob: -9.132420539855957
    6. '_ast' → logprob: -9.382420539855957
    7. 'east' → logprob: -10.132420539855957
    8. 'a' → logprob: -11.007420539855957
    9. 'qual' → logprob: -11.007420539855957
    10. 'st' → logprob: -11.382420539855957

Token 174: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.000001907348633
    3. ' _' → logprob: -15.125001907348633
    4. 'w' → logprob: -15.875001907348633
    5. 'west' → logprob: -16.000001907348633
    6. '_s' → logprob: -16.750001907348633
    7. '._' → logprob: -17.500001907348633
    8. '_we' → logprob: -17.875001907348633
    9. '_e' → logprob: -18.000001907348633
    10. '_f' → logprob: -18.875001907348633

Token 175: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0013013073476031423
    2. '_w' → logprob: -7.126301288604736
    3. '_est' → logprob: -8.001301765441895
    4. 'west' → logprob: -9.001301765441895
    5. 'w' → logprob: -11.001301765441895
    6. 'st' → logprob: -11.251301765441895
    7. '_rest' → logprob: -12.751301765441895
    8. '_' → logprob: -12.876301765441895
    9. 'ew' → logprob: -14.001301765441895
    10. '_st' → logprob: -14.626301765441895

Token 176: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25192990899086
    2. '==' → logprob: -1.5019298791885376
    3. '=' → logprob: -15.251930236816406
    4. ')==' → logprob: -15.376930236816406
    5. ',' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.376930236816406
    7. '==
' → logprob: -17.001930236816406
    8. '===' → logprob: -17.126930236816406
    9. '[' → logprob: -17.251930236816406
    10. ']==' → logprob: -17.376930236816406

Token 177: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.575939416885376
    2. ' other' → logprob: -0.825939416885376
    3. 'Other' → logprob: -17.700939178466797
    4. '(other' → logprob: -18.200939178466797
    5. '_other' → logprob: -19.825939178466797
    6. '.other' → logprob: -20.200939178466797
    7. ' ' → logprob: -23.075939178466797
    8. ' Other' → logprob: -23.450939178466797
    9. 'OTHER' → logprob: -23.450939178466797
    10. ' oth' → logprob: -23.825939178466797

Token 178: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.028563378378748894
    2. '.' → logprob: -3.7785632610321045
    3. '._' → logprob: -5.528563499450684
    4. 'east' → logprob: -7.653563499450684
    5. '_.' → logprob: -8.153563499450684
    6. '.w' → logprob: -8.278563499450684
    7. ' .' → logprob: -8.653563499450684
    8. '_e' → logprob: -10.278563499450684
    9. '_' → logprob: -10.528563499450684
    10. '.eas' → logprob: -11.278563499450684

Token 179: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.07563088089227676
    2. 'west' → logprob: -3.3256309032440186
    3. '_w' → logprob: -3.4506309032440186
    4. 'w' → logprob: -5.3256306648254395
    5. 'st' → logprob: -9.325631141662598
    6. 'east' → logprob: -10.075631141662598
    7. 'other' → logprob: -10.325631141662598
    8. '_' → logprob: -10.575631141662598
    9. '_other' → logprob: -11.450631141662598
    10. '.w' → logprob: -11.575631141662598

Token 180: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -3.726595241460018e-05
    2. 'west' → logprob: -10.37503719329834
    3. 'w' → logprob: -12.87503719329834
    4. '_s' → logprob: -13.00003719329834
    5. 'ew' → logprob: -15.00003719329834
    6. 's' → logprob: -15.62503719329834
    7. 'other' → logprob: -16.250038146972656
    8. 'West' → logprob: -16.250038146972656
    9. '_other' → logprob: -16.625038146972656
    10. '_' → logprob: -16.625038146972656

Token 181: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.02614898420870304
    2. 'st' → logprob: -3.901149034500122
    3. 'west' → logprob: -5.276148796081543
    4. 'w' → logprob: -7.901148796081543
    5. '_w' → logprob: -9.776148796081543
    6. 'ast' → logprob: -11.526148796081543
    7. 'ost' → logprob: -11.651148796081543
    8. 'ew' → logprob: -11.901148796081543
    9. 'rest' → logprob: -11.901148796081543
    10. '_est' → logprob: -12.276148796081543

Token 182: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020915418863297
    2. 'and' → logprob: -2.3502092361450195
    3. ' ' → logprob: -14.47520923614502
    4. '        ' → logprob: -14.47520923614502
    5. '       ' → logprob: -14.97520923614502
    6. ' ' → logprob: -15.10020923614502
    7. '    ' → logprob: -15.22520923614502
    8. '   ' → logprob: -16.350208282470703
    9. '&&' → logprob: -16.475208282470703
    10. '      ' → logprob: -16.850208282470703

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132624924182892
    2. ' self' → logprob: -1.3132624626159668
    3. '   ' → logprob: -14.813262939453125
    4. ' ' → logprob: -15.188262939453125
    5. ' ' → logprob: -17.063262939453125
    6. '(self' → logprob: -17.188262939453125
    7. '       ' → logprob: -17.188262939453125
    8. '
' → logprob: -17.313262939453125
    9. '	self' → logprob: -17.313262939453125
    10. '    ' → logprob: -18.438262939453125

Token 184: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -2.1054253011243418e-05
    2. '.' → logprob: -10.875020980834961
    3. 'north' → logprob: -13.750020980834961
    4. ' .' → logprob: -14.375020980834961
    5. '.nan' → logprob: -15.750020980834961
    6. '.NORTH' → logprob: -16.87502098083496
    7. '.number' → logprob: -17.50002098083496
    8. '.N' → logprob: -18.12502098083496
    9. '.user' → logprob: -18.12502098083496
    10. ' north' → logprob: -18.37502098083496

Token 185: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.01468085777014494
    2. 'north' → logprob: -5.014680862426758
    3. '_n' → logprob: -5.514680862426758
    4. '_' → logprob: -5.764680862426758
    5. '_s' → logprob: -7.389680862426758
    6. 'ort' → logprob: -9.389680862426758
    7. '_or' → logprob: -10.139680862426758
    8. 'o' → logprob: -12.014680862426758
    9. '_o' → logprob: -12.139680862426758
    10. 'or' → logprob: -12.514680862426758

Token 186: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.3319124011322856e-05
    2. 'south' → logprob: -10.750022888183594
    3. 's' → logprob: -13.625022888183594
    4. '_w' → logprob: -15.875022888183594
    5. '\' → logprob: -16.125022888183594
    6. '_n' → logprob: -16.750022888183594
    7. '```' → logprob: -16.750022888183594
    8. 'South' → logprob: -17.250022888183594
    9. '_sn' → logprob: -17.750022888183594
    10. 'north' → logprob: -17.750022888183594

Token 187: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.7558854818344116
    2. 'south' → logprob: -1.3808854818344116
    3. '_s' → logprob: -1.5058854818344116
    4. 's' → logprob: -3.005885601043701
    5. 'orth' → logprob: -5.130885601043701
    6. '_' → logprob: -7.005885601043701
    7. 'sou' → logprob: -8.505885124206543
    8. 'uth' → logprob: -8.630885124206543
    9. 'out' → logprob: -8.630885124206543
    10. 'oth' → logprob: -9.630885124206543

Token 188: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10020796209573746
    2. '==' → logprob: -2.350208044052124
    3. '=' → logprob: -14.600208282470703
    4. ' ' → logprob: -15.225208282470703
    5. ' ' → logprob: -15.475208282470703
    6. '==
' → logprob: -16.225208282470703
    7. ')==' → logprob: -16.725208282470703
    8. ')' → logprob: -16.975208282470703
    9. ' =' → logprob: -17.350208282470703
    10. '===' → logprob: -17.350208282470703

Token 189: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.004078401252627373
    2. ' other' → logprob: -5.504078388214111
    3. 'Other' → logprob: -19.879077911376953
    4. '(other' → logprob: -19.879077911376953
    5. '.other' → logprob: -22.254077911376953
    6. '_other' → logprob: -22.379077911376953
    7. '其他' → logprob: -25.879077911376953
    8. 'OTHER' → logprob: -26.004077911376953
    9. 'oth' → logprob: -26.629077911376953
    10. '   ' → logprob: -26.629077911376953

Token 190: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.014756395481526852
    2. 'north' → logprob: -4.264756202697754
    3. '_n' → logprob: -7.514756202697754
    4. '._' → logprob: -10.389756202697754
    5. '_.' → logprob: -12.389756202697754
    6. ' .' → logprob: -12.764756202697754
    7. ' north' → logprob: -13.264756202697754
    8. 'n' → logprob: -13.389756202697754
    9. ',n' → logprob: -13.639756202697754
    10. 'other' → logprob: -13.889756202697754

Token 191: 'orth' (ID: 2909)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.002547719981521368
    2. 'south' → logprob: -6.252547740936279
    3. 's' → logprob: -7.502547740936279
    4. 'orth' → logprob: -10.377547264099121
    5. 'sou' → logprob: -11.377547264099121
    6. 'ns' → logprob: -11.377547264099121
    7. '_w' → logprob: -12.377547264099121
    8. 'north' → logprob: -13.127547264099121
    9. 'e' → logprob: -13.377547264099121
    10. '\' → logprob: -13.877547264099121

Token 192: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -9.126521035796031e-05
    2. 'south' → logprob: -9.500091552734375
    3. '_w' → logprob: -11.750091552734375
    4. 's' → logprob: -12.250091552734375
    5. '_sn' → logprob: -13.375091552734375
    6. '_other' → logprob: -14.625091552734375
    7. 'sou' → logprob: -14.875091552734375
    8. 'w' → logprob: -15.000091552734375
    9. '_self' → logprob: -15.750091552734375
    10. '_ns' → logprob: -16.000091552734375

Token 193: 'outh' (ID: 4656)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.6583549380302429
    2. 'outh' → logprob: -0.7833549380302429
    3. 's' → logprob: -4.533354759216309
    4. '_s' → logprob: -4.783354759216309
    5. 'orth' → logprob: -5.408354759216309
    6. 'sou' → logprob: -6.658354759216309
    7. 'ous' → logprob: -8.783354759216309
    8. '_' → logprob: -8.908354759216309
    9. 'oth' → logprob: -9.533354759216309
    10. 'uth' → logprob: -10.408354759216309

Token 194: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011946992948651314
    2. '<|end|>' → logprob: -4.761947154998779
    3. '_' → logprob: -6.136947154998779
    4. '    
' → logprob: -8.261946678161621
    5. '  ' → logprob: -8.386946678161621
    6. ' ' → logprob: -8.761946678161621
    7. '    ' → logprob: -9.136946678161621
    8. 'def' → logprob: -9.386946678161621
    9. ',' → logprob: -9.511946678161621
    10. '
' → logprob: -9.886946678161621

Token 196: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0008342855726368725
    2. '   ' → logprob: -7.2508344650268555
    3. ' def' → logprob: -9.000834465026855
    4. ' ' → logprob: -14.000834465026855
    5. '	def' → logprob: -16.37583351135254
    6. '  ' → logprob: -16.87583351135254
    7. '    
' → logprob: -17.62583351135254
    8. '__' → logprob: -18.37583351135254
    9. '       ' → logprob: -18.37583351135254
    10. '_def' → logprob: -19.00083351135254

Token 197: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5255095362663269
    2. '__' → logprob: -0.9005095362663269
    3. 'def' → logprob: -6.150509357452393
    4. ' def' → logprob: -8.52550983428955
    5. '   ' → logprob: -10.27550983428955
    6. ' ' → logprob: -11.90050983428955
    7. 'hash' → logprob: -12.77550983428955
    8. '.__' → logprob: -13.15050983428955
    9. '```' → logprob: -13.90050983428955
    10. '_hash' → logprob: -14.02550983428955

Token 198: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.008615042082965374
    2. 'lt' → logprob: -4.758615016937256
    3. ' hash' → logprob: -14.758615493774414
    4. 'ne' → logprob: -16.633615493774414
    5. ' lt' → logprob: -18.883615493774414
    6. '_hash' → logprob: -19.008615493774414
    7. 'gt' → logprob: -19.508615493774414
    8. '	hash' → logprob: -19.883615493774414
    9. ' ' → logprob: -21.008615493774414
    10. 'Hash' → logprob: -21.508615493774414

Token 199: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04693184792995453
    2. '(self' → logprob: -3.296931743621826
    3. '__' → logprob: -4.921931743621826
    4. '__(
' → logprob: -6.796931743621826
    5. '(' → logprob: -8.296932220458984
    6. '__((' → logprob: -8.796932220458984
    7. '__('' → logprob: -11.171932220458984
    8. '<|end|>' → logprob: -11.421932220458984
    9. '_(' → logprob: -11.671932220458984
    10. '_' → logprob: -12.921932220458984

Token 200: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8921695047756657e-05
    2. ' self' → logprob: -10.500028610229492
    3. ')' → logprob: -13.750028610229492
    4. '(self' → logprob: -15.625028610229492
    5. '   ' → logprob: -17.250028610229492
    6. ' ' → logprob: -18.500028610229492
    7. '<|end|>' → logprob: -18.875028610229492
    8. 's' → logprob: -19.250028610229492
    9. '):
' → logprob: -19.750028610229492
    10. '
' → logprob: -19.875028610229492

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01561807282269001
    2. '):
' → logprob: -4.390617847442627
    3. 'self' → logprob: -6.515617847442627
    4. ')' → logprob: -7.390617847442627
    5. '(self' → logprob: -7.390617847442627
    6. '__' → logprob: -9.015618324279785
    7. ' ):' → logprob: -9.765618324279785
    8. '   ' → logprob: -10.015618324279785
    9. '():' → logprob: -10.140618324279785
    10. ' self' → logprob: -11.015618324279785

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035388940013945103
    2. ' return' → logprob: -5.878539085388184
    3. 'return' → logprob: -7.253539085388184
    4. '   ' → logprob: -10.753539085388184
    5. '()' → logprob: -12.628539085388184
    6. '      ' → logprob: -14.503539085388184
    7. ' hash' → logprob: -15.003539085388184
    8. 'hash' → logprob: -15.878539085388184
    9. '
' → logprob: -16.503538131713867
    10. '     ' → logprob: -16.503538131713867

Token 203: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002233245177194476
    2. ' return' → logprob: -8.500223159790039
    3. 'hash' → logprob: -11.250223159790039
    4. '       ' → logprob: -12.125223159790039
    5. '   ' → logprob: -13.500223159790039
    6. '	return' → logprob: -18.50022315979004
    7. '
' → logprob: -19.50022315979004
    8. ' hash' → logprob: -19.75022315979004
    9. '           ' → logprob: -19.87522315979004
    10. '(hash' → logprob: -20.00022315979004

Token 204: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.04859509319067001
    2. ' hash' → logprob: -3.0485951900482178
    3. '(hash' → logprob: -11.798595428466797
    4. '   ' → logprob: -16.298595428466797
    5. '	hash' → logprob: -16.673595428466797
    6. '_hash' → logprob: -17.923595428466797
    7. 'h' → logprob: -18.173595428466797
    8. '/hash' → logprob: -18.173595428466797
    9. 'Hash' → logprob: -18.548595428466797
    10. ' ' → logprob: -18.923595428466797

Token 205: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.73183855926618e-05
    2. '(' → logprob: -9.500077247619629
    3. '(self' → logprob: -13.250077247619629
    4. '(f' → logprob: -14.375077247619629
    5. '(str' → logprob: -16.500078201293945
    6. '(
' → logprob: -17.500078201293945
    7. ' ((' → logprob: -18.625078201293945
    8. '(s' → logprob: -18.875078201293945
    9. ' (' → logprob: -20.000078201293945
    10. '(('' → logprob: -20.000078201293945

Token 206: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.955703818472102e-05
    2. ' self' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.500059127807617
    4. '
' → logprob: -15.125059127807617
    5. '(self' → logprob: -15.500059127807617
    6. '    ' → logprob: -16.875059127807617
    7. ' ' → logprob: -17.250059127807617
    8. '       ' → logprob: -17.625059127807617
    9. '           ' → logprob: -17.625059127807617
    10. '  ' → logprob: -17.875059127807617

Token 207: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.00011987409379798919
    2. '.' → logprob: -9.125120162963867
    3. '.eas' → logprob: -12.125120162963867
    4. ' .' → logprob: -12.625120162963867
    5. 'east' → logprob: -13.625120162963867
    6. 'self' → logprob: -15.000120162963867
    7. '.self' → logprob: -16.000120162963867
    8. ').' → logprob: -16.250120162963867
    9. '.w' → logprob: -16.500120162963867
    10. '.es' → logprob: -16.625120162963867

Token 208: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.00021390743495430797
    2. '_w' → logprob: -9.250213623046875
    3. 'st' → logprob: -9.750213623046875
    4. '_' → logprob: -10.625213623046875
    5. 'east' → logprob: -11.625213623046875
    6. 'w' → logprob: -11.625213623046875
    7. 'a' → logprob: -12.125213623046875
    8. '.ast' → logprob: -12.500213623046875
    9. '_ast' → logprob: -12.750213623046875
    10. '[' → logprob: -14.125213623046875

Token 209: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.9385402993066236e-05
    2. 'west' → logprob: -11.250019073486328
    3. 'self' → logprob: -12.125019073486328
    4. 'w' → logprob: -14.625019073486328
    5. 'West' → logprob: -15.000019073486328
    6. 'east' → logprob: -17.375019073486328
    7. '_self' → logprob: -17.625019073486328
    8. '-west' → logprob: -17.750019073486328
    9. ' west' → logprob: -17.875019073486328
    10. '_' → logprob: -17.875019073486328

Token 210: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.02594887465238571
    2. 'west' → logprob: -4.150949001312256
    3. 'st' → logprob: -4.775949001312256
    4. 'w' → logprob: -7.400949001312256
    5. '_w' → logprob: -7.525949001312256
    6. '_est' → logprob: -8.900948524475098
    7. 'rest' → logprob: -9.400948524475098
    8. '_st' → logprob: -10.900948524475098
    9. 'east' → logprob: -11.775948524475098
    10. 'ew' → logprob: -11.775948524475098

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.077528764260933e-05
    2. ' ,' → logprob: -9.500081062316895
    3. ',self' → logprob: -12.375081062316895
    4. ',
' → logprob: -13.750081062316895
    5. 'self' → logprob: -14.250081062316895
    6. '   ' → logprob: -19.500080108642578
    7. '
' → logprob: -20.125080108642578
    8. 's' → logprob: -20.125080108642578
    9. '),' → logprob: -20.250080108642578
    10. ' self' → logprob: -20.250080108642578

Token 212: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602376252412796
    2. ' self' → logprob: -1.9102376699447632
    3. ' ' → logprob: -12.535237312316895
    4. '       ' → logprob: -12.785237312316895
    5. '   ' → logprob: -12.910237312316895
    6. '    ' → logprob: -13.410237312316895
    7. '        ' → logprob: -14.410237312316895
    8. '  ' → logprob: -14.535237312316895
    9. '	self' → logprob: -14.660237312316895
    10. '     ' → logprob: -15.035237312316895

Token 213: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -9.329167369287461e-05
    2. 'north' → logprob: -9.375093460083008
    3. '_n' → logprob: -11.875093460083008
    4. ',n' → logprob: -14.750093460083008
    5. '._' → logprob: -14.875093460083008
    6. '_.' → logprob: -15.000093460083008
    7. ' .' → logprob: -15.500093460083008
    8. ').' → logprob: -16.625093460083008
    9. ' north' → logprob: -17.625093460083008
    10. '.' → logprob: -17.875093460083008

Token 214: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.0009226576657965779
    2. 'north' → logprob: -7.000922679901123
    3. '_' → logprob: -11.750922203063965
    4. '_n' → logprob: -13.500922203063965
    5. '_or' → logprob: -14.000922203063965
    6. 'ort' → logprob: -15.375922203063965
    7. 'or' → logprob: -15.875922203063965
    8. '_s' → logprob: -15.875922203063965
    9. 'o' → logprob: -16.00092315673828
    10. '__' → logprob: -16.50092315673828

Token 215: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.002012860029935837
    2. '_w' → logprob: -6.502012729644775
    3. 'south' → logprob: -7.627012729644775
    4. 'w' → logprob: -11.502013206481934
    5. '_ns' → logprob: -12.002013206481934
    6. '_n' → logprob: -13.252013206481934
    7. 's' → logprob: -13.752013206481934
    8. 'ns' → logprob: -14.002013206481934
    9. '_' → logprob: -14.127013206481934
    10. '_sn' → logprob: -14.752013206481934

Token 216: 'outh' (ID: 4656)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.07377514988183975
    2. 'south' → logprob: -3.323775053024292
    3. 'outh' → logprob: -3.698775053024292
    4. 's' → logprob: -4.698775291442871
    5. '_' → logprob: -7.823775291442871
    6. 'sou' → logprob: -8.073775291442871
    7. 'orth' → logprob: -8.448775291442871
    8. 'uth' → logprob: -8.948775291442871
    9. '_out' → logprob: -10.073775291442871
    10. 'out' → logprob: -10.698775291442871

Token 217: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.85104202805087e-05
    2. ')' → logprob: -9.750078201293945
    3. '))
' → logprob: -10.875078201293945
    4. ' ))' → logprob: -14.000078201293945
    5. '   ' → logprob: -15.500078201293945
    6. '))

' → logprob: -17.000078201293945
    7. '       ' → logprob: -17.125078201293945
    8. ')))' → logprob: -17.250078201293945
    9. ' ' → logprob: -17.500078201293945
    10. '()))' → logprob: -17.625078201293945

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32568028569221497
    2. 'def' → logprob: -1.3256802558898926
    3. ' def' → logprob: -5.325680255889893
    4. '<|end|>' → logprob: -5.825680255889893
    5. '
' → logprob: -5.950680255889893
    6. '    
' → logprob: -7.075680255889893
    7. '<|end|>' → logprob: -8.20068073272705
    8. '#' → logprob: -8.82568073272705
    9. ' ' → logprob: -8.82568073272705
    10. ' 
' → logprob: -9.20068073272705

Token 219: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05918167904019356
    2. ' def' → logprob: -3.3091816902160645
    3. '   ' → logprob: -3.9341816902160645
    4. ' ' → logprob: -7.4341816902160645
    5. '    
' → logprob: -8.559181213378906
    6. '_' → logprob: -8.809181213378906
    7. '#' (adapté à ' #') → logprob: -9.809181213378906
    8. ' 
' → logprob: -9.809181213378906
    9. '   
' → logprob: -9.809181213378906
    10. '.' → logprob: -9.934181213378906

Token 220: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010465048253536224
    2. ' def' → logprob: -6.876046657562256
    3. '   ' → logprob: -11.501046180725098
    4. '#' → logprob: -14.001046180725098
    5. ' ' → logprob: -14.501046180725098
    6. 'neighbors' → logprob: -15.001046180725098
    7. '@' → logprob: -15.251046180725098
    8. '    
' → logprob: -15.626046180725098
    9. 'de' → logprob: -15.876046180725098
    10. 'd' → logprob: -15.876046180725098

Token 221: ' sorting' (ID: 51375)
  Prédit: 'ordering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ordering' → logprob: -1.527274489402771
    2. 'priority' → logprob: -1.902274489402771
    3. 'def' → logprob: -2.1522746086120605
    4. ' use' → logprob: -2.2772746086120605
    5. ' ordering' → logprob: -2.2772746086120605
    6. 'heap' → logprob: -3.4022746086120605
    7. ' priority' → logprob: -3.6522746086120605
    8. 'the' → logprob: -3.7772746086120605
    9. 'neighbors' → logprob: -3.7772746086120605
    10. 'use' → logprob: -3.9022746086120605

Token 222: ' or' (ID: 503)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3718811869621277
    2. '   ' → logprob: -1.3718812465667725
    3. ' def' → logprob: -2.8718812465667725
    4. ' ' → logprob: -9.121881484985352
    5. '  ' → logprob: -9.121881484985352
    6. '    ' → logprob: -10.871881484985352
    7. '	def' → logprob: -10.996881484985352
    8. '<|end|>' → logprob: -10.996881484985352
    9. ':def' → logprob: -11.496881484985352
    10. ')' → logprob: -11.621881484985352

Token 223: ' comparisons' (ID: 68481)
  Prédit: 'ordering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordering' → logprob: -0.3335683047771454
    2. 'comparison' → logprob: -2.0835683345794678
    3. 'def' → logprob: -2.5835683345794678
    4. ' ordering' → logprob: -3.7085683345794678
    5. 'other' → logprob: -3.8335683345794678
    6. ' comparing' → logprob: -4.708568096160889
    7. 'com' → logprob: -4.958568096160889
    8. ' comparison' → logprob: -5.083568096160889
    9. ' comparisons' → logprob: -5.458568096160889
    10. 'priority' → logprob: -5.708568096160889

Token 224: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21461695432662964
    2. '   ' → logprob: -1.7146170139312744
    3. ' def' → logprob: -4.339616775512695
    4. ' ' → logprob: -10.214616775512695
    5. '  ' → logprob: -10.839616775512695
    6. '<|end|>' → logprob: -11.464616775512695
    7. '    
' → logprob: -13.089616775512695
    8. ':def' → logprob: -13.339616775512695
    9. '	def' → logprob: -13.589616775512695
    10. '    ' → logprob: -14.214616775512695

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16562522947788239
    2. 'def' → logprob: -2.0406253337860107
    3. ' def' → logprob: -3.7906253337860107
    4. ' ' → logprob: -10.41562557220459
    5. '    
' → logprob: -10.66562557220459
    6. '  ' → logprob: -10.66562557220459
    7. '<|end|>' → logprob: -11.16562557220459
    8. '    ' → logprob: -12.04062557220459
    9. '
' → logprob: -12.29062557220459
    10. '	def' → logprob: -13.54062557220459

Token 226: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0022637327201664448
    2. '   ' → logprob: -6.25226354598999
    3. ' def' → logprob: -8.002264022827148
    4. ' ' → logprob: -15.502264022827148
    5. '	def' → logprob: -15.627264022827148
    6. '__' → logprob: -16.75226402282715
    7. '  ' → logprob: -18.12726402282715
    8. '_def' → logprob: -18.62726402282715
    9. ':def' → logprob: -19.37726402282715
    10. 'de' → logprob: -19.75226402282715

Token 227: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4755692780017853
    2. '__' → logprob: -0.9755692481994629
    3. ' def' → logprob: -7.100569248199463
    4. 'def' → logprob: -7.475569248199463
    5. ' ' → logprob: -9.850569725036621
    6. ' _' → logprob: -10.600569725036621
    7. '_lt' → logprob: -12.350569725036621
    8. '.__' → logprob: -12.600569725036621
    9. '_' → logprob: -12.600569725036621
    10. '_def' → logprob: -12.725569725036621

Token 228: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: 0.0
    2. ' lt' → logprob: -19.25
    3. '_lt' → logprob: -20.25
    4. 'le' → logprob: -20.75
    5. 'eq' → logprob: -21.5
    6. 'LT' → logprob: -22.25
    7. 'gt' → logprob: -24.0
    8. '.lt' → logprob: -25.25
    9. 'hash' → logprob: -25.625
    10. 'less' → logprob: -25.875

Token 229: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -2.546478935983032e-05
    2. '(self' → logprob: -11.125025749206543
    3. '__' → logprob: -11.875025749206543
    4. '(' → logprob: -12.875025749206543
    5. '__(
' → logprob: -14.375025749206543
    6. '_(' → logprob: -15.125025749206543
    7. '__((' → logprob: -15.375025749206543
    8. '__('' → logprob: -15.875025749206543
    9. '__("' → logprob: -17.375024795532227
    10. '__(*' → logprob: -18.000024795532227

Token 230: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007505440153181553
    2. 'other' → logprob: -7.250750541687012
    3. ' self' → logprob: -10.125750541687012
    4. ' other' → logprob: -15.000750541687012
    5. '(self' → logprob: -16.125751495361328
    6. '   ' → logprob: -18.500751495361328
    7. 'Other' → logprob: -18.750751495361328
    8. ')' → logprob: -18.875751495361328
    9. '
' → logprob: -19.000751495361328
    10. ' ' → logprob: -19.000751495361328

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004890497075393796
    2. ' ,' → logprob: -8.125489234924316
    3. 'self' → logprob: -8.875489234924316
    4. '__,' → logprob: -10.000489234924316
    5. ',self' → logprob: -12.750489234924316
    6. '_,' → logprob: -13.000489234924316
    7. '__(' → logprob: -14.125489234924316
    8. '):
' → logprob: -14.875489234924316
    9. '(self' → logprob: -14.875489234924316
    10. ',
' → logprob: -15.250489234924316

Token 232: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.06197776645421982
    2. ' other' → logprob: -2.8119778633117676
    3. 'self' → logprob: -11.56197738647461
    4. 'Other' → logprob: -14.56197738647461
    5. '(other' → logprob: -16.56197738647461
    6. '.other' → logprob: -17.18697738647461
    7. ' self' → logprob: -17.31197738647461
    8. '_other' → logprob: -17.81197738647461
    9. ' ' → logprob: -18.31197738647461
    10. 'oth' → logprob: -20.31197738647461

Token 233: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018231770023703575
    2. '):
' → logprob: -4.0182318687438965
    3. ' ):' → logprob: -9.893231391906738
    4. ')' → logprob: -11.143231391906738
    5. ':' → logprob: -11.393231391906738
    6. '):
' → logprob: -12.768231391906738
    7. '):

' → logprob: -14.018231391906738
    8. ' ):
' → logprob: -14.143231391906738
    9. '>):' → logprob: -14.768231391906738
    10. '**' → logprob: -15.518231391906738

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011486753646750003
    2. 'return' → logprob: -9.750114440917969
    3. ' return' → logprob: -10.500114440917969
    4. ' if' → logprob: -11.750114440917969
    5. '   ' → logprob: -12.375114440917969
    6. '      ' → logprob: -12.500114440917969
    7. ':' → logprob: -13.375114440917969
    8. 'if' → logprob: -13.500114440917969
    9. ':return' → logprob: -13.625114440917969
    10. '           ' → logprob: -13.875114440917969

Token 235: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21652057766914368
    2. ' if' → logprob: -1.7165205478668213
    3. '       ' → logprob: -4.8415207862854
    4. 'return' → logprob: -4.9665207862854
    5. ' return' → logprob: -8.966520309448242
    6. '
' → logprob: -13.716520309448242
    7. '	if' → logprob: -13.966520309448242
    8. '   ' → logprob: -14.216520309448242
    9. '           ' → logprob: -15.216520309448242
    10. '0' → logprob: -16.216520309448242

Token 236: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10022036731243134
    2. ' self' → logprob: -2.3502204418182373
    3. ' not' → logprob: -12.350220680236816
    4. '	self' → logprob: -12.975220680236816
    5. 'not' → logprob: -12.975220680236816
    6. '(self' → logprob: -13.225220680236816
    7. ' ' → logprob: -14.225220680236816
    8. ' isinstance' → logprob: -14.725220680236816
    9. '[self' → logprob: -14.725220680236816
    10. '=self' → logprob: -14.850220680236816

Token 237: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -6.933173426659778e-05
    2. '.' → logprob: -9.875069618225098
    3. 'east' → logprob: -11.625069618225098
    4. ' .' → logprob: -12.875069618225098
    5. '.eql' → logprob: -13.250069618225098
    6. '.eas' → logprob: -13.500069618225098
    7. '.n' → logprob: -14.625069618225098
    8. '>.' → logprob: -14.750069618225098
    9. ').' → logprob: -14.875069618225098
    10. '.s' → logprob: -15.375069618225098

Token 238: 'ast' (ID: 629)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.1363937258720398
    2. 'ast' → logprob: -2.1363937854766846
    3. 'w' → logprob: -5.0113935470581055
    4. '_' → logprob: -6.2613935470581055
    5. '_ast' → logprob: -8.136393547058105
    6. 'west' → logprob: -9.136393547058105
    7. '.ast' → logprob: -9.261393547058105
    8. '.w' → logprob: -9.511393547058105
    9. 'east' → logprob: -9.761393547058105
    10. 'st' → logprob: -10.761393547058105

Token 239: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -14.00000286102295
    3. ' _' → logprob: -14.12500286102295
    4. 'w' → logprob: -14.12500286102295
    5. 'west' → logprob: -14.87500286102295
    6. '<_' → logprob: -16.500003814697266
    7. '_we' → logprob: -16.875003814697266
    8. '._' → logprob: -17.000003814697266
    9. '_s' → logprob: -17.000003814697266
    10. '   ' → logprob: -17.625003814697266

Token 240: 'est' (ID: 376)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.2635798752307892
    2. 'est' → logprob: -2.013579845428467
    3. 'west' → logprob: -2.763579845428467
    4. 'w' → logprob: -3.388579845428467
    5. 'st' → logprob: -6.888579845428467
    6. 'ew' → logprob: -9.513580322265625
    7. '_est' → logprob: -9.638580322265625
    8. '_' → logprob: -9.763580322265625
    9. 'ast' → logprob: -9.763580322265625
    10. 'West' → logprob: -10.763580322265625

Token 241: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6153039932250977
    2. '!=' → logprob: -0.9903039932250977
    3. ' !=' → logprob: -3.2403039932250977
    4. ' ==' → logprob: -3.6153039932250977
    5. '<' → logprob: -3.8653039932250977
    6. ' <' → logprob: -7.240303993225098
    7. '[' → logprob: -8.365303993225098
    8. '=' → logprob: -10.740303993225098
    9. '<len' → logprob: -11.115303993225098
    10. ' ' → logprob: -11.865303993225098

Token 242: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -5.836499985889532e-05
    2. ' other' → logprob: -9.7500581741333
    3. '(other' → logprob: -20.250059127807617
    4. '.other' → logprob: -21.000059127807617
    5. 'Other' → logprob: -22.125059127807617
    6. ' ' → logprob: -23.875059127807617
    7. '_other' → logprob: -24.250059127807617
    8. '   ' → logprob: -24.625059127807617
    9. 'othe' → logprob: -24.750059127807617
    10. '-other' → logprob: -25.250059127807617

Token 243: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -9.913265239447355e-05
    2. '._' → logprob: -9.750099182128906
    3. 'east' → logprob: -10.875099182128906
    4. '_e' → logprob: -11.625099182128906
    5. '.w' → logprob: -12.500099182128906
    6. '.' → logprob: -12.625099182128906
    7. ' .' → logprob: -12.750099182128906
    8. '_.' → logprob: -14.000099182128906
    9. '.eas' → logprob: -14.625099182128906
    10. '```' → logprob: -15.000099182128906

Token 244: 'ast' (ID: 629)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.01392359845340252
    2. 'ast' → logprob: -4.513923645019531
    3. '.w' → logprob: -6.888923645019531
    4. 'w' → logprob: -7.263923645019531
    5. 'east' → logprob: -7.888923645019531
    6. '.' → logprob: -8.638923645019531
    7. 'west' → logprob: -8.638923645019531
    8. '_' → logprob: -8.763923645019531
    9. '.ast' → logprob: -9.138923645019531
    10. '._' → logprob: -9.263923645019531

Token 245: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -4.320199877838604e-07
    2. 'west' → logprob: -15.0
    3. 'w' → logprob: -17.25
    4. 'West' → logprob: -18.0
    5. '_' → logprob: -20.625
    6. 'ew' → logprob: -20.75
    7. 'W' → logprob: -21.125
    8. '._' → logprob: -21.25
    9. '   ' → logprob: -21.375
    10. '_s' → logprob: -21.75

Token 246: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.007182637695223093
    2. '_w' → logprob: -5.757182598114014
    3. 'w' → logprob: -6.507182598114014
    4. 'st' → logprob: -6.757182598114014
    5. 'west' → logprob: -6.757182598114014
    6. 'ew' → logprob: -9.257183074951172
    7. '_est' → logprob: -10.132183074951172
    8. 'rest' → logprob: -11.007183074951172
    9. '_st' → logprob: -12.382183074951172
    10. 'West' → logprob: -12.382183074951172

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3876405358314514
    2. ':
' → logprob: -1.1376404762268066
    3. ':return' → logprob: -7.387640476226807
    4. '       ' → logprob: -9.262640953063965
    5. '):
' → logprob: -11.012640953063965
    6. ':
' → logprob: -11.387640953063965
    7. ' :
' → logprob: -11.512640953063965
    8. ' :' → logprob: -12.262640953063965
    9. '           ' → logprob: -12.387640953063965
    10. ':

' → logprob: -13.012640953063965

Token 248: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.057036954909563065
    2. ' return' → logprob: -3.182036876678467
    3. '           ' → logprob: -4.307036876678467
    4. '       ' → logprob: -8.557037353515625
    5. ':return' → logprob: -8.682037353515625
    6. '
' → logprob: -9.432037353515625
    7. '               ' → logprob: -12.182037353515625
    8. '{return' → logprob: -12.307037353515625
    9. '	return' → logprob: -12.807037353515625
    10. '```' → logprob: -13.307037353515625

Token 249: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0052721803076565266
    2. ' return' → logprob: -5.255272388458252
    3. '           ' → logprob: -10.255271911621094
    4. '       ' → logprob: -12.880271911621094
    5. '
' → logprob: -15.005271911621094
    6. '               ' → logprob: -16.255271911621094
    7. '	return' → logprob: -16.505271911621094
    8. ':return' → logprob: -17.505271911621094
    9. '```' → logprob: -17.630271911621094
    10. '   ' → logprob: -17.630271911621094

Token 250: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.176947600673884e-05
    2. ' self' → logprob: -10.750021934509277
    3. 'ord' → logprob: -15.500021934509277
    4. '(self' → logprob: -19.62502098083496
    5. '	self' → logprob: -21.50002098083496
    6. ' ord' → logprob: -21.62502098083496
    7. '[self' → logprob: -21.75002098083496
    8. ' ' → logprob: -23.12502098083496
    9. 'Self' → logprob: -23.87502098083496
    10. 'str' → logprob: -23.87502098083496

Token 251: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.0009232500451616943
    2. '.' → logprob: -7.000923156738281
    3. ' .' → logprob: -12.250923156738281
    4. '.ec' → logprob: -13.000923156738281
    5. '.eas' → logprob: -13.375923156738281
    6. '.w' → logprob: -14.625923156738281
    7. '>.' → logprob: -15.000923156738281
    8. '.i' → logprob: -15.250923156738281
    9. '.euler' → logprob: -15.375923156738281
    10. 'east' → logprob: -15.500923156738281

Token 252: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.21117866039276123
    2. '_w' → logprob: -1.7111786603927612
    3. 'w' → logprob: -5.586178779602051
    4. '.w' → logprob: -6.211178779602051
    5. 'east' → logprob: -6.336178779602051
    6. 'st' → logprob: -6.836178779602051
    7. '.ast' → logprob: -7.961178779602051
    8. '_' → logprob: -9.21117877960205
    9. 'a' → logprob: -9.21117877960205
    10. '._' → logprob: -9.33617877960205

Token 253: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -8.537868779967539e-06
    2. 'west' → logprob: -12.125008583068848
    3. 'w' → logprob: -12.750008583068848
    4. 'a' → logprob: -16.87500762939453
    5. '_' → logprob: -17.00000762939453
    6. 'ew' → logprob: -17.12500762939453
    7. '   ' → logprob: -17.87500762939453
    8. 'self' → logprob: -18.87500762939453
    9. 'aw' → logprob: -18.87500762939453
    10. '_we' → logprob: -19.25000762939453

Token 254: 'est' (ID: 376)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.24809402227401733
    2. 'est' → logprob: -1.748094081878662
    3. 'west' → logprob: -3.248094081878662
    4. 'w' → logprob: -5.123094081878662
    5. 'st' → logprob: -7.998094081878662
    6. 'ew' → logprob: -8.373093605041504
    7. '_est' → logprob: -9.123093605041504
    8. 'West' → logprob: -10.498093605041504
    9. '_st' → logprob: -10.748093605041504
    10. '_' → logprob: -11.498093605041504

Token 255: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03806352615356445
    2. ' <' → logprob: -3.2880635261535645
    3. '[' → logprob: -12.038063049316406
    4. '<char' → logprob: -12.913063049316406
    5. ' ' → logprob: -13.038063049316406
    6. '<int' → logprob: -13.038063049316406
    7. '<string' → logprob: -13.163063049316406
    8. '<com' → logprob: -14.038063049316406
    9. '<'' → logprob: -14.288063049316406
    10. '<len' → logprob: -14.288063049316406

Token 256: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.12692831456661224
    2. ' other' → logprob: -2.1269283294677734
    3. '(other' → logprob: -15.876928329467773
    4. '.other' → logprob: -16.501928329467773
    5. 'othe' → logprob: -19.251928329467773
    6. 'Other' → logprob: -19.376928329467773
    7. '_other' → logprob: -19.751928329467773
    8. ' ' → logprob: -19.876928329467773
    9. 'oth' → logprob: -20.126928329467773
    10. 'self' → logprob: -20.501928329467773

Token 257: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.1684250831604004
    2. '_e' → logprob: -2.7934250831604004
    3. '_w' → logprob: -3.5434250831604004
    4. '.' → logprob: -3.6684250831604004
    5. 'east' → logprob: -3.7934250831604004
    6. '_.' → logprob: -4.6684250831604
    7. '._' → logprob: -5.1684250831604
    8. '_' → logprob: -7.2934250831604
    9. '.w' → logprob: -7.9184250831604
    10. '.other' → logprob: -8.043424606323242

Token 258: 'ast' (ID: 629)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0006328551680780947
    2. 'west' → logprob: -7.5006327629089355
    3. 'ast' → logprob: -9.875633239746094
    4. 'w' → logprob: -10.625633239746094
    5. 'east' → logprob: -13.625633239746094
    6. '.w' → logprob: -13.875633239746094
    7. 'other' → logprob: -14.125633239746094
    8. 'ew' → logprob: -14.625633239746094
    9. '_' → logprob: -15.750633239746094
    10. 'st' → logprob: -16.375633239746094

Token 259: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.5048530030981055e-06
    2. 'west' → logprob: -13.625001907348633
    3. 'w' → logprob: -15.750001907348633
    4. 'other' → logprob: -16.375001907348633
    5. '._' → logprob: -18.000001907348633
    6. 'West' → logprob: -18.625001907348633
    7. '_other' → logprob: -19.875001907348633
    8. '.w' → logprob: -20.000001907348633
    9. '_s' → logprob: -20.250001907348633
    10. '-' → logprob: -20.625001907348633

Token 260: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -3.976922744186595e-05
    2. 'west' → logprob: -11.000040054321289
    3. 'ew' → logprob: -11.500040054321289
    4. 'st' → logprob: -12.000040054321289
    5. '_w' → logprob: -13.000040054321289
    6. '_est' → logprob: -13.125040054321289
    7. 'w' → logprob: -14.375040054321289
    8. 'rest' → logprob: -15.000040054321289
    9. 'ests' → logprob: -15.000040054321289
    10. 'ест' → logprob: -15.125040054321289

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038574778591282666
    2. '
' → logprob: -8.750385284423828
    3. 'return' → logprob: -9.250385284423828
    4. '        
' → logprob: -9.250385284423828
    5. 'else' → logprob: -12.000385284423828
    6. ' return' → logprob: -12.250385284423828
    7. '<|end|>' → logprob: -12.500385284423828
    8. '   ' → logprob: -12.750385284423828
    9. '      ' → logprob: -13.000385284423828
    10. '           ' → logprob: -13.125385284423828

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017195509281009436
    2. 'return' → logprob: -8.875171661376953
    3. '
' → logprob: -10.875171661376953
    4. '   ' → logprob: -12.875171661376953
    5. 'else' → logprob: -12.875171661376953
    6. '        
' → logprob: -13.500171661376953
    7. '      ' → logprob: -13.625171661376953
    8. '	' → logprob: -13.875171661376953
    9. ' return' → logprob: -14.125171661376953
    10. '           ' → logprob: -14.250171661376953

Token 263: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006853904575109482
    2. '       ' → logprob: -5.256854057312012
    3. ' return' → logprob: -6.506854057312012
    4. '
' → logprob: -9.006854057312012
    5. '        
' → logprob: -13.381854057312012
    6. '   ' → logprob: -15.006854057312012
    7. '           ' → logprob: -15.006854057312012
    8. ':return' → logprob: -15.631854057312012
    9. '	return' → logprob: -15.756854057312012
    10. 'self' → logprob: -16.006853103637695

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.392202976712724e-06
    2. ' self' → logprob: -12.000006675720215
    3. '(self' → logprob: -16.1250057220459
    4. '   ' → logprob: -19.7500057220459
    5. '[self' → logprob: -19.8750057220459
    6. 'Self' → logprob: -20.5000057220459
    7. '	self' → logprob: -20.8750057220459
    8. '
' → logprob: -21.5000057220459
    9. '`' → logprob: -22.0000057220459
    10. 's' → logprob: -22.3750057220459

Token 265: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.5
    3. 'north' → logprob: -16.0
    4. ' .' → logprob: -18.625
    5. 'North' → logprob: -21.125
    6. '.nan' → logprob: -21.25
    7. '.N' → logprob: -21.375
    8. '.NORTH' → logprob: -21.5
    9. '.ne' → logprob: -21.875
    10. '._' → logprob: -22.125

Token 266: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.0014294054126366973
    2. '_' → logprob: -7.376429557800293
    3. 'north' → logprob: -7.501429557800293
    4. '_s' → logprob: -9.626429557800293
    5. 'ort' → logprob: -9.626429557800293
    6. '_or' → logprob: -9.751429557800293
    7. '_n' → logprob: -10.751429557800293
    8. 'or' → logprob: -11.126429557800293
    9. 'o' → logprob: -12.251429557800293
    10. 'south' → logprob: -12.626429557800293

Token 267: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.7120533811976202e-05
    2. 'south' → logprob: -11.000017166137695
    3. 's' → logprob: -15.375017166137695
    4. '_w' → logprob: -16.125017166137695
    5. '_n' → logprob: -16.625017166137695
    6. 'South' → logprob: -17.750017166137695
    7. 'sou' → logprob: -18.250017166137695
    8. 'north' → logprob: -18.750017166137695
    9. 'w' → logprob: -18.875017166137695
    10. '\' → logprob: -19.125017166137695

Token 268: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.44797056913375854
    2. '_s' → logprob: -1.4479706287384033
    3. 'south' → logprob: -2.3229706287384033
    4. 'orth' → logprob: -4.572970390319824
    5. 's' → logprob: -4.572970390319824
    6. 'self' → logprob: -5.572970390319824
    7. 'out' → logprob: -6.697970390319824
    8. '_' → logprob: -7.322970390319824
    9. 'other' → logprob: -7.447970390319824
    10. '_out' → logprob: -7.947970390319824

Token 269: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1269284337759018
    2. ' <' → logprob: -2.1269283294677734
    3. '<int' → logprob: -15.376928329467773
    4. ' ' → logprob: -16.126928329467773
    5. '<size' → logprob: -18.001928329467773
    6. '<class' → logprob: -18.876928329467773
    7. '<com' → logprob: -19.001928329467773
    8. '<num' → logprob: -19.126928329467773
    9. '<number' → logprob: -19.251928329467773
    10. ' ' → logprob: -19.251928329467773

Token 270: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.004078401252627373
    2. ' other' → logprob: -5.504078388214111
    3. '(other' → logprob: -17.504077911376953
    4. 'self' → logprob: -18.754077911376953
    5. '.other' → logprob: -19.504077911376953
    6. 'Other' → logprob: -19.879077911376953
    7. 'othe' → logprob: -21.254077911376953
    8. '_other' → logprob: -21.379077911376953
    9. 'oth' → logprob: -21.629077911376953
    10. ' oth' → logprob: -21.879077911376953

Token 271: '.n' (ID: 1835)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1681451052427292
    2. '_n' → logprob: -1.9181450605392456
    3. '.n' → logprob: -5.668145179748535
    4. 'north' → logprob: -5.793145179748535
    5. '_w' → logprob: -7.043145179748535
    6. 'south' → logprob: -8.668145179748535
    7. 's' → logprob: -9.293145179748535
    8. 'ns' → logprob: -9.293145179748535
    9. 'n' → logprob: -9.793145179748535
    10. '._' → logprob: -10.293145179748535

Token 272: 'orth' (ID: 2909)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.40076231956481934
    2. 'south' → logprob: -1.1507623195648193
    3. 'orth' → logprob: -4.400762557983398
    4. 'north' → logprob: -7.025762557983398
    5. 's' → logprob: -7.525762557983398
    6. 'other' → logprob: -10.650762557983398
    7. '_' → logprob: -10.775762557983398
    8. '.s' → logprob: -11.275762557983398
    9. 'ns' → logprob: -11.400762557983398
    10. '-s' → logprob: -12.025762557983398

Token 273: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00031055594445206225
    2. 'south' → logprob: -8.125310897827148
    3. '_w' → logprob: -11.625310897827148
    4. 'other' → logprob: -13.250310897827148
    5. 'sou' → logprob: -13.875310897827148
    6. 'South' → logprob: -14.000310897827148
    7. '_other' → logprob: -14.000310897827148
    8. 's' → logprob: -14.000310897827148
    9. 'w' → logprob: -16.87531089782715
    10. 'self' → logprob: -17.37531089782715

Token 274: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.045244019478559494
    2. 'orth' → logprob: -3.545243978500366
    3. 'south' → logprob: -4.795244216918945
    4. 's' → logprob: -5.295244216918945
    5. '_s' → logprob: -7.295244216918945
    6. 'ous' → logprob: -8.045244216918945
    7. 'sou' → logprob: -8.295244216918945
    8. 'South' → logprob: -8.295244216918945
    9. 'uth' → logprob: -8.420244216918945
    10. 'oth' → logprob: -8.545244216918945

Token 275: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21002210676670074
    2. 'def' → logprob: -1.7100220918655396
    3. ' def' → logprob: -5.96002197265625
    4. 'class' → logprob: -6.33502197265625
    5. '
' → logprob: -6.58502197265625
    6. '#' → logprob: -6.71002197265625
    7. '    
' → logprob: -7.83502197265625
    8. ' ' → logprob: -7.96002197265625
    9. ')' → logprob: -8.83502197265625
    10. '	def' → logprob: -9.08502197265625

Token 277: ' Represents' (ID: 84592)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008868030272424221
    2. ' class' → logprob: -7.625886917114258
    3. '#' → logprob: -8.000886917114258
    4. 'def' → logprob: -9.875886917114258
    5. 'from' → logprob: -12.000886917114258
    6. 'Class' → logprob: -13.000886917114258
    7. 'import' → logprob: -13.875886917114258
    8. 'A' → logprob: -14.625886917114258
    9. 'The' → logprob: -14.625886917114258
    10. '
' → logprob: -15.750886917114258

Token 278: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41864311695098877
    2. ' a' → logprob: -1.5436431169509888
    3. ' an' → logprob: -2.293642997741699
    4. 'an' → logprob: -3.793642997741699
    5. ' the' → logprob: -6.168642997741699
    6. 'the' → logprob: -6.418642997741699
    7. '#' → logprob: -7.793642997741699
    8. ' intersections' → logprob: -8.4186429977417
    9. 'edges' → logprob: -8.7936429977417
    10. ' edges' → logprob: -8.9186429977417

Token 279: ' traffic' (ID: 12769)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8858176469802856
    2. 'graph' → logprob: -1.1358176469802856
    3. ' node' → logprob: -2.760817527770996
    4. 'Graph' → logprob: -2.885817527770996
    5. ' road' → logprob: -3.385817527770996
    6. 'road' → logprob: -3.385817527770996
    7. 'node' → logprob: -4.760817527770996
    8. 'Road' → logprob: -4.885817527770996
    9. ' priority' → logprob: -4.885817527770996
    10. ' weighted' → logprob: -4.885817527770996

Token 280: ' signal' (ID: 12884)
  Prédit: 'light'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'light' → logprob: -0.19476370513439178
    2. ' light' → logprob: -2.069763660430908
    3. 'signal' → logprob: -3.944763660430908
    4. 'intersection' → logprob: -4.319763660430908
    5. 'network' → logprob: -5.069763660430908
    6. 'node' → logprob: -6.069763660430908
    7. ' signal' → logprob: -6.194763660430908
    8. 'Light' → logprob: -6.569763660430908
    9. '_light' → logprob: -6.819763660430908
    10. ' intersection' → logprob: -6.819763660430908

Token 281: ' with' (ID: 483)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00745020667091012
    2. ' class' → logprob: -5.007450103759766
    3. ':' → logprob: -8.007450103759766
    4. 'light' → logprob: -9.007450103759766
    5. 'Signal' → logprob: -9.757450103759766
    6. '.' → logprob: -10.382450103759766
    7. 'signal' → logprob: -10.507450103759766
    8. '(class' → logprob: -10.632450103759766
    9. ' light' → logprob: -10.757450103759766
    10. 'Light' → logprob: -10.757450103759766

Token 282: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5931161642074585
    2. 'tim' → logprob: -1.5931161642074585
    3. 'state' → logprob: -2.718116283416748
    4. 'red' → logprob: -2.718116283416748
    5. 'two' → logprob: -3.843116283416748
    6. 'green' → logprob: -4.343116283416748
    7. 'its' → logprob: -4.468116283416748
    8. 'an' → logprob: -4.593116283416748
    9. 'time' → logprob: -4.593116283416748
    10. 'current' → logprob: -4.718116283416748

Token 283: ' cycle' (ID: 15839)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.954207181930542
    2. 'cycle' → logprob: -1.079207181930542
    3. 'schedule' → logprob: -2.329207181930542
    4. 'location' → logprob: -3.454207181930542
    5. 'name' → logprob: -3.704207181930542
    6. 'tim' → logprob: -4.079207420349121
    7. 'current' → logprob: -4.079207420349121
    8. 'pattern' → logprob: -4.204207420349121
    9. 'green' → logprob: -4.329207420349121
    10. 'time' → logprob: -4.454207420349121

Token 284: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0004144648555666208
    2. ' class' → logprob: -7.8754143714904785
    3. '<|end|>' → logprob: -11.250414848327637
    4. ':' → logprob: -12.000414848327637
    5. 'cycle' → logprob: -12.000414848327637
    6. '<|end|>' → logprob: -12.875414848327637
    7. ' cycle' → logprob: -13.750414848327637
    8. 'time' → logprob: -13.875414848327637
    9. '.' → logprob: -14.000414848327637
    10. '(class' → logprob: -14.125414848327637

Token 285: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.6240566083070007e-06
    2. ' class' → logprob: -13.375001907348633
    3. '"class' → logprob: -18.625001907348633
    4. '<|end|>' → logprob: -19.000001907348633
    5. '<class' → logprob: -19.125001907348633
    6. ''class' → logprob: -20.500001907348633
    7. '
' → logprob: -20.750001907348633
    8. ',class' → logprob: -20.875001907348633
    9. 'classmethod' → logprob: -21.500001907348633
    10. '@dat' → logprob: -21.625001907348633

Token 286: ' Traffic' (ID: 52059)
  Prédit: 'Traffic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -0.0009641039068810642
    2. 'Signal' → logprob: -7.125964164733887
    3. ' Traffic' → logprob: -8.750964164733887
    4. 'traffic' → logprob: -14.875964164733887
    5. '```' → logprob: -15.250964164733887
    6. 'Light' → logprob: -15.375964164733887
    7. ' traffic' → logprob: -15.750964164733887
    8. 'class' → logprob: -16.50096321105957
    9. '`' → logprob: -16.75096321105957
    10. 'Intersection' → logprob: -17.00096321105957

Token 287: 'Signal' (ID: 31411)
  Prédit: 'Signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Signal' → logprob: -0.0024768433067947626
    2. 'Light' → logprob: -6.002476692199707
    3. 'Sign' → logprob: -14.752476692199707
    4. '_signal' → logprob: -14.877476692199707
    5. 'signal' → logprob: -15.502476692199707
    6. ' Signal' → logprob: -16.002477645874023
    7. ' signal' → logprob: -16.877477645874023
    8. 'light' → logprob: -17.127477645874023
    9. '_SIGNAL' → logprob: -17.127477645874023
    10. 'Signals' → logprob: -18.002477645874023

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006724722217768431
    2. ':
' → logprob: -5.006724834442139
    3. '):' → logprob: -12.50672435760498
    4. ':

' → logprob: -13.38172435760498
    5. '():' → logprob: -13.88172435760498
    6. '(' → logprob: -14.13172435760498
    7. '(object' → logprob: -14.38172435760498
    8. ':
' → logprob: -14.88172435760498
    9. ':def' → logprob: -14.88172435760498
    10. '<|end|>' → logprob: -15.25672435760498

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08161710947751999
    2. ':' → logprob: -2.8316171169281006
    3. ':
' → logprob: -4.3316168785095215
    4. 'def' → logprob: -5.3316168785095215
    5. ' def' → logprob: -7.5816168785095215
    6. '):
' → logprob: -8.08161735534668
    7. '):' → logprob: -8.33161735534668
    8. '(' → logprob: -8.95661735534668
    9. '  ' → logprob: -10.20661735534668
    10. ':def' → logprob: -10.33161735534668

Token 290: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6941204071044922
    2. 'def' (adapté à ' def') → logprob: -0.6941204071044922
    3. '   ' → logprob: -6.944120407104492
    4. '	def' → logprob: -12.194120407104492
    5. ':def' → logprob: -13.569120407104492
    6. ' ' → logprob: -13.694120407104492
    7. 'class' → logprob: -14.819120407104492
    8. '```' → logprob: -15.569120407104492
    9. '  ' → logprob: -16.069120407104492
    10. ':' → logprob: -16.444120407104492

Token 291: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.38181501626968384
    2. '__' → logprob: -1.631814956665039
    3. ' __' → logprob: -2.131814956665039
    4. '_init' → logprob: -6.381814956665039
    5. ' init' → logprob: -6.631814956665039
    6. '```' → logprob: -9.631814956665039
    7. '__(' → logprob: -10.881814956665039
    8. '**' → logprob: -11.131814956665039
    9. ' def' → logprob: -11.381814956665039
    10. 'def' → logprob: -11.506814956665039

Token 292: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -18.125
    3. 'ini' → logprob: -18.375
    4. 'in' → logprob: -18.375
    5. ' init' → logprob: -18.5
    6. '_init' → logprob: -19.125
    7. 'inite' → logprob: -19.5
    8. 'class' → logprob: -20.0
    9. '(init' → logprob: -21.0
    10. 'initi' → logprob: -21.125

Token 293: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000788663572166115
    2. '__' → logprob: -7.250788688659668
    3. '__(
' → logprob: -9.750788688659668
    4. '__((' → logprob: -11.125788688659668
    5. '(' → logprob: -12.500788688659668
    6. '__('' → logprob: -13.750788688659668
    7. '(self' → logprob: -14.750788688659668
    8. '__(*' → logprob: -15.125788688659668
    9. '__("' → logprob: -16.12578773498535
    10. '_(' → logprob: -16.37578773498535

Token 294: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.392824874026701e-05
    2. ' self' → logprob: -10.37503433227539
    3. '(self' → logprob: -14.00003433227539
    4. ')' → logprob: -14.12503433227539
    5. ',' → logprob: -15.12503433227539
    6. '
' → logprob: -15.75003433227539
    7. '0' → logprob: -16.12503433227539
    8. '	self' → logprob: -16.25003433227539
    9. 'east' → logprob: -16.62503433227539
    10. 's' → logprob: -16.75003433227539

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001410850090906024
    2. ' ,' → logprob: -9.125141143798828
    3. ',e' → logprob: -11.000141143798828
    4. '):' → logprob: -12.125141143798828
    5. 'east' → logprob: -12.625141143798828
    6. 'self' → logprob: -12.750141143798828
    7. ',
' → logprob: -14.500141143798828
    8. '_,' → logprob: -14.500141143798828
    9. 'e' → logprob: -15.000141143798828
    10. '   ' → logprob: -15.125141143798828

Token 296: ' coord' (ID: 25819)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.5351196527481079
    2. 'green' → logprob: -0.9101196527481079
    3. 'red' → logprob: -5.785119533538818
    4. ' cycle' → logprob: -6.410119533538818
    5. 'coordinate' → logprob: -6.660119533538818
    6. 'location' → logprob: -6.910119533538818
    7. 'east' → logprob: -7.285119533538818
    8. 'period' → logprob: -7.410119533538818
    9. ' green' → logprob: -7.535119533538818
    10. 'north' → logprob: -7.660119533538818

Token 297: ':' (ID: 25)
  Prédit: 'inate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inate' → logprob: -0.5004682540893555
    2. ',' → logprob: -1.3754682540893555
    3. ':' → logprob: -2.0004682540893555
    4. '):' → logprob: -6.1254682540893555
    5. '):
' → logprob: -6.5004682540893555
    6. 'ination' → logprob: -7.0004682540893555
    7. 'ordinate' → logprob: -7.7504682540893555
    8. 'onate' → logprob: -8.875468254089355
    9. 'ort' → logprob: -9.500468254089355
    10. 'icate' → logprob: -9.875468254089355

Token 298: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -2.236549335066229e-05
    2. ' Coordinate' → logprob: -10.750021934509277
    3. 'Coordinates' → logprob: -14.125021934509277
    4. '_coordinate' → logprob: -16.000022888183594
    5. ')' → logprob: -17.625022888183594
    6. 'Coord' → logprob: -17.750022888183594
    7. 'coordinate' → logprob: -18.375022888183594
    8. 'Coordinator' → logprob: -18.500022888183594
    9. '   ' → logprob: -19.750022888183594
    10. '[' → logprob: -20.375022888183594

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ' ,' → logprob: -10.87502384185791
    3. '):
' → logprob: -12.87502384185791
    4. ',
' → logprob: -13.75002384185791
    5. '):' → logprob: -14.00002384185791
    6. '   ' → logprob: -15.75002384185791
    7. '‌,' → logprob: -17.125022888183594
    8. '       ' → logprob: -17.375022888183594
    9. '),' → logprob: -18.250022888183594
    10. '_,' → logprob: -18.312522888183594

Token 300: ' cycle' (ID: 15839)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.50929856300354
    2. 'cycle' → logprob: -1.00929856300354
    3. 'red' → logprob: -4.884298324584961
    4. ' green' → logprob: -4.884298324584961
    5. ' cycle' → logprob: -4.884298324584961
    6. 'cycles' → logprob: -5.634298324584961
    7. 'offset' → logprob: -6.759298324584961
    8. 'initial' → logprob: -6.759298324584961
    9. 'start' → logprob: -6.759298324584961
    10. 'period' → logprob: -7.009298324584961

Token 301: ':' (ID: 25)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.35049208998680115
    2. ':' → logprob: -2.100492000579834
    3. '_length' → logprob: -2.350492000579834
    4. '):' → logprob: -3.100492000579834
    5. '_duration' → logprob: -4.475492000579834
    6. '_times' → logprob: -4.600492000579834
    7. '):
' → logprob: -4.975492000579834
    8. '_len' → logprob: -6.850492000579834
    9. 'time' → logprob: -6.850492000579834
    10. '   ' → logprob: -7.850492000579834

Token 302: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009873188100755215
    2. 'list' → logprob: -5.134873390197754
    3. 'tuple' → logprob: -6.259873390197754
    4. '[int' → logprob: -6.509873390197754
    5. 'deque' → logprob: -7.634873390197754
    6. 'List' → logprob: -10.509873390197754
    7. 'Tuple' → logprob: -11.134873390197754
    8. '(int' → logprob: -12.884873390197754
    9. 'float' → logprob: -13.509873390197754
    10. 'str' → logprob: -13.634873390197754

Token 303: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.058842420578003
    2. '):' → logprob: -1.058842420578003
    3. '):
' → logprob: -1.183842420578003
    4. '):
' → logprob: -9.058842658996582
    5. ')' → logprob: -10.183842658996582
    6. '   ' → logprob: -11.683842658996582
    7. ' ,' → logprob: -12.058842658996582
    8. ' ):' → logprob: -12.308842658996582
    9. '=' → logprob: -12.558842658996582
    10. '):

' → logprob: -13.183842658996582

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0709194615483284
    2. 'self' → logprob: -2.6959195137023926
    3. ' self' → logprob: -6.945919513702393
    4. ',' → logprob: -11.570919036865234
    5. '   ' → logprob: -12.695919036865234
    6. '	' → logprob: -12.820919036865234
    7. '	self' → logprob: -13.195919036865234
    8. ' ' → logprob: -14.570919036865234
    9. '      ' → logprob: -15.070919036865234
    10. '(self' → logprob: -15.195919036865234

Token 305: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011677479778882116
    2. '       ' → logprob: -9.750116348266602
    3. ' self' → logprob: -9.750116348266602
    4. '   ' → logprob: -16.5001163482666
    5. 'coord' → logprob: -18.3751163482666
    6. '	self' → logprob: -18.5001163482666
    7. '#' → logprob: -18.6251163482666
    8. 'import' → logprob: -20.1251163482666
    9. '(self' → logprob: -20.3751163482666
    10. '        
' → logprob: -20.6251163482666

Token 306: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -0.0008672756957821548
    2. '.' → logprob: -7.2508673667907715
    3. '.coordinate' → logprob: -8.875866889953613
    4. '.co' → logprob: -11.750866889953613
    5. ' .' → logprob: -13.000866889953613
    6. '.c' → logprob: -13.375866889953613
    7. '.cost' → logprob: -13.375866889953613
    8. 'coord' → logprob: -14.000866889953613
    9. '.period' → logprob: -14.250866889953613
    10. '.coin' → logprob: -14.375866889953613

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740844964981079
    2. '=' → logprob: -0.9740844964981079
    3. ',' → logprob: -13.099084854125977
    4. ' ' → logprob: -13.224084854125977
    5. ')' → logprob: -14.349084854125977
    6. ' =
' → logprob: -14.349084854125977
    7. '.' → logprob: -14.849084854125977
    8. '   ' → logprob: -14.974084854125977
    9. '=
' → logprob: -14.974084854125977
    10. '    ' → logprob: -15.224084854125977

Token 308: ' coord' (ID: 25819)
  Prédit: ' coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coord' → logprob: -0.5759425759315491
    2. 'coord' → logprob: -0.8259425759315491
    3. '(coord' → logprob: -12.950942993164062
    4. 'coordinate' → logprob: -15.325942993164062
    5. '.coord' → logprob: -15.950942993164062
    6. ' coordinate' → logprob: -16.200942993164062
    7. 'coords' → logprob: -16.325942993164062
    8. 'cord' → logprob: -16.450942993164062
    9. '_coord' → logprob: -16.700942993164062
    10. 'co' → logprob: -17.450942993164062

Token 309: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003558423195499927
    2. 'self' → logprob: -8.12535572052002
    3. ',' → logprob: -10.00035572052002
    4. '
' → logprob: -12.25035572052002
    5. ' self' → logprob: -12.75035572052002
    6. '<|end|>' → logprob: -12.75035572052002
    7. '   ' → logprob: -13.87535572052002
    8. '        
' → logprob: -14.25035572052002
    9. ',
' → logprob: -14.62535572052002
    10. '      ' → logprob: -15.12535572052002

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005393126513808966
    2. 'self' → logprob: -5.255393028259277
    3. ' self' → logprob: -8.880393028259277
    4. '   ' → logprob: -12.005393028259277
    5. ',' → logprob: -12.130393028259277
    6. '<|end|>' → logprob: -12.380393028259277
    7. ' ' → logprob: -13.505393028259277
    8. '      ' → logprob: -14.380393028259277
    9. '        
' → logprob: -14.630393028259277
    10. '	self' → logprob: -14.755393028259277

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006413076189346611
    2. 'cycle' → logprob: -7.500641345977783
    3. ' self' → logprob: -9.375640869140625
    4. '       ' → logprob: -13.250640869140625
    5. ' cycle' → logprob: -14.500640869140625
    6. 'c' → logprob: -15.000640869140625
    7. '   ' → logprob: -15.125640869140625
    8. '	self' → logprob: -16.000640869140625
    9. 'cy' → logprob: -16.750640869140625
    10. '
' → logprob: -16.750640869140625

Token 312: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.00039659533649683
    2. '.' → logprob: -7.875396728515625
    3. 'cycle' → logprob: -11.500396728515625
    4. ' .' → logprob: -12.375396728515625
    5. '_cycle' → logprob: -14.375396728515625
    6. '.period' → logprob: -14.750396728515625
    7. ' cycle' → logprob: -15.625396728515625
    8. '.queue' → logprob: -15.875396728515625
    9. '.signal' → logprob: -16.000396728515625
    10. '.cy' → logprob: -16.125396728515625

Token 313: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -0.0002123614540323615
    2. 'cycle' → logprob: -8.500212669372559
    3. '   ' → logprob: -12.750212669372559
    4. '_cycle' → logprob: -13.000212669372559
    5. 'ycl' → logprob: -13.875212669372559
    6. 'yle' → logprob: -14.250212669372559
    7. 'y' → logprob: -14.750212669372559
    8. 'ycles' → logprob: -15.000212669372559
    9. 'YCLE' → logprob: -15.000212669372559
    10. ' cycle' → logprob: -15.750212669372559

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519300878047943
    2. ' =' → logprob: -1.5019301176071167
    3. '=int' → logprob: -15.126930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '   ' → logprob: -16.376930236816406
    6. ' =
' → logprob: -16.751930236816406
    7. '=
' → logprob: -16.751930236816406
    8. ',' → logprob: -16.876930236816406
    9. '_cycle' → logprob: -17.126930236816406
    10. '=

' → logprob: -17.376930236816406

Token 315: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.10020699352025986
    2. ' cycle' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.975207328796387
    4. ' ' → logprob: -16.22520637512207
    5. 'int' → logprob: -17.22520637512207
    6. '_cycle' → logprob: -17.22520637512207
    7. 'cycl' → logprob: -17.85020637512207
    8. '  ' → logprob: -17.97520637512207
    9. 'circle' → logprob: -17.97520637512207
    10. '1' → logprob: -18.10020637512207

Token 316: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5629222989082336
    2. '<|end|>' → logprob: -1.1879222393035889
    3. '
' → logprob: -2.187922239303589
    4. '<|end|>' → logprob: -5.187922477722168
    5. 'def' → logprob: -5.687922477722168
    6. '#' → logprob: -5.812922477722168
    7. '```' → logprob: -8.062922477722168
    8. '    
' → logprob: -8.312922477722168
    9. ' ' → logprob: -8.437922477722168
    10. ')' → logprob: -8.687922477722168

Token 318: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04255706071853638
    2. '   ' → logprob: -3.6675570011138916
    3. ' def' → logprob: -4.417557239532471
    4. '<|end|>' → logprob: -5.792557239532471
    5. '<|end|>' → logprob: -7.792557239532471
    6. ' ' → logprob: -8.417556762695312
    7. '#' → logprob: -8.792556762695312
    8. '
' → logprob: -9.292556762695312
    9. '	def' → logprob: -10.042556762695312
    10. '    
' → logprob: -10.542556762695312

Token 319: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.02582387812435627
    2. 'get' → logprob: -4.775824069976807
    3. 'green' → logprob: -5.025824069976807
    4. ' is' → logprob: -5.775824069976807
    5. 'cycle' → logprob: -6.525824069976807
    6. 'next' → logprob: -6.775824069976807
    7. 'can' → logprob: -6.775824069976807
    8. 'state' → logprob: -6.900824069976807
    9. ' green' → logprob: -7.150824069976807
    10. 'def' → logprob: -7.400824069976807

Token 320: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.00681932782754302
    2. '_red' → logprob: -5.256819248199463
    3. 'green' → logprob: -6.756819248199463
    4. ' green' → logprob: -8.756819725036621
    5. '_active' → logprob: -9.131819725036621
    6. '_open' → logprob: -9.881819725036621
    7. '_g' → logprob: -10.506819725036621
    8. '_' → logprob: -11.131819725036621
    9. '_allowed' → logprob: -11.131819725036621
    10. 'red' → logprob: -11.631819725036621

Token 321: '_at' (ID: 8254)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.048777781426906586
    2. '(' → logprob: -3.0487778186798096
    3. '(at' → logprob: -9.17377758026123
    4. ' (' → logprob: -10.17377758026123
    5. '_at' → logprob: -11.17377758026123
    6. '(current' → logprob: -11.42377758026123
    7. 'at' → logprob: -11.92377758026123
    8. '(t' → logprob: -12.17377758026123
    9. '(time' → logprob: -12.79877758026123
    10. ' at' → logprob: -13.17377758026123

Token 322: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002931702882051468
    2. '(' → logprob: -5.877931594848633
    3. 'self' → logprob: -9.252931594848633
    4. ' (' → logprob: -11.002931594848633
    5. 'time' → logprob: -12.127931594848633
    6. '(
' → logprob: -12.502931594848633
    7. '(time' → logprob: -12.877931594848633
    8. ' self' → logprob: -13.752931594848633
    9. 'def' → logprob: -14.127931594848633
    10. '_time' → logprob: -15.377931594848633

Token 323: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39332231879234314
    2. ',' → logprob: -1.2683223485946655
    3. 'time' → logprob: -3.393322229385376
    4. '(self' → logprob: -5.268322467803955
    5. '_time' → logprob: -6.393322467803955
    6. ' self' → logprob: -6.518322467803955
    7. ' time' → logprob: -6.768322467803955
    8. ',time' → logprob: -7.643322467803955
    9. ' ,' → logprob: -9.143321990966797
    10. ',self' → logprob: -9.393321990966797

Token 324: ' direction' (ID: 9262)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3768124282360077
    2. 'self' → logprob: -1.25181245803833
    3. ' time' → logprob: -3.87681245803833
    4. ' self' → logprob: -5.00181245803833
    5. 'timestamp' → logprob: -8.376811981201172
    6. 't' → logprob: -9.001811981201172
    7. ')' → logprob: -9.126811981201172
    8. ' t' → logprob: -11.001811981201172
    9. ' timestamp' → logprob: -11.001811981201172
    10. ' timestep' → logprob: -11.376811981201172

Token 325: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019197762594558299
    2. ' ,' → logprob: -9.625191688537598
    3. ':' → logprob: -9.875191688537598
    4. 'self' → logprob: -10.625191688537598
    5. '_time' → logprob: -10.625191688537598
    6. '_,' → logprob: -11.125191688537598
    7. 'time' → logprob: -13.125191688537598
    8. '):' → logprob: -13.375191688537598
    9. 's' → logprob: -13.625191688537598
    10. ',time' → logprob: -13.625191688537598

Token 326: ' str' (ID: 989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21806316077709198
    2. 'time' → logprob: -1.8430631160736084
    3. ' self' → logprob: -3.7180631160736084
    4. ',' → logprob: -5.0930633544921875
    5. ' time' → logprob: -5.3430633544921875
    6. ')' → logprob: -7.3430633544921875
    7. 'arrival' → logprob: -7.3430633544921875
    8. '_time' → logprob: -7.7180633544921875
    9. 'timestamp' → logprob: -8.718063354492188
    10. 'int' → logprob: -9.343063354492188

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',time' → logprob: -17.750017166137695
    4. 'self' → logprob: -18.000017166137695
    5. ')' → logprob: -18.125017166137695
    6. '):' → logprob: -18.375017166137695
    7. ',
' → logprob: -18.625017166137695
    8. '‌,' → logprob: -19.250017166137695
    9. '   ' → logprob: -19.500017166137695
    10. ',current' → logprob: -20.250017166137695

Token 328: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.47499164938926697
    2. ' time' → logprob: -0.9749916791915894
    3. 't' → logprob: -7.849991798400879
    4. ' current' → logprob: -8.724991798400879
    5. ' t' → logprob: -8.724991798400879
    6. 'current' → logprob: -9.349991798400879
    7. 'timestamp' → logprob: -9.849991798400879
    8. ' timestamp' → logprob: -9.974991798400879
    9. ' timestep' → logprob: -11.849991798400879
    10. 'arrival' → logprob: -13.724991798400879

Token 329: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2941615581512451
    2. ':' → logprob: -1.5441615581512451
    3. '):
' → logprob: -3.294161558151245
    4. ')' → logprob: -5.544161796569824
    5. ' ):' → logprob: -8.294161796569824
    6. ':int' → logprob: -10.419161796569824
    7. '):
' → logprob: -10.794161796569824
    8. ' ):
' → logprob: -11.669161796569824
    9. '   ' → logprob: -11.919161796569824
    10. ' )' → logprob: -12.044161796569824

Token 330: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019856137223541737
    2. ' int' → logprob: -6.251985549926758
    3. ')' → logprob: -10.001985549926758
    4. '[int' → logprob: -12.001985549926758
    5. '(int' → logprob: -13.876985549926758
    6. 'float' → logprob: -14.001985549926758
    7. '):
' → logprob: -14.126985549926758
    8. ':int' → logprob: -14.251985549926758
    9. ' ' → logprob: -14.751985549926758
    10. '   ' → logprob: -15.001985549926758

Token 331: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02569456957280636
    2. '):
' → logprob: -4.025694370269775
    3. ')' → logprob: -4.900694370269775
    4. '):
' → logprob: -10.025694847106934
    5. ' ):' → logprob: -10.650694847106934
    6. ')->' → logprob: -12.900694847106934
    7. '):

' → logprob: -13.150694847106934
    8. ' )' → logprob: -14.275694847106934
    9. ' ):
' → logprob: -14.275694847106934
    10. ':' → logprob: -14.650694847106934

Token 332: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008769237902015448
    2. ':
' → logprob: -7.2508769035339355
    3. '():' → logprob: -9.375877380371094
    4. '):' → logprob: -10.125877380371094
    5. ':return' → logprob: -10.500877380371094
    6. ' :' → logprob: -12.750877380371094
    7. '():
' → logprob: -12.875877380371094
    8. '       ' → logprob: -13.000877380371094
    9. ':def' → logprob: -13.750877380371094
    10. '   ' → logprob: -13.750877380371094

Token 333: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0024768433067947626
    2. ' bool' → logprob: -6.002476692199707
    3. 'int' → logprob: -14.252476692199707
    4. '(bool' → logprob: -15.502476692199707
    5. '	bool' → logprob: -16.002477645874023
    6. '<bool' → logprob: -17.127477645874023
    7. '   ' → logprob: -17.877477645874023
    8. '[' → logprob: -18.377477645874023
    9. 'True' → logprob: -18.502477645874023
    10. ' ' → logprob: -18.502477645874023

Token 334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041756415157578886
    2. ':
' → logprob: -8.000417709350586
    3. '():' → logprob: -10.875417709350586
    4. '<|end|>' → logprob: -11.000417709350586
    5. '):' → logprob: -11.125417709350586
    6. ' :' → logprob: -11.625417709350586
    7. ':return' → logprob: -11.750417709350586
    8. ',' → logprob: -12.875417709350586
    9. '   ' → logprob: -13.000417709350586
    10. '.' → logprob: -13.125417709350586

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05856836587190628
    2. ' ' → logprob: -4.183568477630615
    3. '<|end|>' → logprob: -4.183568477630615
    4. ':' → logprob: -4.433568477630615
    5. '(' → logprob: -5.308568477630615
    6. '#' → logprob: -6.058568477630615
    7. ' 
' → logprob: -6.558568477630615
    8. '        ' → logprob: -7.183568477630615
    9. ' (' → logprob: -7.308568477630615
    10. '[' → logprob: -7.308568477630615

Token 336: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0890719890594482
    2. ' cycle' → logprob: -1.0890719890594482
    3. 'cycle' → logprob: -1.9640719890594482
    4. 'if' → logprob: -3.0890719890594482
    5. '       ' → logprob: -3.2140719890594482
    6. ' phase' → logprob: -3.4640719890594482
    7. 'phase' → logprob: -3.5890719890594482
    8. '#' (adapté à ' #') → logprob: -3.8390719890594482
    9. 'offset' → logprob: -5.464072227478027
    10. 'pass' → logprob: -6.214072227478027

Token 337: ' Direction' (ID: 39049)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.5499013066291809
    2. 'cycle' → logprob: -1.1749012470245361
    3. '#' → logprob: -3.299901247024536
    4. 'if' → logprob: -3.674901247024536
    5. ' if' → logprob: -4.049901485443115
    6. 'phase' → logprob: -4.299901485443115
    7. ' phase' → logprob: -4.799901485443115
    8. 'period' → logprob: -5.174901485443115
    9. ' #' → logprob: -6.424901485443115
    10. ' period' → logprob: -6.424901485443115

Token 338: ':' (ID: 25)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2927478849887848
    2. '==' → logprob: -1.6677478551864624
    3. ' in' → logprob: -3.167747974395752
    4. ' is' → logprob: -4.917747974395752
    5. ' ' → logprob: -5.292747974395752
    6. 's' → logprob: -6.292747974395752
    7. ' =' → logprob: -6.542747974395752
    8. '.startswith' → logprob: -6.542747974395752
    9. '=="' → logprob: -6.917747974395752
    10. ':' → logprob: -7.292747974395752

Token 339: ' one' (ID: 1001)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8140774965286255
    2. ' '' → logprob: -0.9390774965286255
    3. '"' → logprob: -2.814077377319336
    4. ' "' → logprob: -3.064077377319336
    5. ' east' → logprob: -3.439077377319336
    6. ''e' → logprob: -4.939077377319336
    7. ''E' → logprob: -5.314077377319336
    8. ''n' → logprob: -5.939077377319336
    9. ' direction' → logprob: -6.314077377319336
    10. 'east' → logprob: -6.314077377319336

Token 340: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6489426493644714
    2. '_' → logprob: -1.2739427089691162
    3. ' ' → logprob: -2.898942708969116
    4. ' if' → logprob: -3.273942708969116
    5. ')' → logprob: -3.773942708969116
    6. '   ' → logprob: -4.273942470550537
    7. 'of' → logprob: -4.523942470550537
    8. 'space' → logprob: -4.523942470550537
    9. ' )' → logprob: -5.148942470550537
    10. '.' → logprob: -5.648942470550537

Token 341: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1210273504257202
    2. '['' → logprob: -1.7460273504257202
    3. ''' → logprob: -1.9960273504257202
    4. '{"' → logprob: -2.4960274696350098
    5. '["' → logprob: -2.4960274696350098
    6. '{'' → logprob: -2.7460274696350098
    7. ''n' → logprob: -3.3710274696350098
    8. '('' → logprob: -3.6210274696350098
    9. ''e' → logprob: -3.7460274696350098
    10. ' '' → logprob: -4.49602746963501

Token 342: 'N' (ID: 45)
  Prédit: 'EW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EW' → logprob: -1.0679152011871338
    2. 'NS' → logprob: -1.1929152011871338
    3. 'ew' → logprob: -1.5679152011871338
    4. 'ns' → logprob: -2.942915201187134
    5. 'north' → logprob: -3.317915201187134
    6. 'east' → logprob: -3.442915201187134
    7. 'horizontal' → logprob: -4.692914962768555
    8. ''' → logprob: -4.817914962768555
    9. '"' → logprob: -5.942914962768555
    10. 'vertical' → logprob: -7.192914962768555

Token 343: '',' (ID: 787)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.02520948089659214
    2. ''' → logprob: -3.900209426879883
    3. '-S' → logprob: -5.900209426879883
    4. '',' → logprob: -7.275209426879883
    5. '/S' → logprob: -8.025209426879883
    6. 'E' → logprob: -8.025209426879883
    7. '','' → logprob: -8.900209426879883
    8. ''S' → logprob: -9.150209426879883
    9. 'or' → logprob: -9.775209426879883
    10. ',S' → logprob: -9.900209426879883

Token 344: ' '' (ID: 461)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.693865954875946
    2. 'S' → logprob: -0.818865954875946
    3. ''S' → logprob: -3.068866014480591
    4. ''' → logprob: -5.068865776062012
    5. ' '' → logprob: -5.693865776062012
    6. ''E' → logprob: -6.818865776062012
    7. 'E' → logprob: -7.443865776062012
    8. ' ' → logprob: -7.693865776062012
    9. ' E' → logprob: -7.943865776062012
    10. '   ' → logprob: -8.193865776062012

Token 345: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0036167046055197716
    2. 'E' → logprob: -5.628616809844971
    3. ' S' → logprob: -11.378616333007812
    4. ''' → logprob: -13.503616333007812
    5. ''S' → logprob: -14.628616333007812
    6. '```' → logprob: -14.753616333007812
    7. 'W' → logprob: -15.253616333007812
    8. '
' → logprob: -15.316116333007812
    9. 's' → logprob: -15.316116333007812
    10. '

' → logprob: -15.503616333007812

Token 346: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.05570107325911522
    2. ''' → logprob: -2.9307010173797607
    3. ''E' → logprob: -8.18070125579834
    4. 'E' → logprob: -8.43070125579834
    5. ',' → logprob: -8.80570125579834
    6. '','' → logprob: -9.55570125579834
    7. ''or' → logprob: -10.55570125579834
    8. 'W' → logprob: -10.80570125579834
    9. ' ',' → logprob: -11.43070125579834
    10. '',
' → logprob: -11.55570125579834

Token 347: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.03919428586959839
    2. ''' → logprob: -3.914194345474243
    3. ' '' → logprob: -4.414194107055664
    4. ''S' → logprob: -5.539194107055664
    5. 'E' → logprob: -6.289194107055664
    6. ' E' → logprob: -8.164194107055664
    7. ' ' → logprob: -9.289194107055664
    8. '’E' → logprob: -9.539194107055664
    9. ''e' → logprob: -10.664194107055664
    10. '  ' → logprob: -10.789194107055664

Token 348: 'E' (ID: 36)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.011049824766814709
    2. 'E' → logprob: -4.511049747467041
    3. ' S' → logprob: -14.0110502243042
    4. 's' → logprob: -14.7610502243042
    5. ''' → logprob: -15.6360502243042
    6. ''S' → logprob: -16.136049270629883
    7. '```' → logprob: -16.386049270629883
    8. 'X' → logprob: -16.386049270629883
    9. 'O' → logprob: -16.511049270629883
    10. 'Y' → logprob: -16.511049270629883

Token 349: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6944226622581482
    2. '',' → logprob: -0.6944226622581482
    3. 'W' → logprob: -7.194422721862793
    4. ''or' → logprob: -8.319422721862793
    5. '')' → logprob: -9.069422721862793
    6. '','' → logprob: -10.569422721862793
    7. ',' → logprob: -10.569422721862793
    8. ' or' → logprob: -10.694422721862793
    9. 'or' → logprob: -10.819422721862793
    10. ''
' → logprob: -11.444422721862793

Token 350: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13506680727005005
    2. 'W' → logprob: -2.2600667476654053
    3. ' W' → logprob: -4.385066986083984
    4. ' '' → logprob: -4.760066986083984
    5. ' ' → logprob: -7.510066986083984
    6. ''O' → logprob: -9.135066986083984
    7. '"W' → logprob: -9.385066986083984
    8. '   ' → logprob: -9.760066986083984
    9. '  ' → logprob: -10.385066986083984
    10. ''w' → logprob: -10.510066986083984

Token 351: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.7432603272027336e-06
    2. ' W' → logprob: -13.500001907348633
    3. ''' → logprob: -15.250001907348633
    4. '<W' → logprob: -18.000001907348633
    5. '```' → logprob: -18.125001907348633
    6. 'w' → logprob: -18.250001907348633
    7. '	W' → logprob: -18.312501907348633
    8. 'O' → logprob: -18.687501907348633
    9. '"W' → logprob: -18.750001907348633
    10. '')' → logprob: -18.812501907348633

Token 352: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08560675382614136
    2. ')'' → logprob: -2.585606813430786
    3. ')' → logprob: -5.335606575012207
    4. '')' → logprob: -6.960606575012207
    5. ')':' → logprob: -7.710606575012207
    6. ''):' → logprob: -9.210606575012207
    7. ')'
' → logprob: -9.460606575012207
    8. '':' → logprob: -9.460606575012207
    9. '):' → logprob: -9.585606575012207
    10. ' '' → logprob: -9.585606575012207

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14632084965705872
    2. ':' → logprob: -2.6463208198547363
    3. '<|end|>' → logprob: -3.0213208198547363
    4. ')' → logprob: -5.271320819854736
    5. '<|end|>' → logprob: -5.771320819854736
    6. ',' → logprob: -6.396320819854736
    7. '   ' → logprob: -6.646320819854736
    8. ':
' → logprob: -6.771320819854736
    9. '        
' → logprob: -7.521320819854736
    10. ' ' → logprob: -7.646320819854736

Token 354: ' #' (ID: 1069)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.2995895743370056
    2. 'cycle' → logprob: -1.6745896339416504
    3. ' phase' → logprob: -3.4245896339416504
    4. ' cycle' → logprob: -3.7995896339416504
    5. 'offset' → logprob: -5.42458963394165
    6. 'period' → logprob: -5.54958963394165
    7. 'if' → logprob: -5.67458963394165
    8. '#' (adapté à ' #') → logprob: -7.04958963394165
    9. '       ' → logprob: -7.04958963394165
    10. ' if' → logprob: -7.67458963394165

Token 355: ' Initial' (ID: 9209)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.580386757850647
    2. 'phase' → logprob: -0.955386757850647
    3. 'period' → logprob: -3.8303866386413574
    4. '#' → logprob: -4.330386638641357
    5. 'half' → logprob: -5.330386638641357
    6. 'offset' → logprob: -5.455386638641357
    7. ' cycle' → logprob: -5.455386638641357
    8. 'time' → logprob: -6.205386638641357
    9. 'if' → logprob: -6.580386638641357
    10. ' phase' → logprob: -6.705386638641357

Token 356: ' state' (ID: 2608)
  Prédit: '_phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_phase' → logprob: -1.085712194442749
    2. 'green' → logprob: -1.835712194442749
    3. 'phase' → logprob: -1.960712194442749
    4. '_offset' → logprob: -2.210712194442749
    5. '_green' → logprob: -2.585712194442749
    6. 'state' → logprob: -2.835712194442749
    7. 'offset' → logprob: -2.835712194442749
    8. '_state' → logprob: -3.210712194442749
    9. ' green' → logprob: -5.835712432861328
    10. 'cycle' → logprob: -5.835712432861328

Token 357: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2331097424030304
    2. '=' → logprob: -2.233109712600708
    3. ':' → logprob: -2.733109712600708
    4. ' is' → logprob: -4.233109951019287
    5. '       ' → logprob: -4.608109951019287
    6. ' cycle' → logprob: -5.608109951019287
    7. ' for' → logprob: -7.233109951019287
    8. ' if' → logprob: -7.358109951019287
    9. 's' → logprob: -7.608109951019287
    10. '0' → logprob: -7.983109951019287

Token 358: ' t' (ID: 260)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0037928272504359484
    2. '0' → logprob: -5.628792762756348
    3. ' time' → logprob: -9.253792762756348
    4. 't' → logprob: -9.253792762756348
    5. 'self' → logprob: -14.253792762756348
    6. ' ' → logprob: -14.878792762756348
    7. ' t' → logprob: -16.503793716430664
    8. '
' → logprob: -17.628793716430664
    9. '	time' → logprob: -17.878793716430664
    10. 'zero' → logprob: -18.378793716430664

Token 359: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002511808415874839
    2. ' =' → logprob: -6.252511978149414
    3. '0' → logprob: -7.502511978149414
    4. 'ime' → logprob: -10.627511978149414
    5. '==' → logprob: -12.502511978149414
    6. ' ' → logprob: -13.252511978149414
    7. '%' → logprob: -14.252511978149414
    8. ' ==' → logprob: -14.377511978149414
    9. '_=' → logprob: -15.502511978149414
    10. '_' → logprob: -15.627511978149414

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '=' → logprob: -15.6250581741333
    4. '۰' → logprob: -18.062559127807617
    5. 's' → logprob: -18.125059127807617
    6. '  ' → logprob: -18.250059127807617
    7. '```' → logprob: -18.250059127807617
    8. '   ' → logprob: -18.625059127807617
    9. '
' → logprob: -18.687559127807617
    10. ')' → logprob: -18.687559127807617

Token 361: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.270081102848053
    2. ':' → logprob: -1.5200810432434082
    3. '       ' → logprob: -5.145081043243408
    4. ' =' → logprob: -5.520081043243408
    5. '=' → logprob: -6.020081043243408
    6. ' for' → logprob: -6.145081043243408
    7. 'is' → logprob: -7.145081043243408
    8. ',' → logprob: -7.270081043243408
    9. ' if' → logprob: -7.520081043243408
    10. ' cycle' → logprob: -8.145081520080566

Token 362: ' NS' (ID: 6950)
  Prédit: '(direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(direction' → logprob: -0.46681028604507446
    2. ' direction' → logprob: -1.9668102264404297
    3. 'direction' → logprob: -1.9668102264404297
    4. ' (' → logprob: -2.9668102264404297
    5. 'if' → logprob: -4.09181022644043
    6. ' if' → logprob: -4.96681022644043
    7. '(self' → logprob: -5.46681022644043
    8. 'return' → logprob: -5.96681022644043
    9. 'True' → logprob: -6.34181022644043
    10. ' True' → logprob: -6.46681022644043

Token 363: ' green' (ID: 8851)
  Prédit: '_green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.043060969561338425
    2. 'green' → logprob: -3.9180610179901123
    3. '_' → logprob: -4.668060779571533
    4. ' green' → logprob: -5.043060779571533
    5. ' is' → logprob: -6.793060779571533
    6. '_is' → logprob: -6.918060779571533
    7. '_GREEN' → logprob: -7.168060779571533
    8. 'Green' → logprob: -7.293060779571533
    9. '_direction' → logprob: -7.543060779571533
    10. '%' → logprob: -7.918060779571533

Token 364: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42750704288482666
    2. ' if' → logprob: -1.4275070428848267
    3. 'if' → logprob: -2.677506923675537
    4. ',' → logprob: -4.177506923675537
    5. '
' → logprob: -4.802506923675537
    6. ' and' → logprob: -5.177506923675537
    7. ' cycle' → logprob: -6.302506923675537
    8. 'cycle' → logprob: -6.302506923675537
    9. ':' → logprob: -6.552506923675537
    10. '   ' → logprob: -7.177506923675537

Token 365: ' EW' (ID: 143307)
  Prédit: 'EW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EW' → logprob: -0.0013886855449527502
    2. ' EW' → logprob: -7.1263885498046875
    3. 'ew' → logprob: -7.5013885498046875
    4. 'WE' → logprob: -11.626388549804688
    5. 'else' → logprob: -12.126388549804688
    6. 'others' → logprob: -13.251388549804688
    7. 'return' → logprob: -13.376388549804688
    8. ' ' → logprob: -13.501388549804688
    9. '   ' → logprob: -13.626388549804688
    10. 'then' → logprob: -13.626388549804688

Token 366: ' red' (ID: 3592)
  Prédit: ' green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' green' → logprob: -0.3874543011188507
    2. 'green' → logprob: -1.1374542713165283
    3. '_green' → logprob: -8.26245403289795
    4. ' red' → logprob: -8.38745403289795
    5. 'red' → logprob: -9.88745403289795
    6. ' is' → logprob: -10.26245403289795
    7. ' ' → logprob: -13.63745403289795
    8. ' ' → logprob: -13.63745403289795
    9. 'is' → logprob: -13.76245403289795
    10. 'Green' → logprob: -14.01245403289795

Token 367: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08098593354225159
    2. '
' → logprob: -3.4559860229492188
    3. ' if' → logprob: -3.9559860229492188
    4. ',' → logprob: -5.080986022949219
    5. '        
' → logprob: -5.205986022949219
    6. ' cycle' → logprob: -5.580986022949219
    7. 'if' → logprob: -5.955986022949219
    8. '<|end|>' → logprob: -6.205986022949219
    9. 'cycle' → logprob: -6.455986022949219
    10. '#' → logprob: -6.580986022949219

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6023146510124207
    2. ' cycle' → logprob: -0.8523146510124207
    3. 'cycle' → logprob: -4.102314472198486
    4. ' if' → logprob: -4.977314472198486
    5. 't' → logprob: -7.852314472198486
    6. '        
' → logprob: -8.102314949035645
    7. ' phase' → logprob: -8.352314949035645
    8. 'if' → logprob: -8.477314949035645
    9. ' t' → logprob: -8.852314949035645
    10. ' time' → logprob: -9.227314949035645

Token 369: ' #' (ID: 1069)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.4277331233024597
    2. ' cycle' → logprob: -1.4277331829071045
    3. 'phase' → logprob: -2.8027331829071045
    4. 'if' → logprob: -4.552732944488525
    5. '       ' → logprob: -4.802732944488525
    6. 'period' → logprob: -4.927732944488525
    7. ' phase' → logprob: -5.052732944488525
    8. ' if' → logprob: -5.677732944488525
    9. 't' → logprob: -5.677732944488525
    10. 'mod' → logprob: -5.927732944488525

Token 370: ' signal' (ID: 12884)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.17078061401844025
    2. ' cycle' → logprob: -2.920780658721924
    3. 'phase' → logprob: -3.045780658721924
    4. 'if' → logprob: -3.545780658721924
    5. 'period' → logprob: -4.170780658721924
    6. '#' → logprob: -5.920780658721924
    7. 'time' → logprob: -6.045780658721924
    8. ' if' → logprob: -6.670780658721924
    9. ' phase' → logprob: -7.045780658721924
    10. 'offset' → logprob: -7.045780658721924

Token 371: ' togg' (ID: 23031)
  Prédit: '_phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_phase' → logprob: -0.24826432764530182
    2. '_cycle' → logprob: -2.3732643127441406
    3. '_time' → logprob: -2.7482643127441406
    4. 'phase' → logprob: -3.8732643127441406
    5. '_state' → logprob: -3.9982643127441406
    6. '_period' → logprob: -5.373264312744141
    7. 'cycle' → logprob: -5.748264312744141
    8. 'time' → logprob: -5.748264312744141
    9. 'state' → logprob: -5.873264312744141
    10. '_pos' → logprob: -6.248264312744141

Token 372: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.0029927976429462433
    2. 'es' → logprob: -6.127992630004883
    3. 'le' → logprob: -8.127992630004883
    4. 'l' → logprob: -9.002992630004883
    5. '
' → logprob: -9.877992630004883
    6. 'lates' → logprob: -10.002992630004883
    7. '   ' → logprob: -10.127992630004883
    8. 'lest' → logprob: -10.252992630004883
    9. 'ling' → logprob: -10.377992630004883
    10. '```' → logprob: -10.502992630004883

Token 373: ' every' (ID: 1753)
  Prédit: ' every'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' every' → logprob: -0.14486290514469147
    2. 'every' → logprob: -2.0198628902435303
    3. ' at' → logprob: -6.519863128662109
    4. ' after' → logprob: -8.39486312866211
    5. 'state' → logprob: -8.64486312866211
    6. '_every' → logprob: -10.01986312866211
    7. 'after' → logprob: -10.14486312866211
    8. ' each' → logprob: -10.14486312866211
    9. ' state' → logprob: -10.26986312866211
    10. ' its' → logprob: -10.89486312866211

Token 374: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08252277225255966
    2. ' self' → logprob: -2.8325228691101074
    3. '(self' → logprob: -3.9575228691101074
    4. ' (' → logprob: -6.832522869110107
    5. 'cycle' → logprob: -9.45752239227295
    6. ' cycle' → logprob: -9.83252239227295
    7. '[self' → logprob: -11.70752239227295
    8. '
' → logprob: -11.95752239227295
    9. ' ' → logprob: -12.95752239227295
    10. '(' → logprob: -13.45752239227295

Token 375: ' minutes' (ID: 5438)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.2754087448120117
    2. '_cycle' → logprob: -2.0254087448120117
    3. 'ycle' → logprob: -2.2754087448120117
    4. ' cycle' → logprob: -5.650408744812012
    5. '(self' → logprob: -7.275408744812012
    6. 'self' → logprob: -8.150408744812012
    7. '=' → logprob: -8.525408744812012
    8. '=self' → logprob: -8.900408744812012
    9. 'ecycle' → logprob: -9.025408744812012
    10. ' =' → logprob: -9.150408744812012

Token 376: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08407992869615555
    2. ' if' → logprob: -4.084079742431641
    3. ',' → logprob: -4.334079742431641
    4. ' cycle' → logprob: -4.334079742431641
    5. 'cycle' → logprob: -4.584079742431641
    6. '
' → logprob: -5.084079742431641
    7. ' =' → logprob: -5.584079742431641
    8. 'if' → logprob: -5.584079742431641
    9. ' (' → logprob: -5.834079742431641
    10. '<|end|>' → logprob: -6.084079742431641

Token 377: ' green' (ID: 8851)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.6374613046646118
    2. ' cycle' → logprob: -2.0124611854553223
    3. 'period' → logprob: -2.1374611854553223
    4. 'phase' → logprob: -2.1374611854553223
    5. 'half' → logprob: -3.5124611854553223
    6. ' period' → logprob: -4.137461185455322
    7. 'k' → logprob: -4.262461185455322
    8. ' phase' → logprob: -4.387461185455322
    9. ' half' → logprob: -5.137461185455322
    10. 'interval' → logprob: -5.387461185455322

Token 378: ' for' (ID: 395)
  Prédit: '_duration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_duration' → logprob: -0.3669702410697937
    2. '_time' → logprob: -2.3669703006744385
    3. '_phase' → logprob: -2.7419703006744385
    4. '_cycle' → logprob: -2.7419703006744385
    5. '_period' → logprob: -3.1169703006744385
    6. '_interval' → logprob: -4.866970062255859
    7. '_inter' → logprob: -4.991970062255859
    8. 'phase' → logprob: -5.741970062255859
    9. 'duration' → logprob: -5.866970062255859
    10. 'time' → logprob: -5.991970062255859

Token 379: ' NS' (ID: 6950)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008024048991501331
    2. '(self' → logprob: -5.008024215698242
    3. ' self' → logprob: -6.758024215698242
    4. 'k' → logprob: -9.758024215698242
    5. 'cycle' → logprob: -10.383024215698242
    6. '(k' → logprob: -10.883024215698242
    7. ' (' → logprob: -11.633024215698242
    8. '(' → logprob: -12.133024215698242
    9. '[self' → logprob: -12.133024215698242
    10. 'half' → logprob: -12.258024215698242

Token 380: ' then' (ID: 1815)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4323163330554962
    2. 'for' → logprob: -1.4323163032531738
    3. ' direction' → logprob: -3.432316303253174
    4. 'direction' → logprob: -3.432316303253174
    5. ' k' → logprob: -3.557316303253174
    6. ',' → logprob: -5.307316303253174
    7. ' directions' → logprob: -5.432316303253174
    8. 'k' → logprob: -5.682316303253174
    9. 'dire' → logprob: -6.432316303253174
    10. 'and' → logprob: -6.807316303253174

Token 381: ' EW' (ID: 143307)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14718715846538544
    2. 'self' → logprob: -2.5221872329711914
    3. 'cycle' → logprob: -4.022187232971191
    4. ' k' → logprob: -4.397187232971191
    5. 'EW' → logprob: -4.647187232971191
    6. ' cycle' → logprob: -4.897187232971191
    7. ' self' → logprob: -5.397187232971191
    8. 'green' → logprob: -6.522187232971191
    9. 'for' → logprob: -7.022187232971191
    10. ' green' → logprob: -7.772187232971191

Token 382: ' alternating' (ID: 125099)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37342071533203125
    2. ' directions' → logprob: -2.6234207153320312
    3. 'for' → logprob: -2.8734207153320312
    4. ' every' → logprob: -3.1234207153320312
    5. ',' → logprob: -3.6234207153320312
    6. ' cycle' → logprob: -4.248420715332031
    7. ' at' → logprob: -4.373420715332031
    8. ' cycles' → logprob: -4.373420715332031
    9. 'direction' → logprob: -4.998420715332031
    10. ' direction' → logprob: -4.998420715332031

Token 383: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14492055773735046
    2. 'cycle' → logprob: -2.519920587539673
    3. 'k' → logprob: -4.269920349121094
    4. 'period' → logprob: -4.394920349121094
    5. 'if' → logprob: -5.019920349121094
    6. 'interval' → logprob: -5.394920349121094
    7. 'phase' → logprob: -5.394920349121094
    8. 't' → logprob: -6.019920349121094
    9. '
' → logprob: -6.519920349121094
    10. 'switch' → logprob: -6.894920349121094

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02094484306871891
    2. 'cycle' → logprob: -4.270945072174072
    3. 'phase' → logprob: -6.145945072174072
    4. ' cycle' → logprob: -6.645945072174072
    5. 'k' → logprob: -6.895945072174072
    6. 'if' → logprob: -7.145945072174072
    7. 't' → logprob: -7.770945072174072
    8. 'period' → logprob: -8.270944595336914
    9. 'toggle' → logprob: -9.145944595336914
    10. 'interval' → logprob: -9.270944595336914

Token 385: ' #' (ID: 1069)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.2405843287706375
    2. 'cycle' → logprob: -1.740584373474121
    3. 'period' → logprob: -3.740584373474121
    4. ' phase' → logprob: -5.490584373474121
    5. 'k' → logprob: -5.740584373474121
    6. ' cycle' → logprob: -6.115584373474121
    7. 'half' → logprob: -6.615584373474121
    8. '   ' → logprob: -6.865584373474121
    9. 't' → logprob: -7.490584373474121
    10. 'if' → logprob: -7.865584373474121

Token 386: ' Return' (ID: 6318)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.559826135635376
    2. 'cycle' → logprob: -0.934826135635376
    3. 'period' → logprob: -3.684826135635376
    4. ' cycle' → logprob: -5.809825897216797
    5. ' phase' → logprob: -6.184825897216797
    6. 'k' → logprob: -6.434825897216797
    7. 't' → logprob: -6.809825897216797
    8. 'time' → logprob: -7.309825897216797
    9. 'mod' → logprob: -7.559825897216797
    10. '   ' → logprob: -7.809825897216797

Token 387: ' True' (ID: 6432)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6868293285369873
    2. '(direction' → logprob: -1.5618293285369873
    3. '(self' → logprob: -2.4368293285369873
    4. 'True' → logprob: -3.3118293285369873
    5. ' direction' → logprob: -3.5618293285369873
    6. ' True' → logprob: -3.5618293285369873
    7. '(True' → logprob: -3.5618293285369873
    8. 'self' → logprob: -3.5618293285369873
    9. ' self' → logprob: -3.6868293285369873
    10. 'direction' → logprob: -4.061829566955566

Token 388: ' if' (ID: 538)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4066210389137268
    2. '(self' → logprob: -2.031620979309082
    3. ' if' → logprob: -2.406620979309082
    4. '(direction' → logprob: -2.656620979309082
    5. ' self' → logprob: -4.156620979309082
    6. '       ' → logprob: -5.031620979309082
    7. 'if' → logprob: -5.156620979309082
    8. 'self' → logprob: -5.656620979309082
    9. ' for' → logprob: -5.906620979309082
    10. '((' → logprob: -6.281620979309082

Token 389: ' green' (ID: 8851)
  Prédit: '(direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(direction' → logprob: -0.06136346980929375
    2. 'direction' → logprob: -2.936363458633423
    3. ' direction' → logprob: -5.811363697052002
    4. ' (' → logprob: -6.436363697052002
    5. '(self' → logprob: -7.811363697052002
    6. 'the' → logprob: -7.811363697052002
    7. '((' → logprob: -7.936363697052002
    8. '(
' → logprob: -8.311363220214844
    9. '(' → logprob: -8.686363220214844
    10. ' the' → logprob: -9.561363220214844

Token 390: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31686854362487793
    2. 'if' → logprob: -1.691868543624878
    3. ' for' → logprob: -2.816868543624878
    4. 'for' → logprob: -4.066868782043457
    5. '       ' → logprob: -4.816868782043457
    6. '   ' → logprob: -6.941868782043457
    7. ' at' → logprob: -7.816868782043457
    8. ',' → logprob: -8.066868782043457
    9. ' and' → logprob: -8.816868782043457
    10. ' iff' → logprob: -9.316868782043457

Token 391: ' approach' (ID: 7139)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.12836585938930511
    2. ' direction' → logprob: -2.3783657550811768
    3. 'the' → logprob: -4.128365993499756
    4. '(direction' → logprob: -5.253365993499756
    5. 'that' → logprob: -6.128365993499756
    6. ' the' → logprob: -6.253365993499756
    7. 'this' → logprob: -6.753365993499756
    8. ' that' → logprob: -8.253365516662598
    9. '   ' → logprob: -8.378365516662598
    10. ' this' → logprob: -8.878365516662598

Token 392: ' direction' (ID: 9262)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10574308037757874
    2. 'for' → logprob: -2.855743169784546
    3. ':' → logprob: -4.605742931365967
    4. '.' → logprob: -4.605742931365967
    5. '   ' → logprob: -4.855742931365967
    6. ',' → logprob: -5.480742931365967
    7. '=' → logprob: -6.230742931365967
    8. '(' → logprob: -6.730742931365967
    9. ' at' → logprob: -6.855742931365967
    10. ' if' → logprob: -6.980742931365967

Token 393: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5322925448417664
    2. ',' → logprob: -2.157292604446411
    3. ':' → logprob: -2.282292604446411
    4. ' and' → logprob: -2.782292604446411
    5. ' for' → logprob: -3.157292604446411
    6. ' if' → logprob: -3.532292604446411
    7. '.' → logprob: -4.032292366027832
    8. ' at' → logprob: -4.157292366027832
    9. '   ' → logprob: -4.907292366027832
    10. ';' → logprob: -5.782292366027832

Token 394: ' given' (ID: 4335)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00038944309926591814
    2. ' time' → logprob: -7.875389575958252
    3. 'this' → logprob: -13.250389099121094
    4. 'given' → logprob: -13.375389099121094
    5. ' given' → logprob: -13.625389099121094
    6. 't' → logprob: -13.625389099121094
    7. 'current' → logprob: -13.750389099121094
    8. '```' → logprob: -14.000389099121094
    9. '`' → logprob: -14.375389099121094
    10. 'the' → logprob: -14.625389099121094

Token 395: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.3132643401622772
    2. 'time' → logprob: -1.3132643699645996
    3. '_time' → logprob: -13.688263893127441
    4. 't' → logprob: -13.813263893127441
    5. ' t' → logprob: -16.063264846801758
    6. '	time' → logprob: -16.313264846801758
    7. ' 
' → logprob: -16.813264846801758
    8. '(time' → logprob: -16.938264846801758
    9. '"time' → logprob: -16.938264846801758
    10. ' ' → logprob: -17.313264846801758

Token 396: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007869940251111984
    2. ',' → logprob: -5.382869720458984
    3. '
' → logprob: -6.382869720458984
    4. ':' → logprob: -7.382869720458984
    5. '        
' → logprob: -8.507869720458984
    6. 'cycle' → logprob: -9.632869720458984
    7. ',
' → logprob: -9.757869720458984
    8. '.' → logprob: -9.757869720458984
    9. ' =' → logprob: -9.882869720458984
    10. ')' → logprob: -10.007869720458984

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007236333331093192
    2. '        
' → logprob: -8.875723838806152
    3. '```' → logprob: -9.000723838806152
    4. ',' → logprob: -9.625723838806152
    5. ':' → logprob: -9.625723838806152
    6. '
' → logprob: -10.125723838806152
    7. '\n' → logprob: -10.500723838806152
    8. ' if' → logprob: -10.750723838806152
    9. '\t' → logprob: -10.750723838806152
    10. '        ' → logprob: -10.875723838806152

Token 398: ' phase' (ID: 15222)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phase' (adapté à ' phase') → logprob: -0.7180185317993164
    2. 'cycle' → logprob: -0.8430185317993164
    3. 'period' → logprob: -3.2180185317993164
    4. '       ' → logprob: -4.218018531799316
    5. ' cycle' → logprob: -4.843018531799316
    6. 'if' → logprob: -5.468018531799316
    7. 'k' → logprob: -5.468018531799316
    8. ' phase' → logprob: -5.843018531799316
    9. 't' → logprob: -5.843018531799316
    10. 'mod' → logprob: -6.468018531799316

Token 399: '_time' (ID: 6425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01100149005651474
    2. '=' → logprob: -5.1360015869140625
    3. '_time' → logprob: -5.6360015869140625
    4. '_phase' → logprob: -7.5110015869140625
    5. '_duration' → logprob: -7.7610015869140625
    6. '_length' → logprob: -7.7610015869140625
    7. '_cycle' → logprob: -10.011001586914062
    8. '_period' → logprob: -10.886001586914062
    9. '   ' → logprob: -12.386001586914062
    10. '=time' → logprob: -12.636001586914062

Token 400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740886092185974
    2. ' =' → logprob: -0.9740886092185974
    3. '   ' → logprob: -13.224088668823242
    4. ' ' → logprob: -13.349088668823242
    5. 's' → logprob: -13.599088668823242
    6. '_' → logprob: -13.724088668823242
    7. '_cycle' → logprob: -13.849088668823242
    8. ',' → logprob: -13.974088668823242
    9. '_mod' → logprob: -14.474088668823242
    10. '=int' → logprob: -14.599088668823242

Token 401: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.20146800577640533
    2. ' time' → logprob: -1.7014679908752441
    3. '(time' → logprob: -10.201468467712402
    4. 'self' → logprob: -11.201468467712402
    5. ' self' → logprob: -13.201468467712402
    6. '   ' → logprob: -13.826468467712402
    7. ' (' → logprob: -14.201468467712402
    8. 't' → logprob: -16.201467514038086
    9. '	time' → logprob: -16.451467514038086
    10. ' ' → logprob: -16.576467514038086

Token 402: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31337133049964905
    2. '%' → logprob: -1.3133713006973267
    3. ' //' → logprob: -9.813371658325195
    4. ' ' → logprob: -10.938371658325195
    5. '%d' → logprob: -11.188371658325195
    6. '%s' → logprob: -12.063371658325195
    7. ' ' → logprob: -12.188371658325195
    8. '//' → logprob: -13.063371658325195
    9. ' %=' → logprob: -13.063371658325195
    10. '=' → logprob: -13.188371658325195

Token 403: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49473315477371216
    2. '(self' → logprob: -0.9947331547737122
    3. 'self' → logprob: -4.2447333335876465
    4. ' (' → logprob: -5.1197333335876465
    5. ' self' → logprob: -8.994732856750488
    6. '   ' → logprob: -14.369732856750488
    7. '(
' → logprob: -14.494732856750488
    8. '((' → logprob: -14.994732856750488
    9. '(this' → logprob: -14.994732856750488
    10. '(s' → logprob: -15.244732856750488

Token 404: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7251257300376892
    2. 'self' → logprob: -1.350125789642334
    3. '2' → logprob: -1.725125789642334
    4. '(self' → logprob: -2.725125789642334
    5. ' (' → logprob: -4.725125789642334
    6. ' self' → logprob: -5.600125789642334
    7. ' ' → logprob: -8.600125312805176
    8. '   ' → logprob: -10.475125312805176
    9. '(
' → logprob: -11.100125312805176
    10. '
' → logprob: -11.100125312805176

Token 405: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16234081983566284
    2. '*self' → logprob: -1.9123408794403076
    3. '*' → logprob: -6.1623406410217285
    4. 'self' → logprob: -12.162341117858887
    5. ' self' → logprob: -13.912341117858887
    6. ' ' → logprob: -14.912341117858887
    7. '*object' → logprob: -15.662341117858887
    8. '[self' → logprob: -15.662341117858887
    9. '(self' → logprob: -16.41234016418457
    10. '   ' → logprob: -16.53734016418457

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014001218369230628
    2. ' self' → logprob: -8.875140190124512
    3. '(self' → logprob: -17.000139236450195
    4. '       ' → logprob: -17.125139236450195
    5. '   ' → logprob: -17.375139236450195
    6. '
' → logprob: -18.125139236450195
    7. '[self' → logprob: -18.250139236450195
    8. '*self' → logprob: -18.625139236450195
    9. '	self' → logprob: -19.125139236450195
    10. ' ' → logprob: -19.125139236450195

Token 407: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.00018327576981391758
    2. 'cycle' → logprob: -8.62518310546875
    3. ' .' → logprob: -13.25018310546875
    4. '.' → logprob: -13.25018310546875
    5. ' cycle' → logprob: -16.75018310546875
    6. '.phase' → logprob: -16.87518310546875
    7. '_cycle' → logprob: -18.12518310546875
    8. 'c' → logprob: -18.75018310546875
    9. '	c' → logprob: -18.87518310546875
    10. 'ycle' → logprob: -19.12518310546875

Token 408: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -5.676981345459353e-06
    2. 'cycle' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.3750057220459
    4. 'YCLE' → logprob: -16.7500057220459
    5. 'ycl' → logprob: -17.2500057220459
    6. 'ircle' → logprob: -17.6250057220459
    7. 'cle' → logprob: -17.7500057220459
    8. 'yle' → logprob: -18.1250057220459
    9. 'y' → logprob: -18.3750057220459
    10. 'ycles' → logprob: -18.8750057220459

Token 409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018169255927205086
    2. ')
' → logprob: -4.018169403076172
    3. ' )' → logprob: -11.393169403076172
    4. ')

' → logprob: -12.268169403076172
    5. ')
' → logprob: -13.143169403076172
    6. ' )
' → logprob: -13.643169403076172
    7. '       ' → logprob: -15.893169403076172
    8. ')return' → logprob: -16.893169403076172
    9. '   ' → logprob: -17.268169403076172
    10. '
' → logprob: -17.393169403076172

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6826885938644409
    2. ' if' → logprob: -0.8076885938644409
    3. 'if' → logprob: -3.1826887130737305
    4. '
' → logprob: -5.1826887130737305
    5. '   ' → logprob: -6.6826887130737305
    6. '        
' → logprob: -8.05768871307373
    7. '    
' → logprob: -10.30768871307373
    8. ' is' → logprob: -10.68268871307373
    9. '        ' → logprob: -10.93268871307373
    10. '	if' → logprob: -11.43268871307373

Token 411: ' ns' (ID: 18343)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00027337539358995855
    2. '       ' → logprob: -8.375273704528809
    3. ' if' → logprob: -10.125273704528809
    4. 'return' → logprob: -13.250273704528809
    5. 'is' → logprob: -13.875273704528809
    6. 'green' → logprob: -16.875272750854492
    7. '   ' → logprob: -17.500272750854492
    8. '	if' → logprob: -18.000272750854492
    9. '        
' → logprob: -18.500272750854492
    10. 'If' → logprob: -19.125272750854492

Token 412: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.00563616631552577
    2. '_phase' → logprob: -5.380636215209961
    3. 'green' → logprob: -7.880636215209961
    4. '_is' → logprob: -8.505636215209961
    5. ' =' → logprob: -8.630636215209961
    6. '_cycle' → logprob: -10.005636215209961
    7. '_active' → logprob: -10.130636215209961
    8. '=' → logprob: -10.505636215209961
    9. ' green' → logprob: -10.630636215209961
    10. '_GREEN' → logprob: -10.880636215209961

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04878776893019676
    2. '=' → logprob: -3.048787832260132
    3. '_phase' → logprob: -9.298788070678711
    4. ' ' → logprob: -9.798788070678711
    5. '_time' → logprob: -10.923788070678711
    6. '_active' → logprob: -11.798788070678711
    7. '_' → logprob: -11.923788070678711
    8. '=True' → logprob: -12.423788070678711
    9. '_duration' → logprob: -12.423788070678711
    10. '=(' → logprob: -12.923788070678711

Token 414: ' phase' (ID: 15222)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.06343530118465424
    2. ' phase' → logprob: -2.8134353160858154
    3. '(' → logprob: -7.188435077667236
    4. '0' → logprob: -7.438435077667236
    5. ' (' → logprob: -9.313435554504395
    6. ' ' → logprob: -11.063435554504395
    7. 'ph' → logprob: -12.813435554504395
    8. '   ' → logprob: -13.000935554504395
    9. '.phase' → logprob: -13.188435554504395
    10. 'True' → logprob: -13.625935554504395

Token 415: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.0280383548888494e-06
    2. 'time' → logprob: -14.125000953674316
    3. 'Time' → logprob: -16.000001907348633
    4. '_t' → logprob: -17.375001907348633
    5. '=' → logprob: -17.875001907348633
    6. '_TIME' → logprob: -18.625001907348633
    7. 's' → logprob: -18.625001907348633
    8. '_code' → logprob: -19.125001907348633
    9. '"time' → logprob: -19.250001907348633
    10. ' =' → logprob: -19.750001907348633

Token 416: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12693902850151062
    2. ' <' → logprob: -2.126939058303833
    3. '<int' → logprob: -13.251938819885254
    4. ' ' → logprob: -13.501938819885254
    5. '<s' → logprob: -13.626938819885254
    6. '<len' → logprob: -13.751938819885254
    7. '[' → logprob: -14.376938819885254
    8. '<num' → logprob: -14.376938819885254
    9. '<n' → logprob: -14.626938819885254
    10. '<size' → logprob: -14.751938819885254

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.848420551046729e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -17.125059127807617
    4. '   ' → logprob: -17.875059127807617
    5. '	self' → logprob: -18.125059127807617
    6. '[self' → logprob: -18.500059127807617
    7. '0' → logprob: -19.500059127807617
    8. '       ' → logprob: -20.000059127807617
    9. 'this' → logprob: -20.000059127807617
    10. '  ' → logprob: -20.000059127807617

Token 418: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -1.5213274309644476e-05
    2. 'cycle' → logprob: -11.125015258789062
    3. '.' → logprob: -15.000015258789062
    4. ' .' → logprob: -16.500015258789062
    5. ' cycle' → logprob: -17.875015258789062
    6. '.phase' → logprob: -18.625015258789062
    7. 'ycle' → logprob: -19.250015258789062
    8. '_cycle' → logprob: -20.125015258789062
    9. '-cycle' → logprob: -20.250015258789062
    10. 'cycled' → logprob: -21.250015258789062

Token 419: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -1.0325924449716695e-05
    2. 'cycle' → logprob: -11.50001049041748
    3. 'ycl' → logprob: -15.75001049041748
    4. 'y' → logprob: -17.375009536743164
    5. 'ircle' → logprob: -17.500009536743164
    6. 'YCLE' → logprob: -17.750009536743164
    7. 'yle' → logprob: -18.625009536743164
    8. 'ycles' → logprob: -19.000009536743164
    9. 'yclic' → logprob: -19.750009536743164
    10. '   ' → logprob: -19.875009536743164

Token 420: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16879570484161377
    2. '
' → logprob: -2.168795585632324
    3. ' if' → logprob: -3.293795585632324
    4. 'if' → logprob: -6.043795585632324
    5. '        
' → logprob: -7.043795585632324
    6. ' and' → logprob: -7.668795585632324
    7. 'and' → logprob: -10.043795585632324
    8. ',' → logprob: -10.293795585632324
    9. 'return' → logprob: -10.793795585632324
    10. '  
' → logprob: -11.043795585632324

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10117234289646149
    2. 'if' → logprob: -2.97617244720459
    3. ' if' → logprob: -3.10117244720459
    4. '
' → logprob: -9.47617244720459
    5. '   ' → logprob: -9.47617244720459
    6. '        
' → logprob: -10.10117244720459
    7. 'direction' → logprob: -11.10117244720459
    8. ',' → logprob: -12.60117244720459
    9. ' direction' → logprob: -12.72617244720459
    10. '	if' → logprob: -12.72617244720459

Token 422: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00021295747137628496
    2. '       ' → logprob: -8.625212669372559
    3. 'return' → logprob: -10.750212669372559
    4. ' if' → logprob: -11.500212669372559
    5. 'is' → logprob: -14.375212669372559
    6. 'direction' → logprob: -14.500212669372559
    7. 'ew' → logprob: -14.875212669372559
    8. '   ' → logprob: -15.250212669372559
    9. 'dir' → logprob: -15.875212669372559
    10. '#' → logprob: -17.625213623046875

Token 423: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.1602318435907364
    2. ' direction' → logprob: -1.9102318286895752
    3. '(direction' → logprob: -12.160231590270996
    4. 'd' → logprob: -15.035231590270996
    5. '   ' → logprob: -15.035231590270996
    6. 'dire' → logprob: -15.160231590270996
    7. 'Direction' → logprob: -15.160231590270996
    8. ' ' → logprob: -15.285231590270996
    9. ' ' → logprob: -15.410231590270996
    10. 'direct' → logprob: -15.785231590270996

Token 424: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804975748062134
    2. 'in' → logprob: -3.2880496978759766
    3. ' ' → logprob: -12.913049697875977
    4. '[' → logprob: -13.038049697875977
    5. '	in' → logprob: -13.538049697875977
    6. '==' → logprob: -14.413049697875977
    7. 'In' → logprob: -15.288049697875977
    8. '
' → logprob: -15.538049697875977
    9. '   ' → logprob: -16.038049697875977
    10. 'n' → logprob: -16.038049697875977

Token 425: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5949431657791138
    2. '['' → logprob: -0.9699431657791138
    3. '{'' → logprob: -3.469943046569824
    4. ''' → logprob: -3.594943046569824
    5. ''N' → logprob: -5.594943046569824
    6. '("' → logprob: -5.719943046569824
    7. '["' → logprob: -6.594943046569824
    8. '"' → logprob: -6.969943046569824
    9. ' ('' → logprob: -7.844943046569824
    10. ' ['' → logprob: -7.969943046569824

Token 426: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019643204286694527
    2. ''N' → logprob: -6.251964092254639
    3. ''' → logprob: -10.876964569091797
    4. '"N' → logprob: -12.126964569091797
    5. 'E' → logprob: -12.751964569091797
    6. ' N' → logprob: -13.251964569091797
    7. '`' → logprob: -13.751964569091797
    8. ''n' → logprob: -14.126964569091797
    9. '['' → logprob: -14.251964569091797
    10. '```' → logprob: -14.376964569091797

Token 427: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.014338496141135693
    2. '','' → logprob: -4.889338493347168
    3. 'S' → logprob: -5.014338493347168
    4. ''' → logprob: -9.889338493347168
    5. ''S' → logprob: -12.514338493347168
    6. 'N' → logprob: -12.639338493347168
    7. 'E' → logprob: -13.139338493347168
    8. ',' → logprob: -13.389338493347168
    9. 'W' → logprob: -13.389338493347168
    10. '',"' → logprob: -13.514338493347168

Token 428: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.0002658655575942248
    2. 'S' → logprob: -8.500266075134277
    3. ' '' → logprob: -10.250266075134277
    4. ''s' → logprob: -11.375266075134277
    5. ''' → logprob: -11.875266075134277
    6. ' ' → logprob: -12.250266075134277
    7. '"S' → logprob: -13.750266075134277
    8. '   ' → logprob: -13.875266075134277
    9. ' S' → logprob: -14.875266075134277
    10. '  ' → logprob: -15.125266075134277

Token 429: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.2352385965641588e-05
    2. ''S' → logprob: -11.875012397766113
    3. ' S' → logprob: -13.125012397766113
    4. ''' → logprob: -13.375012397766113
    5. ''s' → logprob: -14.625012397766113
    6. '"S' → logprob: -14.875012397766113
    7. 's' → logprob: -16.000011444091797
    8. '')' → logprob: -16.000011444091797
    9. ',S' → logprob: -16.500011444091797
    10. '"' → logprob: -16.562511444091797

Token 430: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.2935127019882202
    2. ''):' → logprob: -1.5435127019882202
    3. '):
' → logprob: -4.04351282119751
    4. ')' → logprob: -4.79351282119751
    5. '')' → logprob: -4.79351282119751
    6. '):' → logprob: -5.04351282119751
    7. ''):
' → logprob: -9.293512344360352
    8. ''' → logprob: -10.418512344360352
    9. ',' → logprob: -10.918512344360352
    10. '',' → logprob: -11.543512344360352

Token 431: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005491298623383045
    2. 'return' → logprob: -5.380491256713867
    3. '
' → logprob: -7.630491256713867
    4. ' return' → logprob: -8.130491256713867
    5. '       ' → logprob: -10.255491256713867
    6. ':
' → logprob: -10.880491256713867
    7. '               ' → logprob: -11.255491256713867
    8. '	       ' → logprob: -12.255491256713867
    9. ':' → logprob: -12.505491256713867
    10. '            
' → logprob: -12.630491256713867

Token 432: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002444381359964609
    2. '           ' → logprob: -7.002444267272949
    3. ' return' → logprob: -7.252444267272949
    4. '       ' → logprob: -7.502444267272949
    5. '
' → logprob: -8.25244426727295
    6. '               ' → logprob: -11.62744426727295
    7. '   ' → logprob: -13.87744426727295
    8. '	return' → logprob: -15.37744426727295
    9. '            
' → logprob: -15.87744426727295
    10. ':return' → logprob: -16.127445220947266

Token 433: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.02975071594119072
    2. ' ns' → logprob: -3.5297508239746094
    3. '	ns' → logprob: -15.77975082397461
    4. '(ns' → logprob: -16.77975082397461
    5. '_ns' → logprob: -17.40475082397461
    6. 'n' → logprob: -17.40475082397461
    7. '       ' → logprob: -19.77975082397461
    8. '   ' → logprob: -19.77975082397461
    9. '/ns' → logprob: -20.15475082397461
    10. ' ' → logprob: -20.40475082397461

Token 434: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -2.5776860184123507e-06
    2. '_g' → logprob: -14.25000286102295
    3. '_GREEN' → logprob: -14.37500286102295
    4. '_' → logprob: -14.37500286102295
    5. 'green' → logprob: -14.50000286102295
    6. '_gr' → logprob: -16.250001907348633
    7. '_blue' → logprob: -17.250001907348633
    8. '_
' → logprob: -17.500001907348633
    9. '-green' → logprob: -18.250001907348633
    10. '_ground' → logprob: -18.500001907348633

Token 435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35602685809135437
    2. 'else' → logprob: -2.1060268878936768
    3. ' else' → logprob: -2.2310268878936768
    4. '
' → logprob: -3.3560268878936768
    5. '<|end|>' → logprob: -3.3560268878936768
    6. '<|end|>' → logprob: -8.606026649475098
    7. '        
' → logprob: -8.731026649475098
    8. '   ' → logprob: -9.731026649475098
    9. '	else' → logprob: -9.731026649475098
    10. '        ' → logprob: -10.731026649475098

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002116462419508025
    2. ' else' → logprob: -9.625211715698242
    3. '	' → logprob: -9.750211715698242
    4. 'else' → logprob: -9.875211715698242
    5. '<|end|>' → logprob: -11.750211715698242
    6. '   ' → logprob: -12.125211715698242
    7. 'elif' → logprob: -12.250211715698242
    8. ')' → logprob: -12.250211715698242
    9. '        
' → logprob: -13.125211715698242
    10. ' elif' → logprob: -13.125211715698242

Token 437: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4546152353286743
    2. ' else' → logprob: -1.4546152353286743
    3. 'return' → logprob: -2.7046151161193848
    4. '       ' → logprob: -2.8296151161193848
    5. ' return' → logprob: -5.204615116119385
    6. 'elif' → logprob: -7.954615116119385
    7. ' elif' → logprob: -10.704615592956543
    8. '   ' → logprob: -11.704615592956543
    9. 'if' → logprob: -11.954615592956543
    10. ' if' → logprob: -13.329615592956543

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6934693455696106
    2. ':
' → logprob: -0.6934693455696106
    3. ':return' → logprob: -8.693469047546387
    4. '       ' → logprob: -9.693469047546387
    5. ':
' → logprob: -10.318469047546387
    6. '           ' → logprob: -10.568469047546387
    7. ' :' → logprob: -11.318469047546387
    8. ' :
' → logprob: -11.318469047546387
    9. '   ' → logprob: -12.443469047546387
    10. ':

' → logprob: -13.193469047546387

Token 439: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1165272668004036
    2. '           ' → logprob: -2.8665273189544678
    3. 'return' → logprob: -3.1165273189544678
    4. ' return' → logprob: -4.741527080535889
    5. '               ' → logprob: -11.116527557373047
    6. ':return' → logprob: -11.116527557373047
    7. '   ' → logprob: -11.366527557373047
    8. '	return' → logprob: -12.491527557373047
    9. '        ' → logprob: -12.741527557373047
    10. ':' → logprob: -12.741527557373047

Token 440: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003585818223655224
    2. ' return' → logprob: -6.1285858154296875
    3. '       ' → logprob: -6.7535858154296875
    4. '           ' → logprob: -9.003585815429688
    5. 'not' → logprob: -9.378585815429688
    6. '   ' → logprob: -10.753585815429688
    7. '
' → logprob: -13.378585815429688
    8. ' not' → logprob: -13.503585815429688
    9. ' ' → logprob: -14.878585815429688
    10. '     ' → logprob: -15.628585815429688

Token 441: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0015171191189438105
    2. ' not' → logprob: -6.501517295837402
    3. '!' → logprob: -11.501517295837402
    4. '
' → logprob: -13.126517295837402
    5. '(not' → logprob: -14.126517295837402
    6. 'phase' → logprob: -14.251517295837402
    7. '   ' → logprob: -14.501517295837402
    8. '	not' → logprob: -14.876517295837402
    9. 'n' → logprob: -15.501517295837402
    10. '

' → logprob: -16.001516342163086

Token 442: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -3.8889261304575484e-06
    2. ' ns' → logprob: -12.500003814697266
    3. '(ns' → logprob: -15.750003814697266
    4. '_ns' → logprob: -19.500003814697266
    5. '	ns' → logprob: -19.625003814697266
    6. 'NS' → logprob: -20.875003814697266
    7. '/ns' → logprob: -21.625003814697266
    8. 'n' → logprob: -23.375003814697266
    9. '.ns' → logprob: -23.625003814697266
    10. 'phase' → logprob: -26.500003814697266

Token 443: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -7.016616291366518e-05
    2. 'green' → logprob: -9.750070571899414
    3. '_GREEN' → logprob: -12.250070571899414
    4. 'ns' → logprob: -12.875070571899414
    5. 'Green' → logprob: -13.125070571899414
    6. '_g' → logprob: -14.375070571899414
    7. 'ew' → logprob: -14.500070571899414
    8. 's' → logprob: -14.750070571899414
    9. 'w' → logprob: -15.250070571899414
    10. 'g' → logprob: -15.750070571899414

Token 444: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: ' Represents' (ID: 84592)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25465354323387146
    2. 'def' → logprob: -1.8796535730361938
    3. '#' → logprob: -2.6296534538269043
    4. 'from' → logprob: -10.254653930664062
    5. 'D' → logprob: -11.004653930664062
    6. 'import' → logprob: -12.129653930664062
    7. 'dire' → logprob: -12.879653930664062
    8. 'Directions' → logprob: -13.129653930664062
    9. ' class' → logprob: -13.504653930664062
    10. 'MAX' → logprob: -14.254653930664062

Token 447: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20059138536453247
    2. ' a' → logprob: -2.4505913257598877
    3. 'the' → logprob: -3.2005913257598877
    4. 'an' → logprob: -3.7005913257598877
    5. ' an' → logprob: -3.8255913257598877
    6. ' the' → logprob: -4.825591564178467
    7. '#' → logprob: -9.700591087341309
    8. 'A' → logprob: -10.575591087341309
    9. 'edges' → logprob: -10.575591087341309
    10. 'D' → logprob: -10.825591087341309

Token 448: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.21887797117233276
    2. 'graph' → logprob: -1.8438780307769775
    3. 'Road' → logprob: -4.218877792358398
    4. 'Graph' → logprob: -5.343877792358398
    5. 'traffic' → logprob: -5.718877792358398
    6. 'direct' → logprob: -6.218877792358398
    7. 'grid' → logprob: -6.343877792358398
    8. 'segment' → logprob: -6.343877792358398
    9. 'node' → logprob: -6.593877792358398
    10. 'Map' → logprob: -7.343877792358398

Token 449: ' between' (ID: 2870)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00026777281891554594
    2. ' class' → logprob: -8.25026798248291
    3. '
' → logprob: -13.00026798248291
    4. ':' → logprob: -13.25026798248291
    5. 'line' → logprob: -14.12526798248291
    6. '<|end|>' → logprob: -14.37526798248291
    7. 's' → logprob: -15.00026798248291
    8. ',' → logprob: -16.000267028808594
    9. '"class' → logprob: -16.125267028808594
    10. '[class' → logprob: -16.125267028808594

Token 450: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.025053713470697403
    2. ' two' → logprob: -3.7750537395477295
    3. 'coordinates' → logprob: -7.02505350112915
    4. 'Coordinate' → logprob: -7.52505350112915
    5. 'Two' → logprob: -8.525053977966309
    6. 'Coordinates' → logprob: -8.775053977966309
    7. '<|end|>' → logprob: -12.150053977966309
    8. 'inter' → logprob: -12.775053977966309
    9. ' intersections' → logprob: -12.900053977966309
    10. '_two' → logprob: -13.275053977966309

Token 451: ' intersections' (ID: 143513)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.6438407301902771
    2. 'Coordinate' → logprob: -1.0188407897949219
    3. 'Coordinates' → logprob: -2.768840789794922
    4. ' coordinates' → logprob: -3.893840789794922
    5. 'points' → logprob: -4.393840789794922
    6. ' Coordinate' → logprob: -4.768840789794922
    7. ' Coordinates' → logprob: -5.393840789794922
    8. ' points' → logprob: -6.393840789794922
    9. ' intersections' → logprob: -6.393840789794922
    10. 'coords' → logprob: -7.768840789794922

Token 452: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.15310683415737e-05
    2. ' class' → logprob: -10.750021934509277
    3. '
' → logprob: -17.50002098083496
    4. '<class' → logprob: -17.75002098083496
    5. '<|end|>' → logprob: -18.37502098083496
    6. '"class' → logprob: -18.62502098083496
    7. '(class' → logprob: -19.37502098083496
    8. '-class' → logprob: -19.50002098083496
    9. ',class' → logprob: -19.50002098083496
    10. ''class' → logprob: -19.87502098083496

Token 453: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.2729995988775045e-06
    2. ' class' → logprob: -12.000006675720215
    3. '<class' → logprob: -18.5000057220459
    4. '"class' → logprob: -18.6250057220459
    5. ''class' → logprob: -20.7500057220459
    6. '-class' → logprob: -20.8750057220459
    7. '	class' → logprob: -21.7500057220459
    8. ',class' → logprob: -22.1250057220459
    9. 'clas' → logprob: -22.1250057220459
    10. '```' → logprob: -22.2500057220459

Token 454: ' Road' (ID: 12497)
  Prédit: 'Road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Road' → logprob: -0.0036822594702243805
    2. 'Coordinate' → logprob: -6.0036821365356445
    3. ' Road' → logprob: -7.0036821365356445
    4. 'Intersection' → logprob: -8.878682136535645
    5. 'Edge' → logprob: -9.128682136535645
    6. 'Traffic' → logprob: -10.253682136535645
    7. 'Connection' → logprob: -12.378682136535645
    8. 'Coord' → logprob: -12.753682136535645
    9. 'road' → logprob: -13.628682136535645
    10. 'Street' → logprob: -13.753682136535645

Token 455: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007624611258506775
    2. ':
' → logprob: -4.882624626159668
    3. '):' → logprob: -11.507624626159668
    4. '<|end|>' → logprob: -12.382624626159668
    5. ':

' → logprob: -13.382624626159668
    6. '>:' → logprob: -14.382624626159668
    7. ':def' → logprob: -14.632624626159668
    8. '(' → logprob: -14.632624626159668
    9. '):
' → logprob: -15.132624626159668
    10. '```' → logprob: -16.00762367248535

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009244420798495412
    2. 'def' → logprob: -7.250924587249756
    3. ' def' → logprob: -8.750924110412598
    4. ':' → logprob: -10.250924110412598
    5. 'class' → logprob: -11.750924110412598
    6. '  ' → logprob: -12.250924110412598
    7. ' ' → logprob: -12.375924110412598
    8. '):
' → logprob: -13.500924110412598
    9. ':
' → logprob: -13.875924110412598
    10. '    ' → logprob: -14.250924110412598

Token 457: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2320360541343689
    2. '   ' → logprob: -2.6070361137390137
    3. ':' → logprob: -2.8570361137390137
    4. 'class' → logprob: -3.3570361137390137
    5. ' def' → logprob: -3.9820361137390137
    6. ':
' → logprob: -3.9820361137390137
    7. '__' → logprob: -6.232036113739014
    8. ':def' → logprob: -7.107036113739014
    9. ' ' → logprob: -8.107035636901855
    10. 'from' → logprob: -8.607035636901855

Token 458: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0729190781712532
    2. ' __' → logprob: -3.5729191303253174
    3. 'init' → logprob: -3.5729191303253174
    4. 'object' → logprob: -4.322918891906738
    5. '_init' → logprob: -7.822918891906738
    6. '```' → logprob: -8.322918891906738
    7. '___' → logprob: -9.572918891906738
    8. 'def' → logprob: -9.947918891906738
    9. '_object' → logprob: -10.822918891906738
    10. '_' → logprob: -10.822918891906738

Token 459: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. '__' → logprob: -14.125000953674316
    3. ' init' → logprob: -15.125000953674316
    4. 'Init' → logprob: -16.375001907348633
    5. '```' → logprob: -16.750001907348633
    6. '_init' → logprob: -16.875001907348633
    7. 'class' → logprob: -17.125001907348633
    8. 'def' → logprob: -17.250001907348633
    9. 'int' → logprob: -18.000001907348633
    10. '(init' → logprob: -18.250001907348633

Token 460: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011170781217515469
    2. '(self' → logprob: -4.511170864105225
    3. '__' → logprob: -9.386170387268066
    4. '__(
' → logprob: -11.011170387268066
    5. '(' → logprob: -11.136170387268066
    6. ' (' → logprob: -12.261170387268066
    7. '__((' → logprob: -13.011170387268066
    8. 'self' → logprob: -14.261170387268066
    9. '_(' → logprob: -15.511170387268066
    10. ',' → logprob: -16.386171340942383

Token 461: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.259079363080673e-05
    2. ' self' → logprob: -11.375012397766113
    3. ',' → logprob: -14.625012397766113
    4. '(self' → logprob: -15.375012397766113
    5. 'Coordinate' → logprob: -15.875012397766113
    6. 'coord' → logprob: -16.62501335144043
    7. ',self' → logprob: -16.75001335144043
    8. '   ' → logprob: -17.75001335144043
    9. ')' → logprob: -18.37501335144043
    10. 'coordinates' → logprob: -18.50001335144043

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20172254741191864
    2. 'self' → logprob: -1.701722502708435
    3. '(self' → logprob: -8.326722145080566
    4. ',self' → logprob: -10.201722145080566
    5. ' ,' → logprob: -10.951722145080566
    6. ' self' → logprob: -11.951722145080566
    7. ' (' → logprob: -13.451722145080566
    8. ',start' → logprob: -13.451722145080566
    9. '_,' → logprob: -14.576722145080566
    10. '__,' → logprob: -14.701722145080566

Token 463: ' coord' (ID: 25819)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05596894025802612
    2. 'coord' → logprob: -3.180968999862671
    3. 'from' → logprob: -4.555968761444092
    4. 'src' → logprob: -7.555968761444092
    5. 'u' → logprob: -7.805968761444092
    6. 'source' → logprob: -7.930968761444092
    7. 'self' → logprob: -8.05596923828125
    8. ' start' → logprob: -8.68096923828125
    9. 'intersection' → logprob: -8.80596923828125
    10. 'origin' → logprob: -8.93096923828125

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06830096989870071
    2. '_from' → logprob: -2.81830096244812
    3. ',' → logprob: -5.818301200866699
    4. '_a' → logprob: -6.068301200866699
    5. 'A' → logprob: -7.318301200866699
    6. 'from' → logprob: -8.4433012008667
    7. ':' → logprob: -9.6933012008667
    8. 'From' → logprob: -10.8183012008667
    9. '_' → logprob: -11.1933012008667
    10. '_start' → logprob: -11.3183012008667

Token 465: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6457742175552994e-05
    2. ' ,' → logprob: -10.250056266784668
    3. ':' → logprob: -11.250056266784668
    4. '1' → logprob: -11.750056266784668
    5. 'A' → logprob: -16.875057220458984
    6. '‌,' → logprob: -17.625057220458984
    7. ':,' → logprob: -18.000057220458984
    8. ',
' → logprob: -18.250057220458984
    9. '_,' → logprob: -18.500057220458984
    10. '<|end|>' → logprob: -18.750057220458984

Token 466: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0015136697329580784
    2. ' Coordinate' → logprob: -6.501513481140137
    3. 'Coordinates' → logprob: -11.501513481140137
    4. 'Coord' → logprob: -14.001513481140137
    5. '_coordinate' → logprob: -15.501513481140137
    6. ')' → logprob: -17.001514434814453
    7. 'coordinate' → logprob: -17.251514434814453
    8. ' ' → logprob: -17.251514434814453
    9. '   ' → logprob: -17.751514434814453
    10. ' Coordinates' → logprob: -17.751514434814453

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',
' → logprob: -15.500015258789062
    4. '‌,' → logprob: -18.000015258789062
    5. ',

' → logprob: -18.625015258789062
    6. ',
' → logprob: -19.375015258789062
    7. '   ' → logprob: -19.500015258789062
    8. '_,' → logprob: -20.125015258789062
    9. '1' → logprob: -20.625015258789062
    10. ',c' → logprob: -21.000015258789062

Token 468: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.048592932522296906
    2. ' coord' → logprob: -3.048593044281006
    3. '   ' → logprob: -13.048592567443848
    4. '(coord' → logprob: -14.548592567443848
    5. ' ' → logprob: -14.673592567443848
    6. '    ' → logprob: -14.923592567443848
    7. 'coords' → logprob: -14.923592567443848
    8. 'coordinate' → logprob: -15.048592567443848
    9. 'co' → logprob: -15.048592567443848
    10. 'cord' → logprob: -15.423592567443848

Token 469: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ',' → logprob: -18.5
    3. '```' → logprob: -18.75
    4. ' ' → logprob: -19.125
    5. '۲' → logprob: -19.375
    6. '1' → logprob: -19.625
    7. '=' → logprob: -19.875
    8. '２' → logprob: -20.0
    9. '' → logprob: -20.125
    10. '₂' → logprob: -20.3125

Token 470: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028934145346283913
    2. ':' → logprob: -3.6539342403411865
    3. '):' → logprob: -6.028934001922607
    4. ' ,' → logprob: -9.028934478759766
    5. '):
' → logprob: -9.903934478759766
    6. ')' → logprob: -11.028934478759766
    7. '   ' → logprob: -11.153934478759766
    8. '=' → logprob: -12.028934478759766
    9. '<|end|>' → logprob: -12.778934478759766
    10. '),' → logprob: -13.778934478759766

Token 471: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.008617766201496124
    2. ' Coordinate' → logprob: -4.758617877960205
    3. 'Coord' → logprob: -13.258617401123047
    4. '_coordinate' → logprob: -14.633617401123047
    5. 'Coordinates' → logprob: -14.758617401123047
    6. 'coordinate' → logprob: -14.883617401123047
    7. ' coordinate' → logprob: -15.758617401123047
    8. 'Coordinator' → logprob: -17.008617401123047
    9. '   ' → logprob: -17.383617401123047
    10. ' ' → logprob: -17.758617401123047

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.624555291840807e-05
    2. '):' → logprob: -9.625076293945312
    3. ' ,' → logprob: -12.125076293945312
    4. '):
' → logprob: -12.375076293945312
    5. '   ' → logprob: -15.500076293945312
    6. ',
' → logprob: -16.375076293945312
    7. ')' → logprob: -16.375076293945312
    8. '       ' → logprob: -16.750076293945312
    9. '):
' → logprob: -16.875076293945312
    10. '),' → logprob: -17.750076293945312

Token 473: ' base' (ID: 3611)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.20481380820274353
    2. 'time' → logprob: -2.3298137187957764
    3. 'distance' → logprob: -3.3298137187957764
    4. 'travel' → logprob: -3.3298137187957764
    5. ' length' → logprob: -4.7048139572143555
    6. ' travel' → logprob: -6.0798139572143555
    7. 'cost' → logprob: -6.2048139572143555
    8. 'weight' → logprob: -6.8298139572143555
    9. ' time' → logprob: -7.3298139572143555
    10. 'duration' → logprob: -7.4548139572143555

Token 474: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.4052926003932953
    2. '_cost' → logprob: -1.1552926301956177
    3. '_tr' → logprob: -4.655292510986328
    4. '_' → logprob: -5.405292510986328
    5. '_delay' → logprob: -6.905292510986328
    6. '_weight' → logprob: -7.030292510986328
    7. '_distance' → logprob: -7.655292510986328
    8. '_speed' → logprob: -7.780292510986328
    9. '_length' → logprob: -8.155292510986328
    10. 'time' → logprob: -8.155292510986328

Token 475: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5285013914108276
    2. ':' → logprob: -0.9035013914108276
    3. '):
' → logprob: -6.403501510620117
    4. ',' → logprob: -6.528501510620117
    5. ':int' → logprob: -6.653501510620117
    6. '=' → logprob: -7.278501510620117
    7. ' ):' → logprob: -9.028501510620117
    8. ')' → logprob: -9.278501510620117
    9. '):
' → logprob: -11.028501510620117
    10. ' :' → logprob: -11.278501510620117

Token 476: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008123667794279754
    2. '1' → logprob: -7.375812530517578
    3. ' int' → logprob: -9.625812530517578
    4. '10' → logprob: -9.750812530517578
    5. 'float' → logprob: -10.500812530517578
    6. '0' → logprob: -10.875812530517578
    7. '[int' → logprob: -12.625812530517578
    8. ':int' → logprob: -12.750812530517578
    9. 'None' → logprob: -12.875812530517578
    10. '5' → logprob: -13.250812530517578

Token 477: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4339481294155121
    2. '):' → logprob: -1.0589481592178345
    3. ',' → logprob: -5.308948040008545
    4. '):
' → logprob: -8.308948516845703
    5. '   ' → logprob: -11.058948516845703
    6. '       ' → logprob: -11.433948516845703
    7. ')' → logprob: -12.433948516845703
    8. ':' → logprob: -12.933948516845703
    9. '):

' → logprob: -13.183948516845703
    10. '=' → logprob: -13.308948516845703

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007753237732686102
    2. 'self' → logprob: -7.625775337219238
    3. '   ' → logprob: -8.500775337219238
    4. ' self' → logprob: -9.625775337219238
    5. '):
' → logprob: -12.250775337219238
    6. ',' → logprob: -12.500775337219238
    7. '
' → logprob: -13.000775337219238
    8. ':' → logprob: -13.000775337219238
    9. '<|end|>' → logprob: -13.375775337219238
    10. ')' → logprob: -14.125775337219238

Token 479: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011784763046307489
    2. '       ' → logprob: -9.250118255615234
    3. ' self' → logprob: -10.750118255615234
    4. '	self' → logprob: -16.125118255615234
    5. '   ' → logprob: -16.750118255615234
    6. '(self' → logprob: -18.500118255615234
    7. 'if' → logprob: -18.750118255615234
    8. '#' → logprob: -19.000118255615234
    9. 'super' → logprob: -19.500118255615234
    10. 'def' → logprob: -19.625118255615234

Token 480: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -1.2471589798224159e-05
    2. '.' → logprob: -11.625012397766113
    3. '.coords' → logprob: -13.500012397766113
    4. 'coord' → logprob: -14.750012397766113
    5. '.base' → logprob: -15.250012397766113
    6. ' .' → logprob: -15.250012397766113
    7. '.coordinate' → logprob: -15.375012397766113
    8. '.co' → logprob: -15.375012397766113
    9. '.cost' → logprob: -15.500012397766113
    10. '.coe' → logprob: -15.625012397766113

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001242772996192798
    2. 's' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.375123977661133
    4. '=' → logprob: -15.625123977661133
    5. ' =' → logprob: -15.625123977661133
    6. '_' → logprob: -16.000123977661133
    7. '2' → logprob: -17.875123977661133
    8. '       ' → logprob: -18.125123977661133
    9. ' ' → logprob: -18.125123977661133
    10. '_pairs' → logprob: -18.125123977661133

Token 482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033849235624074936
    2. ' =' → logprob: -3.4088492393493652
    3. ',' → logprob: -8.533848762512207
    4. '=
' → logprob: -12.283848762512207
    5. '<|end|>' → logprob: -14.283848762512207
    6. ' =
' → logprob: -14.783848762512207
    7. ' ' → logprob: -15.283848762512207
    8. ',
' → logprob: -15.283848762512207
    9. '.' → logprob: -15.908848762512207
    10. ')' → logprob: -16.033849716186523

Token 483: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.0005533903022296727
    2. ' coord' → logprob: -7.500553607940674
    3. '(coord' → logprob: -15.750553131103516
    4. 'co' → logprob: -16.250553131103516
    5. 'cord' → logprob: -16.625553131103516
    6. 'coordinate' → logprob: -17.000553131103516
    7. 'cost' → logprob: -19.250553131103516
    8. '   ' → logprob: -19.500553131103516
    9. '.coord' → logprob: -19.625553131103516
    10. 'cod' → logprob: -19.750553131103516

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035751116229221225
    2. ',' → logprob: -8.750357627868652
    3. '
' → logprob: -9.125357627868652
    4. ',
' → logprob: -11.000357627868652
    5. '_' → logprob: -11.250357627868652
    6. '2' → logprob: -11.500357627868652
    7. '   ' → logprob: -11.750357627868652
    8. '.coord' → logprob: -11.750357627868652
    9. 'coord' → logprob: -12.125357627868652
    10. '       ' → logprob: -12.125357627868652

Token 485: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014920076355338097
    2. 'self' → logprob: -6.626492023468018
    3. ',' → logprob: -9.75149154663086
    4. '<|end|>' → logprob: -10.12649154663086
    5. '
' → logprob: -10.37649154663086
    6. '   ' → logprob: -10.62649154663086
    7. ' self' → logprob: -12.37649154663086
    8. '      ' → logprob: -13.50149154663086
    9. ' ' → logprob: -13.62649154663086
    10. '.' → logprob: -14.25149154663086

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4876474440097809
    2. 'self' → logprob: -0.9876474142074585
    3. ' self' → logprob: -4.362647533416748
    4. '
' → logprob: -8.36264705657959
    5. '   ' → logprob: -8.73764705657959
    6. ',' → logprob: -8.98764705657959
    7. '<|end|>' → logprob: -9.86264705657959
    8. ' ' → logprob: -10.11264705657959
    9. '	self' → logprob: -10.36264705657959
    10. ',
' → logprob: -11.11264705657959

Token 487: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0035273751709610224
    2. '       ' → logprob: -6.1285271644592285
    3. ' self' → logprob: -6.6285271644592285
    4. 'coord' → logprob: -11.003527641296387
    5. '   ' → logprob: -13.628527641296387
    6. '	self' → logprob: -14.378527641296387
    7. ' coord' → logprob: -15.753527641296387
    8. ' ' → logprob: -15.753527641296387
    9. '      ' → logprob: -16.25352668762207
    10. '        ' → logprob: -16.62852668762207

Token 488: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -0.0011921331752091646
    2. '.' → logprob: -6.876192092895508
    3. 'coord' → logprob: -9.001192092895508
    4. '._' → logprob: -11.126192092895508
    5. '_coord' → logprob: -11.876192092895508
    6. '_.' → logprob: -13.001192092895508
    7. '.cost' → logprob: -13.001192092895508
    8. ' .' → logprob: -13.126192092895508
    9. '.
' → logprob: -13.626192092895508
    10. '.cod' → logprob: -14.001192092895508

Token 489: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -15.000000953674316
    3. '```' → logprob: -15.625000953674316
    4. '_' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '
' → logprob: -16.125001907348633
    7. ' ' → logprob: -17.062501907348633
    8. 's' → logprob: -17.562501907348633
    9. 'coord' → logprob: -17.812501907348633
    10. '.' → logprob: -18.375001907348633

Token 490: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143157243728638
    2. ' =' → logprob: -1.7014315128326416
    3. '<|end|>' → logprob: -11.076431274414062
    4. ',' → logprob: -13.701431274414062
    5. '=
' → logprob: -14.826431274414062
    6. ' ' → logprob: -14.826431274414062
    7. ')' → logprob: -15.076431274414062
    8. '   ' → logprob: -15.576431274414062
    9. '.' → logprob: -16.576431274414062
    10. ' =
' → logprob: -16.576431274414062

Token 491: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.04859248176217079
    2. ' coord' → logprob: -3.0485925674438477
    3. 'cord' → logprob: -12.923592567443848
    4. '(coord' → logprob: -14.048592567443848
    5. 'co' → logprob: -14.298592567443848
    6. 'coordinate' → logprob: -15.048592567443848
    7. 'coords' → logprob: -15.173592567443848
    8. 'cost' → logprob: -15.423592567443848
    9. '   ' → logprob: -15.923592567443848
    10. ' ' → logprob: -16.42359161376953

Token 492: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'coord' → logprob: -15.75
    3. ' ' → logprob: -17.625
    4. '```' → logprob: -17.875
    5. '_coord' → logprob: -18.625
    6. '   ' → logprob: -18.875
    7. '۲' → logprob: -19.125
    8. 'cord' → logprob: -19.5
    9. '(coord' → logprob: -19.625
    10. ' coord' → logprob: -20.0625

Token 493: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022010602697264403
    2. 'self' → logprob: -8.50022029876709
    3. ' self' → logprob: -12.00022029876709
    4. '
' → logprob: -12.50022029876709
    5. '   ' → logprob: -12.62522029876709
    6. ',' → logprob: -13.12522029876709
    7. '<|end|>' → logprob: -14.87522029876709
    8. ' ' → logprob: -15.12522029876709
    9. '      ' → logprob: -15.75022029876709
    10. '	' → logprob: -15.75022029876709

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010715120006352663
    2. 'self' → logprob: -6.876071453094482
    3. ' self' → logprob: -10.25107192993164
    4. '   ' → logprob: -13.00107192993164
    5. ',' → logprob: -14.87607192993164
    6. '	' → logprob: -15.87607192993164
    7. '
' → logprob: -16.12607192993164
    8. '	self' → logprob: -16.12607192993164
    9. ' ' → logprob: -16.25107192993164
    10. '           ' → logprob: -16.37607192993164

Token 495: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0024107310455292463
    2. 'base' → logprob: -6.502410888671875
    3. ' self' → logprob: -7.127410888671875
    4. '       ' → logprob: -9.252410888671875
    5. ' base' → logprob: -12.127410888671875
    6. '   ' → logprob: -13.002410888671875
    7. '	self' → logprob: -14.752410888671875
    8. 'Base' → logprob: -15.752410888671875
    9. '
' → logprob: -15.814910888671875
    10. ' ' → logprob: -16.127410888671875

Token 496: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.00046630011638626456
    2. '.' → logprob: -8.000466346740723
    3. 'base' → logprob: -9.625466346740723
    4. '.time' → logprob: -10.125466346740723
    5. '_base' → logprob: -11.250466346740723
    6. ' .' → logprob: -12.250466346740723
    7. ' base' → logprob: -13.500466346740723
    8. '.bas' → logprob: -14.500466346740723
    9. '.user' → logprob: -14.625466346740723
    10. 'Base' → logprob: -14.625466346740723

Token 497: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '_t' → logprob: -16.875
    4. '_tim' → logprob: -18.625
    5. '_times' → logprob: -19.0
    6. 'time' → logprob: -19.125
    7. '_timer' → logprob: -20.5
    8. '_code' → logprob: -20.5
    9. ' _' → logprob: -20.875
    10. '_cost' → logprob: -21.25

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. ' ' → logprob: -15.724077224731445
    4. '   ' → logprob: -17.599077224731445
    5. '=int' → logprob: -18.099077224731445
    6. '<|end|>' → logprob: -18.599077224731445
    7. ')' → logprob: -18.974077224731445
    8. '=self' → logprob: -19.099077224731445
    9. ' ' → logprob: -19.099077224731445
    10. ',' → logprob: -19.099077224731445

Token 499: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0031777136027812958
    2. ' base' → logprob: -5.753177642822266
    3. '(base' → logprob: -17.503177642822266
    4. 'int' → logprob: -18.003177642822266
    5. '   ' → logprob: -18.628177642822266
    6. '	base' → logprob: -18.628177642822266
    7. ' ' → logprob: -18.878177642822266
    8. '_base' → logprob: -19.628177642822266
    9. '
' → logprob: -20.003177642822266
    10. 'bas' → logprob: -20.253177642822266

Token 500: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.7697225252486533e-06
    2. 'time' → logprob: -12.625003814697266
    3. '_t' → logprob: -15.500003814697266
    4. ' _' → logprob: -16.000003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '_' → logprob: -17.500003814697266
    7. '_TIME' → logprob: -18.125003814697266
    8. 'Time' → logprob: -18.500003814697266
    9. 't' → logprob: -19.250003814697266
    10. ' time' → logprob: -19.625003814697266

Token 501: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5686423778533936
    2. '   ' → logprob: -1.0686423778533936
    3. '<|end|>' → logprob: -2.4436423778533936
    4. '<|end|>' → logprob: -6.443642616271973
    5. '    
' → logprob: -7.193642616271973
    6. '       ' → logprob: -7.818642616271973
    7. '

' → logprob: -8.943642616271973
    8. ' ' → logprob: -9.193642616271973
    9. '
' → logprob: -9.443642616271973
    10. ')' → logprob: -9.443642616271973

Token 502: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4771883189678192
    2. '
' → logprob: -1.2271883487701416
    3. '<|end|>' → logprob: -2.4771883487701416
    4. '<|end|>' → logprob: -6.6021881103515625
    5. '    
' → logprob: -7.2271881103515625
    6. '       ' → logprob: -9.352188110351562
    7. ')' → logprob: -9.727188110351562
    8. '
' → logprob: -10.227188110351562
    9. '  
' → logprob: -10.977188110351562
    10. '        
' → logprob: -11.102188110351562

Token 503: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8843268156051636
    2. '
' → logprob: -1.1343268156051636
    3. 'def' → logprob: -1.8843268156051636
    4. '       ' → logprob: -2.634326934814453
    5. '<|end|>' → logprob: -3.384326934814453
    6. 'self' (adapté à ' self') → logprob: -5.759326934814453
    7. ' def' → logprob: -6.134326934814453
    8. '

' → logprob: -7.259326934814453
    9. '<|end|>' → logprob: -7.634326934814453
    10. '
' → logprob: -8.259326934814453

Token 504: '.con' (ID: 5162)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -0.17918084561824799
    2. '_time' → logprob: -3.179180860519409
    3. '.is' → logprob: -4.05418062210083
    4. '.' → logprob: -4.05418062210083
    5. '.time' → logprob: -4.30418062210083
    6. '_length' → logprob: -4.92918062210083
    7. '.length' → logprob: -5.17918062210083
    8. '_cost' → logprob: -5.17918062210083
    9. '.capacity' → logprob: -5.55418062210083
    10. ' .' → logprob: -5.80418062210083

Token 505: 'gest' (ID: 6488)
  Prédit: 'gestion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gestion' → logprob: -0.02576962299644947
    2. 'current' → logprob: -4.6507697105407715
    3. 'nect' → logprob: -4.7757697105407715
    4. 'currency' → logprob: -6.1507697105407715
    5. 'gest' → logprob: -6.5257697105407715
    6. 't' → logprob: -7.0257697105407715
    7. 'nections' → logprob: -7.2757697105407715
    8. 'd' → logprob: -7.4007697105407715
    9. 'n' → logprob: -7.5257697105407715
    10. 'nection' → logprob: -7.9007697105407715

Token 506: 'ed' (ID: 295)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.006542827934026718
    2. 'ed' → logprob: -5.131542682647705
    3. 'tion' → logprob: -7.506542682647705
    4. '   ' → logprob: -10.756543159484863
    5. '_' → logprob: -10.881543159484863
    6. 'ation' → logprob: -12.256543159484863
    7. '```' → logprob: -12.881543159484863
    8. ' ion' → logprob: -13.006543159484863
    9. '__' → logprob: -13.131543159484863
    10. '_time' → logprob: -13.506543159484863

Token 507: '_delay' (ID: 56589)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6198440194129944
    2. ' =' → logprob: -0.8698440194129944
    3. '_time' → logprob: -3.2448439598083496
    4. '_' → logprob: -5.74484395980835
    5. '_times' → logprob: -8.119844436645508
    6. '_cost' → logprob: -9.244844436645508
    7. '=True' → logprob: -9.744844436645508
    8. '_level' → logprob: -9.869844436645508
    9. '_delay' → logprob: -10.369844436645508
    10. '_wait' → logprob: -10.494844436645508

Token 508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931691765785217
    2. ' =' → logprob: -0.6931691765785217
    3. ' ' → logprob: -11.693169593811035
    4. '<|end|>' → logprob: -12.193169593811035
    5. '   ' → logprob: -12.818169593811035
    6. '=None' → logprob: -13.318169593811035
    7. ':' → logprob: -13.443169593811035
    8. 's' → logprob: -14.193169593811035
    9. ',' → logprob: -14.693169593811035
    10. '=int' → logprob: -15.068169593811035

Token 509: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006919968873262405
    2. ' ' → logprob: -6.006919860839844
    3. '5' → logprob: -6.506919860839844
    4. '10' → logprob: -6.631919860839844
    5. 'base' → logprob: -7.131919860839844
    6. '1' → logprob: -7.631919860839844
    7. 'int' → logprob: -9.506919860839844
    8. 'None' → logprob: -9.631919860839844
    9. ' base' → logprob: -9.881919860839844
    10. '3' → logprob: -10.256919860839844

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0440014973282814
    2. '5' → logprob: -3.419001579284668
    3. '10' → logprob: -5.544001579284668
    4. '1' → logprob: -6.419001579284668
    5. 'base' → logprob: -6.419001579284668
    6. 'int' → logprob: -6.794001579284668
    7. 'None' → logprob: -6.794001579284668
    8. '3' → logprob: -8.044001579284668
    9. '2' → logprob: -8.294001579284668
    10. 'float' → logprob: -9.919001579284668

Token 511: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20024007558822632
    2. '<|end|>' → logprob: -2.075240135192871
    3. '   ' → logprob: -2.950240135192871
    4. '<|end|>' → logprob: -6.200240135192871
    5. '    
' → logprob: -6.950240135192871
    6. '

' → logprob: -8.075240135192871
    7. '
' → logprob: -8.825240135192871
    8. '  
' → logprob: -10.325240135192871
    9. ' ' → logprob: -10.325240135192871
    10. ' 
' → logprob: -10.575240135192871

Token 512: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41439390182495117
    2. '
' → logprob: -1.1643939018249512
    3. '<|end|>' → logprob: -3.664393901824951
    4. '    
' → logprob: -6.914393901824951
    5. '<|end|>' → logprob: -8.16439437866211
    6. 'def' → logprob: -9.03939437866211
    7. '

' → logprob: -10.16439437866211
    8. ' 
' → logprob: -11.03939437866211
    9. '  
' → logprob: -11.03939437866211
    10. '        
' → logprob: -11.16439437866211

Token 513: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14041398465633392
    2. '<|end|>' → logprob: -3.015413999557495
    3. 'def' → logprob: -3.265413999557495
    4. '   ' → logprob: -3.390413999557495
    5. '       ' → logprob: -5.140413761138916
    6. '

' → logprob: -6.140413761138916
    7. '    
' → logprob: -7.390413761138916
    8. 'self' (adapté à ' self') → logprob: -7.890413761138916
    9. '<|end|>' → logprob: -8.015414237976074
    10. '        
' → logprob: -8.390414237976074

Token 514: '.closed' (ID: 174028)
  Prédit: '.con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.con' → logprob: -0.6643582582473755
    2. '.' → logprob: -1.4143582582473755
    3. '.is' → logprob: -1.7893582582473755
    4. ' .' → logprob: -4.664358139038086
    5. 'def' → logprob: -4.914358139038086
    6. '.has' → logprob: -4.914358139038086
    7. '._' → logprob: -5.164358139038086
    8. '.def' → logprob: -5.414358139038086
    9. '.can' → logprob: -5.539358139038086
    10. '.max' → logprob: -5.664358139038086

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744860827922821
    2. '=' → logprob: -0.9744861125946045
    3. '=False' → logprob: -7.849485874176025
    4. '=True' → logprob: -11.599486351013184
    5. ' ' → logprob: -12.099486351013184
    6. '<|end|>' → logprob: -13.974486351013184
    7. '  ' → logprob: -14.099486351013184
    8. 'False' → logprob: -14.724486351013184
    9. '_' → logprob: -14.849486351013184
    10. ',' → logprob: -14.974486351013184

Token 516: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.836499985889532e-05
    2. ' False' → logprob: -9.7500581741333
    3. 'True' → logprob: -18.250059127807617
    4. '(False' → logprob: -21.500059127807617
    5. '=False' → logprob: -23.125059127807617
    6. '   ' → logprob: -23.375059127807617
    7. 'F' → logprob: -23.625059127807617
    8. 'false' → logprob: -23.625059127807617
    9. 'None' → logprob: -24.125059127807617
    10. '0' → logprob: -24.750059127807617

Token 517: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3940763473510742
    2. '<|end|>' → logprob: -1.5190763473510742
    3. '   ' → logprob: -2.269076347351074
    4. '<|end|>' → logprob: -6.394076347351074
    5. '    
' → logprob: -6.519076347351074
    6. '

' → logprob: -9.769076347351074
    7. '  
' → logprob: -9.894076347351074
    8. 'def' → logprob: -10.394076347351074
    9. ' 
' → logprob: -10.769076347351074
    10. '
' → logprob: -11.019076347351074

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3421577215194702
    2. '
' → logprob: -1.8421577215194702
    3. '<|end|>' → logprob: -2.0921578407287598
    4. '<|end|>' → logprob: -5.59215784072876
    5. '    
' → logprob: -5.71715784072876
    6. ' ' → logprob: -8.967157363891602
    7. '

' → logprob: -9.092157363891602
    8. 'def' → logprob: -9.092157363891602
    9. ' 
' → logprob: -9.217157363891602
    10. '#' → logprob: -9.717157363891602

Token 519: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' travel' (ID: 6410)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.24490955471992493
    2. ' travel' → logprob: -2.7449095249176025
    3. 'tr' → logprob: -2.8699095249176025
    4. '_tr' → logprob: -3.4949095249176025
    5. 'is' → logprob: -3.6199095249176025
    6. 'time' → logprob: -3.7449095249176025
    7. 'get' → logprob: -4.994909763336182
    8. 'trav' → logprob: -6.119909763336182
    9. '_time' → logprob: -6.369909763336182
    10. ' get' → logprob: -6.744909763336182

Token 521: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0009170551202259958
    2. '_' → logprob: -7.000916957855225
    3. '_t' → logprob: -13.000917434692383
    4. '(_' → logprob: -13.875917434692383
    5. ' _' → logprob: -14.625917434692383
    6. '(self' → logprob: -14.750917434692383
    7. '_cost' → logprob: -15.250917434692383
    8. '(' → logprob: -15.375917434692383
    9. 'time' → logprob: -15.500917434692383
    10. '_times' → logprob: -15.875917434692383

Token 522: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0022456541191786528
    2. '(' → logprob: -6.1272454261779785
    3. ' (' → logprob: -9.752245903015137
    4. '()' → logprob: -13.502245903015137
    5. 'self' → logprob: -14.752245903015137
    6. '(
' → logprob: -15.002245903015137
    7. '(s' → logprob: -15.752245903015137
    8. '():' → logprob: -16.75224494934082
    9. '   ' → logprob: -16.87724494934082
    10. ' self' → logprob: -17.87724494934082

Token 523: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6409577131271362
    2. '(self' → logprob: -1.0159577131271362
    3. '):
' → logprob: -2.265957832336426
    4. 'self' → logprob: -5.515957832336426
    5. '():' → logprob: -6.390957832336426
    6. ',' → logprob: -7.265957832336426
    7. '():
' → logprob: -8.390957832336426
    8. '(' → logprob: -8.390957832336426
    9. ')' → logprob: -8.515957832336426
    10. '()' → logprob: -8.890957832336426

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004222405143082142
    2. 'return' → logprob: -6.754222393035889
    3. '(self' → logprob: -7.004222393035889
    4. '   ' → logprob: -7.254222393035889
    5. ':' → logprob: -7.379222393035889
    6. 'self' → logprob: -8.879222869873047
    7. '()' → logprob: -9.129222869873047
    8. '(' → logprob: -9.129222869873047
    9. ':
' → logprob: -9.379222869873047
    10. ' return' → logprob: -9.504222869873047

Token 525: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37159594893455505
    2. ' return' → logprob: -1.3715959787368774
    3. '       ' → logprob: -2.871595859527588
    4. ' if' → logprob: -9.996596336364746
    5. 'if' (adapté à ' if') → logprob: -11.746596336364746
    6. '	return' → logprob: -14.121596336364746
    7. '        
' → logprob: -14.371596336364746
    8. '   ' → logprob: -14.496596336364746
    9. 'base' → logprob: -14.746596336364746
    10. '
' → logprob: -15.246596336364746

Token 526: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02054515667259693
    2. ' self' → logprob: -3.895545244216919
    3. '   ' → logprob: -13.77054500579834
    4. '       ' → logprob: -14.14554500579834
    5. '	self' → logprob: -14.77054500579834
    6. 'not' → logprob: -15.14554500579834
    7. '(self' → logprob: -15.14554500579834
    8. '    ' → logprob: -15.89554500579834
    9. ' not' → logprob: -16.020545959472656
    10. '           ' → logprob: -17.145545959472656

Token 527: '.closed' (ID: 174028)
  Prédit: '.closed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.closed' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.50000286102295
    3. '.cl' → logprob: -13.75000286102295
    4. ' .' → logprob: -14.75000286102295
    5. 'closed' → logprob: -15.62500286102295
    6. '.base' → logprob: -16.125003814697266
    7. '.open' → logprob: -17.375003814697266
    8. '.is' → logprob: -17.625003814697266
    9. '.con' → logprob: -17.625003814697266
    10. '.close' → logprob: -17.875003814697266

Token 528: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06457830220460892
    2. ':
' → logprob: -2.8145782947540283
    3. ':return' → logprob: -6.064578533172607
    4. ' or' → logprob: -8.31457805633545
    5. 'return' → logprob: -10.81457805633545
    6. 'or' → logprob: -12.31457805633545
    7. ' :' → logprob: -12.31457805633545
    8. ':
' → logprob: -13.06457805633545
    9. '   ' → logprob: -13.31457805633545
    10. ' return' → logprob: -13.81457805633545

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16053412854671478
    2. ':
' → logprob: -2.660534143447876
    3. ':' → logprob: -3.535534143447876
    4. ' return' → logprob: -4.160533905029297
    5. 'return' → logprob: -4.160533905029297
    6. '       ' → logprob: -4.285533905029297
    7. ':return' → logprob: -5.785533905029297
    8. '   ' → logprob: -7.160533905029297
    9. ' or' → logprob: -8.535533905029297
    10. ',' → logprob: -9.910533905029297

Token 530: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.020027900114655495
    2. 'float' → logprob: -4.020028114318848
    3. '           ' → logprob: -7.020028114318848
    4. ' return' → logprob: -7.520028114318848
    5. 'sys' → logprob: -8.145028114318848
    6. 'raise' → logprob: -8.895028114318848
    7. '       ' → logprob: -12.270028114318848
    8. ' float' → logprob: -12.645028114318848
    9. '   ' → logprob: -13.145028114318848
    10. '               ' → logprob: -13.770028114318848

Token 531: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0001093841710826382
    2. 'sys' → logprob: -9.250109672546387
    3. 'None' → logprob: -11.250109672546387
    4. ' float' → logprob: -15.750109672546387
    5. 'math' → logprob: -16.50010871887207
    6. 'int' → logprob: -19.75010871887207
    7. '   ' → logprob: -20.25010871887207
    8. '10' → logprob: -20.75010871887207
    9. ' None' → logprob: -21.00010871887207
    10. '(float' → logprob: -21.87510871887207

Token 532: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47440797090530396
    2. '
' → logprob: -0.974407970905304
    3. '        
' → logprob: -9.224408149719238
    4. '
' → logprob: -9.849408149719238
    5. '  
' → logprob: -9.974408149719238
    6. ' 
' → logprob: -10.349408149719238
    7. 'return' → logprob: -10.849408149719238
    8. '   ' → logprob: -10.849408149719238
    9. 'self' → logprob: -11.474408149719238
    10. '    
' → logprob: -11.599408149719238

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032793101854622364
    2. '
' → logprob: -5.753279209136963
    3. 'return' → logprob: -10.003279685974121
    4. '        
' → logprob: -10.753279685974121
    5. '   ' → logprob: -11.378279685974121
    6. ' return' → logprob: -11.503279685974121
    7. '    
' → logprob: -12.753279685974121
    8. ' 
' → logprob: -13.128279685974121
    9. '  
' → logprob: -13.128279685974121
    10. '           ' → logprob: -13.253279685974121

Token 534: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4854181110858917
    2. '       ' → logprob: -0.9854180812835693
    3. ' return' → logprob: -4.485418319702148
    4. '   ' → logprob: -12.485418319702148
    5. '	return' → logprob: -14.235418319702148
    6. '           ' → logprob: -15.360418319702148
    7. '      ' → logprob: -16.73541831970215
    8. ' ' → logprob: -17.11041831970215
    9. '{return' → logprob: -17.36041831970215
    10. '
' → logprob: -17.73541831970215

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.251502990722656
    4. ' ' → logprob: -19.501502990722656
    5. '       ' → logprob: -19.751502990722656
    6. '(self' → logprob: -20.251502990722656
    7. ' ' → logprob: -20.251502990722656
    8. '	self' → logprob: -20.751502990722656
    9. '  ' → logprob: -21.501502990722656
    10. '[self' → logprob: -21.626502990722656

Token 536: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -3.953082341467962e-05
    2. '.' → logprob: -10.375039100646973
    3. ' .' → logprob: -12.500039100646973
    4. 'base' → logprob: -12.750039100646973
    5. '.con' → logprob: -13.500039100646973
    6. '_.' → logprob: -16.87504005432129
    7. '_base' → logprob: -17.62504005432129
    8. '.bas' → logprob: -17.62504005432129
    9. '`.' → logprob: -17.87504005432129
    10. '._' → logprob: -17.87504005432129

Token 537: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. ' _' → logprob: -19.625
    4. '_times' → logprob: -20.0
    5. '_t' → logprob: -20.875
    6. 'time' → logprob: -21.625
    7. '_tim' → logprob: -22.5
    8. '_code' → logprob: -22.625
    9. '_TIME' → logprob: -22.875
    10. '._' → logprob: -23.5

Token 538: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47415411472320557
    2. '+' → logprob: -0.9741541147232056
    3. '+self' → logprob: -9.474154472351074
    4. ' ' → logprob: -15.724154472351074
    5. ' plus' → logprob: -16.724153518676758
    6. '()+' → logprob: -17.849153518676758
    7. '+
' → logprob: -18.599153518676758
    8. ' ' → logprob: -18.849153518676758
    9. '   ' → logprob: -19.099153518676758
    10. '＋' → logprob: -19.224153518676758

Token 539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023071514442563057
    2. ' self' → logprob: -8.37523078918457
    3. '(self' → logprob: -17.25023078918457
    4. '
' → logprob: -17.87523078918457
    5. 'int' → logprob: -18.12523078918457
    6. '[self' → logprob: -18.25023078918457
    7. '       ' → logprob: -19.12523078918457
    8. 's' → logprob: -19.25023078918457
    9. '0' → logprob: -19.37523078918457
    10. 'max' → logprob: -19.75023078918457

Token 540: '.con' (ID: 5162)
  Prédit: '.con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.con' → logprob: -2.045823566731997e-05
    2. ' .' → logprob: -11.500020027160645
    3. '.' → logprob: -12.125020027160645
    4. 'con' → logprob: -13.250020027160645
    5. '_.' → logprob: -13.875020027160645
    6. '	con' → logprob: -14.125020027160645
    7. '(con' → logprob: -15.125020027160645
    8. '`.' → logprob: -15.250020027160645
    9. '_con' → logprob: -15.625020027160645
    10. ' congest' → logprob: -15.625020027160645

Token 541: 'gest' (ID: 6488)
  Prédit: 'gest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gest' → logprob: -1.5213274309644476e-05
    2. 'g' → logprob: -11.375015258789062
    3. ' congest' → logprob: -13.250015258789062
    4. 'gestion' → logprob: -14.375015258789062
    5. 'ges' → logprob: -14.875015258789062
    6. 'gr' → logprob: -15.250015258789062
    7. 'ged' → logprob: -16.125015258789062
    8. 'gu' → logprob: -16.250015258789062
    9. 'gust' → logprob: -16.375015258789062
    10. 'gestas' → logprob: -16.375015258789062

Token 542: 'ed' (ID: 295)
  Prédit: 'ested'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ested' → logprob: -0.004280092194676399
    2. 'ed' → logprob: -6.129280090332031
    3. 'est' → logprob: -6.254280090332031
    4. 'es' → logprob: -9.754280090332031
    5. 'estion' → logprob: -9.754280090332031
    6. 'usted' → logprob: -11.504280090332031
    7. 'sted' → logprob: -11.629280090332031
    8. 'ated' → logprob: -12.129280090332031
    9. '   ' → logprob: -12.129280090332031
    10. '
' → logprob: -12.754280090332031

Token 543: '_delay' (ID: 56589)
  Prédit: '_delay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_delay' → logprob: -0.0042500621639192104
    2. 'ed' → logprob: -5.6292500495910645
    3. '_' → logprob: -7.6292500495910645
    4. '_del' → logprob: -9.879250526428223
    5. '_d' → logprob: -10.379250526428223
    6. 'e' → logprob: -10.504250526428223
    7. '_time' → logprob: -10.754250526428223
    8. ' _' → logprob: -10.754250526428223
    9. '_skip' → logprob: -13.754250526428223
    10. '_loss' → logprob: -14.379250526428223

Token 544: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4446788728237152
    2. '   ' → logprob: -1.1946789026260376
    3. '<|end|>' → logprob: -3.319678783416748
    4. '    
' → logprob: -4.069678783416748
    5. '<|end|>' → logprob: -6.819678783416748
    6. '  
' → logprob: -7.319678783416748
    7. ' 
' → logprob: -8.194679260253906
    8. 'class' → logprob: -8.569679260253906
    9. 'def' → logprob: -8.569679260253906
    10. '        
' → logprob: -9.069679260253906

Token 545: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008274834603071213
    2. '   ' → logprob: -5.258275032043457
    3. '<|end|>' → logprob: -6.258275032043457
    4. '

' → logprob: -7.383275032043457
    5. '<|end|>' → logprob: -8.633275032043457
    6. '    
' → logprob: -8.633275032043457
    7. 'class' → logprob: -9.883275032043457
    8. ' ' → logprob: -11.008275032043457
    9. '#' → logprob: -11.133275032043457
    10. '  
' → logprob: -11.133275032043457

Token 546: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3930072486400604
    2. '   ' → logprob: -1.1430072784423828
    3. '#' → logprob: -5.518007278442383
    4. 'class' → logprob: -6.268007278442383
    5. ' def' → logprob: -9.393007278442383
    6. '    
' → logprob: -9.518007278442383
    7. '
' → logprob: -10.393007278442383
    8. '	def' → logprob: -11.893007278442383
    9. ' ' → logprob: -13.018007278442383
    10. '  
' → logprob: -13.143007278442383

Token 547: ' connects' (ID: 47599)
  Prédit: ' close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' close' → logprob: -0.5484445691108704
    2. ' set' → logprob: -1.1734445095062256
    3. 'close' → logprob: -2.6734445095062256
    4. 'set' → logprob: -3.9234445095062256
    5. ' update' → logprob: -4.673444747924805
    6. ' is' → logprob: -5.423444747924805
    7. ' add' → logprob: -6.048444747924805
    8. 'is' → logprob: -6.173444747924805
    9. 'update' → logprob: -6.298444747924805
    10. ' reset' → logprob: -6.548444747924805

Token 548: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008041490218602121
    2. '(' → logprob: -7.6258039474487305
    3. '_to' → logprob: -8.25080394744873
    4. '_coord' → logprob: -11.00080394744873
    5. 'to' → logprob: -11.62580394744873
    6. '_coordinate' → logprob: -12.00080394744873
    7. 'self' → logprob: -12.12580394744873
    8. '_with' → logprob: -12.37580394744873
    9. '_coords' → logprob: -12.87580394744873
    10. ' (' → logprob: -13.00080394744873

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003981161862611771
    2. 'self' → logprob: -5.628981113433838
    3. ',self' → logprob: -8.128981590270996
    4. 'coord' → logprob: -10.503981590270996
    5. ' ,' → logprob: -10.753981590270996
    6. 'to' → logprob: -11.628981590270996
    7. 'coordinate' → logprob: -11.628981590270996
    8. '(self' → logprob: -12.378981590270996
    9. '_coord' → logprob: -12.503981590270996
    10. ')(' → logprob: -12.753981590270996

Token 550: ' c' (ID: 274)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.17088443040847778
    2. ' coord' → logprob: -2.420884370803833
    3. 'self' → logprob: -2.795884370803833
    4. ' self' → logprob: -5.795884609222412
    5. 'coordinate' → logprob: -5.795884609222412
    6. ' coordinate' → logprob: -7.795884609222412
    7. 'node' → logprob: -8.295884132385254
    8. 'other' → logprob: -8.670884132385254
    9. 'c' → logprob: -9.795884132385254
    10. ' node' → logprob: -10.295884132385254

Token 551: '1' (ID: 16)
  Prédit: 'oord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oord' → logprob: -0.037203382700681686
    2. 'o' → logprob: -3.412203311920166
    3. '1' → logprob: -5.662203311920166
    4. 'ord' → logprob: -10.162203788757324
    5. 'oor' → logprob: -10.912203788757324
    6. '(self' → logprob: -11.537203788757324
    7. ',' → logprob: -13.537203788757324
    8. 'oop' → logprob: -13.662203788757324
    9. 'om' → logprob: -13.912203788757324
    10. 'on' → logprob: -13.912203788757324

Token 552: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007680560229346156
    2. ',c' → logprob: -7.750768184661865
    3. ' ,' → logprob: -8.000767707824707
    4. ',self' → logprob: -14.125767707824707
    5. ',
' → logprob: -14.875767707824707
    6. '1' → logprob: -15.750767707824707
    7. ',current' → logprob: -16.375768661499023
    8. ':' → logprob: -16.500768661499023
    9. 'self' → logprob: -16.750768661499023
    10. ',a' → logprob: -16.750768661499023

Token 553: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0011252141557633877
    2. ' Coordinate' → logprob: -6.876125335693359
    3. 'Coordinates' → logprob: -9.50112533569336
    4. '_coordinate' → logprob: -11.50112533569336
    5. 'Coord' → logprob: -12.87612533569336
    6. 'coordinate' → logprob: -13.50112533569336
    7. 'Coordinator' → logprob: -13.75112533569336
    8. ')' → logprob: -14.50112533569336
    9. ' coordinate' → logprob: -14.75112533569336
    10. ' Coordinates' → logprob: -15.12612533569336

Token 554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.9728669738397e-05
    2. ' ,' → logprob: -9.500100135803223
    3. ',c' → logprob: -10.625100135803223
    4. ',
' → logprob: -14.750100135803223
    5. ',
' → logprob: -18.500099182128906
    6. '‌,' → logprob: -18.625099182128906
    7. ',

' → logprob: -19.000099182128906
    8. '   ' → logprob: -19.625099182128906
    9. '_,' → logprob: -19.750099182128906
    10. ',b' → logprob: -19.750099182128906

Token 555: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.252108633518219
    2. ' c' → logprob: -1.5021085739135742
    3. '   ' → logprob: -8.752108573913574
    4. '    ' → logprob: -11.502108573913574
    5. ' ' → logprob: -12.752108573913574
    6. '  ' → logprob: -13.002108573913574
    7. '       ' → logprob: -13.127108573913574
    8. '     ' → logprob: -13.877108573913574
    9. '	c' → logprob: -14.127108573913574
    10. '      ' → logprob: -14.127108573913574

Token 556: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. 'c' → logprob: -15.500000953674316
    3. 'o' → logprob: -15.750000953674316
    4. '```' → logprob: -17.25
    5. 'om' → logprob: -18.125
    6. 'ont' → logprob: -18.125
    7. 'on' → logprob: -18.375
    8. '
' → logprob: -19.0
    9. 'O' → logprob: -19.0
    10. '1' → logprob: -19.125

Token 557: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38791605830192566
    2. '):' → logprob: -1.137916088104248
    3. ' ):' → logprob: -7.512916088104248
    4. ')' → logprob: -8.51291561126709
    5. ' ):
' → logprob: -8.63791561126709
    6. '):

' → logprob: -10.01291561126709
    7. '):
' → logprob: -10.13791561126709
    8. ':' → logprob: -10.76291561126709
    9. ',' → logprob: -11.76291561126709
    10. ' )' → logprob: -12.76291561126709

Token 558: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.00020175233657937497
    2. 'Coordinates' → logprob: -9.250202178955078
    3. ')' → logprob: -10.250202178955078
    4. ' Coordinate' → logprob: -10.500202178955078
    5. 'str' → logprob: -11.500202178955078
    6. 'c' → logprob: -11.750202178955078
    7. 'Coord' → logprob: -12.125202178955078
    8. 'coordinate' → logprob: -12.250202178955078
    9. '   ' → logprob: -12.500202178955078
    10. '):
' → logprob: -12.750202178955078

Token 559: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22053676843643188
    2. '):' → logprob: -1.720536708831787
    3. ')' → logprob: -3.970536708831787
    4. '):
' → logprob: -10.220537185668945
    5. ' ):
' → logprob: -10.845537185668945
    6. '):

' → logprob: -11.845537185668945
    7. ' )' → logprob: -11.970537185668945
    8. ' ):' → logprob: -12.345537185668945
    9. ')->' → logprob: -12.845537185668945
    10. ':' → logprob: -14.095537185668945

Token 560: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04528970271348953
    2. ':
' → logprob: -3.5452897548675537
    3. '=' → logprob: -5.545289516448975
    4. '       ' → logprob: -6.045289516448975
    5. '==' → logprob: -6.170289516448975
    6. '):
' → logprob: -6.295289516448975
    7. ':return' → logprob: -6.420289516448975
    8. '->' → logprob: -7.045289516448975
    9. '):' → logprob: -7.045289516448975
    10. ',' → logprob: -8.045289993286133

Token 561: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.01648649387061596
    2. ' bool' → logprob: -4.141486644744873
    3. '(bool' → logprob: -7.766486644744873
    4. ' (' → logprob: -11.641486167907715
    5. 'return' → logprob: -11.891486167907715
    6. '<bool' → logprob: -12.891486167907715
    7. '(c' → logprob: -13.016486167907715
    8. 'c' → logprob: -13.141486167907715
    9. 'Bool' → logprob: -13.141486167907715
    10. '_bool' → logprob: -13.641486167907715

Token 562: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020979750901460648
    2. ':
' → logprob: -4.395979881286621
    3. '       ' → logprob: -5.895979881286621
    4. '(' → logprob: -5.895979881286621
    5. '   ' → logprob: -6.895979881286621
    6. '<|end|>' → logprob: -7.770979881286621
    7. ':return' → logprob: -8.020979881286621
    8. '):' → logprob: -8.020979881286621
    9. '(
' → logprob: -8.270979881286621
    10. '):
' → logprob: -8.895979881286621

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001898171496577561
    2. 'return' → logprob: -6.501898288726807
    3. ' return' → logprob: -7.876898288726807
    4. '	' → logprob: -11.751897811889648
    5. '   ' → logprob: -13.001897811889648
    6. '
' → logprob: -13.126897811889648
    7. '	return' → logprob: -13.251897811889648
    8. '      ' → logprob: -14.501897811889648
    9. '	   ' → logprob: -15.126897811889648
    10. '<|end|>' → logprob: -15.376897811889648

Token 564: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004363182932138443
    2. ' return' → logprob: -5.504363059997559
    3. '{return' → logprob: -9.004363059997559
    4. '       ' → logprob: -9.129363059997559
    5. '(return' → logprob: -10.254363059997559
    6. '
' → logprob: -12.004363059997559
    7. '	return' → logprob: -12.379363059997559
    8. '(c' → logprob: -12.629363059997559
    9. '{' → logprob: -13.504363059997559
    10. '(' → logprob: -14.129363059997559

Token 565: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16252413392066956
    2. '(c' → logprob: -1.9125241041183472
    3. '{' → logprob: -7.037524223327637
    4. ' (' → logprob: -7.787524223327637
    5. '(f' → logprob: -8.037524223327637
    6. '(set' → logprob: -8.412524223327637
    7. '(sorted' → logprob: -8.412524223327637
    8. '   ' → logprob: -9.037524223327637
    9. '({' → logprob: -9.912524223327637
    10. '(C' → logprob: -11.287524223327637

Token 566: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05500955879688263
    2. 'self' → logprob: -3.055009603500366
    3. '(c' → logprob: -5.055009365081787
    4. '{' → logprob: -11.555009841918945
    5. ' (' → logprob: -12.430009841918945
    6. 'c' → logprob: -12.430009841918945
    7. ' self' → logprob: -12.680009841918945
    8. '   ' → logprob: -13.055009841918945
    9. '[self' → logprob: -14.305009841918945
    10. '  ' → logprob: -15.055009841918945

Token 567: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -14.000001907348633
    3. '.coords' → logprob: -15.625001907348633
    4. ' .' → logprob: -16.375001907348633
    5. '.coe' → logprob: -16.375001907348633
    6. 'coord' → logprob: -16.750001907348633
    7. '.cod' → logprob: -16.875001907348633
    8. ').' → logprob: -17.875001907348633
    9. '.conn' → logprob: -18.500001907348633
    10. '.co' → logprob: -18.500001907348633

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -20.25
    3. '```' → logprob: -20.25
    4. '１' → logprob: -21.25
    5. ' ' → logprob: -21.625
    6. '   ' → logprob: -21.8125
    7. '१' → logprob: -22.0
    8. '১' → logprob: -22.125
    9. '
' → logprob: -22.1875
    10. ')' → logprob: -22.375

Token 569: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01815134845674038
    2. ' ==' → logprob: -4.01815128326416
    3. '==
' → logprob: -13.76815128326416
    4. '=' → logprob: -15.26815128326416
    5. '===' → logprob: -16.768152236938477
    6. ')==' → logprob: -16.893152236938477
    7. '==(' → logprob: -17.268152236938477
    8. ']==' → logprob: -18.018152236938477
    9. ',' → logprob: -18.143152236938477
    10. '()==' → logprob: -18.268152236938477

Token 570: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001584850688232109
    2. ' c' → logprob: -8.750158309936523
    3. ')c' → logprob: -18.250158309936523
    4. '	c' → logprob: -19.875158309936523
    5. 'cation' → logprob: -20.625158309936523
    6. 'ct' → logprob: -23.125158309936523
    7. 'coord' → logprob: -23.250158309936523
    8. 'с' → logprob: -23.875158309936523
    9. '
' → logprob: -23.875158309936523
    10. '<c' → logprob: -24.000158309936523

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001605115394340828
    2. 'c' → logprob: -9.000160217285156
    3. '2' → logprob: -11.000160217285156
    4. ' c' → logprob: -11.500160217285156
    5. 'coord' → logprob: -12.125160217285156
    6. 'oord' → logprob: -13.125160217285156
    7. 'o' → logprob: -14.000160217285156
    8. 'ord' → logprob: -14.625160217285156
    9. '   ' → logprob: -14.750160217285156
    10. 'cord' → logprob: -15.375160217285156

Token 572: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7394037246704102
    2. ' or' → logprob: -0.7394037246704102
    3. 'and' → logprob: -3.23940372467041
    4. 'or' → logprob: -5.11440372467041
    5. ' ' → logprob: -12.61440372467041
    6. ')' → logprob: -13.11440372467041
    7. '       ' → logprob: -15.23940372467041
    8. '   ' → logprob: -15.61440372467041
    9. '	or' → logprob: -16.114402770996094
    10. '    ' → logprob: -16.364402770996094

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007244677981361747
    2. ' self' → logprob: -7.2507243156433105
    3. '(self' → logprob: -11.375724792480469
    4. '           ' → logprob: -13.750724792480469
    5. '       ' → logprob: -14.375724792480469
    6. '
' → logprob: -14.375724792480469
    7. '         ' → logprob: -15.375724792480469
    8. '          ' → logprob: -15.750724792480469
    9. '        ' → logprob: -16.00072479248047
    10. '	self' → logprob: -16.75072479248047

Token 574: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -0.0031840058509260416
    2. 'coord' → logprob: -5.753183841705322
    3. '.' → logprob: -12.62818431854248
    4. ' coord' → logprob: -12.87818431854248
    5. ' .' → logprob: -14.87818431854248
    6. '(coord' → logprob: -17.253183364868164
    7. '.coords' → logprob: -17.378183364868164
    8. '_coord' → logprob: -17.503183364868164
    9. 'Coord' → logprob: -17.628183364868164
    10. '.co' → logprob: -17.628183364868164

Token 575: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. '1' → logprob: -11.87501335144043
    3. '.coord' → logprob: -12.00001335144043
    4. 'coord' → logprob: -14.37501335144043
    5. ' coord' → logprob: -17.37501335144043
    6. '   ' → logprob: -17.50001335144043
    7. ' ' → logprob: -17.87501335144043
    8. '0' → logprob: -17.87501335144043
    9. '
' → logprob: -18.31251335144043
    10. '(coord' → logprob: -18.50001335144043

Token 576: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3868976831436157
    2. ' ==' → logprob: -1.1368976831436157
    3. ')' → logprob: -11.136898040771484
    4. ')==' → logprob: -11.886898040771484
    5. '==
' → logprob: -12.261898040771484
    6. '=' → logprob: -15.761898040771484
    7. '===' → logprob: -16.386898040771484
    8. ' ' → logprob: -16.511898040771484
    9. '==(' → logprob: -16.761898040771484
    10. ' ==
' → logprob: -17.261898040771484

Token 577: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.061967913061380386
    2. ' c' → logprob: -2.8119678497314453
    3. ')c' → logprob: -16.061967849731445
    4. '	c' → logprob: -16.436967849731445
    5. ' ' → logprob: -17.311967849731445
    6. '   ' → logprob: -18.061967849731445
    7. ')' → logprob: -19.186967849731445
    8. '_c' → logprob: -19.436967849731445
    9. 'coord' → logprob: -19.686967849731445
    10. '
' → logprob: -19.686967849731445

Token 578: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.248469718324486e-05
    2. 'c' → logprob: -10.875022888183594
    3. '1' → logprob: -13.000022888183594
    4. 'coord' → logprob: -13.875022888183594
    5. 'o' → logprob: -16.375022888183594
    6. '   ' → logprob: -17.000022888183594
    7. ' coord' → logprob: -17.625022888183594
    8. 'ord' → logprob: -17.750022888183594
    9. 'const' → logprob: -17.875022888183594
    10. ')' → logprob: -17.875022888183594

Token 579: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.240481914370321e-05
    2. ' )' → logprob: -9.875052452087402
    3. 'or' → logprob: -14.500052452087402
    4. ' or' → logprob: -15.500052452087402
    5. '       ' → logprob: -16.250051498413086
    6. '   ' → logprob: -18.250051498413086
    7. '    ' → logprob: -18.500051498413086
    8. '        ' → logprob: -18.875051498413086
    9. ')\
' → logprob: -19.250051498413086
    10. ')
' → logprob: -19.500051498413086

Token 580: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.006721298210322857
    2. 'or' → logprob: -5.006721496582031
    3. '	or' → logprob: -12.881721496582031
    4. '       ' → logprob: -13.881721496582031
    5. '    ' → logprob: -14.006721496582031
    6. ' ' → logprob: -14.381721496582031
    7. '        ' → logprob: -14.631721496582031
    8. '   ' → logprob: -15.631721496582031
    9. '      ' → logprob: -16.00672149658203
    10. '           ' → logprob: -16.38172149658203

Token 581: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10029077529907227
    2. '(self' → logprob: -2.3502907752990723
    3. '       ' → logprob: -9.600290298461914
    4. '(' → logprob: -11.850290298461914
    5. 'self' → logprob: -12.850290298461914
    6. '        ' → logprob: -13.475290298461914
    7. '(this' → logprob: -13.850290298461914
    8. '   ' → logprob: -14.100290298461914
    9. ' ' → logprob: -14.225290298461914
    10. '      ' → logprob: -14.475290298461914

Token 582: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002204378368332982
    2. ' self' → logprob: -6.127204418182373
    3. '(self' → logprob: -11.127203941345215
    4. '       ' → logprob: -13.502203941345215
    5. '           ' → logprob: -13.502203941345215
    6. '	self' → logprob: -14.502203941345215
    7. '   ' → logprob: -15.127203941345215
    8. '         ' → logprob: -15.377203941345215
    9. ' ' → logprob: -15.877203941345215
    10. '
' → logprob: -16.37720489501953

Token 583: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -5.300083648762666e-05
    2. 'coord' → logprob: -9.875053405761719
    3. '.' → logprob: -13.750053405761719
    4. '.coords' → logprob: -15.875053405761719
    5. ' coord' → logprob: -16.12505340576172
    6. ' .' → logprob: -16.37505340576172
    7. '.cod' → logprob: -16.87505340576172
    8. '_coord' → logprob: -17.50005340576172
    9. '.co' → logprob: -18.12505340576172
    10. 'Coord' → logprob: -18.12505340576172

Token 584: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -12.625003814697266
    3. '.' → logprob: -16.250003814697266
    4. ' ' → logprob: -17.000003814697266
    5. '.coord' → logprob: -18.000003814697266
    6. 'self' → logprob: -18.250003814697266
    7. 'coord' → logprob: -18.375003814697266
    8. '.c' → logprob: -18.375003814697266
    9. '```' → logprob: -18.500003814697266
    10. '_' → logprob: -18.750003814697266

Token 585: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931536197662354
    2. ' ==' → logprob: -0.6931536197662354
    3. '==
' → logprob: -12.693153381347656
    4. ')==' → logprob: -12.943153381347656
    5. '==(' → logprob: -14.693153381347656
    6. ')' → logprob: -15.568153381347656
    7. '=' → logprob: -15.693153381347656
    8. ' ==
' → logprob: -16.818153381347656
    9. ']==' → logprob: -16.943153381347656
    10. ' ' → logprob: -17.318153381347656

Token 586: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04859350249171257
    2. ' c' → logprob: -3.048593521118164
    3. 'coord' → logprob: -12.798593521118164
    4. ')c' → logprob: -13.923593521118164
    5. '   ' → logprob: -14.298593521118164
    6. ' ' → logprob: -14.798593521118164
    7. '	c' → logprob: -15.048593521118164
    8. ' coord' → logprob: -15.923593521118164
    9. '  ' → logprob: -16.048593521118164
    10. '```' → logprob: -16.236093521118164

Token 587: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003196154139004648
    2. 'c' → logprob: -8.250319480895996
    3. '1' → logprob: -10.500319480895996
    4. 'coord' → logprob: -10.875319480895996
    5. 'o' → logprob: -12.250319480895996
    6. '```' → logprob: -13.125319480895996
    7. 'oord' → logprob: -13.875319480895996
    8. 'cord' → logprob: -14.250319480895996
    9. '   ' → logprob: -14.500319480895996
    10. 's' → logprob: -15.687819480895996

Token 588: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020806640386581
    2. 'and' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.600208282470703
    4. ')' → logprob: -14.850208282470703
    5. ',' → logprob: -15.975208282470703
    6. '   ' → logprob: -16.600208282470703
    7. ' и' → logprob: -17.225208282470703
    8. ' ' → logprob: -17.350208282470703
    9. 'a' → logprob: -17.600208282470703
    10. '```' → logprob: -17.725208282470703

Token 589: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006716317031532526
    2. ' self' → logprob: -5.006716251373291
    3. 'c' → logprob: -14.63171672821045
    4. '
' → logprob: -16.131715774536133
    5. '(self' → logprob: -16.506715774536133
    6. '	self' → logprob: -16.631715774536133
    7. '[self' → logprob: -16.756715774536133
    8. '       ' → logprob: -17.006715774536133
    9. '   ' → logprob: -17.381715774536133
    10. '           ' → logprob: -18.006715774536133

Token 590: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -0.5760195255279541
    2. 'coord' → logprob: -0.8260195255279541
    3. ' coord' → logprob: -9.451019287109375
    4. '(coord' → logprob: -14.826019287109375
    5. 'cord' → logprob: -15.201019287109375
    6. '_coord' → logprob: -15.326019287109375
    7. '.' → logprob: -15.701019287109375
    8. 'c' → logprob: -15.701019287109375
    9. '1' → logprob: -16.701019287109375
    10. '.c' → logprob: -16.826019287109375

Token 591: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006909898947924376
    2. '_coord' → logprob: -8.000691413879395
    3. 'coord' → logprob: -8.125691413879395
    4. 'c' → logprob: -10.750691413879395
    5. '.coord' → logprob: -11.500691413879395
    6. '(coord' → logprob: -11.625691413879395
    7. '_c' → logprob: -12.625691413879395
    8. ' coord' → logprob: -12.625691413879395
    9. '_coords' → logprob: -13.125691413879395
    10. '2' → logprob: -13.250691413879395

Token 592: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023490972816944122
    2. ' ==' → logprob: -3.7734909057617188
    3. 'c' → logprob: -9.148490905761719
    4. ')' → logprob: -9.773490905761719
    5. ')==' → logprob: -10.273490905761719
    6. '==
' → logprob: -10.773490905761719
    7. '=' → logprob: -11.398490905761719
    8. ' c' → logprob: -11.523490905761719
    9. ')c' → logprob: -12.523490905761719
    10. '=c' → logprob: -15.023490905761719

Token 593: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.107425062713446e-06
    2. ' c' → logprob: -12.000006675720215
    3. 'coord' → logprob: -14.000006675720215
    4. ')c' → logprob: -18.62500762939453
    5. '	c' → logprob: -19.25000762939453
    6. '   ' → logprob: -20.00000762939453
    7. '1' → logprob: -20.12500762939453
    8. ' ' → logprob: -20.87500762939453
    9. 'cord' → logprob: -20.87500762939453
    10. 'с' → logprob: -20.87500762939453

Token 594: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001725511101540178
    2. 'coord' → logprob: -8.75017261505127
    3. '
' → logprob: -12.87517261505127
    4. 'oord' → logprob: -13.00017261505127
    5. 'c' → logprob: -13.25017261505127
    6. 'ord' → logprob: -13.62517261505127
    7. 'cord' → logprob: -13.75017261505127
    8. 'o' → logprob: -13.87517261505127
    9. ' coord' → logprob: -14.12517261505127
    10. ' ' → logprob: -15.12517261505127

Token 595: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -13.000005722045898
    3. ' )' → logprob: -13.375005722045898
    4. ')return' → logprob: -14.125005722045898
    5. '<|end|>' → logprob: -14.250005722045898
    6. ')#' → logprob: -15.500005722045898
    7. ')

' → logprob: -16.3750057220459
    8. '))' → logprob: -17.8750057220459
    9. '),' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.0000057220459

Token 596: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4119980037212372
    2. '   ' → logprob: -1.2869980335235596
    3. '#' → logprob: -3.4119980335235596
    4. '
' → logprob: -3.9119980335235596
    5. '<|end|>' → logprob: -5.0369977951049805
    6. '<|end|>' → logprob: -6.9119977951049805
    7. '    
' → logprob: -7.2869977951049805
    8. ' class' → logprob: -9.16199779510498
    9. ' ' → logprob: -9.28699779510498
    10. 'def' → logprob: -9.66199779510498

Token 597: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8522669076919556
    2. '#' → logprob: -0.9772669076919556
    3. '   ' → logprob: -1.7272669076919556
    4. 'def' (adapté à ' def') → logprob: -3.977266788482666
    5. '<|end|>' → logprob: -8.227267265319824
    6. 'import' → logprob: -9.602267265319824
    7. '    
' → logprob: -9.852267265319824
    8. 'from' → logprob: -10.227267265319824
    9. '.' → logprob: -10.352267265319824
    10. ' class' → logprob: -10.477267265319824

Token 598: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.05063098669052124
    2. ' other' → logprob: -3.300631046295166
    3. 'update' → logprob: -6.050631046295166
    4. 'is' → logprob: -6.300631046295166
    5. 'op' → logprob: -6.425631046295166
    6. 'either' → logprob: -6.550631046295166
    7. 'get' → logprob: -7.050631046295166
    8. 'blocks' → logprob: -7.175631046295166
    9. ' __' → logprob: -7.300631046295166
    10. '__' → logprob: -7.550631046295166

Token 599: '_end' (ID: 13707)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032122957054525614
    2. '_coord' → logprob: -6.5032124519348145
    3. '_coordinate' → logprob: -7.2532124519348145
    4. '(' → logprob: -8.003211975097656
    5. '_side' → logprob: -8.503211975097656
    6. '_endpoint' → logprob: -8.628211975097656
    7. '_end' → logprob: -8.878211975097656
    8. '(coord' → logprob: -9.878211975097656
    9. '(end' → logprob: -10.878211975097656
    10. ' (' → logprob: -11.003211975097656

Token 600: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.664371848164592e-05
    2. '(' → logprob: -11.125016212463379
    3. ' (' → logprob: -13.875016212463379
    4. '(coord' → logprob: -15.000016212463379
    5. '(co' → logprob: -15.375016212463379
    6. '(s' → logprob: -15.875016212463379
    7. '(
' → logprob: -16.000017166137695
    8. 'self' → logprob: -16.625017166137695
    9. '(sel' → logprob: -16.875017166137695
    10. 's' → logprob: -18.625017166137695

Token 601: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005796041805297136
    2. '(' → logprob: -8.125579833984375
    3. ')(' → logprob: -8.625579833984375
    4. ',' → logprob: -9.750579833984375
    5. ' (' → logprob: -11.125579833984375
    6. 'self' → logprob: -11.125579833984375
    7. ',self' → logprob: -12.375579833984375
    8. ')' → logprob: -13.000579833984375
    9. '(co' → logprob: -13.125579833984375
    10. '](' → logprob: -13.875579833984375

Token 602: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3372920751571655
    2. ' self' → logprob: -1.9622920751571655
    3. 'coord' → logprob: -2.462292194366455
    4. ' coord' → logprob: -2.837292194366455
    5. 'coordinate' → logprob: -7.212292194366455
    6. ' coordinate' → logprob: -7.337292194366455
    7. 'c' → logprob: -7.712292194366455
    8. ' c' → logprob: -9.462291717529297
    9. 'other' → logprob: -11.962291717529297
    10. '   ' → logprob: -12.712291717529297

Token 603: ':' (ID: 25)
  Prédit: 'oord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oord' → logprob: -0.48335757851600647
    2. '1' → logprob: -1.358357548713684
    3. 'o' → logprob: -2.1083576679229736
    4. 'ord' → logprob: -6.3583574295043945
    5. 'coord' → logprob: -6.6083574295043945
    6. 'oor' → logprob: -7.8583574295043945
    7. '_coord' → logprob: -8.733357429504395
    8. '(coord' → logprob: -8.983357429504395
    9. '```' → logprob: -9.108357429504395
    10. 'cord' → logprob: -9.233357429504395

Token 604: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -3.881560041918419e-05
    2. ' Coordinate' → logprob: -10.250039100646973
    3. 'Coordinates' → logprob: -12.625039100646973
    4. '_coordinate' → logprob: -16.500038146972656
    5. 'Coord' → logprob: -16.750038146972656
    6. 'Coordinator' → logprob: -18.875038146972656
    7. 'coordinate' → logprob: -19.500038146972656
    8. ' coordinate' → logprob: -21.250038146972656
    9. 'Co' → logprob: -21.375038146972656
    10. '   ' → logprob: -21.750038146972656

Token 605: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5843033790588379
    2. '):
' → logprob: -0.8343033790588379
    3. ':' → logprob: -4.834303379058838
    4. '):
' → logprob: -8.20930290222168
    5. ':
' → logprob: -9.95930290222168
    6. ')' → logprob: -10.95930290222168
    7. '       ' → logprob: -11.33430290222168
    8. '   ' → logprob: -11.58430290222168
    9. ',' → logprob: -12.33430290222168
    10. '():
' → logprob: -12.58430290222168

Token 606: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0263415165245533
    2. ':
' → logprob: -3.651341438293457
    3. '       ' → logprob: -11.276341438293457
    4. ':
' → logprob: -12.026341438293457
    5. '):' → logprob: -12.151341438293457
    6. ',' → logprob: -12.401341438293457
    7. ':return' → logprob: -12.401341438293457
    8. '):
' → logprob: -12.526341438293457
    9. '=' → logprob: -13.526341438293457
    10. ':

' → logprob: -13.651341438293457

Token 607: ' Coordinate' (ID: 78454)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4743354022502899
    2. ' self' → logprob: -0.9743354320526123
    3. '(self' → logprob: -8.474335670471191
    4. 'c' → logprob: -10.474335670471191
    5. ' c' → logprob: -11.224335670471191
    6. ' (' → logprob: -12.724335670471191
    7. 'None' → logprob: -13.099335670471191
    8. 'Coordinate' → logprob: -13.849335670471191
    9. ' None' → logprob: -14.349335670471191
    10. 'coord' → logprob: -14.849335670471191

Token 608: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8598323464393616
    2. '       ' → logprob: -1.1098322868347168
    3. ':' → logprob: -1.4848322868347168
    4. '   ' → logprob: -4.734832286834717
    5. '):
' → logprob: -4.984832286834717
    6. '(self' → logprob: -6.734832286834717
    7. ',' → logprob: -7.234832286834717
    8. '(' → logprob: -7.609832286834717
    9. '(
' → logprob: -7.609832286834717
    10. ' if' → logprob: -8.234832763671875

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011678413720801473
    2. ' if' → logprob: -6.8761677742004395
    3. 'if' → logprob: -9.126168251037598
    4. 'return' → logprob: -11.001168251037598
    5. '   ' → logprob: -12.376168251037598
    6. ' return' → logprob: -13.376168251037598
    7. '	' → logprob: -14.376168251037598
    8. '
' → logprob: -14.876168251037598
    9. '      ' → logprob: -14.876168251037598
    10. '           ' → logprob: -15.001168251037598

Token 610: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0688910037279129
    2. 'self' → logprob: -3.0688910484313965
    3. 'if' (adapté à ' if') → logprob: -4.3188910484313965
    4. ' return' → logprob: -5.3188910484313965
    5. ' if' → logprob: -6.8188910484313965
    6. '       ' → logprob: -7.5688910484313965
    7. ' self' → logprob: -8.193890571594238
    8. '(self' → logprob: -15.068890571594238
    9. '{return' → logprob: -16.193891525268555
    10. '	return' → logprob: -17.068891525268555

Token 611: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2073618322610855
    2. ' self' → logprob: -2.082361936569214
    3. 'c' → logprob: -2.832361936569214
    4. ' c' → logprob: -5.582361698150635
    5. '	self' → logprob: -13.832362174987793
    6. '(self' → logprob: -15.707362174987793
    7. ' ' → logprob: -15.707362174987793
    8. '	c' → logprob: -16.207361221313477
    9. '   ' → logprob: -16.457361221313477
    10. '=self' → logprob: -17.332361221313477

Token 612: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3868754208087921
    2. ' ==' → logprob: -1.1368753910064697
    3. '==
' → logprob: -13.01187515258789
    4. ')==' → logprob: -14.26187515258789
    5. '=' → logprob: -14.38687515258789
    6. '===' → logprob: -14.63687515258789
    7. ']==' → logprob: -15.63687515258789
    8. '()==' → logprob: -16.13687515258789
    9. '==(' → logprob: -16.63687515258789
    10. ' ==
' → logprob: -18.13687515258789

Token 613: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020354038861114532
    2. ' self' → logprob: -8.500203132629395
    3. '	self' → logprob: -18.87520408630371
    4. '(self' → logprob: -20.00020408630371
    5. '=self' → logprob: -20.25020408630371
    6. ' ' → logprob: -20.75020408630371
    7. '   ' → logprob: -20.87520408630371
    8. '[self' → logprob: -21.75020408630371
    9. 's' → logprob: -22.12520408630371
    10. '       ' → logprob: -22.25020408630371

Token 614: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -6.511406809295295e-06
    2. '.' → logprob: -12.375006675720215
    3. ' .' → logprob: -14.125006675720215
    4. '.coords' → logprob: -14.250006675720215
    5. '.cod' → logprob: -14.750006675720215
    6. '.co' → logprob: -15.500006675720215
    7. 'coord' → logprob: -16.0000057220459
    8. '.coordinate' → logprob: -17.1250057220459
    9. '.c' → logprob: -17.5000057220459
    10. '.coe' → logprob: -17.7500057220459

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '   ' → logprob: -19.75
    4. '_' → logprob: -19.875
    5. '```' → logprob: -20.5
    6. '2' → logprob: -20.875
    7. '' → logprob: -21.4375
    8. 's' → logprob: -21.5
    9. '１' → logprob: -21.75
    10. '۱' → logprob: -22.0

Token 616: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05500233918428421
    2. ':' → logprob: -2.930002450942993
    3. ':return' → logprob: -9.180002212524414
    4. ':
' → logprob: -11.930002212524414
    5. 'else' → logprob: -12.930002212524414
    6. '       ' → logprob: -13.055002212524414
    7. ',' → logprob: -13.680002212524414
    8. ':

' → logprob: -14.055002212524414
    9. 'return' → logprob: -14.305002212524414
    10. '):
' → logprob: -14.305002212524414

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.382834255695343
    2. ' return' → logprob: -1.6328341960906982
    3. 'return' → logprob: -2.2578341960906982
    4. '
' → logprob: -4.632834434509277
    5. '       ' → logprob: -5.882834434509277
    6. ':
' → logprob: -6.132834434509277
    7. ':return' → logprob: -6.507834434509277
    8. '	       ' → logprob: -7.382834434509277
    9. '	return' → logprob: -7.507834434509277
    10. ':' → logprob: -9.257834434509277

Token 618: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04859395697712898
    2. ' return' → logprob: -3.0485939979553223
    3. '       ' → logprob: -12.423593521118164
    4. '           ' → logprob: -13.923593521118164
    5. '	return' → logprob: -14.048593521118164
    6. 'eturn' → logprob: -15.298593521118164
    7. ':return' → logprob: -15.673593521118164
    8. '{return' → logprob: -15.923593521118164
    9. '.return' → logprob: -16.298593521118164
    10. '               ' → logprob: -16.423593521118164

Token 619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024756586644798517
    2. ' self' → logprob: -6.002475738525391
    3. '	self' → logprob: -19.62747573852539
    4. '(self' → logprob: -20.62747573852539
    5. '[self' → logprob: -22.50247573852539
    6. '       ' → logprob: -22.62747573852539
    7. '   ' → logprob: -23.87747573852539
    8. 'Self' → logprob: -23.87747573852539
    9. '```' → logprob: -23.87747573852539
    10. ' ' → logprob: -24.00247573852539

Token 620: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -13.000003814697266
    3. ' .' → logprob: -14.375003814697266
    4. '.co' → logprob: -15.500003814697266
    5. '.cod' → logprob: -15.625003814697266
    6. '.coords' → logprob: -15.875003814697266
    7. '.coordinate' → logprob: -18.375003814697266
    8. 'coord' → logprob: -18.375003814697266
    9. '.coe' → logprob: -18.500003814697266
    10. '.c' → logprob: -19.125003814697266

Token 621: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'coord' → logprob: -18.5
    3. '```' → logprob: -18.625
    4. 'self' → logprob: -19.0
    5. ' ' → logprob: -19.125
    6. '_' → logprob: -19.25
    7. '   ' → logprob: -20.0
    8. '۲' → logprob: -20.25
    9. '.coord' → logprob: -20.375
    10. '_coord' → logprob: -20.5

Token 622: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018268341955263168
    2. 'return' → logprob: -10.00018310546875
    3. 'else' → logprob: -10.12518310546875
    4. '
' → logprob: -10.12518310546875
    5. '	' → logprob: -10.62518310546875
    6. ' else' → logprob: -11.00018310546875
    7. '   ' → logprob: -12.00018310546875
    8. 'elif' → logprob: -12.50018310546875
    9. '               ' → logprob: -13.75018310546875
    10. '           ' → logprob: -14.25018310546875

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003123439964838326
    2. 'else' → logprob: -9.000312805175781
    3. 'elif' → logprob: -9.750312805175781
    4. 'return' → logprob: -10.000312805175781
    5. ' else' → logprob: -10.250312805175781
    6. '	' → logprob: -10.250312805175781
    7. '   ' → logprob: -12.375312805175781
    8. ' elif' → logprob: -12.625312805175781
    9. '
' → logprob: -12.750312805175781
    10. ' return' → logprob: -14.000312805175781

Token 624: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3578599691390991
    2. 'return' → logprob: -2.2328600883483887
    3. '       ' → logprob: -2.3578600883483887
    4. 'else' → logprob: -2.8578600883483887
    5. ' elif' → logprob: -3.3578600883483887
    6. ' else' → logprob: -5.482860088348389
    7. ' return' → logprob: -6.607860088348389
    8. 'if' → logprob: -6.732860088348389
    9. ' if' → logprob: -9.85785961151123
    10. 'raise' → logprob: -11.73285961151123

Token 625: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5231257081031799
    2. ' c' → logprob: -0.8981257081031799
    3. '	c' → logprob: -14.023125648498535
    4. ' ' → logprob: -15.023125648498535
    5. 'self' → logprob: -15.023125648498535
    6. ' ' → logprob: -15.148125648498535
    7. '   ' → logprob: -16.27312660217285
    8. '$c' → logprob: -16.46062660217285
    9. '       ' → logprob: -16.96062660217285
    10. '
' → logprob: -16.96062660217285

Token 626: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3868718445301056
    2. ' ==' → logprob: -1.1368718147277832
    3. '==
' → logprob: -14.636872291564941
    4. ']==' → logprob: -15.886872291564941
    5. '=' → logprob: -16.136871337890625
    6. ')==' → logprob: -16.386871337890625
    7. '===' → logprob: -16.511871337890625
    8. '()==' → logprob: -17.636871337890625
    9. '==(' → logprob: -17.886871337890625
    10. '=='' → logprob: -18.886871337890625

Token 627: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024756586644798517
    2. ' self' → logprob: -6.002475738525391
    3. '	self' → logprob: -17.75247573852539
    4. '(self' → logprob: -17.87747573852539
    5. ' ' → logprob: -18.50247573852539
    6. 'sel' → logprob: -18.87747573852539
    7. '=self' → logprob: -19.00247573852539
    8. 's' → logprob: -19.25247573852539
    9. 'se' → logprob: -19.25247573852539
    10. '[self' → logprob: -19.50247573852539

Token 628: '.coord' (ID: 177412)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.20144110918045044
    2. '.coord' → logprob: -1.7014410495758057
    3. 'cord' → logprob: -11.701440811157227
    4. ' coord' → logprob: -11.701440811157227
    5. '2' → logprob: -12.076440811157227
    6. '(coord' → logprob: -13.451440811157227
    7. '   ' → logprob: -13.951440811157227
    8. '1' → logprob: -14.201440811157227
    9. '_coord' → logprob: -14.451440811157227
    10. '.' → logprob: -14.576440811157227

Token 629: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. '1' → logprob: -12.375006675720215
    3. 'self' → logprob: -13.250006675720215
    4. '```' → logprob: -16.2500057220459
    5. '   ' → logprob: -16.3125057220459
    6. ' ' → logprob: -16.8750057220459
    7. '
' → logprob: -17.2500057220459
    8. 'None' → logprob: -17.3125057220459
    9. '0' → logprob: -17.5625057220459
    10. 'coord' → logprob: -18.3125057220459

Token 630: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31578922271728516
    2. ':
' → logprob: -1.3157892227172852
    3. ':return' → logprob: -6.190789222717285
    4. '<|end|>' → logprob: -8.065789222717285
    5. '       ' → logprob: -9.815789222717285
    6. '           ' → logprob: -9.940789222717285
    7. ':
' → logprob: -11.565789222717285
    8. ' :' → logprob: -11.690789222717285
    9. ',' → logprob: -11.940789222717285
    10. ':

' → logprob: -12.065789222717285

Token 631: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06878651678562164
    2. 'return' → logprob: -3.06878662109375
    3. ' self' → logprob: -4.06878662109375
    4. '           ' → logprob: -6.69378662109375
    5. ' return' → logprob: -7.69378662109375
    6. 'c' → logprob: -7.81878662109375
    7. ':return' → logprob: -8.06878662109375
    8. 'None' → logprob: -8.81878662109375
    9. ' c' → logprob: -8.94378662109375
    10. '       ' → logprob: -9.06878662109375

Token 632: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00037132782745175064
    2. ' self' → logprob: -8.000370979309082
    3. 'return' (adapté à ' return') → logprob: -10.250370979309082
    4. '       ' → logprob: -15.500370979309082
    5. 'c' → logprob: -15.625370979309082
    6. '           ' → logprob: -16.2503719329834
    7. ' return' → logprob: -17.3753719329834
    8. 'None' → logprob: -17.6253719329834
    9. '	self' → logprob: -17.7503719329834
    10. '   ' → logprob: -18.1253719329834

Token 633: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.908022285439074e-05
    2. ' self' → logprob: -9.750059127807617
    3. 'c' → logprob: -14.500059127807617
    4. 's' → logprob: -17.000059127807617
    5. '(self' → logprob: -17.750059127807617
    6. '	self' → logprob: -17.750059127807617
    7. '[self' → logprob: -18.125059127807617
    8. 'sel' → logprob: -19.000059127807617
    9. '=self' → logprob: -19.125059127807617
    10. ' ' → logprob: -19.250059127807617

Token 634: '.coord' (ID: 177412)
  Prédit: '.coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -0.0015071245143190026
    2. 'coord' → logprob: -6.50150728225708
    3. '1' → logprob: -12.501506805419922
    4. ' coord' → logprob: -14.751506805419922
    5. '.' → logprob: -15.126506805419922
    6. '.cod' → logprob: -15.626506805419922
    7. ' .' → logprob: -16.376506805419922
    8. '(coord' → logprob: -16.751506805419922
    9. '_coord' → logprob: -17.376506805419922
    10. '.co' → logprob: -17.751506805419922

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -18.0
    3. 'coord' → logprob: -18.375
    4. '۱' → logprob: -18.375
    5. ' ' → logprob: -18.4375
    6. '১' → logprob: -18.5625
    7. '' → logprob: -18.625
    8. '१' → logprob: -18.8125
    9. '```' → logprob: -18.875
    10. '１' → logprob: -19.125

Token 636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025884173810482025
    2. '<|end|>' → logprob: -4.02588415145874
    3. '	' → logprob: -5.02588415145874
    4. '.' → logprob: -8.650884628295898
    5. '<|end|>' → logprob: -8.775884628295898
    6. '   ' → logprob: -9.275884628295898
    7. '
' → logprob: -9.650884628295898
    8. 'None' → logprob: -9.775884628295898
    9. '	   ' → logprob: -10.025884628295898
    10. '      ' → logprob: -10.275884628295898

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036909762769937515
    2. '<|end|>' → logprob: -3.536909818649292
    3. '	' → logprob: -5.411909580230713
    4. '   ' → logprob: -7.036909580230713
    5. '.' → logprob: -7.661909580230713
    6. '<|end|>' → logprob: -9.036910057067871
    7. 'None' → logprob: -9.161910057067871
    8. 'return' → logprob: -9.286910057067871
    9. ' ' → logprob: -9.286910057067871
    10. '	return' → logprob: -9.411910057067871

Token 638: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05958405137062073
    2. 'else' (adapté à ' else') → logprob: -3.684584140777588
    3. 'return' → logprob: -4.184584140777588
    4. ' else' → logprob: -4.309584140777588
    5. 'raise' → logprob: -5.934584140777588
    6. ' raise' → logprob: -7.059584140777588
    7. ' return' → logprob: -8.05958366394043
    8. '	' → logprob: -9.55958366394043
    9. 'None' → logprob: -10.43458366394043
    10. '	else' → logprob: -10.55958366394043

Token 639: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8257194757461548
    2. '           ' → logprob: -0.8257194757461548
    3. ':
' → logprob: -2.3257193565368652
    4. ':' → logprob: -3.7007193565368652
    5. 'raise' → logprob: -7.200719356536865
    6. ' raise' → logprob: -7.450719356536865
    7. '	raise' → logprob: -9.825719833374023
    8. '
' → logprob: -9.950719833374023
    9. '        ' → logprob: -10.075719833374023
    10. '):
' → logprob: -10.200719833374023

Token 640: '           ' (ID: 352)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.9661164283752441
    2. '       ' → logprob: -1.2161164283752441
    3. 'return' → logprob: -1.2161164283752441
    4. 'None' → logprob: -4.216116428375244
    5. ' raise' → logprob: -4.591116428375244
    6. ' return' → logprob: -6.716116428375244
    7. '           ' → logprob: -8.091115951538086
    8. ' None' → logprob: -8.466115951538086
    9. '	raise' → logprob: -10.216115951538086
    10. 'Raise' → logprob: -11.841115951538086

Token 641: ' return' (ID: 622)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.006073960568755865
    2. 'None' → logprob: -5.506073951721191
    3. 'return' (adapté à ' return') → logprob: -6.256073951721191
    4. ' raise' → logprob: -9.506073951721191
    5. ' None' → logprob: -16.006074905395508
    6. 'raises' → logprob: -16.131074905395508
    7. '   ' → logprob: -16.756074905395508
    8. 'Raise' → logprob: -17.256074905395508
    9. '	raise' → logprob: -17.631074905395508
    10. '       ' → logprob: -18.131074905395508

Token 642: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.9361264946837764e-07
    2. ' None' → logprob: -16.0
    3. '(None' → logprob: -22.375
    4. '_None' → logprob: -22.875
    5. '   ' → logprob: -23.25
    6. 'none' → logprob: -23.625
    7. 'null' → logprob: -23.75
    8. ',None' → logprob: -24.375
    9. '=None' → logprob: -24.625
    10. 'No' → logprob: -25.25

Token 643: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33692488074302673
    2. '   ' → logprob: -1.8369249105453491
    3. '<|end|>' → logprob: -2.0869247913360596
    4. '    
' → logprob: -6.836925029754639
    5. 'class' → logprob: -7.461925029754639
    6. '<|end|>' → logprob: -7.961925029754639
    7. '

' → logprob: -8.96192455291748
    8. ' 
' → logprob: -9.21192455291748
    9. '  
' → logprob: -9.58692455291748
    10. ' ' → logprob: -9.83692455291748

Token 644: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.009353927336633205
    2. '#' → logprob: -5.134354114532471
    3. '
' → logprob: -6.134354114532471
    4. 'def' → logprob: -7.009354114532471
    5. '   ' → logprob: -8.759353637695312
    6. ' class' → logprob: -9.259353637695312
    7. 'import' → logprob: -10.384353637695312
    8. '    
' → logprob: -11.384353637695312
    9. '  
' → logprob: -11.884353637695312
    10. '```' → logprob: -11.884353637695312

Token 645: ' Enc' (ID: 26858)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -9.925185440806672e-05
    2. '#' → logprob: -9.250099182128906
    3. 'from' → logprob: -13.625099182128906
    4. 'def' → logprob: -13.750099182128906
    5. 'import' → logprob: -14.250099182128906
    6. ' class' → logprob: -15.625099182128906
    7. '   ' → logprob: -19.000099182128906
    8. 'city' → logprob: -19.250099182128906
    9. 'Class' → logprob: -19.500099182128906
    10. '
' → logprob: -19.750099182128906

Token 646: 'aps' (ID: 3506)
  Prédit: 'lass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lass' → logprob: -0.24400867521762848
    2. 'oded' → logprob: -1.8690086603164673
    3. 'ode' → logprob: -3.994008779525757
    4. 'aps' → logprob: -4.119008541107178
    5. 'oding' → logprob: -4.119008541107178
    6. 'l' → logprob: -5.494008541107178
    7. '#' → logprob: -6.244008541107178
    8. 'lassical' → logprob: -6.369008541107178
    9. 'apsulation' → logprob: -7.244008541107178
    10. 'lasses' → logprob: -7.244008541107178

Token 647: 'ulates' (ID: 52494)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6367858052253723
    2. 'aps' → logprob: -0.8867858052253723
    3. 'lass' → logprob: -3.3867857456207275
    4. 'ulating' → logprob: -5.136785984039307
    5. 'las' → logprob: -5.261785984039307
    6. 'l' → logprob: -5.886785984039307
    7. '
' → logprob: -6.136785984039307
    8. 'apsulation' → logprob: -6.136785984039307
    9. '#' → logprob: -6.261785984039307
    10. 'lasses' → logprob: -6.761785984039307

Token 648: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.07899300754070282
    2. 'a' → logprob: -3.078993082046509
    3. 'class' → logprob: -4.20399284362793
    4. ' the' → logprob: -5.07899284362793
    5. 'traffic' → logprob: -5.82899284362793
    6. '#' → logprob: -6.07899284362793
    7. ' a' → logprob: -6.82899284362793
    8. ' traffic' → logprob: -7.45399284362793
    9. 'all' → logprob: -7.57899284362793
    10. 'city' → logprob: -8.20399284362793

Token 649: ' whole' (ID: 6062)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.735600471496582
    2. 'traffic' → logprob: -1.110600471496582
    3. 'road' → logprob: -2.485600471496582
    4. 'ent' → logprob: -3.610600471496582
    5. 'City' → logprob: -3.610600471496582
    6. 'graph' → logprob: -3.610600471496582
    7. 'Traffic' → logprob: -4.485600471496582
    8. 'map' → logprob: -5.860600471496582
    9. ' city' → logprob: -5.860600471496582
    10. ' traffic' → logprob: -6.360600471496582

Token 650: ' city' (ID: 5030)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02461273968219757
    2. 'city' → logprob: -4.024612903594971
    3. 'network' → logprob: -6.399612903594971
    4. 'traffic' → logprob: -6.399612903594971
    5. ' city' → logprob: -7.399612903594971
    6. ' class' → logprob: -7.524612903594971
    7. 'road' → logprob: -7.524612903594971
    8. 'graph' → logprob: -8.149612426757812
    9. 'City' → logprob: -8.399612426757812
    10. '#' → logprob: -8.524612426757812

Token 651: ' map' (ID: 4014)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0019377965945750475
    2. ' class' → logprob: -6.2519378662109375
    3. '
' → logprob: -11.876937866210938
    4. 'Map' → logprob: -13.626937866210938
    5. 'Traffic' → logprob: -14.501937866210938
    6. '"class' → logprob: -15.626937866210938
    7. '<class' → logprob: -16.126937866210938
    8. 'Class' → logprob: -16.501937866210938
    9. 'Graph' → logprob: -17.126937866210938
    10. 'City' → logprob: -17.251937866210938

Token 652: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -8.65707261255011e-06
    2. '
' → logprob: -11.750008583068848
    3. ' class' → logprob: -14.125008583068848
    4. '"class' → logprob: -19.000009536743164
    5. '<|end|>' → logprob: -19.375009536743164
    6. '<class' → logprob: -19.750009536743164
    7. ',class' → logprob: -20.000009536743164
    8. '#' → logprob: -20.875009536743164
    9. ',' → logprob: -20.875009536743164
    10. '  
' → logprob: -21.750009536743164

Token 653: ' roads' (ID: 30027)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.028827829286456108
    2. '#' → logprob: -4.153827667236328
    3. ' including' → logprob: -5.653827667236328
    4. ' roads' → logprob: -6.153827667236328
    5. 'including' → logprob: -6.278827667236328
    6. ' class' → logprob: -6.278827667236328
    7. 'with' → logprob: -6.778827667236328
    8. 'roads' → logprob: -7.653827667236328
    9. ' with' → logprob: -7.778827667236328
    10. '
' → logprob: -7.778827667236328

Token 654: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3003755807876587
    2. 'and' → logprob: -1.8003755807876587
    3. 'class' → logprob: -2.425375461578369
    4. ' and' → logprob: -5.425375461578369
    5. '#' → logprob: -7.175375461578369
    6. ',class' → logprob: -8.675375938415527
    7. ',
' → logprob: -8.800375938415527
    8. ' class' → logprob: -8.925375938415527
    9. '<|end|>' → logprob: -9.800375938415527
    10. '.' → logprob: -10.050375938415527

Token 655: ' signals' (ID: 29026)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.011178091168403625
    2. 'traffic' → logprob: -4.511178016662598
    3. 'inter' → logprob: -10.011178016662598
    4. 'lights' → logprob: -10.386178016662598
    5. 'sign' → logprob: -10.886178016662598
    6. ' signals' → logprob: -11.136178016662598
    7. ' traffic' → logprob: -11.636178016662598
    8. 'signal' → logprob: -12.386178016662598
    9. 'coordinates' → logprob: -13.261178016662598
    10. 'traf' → logprob: -13.386178016662598

Token 656: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.7697225252486533e-06
    2. '
' → logprob: -12.750003814697266
    3. ' class' → logprob: -14.000003814697266
    4. '"class' → logprob: -19.250003814697266
    5. ',class' → logprob: -19.750003814697266
    6. '<class' → logprob: -20.250003814697266
    7. '  
' → logprob: -20.750003814697266
    8. '#' → logprob: -21.875003814697266
    9. 'clas' → logprob: -21.875003814697266
    10. '-class' → logprob: -22.125003814697266

Token 657: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. ' class' → logprob: -19.25
    3. '#' → logprob: -22.25
    4. '"class' → logprob: -22.625
    5. '<class' → logprob: -23.5
    6. '
' → logprob: -23.75
    7. 'from' → logprob: -24.375
    8. '```' → logprob: -25.125
    9. '@dat' → logprob: -25.75
    10. 'import' → logprob: -25.875

Token 658: ' City' (ID: 5686)
  Prédit: 'City'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'City' → logprob: -0.0018301078816875815
    2. 'Traffic' → logprob: -6.376830101013184
    3. ' City' → logprob: -9.126830101013184
    4. 'Map' → logprob: -11.126830101013184
    5. 'Road' → logprob: -13.126830101013184
    6. 'city' → logprob: -14.501830101013184
    7. 'Graph' → logprob: -15.001830101013184
    8. 'Grid' → logprob: -15.126830101013184
    9. ' city' → logprob: -15.501830101013184
    10. '
' → logprob: -15.501830101013184

Token 659: 'Map' (ID: 2307)
  Prédit: 'Map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Map' → logprob: -0.0015767596196383238
    2. ':' → logprob: -6.751576900482178
    3. 'Graph' → logprob: -8.00157642364502
    4. ':
' → logprob: -9.62657642364502
    5. '{' → logprob: -13.12657642364502
    6. ' Map' → logprob: -14.25157642364502
    7. 'map' → logprob: -14.50157642364502
    8. '_map' → logprob: -14.62657642364502
    9. '   ' → logprob: -14.75157642364502
    10. '_Map' → logprob: -15.00157642364502

Token 660: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519764304161072
    2. ':
' → logprob: -1.501976490020752
    3. ':def' → logprob: -11.376976013183594
    4. '():
' → logprob: -11.501976013183594
    5. '(object' → logprob: -11.626976013183594
    6. '):
' → logprob: -12.501976013183594
    7. ':

' → logprob: -13.001976013183594
    8. '   ' → logprob: -13.126976013183594
    9. ' :' → logprob: -13.251976013183594
    10. ' :
' → logprob: -13.501976013183594

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037502311170101166
    2. ' def' → logprob: -8.375374794006348
    3. 'def' → logprob: -9.000374794006348
    4. ':' → logprob: -10.875374794006348
    5. '	def' → logprob: -13.750374794006348
    6. ':
' → logprob: -15.000374794006348
    7. ':def' → logprob: -15.750374794006348
    8. '   ' → logprob: -16.000375747680664
    9. '    
' → logprob: -16.125375747680664
    10. '  ' → logprob: -16.625375747680664

Token 662: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6941275596618652
    2. '   ' → logprob: -0.9441275596618652
    3. 'def' (adapté à ' def') → logprob: -2.1941275596618652
    4. '	def' → logprob: -11.319128036499023
    5. '    ' → logprob: -13.944128036499023
    6. '  ' → logprob: -14.694128036499023
    7. ' ' → logprob: -14.944128036499023
    8. '```' → logprob: -15.319128036499023
    9. ' __' → logprob: -15.444128036499023
    10. ':' → logprob: -15.569128036499023

Token 663: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13494057953357697
    2. ' __' → logprob: -2.8849406242370605
    3. 'def' → logprob: -2.8849406242370605
    4. 'init' → logprob: -4.5099406242370605
    5. ' def' → logprob: -5.8849406242370605
    6. '_init' → logprob: -7.5099406242370605
    7. '```' → logprob: -9.134940147399902
    8. 'int' → logprob: -11.009940147399902
    9. '___' → logprob: -11.384940147399902
    10. '.__' → logprob: -11.384940147399902

Token 664: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.933173426659778e-05
    2. 'it' → logprob: -9.875069618225098
    3. 'nit' → logprob: -11.250069618225098
    4. 'int' → logprob: -12.875069618225098
    5. 'iter' → logprob: -14.000069618225098
    6. 'its' → logprob: -15.000069618225098
    7. '```' → logprob: -15.250069618225098
    8. 'ini' → logprob: -15.625069618225098
    9. 'def' → logprob: -15.875069618225098
    10. 'in' → logprob: -16.50006866455078

Token 665: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00044353955308906734
    2. '(self' → logprob: -7.750443458557129
    3. '__(
' → logprob: -11.750443458557129
    4. '__' → logprob: -12.375443458557129
    5. ' (' → logprob: -15.375443458557129
    6. '_(' → logprob: -15.875443458557129
    7. '(' → logprob: -15.875443458557129
    8. 'self' → logprob: -16.125444412231445
    9. '```' → logprob: -16.375444412231445
    10. '__((' → logprob: -16.750444412231445

Token 666: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2200749754119897e-06
    2. '):
' → logprob: -13.875001907348633
    3. ' self' → logprob: -14.000001907348633
    4. ')' → logprob: -15.625001907348633
    5. '
' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '(self' → logprob: -17.875001907348633
    8. '       ' → logprob: -18.125001907348633
    9. '	self' → logprob: -18.625001907348633
    10. 'elf' → logprob: -18.875001907348633

Token 667: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15170660614967346
    2. '):' → logprob: -2.2767066955566406
    3. 'self' → logprob: -3.2767066955566406
    4. ',' → logprob: -8.77670669555664
    5. '   ' → logprob: -9.27670669555664
    6. '(self' → logprob: -9.77670669555664
    7. '       ' → logprob: -10.77670669555664
    8. ' self' → logprob: -10.90170669555664
    9. '):
' → logprob: -11.15170669555664
    10. ')' → logprob: -11.77670669555664

Token 668: ' M' (ID: 391)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5527859330177307
    2. 'self' → logprob: -1.052785873413086
    3. '):' → logprob: -2.677785873413086
    4. 'roads' → logprob: -5.177785873413086
    5. ')' → logprob: -7.802785873413086
    6. '   ' → logprob: -8.177785873413086
    7. 'signals' → logprob: -8.927785873413086
    8. '):

' → logprob: -9.052785873413086
    9. '
' → logprob: -9.427785873413086
    10. ' roads' → logprob: -9.677785873413086

Token 669: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016234104987233877
    2. '):' → logprob: -6.751623630523682
    3. ' ,' → logprob: -8.501623153686523
    4. ':' → logprob: -9.126623153686523
    5. '):
' → logprob: -9.376623153686523
    6. '=' → logprob: -11.001623153686523
    7. '   ' → logprob: -11.376623153686523
    8. ',
' → logprob: -11.501623153686523
    9. '  ' → logprob: -12.876623153686523
    10. '_,' → logprob: -13.251623153686523

Token 670: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0038811923004686832
    2. 'dict' → logprob: -5.878880977630615
    3. 'Dict' → logprob: -8.378881454467773
    4. '):
' → logprob: -8.378881454467773
    5. '):' → logprob: -8.753881454467773
    6. ' int' → logprob: -8.878881454467773
    7. ')' → logprob: -9.253881454467773
    8. '   ' → logprob: -9.503881454467773
    9. 'List' → logprob: -10.378881454467773
    10. 'list' → logprob: -10.503881454467773

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1957206279039383
    2. '):' → logprob: -1.8207206726074219
    3. '):
' → logprob: -4.195720672607422
    4. ' ,' → logprob: -7.695720672607422
    5. '=' → logprob: -8.945720672607422
    6. ' ):' → logprob: -9.695720672607422
    7. '):
' → logprob: -9.945720672607422
    8. '   ' → logprob: -10.195720672607422
    9. ')' → logprob: -10.820720672607422
    10. ':' → logprob: -11.320720672607422

Token 672: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0275932215154171
    2. ' N' → logprob: -3.9025931358337402
    3. 'signals' → logprob: -5.77759313583374
    4. 'roads' → logprob: -6.40259313583374
    5. ' roads' → logprob: -7.65259313583374
    6. ' signals' → logprob: -8.152593612670898
    7. 'L' → logprob: -8.277593612670898
    8. 'K' → logprob: -8.652593612670898
    9. ' ' → logprob: -8.902593612670898
    10. 'E' → logprob: -9.027593612670898

Token 673: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006766768172383308
    2. ':' → logprob: -5.2567667961120605
    3. '):
' → logprob: -6.8817667961120605
    4. ',' → logprob: -7.7567667961120605
    5. ')' → logprob: -10.631766319274902
    6. ' ):' → logprob: -10.756766319274902
    7. '   ' → logprob: -11.881766319274902
    8. '=' → logprob: -12.006766319274902
    9. ':int' → logprob: -12.256766319274902
    10. '}:' → logprob: -13.006766319274902

Token 674: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006229649879969656
    2. ' int' → logprob: -7.625622749328613
    3. 'str' → logprob: -9.500622749328613
    4. ')' → logprob: -10.750622749328613
    5. '   ' → logprob: -11.125622749328613
    6. '[int' → logprob: -11.625622749328613
    7. '):
' → logprob: -13.250622749328613
    8. 'M' → logprob: -13.875622749328613
    9. ' str' → logprob: -13.875622749328613
    10. 'List' → logprob: -14.000622749328613

Token 675: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.039040323346853256
    2. '):
' → logprob: -3.2890403270721436
    3. ',' → logprob: -7.0390400886535645
    4. ':' → logprob: -9.789040565490723
    5. '):
' → logprob: -10.414040565490723
    6. ' ):' → logprob: -11.164040565490723
    7. '   ' → logprob: -11.539040565490723
    8. ')' → logprob: -12.164040565490723
    9. '=' → logprob: -13.789040565490723
    10. '  ' → logprob: -14.039040565490723

Token 676: ' base' (ID: 3611)
  Prédit: 'signals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'signals' → logprob: -0.1179470345377922
    2. 'roads' → logprob: -2.6179471015930176
    3. ' signals' → logprob: -4.492947101593018
    4. 'traffic' → logprob: -4.992947101593018
    5. 'road' → logprob: -5.492947101593018
    6. 'east' → logprob: -5.742947101593018
    7. ' roads' → logprob: -5.867947101593018
    8. 'signal' → logprob: -5.992947101593018
    9. 'coordinates' → logprob: -6.492947101593018
    10. 'E' → logprob: -6.992947101593018

Token 677: '_tr' (ID: 7410)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03617315739393234
    2. '_tr' → logprob: -3.911173105239868
    3. '_times' → logprob: -4.661173343658447
    4. '_' → logprob: -5.661173343658447
    5. '_ro' → logprob: -6.286173343658447
    6. '_delay' → logprob: -8.911172866821289
    7. '_speed' → logprob: -8.911172866821289
    8. 'time' → logprob: -9.661172866821289
    9. '_wait' → logprob: -9.786172866821289
    10. '_t' → logprob: -9.786172866821289

Token 678: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -0.001269993488676846
    2. 'av' → logprob: -7.126269817352295
    3. 'a' → logprob: -8.251270294189453
    4. 'ave' → logprob: -9.751270294189453
    5. 'aff' → logprob: -10.251270294189453
    6. 'ans' → logprob: -10.501270294189453
    7. '_time' → logprob: -11.251270294189453
    8. 'avers' → logprob: -11.376270294189453
    9. 'af' → logprob: -11.751270294189453
    10. 'aveled' → logprob: -12.001270294189453

Token 679: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.01648297719657421
    2. '_times' → logprob: -4.141482830047607
    3. 'time' → logprob: -8.641483306884766
    4. '=' → logprob: -9.516483306884766
    5. 'times' → logprob: -9.766483306884766
    6. '   ' → logprob: -10.391483306884766
    7. '_t' → logprob: -10.766483306884766
    8. 's' → logprob: -11.016483306884766
    9. 'Time' → logprob: -11.266483306884766
    10. 'ime' → logprob: -11.266483306884766

Token 680: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6562577486038208
    2. ':' → logprob: -0.7812577486038208
    3. '):
' → logprob: -4.281257629394531
    4. '=' → logprob: -4.781257629394531
    5. 's' → logprob: -7.656257629394531
    6. ' ):' → logprob: -8.031257629394531
    7. '_per' → logprob: -9.406257629394531
    8. ',' → logprob: -9.656257629394531
    9. ')' → logprob: -9.781257629394531
    10. ':int' → logprob: -10.406257629394531

Token 681: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.575698733329773
    2. 'int' → logprob: -0.950698733329773
    3. '5' → logprob: -3.5756988525390625
    4. ' int' → logprob: -4.8256988525390625
    5. '2' → logprob: -5.0756988525390625
    6. ' ' → logprob: -5.7006988525390625
    7. '10' → logprob: -5.8256988525390625
    8. '3' → logprob: -6.3256988525390625
    9. '60' → logprob: -8.200698852539062
    10. '   ' → logprob: -9.325698852539062

Token 682: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.399740070104599
    2. '):
' → logprob: -1.1497400999069214
    3. ',' → logprob: -4.399740219116211
    4. '=' → logprob: -8.774740219116211
    5. '):
' → logprob: -8.899740219116211
    6. '   ' → logprob: -9.149740219116211
    7. '       ' → logprob: -9.649740219116211
    8. ':' → logprob: -10.899740219116211
    9. ')' → logprob: -11.149740219116211
    10. '=None' → logprob: -12.774740219116211

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.6934557505883276e-05
    2. 'self' → logprob: -10.125057220458984
    3. ':' → logprob: -12.500057220458984
    4. ',' → logprob: -12.625057220458984
    5. '):
' → logprob: -12.750057220458984
    6. '   ' → logprob: -13.000057220458984
    7. ' self' → logprob: -13.125057220458984
    8. '```' → logprob: -14.250057220458984
    9. ')' → logprob: -14.625057220458984
    10. '        
' → logprob: -15.250057220458984

Token 684: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002132656052708626
    2. '       ' → logprob: -6.252132892608643
    3. ' self' → logprob: -8.502132415771484
    4. '	self' → logprob: -14.252132415771484
    5. '   ' → logprob: -16.127132415771484
    6. 'super' → logprob: -16.377132415771484
    7. '(self' → logprob: -16.877132415771484
    8. '#' → logprob: -17.377132415771484
    9. '
' → logprob: -17.877132415771484
    10. ' ' → logprob: -18.127132415771484

Token 685: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.0007573349867016077
    2. '.ro' → logprob: -8.125757217407227
    3. '.rows' → logprob: -8.500757217407227
    4. '.grid' → logprob: -9.250757217407227
    5. '.m' → logprob: -10.000757217407227
    6. '.e' → logprob: -10.375757217407227
    7. '.width' → logprob: -10.375757217407227
    8. '.E' → logprob: -11.250757217407227
    9. '.' → logprob: -11.625757217407227
    10. '.size' → logprob: -11.875757217407227

Token 686: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11297255009412766
    2. '=' → logprob: -2.2379724979400635
    3. ',' → logprob: -8.987972259521484
    4. ' ' → logprob: -10.987972259521484
    5. ' =
' → logprob: -12.612972259521484
    6. ' ,' → logprob: -12.612972259521484
    7. '=M' → logprob: -14.112972259521484
    8. '    ' → logprob: -15.362972259521484
    9. '=
' → logprob: -15.487972259521484
    10. '   ' → logprob: -15.612972259521484

Token 687: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0006266565760597587
    2. ' M' → logprob: -7.375626564025879
    3. '   ' → logprob: -18.000627517700195
    4. 'm' → logprob: -18.000627517700195
    5. '<|end|>' → logprob: -18.000627517700195
    6. ' ' → logprob: -18.125627517700195
    7. '	M' → logprob: -18.375627517700195
    8. '    ' → logprob: -19.125627517700195
    9. '  ' → logprob: -19.250627517700195
    10. '<M' → logprob: -19.375627517700195

Token 688: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07954814285039902
    2. '
' → logprob: -2.5795481204986572
    3. '<|end|>' → logprob: -7.829548358917236
    4. '        
' → logprob: -8.704547882080078
    5. ',' → logprob: -10.204547882080078
    6. '      ' → logprob: -11.454547882080078
    7. ' 
' → logprob: -11.829547882080078
    8. '   ' → logprob: -11.954547882080078
    9. '  
' → logprob: -12.204547882080078
    10. '<|end|>' → logprob: -12.454547882080078

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011801084037870169
    2. '
' → logprob: -7.251180171966553
    3. 'self' → logprob: -7.751180171966553
    4. ',' → logprob: -10.626179695129395
    5. ' self' → logprob: -12.001179695129395
    6. '<|end|>' → logprob: -12.251179695129395
    7. '        
' → logprob: -13.376179695129395
    8. '      ' → logprob: -14.501179695129395
    9. '   ' → logprob: -14.501179695129395
    10. ',
' → logprob: -15.001179695129395

Token 690: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008659723214805126
    2. ' self' → logprob: -4.758659839630127
    3. 'N' → logprob: -10.133659362792969
    4. '       ' → logprob: -12.258659362792969
    5. ' N' → logprob: -14.883659362792969
    6. '   ' → logprob: -15.633659362792969
    7. '	self' → logprob: -17.00865936279297
    8. '
' → logprob: -17.25865936279297
    9. '        ' → logprob: -17.75865936279297
    10. '(self' → logprob: -18.13365936279297

Token 691: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.001892341417260468
    2. '.' → logprob: -6.626892566680908
    3. 'N' → logprob: -8.00189208984375
    4. '   ' → logprob: -9.62689208984375
    5. '=' → logprob: -9.75189208984375
    6. '.M' → logprob: -10.00189208984375
    7. ' =' → logprob: -10.25189208984375
    8. ' .' → logprob: -11.50189208984375
    9. '=N' → logprob: -12.25189208984375
    10. ' N' → logprob: -13.00189208984375

Token 692: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.059222936630249
    2. '=' → logprob: -1.184222936630249
    3. '       ' → logprob: -1.559222936630249
    4. '
' → logprob: -2.684222936630249
    5. '<|end|>' → logprob: -2.934222936630249
    6. ',' → logprob: -4.809223175048828
    7. '        ' → logprob: -5.934223175048828
    8. ' ' → logprob: -6.809223175048828
    9. '        
' → logprob: -6.934223175048828
    10. '<|end|>' → logprob: -7.184223175048828

Token 693: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.1080467781284824e-05
    2. ' N' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.375041007995605
    4. ' ' → logprob: -15.625041007995605
    5. '  ' → logprob: -16.500041961669922
    6. 'M' → logprob: -16.500041961669922
    7. '    ' → logprob: -16.875041961669922
    8. 'n' → logprob: -17.625041961669922
    9. '	N' → logprob: -17.875041961669922
    10. '     ' → logprob: -18.375041961669922

Token 694: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.074907287256792e-05
    2. '<|end|>' → logprob: -10.62506103515625
    3. 'self' → logprob: -11.25006103515625
    4. ',' → logprob: -11.37506103515625
    5. '
' → logprob: -11.75006103515625
    6. '        
' → logprob: -14.00006103515625
    7. ' self' → logprob: -14.50006103515625
    8. '```' → logprob: -14.50006103515625
    9. '#' → logprob: -14.87506103515625
    10. '   ' → logprob: -15.25006103515625

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.76628842484206e-05
    2. 'self' → logprob: -9.625067710876465
    3. ' self' → logprob: -14.625067710876465
    4. '   ' → logprob: -15.375067710876465
    5. 'from' → logprob: -16.12506675720215
    6. '<|end|>' → logprob: -16.12506675720215
    7. '
' → logprob: -16.37506675720215
    8. '      ' → logprob: -16.62506675720215
    9. '```' → logprob: -16.62506675720215
    10. ',' → logprob: -16.62506675720215

Token 696: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.20603168499656e-05
    2. '       ' → logprob: -10.000061988830566
    3. 'base' → logprob: -11.625061988830566
    4. ' self' → logprob: -11.875061988830566
    5. '
' → logprob: -15.750061988830566
    6. '   ' → logprob: -15.875061988830566
    7. '#' → logprob: -16.250062942504883
    8. 'from' → logprob: -16.375062942504883
    9. '        
' → logprob: -16.375062942504883
    10. '	self' → logprob: -16.625062942504883

Token 697: '.base' (ID: 15523)
  Prédit: '.ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -0.0174858495593071
    2. '.base' → logprob: -4.892485618591309
    3. '.sign' → logprob: -5.017485618591309
    4. '.grid' → logprob: -6.642485618591309
    5. '.' → logprob: -6.767485618591309
    6. '.coordinates' → logprob: -8.142485618591309
    7. '.edges' → logprob: -9.392485618591309
    8. '.e' → logprob: -9.892485618591309
    9. '.inter' → logprob: -10.017485618591309
    10. 'roads' → logprob: -10.142485618591309

Token 698: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.016119997948408127
    2. '_time' → logprob: -4.141119956970215
    3. '_' → logprob: -10.391119956970215
    4. '_ro' → logprob: -10.516119956970215
    5. 'travel' → logprob: -11.766119956970215
    6. 'tr' → logprob: -12.141119956970215
    7. '```' → logprob: -12.641119956970215
    8. '   ' → logprob: -12.891119956970215
    9. 'time' → logprob: -13.141119956970215
    10. '_times' → logprob: -13.266119956970215

Token 699: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -1.981667537620524e-06
    2. 'av' → logprob: -13.750001907348633
    3. 'vel' → logprob: -15.000001907348633
    4. 'a' → logprob: -15.250001907348633
    5. 'ave' → logprob: -15.875001907348633
    6. 'AVEL' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '```' → logprob: -17.375001907348633
    9. '#' → logprob: -17.500001907348633
    10. '_time' → logprob: -18.000001907348633

Token 700: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -7.896309739408025e-07
    2. 'time' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.375000953674316
    4. 'ime' → logprob: -16.5
    5. '_' → logprob: -16.875
    6. '_times' → logprob: -18.0
    7. ' time' → logprob: -18.5
    8. ' _' → logprob: -18.625
    9. '       ' → logprob: -18.625
    10. 'e' → logprob: -18.875

Token 701: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326557397842407
    2. ' =' → logprob: -0.7576557397842407
    3. ' ' → logprob: -10.38265609741211
    4. '    ' → logprob: -11.63265609741211
    5. '   ' → logprob: -12.38265609741211
    6. '<|end|>' → logprob: -12.88265609741211
    7. '_' → logprob: -13.00765609741211
    8. ')' → logprob: -13.00765609741211
    9. 'import' → logprob: -14.00765609741211
    10. '[' → logprob: -14.25765609741211

Token 702: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.038044244050979614
    2. ' base' → logprob: -3.2880442142486572
    3. '   ' → logprob: -13.663043975830078
    4. ' ' → logprob: -14.038043975830078
    5. '	base' → logprob: -15.538043975830078
    6. '
' → logprob: -15.913043975830078
    7. '  ' → logprob: -16.288043975830078
    8. '(base' → logprob: -16.413043975830078
    9. '    ' → logprob: -16.663043975830078
    10. ' ' → logprob: -17.163043975830078

Token 703: '_tr' (ID: 7410)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.029751762747764587
    2. '_tr' → logprob: -3.529751777648926
    3. 'travel' → logprob: -14.404751777648926
    4. 'time' → logprob: -15.154751777648926
    5. 'Travel' → logprob: -16.15475082397461
    6. '_trip' → logprob: -16.27975082397461
    7. '_' → logprob: -16.65475082397461
    8. '   ' → logprob: -17.15475082397461
    9. 'tr' → logprob: -17.77975082397461
    10. '_t' → logprob: -17.77975082397461

Token 704: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -3.0590548703912646e-05
    2. 'vel' → logprob: -11.625030517578125
    3. 'av' → logprob: -12.000030517578125
    4. 'a' → logprob: -12.125030517578125
    5. 'el' → logprob: -12.625030517578125
    6. 'ave' → logprob: -12.750030517578125
    7. '_time' → logprob: -13.500030517578125
    8. 'time' → logprob: -14.250030517578125
    9. 'travel' → logprob: -14.625030517578125
    10. '```' → logprob: -15.375030517578125

Token 705: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.018504580482840538
    2. 'time' → logprob: -4.268504619598389
    3. 'e' → logprob: -6.018504619598389
    4. 'ime' → logprob: -6.268504619598389
    5. ' time' → logprob: -13.51850414276123
    6. 'etime' → logprob: -13.64350414276123
    7. '   ' → logprob: -14.89350414276123
    8. 'Time' → logprob: -15.39350414276123
    9. '-time' → logprob: -16.268505096435547
    10. '_TIME' → logprob: -16.393505096435547

Token 706: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013464801304508
    2. '
' → logprob: -9.375134468078613
    3. ',' → logprob: -11.125134468078613
    4. 'self' → logprob: -11.125134468078613
    5. '        
' → logprob: -11.625134468078613
    6. '<|end|>' → logprob: -12.000134468078613
    7. '	' → logprob: -13.875134468078613
    8. ' self' → logprob: -14.375134468078613
    9. ',
' → logprob: -14.625134468078613
    10. '```' → logprob: -14.750134468078613

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.407366916188039e-05
    2. 'self' → logprob: -9.875054359436035
    3. ' self' → logprob: -13.625054359436035
    4. ',' → logprob: -14.750054359436035
    5. '   ' → logprob: -14.750054359436035
    6. '
' → logprob: -15.375054359436035
    7. '<|end|>' → logprob: -16.25005340576172
    8. '```' → logprob: -16.75005340576172
    9. '        
' → logprob: -17.00005340576172
    10. '	self' → logprob: -17.25005340576172

Token 708: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002273774443892762
    2. '#' → logprob: -8.875226974487305
    3. '       ' → logprob: -9.375226974487305
    4. ' self' → logprob: -12.875226974487305
    5. '        
' → logprob: -16.625226974487305
    6. '	self' → logprob: -17.125226974487305
    7. '
' → logprob: -17.125226974487305
    8. '   ' → logprob: -18.000226974487305
    9. '           ' → logprob: -19.125226974487305
    10. '[self' → logprob: -19.250226974487305

Token 709: '.sign' (ID: 27578)
  Prédit: '.ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -0.03561686351895332
    2. '.sign' → logprob: -3.785616874694824
    3. '.coordinates' → logprob: -5.410616874694824
    4. '.' → logprob: -5.535616874694824
    5. '.inter' → logprob: -5.910616874694824
    6. '.coords' → logprob: -7.660616874694824
    7. '.coord' → logprob: -8.285616874694824
    8. '.grid' → logprob: -8.910616874694824
    9. '.edges' → logprob: -9.410616874694824
    10. '.nodes' → logprob: -9.660616874694824

Token 710: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -3.2020991056924686e-05
    2. 'al' → logprob: -10.375032424926758
    3. '   ' → logprob: -15.500032424926758
    4. '```' → logprob: -16.250032424926758
    5. 'signals' → logprob: -16.375032424926758
    6. '#' → logprob: -16.750032424926758
    7. ' als' → logprob: -17.125032424926758
    8. 'aling' → logprob: -17.125032424926758
    9. '__' → logprob: -17.375032424926758
    10. 'els' → logprob: -17.375032424926758

Token 711: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254197597503662
    2. ' =' → logprob: -1.6004197597503662
    3. ':' → logprob: -12.100419998168945
    4. ' ' → logprob: -15.100419998168945
    5. '={}' → logprob: -15.350419998168945
    6. 's' → logprob: -15.475419998168945
    7. '=[]' → logprob: -15.475419998168945
    8. '[' → logprob: -15.975419998168945
    9. '_map' → logprob: -16.600419998168945
    10. ')' → logprob: -16.725419998168945

Token 712: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0024543688632547855
    2. 'dict' → logprob: -6.2524542808532715
    3. 'default' → logprob: -7.6274542808532715
    4. '{' → logprob: -10.37745475769043
    5. '{}
' → logprob: -12.75245475769043
    6. ' dict' → logprob: -13.12745475769043
    7. ' {}' → logprob: -13.25245475769043
    8. '[]' → logprob: -14.37745475769043
    9. '{}

' → logprob: -15.87745475769043
    10. ' defaultdict' → logprob: -16.00245475769043

Token 713: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017076305812224746
    2. '()
' → logprob: -8.750170707702637
    3. '()<' → logprob: -12.125170707702637
    4. '()

' → logprob: -12.750170707702637
    5. '()\' → logprob: -13.875170707702637
    6. '{}' → logprob: -14.250170707702637
    7. '()}' → logprob: -14.875170707702637
    8. '()]' → logprob: -14.875170707702637
    9. '())' → logprob: -15.250170707702637
    10. '()`' → logprob: -15.500170707702637

Token 714: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012613063445314765
    2. 'self' → logprob: -7.001261234283447
    3. '<|end|>' → logprob: -8.376261711120605
    4. ' self' → logprob: -9.876261711120605
    5. '(self' → logprob: -10.251261711120605
    6. ',' → logprob: -11.501261711120605
    7. '   ' → logprob: -11.751261711120605
    8. 'from' → logprob: -13.126261711120605
    9. '
' → logprob: -13.251261711120605
    10. ' ' → logprob: -13.501261711120605

Token 715: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.619083821773529
    2. 'self' → logprob: -1.7440838813781738
    3. '<|end|>' → logprob: -1.7440838813781738
    4. '(self' → logprob: -3.119083881378174
    5. '()' → logprob: -3.244083881378174
    6. ' self' → logprob: -4.119083881378174
    7. '#' → logprob: -5.119083881378174
    8. '
' → logprob: -6.744083881378174
    9. ' ' → logprob: -6.744083881378174
    10. '[self' → logprob: -7.244083881378174

Token 716: ' Coordinate' (ID: 78454)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4929611384868622
    2. '{}' → logprob: -1.6179611682891846
    3. '()' → logprob: -2.1179611682891846
    4. 'Coordinates' → logprob: -3.8679611682891846
    5. '#' → logprob: -3.9929611682891846
    6. 'Coordinate' → logprob: -4.1179609298706055
    7. '{' → logprob: -5.8679609298706055
    8. ')' → logprob: -5.8679609298706055
    9. ' self' → logprob: -5.8679609298706055
    10. '       ' → logprob: -6.4929609298706055

Token 717: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25373804569244385
    2. '->' → logprob: -2.1287379264831543
    3. ' ->' → logprob: -3.0037379264831543
    4. ')' → logprob: -3.5037379264831543
    5. '<|end|>' → logprob: -4.628737926483154
    6. ',' → logprob: -5.003737926483154
    7. ' to' → logprob: -5.128737926483154
    8. ']' → logprob: -6.878737926483154
    9. 'to' → logprob: -7.753737926483154
    10. '=>' → logprob: -8.253738403320312

Token 718: ' Traffic' (ID: 52059)
  Prédit: 'Traffic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -2.7610454708337784e-05
    2. ' Traffic' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.50002670288086
    4. 'traffic' → logprob: -19.75002670288086
    5. 'Signal' → logprob: -21.25002670288086
    6. ' traffic' → logprob: -21.37502670288086
    7. '           ' → logprob: -22.00002670288086
    8. 'T' → logprob: -22.00002670288086
    9. 'Tra' → logprob: -22.12502670288086
    10. ' ' → logprob: -22.25002670288086

Token 719: 'Signal' (ID: 31411)
  Prédit: 'Signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Signal' → logprob: -7.896309739408025e-07
    2. 'signal' → logprob: -14.625000953674316
    3. '_signal' → logprob: -15.375000953674316
    4. ' signal' → logprob: -18.75
    5. ' Signal' → logprob: -19.25
    6. '_SIGNAL' → logprob: -19.875
    7. 'Sign' → logprob: -20.125
    8. '.Signal' → logprob: -20.875
    9. 'Traffic' → logprob: -21.75
    10. 'Signals' → logprob: -22.0

Token 720: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006028453819453716
    2. 'self' → logprob: -5.131028652191162
    3. '<|end|>' → logprob: -10.381028175354004
    4. ' self' → logprob: -10.506028175354004
    5. ',' → logprob: -10.631028175354004
    6. '
' → logprob: -12.131028175354004
    7. '   ' → logprob: -12.381028175354004
    8. '```' → logprob: -13.506028175354004
    9. '(self' → logprob: -13.881028175354004
    10. '        
' → logprob: -13.881028175354004

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019368429202586412
    2. 'self' → logprob: -6.251936912536621
    3. ' self' → logprob: -12.001936912536621
    4. '   ' → logprob: -13.501936912536621
    5. ',' → logprob: -15.626936912536621
    6. '	self' → logprob: -15.626936912536621
    7. '           ' → logprob: -16.251935958862305
    8. '<|end|>' → logprob: -16.501935958862305
    9. '```' → logprob: -16.876935958862305
    10. '	' → logprob: -17.001935958862305

Token 722: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0015900811413303018
    2. '       ' → logprob: -6.626590251922607
    3. ' self' → logprob: -8.25158977508545
    4. '
' → logprob: -13.12658977508545
    5. '   ' → logprob: -14.37658977508545
    6. '	self' → logprob: -14.75158977508545
    7. '[self' → logprob: -16.376590728759766
    8. ' ' → logprob: -17.251590728759766
    9. '```' → logprob: -17.376590728759766
    10. '           ' → logprob: -17.626590728759766

Token 723: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -0.00022999993234407157
    2. '.' → logprob: -8.625229835510254
    3. 'roads' → logprob: -11.125229835510254
    4. '.edges' → logprob: -11.125229835510254
    5. '_ro' → logprob: -11.375229835510254
    6. ' roads' → logprob: -12.500229835510254
    7. ' .' → logprob: -12.875229835510254
    8. '.r' → logprob: -14.500229835510254
    9. '.connections' → logprob: -14.500229835510254
    10. '._' → logprob: -15.250229835510254

Token 724: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -4.008129963040119e-06
    2. 'ad' → logprob: -12.625003814697266
    3. ' ads' → logprob: -15.250003814697266
    4. 'a' → logprob: -16.125003814697266
    5. '_ads' → logprob: -16.625003814697266
    6. '_' → logprob: -16.750003814697266
    7. '
' → logprob: -17.625003814697266
    8. '.ads' → logprob: -17.750003814697266
    9. '#' → logprob: -17.875003814697266
    10. '=' → logprob: -18.500003814697266

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141665637493134
    2. ' =' → logprob: -1.7014166116714478
    3. ':' → logprob: -13.701416969299316
    4. ' ' → logprob: -13.951416969299316
    5. '   ' → logprob: -14.576416969299316
    6. '={}' → logprob: -14.951416969299316
    7. ',' → logprob: -15.826416969299316
    8. '{' → logprob: -16.451416015625
    9. '  ' → logprob: -16.951416015625
    10. '={' → logprob: -16.951416015625

Token 726: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.10975659638643265
    2. '[]' → logprob: -2.6097567081451416
    3. 'dict' → logprob: -3.6097567081451416
    4. '{}' → logprob: -5.7347564697265625
    5. '{' → logprob: -9.859756469726562
    6. ' defaultdict' → logprob: -10.984756469726562
    7. 'list' → logprob: -10.984756469726562
    8. 'def' → logprob: -11.734756469726562
    9. ' dict' → logprob: -13.109756469726562
    10. ' []' → logprob: -13.234756469726562

Token 727: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00040815072134137154
    2. '()
' → logprob: -8.000408172607422
    3. '()<' → logprob: -10.375408172607422
    4. '()

' → logprob: -11.625408172607422
    5. '()>' → logprob: -11.750408172607422
    6. '())' → logprob: -12.625408172607422
    7. '(),' → logprob: -12.750408172607422
    8. '()]' → logprob: -13.125408172607422
    9. '()</' → logprob: -13.125408172607422
    10. '()\' → logprob: -13.250408172607422

Token 728: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0034258009400218725
    2. '()
' → logprob: -6.753425598144531
    3. '       ' → logprob: -7.378425598144531
    4. ' =' → logprob: -7.503425598144531
    5. '{' → logprob: -7.878425598144531
    6. '{}' → logprob: -8.503425598144531
    7. '<|end|>' → logprob: -9.253425598144531
    8. ':' → logprob: -9.503425598144531
    9. '=' → logprob: -9.753425598144531
    10. '#' → logprob: -9.753425598144531

Token 729: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007635732181370258
    2. '       ' → logprob: -5.382635593414307
    3. '()
' → logprob: -6.757635593414307
    4. '   ' → logprob: -7.257635593414307
    5. '#' (adapté à ' #') → logprob: -7.382635593414307
    6. ':' → logprob: -8.632636070251465
    7. 'from' → logprob: -9.257636070251465
    8. 'default' → logprob: -10.132636070251465
    9. ' =' → logprob: -10.382636070251465
    10. '(),' → logprob: -10.507636070251465

Token 730: ' fro' (ID: 16956)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.08820969611406326
    2. '(default' → logprob: -2.713209629058838
    3. '(Co' → logprob: -4.713209629058838
    4. 'tuple' → logprob: -5.713209629058838
    5. '{}' → logprob: -6.213209629058838
    6. ' (' → logprob: -6.963209629058838
    7. '(C' → logprob: -7.588209629058838
    8. '(tuple' → logprob: -8.088210105895996
    9. 'Tuple' → logprob: -8.213210105895996
    10. '()' → logprob: -8.213210105895996

Token 731: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -2.7014437364414334e-05
    2. 'zen' → logprob: -10.87502670288086
    3. 'zend' → logprob: -12.12502670288086
    4. 'zes' → logprob: -13.75002670288086
    5. 'zent' → logprob: -14.37502670288086
    6. 'ze' → logprob: -15.37502670288086
    7. 'zon' → logprob: -15.50002670288086
    8. 'z' → logprob: -16.62502670288086
    9. 'zs' → logprob: -16.87502670288086
    10. 'zem' → logprob: -16.87502670288086

Token 732: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.0022031900007277727
    2. 'set' → logprob: -6.252202987670898
    3. 'ess' → logprob: -9.127202987670898
    4. 'ze' → logprob: -9.627202987670898
    5. 'ize' → logprob: -10.127202987670898
    6. 'ets' → logprob: -10.877202987670898
    7. 'ite' → logprob: -11.502202987670898
    8. 'zens' → logprob: -12.377202987670898
    9. 'es' → logprob: -12.752202987670898
    10. 'zen' → logprob: -13.002202987670898

Token 733: '{' (ID: 90)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.20908226072788239
    2. '([' → logprob: -2.3340823650360107
    3. '{' → logprob: -2.5840823650360107
    4. '[(' → logprob: -4.959082126617432
    5. '((' → logprob: -5.709082126617432
    6. '[' → logprob: -6.459082126617432
    7. '([(' → logprob: -6.709082126617432
    8. 'fro' → logprob: -7.209082126617432
    9. ')' → logprob: -7.459082126617432
    10. '()' → logprob: -7.584082126617432

Token 734: 'Coordinate' (ID: 40872)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.34237241744995117
    2. '{' → logprob: -1.5923724174499512
    3. '([' → logprob: -2.717372417449951
    4. '(Co' → logprob: -4.342372417449951
    5. 'Coordinate' → logprob: -5.592372417449951
    6. '}' → logprob: -6.217372417449951
    7. '((' → logprob: -7.342372417449951
    8. '[' → logprob: -8.09237289428711
    9. '(C' → logprob: -8.21737289428711
    10. '({'' → logprob: -9.59237289428711

Token 735: ',' (ID: 11)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.4685877859592438
    2. '}' → logprob: -1.5935877561569214
    3. '({' → logprob: -1.9685877561569214
    4. ',' → logprob: -4.218587875366211
    5. '((' → logprob: -4.468587875366211
    6. '{' → logprob: -6.093587875366211
    7. '(self' → logprob: -7.593587875366211
    8. '}:' → logprob: -7.718587875366211
    9. '([(' → logprob: -7.718587875366211
    10. '[' → logprob: -8.343587875366211

Token 736: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.003846032777801156
    2. '[' → logprob: -6.628846168518066
    3. 'fro' → logprob: -6.878846168518066
    4. '}' → logprob: -7.128846168518066
    5. ' Coordinate' → logprob: -8.753846168518066
    6. '{' → logprob: -8.878846168518066
    7. ' fro' → logprob: -9.003846168518066
    8. '(Co' → logprob: -9.378846168518066
    9. '[f' → logprob: -10.003846168518066
    10. '_coordinate' → logprob: -10.503846168518066

Token 737: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.002835899591445923
    2. '}:' → logprob: -6.252835750579834
    3. ']' → logprob: -7.252835750579834
    4. ']}' → logprob: -10.252836227416992
    5. '}=' → logprob: -10.377836227416992
    6. '}]' → logprob: -11.127836227416992
    7. '},' → logprob: -11.127836227416992
    8. ')' → logprob: -11.252836227416992
    9. ' }' → logprob: -11.377836227416992
    10. ':' → logprob: -11.502836227416992

Token 738: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7345241904258728
    2. ':' → logprob: -1.4845242500305176
    3. ' =' → logprob: -1.8595242500305176
    4. '=' → logprob: -2.8595242500305176
    5. ',' → logprob: -3.9845242500305176
    6. '():' → logprob: -4.109524250030518
    7. ')' → logprob: -4.234524250030518
    8. ' :' → logprob: -4.984524250030518
    9. ']' → logprob: -5.234524250030518
    10. '):' → logprob: -5.609524250030518

Token 739: ' Road' (ID: 12497)
  Prédit: 'Road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Road' → logprob: -0.011048170737922192
    2. ' Road' → logprob: -4.511048316955566
    3. ' road' → logprob: -15.136048316955566
    4. 'road' → logprob: -16.26104736328125
    5. '   ' → logprob: -17.51104736328125
    6. 'R' → logprob: -18.51104736328125
    7. ' ' → logprob: -19.01104736328125
    8. 'Rod' → logprob: -19.63604736328125
    9. 'Ro' → logprob: -19.88604736328125
    10. 'ROAD' → logprob: -19.88604736328125

Token 740: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06316371262073517
    2. '
' → logprob: -3.1881637573242188
    3. '<|end|>' → logprob: -4.438163757324219
    4. '    
' → logprob: -5.188163757324219
    5. 'def' → logprob: -6.438163757324219
    6. '<|end|>' → logprob: -8.188163757324219
    7. ' def' → logprob: -8.313163757324219
    8. '        
' → logprob: -8.813163757324219
    9. '       ' → logprob: -9.813163757324219
    10. '```' → logprob: -10.313163757324219

Token 742: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6194250583648682
    2. '<|end|>' → logprob: -1.1194250583648682
    3. '   ' → logprob: -2.369425058364868
    4. '       ' → logprob: -3.744425058364868
    5. 'def' → logprob: -4.869424819946289
    6. '<|end|>' → logprob: -5.994424819946289
    7. '

' → logprob: -6.244424819946289
    8. ' def' → logprob: -6.369424819946289
    9. '    
' → logprob: -6.869424819946289
    10. ' ' → logprob: -7.369424819946289

Token 743: ' Adj' (ID: 127193)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.024134874343872
    2. '#' → logprob: -1.399134874343872
    3. ' for' → logprob: -1.524134874343872
    4. '       ' → logprob: -2.399134874343872
    5. 'self' → logprob: -3.024134874343872
    6. 'def' → logprob: -4.149134635925293
    7. ' self' → logprob: -4.399134635925293
    8. ' #' → logprob: -5.399134635925293
    9. ' def' → logprob: -6.649134635925293
    10. '   ' → logprob: -6.649134635925293

Token 744: 'acent' (ID: 28063)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -2.3676733690081164e-05
    2. 'acent' → logprob: -11.25002384185791
    3. 'ac' → logprob: -11.50002384185791
    4. '#' → logprob: -15.87502384185791
    5. 'list' → logprob: -16.125022888183594
    6. '_list' → logprob: -17.375022888183594
    7. 'acen' → logprob: -17.375022888183594
    8. 'acity' → logprob: -17.625022888183594
    9. 'ec' → logprob: -17.750022888183594
    10. '```' → logprob: -17.875022888183594

Token 745: ' intersections' (ID: 143513)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.9387795925140381
    2. 'self' → logprob: -1.438779592514038
    3. '_lists' → logprob: -2.438779592514038
    4. ' =' → logprob: -2.563779592514038
    5. '_nodes' → logprob: -3.063779592514038
    6. 'list' → logprob: -3.313779592514038
    7. '_edges' → logprob: -3.438779592514038
    8. 'acency' → logprob: -4.188779830932617
    9. 's' → logprob: -4.563779830932617
    10. '=self' → logprob: -4.938779830932617

Token 746: ' by' (ID: 656)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07957665622234344
    2. ' self' → logprob: -3.2045767307281494
    3. ' =' → logprob: -4.20457649230957
    4. '       ' → logprob: -4.82957649230957
    5. ':' → logprob: -5.57957649230957
    6. '
' → logprob: -6.07957649230957
    7. '[self' → logprob: -6.45457649230957
    8. '(self' → logprob: -6.57957649230957
    9. '   ' → logprob: -6.70457649230957
    10. '=' → logprob: -6.82957649230957

Token 747: ' coordinate' (ID: 30380)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.6146304607391357
    2. 'east' → logprob: -1.7396304607391357
    3. 'coordinate' → logprob: -1.8646304607391357
    4. 'Coordinate' → logprob: -1.8646304607391357
    5. 'self' → logprob: -2.6146304607391357
    6. 'road' → logprob: -3.1146304607391357
    7. ' coordinate' → logprob: -3.1146304607391357
    8. 'default' → logprob: -3.2396304607391357
    9. ' direction' → logprob: -3.3646304607391357
    10. '_coordinate' → logprob: -4.489630699157715

Token 748: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34282466769218445
    2. '       ' → logprob: -1.3428246974945068
    3. ' self' → logprob: -3.842824697494507
    4. '
' → logprob: -5.217824459075928
    5. '   ' → logprob: -6.967824459075928
    6. '(self' → logprob: -7.342824459075928
    7. ',' → logprob: -8.717824935913086
    8. ':' → logprob: -9.092824935913086
    9. ' =' → logprob: -9.092824935913086
    10. '        
' → logprob: -9.717824935913086

Token 749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028651393949985504
    2. 'self' → logprob: -6.127865314483643
    3. '
' → logprob: -7.752865314483643
    4. ' self' → logprob: -8.502864837646484
    5. '   ' → logprob: -10.752864837646484
    6. ',' → logprob: -11.502864837646484
    7. '(self' → logprob: -12.627864837646484
    8. '        
' → logprob: -12.877864837646484
    9. ' =' → logprob: -13.377864837646484
    10. ':' → logprob: -13.377864837646484

Token 750: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06581667065620422
    2. ' self' → logprob: -2.815816640853882
    3. '       ' → logprob: -5.565816879272461
    4. '   ' → logprob: -11.690816879272461
    5. '	self' → logprob: -12.815816879272461
    6. ' ' → logprob: -14.315816879272461
    7. ' defaultdict' → logprob: -14.440816879272461
    8. '
' → logprob: -14.565816879272461
    9. 'from' → logprob: -15.065816879272461
    10. '        
' → logprob: -15.315816879272461

Token 751: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.0024794621858745813
    2. '.ne' → logprob: -6.377479553222656
    3. '.' → logprob: -8.127479553222656
    4. 'adj' → logprob: -8.502479553222656
    5. '._' → logprob: -9.377479553222656
    6. '.edges' → logprob: -9.752479553222656
    7. '_ad' → logprob: -10.252479553222656
    8. '.connections' → logprob: -10.877479553222656
    9. '_adj' → logprob: -11.002479553222656
    10. 'neighbors' → logprob: -11.377479553222656

Token 752: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2519359588623047
    2. 'jac' → logprob: -1.5019359588623047
    3. 'js' → logprob: -12.126935958862305
    4. 'ja' → logprob: -14.501935958862305
    5. '_j' → logprob: -15.001935958862305
    6. 'jc' → logprob: -15.251935958862305
    7. 'jec' → logprob: -15.751935958862305
    8. ' jac' → logprob: -16.626935958862305
    9. 'Jac' → logprob: -16.751935958862305
    10. 'J' → logprob: -17.001935958862305

Token 753: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.07092423737049103
    2. 'ents' → logprob: -2.8209242820739746
    3. 'ent' → logprob: -4.820924282073975
    4. 'acency' → logprob: -7.320924282073975
    5. 'encies' → logprob: -9.445923805236816
    6. '_list' → logprob: -10.695923805236816
    7. '#' → logprob: -10.820923805236816
    8. 'ac' → logprob: -10.945923805236816
    9. '   ' → logprob: -11.195923805236816
    10. 'acy' → logprob: -11.820923805236816

Token 754: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693609297275543
    2. ' =' → logprob: -2.126936197280884
    3. ':' → logprob: -13.001935958862305
    4. 's' → logprob: -13.376935958862305
    5. '   ' → logprob: -13.376935958862305
    6. '_list' → logprob: -13.876935958862305
    7. '_' → logprob: -14.001935958862305
    8. ' ' → logprob: -14.876935958862305
    9. '_map' → logprob: -15.376935958862305
    10. ',' → logprob: -16.626935958862305

Token 755: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.00012403888104017824
    2. ' defaultdict' → logprob: -9.000123977661133
    3. ' default' → logprob: -14.875123977661133
    4. '.default' → logprob: -16.250123977661133
    5. '(default' → logprob: -16.250123977661133
    6. '"default' → logprob: -17.750123977661133
    7. '{' → logprob: -18.375123977661133
    8. '{}' → logprob: -18.625123977661133
    9. ''default' → logprob: -18.875123977661133
    10. '	default' → logprob: -20.000123977661133

Token 756: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.4743010699748993
    2. '(set' → logprob: -0.9743010997772217
    3. '(lambda' → logprob: -9.0993013381958
    4. '(de' → logprob: -9.5993013381958
    5. 'set' → logprob: -11.0993013381958
    6. '(<' → logprob: -11.5993013381958
    7. '(' → logprob: -11.8493013381958
    8. 'list' → logprob: -11.9743013381958
    9. '<' → logprob: -12.8493013381958
    10. '(dict' → logprob: -12.9743013381958

Token 757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.599403423024341e-05
    2. '   ' → logprob: -10.250065803527832
    3. ')

' → logprob: -11.000065803527832
    4. '       ' → logprob: -12.500065803527832
    5. ' )' → logprob: -12.500065803527832
    6. ')
' → logprob: -12.500065803527832
    7. '())' → logprob: -14.125065803527832
    8. '):' → logprob: -14.250065803527832
    9. '[' → logprob: -14.625065803527832
    10. ')`' → logprob: -15.875065803527832

Token 758: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1392531543970108
    2. '<|end|>' → logprob: -2.3892531394958496
    3. '
' → logprob: -3.3892531394958496
    4. '    
' → logprob: -6.38925313949585
    5. 'def' → logprob: -6.63925313949585
    6. '<|end|>' → logprob: -7.63925313949585
    7. '       ' → logprob: -8.139253616333008
    8. ' def' → logprob: -8.139253616333008
    9. '```' → logprob: -9.014253616333008
    10. ' ' → logprob: -9.264253616333008

Token 759: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49562710523605347
    2. 'def' → logprob: -1.3706271648406982
    3. '<|end|>' → logprob: -2.4956271648406982
    4. '       ' → logprob: -3.9956271648406982
    5. ' def' → logprob: -4.245626926422119
    6. '
' → logprob: -4.370626926422119
    7. 'for' → logprob: -5.370626926422119
    8. ' for' → logprob: -6.370626926422119
    9. '```' → logprob: -7.245626926422119
    10. '#' (adapté à ' #') → logprob: -7.745626926422119

Token 760: ' Pre' (ID: 4659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7817948460578918
    2. ' for' → logprob: -1.781794786453247
    3. 'for' → logprob: -2.406794786453247
    4. '#' → logprob: -2.406794786453247
    5. ' def' → logprob: -2.406794786453247
    6. '   ' → logprob: -3.531794786453247
    7. '
' → logprob: -3.656794786453247
    8. 'self' → logprob: -4.031795024871826
    9. '       ' → logprob: -4.531795024871826
    10. ' self' → logprob: -4.531795024871826

Token 761: 'compute' (ID: 54521)
  Prédit: 'vious'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vious' → logprob: -0.42494580149650574
    2. 'viously' → logprob: -1.7999458312988281
    3. 'compute' → logprob: -2.674945831298828
    4. 'v' → logprob: -3.549945831298828
    5. 'sent' → logprob: -4.174945831298828
    6. 'dict' → logprob: -4.299945831298828
    7. 'served' → logprob: -4.799945831298828
    8. 'fix' → logprob: -5.049945831298828
    9. 'vent' → logprob: -5.049945831298828
    10. 'sum' → logprob: -5.174945831298828

Token 762: ' valid' (ID: 4529)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22281868755817413
    2. ' for' → logprob: -1.9728187322616577
    3. '#' → logprob: -3.472818613052368
    4. 'self' → logprob: -4.222818851470947
    5. ' self' → logprob: -5.597818851470947
    6. 'east' → logprob: -6.222818851470947
    7. ' east' → logprob: -6.722818851470947
    8. ' directions' → logprob: -6.722818851470947
    9. 'horizontal' → logprob: -6.722818851470947
    10. 'def' → logprob: -7.222818851470947

Token 763: ' intersections' (ID: 143513)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.8374549746513367
    2. 'neighbors' → logprob: -1.7124550342559814
    3. 'coordinates' → logprob: -1.8374550342559814
    4. 'dire' → logprob: -2.8374550342559814
    5. ' moves' → logprob: -3.3374550342559814
    6. 'adj' → logprob: -3.4624550342559814
    7. 'east' → logprob: -4.087454795837402
    8. 'connections' → logprob: -4.212454795837402
    9. 'roads' → logprob: -4.337454795837402
    10. ' directions' → logprob: -4.962454795837402

Token 764: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33849695324897766
    2. ' for' → logprob: -1.4634969234466553
    3. 'for' → logprob: -3.2134969234466553
    4. ':' → logprob: -5.338497161865234
    5. '
' → logprob: -5.588497161865234
    6. ':
' → logprob: -6.338497161865234
    7. ',' → logprob: -6.838497161865234
    8. '   ' → logprob: -7.088497161865234
    9. '<|end|>' → logprob: -7.338497161865234
    10. ' with' → logprob: -7.338497161865234

Token 765: ' grid' (ID: 10586)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.8135609030723572
    2. 'self' → logprob: -1.063560962677002
    3. ' self' → logprob: -2.438560962677002
    4. ' east' → logprob: -2.813560962677002
    5. 'coordinates' → logprob: -5.063560962677002
    6. 'e' → logprob: -5.313560962677002
    7. '_coordinate' → logprob: -5.563560962677002
    8. 'each' → logprob: -5.688560962677002
    9. 'easy' → logprob: -5.813560962677002
    10. ' traversal' → logprob: -5.938560962677002

Token 766: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5545373558998108
    2. 'for' → logprob: -1.804537296295166
    3. ' for' → logprob: -1.929537296295166
    4. '
' → logprob: -2.679537296295166
    5. 'self' → logprob: -4.554537296295166
    6. ':' → logprob: -4.804537296295166
    7. ':
' → logprob: -5.054537296295166
    8. '<|end|>' → logprob: -5.554537296295166
    9. ',' → logprob: -6.054537296295166
    10. '   ' → logprob: -6.054537296295166

Token 767: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006606779992580414
    2. ' for' → logprob: -6.131606578826904
    3. '<|end|>' → logprob: -6.381606578826904
    4. '   ' → logprob: -6.881606578826904
    5. 'for' → logprob: -6.881606578826904
    6. '
' → logprob: -7.506606578826904
    7. '        ' → logprob: -10.756607055664062
    8. 'def' → logprob: -11.006607055664062
    9. ',' → logprob: -11.131607055664062
    10. '```' → logprob: -11.256607055664062

Token 768: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5242056846618652
    2. '       ' → logprob: -1.5242056846618652
    3. ' for' → logprob: -1.8992056846618652
    4. 'self' (adapté à ' self') → logprob: -3.5242056846618652
    5. ' self' → logprob: -4.774205684661865
    6. 'east' → logprob: -6.774205684661865
    7. ' east' → logprob: -7.274205684661865
    8. 'letters' → logprob: -7.899205684661865
    9. 'ew' → logprob: -9.149206161499023
    10. ' letters' → logprob: -10.399206161499023

Token 769: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -0.14455078542232513
    2. '.e' → logprob: -3.1445508003234863
    3. '.inter' → logprob: -3.1445508003234863
    4. '._' → logprob: -3.5195508003234863
    5. '.' → logprob: -5.394550800323486
    6. '.rows' → logprob: -6.144550800323486
    7. '.M' → logprob: -6.269550800323486
    8. '.available' → logprob: -6.644550800323486
    9. '.ro' → logprob: -6.894550800323486
    10. 'valid' → logprob: -6.894550800323486

Token 770: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.15544714033603668
    2. ' =' → logprob: -2.780447244644165
    3. '_coords' → logprob: -2.905447244644165
    4. '_coordinates' → logprob: -3.905447244644165
    5. '=' → logprob: -5.405447006225586
    6. '_points' → logprob: -7.405447006225586
    7. 's' → logprob: -7.655447006225586
    8. '_' → logprob: -7.780447006225586
    9. '_positions' → logprob: -8.405447006225586
    10. 'Inter' → logprob: -8.405447006225586

Token 771: 'sections' (ID: 52783)
  Prédit: 'sections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sections' → logprob: -6.301394023466855e-05
    2. 'section' → logprob: -10.125062942504883
    3. 'ctions' → logprob: -11.500062942504883
    4. 'ter' → logprob: -12.875062942504883
    5. 'ections' → logprob: -12.875062942504883
    6. '   ' → logprob: -13.500062942504883
    7. 's' → logprob: -13.625062942504883
    8. 'sects' → logprob: -13.750062942504883
    9. '```' → logprob: -14.250062942504883
    10. '       ' → logprob: -14.750062942504883

Token 772: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760363936424255
    2. ' =' → logprob: -0.8260363936424255
    3. '=set' → logprob: -9.32603645324707
    4. ' ' → logprob: -12.45103645324707
    5. '   ' → logprob: -13.45103645324707
    6. 's' → logprob: -14.32603645324707
    7. ':' → logprob: -14.32603645324707
    8. '=
' → logprob: -15.20103645324707
    9. '  ' → logprob: -15.70103645324707
    10. '	' → logprob: -15.82603645324707

Token 773: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2827043831348419
    2. 'set' → logprob: -1.4077043533325195
    3. '{
' → logprob: -6.6577043533325195
    4. 'default' → logprob: -9.78270435333252
    5. '[' → logprob: -10.15770435333252
    6. '[(' → logprob: -10.40770435333252
    7. '{x' → logprob: -10.53270435333252
    8. ' {(' → logprob: -10.65770435333252
    9. ' set' → logprob: -10.65770435333252
    10. 'fro' → logprob: -10.90770435333252

Token 774: '()
' (ID: 1234)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.19824784994125366
    2. '()
' → logprob: -2.4482479095458984
    3. '()' → logprob: -2.9482479095458984
    4. '(Co' → logprob: -3.6982479095458984
    5. '([' → logprob: -4.448247909545898
    6. '(' → logprob: -6.448247909545898
    7. '(f' → logprob: -6.948247909545898
    8. '(self' → logprob: -7.948247909545898
    9. '((' → logprob: -8.073247909545898
    10. '([
' → logprob: -8.323247909545898

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007020837627351284
    2. ' for' → logprob: -5.632020950317383
    3. 'for' → logprob: -6.257020950317383
    4. '<|end|>' → logprob: -6.632020950317383
    5. '   ' → logprob: -8.882020950317383
    6. ' ' → logprob: -12.007020950317383
    7. ',' → logprob: -12.132020950317383
    8. ')' → logprob: -12.257020950317383
    9. '	for' → logprob: -12.507020950317383
    10. '	' → logprob: -12.507020950317383

Token 776: ' ew' (ID: 64459)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01834121160209179
    2. '       ' → logprob: -4.393341064453125
    3. 'letters' → logprob: -5.268341064453125
    4. 'east' → logprob: -8.393341064453125
    5. ' for' → logprob: -8.518341064453125
    6. 'from' → logprob: -10.518341064453125
    7. 'alphabet' → logprob: -10.768341064453125
    8. 'ew' (adapté à ' ew') → logprob: -10.768341064453125
    9. 'alpha' → logprob: -11.018341064453125
    10. 'rows' → logprob: -11.018341064453125

Token 777: '_ro' (ID: 65472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7586402893066406
    2. '_chars' → logprob: -1.6336402893066406
    3. '_letters' → logprob: -1.8836402893066406
    4. '=' → logprob: -3.0086402893066406
    5. '_ord' → logprob: -3.1336402893066406
    6. '_labels' → logprob: -4.258640289306641
    7. '_al' → logprob: -4.633640289306641
    8. 's' → logprob: -4.633640289306641
    9. 'ords' → logprob: -5.008640289306641
    10. '_ro' → logprob: -5.008640289306641

Token 778: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -0.0009479032014496624
    2. 'ad' → logprob: -7.000947952270508
    3. 'w' → logprob: -10.875947952270508
    4. 'a' → logprob: -12.125947952270508
    5. 'ws' → logprob: -12.500947952270508
    6. 'ds' → logprob: -13.875947952270508
    7. 'ades' → logprob: -13.875947952270508
    8. 'ading' → logprob: -14.500947952270508
    9. 'aws' → logprob: -14.625947952270508
    10. '_' → logprob: -14.750947952270508

Token 779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632763683795929
    2. ' =' → logprob: -0.757763683795929
    3. '=['' → logprob: -9.007763862609863
    4. 'import' → logprob: -10.882763862609863
    5. '   ' → logprob: -11.882763862609863
    6. '='' → logprob: -12.757763862609863
    7. ' ' → logprob: -13.007763862609863
    8. '=["' → logprob: -13.132763862609863
    9. 'from' → logprob: -13.757763862609863
    10. '=[]' → logprob: -13.757763862609863

Token 780: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16560351848602295
    2. ' [' → logprob: -2.9156036376953125
    3. '['' → logprob: -3.0406036376953125
    4. '[e' → logprob: -3.7906036376953125
    5. '[a' → logprob: -4.1656036376953125
    6. ''' → logprob: -6.0406036376953125
    7. '[str' → logprob: -6.4156036376953125
    8. '"' → logprob: -6.7906036376953125
    9. 'chr' → logprob: -7.0406036376953125
    10. '[b' → logprob: -7.2906036376953125

Token 781: 'chr' (ID: 33902)
  Prédit: 'chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -5.9153885558771435e-06
    2. ' chr' → logprob: -12.250005722045898
    3. '(chr' → logprob: -13.750005722045898
    4. '   ' → logprob: -17.8750057220459
    5. 'char' → logprob: -18.1250057220459
    6. '_chr' → logprob: -18.6250057220459
    7. ' ' → logprob: -19.0000057220459
    8. 'Chr' → logprob: -19.6250057220459
    9. '  ' → logprob: -19.6250057220459
    10. 'str' → logprob: -19.6250057220459

Token 782: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.00038407891406677663
    2. '(' → logprob: -8.000384330749512
    3. '(i' → logprob: -10.125384330749512
    4. 'ord' → logprob: -12.000384330749512
    5. '(o' → logprob: -13.375384330749512
    6. '97' → logprob: -14.125384330749512
    7. '(e' → logprob: -16.500383377075195
    8. '(a' → logprob: -17.000383377075195
    9. '(x' → logprob: -17.125383377075195
    10. '(j' → logprob: -17.500383377075195

Token 783: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.5690089639974758e-05
    2. '(ord' → logprob: -11.750015258789062
    3. '(' → logprob: -12.500015258789062
    4. '("' → logprob: -12.750015258789062
    5. ''a' → logprob: -14.875015258789062
    6. 'ord' → logprob: -15.000015258789062
    7. ''' → logprob: -16.000015258789062
    8. 'b' → logprob: -16.500015258789062
    9. 'a' → logprob: -16.625015258789062
    10. 'self' → logprob: -16.750015258789062

Token 784: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.024411041289567947
    2. 'a' → logprob: -3.7744109630584717
    3. '97' → logprob: -6.774411201477051
    4. '('' → logprob: -11.39941120147705
    5. '`' → logprob: -11.77441120147705
    6. '(a' → logprob: -14.39941120147705
    7. '"a' → logprob: -14.39941120147705
    8. ''b' → logprob: -14.89941120147705
    9. ''' → logprob: -14.89941120147705
    10. '’a' → logprob: -15.14941120147705

Token 785: '')' (ID: 1542)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.06710491329431534
    2. '('' → logprob: -3.6921048164367676
    3. ')+' → logprob: -4.442104816436768
    4. ')' → logprob: -4.692104816436768
    5. '(' → logprob: -5.317104816436768
    6. '')' → logprob: -5.442104816436768
    7. 'ord' → logprob: -5.567104816436768
    8. '```' → logprob: -6.317104816436768
    9. 'a' → logprob: -6.942104816436768
    10. '(a' → logprob: -7.567104816436768

Token 786: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8022132515907288
    2. ')' → logprob: -1.677213191986084
    3. ' +' → logprob: -1.677213191986084
    4. '),' → logprob: -2.177213191986084
    5. '+i' → logprob: -2.927213191986084
    6. '(ord' → logprob: -5.427213191986084
    7. ' ' → logprob: -6.802213191986084
    8. ')+' → logprob: -7.302213191986084
    9. ',' → logprob: -7.302213191986084
    10. ')]' → logprob: -7.427213191986084

Token 787: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00038896629121154547
    2. 'x' → logprob: -8.000389099121094
    3. ' i' → logprob: -10.875389099121094
    4. '(i' → logprob: -11.625389099121094
    5. '   ' → logprob: -12.000389099121094
    6. 'M' → logprob: -12.625389099121094
    7. 'self' → logprob: -12.625389099121094
    8. ')' → logprob: -13.125389099121094
    9. '
' → logprob: -13.375389099121094
    10. '_i' → logprob: -13.500389099121094

Token 788: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027772970497608185
    2. 'for' → logprob: -6.002777099609375
    3. ' for' → logprob: -8.127777099609375
    4. ' ' → logprob: -13.127777099609375
    5. ' )' → logprob: -13.627777099609375
    6. '   ' → logprob: -13.877777099609375
    7. 'n' → logprob: -14.377777099609375
    8. 'i' → logprob: -14.627777099609375
    9. '  ' → logprob: -15.002777099609375
    10. '	for' → logprob: -15.627777099609375

Token 789: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014296054840088
    2. 'for' → logprob: -1.7014296054840088
    3. ')' → logprob: -11.82642936706543
    4. ' ' → logprob: -12.20142936706543
    5. '	for' → logprob: -13.07642936706543
    6. '   ' → logprob: -14.07642936706543
    7. '
' → logprob: -14.82642936706543
    8. ' f' → logprob: -16.07642936706543
    9. ' ' → logprob: -16.32642936706543
    10. 'in' → logprob: -16.45142936706543

Token 790: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0035656194668263197
    2. ' i' → logprob: -6.503565788269043
    3. 'range' → logprob: -6.503565788269043
    4. ' range' → logprob: -7.503565788269043
    5. 'in' → logprob: -11.878565788269043
    6. ' in' → logprob: -12.253565788269043
    7. ' ' → logprob: -15.253565788269043
    8. '
' → logprob: -17.378564834594727
    9. '	i' → logprob: -18.503564834594727
    10. 'I' → logprob: -18.628564834594727

Token 791: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026903454214334488
    2. 'in' → logprob: -3.6519033908843994
    3. 'range' → logprob: -7.5269036293029785
    4. ' range' → logprob: -9.77690315246582
    5. 'i' → logprob: -13.15190315246582
    6. ' ' → logprob: -13.27690315246582
    7. 'n' → logprob: -13.65190315246582
    8. 'ange' → logprob: -14.65190315246582
    9. 's' → logprob: -14.90190315246582
    10. '   ' → logprob: -15.27690315246582

Token 792: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -17.876928329467773
    4. '(range' → logprob: -18.126928329467773
    5. ' ' → logprob: -19.751928329467773
    6. '
' → logprob: -21.001928329467773
    7. '   ' → logprob: -21.626928329467773
    8. '  ' → logprob: -21.751928329467773
    9. ' xrange' → logprob: -22.126928329467773
    10. 'rang' → logprob: -22.501928329467773

Token 793: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.2827676236629486
    2. 'M' → logprob: -1.657767653465271
    3. '(self' → logprob: -3.2827675342559814
    4. 'self' → logprob: -4.0327677726745605
    5. '(' → logprob: -8.407767295837402
    6. '(N' → logprob: -9.157767295837402
    7. 'N' → logprob: -9.282767295837402
    8. ' M' → logprob: -10.532767295837402
    9. ' self' → logprob: -10.782767295837402
    10. '   ' → logprob: -12.157767295837402

Token 794: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0037023313343524933
    2. ')]
' → logprob: -5.628702163696289
    3. ' )' → logprob: -9.878702163696289
    4. ')]
' → logprob: -10.753702163696289
    5. '+' → logprob: -11.628702163696289
    6. ')' → logprob: -11.628702163696289
    7. ')]

' → logprob: -11.753702163696289
    8. ']' → logprob: -13.753702163696289
    9. ')][' → logprob: -14.378702163696289
    10. '   ' → logprob: -14.503702163696289

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3055740296840668
    2. 'ns' → logprob: -1.6805740594863892
    3. ' ns' → logprob: -3.5555739402770996
    4. '
' → logprob: -4.5555739402771
    5. 'north' → logprob: -4.8055739402771
    6. '	ns' → logprob: -4.9305739402771
    7. ' north' → logprob: -5.4305739402771
    8. ' for' → logprob: -5.8055739402771
    9. 'n' → logprob: -5.8055739402771
    10. ',n' → logprob: -6.4305739402771

Token 796: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' (adapté à ' ns') → logprob: -0.35201963782310486
    2. 'for' → logprob: -1.3520196676254272
    3. ' ns' → logprob: -3.9770195484161377
    4. ' for' → logprob: -4.102019786834717
    5. '       ' → logprob: -6.227019786834717
    6. 'north' → logprob: -8.227019309997559
    7. 'self' → logprob: -8.977019309997559
    8. '        
' → logprob: -9.102019309997559
    9. 'n' → logprob: -9.727019309997559
    10. ' north' → logprob: -10.352019309997559

Token 797: '_ro' (ID: 65472)
  Prédit: '_ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -5.12127808178775e-05
    2. '_st' → logprob: -10.500051498413086
    3. '_numbers' → logprob: -12.375051498413086
    4. '_inter' → logprob: -12.500051498413086
    5. 'roads' → logprob: -12.625051498413086
    6. '_' → logprob: -13.375051498413086
    7. '_ranges' → logprob: -13.625051498413086
    8. '=' → logprob: -13.750051498413086
    9. 's' → logprob: -14.125051498413086
    10. ' =' → logprob: -14.250051498413086

Token 798: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -5.5577775128767826e-06
    2. 'a' → logprob: -13.875005722045898
    3. 'ods' → logprob: -14.000005722045898
    4. 'oad' → logprob: -14.125005722045898
    5. 'ad' → logprob: -14.250005722045898
    6. '_ads' → logprob: -14.250005722045898
    7. '_' → logprob: -14.750005722045898
    8. ' ads' → logprob: -15.000005722045898
    9. '
' → logprob: -15.500005722045898
    10. '=' → logprob: -16.0000057220459

Token 799: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022463142871857
    2. ' =' → logprob: -1.9102246761322021
    3. '=[' → logprob: -15.035224914550781
    4. ' ' → logprob: -16.66022491455078
    5. '   ' → logprob: -17.03522491455078
    6. ' =[' → logprob: -17.03522491455078
    7. '[' → logprob: -17.53522491455078
    8. ':' → logprob: -18.53522491455078
    9. '=list' → logprob: -18.78522491455078
    10. '＝' → logprob: -18.78522491455078

Token 800: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3001912236213684
    2. '[list' → logprob: -1.5501911640167236
    3. 'range' → logprob: -3.3001911640167236
    4. '[' → logprob: -4.675191402435303
    5. ' list' → logprob: -7.300191402435303
    6. ' [' → logprob: -9.050190925598145
    7. ' range' → logprob: -10.300190925598145
    8. '(range' → logprob: -10.550190925598145
    9. '[int' → logprob: -10.925190925598145
    10. '[i' → logprob: -11.425190925598145

Token 801: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08974279463291168
    2. 'j' → logprob: -2.46474289894104
    3. 'int' → logprob: -7.839742660522461
    4. 'range' → logprob: -8.589742660522461
    5. '(i' → logprob: -9.339742660522461
    6. '1' → logprob: -9.839742660522461
    7. ' i' → logprob: -10.214742660522461
    8. ' j' → logprob: -11.339742660522461
    9. '(j' → logprob: -12.089742660522461
    10. '_j' → logprob: -12.339742660522461

Token 802: ' +' (ID: 659)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19789855182170868
    2. 'for' → logprob: -1.822898507118225
    3. '+' → logprob: -4.0728983879089355
    4. ' +' → logprob: -7.4478983879089355
    5. 'n' → logprob: -8.697898864746094
    6. ' in' → logprob: -9.447898864746094
    7. 'in' → logprob: -10.322898864746094
    8. 'range' → logprob: -10.572898864746094
    9. '(' → logprob: -10.822898864746094
    10. ' ' → logprob: -11.072898864746094

Token 803: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011086373589932919
    2. ' ' → logprob: -4.511086463928223
    3. '0' → logprob: -10.261086463928223
    4. '2' → logprob: -13.386086463928223
    5. '   ' → logprob: -14.511086463928223
    6. '  ' → logprob: -15.136086463928223
    7. '(' → logprob: -15.761086463928223
    8. '
' → logprob: -16.011085510253906
    9. ' ' → logprob: -16.073585510253906
    10. '=' → logprob: -16.511085510253906

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028696097433567047
    2. ' ' → logprob: -8.250287055969238
    3. '0' → logprob: -10.625287055969238
    4. '   ' → logprob: -14.500287055969238
    5. '2' → logprob: -14.875287055969238
    6. '  ' → logprob: -16.062786102294922
    7. '
' → logprob: -16.500286102294922
    8. '```' → logprob: -16.500286102294922
    9. '(' → logprob: -16.937786102294922
    10. '`' → logprob: -17.750286102294922

Token 805: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038042984902858734
    2. 'for' → logprob: -3.2880430221557617
    3. ' ' → logprob: -14.288043022155762
    4. '	for' → logprob: -14.288043022155762
    5. ')' → logprob: -15.288043022155762
    6. '   ' → logprob: -17.413042068481445
    7. ' in' → logprob: -17.413042068481445
    8. ' ' → logprob: -18.038042068481445
    9. '<|end|>' → logprob: -18.288042068481445
    10. '```' → logprob: -18.413042068481445

Token 806: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.486601859331131
    2. 'range' → logprob: -0.9866018295288086
    3. ' range' → logprob: -4.486601829528809
    4. ' i' → logprob: -6.736601829528809
    5. '_' → logprob: -14.111601829528809
    6. ' ' → logprob: -15.861601829528809
    7. '_range' → logprob: -16.111602783203125
    8. '_i' → logprob: -16.361602783203125
    9. '	range' → logprob: -16.986602783203125
    10. '
' → logprob: -17.611602783203125

Token 807: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1372053027153015
    2. 'range' → logprob: -2.1372053623199463
    3. ' in' → logprob: -4.637205123901367
    4. ' i' → logprob: -8.262205123901367
    5. 'i' → logprob: -8.512205123901367
    6. 'in' → logprob: -9.512205123901367
    7. ' ' → logprob: -12.512205123901367
    8. '_range' → logprob: -13.887205123901367
    9. '	range' → logprob: -14.387205123901367
    10. '(range' → logprob: -14.512205123901367

Token 808: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -19.125553131103516
    4. '	range' → logprob: -19.375553131103516
    5. ' ' → logprob: -21.125553131103516
    6. '   ' → logprob: -21.750553131103516
    7. '
' → logprob: -22.625553131103516
    8. '  ' → logprob: -23.000553131103516
    9. 'Range' → logprob: -23.375553131103516
    10. '_range' → logprob: -23.750553131103516

Token 809: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004262057598680258
    2. '(N' → logprob: -5.6292619705200195
    3. ' N' → logprob: -7.3792619705200195
    4. '(' → logprob: -10.62926197052002
    5. ' (' → logprob: -12.25426197052002
    6. '   ' → logprob: -12.75426197052002
    7. '
' → logprob: -13.50426197052002
    8. '0' → logprob: -14.12926197052002
    9. ' ' → logprob: -14.62926197052002
    10. '       ' → logprob: -14.75426197052002

Token 810: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.08973691612482071
    2. ']' → logprob: -2.4647369384765625
    3. ')]
' → logprob: -8.089736938476562
    4. ']
' → logprob: -8.339736938476562
    5. ')' → logprob: -8.964736938476562
    6. ' ]' → logprob: -9.464736938476562
    7. '       ' → logprob: -11.089736938476562
    8. '])' → logprob: -12.089736938476562
    9. '   ' → logprob: -12.464736938476562
    10. ']

' → logprob: -12.839736938476562

Token 811: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017291732132434845
    2. '<|end|>' → logprob: -4.64229154586792
    3. ' for' → logprob: -5.51729154586792
    4. 'for' → logprob: -6.14229154586792
    5. '
' → logprob: -7.51729154586792
    6. '   ' → logprob: -8.517292022705078
    7. '```' → logprob: -9.142292022705078
    8. '        
' → logprob: -9.142292022705078
    9. '        ' → logprob: -9.142292022705078
    10. ')' → logprob: -9.642292022705078

Token 812: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6335321068763733
    2. '       ' → logprob: -0.8835321068763733
    3. ' for' → logprob: -2.8835320472717285
    4. '<|end|>' → logprob: -11.633532524108887
    5. '   ' → logprob: -11.758532524108887
    6. '	for' → logprob: -12.258532524108887
    7. 'self' → logprob: -13.383532524108887
    8. ' ' → logprob: -13.508532524108887
    9. '        
' → logprob: -13.758532524108887
    10. '```' → logprob: -14.383532524108887

Token 813: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.010306190699338913
    2. ' ew' → logprob: -4.635306358337402
    3. 'e' → logprob: -8.385306358337402
    4. 'i' → logprob: -9.135306358337402
    5. 'east' → logprob: -9.760306358337402
    6. 'w' → logprob: -9.885306358337402
    7. 'ews' → logprob: -10.510306358337402
    8. '_' → logprob: -10.885306358337402
    9. 'x' → logprob: -11.510306358337402
    10. 'ns' → logprob: -11.885306358337402

Token 814: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09026312828063965
    2. '_' → logprob: -2.4652631282806396
    3. '_index' → logprob: -7.590263366699219
    4. '_ro' → logprob: -7.840263366699219
    5. '_idx' → logprob: -9.090263366699219
    6. 'in' → logprob: -9.215263366699219
    7. 'road' → logprob: -9.715263366699219
    8. '_i' → logprob: -10.340263366699219
    9. '_letter' → logprob: -10.590263366699219
    10. ' ' → logprob: -10.965263366699219

Token 815: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.00103352265432477
    2. ' ew' → logprob: -6.876033306121826
    3. 'ews' → logprob: -14.876033782958984
    4. '['' → logprob: -15.251033782958984
    5. '   ' → logprob: -16.126033782958984
    6. ' ' → logprob: -17.626033782958984
    7. 'ow' → logprob: -17.751033782958984
    8. '-ew' → logprob: -18.001033782958984
    9. 'range' → logprob: -18.376033782958984
    10. '[' → logprob: -18.501033782958984

Token 816: '_ro' (ID: 65472)
  Prédit: '_ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.00030293059535324574
    2. ' in' → logprob: -8.500303268432617
    3. 'in' → logprob: -10.250303268432617
    4. 'ro' → logprob: -11.125303268432617
    5. '_' → logprob: -11.250303268432617
    6. '   ' → logprob: -12.625303268432617
    7. ' ' → logprob: -12.625303268432617
    8. '_ros' → logprob: -12.750303268432617
    9. 'ew' → logprob: -13.250303268432617
    10. '
' → logprob: -13.250303268432617

Token 817: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -1.282920129597187e-05
    2. 'ods' → logprob: -12.500012397766113
    3. '_ads' → logprob: -12.875012397766113
    4. 'a' → logprob: -13.875012397766113
    5. ' ads' → logprob: -13.875012397766113
    6. '
' → logprob: -14.000012397766113
    7. '_' → logprob: -14.375012397766113
    8. '_ro' → logprob: -14.500012397766113
    9. 'ds' → logprob: -14.625012397766113
    10. 'ad' → logprob: -14.625012397766113

Token 818: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2521178126335144
    2. ':
' → logprob: -1.5021178722381592
    3. ' for' → logprob: -9.627118110656738
    4. '   ' → logprob: -9.752118110656738
    5. '       ' → logprob: -10.627118110656738
    6. 'for' → logprob: -11.127118110656738
    7. ':
' → logprob: -11.377118110656738
    8. ',' → logprob: -12.377118110656738
    9. '           ' → logprob: -12.752118110656738
    10. ' :' → logprob: -13.627118110656738

Token 819: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02452445961534977
    2. ' for' → logprob: -3.899524450302124
    3. '   ' → logprob: -5.774524688720703
    4. ':' → logprob: -7.399524688720703
    5. '       ' → logprob: -9.649524688720703
    6. ',' → logprob: -10.149524688720703
    7. '    ' → logprob: -10.149524688720703
    8. 'for' → logprob: -10.649524688720703
    9. '	   ' → logprob: -11.149524688720703
    10. ' ' → logprob: -11.274524688720703

Token 820: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19931893050670624
    2. ' for' → logprob: -1.8243188858032227
    3. '           ' → logprob: -4.449318885803223
    4. '   ' → logprob: -5.074318885803223
    5. '       ' → logprob: -7.074318885803223
    6. ' ' → logprob: -7.949318885803223
    7. '               ' → logprob: -8.449318885803223
    8. '	for' → logprob: -11.074318885803223
    9. '  ' → logprob: -11.824318885803223
    10. '    ' → logprob: -13.574318885803223

Token 821: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0021880913991481066
    2. ' ns' → logprob: -6.127188205718994
    3. '(ns' → logprob: -13.877187728881836
    4. '	ns' → logprob: -14.127187728881836
    5. 'n' → logprob: -14.752187728881836
    6. '   ' → logprob: -15.002187728881836
    7. '_ns' → logprob: -15.377187728881836
    8. ' ' → logprob: -16.002187728881836
    9. '.ns' → logprob: -16.627187728881836
    10. 'num' → logprob: -17.002187728881836

Token 822: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014225916005671024
    2. 'in' → logprob: -4.264225959777832
    3. '_' → logprob: -10.139225959777832
    4. '_in' → logprob: -11.639225959777832
    5. ' ' → logprob: -11.889225959777832
    6. ' _' → logprob: -13.764225959777832
    7. '1' → logprob: -14.139225959777832
    8. '	in' → logprob: -14.389225959777832
    9. '=' → logprob: -14.639225959777832
    10. '   ' → logprob: -14.764225959777832

Token 823: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0025154929608106613
    2. ' ns' → logprob: -6.1275153160095215
    3. '(ns' → logprob: -8.50251579284668
    4. 'range' → logprob: -9.00251579284668
    5. ' range' → logprob: -13.25251579284668
    6. '	ns' → logprob: -13.87751579284668
    7. '   ' → logprob: -14.75251579284668
    8. '/ns' → logprob: -15.25251579284668
    9. 'n' → logprob: -15.50251579284668
    10. '_ns' → logprob: -15.62751579284668

Token 824: '_ro' (ID: 65472)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3043734133243561
    2. '_ro' → logprob: -1.4293733835220337
    3. ' range' → logprob: -4.804373264312744
    4. 'ns' → logprob: -4.804373264312744
    5. '_ns' → logprob: -5.804373264312744
    6. '(range' → logprob: -6.679373264312744
    7. 'ro' → logprob: -6.804373264312744
    8. '(ns' → logprob: -7.804373264312744
    9. '_range' → logprob: -8.679373741149902
    10. '_' → logprob: -9.554373741149902

Token 825: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -0.15617519617080688
    2. 's' → logprob: -2.031175136566162
    3. 'ad' → logprob: -4.906175136566162
    4. 'ds' → logprob: -6.281175136566162
    5. '_s' → logprob: -6.281175136566162
    6. 'ws' → logprob: -7.156175136566162
    7. 'south' → logprob: -8.03117561340332
    8. 'sh' → logprob: -8.15617561340332
    9. 'w' → logprob: -8.40617561340332
    10. 'ss' → logprob: -9.15617561340332

Token 826: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3353412449359894
    2. ':' → logprob: -1.335341215133667
    3. '               ' → logprob: -3.835341215133667
    4. '           ' → logprob: -8.710341453552246
    5. ':
' → logprob: -10.460341453552246
    6. '):
' → logprob: -11.210341453552246
    7. ',' → logprob: -11.460341453552246
    8. ' :
' → logprob: -11.710341453552246
    9. '       ' → logprob: -12.585341453552246
    10. ' :' → logprob: -13.085341453552246

Token 827: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.251091377227567e-05
    2. ' self' → logprob: -10.750042915344238
    3. '           ' → logprob: -11.625042915344238
    4. 'self' → logprob: -12.500042915344238
    5. '   ' → logprob: -13.500042915344238
    6. '	           ' → logprob: -13.500042915344238
    7. '                   ' → logprob: -13.750042915344238
    8. '<|end|>' → logprob: -13.875042915344238
    9. ',' → logprob: -14.250042915344238
    10. '              ' → logprob: -14.375042915344238

Token 828: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03979692980647087
    2. ' self' → logprob: -3.664796829223633
    3. '                   ' → logprob: -5.164796829223633
    4. '               ' → logprob: -5.289796829223633
    5. '           ' → logprob: -6.039796829223633
    6. '   ' → logprob: -8.289796829223633
    7. '	self' → logprob: -12.164796829223633
    8. '       ' → logprob: -12.539796829223633
    9. 'coord' → logprob: -13.789796829223633
    10. ' ' → logprob: -14.039796829223633

Token 829: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -2.165027217415627e-05
    2. 'valid' → logprob: -10.875021934509277
    3. '.' → logprob: -13.625021934509277
    4. ' .' → logprob: -14.125021934509277
    5. '.invalid' → logprob: -15.125021934509277
    6. '           ' → logprob: -15.500021934509277
    7. '   ' → logprob: -15.875021934509277
    8. '	valid' → logprob: -16.00002098083496
    9. '       ' → logprob: -17.50002098083496
    10. '(valid' → logprob: -17.87502098083496

Token 830: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.2664456789934775e-06
    2. 'inter' → logprob: -13.625000953674316
    3. 'Inter' → logprob: -16.750001907348633
    4. '_INTER' → logprob: -18.250001907348633
    5. '\' → logprob: -18.375001907348633
    6. '.inter' → logprob: -18.625001907348633
    7. 'self' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '           ' → logprob: -19.500001907348633
    10. '
' → logprob: -19.500001907348633

Token 831: 'sections' (ID: 52783)
  Prédit: 'sections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sections' → logprob: -2.3199920178740285e-05
    2. 's' → logprob: -12.500022888183594
    3. 'ctions' → logprob: -12.500022888183594
    4. 'ections' → logprob: -12.625022888183594
    5. '_sections' → logprob: -12.625022888183594
    6. 'ter' → logprob: -12.750022888183594
    7. 'er' → logprob: -13.000022888183594
    8. '```' → logprob: -14.375022888183594
    9. 'erse' → logprob: -14.500022888183594
    10. 'ceptions' → logprob: -14.500022888183594

Token 832: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00010199354437645525
    2. '.' → logprob: -9.250102043151855
    3. 'add' → logprob: -12.375102043151855
    4. ' .' → logprob: -13.750102043151855
    5. '.append' → logprob: -15.750102043151855
    6. ' add' → logprob: -15.750102043151855
    7. '_add' → logprob: -16.75010108947754
    8. '.Add' → logprob: -16.87510108947754
    9. '           ' → logprob: -17.50010108947754
    10. '	add' → logprob: -17.50010108947754

Token 833: '(Co' (ID: 188907)
  Prédit: '(Co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Co' → logprob: -0.0005587508203461766
    2. 'Coordinate' → logprob: -7.500558853149414
    3. ' Coordinate' → logprob: -13.375558853149414
    4. '((' → logprob: -13.750558853149414
    5. '(' → logprob: -14.125558853149414
    6. 'Co' → logprob: -14.375558853149414
    7. 'Coordinates' → logprob: -14.625558853149414
    8. '(co' → logprob: -14.875558853149414
    9. 'Coord' → logprob: -15.625558853149414
    10. '(
' → logprob: -15.625558853149414

Token 834: 'ordinate' (ID: 14586)
  Prédit: 'ordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinate' → logprob: -0.00024370834580622613
    2. 'ord' → logprob: -9.250244140625
    3. 'ordin' → logprob: -10.375244140625
    4. '#' → logprob: -11.125244140625
    5. '  ' → logprob: -11.500244140625
    6. '       ' → logprob: -11.750244140625
    7. '    ' → logprob: -11.750244140625
    8. 'o' → logprob: -11.875244140625
    9. '           ' → logprob: -11.875244140625
    10. '               ' → logprob: -12.000244140625

Token 835: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0087516784551553e-05
    2. '(e' → logprob: -11.62501049041748
    3. ')' → logprob: -14.50001049041748
    4. '(
' → logprob: -14.75001049041748
    5. '(E' → logprob: -16.625009536743164
    6. '(ev' → logprob: -16.750009536743164
    7. '```' → logprob: -16.750009536743164
    8. ')(' → logprob: -16.875009536743164
    9. '((' → logprob: -17.125009536743164
    10. ' (' → logprob: -17.125009536743164

Token 836: 'ew' (ID: 937)
  Prédit: 'ew'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.01108248345553875
    2. '(' → logprob: -4.511082649230957
    3. ')' → logprob: -11.261082649230957
    4. '{' → logprob: -11.761082649230957
    5. ' ew' → logprob: -11.886082649230957
    6. 'ews' → logprob: -13.011082649230957
    7. '```' → logprob: -13.886082649230957
    8. '   ' → logprob: -14.636082649230957
    9. '
' → logprob: -14.636082649230957
    10. '[' → logprob: -14.636082649230957

Token 837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.742448022123426e-05
    2. ' ,' → logprob: -10.375067710876465
    3. ',n' → logprob: -10.625067710876465
    4. ',
' → logprob: -11.625067710876465
    5. '<|end|>' → logprob: -14.500067710876465
    6. '‌,' → logprob: -15.125067710876465
    7. ',num' → logprob: -15.250067710876465
    8. ')' → logprob: -15.500067710876465
    9. '```' → logprob: -15.625067710876465
    10. ',
' → logprob: -15.875067710876465

Token 838: ' ns' (ID: 18343)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -2.165027217415627e-05
    2. ' ns' → logprob: -10.750021934509277
    3. '(ns' → logprob: -15.875021934509277
    4. '	ns' → logprob: -18.75002098083496
    5. '_ns' → logprob: -19.00002098083496
    6. '   ' → logprob: -19.50002098083496
    7. 'n' → logprob: -19.87502098083496
    8. '/ns' → logprob: -20.75002098083496
    9. '.ns' → logprob: -21.50002098083496
    10. '
' → logprob: -21.75002098083496

Token 839: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015549783129245043
    2. '))
' → logprob: -6.8765549659729
    3. ')' → logprob: -7.7515549659729
    4. '               ' → logprob: -9.626555442810059
    5. '           ' → logprob: -11.501555442810059
    6. '                   ' → logprob: -12.001555442810059
    7. ' ))' → logprob: -13.001555442810059
    8. ')))' → logprob: -13.126555442810059
    9. '       ' → logprob: -13.376555442810059
    10. '))

' → logprob: -13.376555442810059

Token 840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6780970096588135
    2. '<|end|>' → logprob: -0.8030970096588135
    3. '   ' → logprob: -3.5530970096588135
    4. 'def' → logprob: -5.178096771240234
    5. '
' → logprob: -5.678096771240234
    6. '<|end|>' → logprob: -6.428096771240234
    7. ' for' → logprob: -6.553096771240234
    8. 'for' → logprob: -6.678096771240234
    9. '```' → logprob: -6.928096771240234
    10. '#' → logprob: -7.678096771240234

Token 841: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30574744939804077
    2. ' for' → logprob: -1.8057475090026855
    3. 'for' → logprob: -2.4307475090026855
    4. '#' (adapté à ' #') → logprob: -5.0557475090026855
    5. '   ' → logprob: -5.9307475090026855
    6. 'def' → logprob: -7.0557475090026855
    7. ' #' → logprob: -7.8057475090026855
    8. 'ew' → logprob: -8.305747032165527
    9. '<|end|>' → logprob: -8.305747032165527
    10. '           ' → logprob: -9.930747032165527

Token 842: ' Construct' (ID: 36230)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052626125514507294
    2. '#' → logprob: -3.177626132965088
    3. '       ' → logprob: -4.677626132965088
    4. ' for' → logprob: -9.17762565612793
    5. 'self' → logprob: -9.92762565612793
    6. 'ew' → logprob: -10.05262565612793
    7. 'def' → logprob: -10.30262565612793
    8. '   ' → logprob: -10.55262565612793
    9. 'road' → logprob: -12.80262565612793
    10. 'row' → logprob: -12.80262565612793

Token 843: ' full' (ID: 3149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1267721801996231
    2. '#' → logprob: -2.251772165298462
    3. ' for' → logprob: -5.001772403717041
    4. '       ' → logprob: -5.751772403717041
    5. 'roads' → logprob: -6.251772403717041
    6. ' roads' → logprob: -7.001772403717041
    7. 'horizontal' → logprob: -7.876772403717041
    8. ' #' → logprob: -8.126771926879883
    9. 'self' → logprob: -8.751771926879883
    10. '   ' → logprob: -9.251771926879883

Token 844: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.4075947105884552
    2. ' grid' → logprob: -1.2825946807861328
    3. '#' → logprob: -4.032594680786133
    4. 'mesh' → logprob: -4.407594680786133
    5. '   ' → logprob: -5.157594680786133
    6. 'adj' → logprob: -5.532594680786133
    7. '       ' → logprob: -5.657594680786133
    8. 'road' → logprob: -5.657594680786133
    9. 'roads' → logprob: -6.157594680786133
    10. '_grid' → logprob: -6.532594680786133

Token 845: ' roads' (ID: 30027)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4075155258178711
    2. '       ' → logprob: -1.157515525817871
    3. 'for' → logprob: -3.907515525817871
    4. ' with' → logprob: -8.657515525817871
    5. '#' → logprob: -10.282515525817871
    6. ',' → logprob: -10.532515525817871
    7. ' of' → logprob: -11.157515525817871
    8. '
' → logprob: -11.282515525817871
    9. ':' → logprob: -11.532515525817871
    10. '        
' → logprob: -11.532515525817871

Token 846: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003404687449801713
    2. ' for' → logprob: -8.375340461730957
    3. 'for' → logprob: -10.000340461730957
    4. '
' → logprob: -10.125340461730957
    5. ',' → logprob: -12.125340461730957
    6. ':' → logprob: -12.125340461730957
    7. '#' → logprob: -12.750340461730957
    8. '   ' → logprob: -12.875340461730957
    9. ' with' → logprob: -13.250340461730957
    10. '           ' → logprob: -13.625340461730957

Token 847: 'all' (ID: 586)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32019898295402527
    2. 'for' → logprob: -1.4451990127563477
    3. '       ' → logprob: -3.4451990127563477
    4. ')' → logprob: -5.820199012756348
    5. '#' → logprob: -7.445199012756348
    6. ' east' → logprob: -7.695199012756348
    7. ' between' → logprob: -7.945199012756348
    8. ')
' → logprob: -8.195199012756348
    9. '        ' → logprob: -8.570199012756348
    10. '   ' → logprob: -8.945199012756348

Token 848: ' connections' (ID: 21069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.2809140980243683
    2. 'horizontal' → logprob: -2.905914068222046
    3. 'possible' → logprob: -3.155914068222046
    4. 'except' → logprob: -3.405914068222046
    5. ' adjacent' → logprob: -3.905914068222046
    6. 'valid' → logprob: -4.655914306640625
    7. 'internal' → logprob: -4.655914306640625
    8. 'pairs' → logprob: -4.655914306640625
    9. 'between' → logprob: -4.780914306640625
    10. '#' → logprob: -4.905914306640625

Token 849: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.24524152278900146
    2. 'between' → logprob: -1.6202415227890015
    3. ')' → logprob: -4.370241641998291
    4. '       ' → logprob: -5.870241641998291
    5. 'for' → logprob: -6.995241641998291
    6. '   ' → logprob: -7.120241641998291
    7. ' for' → logprob: -7.370241641998291
    8. '):
' → logprob: -8.495241165161133
    9. '#' → logprob: -8.620241165161133
    10. ' along' → logprob: -8.620241165161133

Token 850: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.005918842740356922
    2. ' adjacent' → logprob: -5.630918979644775
    3. 'valid' → logprob: -7.380918979644775
    4. 'horizontal' → logprob: -7.880918979644775
    5. 'neighbors' → logprob: -7.880918979644775
    6. 'neighbor' → logprob: -8.005918502807617
    7. 'inter' → logprob: -8.505918502807617
    8. 'im' → logprob: -9.005918502807617
    9. 'east' → logprob: -9.630918502807617
    10. 'vertical' → logprob: -10.130918502807617

Token 851: ' intersections' (ID: 143513)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.7814707159996033
    2. 'coordinates' → logprob: -1.031470775604248
    3. 'east' → logprob: -2.656470775604248
    4. ' intersections' → logprob: -2.906470775604248
    5. ' coordinates' → logprob: -3.781470775604248
    6. ' east' → logprob: -4.656470775604248
    7. 'coords' → logprob: -5.156470775604248
    8. 'ew' → logprob: -5.406470775604248
    9. 'horizontal' → logprob: -5.531470775604248
    10. 'roads' → logprob: -5.531470775604248

Token 852: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9688023924827576
    2. ')' → logprob: -1.0938024520874023
    3. ' for' → logprob: -1.5938024520874023
    4. ' in' → logprob: -3.3438024520874023
    5. ')
' → logprob: -4.468802452087402
    6. 'for' → logprob: -4.468802452087402
    7. '):
' → logprob: -5.468802452087402
    8. ' between' → logprob: -5.593802452087402
    9. ',' → logprob: -5.718802452087402
    10. ' )' → logprob: -6.093802452087402

Token 853: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003278368094470352
    2. 'for' → logprob: -8.750328063964844
    3. '
' → logprob: -9.500328063964844
    4. ' for' → logprob: -9.625328063964844
    5. '   ' → logprob: -11.750328063964844
    6. 'ew' → logprob: -12.000328063964844
    7. '```' → logprob: -12.375328063964844
    8. '        
' → logprob: -12.750328063964844
    9. '#' → logprob: -13.250328063964844
    10. ',' → logprob: -13.375328063964844

Token 854: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13189272582530975
    2. 'for' → logprob: -2.256892681121826
    3. ' for' → logprob: -4.381892681121826
    4. 'ew' → logprob: -5.131892681121826
    5. '   ' → logprob: -9.131893157958984
    6. 'east' → logprob: -9.131893157958984
    7. ' ew' → logprob: -10.381893157958984
    8. '#' → logprob: -10.506893157958984
    9. '           ' → logprob: -10.506893157958984
    10. 'e' → logprob: -10.756893157958984

Token 855: '._' (ID: 2697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12037995457649231
    2. '._' → logprob: -2.74537992477417
    3. 'def' → logprob: -3.37037992477417
    4. ' for' → logprob: -5.37037992477417
    5. '.' → logprob: -5.49537992477417
    6. '_ro' → logprob: -6.99537992477417
    7. '.construct' → logprob: -7.12037992477417
    8. '.build' → logprob: -7.37037992477417
    9. '_' → logprob: -7.49537992477417
    10. '.add' → logprob: -7.99537992477417

Token 856: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.49046239256858826
    2. 'construct' → logprob: -0.9904624223709106
    3. 'initialize' → logprob: -4.990462303161621
    4. 'create' → logprob: -4.990462303161621
    5. 'init' → logprob: -6.240462303161621
    6. 'generate' → logprob: -8.115462303161621
    7. 'add' → logprob: -8.115462303161621
    8. 'setup' → logprob: -9.865462303161621
    9. 'connect' → logprob: -10.865462303161621
    10. 'populate' → logprob: -10.865462303161621

Token 857: '_all' (ID: 13305)
  Prédit: '_ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.29347965121269226
    2. '_grid' → logprob: -1.4184796810150146
    3. '_' → logprob: -5.5434794425964355
    4. 'grid' → logprob: -5.7934794425964355
    5. 'roads' → logprob: -5.9184794425964355
    6. '_full' → logprob: -6.4184794425964355
    7. '_network' → logprob: -8.668479919433594
    8. '_connections' → logprob: -9.043479919433594
    9. '_edges' → logprob: -9.168479919433594
    10. '_all' → logprob: -9.293479919433594

Token 858: '_ro' (ID: 65472)
  Prédit: '_ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.0014153540832921863
    2. '_grid' → logprob: -7.376415252685547
    3. 'roads' → logprob: -7.751415252685547
    4. '_' → logprob: -8.251415252685547
    5. '_connections' → logprob: -10.251415252685547
    6. '()' → logprob: -11.001415252685547
    7. '_edges' → logprob: -11.501415252685547
    8. '```' → logprob: -11.876415252685547
    9. 'grid' → logprob: -12.501415252685547
    10. '_gr' → logprob: -12.626415252685547

Token 859: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -2.8087270038668066e-05
    2. 'ad' → logprob: -11.000027656555176
    3. ' ads' → logprob: -13.000027656555176
    4. '_' → logprob: -13.125027656555176
    5. '_ads' → logprob: -13.375027656555176
    6. 'a' → logprob: -13.750027656555176
    7. '   ' → logprob: -14.375027656555176
    8. '
' → logprob: -14.625027656555176
    9. '```' → logprob: -14.875027656555176
    10. 'oad' → logprob: -15.125027656555176

Token 860: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001789881061995402
    2. '()
' → logprob: -8.750179290771484
    3. '()

' → logprob: -12.125179290771484
    4. 'def' → logprob: -12.500179290771484
    5. ' ()' → logprob: -12.625179290771484
    6. '(' → logprob: -12.875179290771484
    7. '()`' → logprob: -13.750179290771484
    8. '   ' → logprob: -14.000179290771484
    9. '();' → logprob: -14.375179290771484
    10. '()\' → logprob: -14.375179290771484

Token 861: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.498121052980423
    2. 'def' → logprob: -0.9981210231781006
    3. '   ' → logprob: -4.24812126159668
    4. ' def' → logprob: -4.74812126159668
    5. '    
' → logprob: -8.24812126159668
    6. '```' → logprob: -8.24812126159668
    7. '

' → logprob: -8.87312126159668
    8. '	def' → logprob: -10.12312126159668
    9. ' 
' → logprob: -11.12312126159668
    10. ' ' → logprob: -11.49812126159668

Token 862: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06748709082603455
    2. '
' → logprob: -3.5674870014190674
    3. ' def' → logprob: -3.9424870014190674
    4. '   ' → logprob: -4.0674872398376465
    5. '	def' → logprob: -7.9424872398376465
    6. '    
' → logprob: -9.442486763000488
    7. ' ' → logprob: -10.817486763000488
    8. '

' → logprob: -10.942486763000488
    9. '```' → logprob: -11.442486763000488
    10. ' 
' → logprob: -12.317486763000488

Token 863: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -1.9623810658231378e-05
    2. ' _' → logprob: -10.875020027160645
    3. '_b' → logprob: -15.000020027160645
    4. '_' → logprob: -15.750020027160645
    5. 'build' → logprob: -16.500019073486328
    6. '_add' → logprob: -17.500019073486328
    7. '__' → logprob: -17.875019073486328
    8. '_B' → logprob: -18.000019073486328
    9. '_create' → logprob: -18.375019073486328
    10. '_builder' → logprob: -18.375019073486328

Token 864: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.9361264946837764e-07
    2. '_build' → logprob: -16.75
    3. ' build' → logprob: -17.625
    4. '	build' → logprob: -18.375
    5. '(build' → logprob: -18.75
    6. '.build' → logprob: -19.375
    7. 'b' → logprob: -19.5
    8. 'def' → logprob: -20.375
    9. '   ' → logprob: -20.5
    10. '  ' → logprob: -21.375

Token 865: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -4.320199877838604e-07
    2. 'all' → logprob: -15.125
    3. '_al' → logprob: -18.375
    4. '_' → logprob: -18.375
    5. '_a' → logprob: -19.125
    6. '_ro' → logprob: -20.0
    7. '__' → logprob: -20.375
    8. ' all' → logprob: -21.0
    9. '_ALL' → logprob: -21.25
    10. '_full' → logprob: -21.625

Token 866: '_ro' (ID: 65472)
  Prédit: '_ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -3.128163257315464e-07
    2. 'roads' → logprob: -15.375
    3. '_' → logprob: -18.5
    4. ' roads' → logprob: -19.125
    5. '_RO' → logprob: -19.625
    6. '```' → logprob: -20.25
    7. '_ros' → logprob: -20.75
    8. ' _' → logprob: -21.375
    9. '_
' → logprob: -21.75
    10. '__' → logprob: -21.875

Token 867: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -1.1517960956552997e-05
    2. 'ad' → logprob: -12.250011444091797
    3. '_' → logprob: -12.875011444091797
    4. 'a' → logprob: -13.875011444091797
    5. ' ads' → logprob: -14.000011444091797
    6. '_ads' → logprob: -14.000011444091797
    7. '_ro' → logprob: -15.250011444091797
    8. 'ods' → logprob: -15.250011444091797
    9. '
' → logprob: -15.375011444091797
    10. 'roads' → logprob: -16.125011444091797

Token 868: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -13.000003814697266
    3. 'self' → logprob: -14.250003814697266
    4. '(s' → logprob: -14.625003814697266
    5. '   ' → logprob: -15.875003814697266
    6. ' (' → logprob: -15.875003814697266
    7. '(
' → logprob: -17.875003814697266
    8. '       ' → logprob: -18.375003814697266
    9. '(sel' → logprob: -18.375003814697266
    10. ' ' → logprob: -18.875003814697266

Token 869: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16382718086242676
    2. '):
' → logprob: -1.9138271808624268
    3. 'self' → logprob: -6.288826942443848
    4. '(self' → logprob: -6.788826942443848
    5. '):
' → logprob: -8.038826942443848
    6. ')' → logprob: -9.288826942443848
    7. '   ' → logprob: -9.538826942443848
    8. '():' → logprob: -10.163826942443848
    9. '       ' → logprob: -10.663826942443848
    10. '():
' → logprob: -10.788826942443848

Token 870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005135946557857096
    2. '   ' → logprob: -7.625513553619385
    3. 'for' → logprob: -11.750514030456543
    4. ' for' → logprob: -12.125514030456543
    5. '           ' → logprob: -12.875514030456543
    6. '```' → logprob: -13.000514030456543
    7. 'ew' → logprob: -13.125514030456543
    8. '#' → logprob: -14.000514030456543
    9. '     ' → logprob: -14.250514030456543
    10. 'east' → logprob: -14.375514030456543

Token 871: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3059869706630707
    2. 'ew' → logprob: -1.430987000465393
    3. 'for' → logprob: -3.9309868812561035
    4. '   ' → logprob: -6.0559868812561035
    5. '#' (adapté à ' #') → logprob: -7.0559868812561035
    6. ' ew' → logprob: -7.0559868812561035
    7. ' for' → logprob: -7.4309868812561035
    8. 'ews' → logprob: -10.055987358093262
    9. 'east' → logprob: -10.555987358093262
    10. '           ' → logprob: -10.930987358093262

Token 872: ' Add' (ID: 4063)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.4356692433357239
    2. 'for' → logprob: -1.060669183731079
    3. '       ' → logprob: -5.935669422149658
    4. '#' → logprob: -6.310669422149658
    5. '   ' → logprob: -6.810669422149658
    6. 'ews' → logprob: -7.560669422149658
    7. ' for' → logprob: -8.6856689453125
    8. 'ns' → logprob: -8.6856689453125
    9. 'self' → logprob: -8.9356689453125
    10. ' ew' → logprob: -9.3106689453125

Token 873: ' roads' (ID: 30027)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6482652425765991
    2. 'for' → logprob: -0.7732652425765991
    3. '       ' → logprob: -5.148265361785889
    4. ' roads' → logprob: -5.523265361785889
    5. '#' → logprob: -6.023265361785889
    6. '   ' → logprob: -7.273265361785889
    7. ' all' → logprob: -7.648265361785889
    8. 'ew' → logprob: -8.14826488494873
    9. ' east' → logprob: -8.27326488494873
    10. 'roads' → logprob: -8.39826488494873

Token 874: ' connecting' (ID: 29430)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.560703694820404
    2. 'for' → logprob: -1.4357037544250488
    3. ' for' → logprob: -1.6857037544250488
    4. ' to' → logprob: -6.935703754425049
    5. ' between' → logprob: -6.935703754425049
    6. ' =' → logprob: -7.185703754425049
    7. '#' → logprob: -7.310703754425049
    8. '   ' → logprob: -7.935703754425049
    9. ':' → logprob: -8.06070327758789
    10. '=' → logprob: -8.06070327758789

Token 875: ' adjacent' (ID: 39069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8463276624679565
    2. 'adj' → logprob: -1.9713276624679565
    3. 'each' → logprob: -2.221327781677246
    4. 'all' → logprob: -2.221327781677246
    5. 'east' → logprob: -2.471327781677246
    6. 'ew' → logprob: -3.846327781677246
    7. 'horizontal' → logprob: -3.971327781677246
    8. ' for' → logprob: -3.971327781677246
    9. ' east' → logprob: -4.221327781677246
    10. 'inter' → logprob: -4.596327781677246

Token 876: ' intersections' (ID: 143513)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.07162757962942123
    2. 'east' → logprob: -3.196627616882324
    3. ' intersections' → logprob: -4.446627616882324
    4. 'coordinates' → logprob: -5.321627616882324
    5. 'rows' → logprob: -6.071627616882324
    6. 'vertical' → logprob: -6.321627616882324
    7. 'horizontal' → logprob: -6.321627616882324
    8. ' east' → logprob: -6.446627616882324
    9. 'ew' → logprob: -6.571627616882324
    10. '   ' → logprob: -7.071627616882324

Token 877: ' East' (ID: 10809)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07096455246210098
    2. ' for' → logprob: -3.0709645748138428
    3. 'for' → logprob: -3.9459645748138428
    4. '
' → logprob: -6.195964336395264
    5. ',' → logprob: -8.445964813232422
    6. ' in' → logprob: -9.445964813232422
    7. '   ' → logprob: -9.570964813232422
    8. '           ' → logprob: -9.570964813232422
    9. ':' → logprob: -9.945964813232422
    10. '#' → logprob: -10.195964813232422

Token 878: '-West' (ID: 71616)
  Prédit: '-west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-west' → logprob: -0.5064622163772583
    2. '-West' → logprob: -2.1314620971679688
    3. '-' → logprob: -2.8814620971679688
    4. 'west' → logprob: -3.0064620971679688
    5. '       ' → logprob: -3.1314620971679688
    6. '   ' → logprob: -3.2564620971679688
    7. 'and' → logprob: -3.3814620971679688
    8. ' and' → logprob: -3.7564620971679688
    9. 'West' → logprob: -4.631462097167969
    10. '_w' → logprob: -4.881462097167969

Token 879: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8788470029830933
    2. '       ' → logprob: -1.2538470029830933
    3. 'for' → logprob: -1.7538470029830933
    4. ' for' → logprob: -2.253847122192383
    5. 'and' → logprob: -4.253847122192383
    6. ',' → logprob: -5.753847122192383
    7. '
' → logprob: -6.003847122192383
    8. '   ' → logprob: -7.753847122192383
    9. '           ' → logprob: -8.878847122192383
    10. '#' → logprob: -8.878847122192383

Token 880: ' North' (ID: 7180)
  Prédit: 'North'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'North' → logprob: -0.057113636285066605
    2. ' North' → logprob: -2.9321136474609375
    3. 'north' → logprob: -6.3071136474609375
    4. '#' → logprob: -8.807113647460938
    5. '   ' → logprob: -9.057113647460938
    6. 'South' → logprob: -9.807113647460938
    7. ' north' → logprob: -10.557113647460938
    8. '       ' → logprob: -10.807113647460938
    9. ' ' → logprob: -11.432113647460938
    10. ' #' → logprob: -12.057113647460938

Token 881: '-S' (ID: 6968)
  Prédit: '-S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-S' → logprob: -0.006877103354781866
    2. '-' → logprob: -5.1318769454956055
    3. 'South' → logprob: -7.7568769454956055
    4. '       ' → logprob: -8.256876945495605
    5. '   ' → logprob: -8.756876945495605
    6. '#' → logprob: -11.131876945495605
    7. ' -' → logprob: -11.631876945495605
    8. ' ' → logprob: -11.756876945495605
    9. '-
' → logprob: -11.756876945495605
    10. '–' → logprob: -12.131876945495605

Token 882: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.09661887586116791
    2. 'orth' → logprob: -2.596618890762329
    3. 'South' → logprob: -4.09661865234375
    4. 'Orth' → logprob: -7.59661865234375
    5. 'North' → logprob: -8.59661865234375
    6. 'uth' → logprob: -9.22161865234375
    7. 'out' → logprob: -10.59661865234375
    8. 'S' → logprob: -10.59661865234375
    9. 'south' → logprob: -10.72161865234375
    10. '```' → logprob: -11.47161865234375

Token 883: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022403046023100615
    2. '
' → logprob: -6.752240180969238
    3. ' for' → logprob: -7.377240180969238
    4. 'for' → logprob: -8.377240180969238
    5. ',' → logprob: -9.002240180969238
    6. '   ' → logprob: -10.627240180969238
    7. '.' → logprob: -11.752240180969238
    8. '#' → logprob: -11.752240180969238
    9. '        
' → logprob: -11.877240180969238
    10. '           ' → logprob: -12.002240180969238

Token 884: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024584142956882715
    2. '
' → logprob: -6.502458572387695
    3. ',' → logprob: -8.377458572387695
    4. ':' → logprob: -8.627458572387695
    5. ' for' → logprob: -8.627458572387695
    6. '        
' → logprob: -9.127458572387695
    7. 'for' → logprob: -9.627458572387695
    8. '   ' → logprob: -9.752458572387695
    9. '#' → logprob: -10.377458572387695
    10. '    
' → logprob: -10.502458572387695

Token 885: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18602412939071655
    2. 'ew' → logprob: -2.1860241889953613
    3. 'for' (adapté à ' for') → logprob: -2.9360241889953613
    4. ' for' → logprob: -6.186024188995361
    5. '   ' → logprob: -6.436024188995361
    6. ' ew' → logprob: -8.686023712158203
    7. 'ews' → logprob: -8.811023712158203
    8. 'east' → logprob: -9.436023712158203
    9. '#' → logprob: -10.436023712158203
    10. '           ' → logprob: -10.561023712158203

Token 886: ' coord' (ID: 25819)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.009898101910948753
    2. 'i' → logprob: -5.2598981857299805
    3. ' ew' → logprob: -5.8848981857299805
    4. 'ns' → logprob: -7.5098981857299805
    5. 'x' → logprob: -7.8848981857299805
    6. '   ' → logprob: -8.00989818572998
    7. 'east' → logprob: -8.75989818572998
    8. 'e' → logprob: -9.25989818572998
    9. 'ews' → logprob: -9.63489818572998
    10. 'row' → logprob: -10.00989818572998

Token 887: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055017802864313126
    2. 'in' → logprob: -2.9300177097320557
    3. ' ' → logprob: -9.805017471313477
    4. '_in' → logprob: -10.180017471313477
    5. '	in' → logprob: -11.180017471313477
    6. 'east' → logprob: -12.180017471313477
    7. 's' → logprob: -12.680017471313477
    8. '_' → logprob: -12.805017471313477
    9. ' East' → logprob: -13.180017471313477
    10. 'East' → logprob: -13.180017471313477

Token 888: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.4894986785948277e-05
    2. ' self' → logprob: -10.125044822692871
    3. 'list' → logprob: -12.750044822692871
    4. '   ' → logprob: -13.875044822692871
    5. 'sorted' → logprob: -14.625044822692871
    6. '(self' → logprob: -15.125044822692871
    7. '       ' → logprob: -15.750044822692871
    8. '	self' → logprob: -17.250045776367188
    9. '[self' → logprob: -17.375045776367188
    10. ' ' → logprob: -17.750045776367188

Token 889: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -6.670925358776003e-05
    2. 'valid' → logprob: -9.625066757202148
    3. '	valid' → logprob: -14.875066757202148
    4. 'Valid' → logprob: -16.87506675720215
    5. ' valid' → logprob: -17.00006675720215
    6. '.invalid' → logprob: -17.62506675720215
    7. '.' → logprob: -17.75006675720215
    8. '   ' → logprob: -18.00006675720215
    9. '(valid' → logprob: -18.00006675720215
    10. '_valid' → logprob: -18.37506675720215

Token 890: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.700132997939363e-05
    2. 'inter' → logprob: -11.000017166137695
    3. 'Inter' → logprob: -15.875017166137695
    4. '
' → logprob: -17.000017166137695
    5. '   ' → logprob: -17.625017166137695
    6. '\' → logprob: -17.875017166137695
    7. '           ' → logprob: -18.000017166137695
    8. ' intersections' → logprob: -18.000017166137695
    9. '_INTER' → logprob: -18.375017166137695
    10. '```' → logprob: -18.750017166137695

Token 891: 'sections' (ID: 52783)
  Prédit: 'sections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sections' → logprob: -0.011542649008333683
    2. 'ections' → logprob: -4.636542797088623
    3. 'ter' → logprob: -7.511542797088623
    4. 'ctions' → logprob: -7.636542797088623
    5. 'er' → logprob: -8.761542320251465
    6. 'estions' → logprob: -8.886542320251465
    7. 'ers' → logprob: -8.886542320251465
    8. 'ters' → logprob: -9.136542320251465
    9. 's' → logprob: -9.386542320251465
    10. 'erse' → logprob: -11.011542320251465

Token 892: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760876536369324
    2. ':' → logprob: -0.8260876536369324
    3. ':
' → logprob: -9.451087951660156
    4. '       ' → logprob: -10.076087951660156
    5. '):
' → logprob: -11.326087951660156
    6. ':

' → logprob: -11.951087951660156
    7. ',' → logprob: -12.951087951660156
    8. '.' → logprob: -13.201087951660156
    9. '():
' → logprob: -13.826087951660156
    10. '           ' → logprob: -14.076087951660156

Token 893: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02807830274105072
    2. ':' → logprob: -3.653078317642212
    3. ':
' → logprob: -6.653078079223633
    4. '           ' → logprob: -8.903078079223633
    5. ',' → logprob: -9.403078079223633
    6. '   ' → logprob: -10.153078079223633
    7. '        
' → logprob: -10.153078079223633
    8. '<|end|>' → logprob: -10.153078079223633
    9. '```' → logprob: -10.528078079223633
    10. '):
' → logprob: -11.028078079223633

Token 894: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7883007526397705
    2. 'ew' → logprob: -0.9133007526397705
    3. '           ' → logprob: -2.9133007526397705
    4. '#' (adapté à ' #') → logprob: -3.2883007526397705
    5. 'for' → logprob: -3.5383007526397705
    6. 'east' → logprob: -4.913300514221191
    7. '       ' → logprob: -5.288300514221191
    8. ' if' → logprob: -5.413300514221191
    9. 'ns' → logprob: -6.413300514221191
    10. ' ew' → logprob: -7.038300514221191

Token 895: ' East' (ID: 10809)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37262165546417236
    2. 'ew' → logprob: -1.4976216554641724
    3. '#' → logprob: -2.997621536254883
    4. 'for' → logprob: -4.247621536254883
    5. 'east' → logprob: -4.622621536254883
    6. '       ' → logprob: -5.372621536254883
    7. 'ns' → logprob: -5.372621536254883
    8. '   ' → logprob: -6.747621536254883
    9. 'neighbors' → logprob: -6.997621536254883
    10. '           ' → logprob: -7.997621536254883

Token 896: ' neighbor' (ID: 13034)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.21932582557201385
    2. '_neighbor' → logprob: -2.3443257808685303
    3. 'ward' → logprob: -3.9693257808685303
    4. ' =' → logprob: -4.094326019287109
    5. '_coord' → logprob: -4.344326019287109
    6. '       ' → logprob: -4.594326019287109
    7. '_' → logprob: -4.594326019287109
    8. '_ro' → logprob: -4.969326019287109
    9. 'neighbor' → logprob: -5.344326019287109
    10. 'ern' → logprob: -5.844326019287109

Token 897: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7098243832588196
    2. '           ' → logprob: -1.5848243236541748
    3. '=' → logprob: -2.334824323654175
    4. 'ew' → logprob: -2.584824323654175
    5. 'east' → logprob: -2.584824323654175
    6. 'neighbor' → logprob: -4.334824562072754
    7. 'if' → logprob: -4.959824562072754
    8. ',' → logprob: -5.084824562072754
    9. '       ' → logprob: -5.209824562072754
    10. 'coord' → logprob: -6.084824562072754

Token 898: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3486017882823944
    2. '=' → logprob: -1.8486018180847168
    3. 'ew' → logprob: -2.598601818084717
    4. '           ' → logprob: -3.348601818084717
    5. 'east' → logprob: -5.348601818084717
    6. 'next' → logprob: -5.723601818084717
    7. '_e' → logprob: -6.098601818084717
    8. 'if' → logprob: -6.098601818084717
    9. '_' → logprob: -6.223601818084717
    10. '       ' → logprob: -6.348601818084717

Token 899: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' (adapté à ' ew') → logprob: -0.7568632960319519
    2. 'next' → logprob: -1.3818633556365967
    3. 'east' → logprob: -1.6318633556365967
    4. 'if' → logprob: -3.0068633556365967
    5. 'neighbor' → logprob: -3.8818633556365967
    6. '           ' → logprob: -4.881863117218018
    7. 'e' → logprob: -6.256863117218018
    8. '               ' → logprob: -7.006863117218018
    9. ' east' → logprob: -7.006863117218018
    10. ' next' → logprob: -7.381863117218018

Token 900: '_ord' (ID: 194620)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.4871518909931183
    2. '_ord' → logprob: -1.237151861190796
    3. ' =' → logprob: -3.737151861190796
    4. '=' → logprob: -3.737151861190796
    5. '_index' → logprob: -4.362152099609375
    6. '_n' → logprob: -4.737152099609375
    7. '_idx' → logprob: -5.237152099609375
    8. 'next' → logprob: -5.362152099609375
    9. '_neighbor' → logprob: -5.362152099609375
    10. '_code' → logprob: -5.987152099609375

Token 901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12698690593242645
    2. ' =' → logprob: -2.1269869804382324
    3. '           ' → logprob: -10.876986503601074
    4. '+' → logprob: -12.251986503601074
    5. ',' → logprob: -12.501986503601074
    6. '   ' → logprob: -12.626986503601074
    7. '       ' → logprob: -12.876986503601074
    8. '_coord' → logprob: -12.876986503601074
    9. ' ' → logprob: -13.001986503601074
    10. '               ' → logprob: -13.376986503601074

Token 902: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -2.165027217415627e-05
    2. ' ord' → logprob: -10.750021934509277
    3. '(ord' → logprob: -16.25002098083496
    4. '   ' → logprob: -16.87502098083496
    5. 'ords' → logprob: -18.62502098083496
    6. '       ' → logprob: -21.75002098083496
    7. ' ' → logprob: -21.75002098083496
    8. '  ' → logprob: -22.37502098083496
    9. '           ' → logprob: -22.62502098083496
    10. 'ordinal' → logprob: -23.25002098083496

Token 903: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -3.5954712075181305e-05
    2. 'coord' → logprob: -10.250036239624023
    3. '(co' → logprob: -14.750036239624023
    4. '(' → logprob: -16.125036239624023
    5. '(coords' → logprob: -16.750036239624023
    6. '(coeff' → logprob: -19.125036239624023
    7. '((' → logprob: -20.625036239624023
    8. ' coord' → logprob: -20.625036239624023
    9. '(self' → logprob: -21.125036239624023
    10. '(
' → logprob: -21.125036239624023

Token 904: '.e' (ID: 2560)
  Prédit: '.coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coord' → logprob: -0.04794341325759888
    2. '(coord' → logprob: -3.422943353652954
    3. 'coord' → logprob: -5.172943592071533
    4. 'self' → logprob: -6.047943592071533
    5. '.' → logprob: -6.172943592071533
    6. '.co' → logprob: -6.547943592071533
    7. '.e' → logprob: -6.797943592071533
    8. '(self' → logprob: -7.922943592071533
    9. 'east' → logprob: -8.422943115234375
    10. ' .' → logprob: -8.547943115234375

Token 905: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.0034469456877559423
    2. 'east' → logprob: -6.00344705581665
    3. '_' → logprob: -7.75344705581665
    4. '_w' → logprob: -7.87844705581665
    5. '_ast' → logprob: -10.378446578979492
    6. 'a' → logprob: -10.878446578979492
    7. 'west' → logprob: -11.003446578979492
    8. '_e' → logprob: -11.128446578979492
    9. 'w' → logprob: -11.253446578979492
    10. '```' → logprob: -12.128446578979492

Token 906: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -5.9153885558771435e-06
    2. 'west' → logprob: -13.250005722045898
    3. '   ' → logprob: -13.375005722045898
    4. 'w' → logprob: -13.750005722045898
    5. '_' → logprob: -15.000005722045898
    6. ' _' → logprob: -15.375005722045898
    7. '       ' → logprob: -15.625005722045898
    8. 'a' → logprob: -16.2500057220459
    9. '_s' → logprob: -16.3750057220459
    10. ' ' → logprob: -16.3750057220459

Token 907: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0010120879160240293
    2. 'west' → logprob: -7.001012325286865
    3. 'st' → logprob: -9.751011848449707
    4. 'w' → logprob: -11.126011848449707
    5. 'rest' → logprob: -11.376011848449707
    6. '_est' → logprob: -12.001011848449707
    7. '_w' → logprob: -12.876011848449707
    8. '_' → logprob: -13.376011848449707
    9. 'ew' → logprob: -13.751011848449707
    10. '   ' → logprob: -14.001011848449707

Token 908: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027859680354595184
    2. ')+' → logprob: -3.652859687805176
    3. '+' → logprob: -6.777859687805176
    4. ')
' → logprob: -9.277859687805176
    5. '')' → logprob: -9.402859687805176
    6. ' )' → logprob: -9.777859687805176
    7. '   ' → logprob: -9.777859687805176
    8. '+)' → logprob: -10.652859687805176
    9. '()' → logprob: -11.027859687805176
    10. ' +' → logprob: -11.277859687805176

Token 909: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5237119793891907
    2. ' +' → logprob: -0.8987119793891907
    3. '           ' → logprob: -7.523712158203125
    4. '()+' → logprob: -11.023712158203125
    5. '=' → logprob: -11.648712158203125
    6. ')' → logprob: -12.398712158203125
    7. ')+' → logprob: -12.648712158203125
    8. '+=' → logprob: -12.773712158203125
    9. '+
' → logprob: -12.898712158203125
    10. ' +=' → logprob: -13.273712158203125

Token 910: ' east' (ID: 23557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12655864655971527
    2. '           ' → logprob: -3.126558542251587
    3. ' if' → logprob: -3.626558542251587
    4. 'next' → logprob: -4.001558780670166
    5. 'east' (adapté à ' east') → logprob: -4.376558780670166
    6. 'neighbor' → logprob: -4.501558780670166
    7. 'ew' → logprob: -5.626558780670166
    8. '+' → logprob: -6.876558780670166
    9. ' east' → logprob: -7.876558780670166
    10. ' next' → logprob: -8.001558303833008

Token 911: '_' (ID: 62)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.044824663549661636
    2. '_coord' → logprob: -3.6698246002197266
    3. '_' → logprob: -5.044824600219727
    4. '_w' → logprob: -5.294824600219727
    5. '_ne' → logprob: -6.169824600219727
    6. '_ord' → logprob: -6.419824600219727
    7. '_char' → logprob: -6.919824600219727
    8. 'neighbor' → logprob: -7.294824600219727
    9. '_nb' → logprob: -7.294824600219727
    10. ' =' → logprob: -8.669824600219727

Token 912: 'ew' (ID: 937)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.19222818315029144
    2. 'coord' → logprob: -2.692228078842163
    3. 'ord' → logprob: -3.192228078842163
    4. 'ew' → logprob: -3.317228078842163
    5. 'ne' → logprob: -4.567228317260742
    6. 'nbr' → logprob: -5.317228317260742
    7. '_neighbor' → logprob: -5.442228317260742
    8. '_coord' → logprob: -6.067228317260742
    9. 'ns' → logprob: -6.442228317260742
    10. 'west' → logprob: -6.567228317260742

Token 913: '_ord' (ID: 194620)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8382903337478638
    2. ' =' → logprob: -1.2132903337478638
    3. '_ord' → logprob: -1.3382903337478638
    4. '_' → logprob: -5.588290214538574
    5. 'ord' → logprob: -6.213290214538574
    6. '_coord' → logprob: -7.213290214538574
    7. '_neighbor' → logprob: -8.588290214538574
    8. '=_' → logprob: -8.713290214538574
    9. '_next' → logprob: -8.838290214538574
    10. '_char' → logprob: -9.213290214538574

Token 914: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028052295092493296
    2. ' =' → logprob: -5.877805233001709
    3. '+=' → logprob: -16.127805709838867
    4. '=e' → logprob: -16.502805709838867
    5. '=
' → logprob: -16.752805709838867
    6. '           ' → logprob: -16.752805709838867
    7. '=int' → logprob: -17.252805709838867
    8. '+' → logprob: -17.377805709838867
    9. ')' → logprob: -18.252805709838867
    10. '               ' → logprob: -18.377805709838867

Token 915: ' ew' (ID: 64459)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.009823617525398731
    2. ' ew' → logprob: -4.634823799133301
    3. 'ord' → logprob: -10.2598237991333
    4. '   ' → logprob: -11.1348237991333
    5. ' ord' → logprob: -12.2598237991333
    6. '    ' → logprob: -12.2598237991333
    7. ' ' → logprob: -13.5098237991333
    8. 'ews' → logprob: -13.8848237991333
    9. 'ow' → logprob: -14.0098237991333
    10. '  ' → logprob: -14.0098237991333

Token 916: '_ord' (ID: 194620)
  Prédit: '_ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ord' → logprob: -0.0001684981834841892
    2. 'ord' → logprob: -8.750168800354004
    3. '_' → logprob: -11.875168800354004
    4. '_order' → logprob: -13.875168800354004
    5. '+' → logprob: -14.500168800354004
    6. '(ord' → logprob: -14.625168800354004
    7. 'ORD' → logprob: -15.375168800354004
    8. 'Ord' → logprob: -16.000167846679688
    9. '_coord' → logprob: -16.375167846679688
    10. 'ordinal' → logprob: -16.375167846679688

Token 917: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693357467651367
    2. ' +' → logprob: -2.1269335746765137
    3. '+
' → logprob: -12.876934051513672
    4. '=' → logprob: -13.126934051513672
    5. '+=' → logprob: -14.626934051513672
    6. ' +
' → logprob: -16.001934051513672
    7. '
' → logprob: -16.251934051513672
    8. '1' → logprob: -16.501934051513672
    9. 'if' → logprob: -16.626934051513672
    10. '           ' → logprob: -16.876934051513672

Token 918: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.625003814697266
    4. '  ' → logprob: -19.375003814697266
    5. '0' → logprob: -20.625003814697266
    6. '```' → logprob: -20.625003814697266
    7. '
' → logprob: -21.250003814697266
    8. '' → logprob: -21.375003814697266
    9. '	' → logprob: -21.375003814697266
    10. '    ' → logprob: -21.937503814697266

Token 919: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.375003814697266
    4. '  ' → logprob: -18.500003814697266
    5. '0' → logprob: -18.875003814697266
    6. '```' → logprob: -19.375003814697266
    7. '
' → logprob: -19.750003814697266
    8. '2' → logprob: -20.062503814697266
    9. '' → logprob: -20.312503814697266
    10. '3' → logprob: -20.625003814697266

Token 920: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01081187091767788
    2. ' if' → logprob: -5.260811805725098
    3. '
' → logprob: -5.510811805725098
    4. 'if' → logprob: -6.760811805725098
    5. ',' → logprob: -8.635811805725098
    6. '<|end|>' → logprob: -9.510811805725098
    7. '               ' → logprob: -11.135811805725098
    8. ';' → logprob: -11.260811805725098
    9. '       ' → logprob: -11.635811805725098
    10. '.' → logprob: -11.760811805725098

Token 921: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7921077013015747
    2. 'if' → logprob: -0.9171077013015747
    3. ' if' → logprob: -1.9171077013015747
    4. '       ' → logprob: -8.542107582092285
    5. 'east' → logprob: -9.792107582092285
    6. ' east' → logprob: -10.042107582092285
    7. ',' → logprob: -10.292107582092285
    8. '   ' → logprob: -11.167107582092285
    9. '               ' → logprob: -11.417107582092285
    10. '#' → logprob: -11.917107582092285

Token 922: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0079701142385602
    2. '           ' → logprob: -5.007970333099365
    3. 'east' → logprob: -6.757970333099365
    4. ' if' → logprob: -10.007969856262207
    5. '       ' → logprob: -10.257969856262207
    6. 'e' → logprob: -12.382969856262207
    7. '               ' → logprob: -12.507969856262207
    8. '   ' → logprob: -13.382969856262207
    9. '#' → logprob: -14.507969856262207
    10. '                   ' → logprob: -14.632969856262207

Token 923: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.04802011698484421
    2. ''e' → logprob: -3.673020124435425
    3. ' east' → logprob: -4.298019886016846
    4. 'chr' → logprob: -5.423019886016846
    5. 'e' → logprob: -6.548019886016846
    6. ''a' → logprob: -7.673019886016846
    7. '   ' → logprob: -7.798019886016846
    8. ''' → logprob: -8.673020362854004
    9. 'self' → logprob: -9.485520362854004
    10. 'ord' → logprob: -9.548020362854004

Token 924: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010241165291517973
    2. '_w' → logprob: -8.50102424621582
    3. 'ew' → logprob: -8.62602424621582
    4. '_e' → logprob: -8.75102424621582
    5. '<' → logprob: -9.00102424621582
    6. '_ord' → logprob: -9.50102424621582
    7. '<=' → logprob: -9.75102424621582
    8. '<_' → logprob: -10.00102424621582
    9. '_coord' → logprob: -10.37602424621582
    10. ' <=' → logprob: -10.37602424621582

Token 925: 'ew' (ID: 937)
  Prédit: 'ew'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.24189002811908722
    2. 'ord' → logprob: -2.2418899536132812
    3. 'east' → logprob: -3.1168899536132812
    4. '_' → logprob: -3.4918899536132812
    5. 'west' → logprob: -4.241889953613281
    6. '_ord' → logprob: -5.116889953613281
    7. 'w' → logprob: -5.616889953613281
    8. '_w' → logprob: -5.866889953613281
    9. '1' → logprob: -5.991889953613281
    10. 'ords' → logprob: -6.866889953613281

Token 926: '_ord' (ID: 194620)
  Prédit: '_ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ord' → logprob: -0.1177944615483284
    2. 'ord' → logprob: -2.3677945137023926
    3. '<=' → logprob: -5.242794513702393
    4. '<' → logprob: -5.742794513702393
    5. '_coord' → logprob: -6.617794513702393
    6. ' <' → logprob: -6.742794513702393
    7. 'Ord' → logprob: -6.867794513702393
    8. ' <=' → logprob: -6.867794513702393
    9. '_' → logprob: -7.367794513702393
    10. '=' → logprob: -7.367794513702393

Token 927: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2707923352718353
    2. ' <' → logprob: -1.7707923650741577
    3. '<=' → logprob: -3.020792245864868
    4. ' <=' → logprob: -4.020792484283447
    5. '<len' → logprob: -8.520792007446289
    6. ' in' → logprob: -10.895792007446289
    7. '<char' → logprob: -11.520792007446289
    8. '<m' → logprob: -11.770792007446289
    9. '<size' → logprob: -11.770792007446289
    10. '<class' → logprob: -12.020792007446289

Token 928: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.00014454191841650754
    2. '(ord' → logprob: -9.375144958496094
    3. ' ord' → logprob: -9.750144958496094
    4. '   ' → logprob: -14.250144958496094
    5. ' ' → logprob: -14.875144958496094
    6. '           ' → logprob: -16.250144958496094
    7. '97' → logprob: -17.000144958496094
    8. 'ords' → logprob: -17.125144958496094
    9. '       ' → logprob: -17.250144958496094
    10. 'ordinal' → logprob: -17.375144958496094

Token 929: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00017112065688706934
    2. '(ord' → logprob: -9.125170707702637
    3. ''' → logprob: -10.875170707702637
    4. '(self' → logprob: -11.000170707702637
    5. ''a' → logprob: -11.125170707702637
    6. '(' → logprob: -12.625170707702637
    7. '(chr' → logprob: -13.000170707702637
    8. ' ('' → logprob: -13.250170707702637
    9. 'ord' → logprob: -13.625170707702637
    10. 'self' → logprob: -14.125170707702637

Token 930: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.2296646535396576
    2. 'a' → logprob: -1.60466468334198
    3. ''' → logprob: -6.4796648025512695
    4. '('' → logprob: -6.4796648025512695
    5. '{' → logprob: -8.35466480255127
    6. '`' → logprob: -8.47966480255127
    7. '{'' → logprob: -8.60466480255127
    8. '```' → logprob: -8.72966480255127
    9. '{
' → logprob: -8.85466480255127
    10. 'chr' → logprob: -9.97966480255127

Token 931: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04323211684823036
    2. ')' → logprob: -4.168231964111328
    3. ''' → logprob: -4.293231964111328
    4. '+' → logprob: -4.793231964111328
    5. ''+' → logprob: -6.418231964111328
    6. ')+' → logprob: -6.668231964111328
    7. ' +' → logprob: -7.293231964111328
    8. '+')' → logprob: -7.418231964111328
    9. '   ' → logprob: -8.418231964111328
    10. '{' → logprob: -9.543231964111328

Token 932: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10033876448869705
    2. ' +' → logprob: -2.3503386974334717
    3. '           ' → logprob: -9.72533893585205
    4. '+self' → logprob: -11.22533893585205
    5. '+'' → logprob: -11.97533893585205
    6. '               ' → logprob: -11.97533893585205
    7. '```' → logprob: -12.35033893585205
    8. '                   ' → logprob: -12.47533893585205
    9. '            ' → logprob: -12.47533893585205
    10. '()+' → logprob: -12.85033893585205

Token 933: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.517272024415433e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -16.00007438659668
    4. '[self' → logprob: -16.37507438659668
    5. '{' → logprob: -18.00007438659668
    6. '+self' → logprob: -18.37507438659668
    7. '0' → logprob: -18.50007438659668
    8. '```' → logprob: -18.62507438659668
    9. '	self' → logprob: -18.62507438659668
    10. '       ' → logprob: -19.00007438659668

Token 934: '.M' (ID: 2015)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013119110371917486
    2. ' self' → logprob: -9.125131607055664
    3. 'M' → logprob: -10.750131607055664
    4. '(self' → logprob: -14.750131607055664
    5. '
' → logprob: -15.875131607055664
    6. '[self' → logprob: -16.625131607055664
    7. 'len' → logprob: -17.375131607055664
    8. '           ' → logprob: -17.625131607055664
    9. '       ' → logprob: -18.000131607055664
    10. '   ' → logprob: -18.125131607055664

Token 935: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6414034366607666
    2. ':' → logprob: -1.1414034366607666
    3. ' and' → logprob: -1.8914034366607666
    4. 'and' → logprob: -6.0164031982421875
    5. '           ' → logprob: -7.6414031982421875
    6. '):
' → logprob: -9.016403198242188
    7. '       ' → logprob: -9.766403198242188
    8. ':
' → logprob: -10.391403198242188
    9. '   ' → logprob: -11.016403198242188
    10. '               ' → logprob: -11.266403198242188

Token 936: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7044913172721863
    2. ':
' → logprob: -1.329491376876831
    3. ':' → logprob: -2.204491376876831
    4. ' and' → logprob: -2.329491376876831
    5. '           ' → logprob: -3.579491376876831
    6. ',' → logprob: -5.704491138458252
    7. '):
' → logprob: -6.954491138458252
    8. ' :
' → logprob: -8.57949161529541
    9. 'and' → logprob: -8.82949161529541
    10. '       ' → logprob: -8.82949161529541

Token 937: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' (adapté à ' east') → logprob: -0.3432530462741852
    2. 'neighbor' → logprob: -1.8432530164718628
    3. ' east' → logprob: -2.2182531356811523
    4. 'next' → logprob: -4.468253135681152
    5. ' neighbor' → logprob: -5.218253135681152
    6. '                   ' → logprob: -5.968253135681152
    7. ' next' → logprob: -6.343253135681152
    8. '               ' → logprob: -6.593253135681152
    9. 'self' → logprob: -8.593253135681152
    10. 'e' → logprob: -8.718253135681152

Token 938: '_coord' (ID: 71065)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0044431742280721664
    2. '_coord' → logprob: -6.129443168640137
    3. '_neighbor' → logprob: -6.379443168640137
    4. '_w' → logprob: -8.754443168640137
    5. '_e' → logprob: -8.754443168640137
    6. 'ew' → logprob: -9.129443168640137
    7. ' =' → logprob: -10.004443168640137
    8. 'coord' → logprob: -11.629443168640137
    9. 'neighbor' → logprob: -11.879443168640137
    10. '   ' → logprob: -12.004443168640137

Token 939: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048588622361421585
    2. ' =' → logprob: -3.048588514328003
    3. '=
' → logprob: -14.298588752746582
    4. '=C' → logprob: -16.423587799072266
    5. ' ' → logprob: -16.798587799072266
    6. '=self' → logprob: -17.048587799072266
    7. '   ' → logprob: -17.173587799072266
    8. '=new' → logprob: -17.173587799072266
    9. 'Coordinate' → logprob: -17.298587799072266
    10. '＝' → logprob: -17.423587799072266

Token 940: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -2.1888679839321412e-05
    2. ' Coordinate' → logprob: -10.750021934509277
    3. 'Coord' → logprob: -15.250021934509277
    4. '   ' → logprob: -16.37502098083496
    5. '           ' → logprob: -17.00002098083496
    6. 'Coordinates' → logprob: -17.75002098083496
    7. 'Coordinator' → logprob: -18.00002098083496
    8. '  ' → logprob: -18.37502098083496
    9. '       ' → logprob: -18.87502098083496
    10. 'Co' → logprob: -19.37502098083496

Token 941: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -9.65101717156358e-05
    2. 'chr' → logprob: -9.250096321105957
    3. '(' → logprob: -15.750096321105957
    4. ' chr' → logprob: -17.125097274780273
    5. '_chr' → logprob: -17.250097274780273
    6. '(str' → logprob: -17.375097274780273
    7. 'Chr' → logprob: -17.500097274780273
    8. '(f' → logprob: -17.875097274780273
    9. '(ch' → logprob: -19.250097274780273
    10. '(char' → logprob: -19.750097274780273

Token 942: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -8.840432565193623e-05
    2. 'east' → logprob: -9.375088691711426
    3. '(' → logprob: -13.250088691711426
    4. 'e' → logprob: -14.375088691711426
    5. ' east' → logprob: -14.875088691711426
    6. '[e' → logprob: -15.500088691711426
    7. '```' → logprob: -15.500088691711426
    8. ' (' → logprob: -16.00008773803711
    9. ')' → logprob: -16.50008773803711
    10. '   ' → logprob: -16.62508773803711

Token 943: 'ast' (ID: 629)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.23346036672592163
    2. 'ast' → logprob: -1.6084604263305664
    3. 'east' → logprob: -5.483460426330566
    4. '_w' → logprob: -6.858460426330566
    5. 'ew' → logprob: -7.233460426330566
    6. '_ast' → logprob: -7.358460426330566
    7. 'west' → logprob: -7.608460426330566
    8. '_' → logprob: -8.733460426330566
    9. '(ast' → logprob: -8.858460426330566
    10. '{' → logprob: -9.733460426330566

Token 944: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003191386058460921
    2. '_ord' → logprob: -8.625319480895996
    3. 'ew' → logprob: -9.125319480895996
    4. '_w' → logprob: -11.625319480895996
    5. 'east' → logprob: -12.500319480895996
    6. '+' → logprob: -12.500319480895996
    7. 'ord' → logprob: -13.125319480895996
    8. '_e' → logprob: -13.500319480895996
    9. 'EW' → logprob: -13.875319480895996
    10. '_coord' → logprob: -13.875319480895996

Token 945: 'ew' (ID: 937)
  Prédit: 'ew'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.2765454649925232
    2. 'east' → logprob: -1.526545524597168
    3. 'west' → logprob: -4.026545524597168
    4. '_' → logprob: -5.401545524597168
    5. 'ord' → logprob: -7.276545524597168
    6. '_w' → logprob: -8.276545524597168
    7. 'w' → logprob: -8.651545524597168
    8. ' east' → logprob: -8.651545524597168
    9. '_ord' → logprob: -9.026545524597168
    10. 'ews' → logprob: -10.464045524597168

Token 946: '_ord' (ID: 194620)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7495530843734741
    2. 'west' → logprob: -1.4995530843734741
    3. '_w' → logprob: -2.2495532035827637
    4. 'ord' → logprob: -2.3745532035827637
    5. '_ord' → logprob: -2.6245532035827637
    6. 'ew' → logprob: -4.124553203582764
    7. '_' → logprob: -6.124553203582764
    8. 'ords' → logprob: -6.749553203582764
    9. 'wd' → logprob: -6.874553203582764
    10. 'wol' → logprob: -6.999553203582764

Token 947: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007640030235052109
    2. '),' → logprob: -7.250763893127441
    3. ' ,' → logprob: -9.875763893127441
    4. '(),' → logprob: -14.750763893127441
    5. '   ' → logprob: -14.875763893127441
    6. ')' → logprob: -14.875763893127441
    7. '       ' → logprob: -15.375763893127441
    8. '(coord' → logprob: -15.375763893127441
    9. '},' → logprob: -16.125764846801758
    10. '`,' → logprob: -16.125764846801758

Token 948: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.006717743817716837
    2. ' coord' → logprob: -5.006717681884766
    3. '(coord' → logprob: -13.256717681884766
    4. '               ' → logprob: -15.881717681884766
    5. '           ' → logprob: -16.006717681884766
    6. 'co' → logprob: -16.256717681884766
    7. '   ' → logprob: -16.631717681884766
    8. '       ' → logprob: -16.756717681884766
    9. 'coordinate' → logprob: -17.006717681884766
    10. '                   ' → logprob: -17.131717681884766

Token 949: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00044008632539771497
    2. 'north' → logprob: -7.7504401206970215
    3. '.' → logprob: -13.375439643859863
    4. ' .' → logprob: -13.625439643859863
    5. ').' → logprob: -13.750439643859863
    6. '_n' → logprob: -14.125439643859863
    7. ',n' → logprob: -14.125439643859863
    8. '
' → logprob: -14.500439643859863
    9. 'North' → logprob: -14.625439643859863
    10. '```' → logprob: -15.000439643859863

Token 950: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.00407923199236393
    2. 'north' → logprob: -5.504079341888428
    3. 'ort' → logprob: -15.37907886505127
    4. '```' → logprob: -16.129079818725586
    5. ' north' → logprob: -16.254079818725586
    6. 'o' → logprob: -17.004079818725586
    7. 'ORTH' → logprob: -17.129079818725586
    8. 'outh' → logprob: -17.254079818725586
    9. 'n' → logprob: -17.254079818725586
    10. '
' → logprob: -17.504079818725586

Token 951: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0003413031517993659
    2. 'south' → logprob: -8.000341415405273
    3. 's' → logprob: -12.500341415405273
    4. '_' → logprob: -14.750341415405273
    5. '```' → logprob: -15.000341415405273
    6. 'South' → logprob: -15.000341415405273
    7. '   ' → logprob: -15.125341415405273
    8. '\' → logprob: -15.375341415405273
    9. 'self' → logprob: -16.125341415405273
    10. 'sou' → logprob: -16.375341415405273

Token 952: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.1155577227473259
    2. 'south' → logprob: -2.7405576705932617
    3. 'orth' → logprob: -3.4905576705932617
    4. 's' → logprob: -4.615557670593262
    5. '_s' → logprob: -5.865557670593262
    6. 'South' → logprob: -6.990557670593262
    7. '_' → logprob: -8.865557670593262
    8. 'uth' → logprob: -9.740557670593262
    9. 'out' → logprob: -9.865557670593262
    10. '```' → logprob: -10.240557670593262

Token 953: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5761198401451111
    2. ')' → logprob: -0.8261198401451111
    3. '               ' → logprob: -8.951119422912598
    4. ')
' → logprob: -10.076119422912598
    5. '           ' → logprob: -12.451119422912598
    6. ')

' → logprob: -13.701119422912598
    7. '                   ' → logprob: -13.826119422912598
    8. '       ' → logprob: -14.576119422912598
    9. '):
' → logprob: -14.951119422912598
    10. '),' → logprob: -15.076119422912598

Token 954: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007843759376555681
    2. 'self' → logprob: -7.500784397125244
    3. ',' → logprob: -9.500783920288086
    4. '           ' → logprob: -9.625783920288086
    5. ' self' → logprob: -10.375783920288086
    6. '                   ' → logprob: -11.000783920288086
    7. ')' → logprob: -11.250783920288086
    8. ' if' → logprob: -11.750783920288086
    9. 'if' → logprob: -12.375783920288086
    10. '                
' → logprob: -12.750783920288086

Token 955: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0899882316589355
    2. 'road' → logprob: -1.3399882316589355
    3. 'self' (adapté à ' self') → logprob: -1.4649882316589355
    4. 'key' → logprob: -1.9649882316589355
    5. 'edge' → logprob: -4.2149882316589355
    6. '               ' → logprob: -4.5899882316589355
    7. 'fro' → logprob: -5.9649882316589355
    8. '           ' → logprob: -7.4649882316589355
    9. '#' → logprob: -7.5899882316589355
    10. 'r' → logprob: -7.7149882316589355

Token 956: '.add' (ID: 1950)
  Prédit: '.ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.3343706429004669
    2. '._' → logprob: -1.5843706130981445
    3. '.add' → logprob: -2.8343706130981445
    4. '.ro' → logprob: -3.9593706130981445
    5. '.valid' → logprob: -6.8343706130981445
    6. '.connect' → logprob: -10.459370613098145
    7. '_ro' → logprob: -10.459370613098145
    8. 'add' → logprob: -10.834370613098145
    9. '.' → logprob: -10.834370613098145
    10. '_ad' → logprob: -10.959370613098145

Token 957: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006852717488072813
    2. '_ro' → logprob: -7.375685214996338
    3. 'Road' → logprob: -10.875685691833496
    4. '(_' → logprob: -11.875685691833496
    5. '```' → logprob: -11.875685691833496
    6. '_r' → logprob: -12.375685691833496
    7. 'road' → logprob: -12.875685691833496
    8. ')_' → logprob: -12.875685691833496
    9. '##_' → logprob: -13.250685691833496
    10. '('_' → logprob: -13.250685691833496

Token 958: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -9.555654105497524e-05
    2. 'Road' → logprob: -10.75009536743164
    3. '_' → logprob: -11.12509536743164
    4. ' road' → logprob: -11.37509536743164
    5. 'ro' → logprob: -11.75009536743164
    6. '```' → logprob: -11.75009536743164
    7. 'roads' → logprob: -11.87509536743164
    8. 'r' → logprob: -12.75009536743164
    9. '_ro' → logprob: -13.25009536743164
    10. 'oad' → logprob: -13.37509536743164

Token 959: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -0.0022229375317692757
    2. '(' → logprob: -6.377223014831543
    3. '(co' → logprob: -8.252223014831543
    4. '(
' → logprob: -9.127223014831543
    5. '(coords' → logprob: -9.127223014831543
    6. '((' → logprob: -10.752223014831543
    7. ' (' → logprob: -11.502223014831543
    8. '(coeff' → logprob: -13.127223014831543
    9. '(Co' → logprob: -13.377223014831543
    10. '(C' → logprob: -13.627223014831543

Token 960: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006927779759280384
    2. ',e' → logprob: -7.375692844390869
    3. ',
' → logprob: -9.875692367553711
    4. ' ,' → logprob: -11.250692367553711
    5. ')' → logprob: -13.875692367553711
    6. ',end' → logprob: -15.375692367553711
    7. '
' → logprob: -15.625692367553711
    8. 'e' → logprob: -15.625692367553711
    9. ',
' → logprob: -16.62569236755371
    10. '),' → logprob: -16.75069236755371

Token 961: ' east' (ID: 23557)
  Prédit: 'east'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'east' → logprob: -0.5759977102279663
    2. ' east' → logprob: -0.8259977102279663
    3. 'e' → logprob: -10.450997352600098
    4. '           ' → logprob: -11.825997352600098
    5. '       ' → logprob: -12.325997352600098
    6. ')' → logprob: -12.700997352600098
    7. '            ' → logprob: -12.700997352600098
    8. '               ' → logprob: -12.825997352600098
    9. '   ' → logprob: -13.325997352600098
    10. '        ' → logprob: -13.825997352600098

Token 962: '_coord' (ID: 71065)
  Prédit: '_coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -0.0003647826088126749
    2. 'coord' → logprob: -8.375365257263184
    3. 'east' → logprob: -9.250365257263184
    4. '_' → logprob: -11.125365257263184
    5. 'Coord' → logprob: -12.125365257263184
    6. '```' → logprob: -12.500365257263184
    7. '_coords' → logprob: -13.375365257263184
    8. 'e' → logprob: -13.625365257263184
    9. '_co' → logprob: -13.875365257263184
    10. ')' → logprob: -13.875365257263184

Token 963: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03959253802895546
    2. ',' → logprob: -3.7895925045013428
    3. ')
' → logprob: -4.164592742919922
    4. '<|end|>' → logprob: -7.789592742919922
    5. '<|end|>' → logprob: -9.664592742919922
    6. '       ' → logprob: -10.414592742919922
    7. '   ' → logprob: -10.664592742919922
    8. '           ' → logprob: -10.664592742919922
    9. '               ' → logprob: -10.664592742919922
    10. ')

' → logprob: -10.789592742919922

Token 964: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00044044392416253686
    2. ' self' → logprob: -7.75044059753418
    3. '           ' → logprob: -12.25044059753418
    4. '               ' → logprob: -12.87544059753418
    5. '                   ' → logprob: -14.25044059753418
    6. '1' → logprob: -14.37544059753418
    7. '   ' → logprob: -14.62544059753418
    8. '       ' → logprob: -15.37544059753418
    9. '(self' → logprob: -16.00044059753418
    10. '                               ' → logprob: -16.25044059753418

Token 965: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -9.567575034452602e-05
    2. 'base' → logprob: -9.37509536743164
    3. '.' → logprob: -11.62509536743164
    4. '.b' → logprob: -14.50009536743164
    5. ' .' → logprob: -14.75009536743164
    6. ').' → logprob: -15.12509536743164
    7. ' base' → logprob: -15.50009536743164
    8. '   ' → logprob: -16.62509536743164
    9. '_base' → logprob: -16.62509536743164
    10. '.bas' → logprob: -16.75009536743164

Token 966: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.2519397437572479
    2. '_time' → logprob: -1.5019397735595703
    3. '_' → logprob: -11.75193977355957
    4. 'tr' → logprob: -14.62693977355957
    5. ')_' → logprob: -14.87693977355957
    6. '_t' → logprob: -15.00193977355957
    7. '_trip' → logprob: -15.00193977355957
    8. 'travel' → logprob: -15.37693977355957
    9. ')' → logprob: -15.62693977355957
    10. '```' → logprob: -15.62693977355957

Token 967: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -1.3544423381972592e-05
    2. 'vel' → logprob: -11.87501335144043
    3. 'av' → logprob: -12.37501335144043
    4. 'ave' → logprob: -13.62501335144043
    5. '_time' → logprob: -15.25001335144043
    6. 'a' → logprob: -15.25001335144043
    7. 'travel' → logprob: -15.25001335144043
    8. 'el' → logprob: -16.00001335144043
    9. 'AVEL' → logprob: -16.12501335144043
    10. '```' → logprob: -16.75001335144043

Token 968: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.9266199160483666e-05
    2. 'time' → logprob: -10.875019073486328
    3. ' time' → logprob: -15.625019073486328
    4. 'Time' → logprob: -16.875019073486328
    5. 'ime' → logprob: -18.375019073486328
    6. '_TIME' → logprob: -18.625019073486328
    7. ')_' → logprob: -18.750019073486328
    8. '   ' → logprob: -18.875019073486328
    9. '_code' → logprob: -19.125019073486328
    10. '```' → logprob: -19.125019073486328

Token 969: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01484917663037777
    2. ')
' → logprob: -4.2648491859436035
    3. '       ' → logprob: -7.6398491859436035
    4. ')
' → logprob: -9.014848709106445
    5. ')

' → logprob: -10.389848709106445
    6. '           ' → logprob: -10.764848709106445
    7. '   ' → logprob: -11.389848709106445
    8. '               ' → logprob: -11.889848709106445
    9. ' )' → logprob: -11.889848709106445
    10. ')

' → logprob: -13.264848709106445

Token 970: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17122569680213928
    2. '   ' → logprob: -2.0462257862091064
    3. '<|end|>' → logprob: -4.546225547790527
    4. '    
' → logprob: -5.046225547790527
    5. 'def' → logprob: -6.046225547790527
    6. '

' → logprob: -6.421225547790527
    7. '       ' → logprob: -6.421225547790527
    8. '```' → logprob: -6.546225547790527
    9. '  
' → logprob: -7.171225547790527
    10. '        
' → logprob: -7.671225547790527

Token 971: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023741530254483223
    2. '#' (adapté à ' #') → logprob: -3.7737414836883545
    3. '       ' → logprob: -7.898741722106934
    4. '   ' → logprob: -9.148741722106934
    5. 'north' → logprob: -12.148741722106934
    6. ' #' → logprob: -12.398741722106934
    7. '          ' → logprob: -13.273741722106934
    8. 'n' → logprob: -13.273741722106934
    9. '               ' → logprob: -13.398741722106934
    10. 'def' → logprob: -13.773741722106934

Token 972: ' South' (ID: 6800)
  Prédit: 'north'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'north' → logprob: -0.04954054579138756
    2. '#' → logprob: -3.9245405197143555
    3. 'North' → logprob: -4.0495405197143555
    4. ' north' → logprob: -4.9245405197143555
    5. 'ns' → logprob: -6.0495405197143555
    6. ' North' → logprob: -7.2995405197143555
    7. 'south' → logprob: -8.049540519714355
    8. '           ' → logprob: -8.799540519714355
    9. ' #' → logprob: -8.924540519714355
    10. '   ' → logprob: -9.799540519714355

Token 973: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.8895791172981262
    2. '_coord' → logprob: -1.0145790576934814
    3. '_neighbor' → logprob: -1.7645790576934814
    4. '_' → logprob: -3.2645790576934814
    5. 'coord' → logprob: -4.8895792961120605
    6. ' neighbor' → logprob: -5.5145792961120605
    7. '_ord' → logprob: -6.6395792961120605
    8. 'ne' → logprob: -7.5145792961120605
    9. '       ' → logprob: -7.6395792961120605
    10. 'ward' → logprob: -7.6395792961120605

Token 974: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4500354528427124
    2. '
' → logprob: -1.0750354528427124
    3. ' =' → logprob: -4.575035572052002
    4. 'ns' → logprob: -5.200035572052002
    5. '=' → logprob: -6.450035572052002
    6. ':' → logprob: -7.450035572052002
    7. '
' → logprob: -7.700035572052002
    8. 'n' → logprob: -7.825035572052002
    9. '               ' → logprob: -7.825035572052002
    10. 'north' → logprob: -7.950035572052002

Token 975: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47579172253608704
    2. '
' → logprob: -0.9757916927337646
    3. '       ' → logprob: -7.225791931152344
    4. 'north' → logprob: -7.975791931152344
    5. '
' → logprob: -8.850791931152344
    6. '               ' → logprob: -9.600791931152344
    7. ',' → logprob: -9.600791931152344
    8. 'n' → logprob: -9.725791931152344
    9. 'ns' → logprob: -9.725791931152344
    10. '            
' → logprob: -10.225791931152344

Token 976: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' (adapté à ' south') → logprob: -0.012379789724946022
    2. 'if' → logprob: -5.0123796463012695
    3. ' south' → logprob: -5.3873796463012695
    4. 'ns' → logprob: -7.1373796463012695
    5. 's' → logprob: -9.51237964630127
    6. 'sou' → logprob: -9.63737964630127
    7. 'down' → logprob: -9.76237964630127
    8. 'north' → logprob: -10.13737964630127
    9. '   ' → logprob: -11.01237964630127
    10. ' if' → logprob: -12.26237964630127

Token 977: '_ns' (ID: 83774)
  Prédit: '_coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -0.02484860084950924
    2. '_' → logprob: -4.149848461151123
    3. '_ns' → logprob: -5.399848461151123
    4. '_n' → logprob: -6.024848461151123
    5. '_ord' → logprob: -6.524848461151123
    6. 'coord' → logprob: -8.899848937988281
    7. '_s' → logprob: -9.899848937988281
    8. '_cs' → logprob: -10.149848937988281
    9. '_coords' → logprob: -10.274848937988281
    10. '_nb' → logprob: -10.649848937988281

Token 978: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6379883289337158
    2. '=' → logprob: -0.7629883289337158
    3. '_ord' → logprob: -5.887988090515137
    4. '_coord' → logprob: -6.012988090515137
    5. '_' → logprob: -10.012988090515137
    6. '_order' → logprob: -11.262988090515137
    7. '_num' → logprob: -11.512988090515137
    8. '+' → logprob: -11.512988090515137
    9. '_=' → logprob: -11.512988090515137
    10. '=int' → logprob: -11.637988090515137

Token 979: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.0013336940901353955
    2. ' coord' → logprob: -6.626333713531494
    3. '(coord' → logprob: -12.751333236694336
    4. 'co' → logprob: -13.251333236694336
    5. '   ' → logprob: -13.751333236694336
    6. 'coordinate' → logprob: -14.001333236694336
    7. '  ' → logprob: -15.126333236694336
    8. ' ' → logprob: -15.251333236694336
    9. 'cord' → logprob: -15.751333236694336
    10. 'coords' → logprob: -16.001333236694336

Token 980: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.06341951340436935
    2. '+' → logprob: -3.1884195804595947
    3. ' +' → logprob: -4.938419342041016
    4. 'coord' → logprob: -5.563419342041016
    5. '.coord' → logprob: -5.688419342041016
    6. '=' → logprob: -7.063419342041016
    7. 'north' → logprob: -7.188419342041016
    8. '_n' → logprob: -7.188419342041016
    9. 'n' → logprob: -7.313419342041016
    10. '   ' → logprob: -7.563419342041016

Token 981: 'orth' (ID: 2909)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.011335222981870174
    2. 'orth' → logprob: -5.011335372924805
    3. 's' → logprob: -6.011335372924805
    4. '_s' → logprob: -7.011335372924805
    5. 'north' → logprob: -7.011335372924805
    6. '+' → logprob: -9.386335372924805
    7. 'outh' → logprob: -9.386335372924805
    8. 'sou' → logprob: -9.511335372924805
    9. 'South' → logprob: -10.511335372924805
    10. '-s' → logprob: -10.636335372924805

Token 982: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.006200145464390516
    2. 'south' → logprob: -5.131200313568115
    3. 's' → logprob: -8.256199836730957
    4. 'sou' → logprob: -12.506199836730957
    5. 'South' → logprob: -13.006199836730957
    6. '_' → logprob: -13.631199836730957
    7. 'self' → logprob: -13.881199836730957
    8. '\' → logprob: -14.006199836730957
    9. '+' → logprob: -14.256199836730957
    10. '-s' → logprob: -15.506199836730957

Token 983: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.2183648943901062
    2. 'south' → logprob: -1.843364953994751
    3. 'orth' → logprob: -3.468364953994751
    4. 's' → logprob: -5.343364715576172
    5. 'South' → logprob: -7.343364715576172
    6. 'uth' → logprob: -7.718364715576172
    7. '+' → logprob: -7.843364715576172
    8. '_s' → logprob: -8.718364715576172
    9. 'sou' → logprob: -10.093364715576172
    10. 'oth' → logprob: -10.093364715576172

Token 984: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6935240030288696
    2. ' +' → logprob: -0.6935240030288696
    3. '=' → logprob: -7.94352388381958
    4. ' =' → logprob: -11.943524360656738
    5. '+=' → logprob: -12.068524360656738
    6. '+
' → logprob: -12.443524360656738
    7. ' +=' → logprob: -12.693524360656738
    8. ' +
' → logprob: -13.568524360656738
    9. '   ' → logprob: -15.193524360656738
    10. '1' → logprob: -15.568524360656738

Token 985: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '[' → logprob: -19.625
    4. '   ' → logprob: -20.375
    5. '0' → logprob: -21.25
    6. '<|end|>' → logprob: -21.375
    7. '```' → logprob: -21.375
    8. '(' → logprob: -21.875
    9. '{' → logprob: -22.0
    10. '=' → logprob: -22.125

Token 986: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -20.125
    4. '[' → logprob: -20.375
    5. '<|end|>' → logprob: -20.75
    6. '```' → logprob: -20.875
    7. '-' → logprob: -21.0
    8. '0' → logprob: -21.375
    9. '
' → logprob: -21.5625
    10. '{' → logprob: -22.0625

Token 987: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08143295347690582
    2. '
' → logprob: -2.706433057785034
    3. '<|end|>' → logprob: -5.456432819366455
    4. ' if' → logprob: -5.706432819366455
    5. '       ' → logprob: -6.956432819366455
    6. 'if' → logprob: -7.206432819366455
    7. ' <=' → logprob: -7.456432819366455
    8. '<=' → logprob: -7.456432819366455
    9. '          ' → logprob: -8.206433296203613
    10. '               ' → logprob: -8.331433296203613

Token 988: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029408519621938467
    2. ' if' → logprob: -6.877940654754639
    3. '<|end|>' → logprob: -7.002940654754639
    4. 'if' → logprob: -7.877940654754639
    5. '       ' → logprob: -8.252941131591797
    6. ',' → logprob: -9.502941131591797
    7. '               ' → logprob: -9.877941131591797
    8. '<=' → logprob: -10.002941131591797
    9. '          ' → logprob: -10.252941131591797
    10. '<' → logprob: -10.502941131591797

Token 989: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006809803890064359
    2. '           ' → logprob: -8.125680923461914
    3. ' if' → logprob: -8.250680923461914
    4. '       ' → logprob: -9.000680923461914
    5. '   ' → logprob: -15.875680923461914
    6. '               ' → logprob: -16.375680923461914
    7. '	if' → logprob: -16.625680923461914
    8. '```' → logprob: -16.625680923461914
    9. ';if' → logprob: -18.125680923461914
    10. 'If' → logprob: -18.375680923461914

Token 990: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.08900272101163864
    2. ' south' → logprob: -2.4640026092529297
    3. 'sou' → logprob: -10.33900260925293
    4. '1' → logprob: -10.71400260925293
    5. '   ' → logprob: -13.08900260925293
    6. 's' → logprob: -13.33900260925293
    7. '(s' → logprob: -14.08900260925293
    8. 'South' → logprob: -14.58900260925293
    9. ' ' → logprob: -14.58900260925293
    10. '	s' → logprob: -14.96400260925293

Token 991: '_ns' (ID: 83774)
  Prédit: '_ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ns' → logprob: -0.004757392220199108
    2. 'south' → logprob: -6.129757404327393
    3. 'ns' → logprob: -6.629757404327393
    4. '_sn' → logprob: -7.754757404327393
    5. '_' → logprob: -8.004756927490234
    6. '<=' → logprob: -8.754756927490234
    7. '_n' → logprob: -9.504756927490234
    8. '_s' → logprob: -10.004756927490234
    9. '<' → logprob: -10.129756927490234
    10. '	ns' → logprob: -10.129756927490234

Token 992: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5763818025588989
    2. ' <=' → logprob: -0.8263818025588989
    3. '<' → logprob: -8.07638168334961
    4. ' <' → logprob: -8.95138168334961
    5. ')<=' → logprob: -15.07638168334961
    6. '<|end|>' → logprob: -15.07638168334961
    7. ' ' → logprob: -15.32638168334961
    8. '1' → logprob: -15.82638168334961
    9. '```' → logprob: -15.82638168334961
    10. '≤' → logprob: -16.07638168334961

Token 993: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002615742268972099
    2. ' self' → logprob: -8.250261306762695
    3. 'N' → logprob: -16.625261306762695
    4. '(self' → logprob: -16.625261306762695
    5. '=self' → logprob: -17.250261306762695
    6. '0' → logprob: -17.750261306762695
    7. '	self' → logprob: -18.250261306762695
    8. '
' → logprob: -18.500261306762695
    9. '<|end|>' → logprob: -18.750261306762695
    10. '[self' → logprob: -19.000261306762695

Token 994: '.N' (ID: 4439)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04879503697156906
    2. 'N' → logprob: -3.048794984817505
    3. ' self' → logprob: -8.798794746398926
    4. '.N' → logprob: -9.798794746398926
    5. ' N' → logprob: -15.423794746398926
    6. '_N' → logprob: -15.548794746398926
    7. '(self' → logprob: -15.798794746398926
    8. '.self' → logprob: -15.923794746398926
    9. '	self' → logprob: -16.173795700073242
    10. '[self' → logprob: -16.423795700073242

Token 995: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.023785069584846497
    2. ':' → logprob: -3.77378511428833
    3. '               ' → logprob: -8.023784637451172
    4. '           ' → logprob: -9.023784637451172
    5. ' and' → logprob: -10.023784637451172
    6. '):
' → logprob: -10.648784637451172
    7. ':

' → logprob: -12.148784637451172
    8. ' :
' → logprob: -12.273784637451172
    9. ':
' → logprob: -12.898784637451172
    10. ',' → logprob: -13.023784637451172

Token 996: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034224740229547024
    2. '           ' → logprob: -6.503422260284424
    3. ':' → logprob: -6.753422260284424
    4. ':
' → logprob: -7.878422260284424
    5. '                   ' → logprob: -9.503422737121582
    6. '       ' → logprob: -9.753422737121582
    7. ',' → logprob: -9.878422737121582
    8. '<|end|>' → logprob: -10.253422737121582
    9. '                       ' → logprob: -10.503422737121582
    10. '              ' → logprob: -10.503422737121582

Token 997: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' (adapté à ' south') → logprob: -0.1291475147008896
    2. ' south' → logprob: -2.129147529602051
    3. '               ' → logprob: -6.504147529602051
    4. 'down' → logprob: -7.879147529602051
    5. 's' → logprob: -8.62914752960205
    6. '                   ' → logprob: -9.50414752960205
    7. 'self' → logprob: -10.00414752960205
    8. 'sou' → logprob: -11.25414752960205
    9. 'South' → logprob: -12.12914752960205
    10. ' down' → logprob: -12.75414752960205

Token 998: '_coord' (ID: 71065)
  Prédit: '_coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -0.00017994173686020076
    2. '_' → logprob: -9.3751802444458
    3. 'coord' → logprob: -10.2501802444458
    4. '_coordinate' → logprob: -10.7501802444458
    5. '
' → logprob: -11.2501802444458
    6. '_coords' → logprob: -11.5001802444458
    7. '_co' → logprob: -12.6251802444458
    8. '_s' → logprob: -13.0001802444458
    9. '_neighbor' → logprob: -13.5001802444458
    10. '_COORD' → logprob: -13.8751802444458

Token 999: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759403705596924
    2. ' =' → logprob: -0.8259403705596924
    3. '=
' → logprob: -14.825940132141113
    4. '           ' → logprob: -15.200940132141113
    5. '   ' → logprob: -16.82594108581543
    6. '               ' → logprob: -17.07594108581543
    7. '       ' → logprob: -17.32594108581543
    8. 'Coordinate' → logprob: -17.45094108581543
    9. ' ' → logprob: -17.70094108581543
    10. ' =
' → logprob: -18.20094108581543

Token 1000: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -1.676292231422849e-05
    2. ' Coordinate' → logprob: -11.000017166137695
    3. 'Coordinates' → logprob: -17.375017166137695
    4. 'Coord' → logprob: -17.500017166137695
    5. 'Coordinator' → logprob: -20.250017166137695
    6. '_coordinate' → logprob: -20.500017166137695
    7. '           ' → logprob: -20.875017166137695
    8. '   ' → logprob: -20.875017166137695
    9. '               ' → logprob: -21.250017166137695
    10. 'coordinate' → logprob: -21.625017166137695

Token 1001: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -1.0921942703134846e-05
    2. 'coord' → logprob: -11.50001049041748
    3. '(' → logprob: -14.50001049041748
    4. '(coords' → logprob: -16.375011444091797
    5. '(co' → logprob: -16.500011444091797
    6. ' coord' → logprob: -17.875011444091797
    7. '(
' → logprob: -18.250011444091797
    8. '(chr' → logprob: -18.500011444091797
    9. ' (' → logprob: -19.000011444091797
    10. '(coeff' → logprob: -19.000011444091797

Token 1002: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.0048173111863434315
    2. 'east' → logprob: -5.629817485809326
    3. '.' → logprob: -6.754817485809326
    4. 'e' → logprob: -11.129817008972168
    5. '.coord' → logprob: -11.754817008972168
    6. ' .' → logprob: -12.004817008972168
    7. '.euler' → logprob: -12.004817008972168
    8. '   ' → logprob: -12.629817008972168
    9. '```' → logprob: -12.754817008972168
    10. '
' → logprob: -13.379817008972168

Token 1003: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.2086302936077118
    2. 'east' → logprob: -1.9586303234100342
    3. '.ast' → logprob: -4.208630084991455
    4. '.n' → logprob: -4.208630084991455
    5. '.w' → logprob: -5.458630084991455
    6. 'north' → logprob: -5.458630084991455
    7. '.e' → logprob: -5.958630084991455
    8. '.st' → logprob: -6.958630084991455
    9. '.s' → logprob: -7.208630084991455
    10. '.' → logprob: -7.333630084991455

Token 1004: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0002434699417790398
    2. '_s' → logprob: -9.000243186950684
    3. 'w' → logprob: -9.375243186950684
    4. 'west' → logprob: -11.250243186950684
    5. '_' → logprob: -11.875243186950684
    6. 's' → logprob: -12.750243186950684
    7. '   ' → logprob: -12.875243186950684
    8. 'coord' → logprob: -13.625243186950684
    9. 'south' → logprob: -13.625243186950684
    10. '       ' → logprob: -14.000243186950684

Token 1005: 'est' (ID: 376)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9866957068443298
    2. 'south' → logprob: -1.2366957664489746
    3. '_w' → logprob: -1.3616957664489746
    4. 'west' → logprob: -3.3616957664489746
    5. 's' → logprob: -3.8616957664489746
    6. '_s' → logprob: -4.861695766448975
    7. 'st' → logprob: -5.486695766448975
    8. 'ns' → logprob: -5.611695766448975
    9. '_' → logprob: -6.611695766448975
    10. 'self' → logprob: -7.111695766448975

Token 1006: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032259563449770212
    2. ',s' → logprob: -5.753225803375244
    3. ' ,' → logprob: -10.378226280212402
    4. ',
' → logprob: -11.628226280212402
    5. 's' → logprob: -12.128226280212402
    6. '               ' → logprob: -14.628226280212402
    7. '),' → logprob: -15.503226280212402
    8. '```' → logprob: -15.628226280212402
    9. ',
' → logprob: -16.003225326538086
    10. ')' → logprob: -16.003225326538086

Token 1007: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.0015042672166600823
    2. ' south' → logprob: -6.501504421234131
    3. 's' → logprob: -13.876503944396973
    4. 'sou' → logprob: -14.876503944396973
    5. '                   ' → logprob: -15.251503944396973
    6. '               ' → logprob: -15.376503944396973
    7. '           ' → logprob: -16.75150489807129
    8. '                       ' → logprob: -17.87650489807129
    9. '   ' → logprob: -18.12650489807129
    10. '(s' → logprob: -18.50150489807129

Token 1008: '_ns' (ID: 83774)
  Prédit: '_ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ns' → logprob: -4.35837464465294e-05
    2. 'ns' → logprob: -10.125043869018555
    3. '_coord' → logprob: -13.000043869018555
    4. '_coords' → logprob: -15.000043869018555
    5. '	ns' → logprob: -15.500043869018555
    6. '   ' → logprob: -16.500043869018555
    7. '+' → logprob: -16.500043869018555
    8. 'coord' → logprob: -16.625043869018555
    9. '_nc' → logprob: -16.750043869018555
    10. 'NS' → logprob: -16.875043869018555

Token 1009: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08285388350486755
    2. ')' → logprob: -2.5828537940979004
    3. '               ' → logprob: -5.5828537940979
    4. ')
' → logprob: -8.707854270935059
    5. '):
' → logprob: -11.207854270935059
    6. '           ' → logprob: -11.832854270935059
    7. ')

' → logprob: -13.207854270935059
    8. '                   ' → logprob: -14.207854270935059
    9. '),' → logprob: -14.207854270935059
    10. ');
' → logprob: -14.332854270935059

Token 1010: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004396095173433423
    2. '           ' → logprob: -9.000439643859863
    3. '<|end|>' → logprob: -9.625439643859863
    4. 'self' → logprob: -9.750439643859863
    5. ':
' → logprob: -10.750439643859863
    6. '                   ' → logprob: -10.875439643859863
    7. ',' → logprob: -10.875439643859863
    8. '	       ' → logprob: -11.000439643859863
    9. ' self' → logprob: -11.000439643859863
    10. '		       ' → logprob: -11.125439643859863

Token 1011: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022495238110423088
    2. ' self' → logprob: -4.022495269775391
    3. '               ' → logprob: -5.522495269775391
    4. '           ' → logprob: -8.89749526977539
    5. 'if' → logprob: -9.02249526977539
    6. '[self' → logprob: -10.89749526977539
    7. '	self' → logprob: -11.39749526977539
    8. ' if' → logprob: -11.64749526977539
    9. '#' → logprob: -11.89749526977539
    10. '                   ' → logprob: -12.02249526977539

Token 1012: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.005949064157903194
    2. 'add' → logprob: -5.130949020385742
    3. '.' → logprob: -11.255949020385742
    4. ' add' → logprob: -12.505949020385742
    5. ' .' → logprob: -13.380949020385742
    6. '_add' → logprob: -15.130949020385742
    7. '   ' → logprob: -15.130949020385742
    8. ':add' → logprob: -15.380949020385742
    9. '	add' → logprob: -15.630949020385742
    10. '..' → logprob: -15.630949020385742

Token 1013: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011045700375689194
    2. 'road' → logprob: -9.125110626220703
    3. '_ro' → logprob: -13.750110626220703
    4. 'Road' → logprob: -15.125110626220703
    5. ' road' → logprob: -16.125110626220703
    6. '   ' → logprob: -17.875110626220703
    7. '```' → logprob: -18.000110626220703
    8. '
' → logprob: -18.750110626220703
    9. ' Road' → logprob: -19.000110626220703
    10. '_
' → logprob: -19.000110626220703

Token 1014: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -3.2855416066013277e-05
    2. '_' → logprob: -10.625032424926758
    3. 'Road' → logprob: -13.500032424926758
    4. 'south' → logprob: -13.500032424926758
    5. ' road' → logprob: -13.750032424926758
    6. '```' → logprob: -14.000032424926758
    7. 's' → logprob: -14.750032424926758
    8. '
' → logprob: -14.750032424926758
    9. 'coord' → logprob: -15.000032424926758
    10. 'roads' → logprob: -15.125032424926758

Token 1015: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -11.875019073486328
    3. '(
' → logprob: -12.125019073486328
    4. '(coords' → logprob: -12.625019073486328
    5. '(co' → logprob: -14.000019073486328
    6. 'coord' → logprob: -14.250019073486328
    7. '               ' → logprob: -14.375019073486328
    8. ' (' → logprob: -14.500019073486328
    9. '(coeff' → logprob: -14.875019073486328
    10. '                   ' → logprob: -15.375019073486328

Token 1016: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011797507759183645
    2. ',s' → logprob: -6.7511796951293945
    3. ' ,' → logprob: -11.876179695129395
    4. ',
' → logprob: -13.626179695129395
    5. '               ' → logprob: -14.751179695129395
    6. '   ' → logprob: -15.626179695129395
    7. ',S' → logprob: -16.12618064880371
    8. '           ' → logprob: -16.37618064880371
    9. '                   ' → logprob: -16.62618064880371
    10. 's' → logprob: -16.62618064880371

Token 1017: ' south' (ID: 15019)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.0549144372344017
    2. ' south' → logprob: -2.9299144744873047
    3. 's' → logprob: -11.179914474487305
    4. '           ' → logprob: -12.179914474487305
    5. '               ' → logprob: -12.304914474487305
    6. '                   ' → logprob: -12.804914474487305
    7. 'sou' → logprob: -13.179914474487305
    8. '   ' → logprob: -13.929914474487305
    9. 'South' → logprob: -14.054914474487305
    10. '       ' → logprob: -14.679914474487305

Token 1018: '_coord' (ID: 71065)
  Prédit: '_coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coord' → logprob: -0.0004475924652069807
    2. 'south' → logprob: -7.875447750091553
    3. 'coord' → logprob: -10.125447273254395
    4. 's' → logprob: -11.375447273254395
    5. '```' → logprob: -12.750447273254395
    6. '_co' → logprob: -13.000447273254395
    7. '_coords' → logprob: -13.250447273254395
    8. 'Coord' → logprob: -13.375447273254395
    9. '_coordinate' → logprob: -13.375447273254395
    10. '
' → logprob: -14.375447273254395

Token 1019: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ')' → logprob: -12.37501049041748
    3. ' ,' → logprob: -13.00001049041748
    4. '               ' → logprob: -13.75001049041748
    5. ',self' → logprob: -13.75001049041748
    6. ',
' → logprob: -14.37501049041748
    7. 'self' → logprob: -15.12501049041748
    8. '           ' → logprob: -15.50001049041748
    9. '   ' → logprob: -16.125009536743164
    10. '                   ' → logprob: -16.250009536743164

Token 1020: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001705175032839179
    2. ' self' → logprob: -6.376705169677734
    3. '                   ' → logprob: -14.251705169677734
    4. '               ' → logprob: -14.376705169677734
    5. '(self' → logprob: -15.251705169677734
    6. '           ' → logprob: -15.376705169677734
    7. '	self' → logprob: -15.626705169677734
    8. ' ' → logprob: -15.751705169677734
    9. '                               ' → logprob: -15.751705169677734
    10. '[self' → logprob: -15.876705169677734

Token 1021: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.0036234736908227205
    2. 'base' → logprob: -5.6286234855651855
    3. 'self' → logprob: -11.503623008728027
    4. '.' → logprob: -12.003623008728027
    5. ' base' → logprob: -12.378623008728027
    6. ' .' → logprob: -14.253623008728027
    7. '   ' → logprob: -14.378623008728027
    8. '_base' → logprob: -14.378623008728027
    9. '	base' → logprob: -15.253623008728027
    10. '(base' → logprob: -15.628623008728027

Token 1022: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.0037829740904271603
    2. '_time' → logprob: -5.628782749176025
    3. 'travel' → logprob: -9.003783226013184
    4. 'base' → logprob: -10.628783226013184
    5. '._' → logprob: -11.378783226013184
    6. 'Travel' → logprob: -12.253783226013184
    7. 'tr' → logprob: -12.628783226013184
    8. 'trav' → logprob: -12.878783226013184
    9. '.base' → logprob: -13.003783226013184
    10. '.travel' → logprob: -13.128783226013184

Token 1023: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -0.39094650745391846
    2. '_time' → logprob: -1.1409465074539185
    3. 'ime' → logprob: -6.765946388244629
    4. 'av' → logprob: -6.765946388244629
    5. 'ave' → logprob: -6.765946388244629
    6. 'time' → logprob: -8.765946388244629
    7. '   ' → logprob: -9.515946388244629
    8. 'vel' → logprob: -9.515946388244629
    9. 'Time' → logprob: -9.765946388244629
    10. '```' → logprob: -10.015946388244629

Token 1024: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.3544423381972592e-05
    2. 'time' → logprob: -11.62501335144043
    3. 'ime' → logprob: -13.12501335144043
    4. '_t' → logprob: -13.25001335144043
    5. '_' → logprob: -15.25001335144043
    6. 'Time' → logprob: -15.62501335144043
    7. '_tim' → logprob: -16.62501335144043
    8. 't' → logprob: -17.00001335144043
    9. ' time' → logprob: -17.00001335144043
    10. '_TIME' → logprob: -17.25001335144043

Token 1025: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006799076218158007
    2. ')
' → logprob: -8.250679969787598
    3. '       ' → logprob: -8.250679969787598
    4. '           ' → logprob: -9.625679969787598
    5. '   ' → logprob: -9.750679969787598
    6. ' )' → logprob: -11.000679969787598
    7. '               ' → logprob: -11.875679969787598
    8. ')

' → logprob: -13.000679969787598
    9. ' ' → logprob: -14.000679969787598
    10. '<|end|>' → logprob: -14.000679969787598

Token 1026: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45479723811149597
    2. 'def' → logprob: -1.3297972679138184
    3. '
' → logprob: -2.4547972679138184
    4. ' def' → logprob: -5.329797267913818
    5. '    
' → logprob: -5.829797267913818
    6. '```' → logprob: -6.204797267913818
    7. '<|end|>' → logprob: -6.329797267913818
    8. '        
' → logprob: -7.204797267913818
    9. '	def' → logprob: -7.329797267913818
    10. '       ' → logprob: -8.57979679107666

Token 1027: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045842863619327545
    2. 'def' (adapté à ' def') → logprob: -3.1708428859710693
    3. ' def' → logprob: -6.29584264755249
    4. 'Indent' → logprob: -8.670843124389648
    5. '	def' → logprob: -8.795843124389648
    6. '
' → logprob: -9.045843124389648
    7. '       ' → logprob: -9.170843124389648
    8. '    
' → logprob: -9.170843124389648
    9. ' ' → logprob: -9.545843124389648
    10. '<|end|>' → logprob: -9.920843124389648

Token 1028: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.024834541603922844
    2. 'def' → logprob: -3.899834632873535
    3. 'valid' → logprob: -5.774834632873535
    4. '_add' → logprob: -7.524834632873535
    5. ' add' → logprob: -7.774834632873535
    6. '_valid' → logprob: -9.024834632873535
    7. ' def' → logprob: -10.524834632873535
    8. 'build' → logprob: -10.524834632873535
    9. '   ' → logprob: -11.774834632873535
    10. ' valid' → logprob: -12.149834632873535

Token 1029: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.52919222577475e-05
    2. '_ro' → logprob: -9.500075340270996
    3. ' _' → logprob: -16.00007438659668
    4. '_RO' → logprob: -16.75007438659668
    5. 'road' → logprob: -17.12507438659668
    6. '_r' → logprob: -17.37507438659668
    7. '##_' → logprob: -17.37507438659668
    8. '_
' → logprob: -17.50007438659668
    9. '```' → logprob: -17.62507438659668
    10. 'Road' → logprob: -18.25007438659668

Token 1030: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -12.125007629394531
    3. ' road' → logprob: -13.625007629394531
    4. 'Road' → logprob: -15.000007629394531
    5. 'roads' → logprob: -16.00000762939453
    6. 'rod' → logprob: -16.12500762939453
    7. '-road' → logprob: -16.12500762939453
    8. '```' → logprob: -16.62500762939453
    9. '_ro' → logprob: -16.75000762939453
    10. 'r' → logprob: -16.75000762939453

Token 1031: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.13388703338569e-06
    2. '   ' → logprob: -12.125009536743164
    3. '(' → logprob: -12.625009536743164
    4. '(
' → logprob: -15.750009536743164
    5. '       ' → logprob: -15.875009536743164
    6. 'self' → logprob: -17.500009536743164
    7. '(s' → logprob: -17.875009536743164
    8. 'def' → logprob: -18.000009536743164
    9. ' (' → logprob: -18.375009536743164
    10. ' ' → logprob: -19.125009536743164

Token 1032: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.750004768371582
    3. 'self' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.125004768371582
    5. ' (' → logprob: -16.125003814697266
    6. ',' → logprob: -16.125003814697266
    7. '       ' → logprob: -16.250003814697266
    8. '(s' → logprob: -16.750003814697266
    9. '(
' → logprob: -16.750003814697266
    10. ')(' → logprob: -17.375003814697266

Token 1033: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.059060998260974884
    2. 'coord' → logprob: -3.309061050415039
    3. ' self' → logprob: -4.559061050415039
    4. 'c' → logprob: -4.684061050415039
    5. ' coord' → logprob: -7.059061050415039
    6. '   ' → logprob: -8.934061050415039
    7. ' c' → logprob: -9.684061050415039
    8. '       ' → logprob: -10.934061050415039
    9. '(self' → logprob: -13.184061050415039
    10. '    ' → logprob: -13.434061050415039

Token 1034: '1' (ID: 16)
  Prédit: 'oord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oord' → logprob: -0.4159903824329376
    2. '1' → logprob: -2.0409903526306152
    3. 'o' → logprob: -2.4159903526306152
    4. 'self' → logprob: -2.7909903526306152
    5. '(self' → logprob: -3.2909903526306152
    6. '   ' → logprob: -4.790990352630615
    7. 'c' → logprob: -5.915990352630615
    8. '_' → logprob: -6.040990352630615
    9. 'def' → logprob: -6.540990352630615
    10. 'oor' → logprob: -6.915990352630615

Token 1035: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012821101699955761
    2. ' ,' → logprob: -9.500127792358398
    3. ',c' → logprob: -9.875127792358398
    4. ':' → logprob: -13.375127792358398
    5. ',
' → logprob: -16.6251277923584
    6. 'c' → logprob: -16.7501277923584
    7. '   ' → logprob: -16.7501277923584
    8. '‌,' → logprob: -17.3751277923584
    9. ':,' → logprob: -18.6251277923584
    10. ' c' → logprob: -18.6251277923584

Token 1036: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0243607759475708
    2. 'c' → logprob: -3.7743606567382812
    3. 'Coordinates' → logprob: -8.024360656738281
    4. ' Coordinate' → logprob: -8.149360656738281
    5. ' c' → logprob: -8.399360656738281
    6. 'coord' → logprob: -9.274360656738281
    7. 'Coord' → logprob: -9.649360656738281
    8. ',' → logprob: -10.024360656738281
    9. '_coordinate' → logprob: -10.399360656738281
    10. 'Coordinator' → logprob: -11.149360656738281

Token 1037: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.198043699143454e-05
    2. ' ,' → logprob: -9.875091552734375
    3. ',c' → logprob: -10.125091552734375
    4. ',
' → logprob: -15.375091552734375
    5. 'c' → logprob: -15.875091552734375
    6. '   ' → logprob: -17.500091552734375
    7. ':' → logprob: -18.000091552734375
    8. '‌,' → logprob: -18.000091552734375
    9. ',
' → logprob: -18.375091552734375
    10. ' c' → logprob: -18.375091552734375

Token 1038: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014165041036903858
    2. ' c' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.514164924621582
    4. '    ' → logprob: -16.3891658782959
    5. ' ' → logprob: -17.2641658782959
    6. '       ' → logprob: -17.2641658782959
    7. '	c' → logprob: -17.2641658782959
    8. '  ' → logprob: -17.7641658782959
    9. '      ' → logprob: -18.6391658782959
    10. '     ' → logprob: -18.6391658782959

Token 1039: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. 'c' → logprob: -13.25000286102295
    3. '_' → logprob: -14.62500286102295
    4. ',' → logprob: -15.75000286102295
    5. ' ' → logprob: -17.125001907348633
    6. '```' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.750001907348633
    8. 'o' → logprob: -18.375001907348633
    9. ' c' → logprob: -18.500001907348633
    10. 'ode' → logprob: -18.500001907348633

Token 1040: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026412922888994217
    2. ':' → logprob: -3.6514129638671875
    3. ' ,' → logprob: -9.651412963867188
    4. ',c' → logprob: -10.901412963867188
    5. '):' → logprob: -11.151412963867188
    6. '   ' → logprob: -11.901412963867188
    7. ')' → logprob: -13.401412963867188
    8. ',f' → logprob: -13.401412963867188
    9. ' :' → logprob: -13.651412963867188
    10. ',
' → logprob: -14.151412963867188

Token 1041: ' Coordinate' (ID: 78454)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31971076130867004
    2. 'Coordinate' → logprob: -1.3197107315063477
    3. ' c' → logprob: -5.069710731506348
    4. 'Coordinates' → logprob: -9.819710731506348
    5. 'Coord' → logprob: -10.069710731506348
    6. ' Coordinate' → logprob: -10.194710731506348
    7. ')c' → logprob: -12.819710731506348
    8. 'C' → logprob: -13.444710731506348
    9. 'coordinate' → logprob: -13.444710731506348
    10. '_coordinate' → logprob: -13.444710731506348

Token 1042: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ' ,' → logprob: -11.500012397766113
    3. '):' → logprob: -14.250012397766113
    4. '   ' → logprob: -14.500012397766113
    5. ',
' → logprob: -15.250012397766113
    6. 'self' → logprob: -15.875012397766113
    7. ',c' → logprob: -16.375011444091797
    8. '       ' → logprob: -17.000011444091797
    9. ':' → logprob: -17.000011444091797
    10. '):
' → logprob: -17.500011444091797

Token 1043: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.07424186170101166
    2. ' base' → logprob: -3.074241876602173
    3. 'time' → logprob: -3.699241876602173
    4. ' time' → logprob: -8.574241638183594
    5. 't' → logprob: -8.824241638183594
    6. 'travel' → logprob: -8.949241638183594
    7. '   ' → logprob: -9.574241638183594
    8. 'cost' → logprob: -11.199241638183594
    9. ' travel' → logprob: -11.449241638183594
    10. ' t' → logprob: -11.949241638183594

Token 1044: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00039230400579981506
    2. '_' → logprob: -8.500391960144043
    3. '_tr' → logprob: -8.750391960144043
    4. '_t' → logprob: -11.625391960144043
    5. '_base' → logprob: -11.625391960144043
    6. ')_' → logprob: -13.250391960144043
    7. '_code' → logprob: -13.875391960144043
    8. '_times' → logprob: -13.875391960144043
    9. '_tim' → logprob: -14.000391960144043
    10. '_trip' → logprob: -14.250391960144043

Token 1045: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005705981515347958
    2. ':' → logprob: -5.880705833435059
    3. '=' → logprob: -6.630705833435059
    4. '):
' → logprob: -6.755705833435059
    5. ')' → logprob: -7.880705833435059
    6. ' ):' → logprob: -10.380705833435059
    7. '):
' → logprob: -13.255705833435059
    8. '   ' → logprob: -14.255705833435059
    9. ' ' → logprob: -14.505705833435059
    10. ')=' → logprob: -15.130705833435059

Token 1046: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11178314685821533
    2. 'self' → logprob: -2.736783027648926
    3. 'base' → logprob: -3.486783027648926
    4. ')' → logprob: -4.861783027648926
    5. '):' → logprob: -7.236783027648926
    6. '):
' → logprob: -7.361783027648926
    7. ' int' → logprob: -7.361783027648926
    8. ' base' → logprob: -8.861783027648926
    9. ' self' → logprob: -8.861783027648926
    10. ':int' → logprob: -9.111783027648926

Token 1047: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014208168722689152
    2. '):' → logprob: -4.2642083168029785
    3. '):
' → logprob: -10.38920783996582
    4. '   ' → logprob: -12.13920783996582
    5. '       ' → logprob: -12.26420783996582
    6. ')' → logprob: -12.76420783996582
    7. '):

' → logprob: -14.88920783996582
    8. ':' → logprob: -15.01420783996582
    9. ' ):
' → logprob: -15.26420783996582
    10. ':
' → logprob: -16.76420783996582

Token 1048: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026954058557748795
    2. 'key' → logprob: -3.651954174041748
    3. ' key' → logprob: -7.526954174041748
    4. 'edge' → logprob: -9.65195369720459
    5. '   ' → logprob: -10.77695369720459
    6. '	key' → logprob: -11.15195369720459
    7. 'road' → logprob: -11.77695369720459
    8. '```' → logprob: -13.02695369720459
    9. 'self' → logprob: -13.27695369720459
    10. ' edge' → logprob: -13.40195369720459

Token 1049: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.06339960545301437
    2. 'road' → logprob: -2.93839955329895
    3. '       ' → logprob: -5.563399791717529
    4. 'r' → logprob: -5.688399791717529
    5. '   ' → logprob: -7.188399791717529
    6. ' key' → logprob: -7.813399791717529
    7. 'edge' → logprob: -10.063399314880371
    8. ' road' → logprob: -10.313399314880371
    9. 'if' → logprob: -11.938399314880371
    10. 'rd' → logprob: -12.938399314880371

Token 1050: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16028891503810883
    2. ' =' → logprob: -1.91028892993927
    3. '=f' → logprob: -9.66028881072998
    4. '=set' → logprob: -14.78528881072998
    5. ')' → logprob: -15.66028881072998
    6. ')=' → logprob: -15.78528881072998
    7. '=
' → logprob: -16.410289764404297
    8. '=}' → logprob: -17.410289764404297
    9. 'fro' → logprob: -17.535289764404297
    10. '=cut' → logprob: -17.660289764404297

Token 1051: ' fro' (ID: 16956)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.014165159314870834
    2. ' fro' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.514164924621582
    4. 'f' → logprob: -16.0141658782959
    5. 'fr' → logprob: -16.7641658782959
    6. ' ' → logprob: -17.0141658782959
    7. 'fo' → logprob: -17.5141658782959
    8. '```' → logprob: -17.8891658782959
    9. '       ' → logprob: -18.2641658782959
    10. 'fol' → logprob: -18.2641658782959

Token 1052: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.000553151941858232
    2. 'zes' → logprob: -7.500553131103516
    3. 'ze' → logprob: -16.500553131103516
    4. 'zos' → logprob: -17.125553131103516
    5. 'zen' → logprob: -17.250553131103516
    6. 'zs' → logprob: -18.000553131103516
    7. 'zent' → logprob: -18.250553131103516
    8. '```' → logprob: -18.625553131103516
    9. 'z' → logprob: -18.750553131103516
    10. 'zez' → logprob: -19.250553131103516

Token 1053: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.16025742888450623
    2. 'et' → logprob: -1.9102574586868286
    3. ' set' → logprob: -11.285257339477539
    4. 't' → logprob: -12.285257339477539
    5. '(set' → logprob: -12.410257339477539
    6. '```' → logprob: -12.785257339477539
    7. 'Set' → logprob: -13.160257339477539
    8. '{' → logprob: -13.285257339477539
    9. '_set' → logprob: -13.535257339477539
    10. 'zet' → logprob: -13.910257339477539

Token 1054: '([' (ID: 5194)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.01053647417575121
    2. '{' → logprob: -5.2605366706848145
    3. '([' → logprob: -5.2605366706848145
    4. '((' → logprob: -9.260536193847656
    5. '(({' → logprob: -14.635536193847656
    6. '(' → logprob: -15.510536193847656
    7. '[{' → logprob: -15.885536193847656
    8. '([{' → logprob: -16.010536193847656
    9. '[' → logprob: -17.885536193847656
    10. '{{' → logprob: -18.260536193847656

Token 1055: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1306614726781845
    2. '[c' → logprob: -2.1306614875793457
    3. '{' → logprob: -5.630661487579346
    4. '(c' → logprob: -8.880661010742188
    5. ' c' → logprob: -14.255661010742188
    6. ')c' → logprob: -15.005661010742188
    7. '([' → logprob: -16.255661010742188
    8. '<c' → logprob: -16.380661010742188
    9. '[' → logprob: -17.005661010742188
    10. ' [' → logprob: -17.630661010742188

Token 1056: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004330541472882032
    2. '(c' → logprob: -5.629330635070801
    3. 'c' → logprob: -7.379330635070801
    4. '{' → logprob: -9.5043306350708
    5. '[c' → logprob: -11.5043306350708
    6. 's' → logprob: -12.5043306350708
    7. ')c' → logprob: -12.8793306350708
    8. ' c' → logprob: -13.1293306350708
    9. 'r' → logprob: -14.1918306350708
    10. '<c' → logprob: -14.2543306350708

Token 1057: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005270753521472216
    2. ',c' → logprob: -5.255270957946777
    3. ' ,' → logprob: -10.755270957946777
    4. ',
' → logprob: -11.380270957946777
    5. 'c' → logprob: -12.630270957946777
    6. ',C' → logprob: -15.255270957946777
    7. '(c' → logprob: -15.630270957946777
    8. ',key' → logprob: -15.755270957946777
    9. ',
' → logprob: -16.25527000427246
    10. '{' → logprob: -16.63027000427246

Token 1058: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.644463479053229e-05
    2. ' c' → logprob: -10.000046730041504
    3. '   ' → logprob: -13.875046730041504
    4. '       ' → logprob: -17.500045776367188
    5. '  ' → logprob: -17.875045776367188
    6. '    ' → logprob: -18.625045776367188
    7. ' ' → logprob: -18.625045776367188
    8. '	c' → logprob: -18.625045776367188
    9. '           ' → logprob: -18.875045776367188
    10. '     ' → logprob: -19.125045776367188

Token 1059: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030852947384119034
    2. '1' → logprob: -8.375308990478516
    3. 'c' → logprob: -9.500308990478516
    4. 's' → logprob: -13.625308990478516
    5. 'o' → logprob: -14.375308990478516
    6. 'r' → logprob: -15.125308990478516
    7. '{' → logprob: -15.625308990478516
    8. '```' → logprob: -16.437808990478516
    9. '
' → logprob: -16.562808990478516
    10. '   ' → logprob: -16.625308990478516

Token 1060: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000400521676056087
    2. '])
' → logprob: -7.875400543212891
    3. ')' → logprob: -11.12540054321289
    4. ' ])' → logprob: -12.87540054321289
    5. '])
' → logprob: -14.37540054321289
    6. '       ' → logprob: -14.37540054321289
    7. ']' → logprob: -14.62540054321289
    8. ')])' → logprob: -14.75040054321289
    9. '])

' → logprob: -15.50040054321289
    10. ')]' → logprob: -15.62540054321289

Token 1061: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44608837366104126
    2. ' =' → logprob: -1.0710883140563965
    3. '=' → logprob: -4.8210883140563965
    4. ')' → logprob: -6.1960883140563965
    5. ':' → logprob: -6.3210883140563965
    6. ' if' → logprob: -6.3210883140563965
    7. '   ' → logprob: -7.3210883140563965
    8. '<|end|>' → logprob: -7.3210883140563965
    9. ',' → logprob: -7.4460883140563965
    10. '):
' → logprob: -7.8210883140563965

Token 1062: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10034437477588654
    2. 'self' → logprob: -2.35034441947937
    3. 'road' → logprob: -9.35034465789795
    4. ' if' → logprob: -10.22534465789795
    5. '       ' → logprob: -11.22534465789795
    6. ' self' → logprob: -14.47534465789795
    7. '   ' → logprob: -14.47534465789795
    8. '           ' → logprob: -17.225343704223633
    9. 'Road' → logprob: -17.475343704223633
    10. '```' → logprob: -17.725343704223633

Token 1063: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -9.627176768844947e-05
    2. ' key' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.50009536743164
    4. '	key' → logprob: -17.50009536743164
    5. 'not' → logprob: -18.50009536743164
    6. '_key' → logprob: -19.62509536743164
    7. ' ' → logprob: -19.75009536743164
    8. 'len' → logprob: -20.12509536743164
    9. '
' → logprob: -20.37509536743164
    10. 'Key' → logprob: -20.37509536743164

Token 1064: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7073434591293335
    2. ' not' → logprob: -0.8323434591293335
    3. 'in' → logprob: -2.832343578338623
    4. ' in' → logprob: -4.332343578338623
    5. '	not' → logprob: -12.332343101501465
    6. 'n' → logprob: -13.707343101501465
    7. '   ' → logprob: -14.707343101501465
    8. ')' → logprob: -15.207343101501465
    9. ':not' → logprob: -15.207343101501465
    10. 'n't' → logprob: -15.207343101501465

Token 1065: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4070029556751251
    2. 'in' → logprob: -1.1570029258728027
    3. 'self' → logprob: -4.032002925872803
    4. '<|end|>' → logprob: -6.532002925872803
    5. '       ' → logprob: -8.782003402709961
    6. ' self' → logprob: -9.157003402709961
    7. '   ' → logprob: -9.282003402709961
    8. '.' → logprob: -9.407003402709961
    9. ')' → logprob: -9.657003402709961
    10. ',' → logprob: -9.907003402709961

Token 1066: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.130576806142926e-05
    2. ' self' → logprob: -10.375031471252441
    3. '(self' → logprob: -18.625030517578125
    4. '[self' → logprob: -20.000030517578125
    5. '	self' → logprob: -20.875030517578125
    6. 'this' → logprob: -21.125030517578125
    7. '=self' → logprob: -21.750030517578125
    8. '       ' → logprob: -21.750030517578125
    9. '   ' → logprob: -21.875030517578125
    10. ' ' → logprob: -22.875030517578125

Token 1067: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -0.005273480899631977
    2. 'roads' → logprob: -5.380273342132568
    3. 'ro' → logprob: -7.755273342132568
    4. 'self' → logprob: -8.755273818969727
    5. '_ro' → logprob: -10.630273818969727
    6. ' roads' → logprob: -11.255273818969727
    7. '.' → logprob: -11.505273818969727
    8. '```' → logprob: -12.380273818969727
    9. '   ' → logprob: -12.630273818969727
    10. '       ' → logprob: -12.755273818969727

Token 1068: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -9.088346359931165e-07
    2. 'ad' → logprob: -15.000000953674316
    3. ' ads' → logprob: -15.750000953674316
    4. 'roads' → logprob: -16.375
    5. 'a' → logprob: -16.5
    6. '
' → logprob: -16.5
    7. '{' → logprob: -16.75
    8. '   ' → logprob: -16.875
    9. '#' → logprob: -17.625
    10. '_' → logprob: -17.75

Token 1069: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11087308824062347
    2. ':' → logprob: -2.860872983932495
    3. ' =' → logprob: -3.360872983932495
    4. ':
' → logprob: -4.360873222351074
    5. '=True' → logprob: -9.360873222351074
    6. '       ' → logprob: -9.985873222351074
    7. '           ' → logprob: -10.860873222351074
    8. '.' → logprob: -11.110873222351074
    9. '=
' → logprob: -11.235873222351074
    10. '):
' → logprob: -11.485873222351074

Token 1070: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46997156739234924
    2. ':
' → logprob: -1.4699715375900269
    3. ':' → logprob: -1.9699715375900269
    4. '       ' → logprob: -5.594971656799316
    5. ' =' → logprob: -7.219971656799316
    6. '=' → logprob: -8.219971656799316
    7. ',' → logprob: -8.469971656799316
    8. '):
' → logprob: -8.844971656799316
    9. 'self' → logprob: -9.344971656799316
    10. ' or' → logprob: -9.719971656799316

Token 1071: ' road' (ID: 8733)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09839056432247162
    2. ' self' → logprob: -2.473390579223633
    3. 'road' (adapté à ' road') → logprob: -5.098390579223633
    4. '           ' → logprob: -5.848390579223633
    5. ' road' → logprob: -8.473390579223633
    6. '   ' → logprob: -9.098390579223633
    7. '       ' → logprob: -9.973390579223633
    8. '               ' → logprob: -10.348390579223633
    9. 'r' → logprob: -11.723390579223633
    10. ' ' → logprob: -12.598390579223633

Token 1072: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08898449689149857
    2. ' =' → logprob: -2.463984489440918
    3. '[key' → logprob: -10.713984489440918
    4. 's' → logprob: -11.213984489440918
    5. 'key' → logprob: -13.213984489440918
    6. '[' → logprob: -13.463984489440918
    7. '_key' → logprob: -13.463984489440918
    8. ']' → logprob: -13.588984489440918
    9. '   ' → logprob: -13.713984489440918
    10. '           ' → logprob: -14.213984489440918

Token 1073: ' Road' (ID: 12497)
  Prédit: 'Road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Road' → logprob: -7.493430894101039e-05
    2. ' Road' → logprob: -9.500075340270996
    3. '   ' → logprob: -21.75007438659668
    4. 'Rod' → logprob: -22.12507438659668
    5. 'Rock' → logprob: -22.12507438659668
    6. 'Traffic' → logprob: -22.87507438659668
    7. 'Room' → logprob: -23.25007438659668
    8. 'Rail' → logprob: -23.62507438659668
    9. 'Ro' → logprob: -24.00007438659668
    10. '	R' → logprob: -24.00007438659668

Token 1074: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0003364158037584275
    2. 'c' → logprob: -8.000336647033691
    3. '(' → logprob: -14.000336647033691
    4. '(
' → logprob: -17.000335693359375
    5. ')c' → logprob: -17.000335693359375
    6. ' c' → logprob: -17.125335693359375
    7. 'C' → logprob: -17.250335693359375
    8. '	c' → logprob: -17.625335693359375
    9. ',c' → logprob: -17.625335693359375
    10. '```' → logprob: -18.625335693359375

Token 1075: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. 'c' → logprob: -15.187501907348633
    3. 'o' → logprob: -15.687501907348633
    4. '{' → logprob: -15.875001907348633
    5. '```' → logprob: -16.125001907348633
    6. '[' → logprob: -16.500001907348633
    7. '
' → logprob: -16.562501907348633
    8. ')' → logprob: -16.625001907348633
    9. 's' → logprob: -17.125001907348633
    10. 'ol' → logprob: -17.187501907348633

Token 1076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004933410091325641
    2. ',c' → logprob: -7.62549352645874
    3. ' ,' → logprob: -12.250493049621582
    4. ',
' → logprob: -15.125493049621582
    5. ',C' → logprob: -16.8754940032959
    6. 'c' → logprob: -17.0004940032959
    7. ',q' → logprob: -17.5004940032959
    8. '<|end|>' → logprob: -17.7504940032959
    9. ',
' → logprob: -18.2504940032959
    10. ',p' → logprob: -18.3754940032959

Token 1077: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00029613598599098623
    2. ' c' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.375295639038086
    4. '       ' → logprob: -18.000295639038086
    5. '	c' → logprob: -18.625295639038086
    6. ')c' → logprob: -18.625295639038086
    7. '           ' → logprob: -18.875295639038086
    8. ' ' → logprob: -19.500295639038086
    9. '  ' → logprob: -19.750295639038086
    10. '    ' → logprob: -20.375295639038086

Token 1078: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008246336947195232
    2. '1' → logprob: -7.125824451446533
    3. 'c' → logprob: -10.875824928283691
    4. ')' → logprob: -15.375824928283691
    5. 's' → logprob: -15.375824928283691
    6. ',' → logprob: -15.875824928283691
    7. '```' → logprob: -16.000823974609375
    8. 'o' → logprob: -16.500823974609375
    9. 'r' → logprob: -16.875823974609375
    10. '   ' → logprob: -16.875823974609375

Token 1079: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -16.750001907348633
    4. '           ' → logprob: -16.875001907348633
    5. ',b' → logprob: -16.875001907348633
    6. '```' → logprob: -17.875001907348633
    7. ';base' → logprob: -18.000001907348633
    8. ')' → logprob: -18.875001907348633
    9. '),' → logprob: -19.250001907348633
    10. ',current' → logprob: -19.250001907348633

Token 1080: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.004622018430382013
    2. ' base' → logprob: -5.379621982574463
    3. '           ' → logprob: -14.254622459411621
    4. '   ' → logprob: -14.879622459411621
    5. '	base' → logprob: -15.754622459411621
    6. 'self' → logprob: -15.879622459411621
    7. '
' → logprob: -16.379621505737305
    8. '       ' → logprob: -16.504621505737305
    9. ' ' → logprob: -16.504621505737305
    10. '_base' → logprob: -16.754621505737305

Token 1081: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.694766489090398e-05
    2. 'time' → logprob: -9.625066757202148
    3. 'Time' → logprob: -15.125066757202148
    4. ' time' → logprob: -15.500066757202148
    5. '"time' → logprob: -16.25006675720215
    6. '	time' → logprob: -17.25006675720215
    7. '-time' → logprob: -17.37506675720215
    8. '_TIME' → logprob: -17.37506675720215
    9. '_tr' → logprob: -17.75006675720215
    10. 'ime' → logprob: -17.75006675720215

Token 1082: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741203784942627
    2. ')' → logprob: -0.9741203784942627
    3. ')
' → logprob: -10.599120140075684
    4. '           ' → logprob: -10.974120140075684
    5. '       ' → logprob: -13.849120140075684
    6. ')

' → logprob: -15.974120140075684
    7. '               ' → logprob: -16.47412109375
    8. ' )
' → logprob: -16.84912109375
    9. ')#' → logprob: -17.34912109375
    10. '),' → logprob: -17.59912109375

Token 1083: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000344640837283805
    2. 'self' → logprob: -8.250344276428223
    3. '       ' → logprob: -9.750344276428223
    4. ' self' → logprob: -11.125344276428223
    5. '               ' → logprob: -12.375344276428223
    6. '          ' → logprob: -13.625344276428223
    7. '   ' → logprob: -13.625344276428223
    8. '		' → logprob: -14.000344276428223
    9. '	       ' → logprob: -14.125344276428223
    10. ',' → logprob: -15.250344276428223

Token 1084: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.490809417096898e-05
    2. '           ' → logprob: -10.125055313110352
    3. ' self' → logprob: -11.125055313110352
    4. '   ' → logprob: -18.37505531311035
    5. '       ' → logprob: -18.62505531311035
    6. '               ' → logprob: -19.12505531311035
    7. '	self' → logprob: -19.12505531311035
    8. '(self' → logprob: -19.37505531311035
    9. '[self' → logprob: -20.00005531311035
    10. '            
' → logprob: -20.25005531311035

Token 1085: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -0.0008229722734540701
    2. '.ad' → logprob: -7.125823020935059
    3. 'roads' → logprob: -11.625823020935059
    4. '.' → logprob: -12.375823020935059
    5. 'ro' → logprob: -13.500823020935059
    6. '_ro' → logprob: -13.750823020935059
    7. '.add' → logprob: -14.000823020935059
    8. 'adj' → logprob: -14.500823020935059
    9. '._' → logprob: -15.250823020935059
    10. '.sign' → logprob: -15.375823020935059

Token 1086: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -5.512236498361744e-07
    2. ' ads' → logprob: -15.375000953674316
    3. 'ad' → logprob: -16.375
    4. 'roads' → logprob: -17.0
    5. '#' → logprob: -17.375
    6. 'ods' → logprob: -17.5
    7. '.ads' → logprob: -17.75
    8. 'a' → logprob: -18.125
    9. 'ds' → logprob: -18.25
    10. '
' → logprob: -18.375

Token 1087: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. '\[' → logprob: -19.25
    4. '[token' → logprob: -19.875
    5. 'key' → logprob: -20.125
    6. '```' → logprob: -21.0
    7. '[
' → logprob: -21.875
    8. ' [' → logprob: -22.25
    9. '(key' → logprob: -22.75
    10. '
' → logprob: -22.875

Token 1088: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04017480090260506
    2. ']=' → logprob: -3.665174722671509
    3. '=' → logprob: -4.290174961090088
    4. ' =' → logprob: -9.91517448425293
    5. ')' → logprob: -10.79017448425293
    6. ')=' → logprob: -12.66517448425293
    7. ' ]' → logprob: -13.16517448425293
    8. '[' → logprob: -14.66517448425293
    9. '   ' → logprob: -16.04017448425293
    10. '=
' → logprob: -16.41517448425293

Token 1089: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019295861711725593
    2. ' =' → logprob: -6.251929759979248
    3. '=
' → logprob: -14.37692928314209
    4. ']=' → logprob: -16.126930236816406
    5. '.=' → logprob: -16.126930236816406
    6. '=self' → logprob: -16.751930236816406
    7. ')=' → logprob: -16.876930236816406
    8. '.' → logprob: -17.251930236816406
    9. '[' → logprob: -17.376930236816406
    10. '=

' → logprob: -17.501930236816406

Token 1090: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -1.676292231422849e-05
    2. ' road' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.375017166137695
    4. ' ' → logprob: -20.000017166137695
    5. ' ' → logprob: -20.125017166137695
    6. '	' → logprob: -20.750017166137695
    7. 'Road' → logprob: -20.750017166137695
    8. '
' → logprob: -21.375017166137695
    9. 'rod' → logprob: -21.500017166137695
    10. 'rock' → logprob: -21.500017166137695

Token 1091: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.2855416066013277e-05
    2. 'self' → logprob: -11.250032424926758
    3. '       ' → logprob: -11.750032424926758
    4. '   ' → logprob: -12.125032424926758
    5. ',' → logprob: -12.875032424926758
    6. ' self' → logprob: -13.375032424926758
    7. '
' → logprob: -13.500032424926758
    8. '	       ' → logprob: -15.125032424926758
    9. '               ' → logprob: -16.250032424926758
    10. '		' → logprob: -16.250032424926758

Token 1092: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.5954712075181305e-05
    2. 'self' → logprob: -10.500036239624023
    3. '   ' → logprob: -12.375036239624023
    4. '       ' → logprob: -12.750036239624023
    5. ' self' → logprob: -14.000036239624023
    6. '	       ' → logprob: -15.875036239624023
    7. '		' → logprob: -16.500036239624023
    8. '	   ' → logprob: -17.000036239624023
    9. '               ' → logprob: -17.125036239624023
    10. ',' → logprob: -17.500036239624023

Token 1093: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00013858173042535782
    2. '           ' → logprob: -9.000138282775879
    3. ' self' → logprob: -11.125138282775879
    4. '   ' → logprob: -15.375138282775879
    5. '       ' → logprob: -16.500139236450195
    6. '
' → logprob: -18.125139236450195
    7. '	self' → logprob: -18.125139236450195
    8. ' ' → logprob: -19.750139236450195
    9. '            
' → logprob: -19.750139236450195
    10. '  ' → logprob: -19.875139236450195

Token 1094: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -1.3663626305060461e-05
    2. '.' → logprob: -11.75001335144043
    3. ' .' → logprob: -12.25001335144043
    4. '   ' → logprob: -15.25001335144043
    5. '.Ad' → logprob: -16.00001335144043
    6. '.add' → logprob: -16.00001335144043
    7. '           ' → logprob: -16.37501335144043
    8. '
' → logprob: -17.37501335144043
    9. '#ad' → logprob: -17.37501335144043
    10. '       ' → logprob: -17.50001335144043

Token 1095: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0002354832977289334
    2. 'j' → logprob: -8.375235557556152
    3. 'acency' → logprob: -12.625235557556152
    4. 'd' → logprob: -14.750235557556152
    5. ' jac' → logprob: -15.125235557556152
    6. '   ' → logprob: -15.500235557556152
    7. '       ' → logprob: -15.500235557556152
    8. 'junction' → logprob: -16.000234603881836
    9. ' adjacency' → logprob: -16.125234603881836
    10. 'jc' → logprob: -16.500234603881836

Token 1096: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.014580411836504936
    2. 'acency' → logprob: -4.264580249786377
    3. 'acy' → logprob: -8.139580726623535
    4. 'ancy' → logprob: -9.764580726623535
    5. '#' → logprob: -10.264580726623535
    6. '   ' → logprob: -11.514580726623535
    7. 'encv' → logprob: -12.764580726623535
    8. '
' → logprob: -12.889580726623535
    9. 'acity' → logprob: -12.889580726623535
    10. 'ENCY' → logprob: -13.264580726623535

Token 1097: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00012737659562844783
    2. '[' → logprob: -9.000127792358398
    3. '[key' → logprob: -12.625127792358398
    4. '[self' → logprob: -14.875127792358398
    5. '[(' → logprob: -17.0001277923584
    6. '[count' → logprob: -17.5001277923584
    7. '[counter' → logprob: -17.6251277923584
    8. '[f' → logprob: -18.0001277923584
    9. '[cell' → logprob: -18.0001277923584
    10. '[C' → logprob: -18.1251277923584

Token 1098: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. 'c' → logprob: -13.12501049041748
    3. 'o' → logprob: -13.87501049041748
    4. '```' → logprob: -14.00001049041748
    5. '[c' → logprob: -14.00001049041748
    6. '.append' → logprob: -14.56251049041748
    7. 'oord' → logprob: -14.68751049041748
    8. 'ode' → logprob: -15.12501049041748
    9. '[' → logprob: -15.12501049041748
    10. ']' → logprob: -15.37501049041748

Token 1099: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001246348983841017
    2. '.append' → logprob: -9.00012493133545
    3. ' ].' → logprob: -14.62512493133545
    4. '.' → logprob: -15.12512493133545
    5. ']' → logprob: -15.62512493133545
    6. ''].' → logprob: -16.125123977661133
    7. 'append' → logprob: -16.625123977661133
    8. ').' → logprob: -16.875123977661133
    9. '.app' → logprob: -16.875123977661133
    10. '"].' → logprob: -17.750123977661133

Token 1100: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -14.000000953674316
    3. ' append' → logprob: -16.75
    4. 'app' → logprob: -19.375
    5. 'add' → logprob: -20.25
    6. 'appen' → logprob: -20.375
    7. '_append' → logprob: -20.875
    8. 'Append' → logprob: -22.625
    9. '	append' → logprob: -22.75
    10. 'ap' → logprob: -24.75

Token 1101: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0020392718724906445
    2. 'c' → logprob: -6.627039432525635
    3. '((' → logprob: -7.252039432525635
    4. '(' → logprob: -12.502038955688477
    5. '	c' → logprob: -14.877038955688477
    6. '(self' → logprob: -15.752038955688477
    7. 'road' → logprob: -16.752038955688477
    8. ')c' → logprob: -16.877038955688477
    9. ' c' → logprob: -17.127038955688477
    10. '[c' → logprob: -17.502038955688477

Token 1102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -14.875
    3. 'oord' → logprob: -17.625
    4. 'o' → logprob: -18.625
    5. '
' → logprob: -20.0625
    6. '₂' → logprob: -20.3125
    7. ' ' → logprob: -20.4375
    8. '２' → logprob: -20.5
    9. '۲' → logprob: -20.9375
    10. '{' → logprob: -20.9375

Token 1103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036659908946603537
    2. ')
' → logprob: -5.628665924072266
    3. '<|end|>' → logprob: -10.628665924072266
    4. '       ' → logprob: -11.003665924072266
    5. ' )' → logprob: -11.003665924072266
    6. '<|end|>' → logprob: -13.253665924072266
    7. '   ' → logprob: -13.503665924072266
    8. '),' → logprob: -14.128665924072266
    9. ')return' → logprob: -14.253665924072266
    10. ')
' → logprob: -14.253665924072266

Token 1104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.350386295001954e-05
    2. '       ' → logprob: -9.750073432922363
    3. 'self' → logprob: -11.875073432922363
    4. '   ' → logprob: -12.250073432922363
    5. '<|end|>' → logprob: -13.500073432922363
    6. ' self' → logprob: -14.750073432922363
    7. '<|end|>' → logprob: -14.875073432922363
    8. '          ' → logprob: -14.875073432922363
    9. '               ' → logprob: -15.125073432922363
    10. '	       ' → logprob: -15.375073432922363

Token 1105: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00037728800089098513
    2. '           ' → logprob: -8.375377655029297
    3. ' self' → logprob: -8.875377655029297
    4. '       ' → logprob: -12.250377655029297
    5. '   ' → logprob: -13.250377655029297
    6. '	self' → logprob: -15.375377655029297
    7. '(self' → logprob: -17.000377655029297
    8. '[self' → logprob: -17.125377655029297
    9. '               ' → logprob: -17.375377655029297
    10. ' ' → logprob: -17.500377655029297

Token 1106: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -5.080963092041202e-06
    2. '.' → logprob: -12.625004768371582
    3. ' .' → logprob: -14.250004768371582
    4. 'adj' → logprob: -14.625004768371582
    5. '_ad' → logprob: -15.750004768371582
    6. 'ad' → logprob: -16.2500057220459
    7. ' adjacency' → logprob: -16.6250057220459
    8. '.Ad' → logprob: -16.8750057220459
    9. '#ad' → logprob: -16.8750057220459
    10. '```' → logprob: -16.8750057220459

Token 1107: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -6.034592388459714e-06
    2. 'acency' → logprob: -13.000005722045898
    3. 'j' → logprob: -13.250005722045898
    4. 'Jac' → logprob: -13.625005722045898
    5. ' jac' → logprob: -14.125005722045898
    6. 'd' → logprob: -17.8750057220459
    7. 'jc' → logprob: -18.6250057220459
    8. 'junction' → logprob: -18.8750057220459
    9. '
' → logprob: -20.1250057220459
    10. '_j' → logprob: -20.3750057220459

Token 1108: 'ency' (ID: 2799)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.0011521248379722238
    2. 'ency' → logprob: -7.001152038574219
    3. 'ac' → logprob: -9.126152038574219
    4. 'c' → logprob: -9.626152038574219
    5. 'acy' → logprob: -9.876152038574219
    6. '_c' → logprob: -13.126152038574219
    7. '[' → logprob: -13.501152038574219
    8. 'unction' → logprob: -13.501152038574219
    9. 'acent' → logprob: -14.001152038574219
    10. '#' → logprob: -14.001152038574219

Token 1109: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.908022285439074e-05
    2. '[' → logprob: -9.750059127807617
    3. '[
' → logprob: -15.125059127807617
    4. 'c' → logprob: -15.250059127807617
    5. '(c' → logprob: -16.625059127807617
    6. '[C' → logprob: -16.875059127807617
    7. '```' → logprob: -17.375059127807617
    8. '
' → logprob: -18.000059127807617
    9. ' [' → logprob: -18.125059127807617
    10. '[s' → logprob: -18.875059127807617

Token 1110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28130826354026794
    2. '1' → logprob: -1.4063082933425903
    3. 'c' → logprob: -8.7813081741333
    4. 's' → logprob: -14.0313081741333
    5. ')' → logprob: -14.9688081741333
    6. '_' → logprob: -15.0313081741333
    7. '[' → logprob: -15.2188081741333
    8. 'def' → logprob: -15.2813081741333
    9. '[c' → logprob: -15.3438081741333
    10. '```' → logprob: -15.6563081741333

Token 1111: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.000249061529757455
    2. ').' → logprob: -9.000248908996582
    3. '.append' → logprob: -9.875248908996582
    4. ']' → logprob: -10.125248908996582
    5. ' ].' → logprob: -10.500248908996582
    6. '.' → logprob: -12.750248908996582
    7. '[' → logprob: -13.375248908996582
    8. '   ' → logprob: -14.375248908996582
    9. ''].' → logprob: -15.125248908996582
    10. '}.' → logprob: -15.750248908996582

Token 1112: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. '.append' → logprob: -14.750000953674316
    3. ' append' → logprob: -14.875000953674316
    4. 'add' → logprob: -17.125
    5. 'appen' → logprob: -19.0
    6. '	append' → logprob: -19.25
    7. 'app' → logprob: -20.5
    8. 'Append' → logprob: -20.75
    9. 'prepend' → logprob: -21.375
    10. ' ' → logprob: -21.375

Token 1113: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00017362393555231392
    2. 'c' → logprob: -8.750173568725586
    3. '(' → logprob: -11.250173568725586
    4. '(
' → logprob: -13.500173568725586
    5. ' c' → logprob: -15.000173568725586
    6. ')c' → logprob: -15.250173568725586
    7. '	c' → logprob: -16.375173568725586
    8. ' (' → logprob: -17.375173568725586
    9. '(co' → logprob: -18.375173568725586
    10. '((' → logprob: -18.750173568725586

Token 1114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. 'c' → logprob: -11.250015258789062
    3. ' c' → logprob: -13.375015258789062
    4. ')' → logprob: -16.000015258789062
    5. '
' → logprob: -17.500015258789062
    6. '```' → logprob: -17.500015258789062
    7. ')c' → logprob: -17.625015258789062
    8. ' ' → logprob: -17.750015258789062
    9. 's' → logprob: -17.750015258789062
    10. '' → logprob: -17.750015258789062

Token 1115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.576873758807778e-05
    2. ')
' → logprob: -9.625075340270996
    3. '<|end|>' → logprob: -12.125075340270996
    4. ' )' → logprob: -13.375075340270996
    5. '       ' → logprob: -13.625075340270996
    6. ')return' → logprob: -13.750075340270996
    7. '),' → logprob: -16.375076293945312
    8. ')

' → logprob: -16.375076293945312
    9. '())' → logprob: -16.875076293945312
    10. ')}' → logprob: -16.875076293945312

Token 1116: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1117: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15498854219913483
    2. ':
' → logprob: -2.6549885272979736
    3. '       ' → logprob: -3.4049885272979736
    4. ':return' → logprob: -3.7799885272979736
    5. '   ' → logprob: -5.154988765716553
    6. '           ' → logprob: -5.279988765716553
    7. '
' → logprob: -6.404988765716553
    8. '<|end|>' → logprob: -6.904988765716553
    9. ' return' → logprob: -7.154988765716553
    10. 'return' → logprob: -7.404988765716553

Token 1119: '           ' (ID: 352)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.12868821620941162
    2. 'self' → logprob: -2.753688335418701
    3. '       ' → logprob: -3.378688335418701
    4. 'return' → logprob: -4.503688335418701
    5. '   ' → logprob: -5.253688335418701
    6. ' pass' → logprob: -5.503688335418701
    7. '           ' → logprob: -6.628688335418701
    8. '#' → logprob: -6.878688335418701
    9. ' self' → logprob: -8.878687858581543
    10. ' return' → logprob: -9.878687858581543

Token 1120: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2654384970664978
    2. 'pass' → logprob: -1.5154385566711426
    3. '#' (adapté à ' #') → logprob: -4.515438556671143
    4. 'return' → logprob: -6.140438556671143
    5. 'road' → logprob: -8.390438079833984
    6. '   ' → logprob: -10.015438079833984
    7. ' self' → logprob: -10.265438079833984
    8. 'existing' → logprob: -11.640438079833984
    9. ' pass' → logprob: -11.890438079833984
    10. ' #' → logprob: -14.015438079833984

Token 1121: ' Possibly' (ID: 138743)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8972514271736145
    2. 'self' → logprob: -0.8972514271736145
    3. 'pass' → logprob: -2.1472513675689697
    4. 'road' → logprob: -2.7722513675689697
    5. 'existing' → logprob: -5.397251605987549
    6. 'return' → logprob: -8.52225112915039
    7. 'Existing' → logprob: -8.89725112915039
    8. '   ' → logprob: -9.27225112915039
    9. ' self' → logprob: -9.52225112915039
    10. 'raise' → logprob: -9.52225112915039

Token 1122: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.01913105510175228
    2. ' update' → logprob: -4.894131183624268
    3. '#' → logprob: -5.019131183624268
    4. 'pass' → logprob: -6.019131183624268
    5. 'road' → logprob: -7.019131183624268
    6. 'upgrade' → logprob: -7.769131183624268
    7. 'raise' → logprob: -7.769131183624268
    8. 'overwrite' → logprob: -8.64413070678711
    9. '           ' → logprob: -9.01913070678711
    10. 'existing' → logprob: -9.51913070678711

Token 1123: ' base' (ID: 3611)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2185601443052292
    2. ' self' → logprob: -2.343560218811035
    3. ' road' → logprob: -3.218560218811035
    4. '
' → logprob: -3.468560218811035
    5. ' base' → logprob: -4.343560218811035
    6. 'road' → logprob: -5.468560218811035
    7. 'pass' → logprob: -5.468560218811035
    8. 'base' → logprob: -5.593560218811035
    9. '           ' → logprob: -6.843560218811035
    10. '#' → logprob: -7.468560218811035

Token 1124: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.500001907348633
    3. '_tr' → logprob: -15.625001907348633
    4. '_code' → logprob: -15.875001907348633
    5. 'time' → logprob: -16.250001907348633
    6. '_line' → logprob: -16.375001907348633
    7. '_times' → logprob: -16.375001907348633
    8. '           ' → logprob: -16.500001907348633
    9. '   ' → logprob: -16.750001907348633
    10. '_token' → logprob: -16.875001907348633

Token 1125: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1126: ' different' (ID: 2647)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.09066539257764816
    2. ' base' → logprob: -2.715665340423584
    3. 'self' → logprob: -3.965665340423584
    4. ' self' → logprob: -6.465665340423584
    5. '	base' → logprob: -13.590665817260742
    6. '   ' → logprob: -14.215665817260742
    7. ' ' → logprob: -14.340665817260742
    8. '(base' → logprob: -14.715665817260742
    9. 'True' → logprob: -14.840665817260742
    10. '  ' → logprob: -15.465665817260742

Token 1127: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6183026432991028
    2. '           ' → logprob: -1.618302583694458
    3. ' if' → logprob: -2.368302583694458
    4. ':' → logprob: -2.493302583694458
    5. '<|end|>' → logprob: -3.743302583694458
    6. ' and' → logprob: -3.993302583694458
    7. ':
' → logprob: -4.493302822113037
    8. ',' → logprob: -4.993302822113037
    9. '
' → logprob: -4.993302822113037
    10. '   ' → logprob: -5.118302822113037

Token 1128: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6765415668487549
    2. '<|end|>' → logprob: -0.9265415668487549
    3. '           ' → logprob: -2.551541566848755
    4. ' pass' → logprob: -4.426541328430176
    5. '<|end|>' → logprob: -6.051541328430176
    6. 'pass' → logprob: -6.676541328430176
    7. '   ' → logprob: -7.301541328430176
    8. '```' → logprob: -7.551541328430176
    9. '...' → logprob: -7.801541328430176
    10. '#' → logprob: -9.051541328430176

Token 1129: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.05407693237066269
    2. '       ' → logprob: -3.804076910018921
    3. ' pass' → logprob: -4.1790771484375
    4. '           ' → logprob: -4.9290771484375
    5. 'self' → logprob: -5.3040771484375
    6. 'road' → logprob: -6.4290771484375
    7. 'return' → logprob: -7.4290771484375
    8. 'if' → logprob: -7.6790771484375
    9. ' if' → logprob: -10.0540771484375
    10. '```' → logprob: -10.1790771484375

Token 1130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6966350674629211
    2. '<|end|>' → logprob: -0.6966350674629211
    3. '<|end|>' → logprob: -6.4466352462768555
    4. ')' → logprob: -7.6966352462768555
    5. '```' → logprob: -7.6966352462768555
    6. 'def' → logprob: -8.446635246276855
    7. '       ' → logprob: -8.946635246276855
    8. ' ' → logprob: -8.946635246276855
    9. '#' → logprob: -9.071635246276855
    10. '
' → logprob: -9.321635246276855

Token 1132: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041412051767110825
    2. '<|end|>' → logprob: -3.416412115097046
    3. 'def' (adapté à ' def') → logprob: -5.666411876678467
    4. ')' → logprob: -6.416411876678467
    5. '
' → logprob: -7.541411876678467
    6. '       ' → logprob: -7.666411876678467
    7. ' def' → logprob: -7.791411876678467
    8. ' ' → logprob: -8.041412353515625
    9. '#' → logprob: -8.041412353515625
    10. '<|end|>' → logprob: -8.416412353515625

Token 1133: ' set' (ID: 920)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9734929203987122
    2. 'get' → logprob: -1.2234928607940674
    3. 'remove' → logprob: -2.5984928607940674
    4. 'update' → logprob: -3.0984928607940674
    5. ' set' → logprob: -3.2234928607940674
    6. 'set' → logprob: -3.4734928607940674
    7. ' update' → logprob: -3.7234928607940674
    8. 'has' → logprob: -3.7234928607940674
    9. ' remove' → logprob: -3.8484928607940674
    10. ' find' → logprob: -4.3484930992126465

Token 1134: '_signal' (ID: 50953)
  Prédit: '_signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_signal' → logprob: -0.030216006562113762
    2. '_' → logprob: -3.5302159786224365
    3. '_sign' → logprob: -8.405216217041016
    4. '_con' → logprob: -8.530216217041016
    5. '_ro' → logprob: -10.530216217041016
    6. 'signal' → logprob: -11.530216217041016
    7. '_s' → logprob: -13.280216217041016
    8. '_base' → logprob: -13.405216217041016
    9. '_speed' → logprob: -14.655216217041016
    10. '_sig' → logprob: -14.905216217041016

Token 1135: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. '(s' → logprob: -14.87501335144043
    4. 'self' → logprob: -16.00001335144043
    5. '(co' → logprob: -18.00001335144043
    6. 's' → logprob: -18.25001335144043
    7. ' (' → logprob: -18.37501335144043
    8. '(sel' → logprob: -18.37501335144043
    9. '(coord' → logprob: -19.00001335144043
    10. '(signal' → logprob: -19.12501335144043

Token 1136: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00035250463406555355
    2. ',' → logprob: -8.12535285949707
    3. 'self' → logprob: -10.75035285949707
    4. '(' → logprob: -11.25035285949707
    5. '(coord' → logprob: -11.50035285949707
    6. ' (' → logprob: -12.62535285949707
    7. ',self' → logprob: -13.25035285949707
    8. '(co' → logprob: -13.25035285949707
    9. '   ' → logprob: -13.62535285949707
    10. ')(' → logprob: -14.00035285949707

Token 1137: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.09072070568799973
    2. ' coord' → logprob: -2.4657206535339355
    3. 'coordinate' → logprob: -6.7157206535339355
    4. 'self' → logprob: -7.7157206535339355
    5. ' coordinate' → logprob: -9.590721130371094
    6. ' self' → logprob: -10.340721130371094
    7. '   ' → logprob: -11.715721130371094
    8. ')' → logprob: -12.840721130371094
    9. 'signal' → logprob: -13.340721130371094
    10. 'co' → logprob: -13.340721130371094

Token 1138: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002802855451591313
    2. ':' → logprob: -9.000280380249023
    3. 'self' → logprob: -9.750280380249023
    4. '(self' → logprob: -10.000280380249023
    5. ' ,' → logprob: -10.125280380249023
    6. '(coord' → logprob: -12.625280380249023
    7. '   ' → logprob: -13.125280380249023
    8. 'coord' → logprob: -13.250280380249023
    9. '):' → logprob: -13.500280380249023
    10. '```' → logprob: -14.125280380249023

Token 1139: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0003309361054562032
    2. 'coord' → logprob: -8.500330924987793
    3. ' Coordinate' → logprob: -9.875330924987793
    4. 'Coord' → logprob: -10.250330924987793
    5. ' coord' → logprob: -10.750330924987793
    6. ')' → logprob: -12.000330924987793
    7. 'Coordinates' → logprob: -12.125330924987793
    8. 'Coordinator' → logprob: -12.500330924987793
    9. '_coordinate' → logprob: -13.250330924987793
    10. '   ' → logprob: -14.250330924987793

Token 1140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.500001907348633
    4. ',s' → logprob: -18.750001907348633
    5. '       ' → logprob: -19.375001907348633
    6. ',
' → logprob: -19.500001907348633
    7. '‌,' → logprob: -19.500001907348633
    8. ':' → logprob: -19.625001907348633
    9. ',value' → logprob: -19.625001907348633
    10. '`,' → logprob: -19.875001907348633

Token 1141: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.04299325868487358
    2. 'signal' → logprob: -3.6679933071136475
    3. ' cycle' → logprob: -4.167993068695068
    4. 'traffic' → logprob: -7.292993068695068
    5. ' signal' → logprob: -8.292993545532227
    6. ' traffic' → logprob: -9.917993545532227
    7. 'Traffic' → logprob: -10.167993545532227
    8. '   ' → logprob: -11.167993545532227
    9. ' Traffic' → logprob: -11.417993545532227
    10. ' ' → logprob: -12.542993545532227

Token 1142: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0073714000172913074
    2. ',' → logprob: -5.382371425628662
    3. '):' → logprob: -6.007371425628662
    4. ':int' → logprob: -9.007370948791504
    5. '):
' → logprob: -9.007370948791504
    6. '=' → logprob: -11.632370948791504
    7. 'int' → logprob: -11.632370948791504
    8. ')' → logprob: -11.882370948791504
    9. '   ' → logprob: -12.507370948791504
    10. 'cycle' → logprob: -13.132370948791504

Token 1143: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.022131383419036865
    2. '60' → logprob: -4.647131443023682
    3. '30' → logprob: -5.522131443023682
    4. '10' → logprob: -6.397131443023682
    5. 'cycle' → logprob: -6.647131443023682
    6. '20' → logprob: -6.897131443023682
    7. '15' → logprob: -7.272131443023682
    8. ')' → logprob: -7.397131443023682
    9. '0' → logprob: -7.897131443023682
    10. ' int' → logprob: -8.022130966186523

Token 1144: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04867706820368767
    2. '):' → logprob: -3.0486769676208496
    3. '):
' → logprob: -9.423677444458008
    4. ')' → logprob: -12.048677444458008
    5. '   ' → logprob: -13.673677444458008
    6. ' ):
' → logprob: -13.923677444458008
    7. ',' → logprob: -14.423677444458008
    8. '       ' → logprob: -15.548677444458008
    9. '):

' → logprob: -15.923677444458008
    10. ' ):' → logprob: -16.548677444458008

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06067722290754318
    2. 'self' → logprob: -3.0606772899627686
    3. ' self' → logprob: -4.4356770515441895
    4. '   ' → logprob: -9.310677528381348
    5. '	self' → logprob: -9.685677528381348
    6. '	' → logprob: -12.310677528381348
    7. '```' → logprob: -12.310677528381348
    8. '(self' → logprob: -13.060677528381348
    9. ',' → logprob: -13.685677528381348
    10. 'signal' → logprob: -14.185677528381348

Token 1146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00012035090912831947
    2. ' self' → logprob: -9.500120162963867
    3. '       ' → logprob: -10.000120162963867
    4. 'signal' → logprob: -17.375120162963867
    5. '	self' → logprob: -17.875120162963867
    6. '(self' → logprob: -20.375120162963867
    7. '   ' → logprob: -21.250120162963867
    8. '```' → logprob: -22.000120162963867
    9. '=self' → logprob: -22.500120162963867
    10. 'if' → logprob: -22.875120162963867

Token 1147: '.sign' (ID: 27578)
  Prédit: '.sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sign' → logprob: -4.008129963040119e-06
    2. '.signal' → logprob: -13.125003814697266
    3. 'signals' → logprob: -13.375003814697266
    4. ' .' → logprob: -15.125003814697266
    5. '.' → logprob: -16.375003814697266
    6. '.sig' → logprob: -17.125003814697266
    7. ').' → logprob: -18.000003814697266
    8. 'sign' → logprob: -18.250003814697266
    9. '.s' → logprob: -18.375003814697266
    10. '.se' → logprob: -18.375003814697266

Token 1148: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -9.729906196298543e-06
    2. 'al' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.750009536743164
    4. ' als' → logprob: -16.750009536743164
    5. 'ols' → logprob: -17.125009536743164
    6. '
' → logprob: -17.250009536743164
    7. '```' → logprob: -17.625009536743164
    8. '=' → logprob: -18.000009536743164
    9. 'a' → logprob: -18.125009536743164
    10. '[' → logprob: -18.375009536743164

Token 1149: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. 'coord' → logprob: -15.5
    3. '[
' → logprob: -16.875
    4. ' [' → logprob: -17.25
    5. '=' → logprob: -17.375
    6. '[self' → logprob: -17.5
    7. ' =' → logprob: -17.875
    8. '```' → logprob: -18.125
    9. '
' → logprob: -18.375
    10. '   ' → logprob: -19.375

Token 1150: 'coord' (ID: 54943)
  Prédit: 'coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -1.1398757123970427e-05
    2. ')' → logprob: -12.625011444091797
    3. ' coord' → logprob: -12.625011444091797
    4. '(coord' → logprob: -13.125011444091797
    5. '
' → logprob: -14.000011444091797
    6. 'cord' → logprob: -14.125011444091797
    7. '[' → logprob: -15.000011444091797
    8. ')[' → logprob: -16.000011444091797
    9. 'co' → logprob: -16.000011444091797
    10. 'Coord' → logprob: -16.125011444091797

Token 1151: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.619311974034645e-05
    2. ']=' → logprob: -10.250036239624023
    3. '=' → logprob: -14.375036239624023
    4. ' ]' → logprob: -15.625036239624023
    5. ')' → logprob: -18.125036239624023
    6. ' =' → logprob: -19.125036239624023
    7. '   ' → logprob: -20.125036239624023
    8. ']=(' → logprob: -21.125036239624023
    9. ']
' → logprob: -22.250036239624023
    10. '']' → logprob: -22.375036239624023

Token 1152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.836499985889532e-05
    2. ' =' → logprob: -9.7500581741333
    3. '=
' → logprob: -20.500059127807617
    4. '=}' → logprob: -22.000059127807617
    5. '=

' → logprob: -22.125059127807617
    6. ']=' → logprob: -22.625059127807617
    7. '=create' → logprob: -22.750059127807617
    8. ')=' → logprob: -23.250059127807617
    9. '＝' → logprob: -23.500059127807617
    10. '.=' → logprob: -23.875059127807617

Token 1153: ' Traffic' (ID: 52059)
  Prédit: 'Traffic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -0.001170225441455841
    2. ' Traffic' → logprob: -6.7511701583862305
    3. 'T' → logprob: -17.251171112060547
    4. '   ' → logprob: -18.501171112060547
    5. 'Tra' → logprob: -20.001171112060547
    6. 'traffic' → logprob: -20.501171112060547
    7. ' traffic' → logprob: -20.626171112060547
    8. 'Travel' → logprob: -20.751171112060547
    9. 'Signal' → logprob: -21.001171112060547
    10. ' ' → logprob: -22.251171112060547

Token 1154: 'Signal' (ID: 31411)
  Prédit: 'Signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Signal' → logprob: -3.128163257315464e-07
    2. '_signal' → logprob: -15.75
    3. 'signal' → logprob: -16.125
    4. ' Signal' → logprob: -17.25
    5. '_SIGNAL' → logprob: -17.75
    6. '.Signal' → logprob: -17.875
    7. 'ignal' → logprob: -19.125
    8. ' signal' → logprob: -19.25
    9. 'Sign' → logprob: -19.625
    10. 'Signals' → logprob: -21.375

Token 1155: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -3.762356209335849e-05
    2. 'coord' → logprob: -10.25003719329834
    3. '(co' → logprob: -13.37503719329834
    4. ' coord' → logprob: -14.87503719329834
    5. '(coords' → logprob: -16.250038146972656
    6. 'Coord' → logprob: -16.625038146972656
    7. '(' → logprob: -17.250038146972656
    8. '.coord' → logprob: -18.125038146972656
    9. '(coeff' → logprob: -19.125038146972656
    10. '```' → logprob: -19.875038146972656

Token 1156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.75000286102295
    3. ',
' → logprob: -14.25000286102295
    4. 'coord' → logprob: -15.37500286102295
    5. ')' → logprob: -15.50000286102295
    6. '(coord' → logprob: -16.500001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '
' → logprob: -17.875001907348633
    9. '),' → logprob: -17.875001907348633
    10. '<|end|>' → logprob: -18.625001907348633

Token 1157: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0005530327325686812
    2. ' cycle' → logprob: -7.500553131103516
    3. '_cycle' → logprob: -19.375553131103516
    4. 'ycle' → logprob: -19.500553131103516
    5. 'cycled' → logprob: -20.125553131103516
    6. 'Cycle' → logprob: -20.375553131103516
    7. ')' → logprob: -20.625553131103516
    8. 'cycl' → logprob: -21.000553131103516
    9. 'cy' → logprob: -21.000553131103516
    10. 'cycling' → logprob: -21.000553131103516

Token 1158: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002738522016443312
    2. '<|end|>' → logprob: -8.875273704528809
    3. ')
' → logprob: -9.000273704528809
    4. ' )' → logprob: -12.750273704528809
    5. '<|end|>' → logprob: -12.750273704528809
    6. ')return' → logprob: -13.375273704528809
    7. ')

' → logprob: -14.000273704528809
    8. '   ' → logprob: -14.375273704528809
    9. '
' → logprob: -14.375273704528809
    10. '       ' → logprob: -14.750273704528809

Token 1159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016277406364679337
    2. 'def' → logprob: -4.516277313232422
    3. '
' → logprob: -5.391277313232422
    4. '<|end|>' → logprob: -8.141277313232422
    5. '```' → logprob: -9.016277313232422
    6. '    
' → logprob: -9.516277313232422
    7. '<|end|>' → logprob: -10.141277313232422
    8. '#' → logprob: -10.516277313232422
    9. ' def' → logprob: -10.891277313232422
    10. 'class' → logprob: -11.016277313232422

Token 1160: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1300077885389328
    2. '   ' → logprob: -2.130007743835449
    3. ' def' → logprob: -6.130007743835449
    4. '<|end|>' → logprob: -7.880007743835449
    5. '```' → logprob: -8.75500774383545
    6. '	def' → logprob: -8.88000774383545
    7. '#' → logprob: -9.25500774383545
    8. '
' → logprob: -9.75500774383545
    9. '<|end|>' → logprob: -10.75500774383545
    10. ')' → logprob: -11.00500774383545

Token 1161: ' close' (ID: 5263)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.1931840181350708
    2. 'get' → logprob: -1.8181840181350708
    3. 'remove' → logprob: -1.9431840181350708
    4. ' shortest' → logprob: -2.3181838989257812
    5. ' remove' → logprob: -2.6931838989257812
    6. 'has' → logprob: -3.4431838989257812
    7. 'update' → logprob: -3.6931838989257812
    8. ' find' → logprob: -3.9431838989257812
    9. 'travel' → logprob: -3.9431838989257812
    10. ' travel' → logprob: -3.9431838989257812

Token 1162: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00030590701499022543
    2. '_ro' → logprob: -8.125306129455566
    3. 'road' → logprob: -12.750306129455566
    4. '(self' → logprob: -13.750306129455566
    5. '   ' → logprob: -13.750306129455566
    6. '_edge' → logprob: -14.000306129455566
    7. 'Road' → logprob: -14.125306129455566
    8. ' road' → logprob: -14.625306129455566
    9. '(' → logprob: -14.625306129455566
    10. '```' → logprob: -15.375306129455566

Token 1163: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -2.4153549020411447e-05
    2. 'roads' → logprob: -12.00002384185791
    3. 'all' → logprob: -12.25002384185791
    4. ' road' → logprob: -12.37502384185791
    5. 'fro' → logprob: -12.37502384185791
    6. 'Road' → logprob: -13.00002384185791
    7. 'key' → logprob: -13.87502384185791
    8. 'def' → logprob: -15.00002384185791
    9. '_' → logprob: -15.25002384185791
    10. 'f' → logprob: -15.50002384185791

Token 1164: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.875004768371582
    3. '(f' → logprob: -14.125004768371582
    4. '(s' → logprob: -14.250004768371582
    5. ' (' → logprob: -14.625004768371582
    6. '(key' → logprob: -14.875004768371582
    7. 'self' → logprob: -17.1250057220459
    8. '(
' → logprob: -17.3750057220459
    9. '(c' → logprob: -17.7500057220459
    10. '   ' → logprob: -17.8750057220459

Token 1165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014418430509977043
    2. ',key' → logprob: -9.625144004821777
    3. 'self' → logprob: -10.000144004821777
    4. 'key' → logprob: -11.625144004821777
    5. ' ,' → logprob: -12.500144004821777
    6. ',f' → logprob: -12.625144004821777
    7. ',
' → logprob: -12.750144004821777
    8. '(self' → logprob: -12.750144004821777
    9. '(key' → logprob: -12.875144004821777
    10. ',(' → logprob: -13.250144004821777

Token 1166: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2870873808860779
    2. ' c' → logprob: -1.5370874404907227
    3. 'coord' → logprob: -4.412087440490723
    4. ' coord' → logprob: -4.912087440490723
    5. ' key' → logprob: -5.412087440490723
    6. 'fro' → logprob: -5.412087440490723
    7. 'key' → logprob: -5.912087440490723
    8. 'road' → logprob: -7.412087440490723
    9. 'self' → logprob: -7.412087440490723
    10. ' fro' → logprob: -7.537087440490723

Token 1167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002964935847558081
    2. 'o' → logprob: -9.125296592712402
    3. 'oord' → logprob: -10.250296592712402
    4. ')' → logprob: -10.625296592712402
    5. '_' → logprob: -10.750296592712402
    6. ',' → logprob: -10.750296592712402
    7. 'ode' → logprob: -11.375296592712402
    8. '   ' → logprob: -12.000296592712402
    9. '(' → logprob: -12.125296592712402
    10. '=' → logprob: -12.125296592712402

Token 1168: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.073596548754722e-05
    2. ' ,' → logprob: -10.25005054473877
    3. ':' → logprob: -11.87505054473877
    4. ',c' → logprob: -12.00005054473877
    5. ',
' → logprob: -13.12505054473877
    6. '   ' → logprob: -16.125051498413086
    7. ',f' → logprob: -16.875051498413086
    8. 'c' → logprob: -18.250051498413086
    9. ',
' → logprob: -18.500051498413086
    10. '       ' → logprob: -18.500051498413086

Token 1169: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.5950802564620972
    2. ' c' → logprob: -1.0950802564620972
    3. ' Coordinate' → logprob: -2.2200803756713867
    4. 'c' → logprob: -5.595080375671387
    5. ',' → logprob: -7.720080375671387
    6. 'Coord' → logprob: -7.970080375671387
    7. ' coord' → logprob: -8.220080375671387
    8. 'Coordinates' → logprob: -8.470080375671387
    9. ' Coordinates' → logprob: -9.095080375671387
    10. 'coord' → logprob: -9.470080375671387

Token 1170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.370294846012257e-05
    2. ' ,' → logprob: -10.250043869018555
    3. ',c' → logprob: -11.750043869018555
    4. ',
' → logprob: -15.250043869018555
    5. '   ' → logprob: -16.750043869018555
    6. ' c' → logprob: -18.000043869018555
    7. 'c' → logprob: -18.000043869018555
    8. '       ' → logprob: -18.125043869018555
    9. '‌,' → logprob: -18.750043869018555
    10. '_,' → logprob: -18.750043869018555

Token 1171: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006717505399137735
    2. ' c' → logprob: -5.006717681884766
    3. '   ' → logprob: -13.131717681884766
    4. '    ' → logprob: -16.381717681884766
    5. '       ' → logprob: -16.631717681884766
    6. ' ' → logprob: -17.131717681884766
    7. '  ' → logprob: -17.256717681884766
    8. '     ' → logprob: -18.006717681884766
    9. '      ' → logprob: -18.256717681884766
    10. '           ' → logprob: -18.756717681884766

Token 1172: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.147740689106286e-05
    2. 'c' → logprob: -10.12507152557373
    3. '1' → logprob: -10.75007152557373
    4. 'o' → logprob: -12.37507152557373
    5. ',' → logprob: -13.12507152557373
    6. '   ' → logprob: -14.25007152557373
    7. '```' → logprob: -14.50007152557373
    8. ')' → logprob: -14.75007152557373
    9. 'ode' → logprob: -15.25007152557373
    10. '_' → logprob: -15.25007152557373

Token 1173: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06674199551343918
    2. ':' → logprob: -2.941741943359375
    3. '):' → logprob: -4.816741943359375
    4. '):
' → logprob: -5.941741943359375
    5. ')' → logprob: -7.066741943359375
    6. '   ' → logprob: -9.066741943359375
    7. ' ,' → logprob: -10.566741943359375
    8. '=' → logprob: -10.816741943359375
    9. ')
' → logprob: -11.441741943359375
    10. '       ' → logprob: -11.691741943359375

Token 1174: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0017094480572268367
    2. ' Coordinate' → logprob: -6.376709461212158
    3. 'Coord' → logprob: -12.876708984375
    4. 'Coordinates' → logprob: -13.251708984375
    5. '_coordinate' → logprob: -13.501708984375
    6. ' coordinate' → logprob: -14.126708984375
    7. 'coordinate' → logprob: -15.126708984375
    8. 'c' → logprob: -15.501708984375
    9. ' c' → logprob: -16.126708984375
    10. ')' → logprob: -16.376708984375

Token 1175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0028827376663684845
    2. '):' → logprob: -5.877882957458496
    3. '):
' → logprob: -9.752882957458496
    4. ')' → logprob: -11.252882957458496
    5. '   ' → logprob: -12.752882957458496
    6. ' ):
' → logprob: -13.252882957458496
    7. '):

' → logprob: -14.002882957458496
    8. '       ' → logprob: -14.627882957458496
    9. ',' → logprob: -14.752882957458496
    10. ''):
' → logprob: -16.37788200378418

Token 1176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18967220187187195
    2. ' key' → logprob: -1.8146722316741943
    3. '   ' → logprob: -4.939671993255615
    4. 'key' → logprob: -6.189671993255615
    5. '
' → logprob: -7.814671993255615
    6. '	key' → logprob: -9.189672470092773
    7. '```' → logprob: -9.939672470092773
    8. ',' → logprob: -10.314672470092773
    9. '(key' → logprob: -11.314672470092773
    10. ' token' → logprob: -11.314672470092773

Token 1177: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.0004216170927975327
    2. ' key' → logprob: -8.250421524047852
    3. '       ' → logprob: -8.750421524047852
    4. '   ' → logprob: -13.250421524047852
    5. 'self' → logprob: -16.00042152404785
    6. '	key' → logprob: -16.37542152404785
    7. 'road' → logprob: -18.00042152404785
    8. 'k' → logprob: -18.62542152404785
    9. 'Key' → logprob: -20.37542152404785
    10. '_key' → logprob: -20.37542152404785

Token 1178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132629096508026
    2. ' =' → logprob: -1.313262939453125
    3. '=f' → logprob: -13.813262939453125
    4. '=
' → logprob: -16.063262939453125
    5. ' =
' → logprob: -17.688262939453125
    6. '=}' → logprob: -18.938262939453125
    7. ' ' → logprob: -19.063262939453125
    8. ')' → logprob: -19.313262939453125
    9. '=

' → logprob: -19.438262939453125
    10. '   ' → logprob: -19.688262939453125

Token 1179: ' fro' (ID: 16956)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.00861468818038702
    2. ' fro' → logprob: -4.758614540100098
    3. 'f' → logprob: -15.633614540100098
    4. 'fr' → logprob: -18.383615493774414
    5. 'frog' → logprob: -18.883615493774414
    6. 'fol' → logprob: -19.008615493774414
    7. 'fo' → logprob: -19.383615493774414
    8. 'fib' → logprob: -19.758615493774414
    9. '	f' → logprob: -20.008615493774414
    10. 'flo' → logprob: -20.008615493774414

Token 1180: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -1.9361264946837764e-07
    2. 'zes' → logprob: -16.0
    3. 'zen' → logprob: -18.125
    4. 'zos' → logprob: -22.0
    5. 'zent' → logprob: -22.625
    6. 'z' → logprob: -22.875
    7. 'ze' → logprob: -23.0
    8. 'ens' → logprob: -23.5
    9. '```' → logprob: -24.25
    10. 'zs' → logprob: -24.375

Token 1181: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.018254833295941353
    2. 'et' → logprob: -4.01825475692749
    3. 'st' → logprob: -10.143255233764648
    4. '_set' → logprob: -11.518255233764648
    5. 'Set' → logprob: -11.768255233764648
    6. ' set' → logprob: -11.768255233764648
    7. 'est' → logprob: -12.018255233764648
    8. 'zet' → logprob: -12.268255233764648
    9. '{' → logprob: -12.393255233764648
    10. 'z' → logprob: -12.643255233764648

Token 1182: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -9.17420256882906e-05
    2. '({' → logprob: -9.375091552734375
    3. '{' → logprob: -12.000091552734375
    4. '[c' → logprob: -14.750091552734375
    5. '([{' → logprob: -15.875091552734375
    6. '(' → logprob: -16.375091552734375
    7. '[' → logprob: -16.500091552734375
    8. '([
' → logprob: -17.125091552734375
    9. '((' → logprob: -17.125091552734375
    10. '(([' → logprob: -17.875091552734375

Token 1183: 'c' (ID: 66)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.6240566083070007e-06
    2. '(c' → logprob: -13.750001907348633
    3. 'c' → logprob: -15.125001907348633
    4. '{' → logprob: -16.375001907348633
    5. '([' → logprob: -16.500001907348633
    6. ' [' → logprob: -17.625001907348633
    7. '[' → logprob: -17.875001907348633
    8. '[
' → logprob: -18.125001907348633
    9. '[C' → logprob: -19.125001907348633
    10. '[f' → logprob: -21.750001907348633

Token 1184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027091896161437035
    2. '[c' → logprob: -3.7770919799804688
    3. '{' → logprob: -5.777091979980469
    4. '[' → logprob: -7.527091979980469
    5. '(c' → logprob: -9.152091979980469
    6. '([' → logprob: -9.527091979980469
    7. '(' → logprob: -12.152091979980469
    8. '[
' → logprob: -12.277091979980469
    9. 'c' → logprob: -12.902091979980469
    10. ' [' → logprob: -13.027091979980469

Token 1185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006099864258430898
    2. '([' → logprob: -8.3756103515625
    3. ',[' → logprob: -8.5006103515625
    4. ',c' → logprob: -8.8756103515625
    5. '[c' → logprob: -10.3756103515625
    6. ' ,' → logprob: -13.0006103515625
    7. '{' → logprob: -13.8756103515625
    8. '(c' → logprob: -14.3756103515625
    9. '   ' → logprob: -15.0006103515625
    10. '[' → logprob: -15.2506103515625

Token 1186: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004889304982498288
    2. ' c' → logprob: -7.625488758087158
    3. '   ' → logprob: -14.000489234924316
    4. '       ' → logprob: -17.25048828125
    5. '    ' → logprob: -17.62548828125
    6. '  ' → logprob: -18.25048828125
    7. '	c' → logprob: -18.25048828125
    8. '
' → logprob: -18.37548828125
    9. ' ' → logprob: -18.50048828125
    10. '
' → logprob: -18.62548828125

Token 1187: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1875571544806007e-05
    2. '1' → logprob: -12.000011444091797
    3. ',' → logprob: -12.500011444091797
    4. ' ' → logprob: -14.250011444091797
    5. '   ' → logprob: -14.625011444091797
    6. ',c' → logprob: -14.750011444091797
    7. 'c' → logprob: -15.250011444091797
    8. 'o' → logprob: -16.375011444091797
    9. '  ' → logprob: -16.375011444091797
    10. '_' → logprob: -17.500011444091797

Token 1188: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.050483882427215576
    2. ')
' → logprob: -3.0504839420318604
    3. '])' → logprob: -6.425483703613281
    4. ')' → logprob: -8.550483703613281
    5. '       ' → logprob: -10.550483703613281
    6. '])
' → logprob: -10.550483703613281
    7. ']' → logprob: -11.675483703613281
    8. ')
' → logprob: -12.300483703613281
    9. ']
' → logprob: -12.550483703613281
    10. ']);' → logprob: -13.050483703613281

Token 1189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025509119033813477
    2. ' if' → logprob: -3.7755091190338135
    3. ' =' → logprob: -6.525508880615234
    4. '   ' → logprob: -8.275508880615234
    5. 'if' → logprob: -8.525508880615234
    6. '=' → logprob: -9.025508880615234
    7. ':
' → logprob: -9.275508880615234
    8. ':' → logprob: -10.400508880615234
    9. ' and' → logprob: -10.400508880615234
    10. '):
' → logprob: -11.275508880615234

Token 1190: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0019784762989729643
    2. '       ' → logprob: -6.751978397369385
    3. 'road' → logprob: -7.251978397369385
    4. ' if' → logprob: -9.251978874206543
    5. 'self' → logprob: -12.751978874206543
    6. '   ' → logprob: -15.126978874206543
    7. '
' → logprob: -16.251977920532227
    8. '           ' → logprob: -17.251977920532227
    9. 'If' → logprob: -17.501977920532227
    10. ' road' → logprob: -17.876977920532227

Token 1191: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.02054375410079956
    2. ' key' → logprob: -3.8955438137054443
    3. '   ' → logprob: -13.645544052124023
    4. ' ' → logprob: -15.270544052124023
    5. 'self' → logprob: -15.645544052124023
    6. '	key' → logprob: -16.020544052124023
    7. '       ' → logprob: -16.520544052124023
    8. '           ' → logprob: -17.395544052124023
    9. '
' → logprob: -17.770544052124023
    10. '  ' → logprob: -18.145544052124023

Token 1192: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0619712732732296
    2. ' in' → logprob: -2.8119711875915527
    3. '	in' → logprob: -13.311971664428711
    4. '   ' → logprob: -14.061971664428711
    5. ')' → logprob: -15.186971664428711
    6. '           ' → logprob: -15.686971664428711
    7. '       ' → logprob: -15.811971664428711
    8. '_in' → logprob: -16.31197166442871
    9. 'In' → logprob: -16.43697166442871
    10. 'import' → logprob: -16.43697166442871

Token 1193: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.848420551046729e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -16.875059127807617
    4. '       ' → logprob: -17.750059127807617
    5. '[self' → logprob: -18.375059127807617
    6. '   ' → logprob: -19.250059127807617
    7. '=self' → logprob: -19.625059127807617
    8. '           ' → logprob: -19.875059127807617
    9. '	self' → logprob: -20.375059127807617
    10. '
' → logprob: -21.125059127807617

Token 1194: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.5
    3. 'roads' → logprob: -16.125
    4. '_ro' → logprob: -17.0
    5. ' .' → logprob: -17.625
    6. 'self' → logprob: -17.875
    7. 'ro' → logprob: -18.125
    8. ' roads' → logprob: -19.125
    9. '.rob' → logprob: -19.125
    10. '.self' → logprob: -20.25

Token 1195: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: 0.0
    2. ' ads' → logprob: -17.0
    3. 'a' → logprob: -17.875
    4. '
' → logprob: -17.875
    5. 'ad' → logprob: -18.375
    6. '.ads' → logprob: -18.75
    7. '_ads' → logprob: -20.0
    8. '{' → logprob: -20.0
    9. '[' → logprob: -20.875
    10. '_' → logprob: -20.875

Token 1196: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.022449545562267303
    2. ':' → logprob: -4.147449493408203
    3. '           ' → logprob: -5.147449493408203
    4. '       ' → logprob: -8.147449493408203
    5. '.' → logprob: -9.647449493408203
    6. ':
' → logprob: -10.147449493408203
    7. ' and' → logprob: -10.147449493408203
    8. '):
' → logprob: -10.397449493408203
    9. '.closed' → logprob: -10.397449493408203
    10. '```' → logprob: -11.147449493408203

Token 1197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.165027217415627e-05
    2. ' self' → logprob: -11.625021934509277
    3. 'self' → logprob: -11.875021934509277
    4. '```' → logprob: -12.625021934509277
    5. '            
' → logprob: -14.500021934509277
    6. '   ' → logprob: -14.625021934509277
    7. '       ' → logprob: -15.000021934509277
    8. '	       ' → logprob: -15.125021934509277
    9. '
' → logprob: -15.250021934509277
    10. '               ' → logprob: -16.00002098083496

Token 1198: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06830653548240662
    2. '           ' → logprob: -3.0683064460754395
    3. ' self' → logprob: -3.9433064460754395
    4. '       ' → logprob: -9.193306922912598
    5. '   ' → logprob: -10.318306922912598
    6. '               ' → logprob: -12.443306922912598
    7. '	self' → logprob: -13.318306922912598
    8. '```' → logprob: -14.443306922912598
    9. '=self' → logprob: -15.318306922912598
    10. '[self' → logprob: -15.693306922912598

Token 1199: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -1.1279553291387856e-05
    2. 'roads' → logprob: -11.875011444091797
    3. '.' → logprob: -13.750011444091797
    4. '_ro' → logprob: -14.250011444091797
    5. ' .' → logprob: -14.500011444091797
    6. 'ro' → logprob: -14.625011444091797
    7. '].' → logprob: -14.875011444091797
    8. ').' → logprob: -15.250011444091797
    9. '           ' → logprob: -15.375011444091797
    10. '
' → logprob: -15.625011444091797

Token 1200: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -6.704273118884885e-07
    2. ' ads' → logprob: -14.750000953674316
    3. '
' → logprob: -17.75
    4. 'a' → logprob: -17.875
    5. '_ads' → logprob: -18.0
    6. 'ad' → logprob: -18.125
    7. '.ads' → logprob: -18.125
    8. 'Ads' → logprob: -18.5
    9. '_' → logprob: -19.125
    10. '{' → logprob: -19.125

Token 1201: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -5.512236498361744e-07
    2. 'key' → logprob: -15.125000953674316
    3. '[' → logprob: -15.250000953674316
    4. '
' → logprob: -18.5
    5. '[k' → logprob: -20.0
    6. '][' → logprob: -20.0
    7. '```' → logprob: -20.125
    8. ' [' → logprob: -20.25
    9. '   ' → logprob: -20.625
    10. '[
' → logprob: -20.875

Token 1202: '].' (ID: 1651)
  Prédit: '.closed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.closed' → logprob: -0.38710907101631165
    2. '].' → logprob: -1.1371090412139893
    3. '.' → logprob: -9.13710880279541
    4. '.close' → logprob: -10.13710880279541
    5. ').' → logprob: -10.63710880279541
    6. '   ' → logprob: -11.38710880279541
    7. ']' → logprob: -11.38710880279541
    8. '.cl' → logprob: -11.38710880279541
    9. '}.' → logprob: -11.63710880279541
    10. '[' → logprob: -12.38710880279541

Token 1203: 'closed' (ID: 24816)
  Prédit: 'closed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'closed' → logprob: -1.0280383548888494e-06
    2. ' closed' → logprob: -14.250000953674316
    3. '.closed' → logprob: -15.000000953674316
    4. '_closed' → logprob: -20.250001907348633
    5. 'Closed' → logprob: -21.125001907348633
    6. 'close' → logprob: -21.500001907348633
    7. '
' → logprob: -21.625001907348633
    8. '   ' → logprob: -22.000001907348633
    9. '```' → logprob: -22.125001907348633
    10. '`' → logprob: -23.000001907348633

Token 1204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519392669200897
    2. ' =' → logprob: -1.501939296722412
    3. '=True' → logprob: -11.501938819885254
    4. '   ' → logprob: -16.87693977355957
    5. ' ' → logprob: -17.12693977355957
    6. '       ' → logprob: -18.50193977355957
    7. '_=' → logprob: -18.75193977355957
    8. '=true' → logprob: -19.00193977355957
    9. '    ' → logprob: -19.37693977355957
    10. '=False' → logprob: -19.62693977355957

Token 1205: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.9361264946837764e-07
    2. ' True' → logprob: -15.75
    3. '(True' → logprob: -21.875
    4. '=True' → logprob: -21.875
    5. 'true' → logprob: -22.75
    6. '   ' → logprob: -23.75
    7. '_true' → logprob: -26.0
    8. 'Tr' → logprob: -26.0
    9. 'TRUE' → logprob: -26.25
    10. '1' → logprob: -26.375

Token 1206: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1207: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6148366332054138
    2. '   ' → logprob: -0.9898366332054138
    3. '
' → logprob: -2.4898366928100586
    4. '<|end|>' → logprob: -6.489836692810059
    5. ' def' → logprob: -6.614836692810059
    6. '    
' → logprob: -6.989836692810059
    7. '        
' → logprob: -7.989836692810059
    8. '<|end|>' → logprob: -8.614836692810059
    9. '	def' → logprob: -9.114836692810059
    10. '

' → logprob: -9.489836692810059

Token 1208: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1054542288184166
    2. '
' → logprob: -2.355454206466675
    3. '<|end|>' → logprob: -5.480454444885254
    4. 'def' (adapté à ' def') → logprob: -7.355454444885254
    5. '<|end|>' → logprob: -9.105454444885254
    6. '```' → logprob: -9.605454444885254
    7. '    
' → logprob: -9.605454444885254
    8. ' ' → logprob: -9.980454444885254
    9. '       ' → logprob: -10.355454444885254
    10. ' def' → logprob: -10.855454444885254

Token 1209: ' set' (ID: 920)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.5528017282485962
    2. 'open' → logprob: -0.9278017282485962
    3. ' set' → logprob: -5.177801609039307
    4. 'update' → logprob: -5.177801609039307
    5. ' congest' → logprob: -5.427801609039307
    6. ' update' → logprob: -5.552801609039307
    7. 'set' → logprob: -5.677801609039307
    8. 're' → logprob: -6.052801609039307
    9. ' reopen' → logprob: -6.177801609039307
    10. 'con' → logprob: -8.052802085876465

Token 1210: '_con' (ID: 7531)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16028636693954468
    2. '_con' → logprob: -1.9102864265441895
    3. 'con' → logprob: -10.285285949707031
    4. '_ro' → logprob: -10.910285949707031
    5. ' congest' → logprob: -12.285285949707031
    6. ' congestion' → logprob: -13.410285949707031
    7. ' _' → logprob: -13.785285949707031
    8. '_delay' → logprob: -14.160285949707031
    9. 'road' → logprob: -14.785285949707031
    10. '_tr' → logprob: -15.285285949707031

Token 1211: 'gest' (ID: 6488)
  Prédit: 'gest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gest' → logprob: -7.171581091824919e-05
    2. 'gestion' → logprob: -9.62507152557373
    3. 'g' → logprob: -13.00007152557373
    4. 'ges' → logprob: -13.62507152557373
    5. 'ged' → logprob: -14.25007152557373
    6. '_' → logprob: -14.37507152557373
    7. '#' → logprob: -16.000072479248047
    8. '
' → logprob: -16.375072479248047
    9. 'get' → logprob: -16.375072479248047
    10. 'gr' → logprob: -16.625072479248047

Token 1212: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.08916237205266953
    2. 'ion' → logprob: -2.4641623497009277
    3. 'ioned' → logprob: -9.464162826538086
    4. 'ested' → logprob: -9.714162826538086
    5. 'tion' → logprob: -10.339162826538086
    6. 'estion' → logprob: -10.464162826538086
    7. 'est' → logprob: -11.964162826538086
    8. 'ted' → logprob: -12.089162826538086
    9. '_' → logprob: -13.089162826538086
    10. '```' → logprob: -13.589162826538086

Token 1213: '_delay' (ID: 56589)
  Prédit: '_delay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_delay' → logprob: -0.002942401682958007
    2. '_' → logprob: -6.0029425621032715
    3. 'delay' → logprob: -7.7529425621032715
    4. '_ro' → logprob: -11.252942085266113
    5. '   ' → logprob: -11.502942085266113
    6. 'road' → logprob: -12.002942085266113
    7. '_del' → logprob: -13.127942085266113
    8. '(self' → logprob: -13.377942085266113
    9. 'Delay' → logprob: -14.377942085266113
    10. '_DELAY' → logprob: -14.627942085266113

Token 1214: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.250001907348633
    3. '(s' → logprob: -14.500001907348633
    4. 'self' → logprob: -15.000001907348633
    5. ' (' → logprob: -17.000001907348633
    6. '   ' → logprob: -18.375001907348633
    7. 's' → logprob: -20.125001907348633
    8. ' ' → logprob: -20.250001907348633
    9. '(sel' → logprob: -20.250001907348633
    10. 'def' → logprob: -20.375001907348633

Token 1215: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.64970643306151e-05
    2. '(' → logprob: -9.750086784362793
    3. ',' → logprob: -11.125086784362793
    4. '(key' → logprob: -12.125086784362793
    5. ' (' → logprob: -12.625086784362793
    6. 'self' → logprob: -12.625086784362793
    7. '(s' → logprob: -14.375086784362793
    8. '(
' → logprob: -15.375086784362793
    9. ')(' → logprob: -15.875086784362793
    10. ')' → logprob: -16.125085830688477

Token 1216: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00160782050807029
    2. 'self' → logprob: -6.751607894897461
    3. ' c' → logprob: -7.751607894897461
    4. ' self' → logprob: -12.251607894897461
    5. '   ' → logprob: -13.001607894897461
    6. '       ' → logprob: -16.00160789489746
    7. ')c' → logprob: -16.12660789489746
    8. '	c' → logprob: -16.62660789489746
    9. 'coord' → logprob: -16.87660789489746
    10. 'key' → logprob: -17.62660789489746

Token 1217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12694701552391052
    2. 'o' → logprob: -2.8769469261169434
    3. 'oord' → logprob: -3.8769469261169434
    4. 'key' → logprob: -4.126946926116943
    5. 'ey' → logprob: -4.501946926116943
    6. '   ' → logprob: -6.501946926116943
    7. '_key' → logprob: -6.626946926116943
    8. 'ode' → logprob: -6.626946926116943
    9. 'Key' → logprob: -6.876946926116943
    10. 'self' → logprob: -6.876946926116943

Token 1218: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009431460639461875
    2. ':' → logprob: -7.000943183898926
    3. ' ,' → logprob: -10.750943183898926
    4. '=' → logprob: -12.750943183898926
    5. ',c' → logprob: -13.375943183898926
    6. '<|end|>' → logprob: -13.500943183898926
    7. '   ' → logprob: -13.750943183898926
    8. ',
' → logprob: -14.375943183898926
    9. '[' → logprob: -14.375943183898926
    10. ')' → logprob: -15.500943183898926

Token 1219: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.001342254807241261
    2. 'c' → logprob: -7.376342296600342
    3. ' Coordinate' → logprob: -7.501342296600342
    4. ' c' → logprob: -9.001341819763184
    5. 'Coordinates' → logprob: -10.751341819763184
    6. 'Coord' → logprob: -11.126341819763184
    7. 'C' → logprob: -13.876341819763184
    8. '_coordinate' → logprob: -14.126341819763184
    9. '   ' → logprob: -14.501341819763184
    10. 'coord' → logprob: -14.626341819763184

Token 1220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ' ,' → logprob: -11.125024795532227
    3. ',c' → logprob: -11.625024795532227
    4. '   ' → logprob: -15.750024795532227
    5. 'c' → logprob: -16.125024795532227
    6. ' c' → logprob: -16.375024795532227
    7. ')' → logprob: -16.625024795532227
    8. 'self' → logprob: -16.625024795532227
    9. ':' → logprob: -17.000024795532227
    10. '       ' → logprob: -17.375024795532227

Token 1221: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861456897109747
    2. ' c' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.508615493774414
    4. ' ' → logprob: -19.133615493774414
    5. '	c' → logprob: -19.133615493774414
    6. '  ' → logprob: -19.633615493774414
    7. '    ' → logprob: -19.758615493774414
    8. '$c' → logprob: -20.008615493774414
    9. ')c' → logprob: -20.758615493774414
    10. '<c' → logprob: -20.883615493774414

Token 1222: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012166635133326054
    2. '1' → logprob: -6.751216888427734
    3. ',' → logprob: -10.376216888427734
    4. '```' → logprob: -12.251216888427734
    5. 'o' → logprob: -12.626216888427734
    6. 'c' → logprob: -13.501216888427734
    7. '   ' → logprob: -13.751216888427734
    8. ' ' → logprob: -14.001216888427734
    9. '{' → logprob: -14.501216888427734
    10. '_' → logprob: -14.626216888427734

Token 1223: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -8.065608562901616e-05
    2. ' ,' → logprob: -10.500081062316895
    3. '[' → logprob: -10.875081062316895
    4. '=' → logprob: -11.375081062316895
    5. '   ' → logprob: -11.375081062316895
    6. ')' → logprob: -12.500081062316895
    7. '_,' → logprob: -13.875081062316895
    8. '),' → logprob: -13.875081062316895
    9. '       ' → logprob: -14.250081062316895
    10. '`,' → logprob: -14.625081062316895

Token 1224: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0007519744685851038
    2. ' Coordinate' → logprob: -7.750751972198486
    3. 'int' → logprob: -8.125752449035645
    4. 'Coordinates' → logprob: -11.375752449035645
    5. ' int' → logprob: -11.500752449035645
    6. 'Coord' → logprob: -12.625752449035645
    7. 'Coordinator' → logprob: -16.250751495361328
    8. '_coordinate' → logprob: -16.250751495361328
    9. '   ' → logprob: -16.750751495361328
    10. ' coordinate' → logprob: -17.000751495361328

Token 1225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ' ,' → logprob: -10.750021934509277
    3. '       ' → logprob: -16.75002098083496
    4. '   ' → logprob: -16.75002098083496
    5. ',
' → logprob: -17.75002098083496
    6. ':' → logprob: -18.75002098083496
    7. '_,' → logprob: -18.75002098083496
    8. '‌,' → logprob: -19.12502098083496
    9. ',value' → logprob: -19.37502098083496
    10. ',int' → logprob: -19.50002098083496

Token 1226: ' delay' (ID: 13155)
  Prédit: 'delay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delay' → logprob: -0.0003461905289441347
    2. ' delay' → logprob: -8.000346183776855
    3. 'additional' → logprob: -12.125346183776855
    4. 'extra' → logprob: -12.500346183776855
    5. '	delay' → logprob: -14.625346183776855
    6. 'value' → logprob: -14.875346183776855
    7. 'delta' → logprob: -15.000346183776855
    8. 'con' → logprob: -15.750346183776855
    9. 'amount' → logprob: -16.375347137451172
    10. 'increment' → logprob: -17.000347137451172

Token 1227: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44625771045684814
    2. ',' → logprob: -1.6962577104568481
    3. '):' → logprob: -1.8212577104568481
    4. '):
' → logprob: -4.446257591247559
    5. '   ' → logprob: -6.446257591247559
    6. '=' → logprob: -7.571257591247559
    7. 'self' → logprob: -7.946257591247559
    8. '(self' → logprob: -8.446257591247559
    9. '       ' → logprob: -9.071257591247559
    10. '```' → logprob: -9.946257591247559

Token 1228: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001584850688232109
    2. ' int' → logprob: -8.750158309936523
    3. ':int' → logprob: -18.750158309936523
    4. '(int' → logprob: -19.500158309936523
    5. '=int' → logprob: -19.500158309936523
    6. '   ' → logprob: -19.625158309936523
    7. ' ' → logprob: -20.000158309936523
    8. '[int' → logprob: -20.250158309936523
    9. '	int' → logprob: -21.125158309936523
    10. '  ' → logprob: -21.625158309936523

Token 1229: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00118856446351856
    2. '):' → logprob: -6.7511887550354
    3. '):
' → logprob: -11.001188278198242
    4. '   ' → logprob: -13.751188278198242
    5. '       ' → logprob: -15.001188278198242
    6. ' ):
' → logprob: -15.626188278198242
    7. ')' → logprob: -16.501188278198242
    8. '):

' → logprob: -16.751188278198242
    9. '"):
' → logprob: -18.376188278198242
    10. ''):
' → logprob: -19.001188278198242

Token 1230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.53050296427682e-05
    2. '   ' → logprob: -9.87508487701416
    3. ' key' → logprob: -10.62508487701416
    4. 'key' → logprob: -12.62508487701416
    5. 'token' → logprob: -13.25008487701416
    6. ' token' → logprob: -13.50008487701416
    7. '	key' → logprob: -14.12508487701416
    8. '	' → logprob: -14.37508487701416
    9. '
' → logprob: -14.62508487701416
    10. '{
' → logprob: -15.25008487701416

Token 1231: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.0002210596576333046
    2. ' key' → logprob: -8.500221252441406
    3. '       ' → logprob: -11.000221252441406
    4. '   ' → logprob: -14.000221252441406
    5. '	key' → logprob: -17.750221252441406
    6. 'if' → logprob: -18.625221252441406
    7. 'self' → logprob: -21.375221252441406
    8. 'Key' → logprob: -21.875221252441406
    9. '_key' → logprob: -22.750221252441406
    10. '(key' → logprob: -23.250221252441406

Token 1232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00671584764495492
    2. ' =' → logprob: -5.006715774536133
    3. '=
' → logprob: -15.381715774536133
    4. '=f' → logprob: -15.381715774536133
    5. '=

' → logprob: -18.756715774536133
    6. ' =
' → logprob: -19.631715774536133
    7. '=}' → logprob: -19.631715774536133
    8. '   ' → logprob: -19.756715774536133
    9. ' ' → logprob: -21.006715774536133
    10. '＝' → logprob: -21.131715774536133

Token 1233: ' fro' (ID: 16956)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.004622018430382013
    2. ' fro' → logprob: -5.379621982574463
    3. 'fol' → logprob: -14.629622459411621
    4. 'f' → logprob: -15.129622459411621
    5. 'flo' → logprob: -15.754622459411621
    6. '   ' → logprob: -15.879622459411621
    7. 'fr' → logprob: -15.879622459411621
    8. 'fib' → logprob: -16.004621505737305
    9. 'fo' → logprob: -16.504621505737305
    10. 'frog' → logprob: -16.629621505737305

Token 1234: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -9.088346359931165e-07
    2. 'zes' → logprob: -14.750000953674316
    3. 'ro' → logprob: -15.375000953674316
    4. 'ros' → logprob: -16.0
    5. 'zen' → logprob: -16.375
    6. 'oz' → logprob: -17.875
    7. 'roz' → logprob: -18.375
    8. 'ens' → logprob: -18.625
    9. 'zent' → logprob: -18.75
    10. 'enz' → logprob: -18.875

Token 1235: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.02100192941725254
    2. 'et' → logprob: -3.8960018157958984
    3. 'of' → logprob: -8.021001815795898
    4. 'f' → logprob: -10.271001815795898
    5. 'fro' → logprob: -10.271001815795898
    6. 's' → logprob: -10.396001815795898
    7. 'st' → logprob: -11.146001815795898
    8. 'ot' → logprob: -12.021001815795898
    9. 'def' → logprob: -12.896001815795898
    10. '(set' → logprob: -13.396001815795898

Token 1236: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.3902033970225602e-05
    2. '({' → logprob: -11.625014305114746
    3. '[c' → logprob: -13.500014305114746
    4. '{' → logprob: -13.750014305114746
    5. '[(' → logprob: -13.875014305114746
    6. '[' → logprob: -14.625014305114746
    7. '([{' → logprob: -15.000014305114746
    8. '([(' → logprob: -15.125014305114746
    9. '([
' → logprob: -15.375014305114746
    10. '((' → logprob: -16.37501335144043

Token 1237: 'c' (ID: 66)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.0325924449716695e-05
    2. '([' → logprob: -11.62501049041748
    3. '(c' → logprob: -14.62501049041748
    4. 'c' → logprob: -14.75001049041748
    5. '[' → logprob: -15.62501049041748
    6. ' [' → logprob: -15.75001049041748
    7. '[
' → logprob: -16.250009536743164
    8. '{' → logprob: -17.000009536743164
    9. '[C' → logprob: -17.125009536743164
    10. '[(' → logprob: -18.375009536743164

Token 1238: '1' (ID: 16)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0006640645442530513
    2. '([' → logprob: -7.750664234161377
    3. '1' → logprob: -8.750663757324219
    4. '[' → logprob: -10.125663757324219
    5. '{' → logprob: -11.000663757324219
    6. '[
' → logprob: -12.000663757324219
    7. '[[' → logprob: -12.375663757324219
    8. ' [' → logprob: -13.000663757324219
    9. '(c' → logprob: -13.125663757324219
    10. '[(' → logprob: -14.250663757324219

Token 1239: ',' (ID: 11)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.06226545572280884
    2. '[c' → logprob: -2.812265396118164
    3. '[' → logprob: -8.562265396118164
    4. '   ' → logprob: -10.312265396118164
    5. ',[' → logprob: -11.062265396118164
    6. ',' → logprob: -11.312265396118164
    7. '{' → logprob: -11.812265396118164
    8. '[[' → logprob: -11.812265396118164
    9. '[C' → logprob: -11.937265396118164
    10. '       ' → logprob: -12.437265396118164

Token 1240: ' c' (ID: 274)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.16030079126358032
    2. 'c' → logprob: -1.9103007316589355
    3. ' c' → logprob: -10.160301208496094
    4. ' [' → logprob: -10.535301208496094
    5. '(c' → logprob: -12.410301208496094
    6. '[' → logprob: -12.535301208496094
    7. '{' → logprob: -12.910301208496094
    8. '[
' → logprob: -15.035301208496094
    9. '   ' → logprob: -15.535301208496094
    10. '<c' → logprob: -16.285301208496094

Token 1241: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028094876557588577
    2. '{' → logprob: -4.77809476852417
    3. '([' → logprob: -5.40309476852417
    4. '[c' → logprob: -5.65309476852417
    5. '[[' → logprob: -5.90309476852417
    6. '[f' → logprob: -6.52809476852417
    7. '1' → logprob: -6.65309476852417
    8. '[user' → logprob: -7.02809476852417
    9. '[s' → logprob: -7.40309476852417
    10. 'set' → logprob: -7.77809476852417

Token 1242: '])
' (ID: 5169)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21616299450397491
    2. '])' → logprob: -2.466162919998169
    3. '],' → logprob: -3.341162919998169
    4. '[c' → logprob: -3.341162919998169
    5. '])
' → logprob: -3.841162919998169
    6. '(c' → logprob: -5.966163158416748
    7. '([' → logprob: -6.091163158416748
    8. ']),' → logprob: -6.216163158416748
    9. '),' → logprob: -6.216163158416748
    10. ',c' → logprob: -6.466163158416748

Token 1243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2562499940395355
    2. 'self' → logprob: -2.3812499046325684
    3. '[self' → logprob: -3.6312499046325684
    4. '.' → logprob: -3.7562499046325684
    5. ' =' → logprob: -3.7562499046325684
    6. '=' → logprob: -4.256249904632568
    7. '.ro' → logprob: -4.506249904632568
    8. ' if' → logprob: -4.756249904632568
    9. '           ' → logprob: -5.006249904632568
    10. '].' → logprob: -5.381249904632568

Token 1244: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006000606343150139
    2. ' if' → logprob: -5.506000518798828
    3. '       ' → logprob: -6.256000518798828
    4. '   ' → logprob: -14.256000518798828
    5. '	if' → logprob: -14.381000518798828
    6. 'If' → logprob: -15.131000518798828
    7. '           ' → logprob: -16.506000518798828
    8. 'self' → logprob: -18.256000518798828
    9. '```' → logprob: -18.631000518798828
    10. '
' → logprob: -19.506000518798828

Token 1245: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.05488769710063934
    2. ' key' → logprob: -2.9298877716064453
    3. 'self' → logprob: -13.179887771606445
    4. '   ' → logprob: -13.304887771606445
    5. ' ' → logprob: -14.929887771606445
    6. '	key' → logprob: -14.929887771606445
    7. '           ' → logprob: -15.554887771606445
    8. '(key' → logprob: -15.679887771606445
    9. '
' → logprob: -15.679887771606445
    10. 'Key' → logprob: -15.929887771606445

Token 1246: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231491923332214
    2. ' in' → logprob: -0.8981491923332214
    3. '[in' → logprob: -12.148149490356445
    4. '[' → logprob: -12.398149490356445
    5. '	in' → logprob: -12.398149490356445
    6. '=' → logprob: -12.773149490356445
    7. '   ' → logprob: -13.023149490356445
    8. 'In' → logprob: -13.648149490356445
    9. 'not' → logprob: -13.898149490356445
    10. ' ' → logprob: -14.273149490356445

Token 1247: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02057400532066822
    2. ' self' → logprob: -3.8955740928649902
    3. '       ' → logprob: -11.145573616027832
    4. '(self' → logprob: -11.520573616027832
    5. '[self' → logprob: -12.395573616027832
    6. '   ' → logprob: -13.520573616027832
    7. '           ' → logprob: -14.270573616027832
    8. '	self' → logprob: -14.645573616027832
    9. '=self' → logprob: -15.395573616027832
    10. ' ' → logprob: -15.770573616027832

Token 1248: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -9.245724504580721e-05
    2. 'roads' → logprob: -9.500092506408691
    3. 'ro' → logprob: -11.125092506408691
    4. '_ro' → logprob: -13.250092506408691
    5. '.' → logprob: -14.250092506408691
    6. ' roads' → logprob: -15.250092506408691
    7. ' .' → logprob: -17.500091552734375
    8. '-ro' → logprob: -17.500091552734375
    9. '```' → logprob: -18.625091552734375
    10. '(ro' → logprob: -18.750091552734375

Token 1249: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -4.008129963040119e-06
    2. 'roads' → logprob: -13.875003814697266
    3. ' ads' → logprob: -14.125003814697266
    4. '.ads' → logprob: -14.750003814697266
    5. '
' → logprob: -15.125003814697266
    6. 'a' → logprob: -15.250003814697266
    7. '{' → logprob: -15.250003814697266
    8. '[' → logprob: -15.250003814697266
    9. 'ad' → logprob: -15.750003814697266
    10. '_ads' → logprob: -16.750003814697266

Token 1250: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.057643454521894455
    2. ':' → logprob: -2.932643413543701
    3. ' and' → logprob: -7.182643413543701
    4. '       ' → logprob: -7.432643413543701
    5. '           ' → logprob: -7.557643413543701
    6. '.' → logprob: -8.55764389038086
    7. '):
' → logprob: -8.55764389038086
    8. '<|end|>' → logprob: -8.93264389038086
    9. 'and' → logprob: -9.30764389038086
    10. '   ' → logprob: -9.80764389038086

Token 1251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01998349092900753
    2. ':
' → logprob: -4.644983291625977
    3. ':' → logprob: -5.394983291625977
    4. '       ' → logprob: -5.644983291625977
    5. '```' → logprob: -6.769983291625977
    6. '):
' → logprob: -8.144983291625977
    7. ' and' → logprob: -8.894983291625977
    8. '               ' → logprob: -9.269983291625977
    9. 'self' → logprob: -9.394983291625977
    10. '<|end|>' → logprob: -9.769983291625977

Token 1252: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0067568132653832436
    2. ' self' → logprob: -5.006756782531738
    3. '           ' → logprob: -10.381756782531738
    4. '               ' → logprob: -11.631756782531738
    5. '   ' → logprob: -14.006756782531738
    6. '       ' → logprob: -14.131756782531738
    7. '	self' → logprob: -17.006757736206055
    8. '(self' → logprob: -18.131757736206055
    9. '[self' → logprob: -18.381757736206055
    10. '                   ' → logprob: -18.381757736206055

Token 1253: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.37500286102295
    3. ' .' → logprob: -14.25000286102295
    4. '_ro' → logprob: -15.50000286102295
    5. 'roads' → logprob: -16.000003814697266
    6. '
' → logprob: -16.250003814697266
    7. 'ro' → logprob: -16.500003814697266
    8. ').' → logprob: -16.500003814697266
    9. '].' → logprob: -17.125003814697266
    10. '```' → logprob: -17.125003814697266

Token 1254: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -1.8624639324116288e-06
    2. '.ads' → logprob: -14.625001907348633
    3. ' ads' → logprob: -14.875001907348633
    4. 'roads' → logprob: -15.375001907348633
    5. 'oad' → logprob: -15.500001907348633
    6. 'ods' → logprob: -16.000001907348633
    7. '_ads' → logprob: -16.375001907348633
    8. 'a' → logprob: -16.625001907348633
    9. '[' → logprob: -16.750001907348633
    10. '{' → logprob: -17.125001907348633

Token 1255: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.00000286102295
    3. 'key' → logprob: -15.37500286102295
    4. '[[' → logprob: -17.250001907348633
    5. '[
' → logprob: -17.375001907348633
    6. '
' → logprob: -17.500001907348633
    7. '```' → logprob: -18.000001907348633
    8. '][' → logprob: -18.125001907348633
    9. '\[' → logprob: -18.125001907348633
    10. '[user' → logprob: -18.375001907348633

Token 1256: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4946249723434448
    2. '.key' → logprob: -1.1196249723434448
    3. '[key' → logprob: -2.9946250915527344
    4. '[' → logprob: -4.494625091552734
    5. '.' → logprob: -6.619625091552734
    6. '.con' → logprob: -7.494625091552734
    7. '           ' → logprob: -8.619625091552734
    8. ']' → logprob: -9.369625091552734
    9. '}.' → logprob: -9.994625091552734
    10. '.keys' → logprob: -10.369625091552734

Token 1257: 'con' (ID: 542)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.013351746834814548
    2. 'con' → logprob: -4.513351917266846
    3. '__' → logprob: -6.263351917266846
    4. 'ro' → logprob: -9.138351440429688
    5. 'roads' → logprob: -9.763351440429688
    6. 'sets' → logprob: -9.888351440429688
    7. '[key' → logprob: -9.888351440429688
    8. '.set' → logprob: -10.513351440429688
    9. '_set' → logprob: -11.388351440429688
    10. '[' → logprob: -11.388351440429688

Token 1258: 'gest' (ID: 6488)
  Prédit: 'gest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gest' → logprob: -1.3856492842023727e-06
    2. 'ges' → logprob: -14.625000953674316
    3. 'gestion' → logprob: -14.750000953674316
    4. 'g' → logprob: -15.250000953674316
    5. ' congest' → logprob: -16.750001907348633
    6. 'ged' → logprob: -16.875001907348633
    7. 'gestas' → logprob: -16.875001907348633
    8. 'ge' → logprob: -17.500001907348633
    9. 'tested' → logprob: -17.750001907348633
    10. 'gust' → logprob: -17.875001907348633

Token 1259: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0507652722299099
    2. 'ested' → logprob: -3.4257652759552
    3. 'ated' → logprob: -4.175765037536621
    4. 'ted' → logprob: -7.550765037536621
    5. 'est' → logprob: -8.675765037536621
    6. 'ged' → logprob: -8.675765037536621
    7. 'aged' → logprob: -8.800765037536621
    8. 'sted' → logprob: -9.425765037536621
    9. 'es' → logprob: -9.550765037536621
    10. '_' → logprob: -9.550765037536621

Token 1260: '_delay' (ID: 56589)
  Prédit: '_delay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_delay' → logprob: -5.319370302458992e-06
    2. '_del' → logprob: -12.500005722045898
    3. 'delay' → logprob: -13.500005722045898
    4. '_DELAY' → logprob: -17.0000057220459
    5. 's' → logprob: -17.1250057220459
    6. '_d' → logprob: -17.3750057220459
    7. '_de' → logprob: -17.7500057220459
    8. '_' → logprob: -18.8750057220459
    9. 'd' → logprob: -19.1250057220459
    10. '._' → logprob: -19.1250057220459

Token 1261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022931039333344
    2. ' =' → logprob: -1.9102293252944946
    3. '+=' → logprob: -12.660229682922363
    4. ' +=' → logprob: -13.160229682922363
    5. '.=' → logprob: -17.785228729248047
    6. '=
' → logprob: -18.910228729248047
    7. '＝' → logprob: -19.035228729248047
    8. '    ' → logprob: -19.660228729248047
    9. ' ' → logprob: -19.910228729248047
    10. ')=' → logprob: -19.910228729248047

Token 1262: ' delay' (ID: 13155)
  Prédit: 'delay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delay' → logprob: -0.011048642918467522
    2. ' delay' → logprob: -4.511048793792725
    3. '	delay' → logprob: -14.136048316955566
    4. '(delay' → logprob: -16.261049270629883
    5. '   ' → logprob: -17.761049270629883
    6. 'max' → logprob: -17.761049270629883
    7. 'del' → logprob: -17.886049270629883
    8. ' ' → logprob: -18.011049270629883
    9. ' ' → logprob: -18.761049270629883
    10. '.delay' → logprob: -18.886049270629883

Token 1263: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19547496736049652
    2. 'def' → logprob: -1.8204749822616577
    3. '
' → logprob: -4.195475101470947
    4. ' def' → logprob: -7.695475101470947
    5. '#' → logprob: -10.195474624633789
    6. '```' → logprob: -11.070474624633789
    7. '    
' → logprob: -12.320474624633789
    8. '

' → logprob: -12.320474624633789
    9. '<|end|>' → logprob: -12.695474624633789
    10. 'import' → logprob: -12.695474624633789

Token 1265: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5819013118743896
    2. '   ' → logprob: -0.8319013118743896
    3. ' def' → logprob: -5.331901550292969
    4. '
' → logprob: -6.831901550292969
    5. '```' → logprob: -10.956901550292969
    6. ' ' → logprob: -12.331901550292969
    7. '	def' → logprob: -12.331901550292969
    8. '    
' → logprob: -13.581901550292969
    9. '#' → logprob: -14.456901550292969
    10. '  ' → logprob: -14.956901550292969

Token 1266: ' get' (ID: 717)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -1.1369194984436035
    2. ' neighbors' → logprob: -2.0119194984436035
    3. 'def' → logprob: -2.1369194984436035
    4. 'neighbors' → logprob: -2.2619194984436035
    5. 'short' → logprob: -2.5119194984436035
    6. ' find' → logprob: -2.6369194984436035
    7. ' get' → logprob: -2.7619194984436035
    8. 'get' → logprob: -3.1369194984436035
    9. 'find' → logprob: -4.0119194984436035
    10. 'adj' → logprob: -4.6369194984436035

Token 1267: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21375004947185516
    2. '_ro' → logprob: -2.588750123977661
    3. '_tr' → logprob: -2.713750123977661
    4. '_neighbors' → logprob: -3.338750123977661
    5. '_adj' → logprob: -4.338749885559082
    6. '_possible' → logprob: -6.713749885559082
    7. '_next' → logprob: -7.713749885559082
    8. '_neighbor' → logprob: -8.338749885559082
    9. '_ad' → logprob: -8.963749885559082
    10. '_trip' → logprob: -9.338749885559082

Token 1268: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.010926486924290657
    2. 'roads' → logprob: -5.135926723480225
    3. 'travel' → logprob: -6.135926723480225
    4. 'adj' → logprob: -6.260926723480225
    5. 'neighbors' → logprob: -7.260926723480225
    6. 'neighbor' → logprob: -10.010926246643066
    7. 'valid' → logprob: -10.010926246643066
    8. 'def' → logprob: -11.010926246643066
    9. 'connected' → logprob: -11.260926246643066
    10. 'possible' → logprob: -11.510926246643066

Token 1269: '_between' (ID: 124874)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018177436431869864
    2. '(' → logprob: -6.37681770324707
    3. '(s' → logprob: -10.50181770324707
    4. '(f' → logprob: -10.50181770324707
    5. '(c' → logprob: -10.75181770324707
    6. ' (' → logprob: -10.87681770324707
    7. '(key' → logprob: -11.62681770324707
    8. '(
' → logprob: -12.25181770324707
    9. 'self' → logprob: -12.62681770324707
    10. '((' → logprob: -13.87681770324707

Token 1270: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001789881061995402
    2. '(' → logprob: -8.875179290771484
    3. 'self' → logprob: -10.250179290771484
    4. '(
' → logprob: -13.250179290771484
    5. ' (' → logprob: -13.875179290771484
    6. 'def' → logprob: -15.125179290771484
    7. '(s' → logprob: -15.375179290771484
    8. 's' → logprob: -16.000179290771484
    9. '   ' → logprob: -16.250179290771484
    10. ' self' → logprob: -16.375179290771484

Token 1271: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00034750174381770194
    2. '(' → logprob: -8.625347137451172
    3. 'self' → logprob: -9.125347137451172
    4. 's' → logprob: -10.500347137451172
    5. ' (' → logprob: -11.875347137451172
    6. 'coordinates' → logprob: -12.250347137451172
    7. '(c' → logprob: -12.625347137451172
    8. '(co' → logprob: -12.750347137451172
    9. '(
' → logprob: -12.875347137451172
    10. 'def' → logprob: -13.125347137451172

Token 1272: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43883270025253296
    2. 'self' → logprob: -1.0638327598571777
    3. ' c' → logprob: -5.188832759857178
    4. ' self' → logprob: -5.688832759857178
    5. ')' → logprob: -7.813832759857178
    6. '   ' → logprob: -8.43883228302002
    7. '(self' → logprob: -9.06383228302002
    8. 'coord' → logprob: -9.06383228302002
    9. ')c' → logprob: -9.31383228302002
    10. 'def' → logprob: -9.56383228302002

Token 1273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3084050118923187
    2. '(c' → logprob: -1.5584050416946411
    3. '(Co' → logprob: -3.8084049224853516
    4. '(co' → logprob: -4.808404922485352
    5. '(self' → logprob: -5.308404922485352
    6. '(f' → logprob: -5.683404922485352
    7. 'o' → logprob: -5.808404922485352
    8. 'f' → logprob: -6.183404922485352
    9. 'c' → logprob: -6.308404922485352
    10. '(coord' → logprob: -6.808404922485352

Token 1274: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015130772953853011
    2. ',c' → logprob: -6.7515130043029785
    3. '(self' → logprob: -9.251513481140137
    4. 'self' → logprob: -9.751513481140137
    5. ':' → logprob: -10.126513481140137
    6. '(c' → logprob: -10.376513481140137
    7. ' ,' → logprob: -10.501513481140137
    8. ',
' → logprob: -10.626513481140137
    9. ' and' → logprob: -10.751513481140137
    10. ',self' → logprob: -11.876513481140137

Token 1275: ' Coordinate' (ID: 78454)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11054760962724686
    2. 'Coordinate' → logprob: -2.6105475425720215
    3. ' c' → logprob: -3.4855475425720215
    4. ' Coordinate' → logprob: -7.8605475425720215
    5. 'Coordinates' → logprob: -9.23554801940918
    6. 'Coord' → logprob: -10.61054801940918
    7. 'co' → logprob: -13.11054801940918
    8. '   ' → logprob: -13.11054801940918
    9. 'coord' → logprob: -13.11054801940918
    10. ' ' → logprob: -13.61054801940918

Token 1276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024965754710137844
    2. ',c' → logprob: -8.375249862670898
    3. ' ,' → logprob: -11.000249862670898
    4. ',
' → logprob: -13.000249862670898
    5. '_,' → logprob: -17.7502498626709
    6. '   ' → logprob: -17.7502498626709
    7. 'c' → logprob: -18.0002498626709
    8. '       ' → logprob: -18.1252498626709
    9. ',
' → logprob: -19.0002498626709
    10. ',self' → logprob: -19.1252498626709

Token 1277: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007100477814674377
    2. ' c' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.875710487365723
    4. '	c' → logprob: -19.125709533691406
    5. ' ' → logprob: -20.125709533691406
    6. '    ' → logprob: -20.375709533691406
    7. '  ' → logprob: -20.875709533691406
    8. '       ' → logprob: -20.875709533691406
    9. ')c' → logprob: -21.500709533691406
    10. '$c' → logprob: -21.625709533691406

Token 1278: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3216864764690399
    2. '1' → logprob: -1.4466865062713623
    3. 'o' → logprob: -4.321686267852783
    4. 'c' → logprob: -4.446686267852783
    5. 'Coordinate' → logprob: -4.946686267852783
    6. '   ' → logprob: -5.821686267852783
    7. '2' → logprob: -6.071686267852783
    8. ',c' → logprob: -6.571686267852783
    9. ' ,' → logprob: -8.946686744689941
    10. ' ' → logprob: -9.071686744689941

Token 1279: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3434636890888214
    2. '):' → logprob: -1.343463659286499
    3. ')' → logprob: -4.093463897705078
    4. ',' → logprob: -4.593463897705078
    5. ')
' → logprob: -6.968463897705078
    6. '):

' → logprob: -7.593463897705078
    7. '):
' → logprob: -7.718463897705078
    8. '   ' → logprob: -8.093463897705078
    9. ':' → logprob: -9.218463897705078
    10. '       ' → logprob: -9.218463897705078

Token 1280: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -8.125210297293961e-05
    2. ' Coordinate' → logprob: -10.000081062316895
    3. 'c' → logprob: -10.625081062316895
    4. 'Coordinates' → logprob: -12.125081062316895
    5. '_coordinate' → logprob: -13.000081062316895
    6. 'Coord' → logprob: -13.125081062316895
    7. ' c' → logprob: -13.875081062316895
    8. 'Coordinator' → logprob: -15.000081062316895
    9. 'coordinate' → logprob: -15.625081062316895
    10. ')' → logprob: -16.75008201599121

Token 1281: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0567631870508194
    2. '):' → logprob: -3.181763172149658
    3. ')' → logprob: -4.306763172149658
    4. '):
' → logprob: -9.056763648986816
    5. 'self' → logprob: -10.306763648986816
    6. '(self' → logprob: -10.681763648986816
    7. '):

' → logprob: -11.556763648986816
    8. '   ' → logprob: -12.931763648986816
    9. '       ' → logprob: -13.056763648986816
    10. ' ):
' → logprob: -13.556763648986816

Token 1282: ' ->' (ID: 2747)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8896700143814087
    2. ':' → logprob: -1.2646700143814087
    3. '       ' → logprob: -1.3896700143814087
    4. '   ' → logprob: -3.764669895172119
    5. '):
' → logprob: -3.764669895172119
    6. '):' → logprob: -5.389669895172119
    7. ')' → logprob: -7.014669895172119
    8. ' key' → logprob: -7.139669895172119
    9. '(key' → logprob: -7.264669895172119
    10. '->' → logprob: -7.389669895172119

Token 1283: ' Road' (ID: 12497)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11431196331977844
    2. ' self' → logprob: -2.239311933517456
    3. 'Road' → logprob: -6.739312171936035
    4. 'None' → logprob: -8.489312171936035
    5. 'Optional' → logprob: -9.989312171936035
    6. ' Road' → logprob: -10.364312171936035
    7. '(self' → logprob: -12.239312171936035
    8. ' None' → logprob: -12.489312171936035
    9. 'def' → logprob: -12.739312171936035
    10. 'return' → logprob: -12.989312171936035

Token 1284: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6953682899475098
    2. '(
' → logprob: -1.8203682899475098
    3. '       ' → logprob: -2.1953682899475098
    4. '(key' → logprob: -2.5703682899475098
    5. ' =' → logprob: -3.5703682899475098
    6. '[
' → logprob: -3.9453682899475098
    7. '(' → logprob: -4.07036828994751
    8. '[' → logprob: -4.32036828994751
    9. 'self' → logprob: -4.44536828994751
    10. '[key' → logprob: -4.44536828994751

Token 1285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002603841247037053
    2. '
' → logprob: -6.627604007720947
    3. ' return' → logprob: -7.377604007720947
    4. '<|end|>' → logprob: -8.627603530883789
    5. 'return' → logprob: -9.252603530883789
    6. '   ' → logprob: -10.127603530883789
    7. '[key' → logprob: -10.127603530883789
    8. '[' → logprob: -10.127603530883789
    9. '```' → logprob: -10.502603530883789
    10. ' key' → logprob: -10.502603530883789

Token 1286: ' key' (ID: 2140)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2761351764202118
    2. 'key' (adapté à ' key') → logprob: -1.6511352062225342
    3. 'return' → logprob: -3.401135206222534
    4. ' key' → logprob: -4.151134967803955
    5. '[key' → logprob: -8.776135444641113
    6. ' return' → logprob: -8.776135444641113
    7. '(key' → logprob: -11.276135444641113
    8. '	key' → logprob: -11.526135444641113
    9. 'token' → logprob: -11.526135444641113
    10. '```' → logprob: -11.776135444641113

Token 1287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10041908919811249
    2. ' =' → logprob: -2.350419044494629
    3. '=f' → logprob: -8.475419044494629
    4. '=
' → logprob: -12.975419044494629
    5. '       ' → logprob: -14.225419044494629
    6. '   ' → logprob: -15.350419044494629
    7. ' =
' → logprob: -15.850419044494629
    8. 's' → logprob: -16.100419998168945
    9. ')' → logprob: -16.350419998168945
    10. 'f' → logprob: -16.725419998168945

Token 1288: ' fro' (ID: 16956)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.009757863357663155
    2. ' fro' → logprob: -4.634757995605469
    3. '   ' → logprob: -15.134757995605469
    4. 'f' → logprob: -15.134757995605469
    5. 'fol' → logprob: -15.259757995605469
    6. 'fib' → logprob: -15.634757995605469
    7. 'fr' → logprob: -15.884757995605469
    8. 'fo' → logprob: -16.00975799560547
    9. 'frog' → logprob: -16.13475799560547
    10. 'flo' → logprob: -16.38475799560547

Token 1289: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -5.676981345459353e-06
    2. 'fro' → logprob: -12.875005722045898
    3. 'oz' → logprob: -14.000005722045898
    4. 'ro' → logprob: -14.375005722045898
    5. 'zen' → logprob: -14.500005722045898
    6. 'zes' → logprob: -14.875005722045898
    7. 'zos' → logprob: -14.875005722045898
    8. 'roz' → logprob: -16.2500057220459
    9. 'z' → logprob: -16.8750057220459
    10. 'ros' → logprob: -17.0000057220459

Token 1290: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00565572502091527
    2. 'et' → logprob: -5.255655765533447
    3. 's' → logprob: -8.630655288696289
    4. 'st' → logprob: -8.755655288696289
    5. 'of' → logprob: -11.005655288696289
    6. 'os' → logprob: -11.380655288696289
    7. 'fro' → logprob: -11.380655288696289
    8. 'ot' → logprob: -11.505655288696289
    9. '(set' → logprob: -12.005655288696289
    10. 'Set' → logprob: -12.130655288696289

Token 1291: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00018887832993641496
    2. '({' → logprob: -8.750188827514648
    3. '{' → logprob: -11.000188827514648
    4. '([{' → logprob: -11.250188827514648
    5. '[' → logprob: -15.250188827514648
    6. '([
' → logprob: -16.12518882751465
    7. '([(' → logprob: -16.37518882751465
    8. '[{' → logprob: -16.62518882751465
    9. '(' → logprob: -16.75018882751465
    10. '(([' → logprob: -17.00018882751465

Token 1292: 'c' (ID: 66)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -6.704273118884885e-07
    2. '{' → logprob: -14.625000953674316
    3. 'c' → logprob: -16.875
    4. ' [' → logprob: -17.625
    5. '[' → logprob: -17.75
    6. '([' → logprob: -17.875
    7. '[f' → logprob: -18.0
    8. '(c' → logprob: -18.5
    9. '[
' → logprob: -18.875
    10. '[C' → logprob: -19.125

Token 1293: '1' (ID: 16)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0016820825403556228
    2. '1' → logprob: -6.626682281494141
    3. '([' → logprob: -9.12668228149414
    4. '[' → logprob: -9.12668228149414
    5. '(c' → logprob: -9.25168228149414
    6. '{' → logprob: -10.37668228149414
    7. ' [' → logprob: -12.37668228149414
    8. '[
' → logprob: -12.87668228149414
    9. 'c' → logprob: -13.50168228149414
    10. '[C' → logprob: -14.37668228149414

Token 1294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002640579594299197
    2. '([' → logprob: -6.252640724182129
    3. ',[' → logprob: -7.377640724182129
    4. '[' → logprob: -10.752640724182129
    5. '[c' → logprob: -10.877640724182129
    6. ' ,' → logprob: -11.377640724182129
    7. ',c' → logprob: -11.377640724182129
    8. '{' → logprob: -11.877640724182129
    9. '       ' → logprob: -11.877640724182129
    10. '   ' → logprob: -12.752640724182129

Token 1295: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019298245897516608
    2. ' c' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.751930236816406
    4. '    ' → logprob: -17.001930236816406
    5. '       ' → logprob: -17.376930236816406
    6. '[c' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.501930236816406
    8. '	c' → logprob: -17.626930236816406
    9. '     ' → logprob: -18.251930236816406
    10. '  ' → logprob: -18.501930236816406

Token 1296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011646825820207596
    2. ',' → logprob: -4.511646747589111
    3. 'o' → logprob: -7.886646747589111
    4. '1' → logprob: -9.51164722442627
    5. 'c' → logprob: -9.76164722442627
    6. ',c' → logprob: -9.88664722442627
    7. ' ,' → logprob: -11.63664722442627
    8. 'oord' → logprob: -11.76164722442627
    9. '{' → logprob: -12.13664722442627
    10. '_,' → logprob: -12.63664722442627

Token 1297: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10032560676336288
    2. '])
' → logprob: -2.350325584411621
    3. ')' → logprob: -9.350325584411621
    4. ')
' → logprob: -10.475325584411621
    5. ']' → logprob: -13.850325584411621
    6. '])
' → logprob: -13.975325584411621
    7. '])

' → logprob: -14.225325584411621
    8. '       ' → logprob: -14.475325584411621
    9. ']);' → logprob: -14.850325584411621
    10. ']
' → logprob: -16.225326538085938

Token 1298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06346987187862396
    2. 'return' → logprob: -2.938469886779785
    3. ' return' → logprob: -4.813469886779785
    4. ')' → logprob: -9.438469886779785
    5. '.return' → logprob: -9.563469886779785
    6. ':return' → logprob: -9.938469886779785
    7. '	return' → logprob: -10.188469886779785
    8. ':' → logprob: -10.438469886779785
    9. ' =' → logprob: -10.438469886779785
    10. '   ' → logprob: -10.563469886779785

Token 1299: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00524667976424098
    2. '       ' → logprob: -5.505246639251709
    3. ' return' → logprob: -6.755246639251709
    4. '	return' → logprob: -13.130247116088867
    5. '{return' → logprob: -14.630247116088867
    6. ':return' → logprob: -15.255247116088867
    7. '   ' → logprob: -17.005247116088867
    8. '
' → logprob: -17.380247116088867
    9. '.return' → logprob: -17.505247116088867
    10. '```' → logprob: -18.005247116088867

Token 1300: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011047814972698689
    2. ' self' → logprob: -4.511047840118408
    3. '(self' → logprob: -19.88604736328125
    4. '	self' → logprob: -20.26104736328125
    5. '
' → logprob: -21.63604736328125
    6. 'None' → logprob: -21.63604736328125
    7. ' ' → logprob: -21.63604736328125
    8. '=self' → logprob: -22.38604736328125
    9. '[self' → logprob: -22.76104736328125
    10. ' None' → logprob: -24.01104736328125

Token 1301: '.ro' (ID: 55049)
  Prédit: '.ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ro' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.375
    3. ' .' → logprob: -15.625
    4. '.rob' → logprob: -18.375
    5. '_ro' → logprob: -20.25
    6. '.ra' → logprob: -20.625
    7. 'ro' → logprob: -20.875
    8. '
' → logprob: -21.0
    9. '.RO' → logprob: -21.0
    10. '(ro' → logprob: -21.25

Token 1302: 'ads' (ID: 7371)
  Prédit: 'ads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ads' → logprob: -6.704273118884885e-07
    2. 'a' → logprob: -15.500000953674316
    3. '.ads' → logprob: -15.875000953674316
    4. ' ads' → logprob: -16.125
    5. '
' → logprob: -16.75
    6. '{' → logprob: -16.75
    7. '[' → logprob: -17.25
    8. 'ADS' → logprob: -18.0
    9. 'ad' → logprob: -18.125
    10. '_ads' → logprob: -18.25

Token 1303: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.15310683415737e-05
    2. '.' → logprob: -10.875021934509277
    3. '[key' → logprob: -13.250021934509277
    4. 'get' → logprob: -14.750021934509277
    5. ' .' → logprob: -14.875021934509277
    6. '[' → logprob: -18.62502098083496
    7. '.key' → logprob: -18.75002098083496
    8. '{}.' → logprob: -18.87502098083496
    9. '{' → logprob: -19.00002098083496
    10. '       ' → logprob: -19.12502098083496

Token 1304: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00043102685594931245
    2. 'key' → logprob: -7.750431060791016
    3. ' key' → logprob: -16.125431060791016
    4. '(' → logprob: -16.500431060791016
    5. ' (' → logprob: -16.875431060791016
    6. '[key' → logprob: -17.000431060791016
    7. ',key' → logprob: -17.000431060791016
    8. '(
' → logprob: -18.625431060791016
    9. '(keys' → logprob: -21.000431060791016
    10. '	key' → logprob: -21.875431060791016

Token 1305: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02056594379246235
    2. ',' → logprob: -3.895565986633301
    3. ')
' → logprob: -11.6455659866333
    4. ',None' → logprob: -12.0205659866333
    5. '   ' → logprob: -12.7705659866333
    6. '[' → logprob: -13.7705659866333
    7. ' )' → logprob: -13.8955659866333
    8. ']' → logprob: -14.2705659866333
    9. '       ' → logprob: -14.2705659866333
    10. '),' → logprob: -14.3955659866333

Token 1306: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001584850688232109
    2. ' None' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.875158309936523
    4. '
' → logprob: -19.375158309936523
    5. '(None' → logprob: -19.500158309936523
    6. ',None' → logprob: -21.125158309936523
    7. '_None' → logprob: -21.125158309936523
    8. '       ' → logprob: -21.500158309936523
    9. '=None' → logprob: -21.625158309936523
    10. '           ' → logprob: -22.250158309936523

Token 1307: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.625003814697266
    4. '<|end|>' → logprob: -15.750003814697266
    5. ')
' → logprob: -15.875003814697266
    6. '       ' → logprob: -16.000003814697266
    7. ')return' → logprob: -17.375003814697266
    8. '}' → logprob: -18.750003814697266
    9. ' ' → logprob: -19.250003814697266
    10. '),' → logprob: -19.375003814697266

Token 1308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005471024662256241
    2. '
' → logprob: -5.380471229553223
    3. 'def' → logprob: -7.880471229553223
    4. '```' → logprob: -8.380471229553223
    5. '    
' → logprob: -9.255471229553223
    6. '<|end|>' → logprob: -10.755471229553223
    7. '    ' → logprob: -10.880471229553223
    8. ' ' → logprob: -10.880471229553223
    9. ' def' → logprob: -11.755471229553223
    10. '<|end|>' → logprob: -11.880471229553223

Token 1309: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008864041417837143
    2. '
' → logprob: -5.383863925933838
    3. 'def' (adapté à ' def') → logprob: -5.633863925933838
    4. '```' → logprob: -8.258864402770996
    5. ' def' → logprob: -8.508864402770996
    6. '    
' → logprob: -10.008864402770996
    7. ' ' → logprob: -10.258864402770996
    8. ')' → logprob: -10.633864402770996
    9. '<|end|>' → logprob: -11.258864402770996
    10. '#' → logprob: -11.508864402770996

Token 1310: ' has' (ID: 853)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.38745468854904175
    2. 'neighbors' → logprob: -1.8874547481536865
    3. 'get' → logprob: -2.6374547481536865
    4. ' shortest' → logprob: -3.8874547481536865
    5. 'd' → logprob: -4.012454509735107
    6. 'has' → logprob: -4.262454509735107
    7. 'find' → logprob: -4.262454509735107
    8. 'adj' → logprob: -4.387454509735107
    9. '_short' → logprob: -5.762454509735107
    10. 'can' → logprob: -5.887454509735107

Token 1311: '_signal' (ID: 50953)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12861201167106628
    2. '_path' → logprob: -2.1286120414733887
    3. '_adj' → logprob: -7.628612041473389
    4. '_edge' → logprob: -8.25361156463623
    5. '_neighbor' → logprob: -8.37861156463623
    6. '_signal' → logprob: -8.50361156463623
    7. '_connection' → logprob: -9.00361156463623
    8. '_ad' → logprob: -9.12861156463623
    9. '_valid' → logprob: -9.50361156463623
    10. '_ro' → logprob: -10.12861156463623

Token 1312: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002523992152418941
    2. ' at' → logprob: -9.500252723693848
    3. '_at' → logprob: -9.500252723693848
    4. '(' → logprob: -9.750252723693848
    5. '   ' → logprob: -11.000252723693848
    6. '(
' → logprob: -11.875252723693848
    7. '       ' → logprob: -12.500252723693848
    8. 'self' → logprob: -12.500252723693848
    9. 'At' → logprob: -12.625252723693848
    10. ' (' → logprob: -13.000252723693848

Token 1313: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009351630578748882
    2. 'self' → logprob: -7.250935077667236
    3. '(' → logprob: -9.750935554504395
    4. ',' → logprob: -9.750935554504395
    5. ' at' → logprob: -9.750935554504395
    6. '_at' → logprob: -10.875935554504395
    7. '   ' → logprob: -11.750935554504395
    8. '       ' → logprob: -12.000935554504395
    9. ')' → logprob: -12.625935554504395
    10. 'At' → logprob: -12.750935554504395

Token 1314: ' coord' (ID: 25819)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10190469026565552
    2. 'coord' → logprob: -2.3519046306610107
    3. ' coord' → logprob: -7.10190486907959
    4. ' self' → logprob: -7.47690486907959
    5. 'coordinate' → logprob: -8.85190486907959
    6. 'def' → logprob: -8.97690486907959
    7. '   ' → logprob: -10.97690486907959
    8. 'lambda' → logprob: -11.60190486907959
    9. '
' → logprob: -12.85190486907959
    10. '       ' → logprob: -13.35190486907959

Token 1315: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4641757607460022
    2. '):' → logprob: -1.0891757011413574
    3. ')' → logprob: -3.7141757011413574
    4. ',' → logprob: -5.089175701141357
    5. ':' → logprob: -6.339175701141357
    6. 'self' → logprob: -7.214175701141357
    7. '(self' → logprob: -7.464175701141357
    8. '(coord' → logprob: -7.589175701141357
    9. '   ' → logprob: -7.714175701141357
    10. '       ' → logprob: -9.339176177978516

Token 1316: ' Coordinate' (ID: 78454)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.4740869402885437
    2. ' coord' → logprob: -0.9740869402885437
    3. 'coordinate' → logprob: -12.59908676147461
    4. '(coord' → logprob: -12.72408676147461
    5. ' coordinate' → logprob: -13.59908676147461
    6. ')' → logprob: -14.34908676147461
    7. 'self' → logprob: -14.72408676147461
    8. '_coord' → logprob: -15.09908676147461
    9. 'Coord' → logprob: -15.09908676147461
    10. 'Coordinate' → logprob: -15.47408676147461

Token 1317: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39097633957862854
    2. ')' → logprob: -1.3909763097763062
    3. '):' → logprob: -2.6409764289855957
    4. '(self' → logprob: -6.515976428985596
    5. 'self' → logprob: -6.515976428985596
    6. ',' → logprob: -7.890976428985596
    7. '   ' → logprob: -9.265975952148438
    8. '       ' → logprob: -11.140975952148438
    9. ')
' → logprob: -11.765975952148438
    10. '):

' → logprob: -11.890975952148438

Token 1318: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3615821301937103
    2. '(self' → logprob: -2.611582040786743
    3. '   ' → logprob: -2.861582040786743
    4. '       ' → logprob: -3.111582040786743
    5. ':
' → logprob: -3.486582040786743
    6. ')' → logprob: -3.736582040786743
    7. 'def' → logprob: -3.986582040786743
    8. '):' → logprob: -4.111582279205322
    9. '):
' → logprob: -4.486582279205322
    10. 'self' → logprob: -4.611582279205322

Token 1319: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.001348688150756061
    2. 'return' → logprob: -7.251348495483398
    3. ' bool' → logprob: -7.376348495483398
    4. 'coord' → logprob: -12.126348495483398
    5. '(bool' → logprob: -12.626348495483398
    6. 'def' → logprob: -13.501348495483398
    7. ' return' → logprob: -14.376348495483398
    8. '
' → logprob: -14.626348495483398
    9. '   ' → logprob: -15.001348495483398
    10. '	bool' → logprob: -15.376348495483398

Token 1320: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2109462171792984
    2. ':' → logprob: -2.4609463214874268
    3. '       ' → logprob: -2.4609463214874268
    4. '   ' → logprob: -4.960946083068848
    5. ':
' → logprob: -5.460946083068848
    6. '(' → logprob: -5.460946083068848
    7. 'self' → logprob: -5.835946083068848
    8. '(
' → logprob: -8.210946083068848
    9. ' self' → logprob: -9.085946083068848
    10. ',' → logprob: -9.335946083068848

Token 1321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03910601884126663
    2. 'return' → logprob: -3.7891061305999756
    3. ' return' → logprob: -4.1641058921813965
    4. '<|end|>' → logprob: -10.164106369018555
    5. '	return' → logprob: -10.414106369018555
    6. '
' → logprob: -10.914106369018555
    7. ':return' → logprob: -11.039106369018555
    8. '   ' → logprob: -11.164106369018555
    9. '        
' → logprob: -11.289106369018555
    10. '{return' → logprob: -11.289106369018555

Token 1322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005106864497065544
    2. '       ' → logprob: -5.7551069259643555
    3. ' return' → logprob: -6.2551069259643555
    4. '   ' → logprob: -12.380106925964355
    5. '{return' → logprob: -14.255106925964355
    6. '
' → logprob: -14.505106925964355
    7. '	return' → logprob: -14.880106925964355
    8. 'eturn' → logprob: -15.130106925964355
    9. '    ' → logprob: -15.755106925964355
    10. '        
' → logprob: -15.880106925964355

Token 1323: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.0007100477814674377
    2. ' coord' → logprob: -7.2507100105285645
    3. '(coord' → logprob: -16.500709533691406
    4. 'coords' → logprob: -19.750709533691406
    5. 'cord' → logprob: -20.125709533691406
    6. 'co' → logprob: -20.250709533691406
    7. 'self' → logprob: -21.250709533691406
    8. '_coord' → logprob: -22.250709533691406
    9. 'coeff' → logprob: -22.375709533691406
    10. '   ' → logprob: -22.375709533691406

Token 1324: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519318461418152
    2. ' in' → logprob: -1.50193190574646
    3. '
' → logprob: -14.001932144165039
    4. '	in' → logprob: -14.126932144165039
    5. 'coord' → logprob: -14.751932144165039
    6. ' ' → logprob: -15.626932144165039
    7. '   ' → logprob: -16.50193214416504
    8. 'i' → logprob: -16.87693214416504
    9. '.in' → logprob: -17.12693214416504
    10. '

' → logprob: -17.12693214416504

Token 1325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.320199877838604e-07
    2. ' self' → logprob: -15.0
    3. '   ' → logprob: -20.625
    4. '
' → logprob: -21.375
    5. '(self' → logprob: -21.625
    6. '       ' → logprob: -22.75
    7. '[self' → logprob: -24.25
    8. '	self' → logprob: -24.75
    9. '=self' → logprob: -25.0
    10. '```' → logprob: -25.875

Token 1326: '.sign' (ID: 27578)
  Prédit: '.sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sign' → logprob: -0.26082465052604675
    2. 'signals' → logprob: -1.5108246803283691
    3. 'sign' → logprob: -4.760824680328369
    4. 'self' → logprob: -8.135824203491211
    5. '_sign' → logprob: -13.010824203491211
    6. ' signals' → logprob: -14.510824203491211
    7. '	sign' → logprob: -14.885824203491211
    8. '.signal' → logprob: -15.135824203491211
    9. '.self' → logprob: -15.385824203491211
    10. '(sign' → logprob: -15.510824203491211

Token 1327: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -3.173704271830502e-06
    2. 'self' → logprob: -13.37500286102295
    3. 's' → logprob: -15.12500286102295
    4. 'al' → logprob: -15.12500286102295
    5. '```' → logprob: -15.12500286102295
    6. '(self' → logprob: -16.250003814697266
    7. '#' → logprob: -16.250003814697266
    8. 'signals' → logprob: -16.625003814697266
    9. 'a' → logprob: -16.750003814697266
    10. '   ' → logprob: -16.750003814697266

Token 1328: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7240108251571655
    2. '<|end|>' → logprob: -0.7240108251571655
    3. '<|end|>' → logprob: -4.349010944366455
    4. 'def' → logprob: -4.474010944366455
    5. '
' → logprob: -6.224010944366455
    6. '    
' → logprob: -6.474010944366455
    7. '```' → logprob: -7.599010944366455
    8. ')' → logprob: -7.849010944366455
    9. ' ' → logprob: -7.849010944366455
    10. ' def' → logprob: -8.224010467529297

Token 1330: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023276465013623238
    2. '   ' → logprob: -3.7732765674591064
    3. ' def' → logprob: -10.773276329040527
    4. '#' → logprob: -11.773276329040527
    5. '
' → logprob: -14.148276329040527
    6. '```' → logprob: -14.273276329040527
    7. '	def' → logprob: -15.148276329040527
    8. '    
' → logprob: -15.523276329040527
    9. ' ' → logprob: -16.398277282714844
    10. '  ' → logprob: -16.523277282714844

Token 1331: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.7779580950737
    2. 'neighbors' → logprob: -2.0279581546783447
    3. 'can' → logprob: -2.4029581546783447
    4. ' get' → logprob: -2.4029581546783447
    5. 'adj' → logprob: -2.4029581546783447
    6. 'next' → logprob: -3.1529581546783447
    7. 'is' → logprob: -4.152957916259766
    8. 'signal' → logprob: -4.152957916259766
    9. ' neighbors' → logprob: -4.152957916259766
    10. ' shortest' → logprob: -4.777957916259766

Token 1332: '_signal' (ID: 50953)
  Prédit: '_signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_signal' → logprob: -0.0005840110243298113
    2. 'signal' → logprob: -8.50058364868164
    3. '_' → logprob: -8.62558364868164
    4. '_sign' → logprob: -9.50058364868164
    5. '_tr' → logprob: -10.75058364868164
    6. '_neighbors' → logprob: -10.75058364868164
    7. ' signal' → logprob: -11.00058364868164
    8. '_adj' → logprob: -11.00058364868164
    9. '_next' → logprob: -11.25058364868164
    10. '_ro' → logprob: -12.00058364868164

Token 1333: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011749001714633778
    2. '(' → logprob: -9.375117301940918
    3. '(coord' → logprob: -11.250117301940918
    4. '(co' → logprob: -11.250117301940918
    5. ' (' → logprob: -13.125117301940918
    6. '(
' → logprob: -13.250117301940918
    7. 'self' → logprob: -14.625117301940918
    8. '   ' → logprob: -14.625117301940918
    9. 'def' → logprob: -15.250117301940918
    10. '(coords' → logprob: -15.375117301940918

Token 1334: ',' (ID: 11)
  Prédit: '(coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -0.011311646550893784
    2. '(self' → logprob: -4.8863115310668945
    3. '(co' → logprob: -6.0113115310668945
    4. '(' → logprob: -6.7613115310668945
    5. '(coords' → logprob: -9.636311531066895
    6. ')' → logprob: -12.011311531066895
    7. '(coeff' → logprob: -12.761311531066895
    8. ',' → logprob: -12.886311531066895
    9. '(
' → logprob: -13.011311531066895
    10. '(Co' → logprob: -13.386311531066895

Token 1335: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.06324542313814163
    2. ' coord' → logprob: -2.8132455348968506
    3. 'self' → logprob: -6.6882452964782715
    4. ' self' → logprob: -10.56324577331543
    5. '(coord' → logprob: -13.18824577331543
    6. 'coordinate' → logprob: -13.68824577331543
    7. 'coords' → logprob: -13.93824577331543
    8. '.coord' → logprob: -14.31324577331543
    9. 'cord' → logprob: -14.56324577331543
    10. '_coord' → logprob: -15.31324577331543

Token 1336: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35853111743927
    2. '):' → logprob: -1.85853111743927
    3. '):
' → logprob: -2.1085309982299805
    4. ',' → logprob: -4.3585309982299805
    5. '(self' → logprob: -5.1085309982299805
    6. '   ' → logprob: -6.3585309982299805
    7. '(coord' → logprob: -6.9835309982299805
    8. '(' → logprob: -7.1085309982299805
    9. '       ' → logprob: -7.6085309982299805
    10. ').' → logprob: -7.7335309982299805

Token 1337: ' Coordinate' (ID: 78454)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.02516775391995907
    2. 'self' → logprob: -4.650167942047119
    3. 'Coordinate' → logprob: -4.775167942047119
    4. ' coord' → logprob: -5.025167942047119
    5. '   ' → logprob: -9.025167465209961
    6. 'Coord' → logprob: -10.025167465209961
    7. '(coord' → logprob: -10.275167465209961
    8. '       ' → logprob: -10.525167465209961
    9. ')' → logprob: -10.900167465209961
    10. ' self' → logprob: -11.525167465209961

Token 1338: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2900198996067047
    2. ')' → logprob: -1.5400198698043823
    3. '):
' → logprob: -3.290019989013672
    4. ',' → logprob: -10.165019989013672
    5. '(self' → logprob: -10.540019989013672
    6. 'self' → logprob: -11.040019989013672
    7. '   ' → logprob: -11.415019989013672
    8. ' ):' → logprob: -11.665019989013672
    9. '       ' → logprob: -12.665019989013672
    10. '):
' → logprob: -12.915019989013672

Token 1339: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8563969731330872
    2. '<|end|>' → logprob: -1.4813969135284424
    3. ':return' → logprob: -2.1063969135284424
    4. '       ' → logprob: -3.2313969135284424
    5. ':
' → logprob: -3.2313969135284424
    6. ')' → logprob: -3.3563969135284424
    7. 'return' → logprob: -3.3563969135284424
    8. '   ' → logprob: -3.9813969135284424
    9. 'def' → logprob: -4.2313971519470215
    10. '<|end|>' → logprob: -4.7313971519470215

Token 1340: ' Traffic' (ID: 52059)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031802060548216105
    2. ' self' → logprob: -5.753180027008057
    3. 'return' → logprob: -14.003180503845215
    4. '(self' → logprob: -14.003180503845215
    5. 'Traffic' → logprob: -14.253180503845215
    6. 'None' → logprob: -17.6281795501709
    7. '       ' → logprob: -17.7531795501709
    8. '   ' → logprob: -17.7531795501709
    9. 'def' → logprob: -18.0031795501709
    10. ' Traffic' → logprob: -18.3781795501709

Token 1341: 'Signal' (ID: 31411)
  Prédit: 'Signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Signal' → logprob: -5.512236498361744e-07
    2. 'signal' → logprob: -15.375000953674316
    3. '_signal' → logprob: -15.500000953674316
    4. '_SIGNAL' → logprob: -16.625
    5. ' Signal' → logprob: -17.25
    6. 'Sign' → logprob: -17.75
    7. '.Signal' → logprob: -18.125
    8. '[' → logprob: -18.25
    9. ' signal' → logprob: -19.125
    10. '
' → logprob: -19.625

Token 1342: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1351524144411087
    2. '       ' → logprob: -2.2601523399353027
    3. ':
' → logprob: -5.010152339935303
    4. '(' → logprob: -5.260152339935303
    5. '   ' → logprob: -5.760152339935303
    6. 'def' → logprob: -6.385152339935303
    7. '(coord' → logprob: -6.510152339935303
    8. ':' → logprob: -6.635152339935303
    9. 'self' → logprob: -7.510152339935303
    10. ' (' → logprob: -7.635152339935303

Token 1343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22053810954093933
    2. ' return' → logprob: -1.8455381393432617
    3. 'return' → logprob: -3.2205381393432617
    4. '	return' → logprob: -11.345538139343262
    5. '{return' → logprob: -11.470538139343262
    6. '
' → logprob: -12.095538139343262
    7. '```' → logprob: -12.470538139343262
    8. ':return' → logprob: -13.345538139343262
    9. 'self' → logprob: -14.345538139343262
    10. ':
' → logprob: -14.595538139343262

Token 1344: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0016225760336965322
    2. '       ' → logprob: -7.251622676849365
    3. ' return' → logprob: -7.251622676849365
    4. 'self' → logprob: -8.501622200012207
    5. ' self' → logprob: -17.126623153686523
    6. '
' → logprob: -17.501623153686523
    7. '        
' → logprob: -18.251623153686523
    8. '   ' → logprob: -18.501623153686523
    9. '	return' → logprob: -18.626623153686523
    10. '```' → logprob: -19.876623153686523

Token 1345: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.988221684878226e-06
    2. ' self' → logprob: -11.875006675720215
    3. 'None' → logprob: -20.12500762939453
    4. '(self' → logprob: -21.62500762939453
    5. '	self' → logprob: -22.37500762939453
    6. '
' → logprob: -22.87500762939453
    7. '   ' → logprob: -22.87500762939453
    8. '[self' → logprob: -23.12500762939453
    9. '=self' → logprob: -24.00000762939453
    10. '0' → logprob: -24.37500762939453

Token 1346: '.sign' (ID: 27578)
  Prédit: '.sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sign' → logprob: -1.9361264946837764e-07
    2. 'signals' → logprob: -15.875
    3. 'sign' → logprob: -17.375
    4. '.' → logprob: -17.75
    5. '.tokens' → logprob: -19.0
    6. ' .' → logprob: -19.125
    7. '	sign' → logprob: -19.25
    8. '.s' → logprob: -19.5
    9. '.signal' → logprob: -19.625
    10. '.sl' → logprob: -19.75

Token 1347: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.875003814697266
    3. 'al' → logprob: -14.750003814697266
    4. '{' → logprob: -15.500003814697266
    5. '
' → logprob: -15.875003814697266
    6. ' als' → logprob: -16.125003814697266
    7. 's' → logprob: -16.625003814697266
    8. 'a' → logprob: -17.125003814697266
    9. '##' → logprob: -17.250003814697266
    10. '```' → logprob: -17.500003814697266

Token 1348: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00193280098028481
    2. '[' → logprob: -6.251932621002197
    3. 'get' → logprob: -12.876933097839355
    4. '.' → logprob: -14.126933097839355
    5. '.setdefault' → logprob: -14.251933097839355
    6. '       ' → logprob: -16.37693214416504
    7. '   ' → logprob: -16.87693214416504
    8. '
' → logprob: -17.37693214416504
    9. ' .' → logprob: -18.12693214416504
    10. 's' → logprob: -18.75193214416504

Token 1349: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -3.7697225252486533e-06
    2. 'coord' → logprob: -12.625003814697266
    3. '(coords' → logprob: -15.375003814697266
    4. '(co' → logprob: -16.625003814697266
    5. '(coeff' → logprob: -18.000003814697266
    6. '(' → logprob: -19.250003814697266
    7. ' coord' → logprob: -19.500003814697266
    8. '(cost' → logprob: -20.125003814697266
    9. '(
' → logprob: -20.250003814697266
    10. ' (' → logprob: -20.625003814697266

Token 1350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01615084894001484
    2. '(coord' → logprob: -4.266150951385498
    3. ')' → logprob: -6.391150951385498
    4. 'coord' → logprob: -8.39115047454834
    5. '(co' → logprob: -9.76615047454834
    6. '(' → logprob: -11.51615047454834
    7. ')
' → logprob: -12.64115047454834
    8. '   ' → logprob: -13.14115047454834
    9. ' ,' → logprob: -13.26615047454834
    10. ',None' → logprob: -13.39115047454834

Token 1351: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000553151941858232
    2. ' None' → logprob: -7.500553131103516
    3. 'coord' → logprob: -15.750553131103516
    4. '(None' → logprob: -18.250553131103516
    5. 'False' → logprob: -19.000553131103516
    6. '   ' → logprob: -19.625553131103516
    7. '_None' → logprob: -20.125553131103516
    8. ',None' → logprob: -20.375553131103516
    9. '=None' → logprob: -21.375553131103516
    10. 'none' → logprob: -21.375553131103516

Token 1352: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. '   ' → logprob: -11.000021934509277
    3. ')
' → logprob: -12.875021934509277
    4. '<|end|>' → logprob: -13.375021934509277
    5. '       ' → logprob: -14.375021934509277
    6. ' )' → logprob: -15.250021934509277
    7. '())' → logprob: -16.250022888183594
    8. '}' → logprob: -16.375022888183594
    9. ')return' → logprob: -16.625022888183594
    10. '()' → logprob: -17.125022888183594

Token 1353: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004495873581618071
    2. '<|end|>' → logprob: -5.754496097564697
    3. '<|end|>' → logprob: -8.004495620727539
    4. '
' → logprob: -8.629495620727539
    5. '```' → logprob: -8.629495620727539
    6. '    
' → logprob: -9.129495620727539
    7. ')' → logprob: -9.254495620727539
    8. 'def' → logprob: -9.254495620727539
    9. '    ' → logprob: -10.129495620727539
    10. '       ' → logprob: -10.379495620727539

Token 1354: ' Enumeration' (ID: 156128)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6103495955467224
    2. 'class' → logprob: -0.8603495955467224
    3. '#' → logprob: -3.610349655151367
    4. '   ' → logprob: -5.485349655151367
    5. 'import' → logprob: -6.735349655151367
    6. '
' → logprob: -7.485349655151367
    7. ' def' → logprob: -7.735349655151367
    8. ' class' → logprob: -7.860349655151367
    9. ' ' → logprob: -10.860349655151367
    10. ' #' → logprob: -11.110349655151367

Token 1355: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06204969435930252
    2. 'class' → logprob: -2.812049627304077
    3. 'import' → logprob: -9.937049865722656
    4. ' from' → logprob: -10.812049865722656
    5. '#' → logprob: -11.562049865722656
    6. ' class' → logprob: -12.812049865722656
    7. '
' → logprob: -14.937049865722656
    8. '```' → logprob: -14.937049865722656
    9. 'From' → logprob: -15.937049865722656
    10. '<class' → logprob: -16.062049865722656

Token 1356: ' represent' (ID: 5188)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4697147309780121
    2. 'from' → logprob: -1.2197147607803345
    3. 'Enum' → logprob: -2.844714641571045
    4. '#' → logprob: -4.219714641571045
    5. 'enum' → logprob: -5.719714641571045
    6. 'import' → logprob: -7.344714641571045
    7. 'Define' → logprob: -7.469714641571045
    8. '...' → logprob: -8.094715118408203
    9. ' class' → logprob: -8.344715118408203
    10. ' from' → logprob: -8.719715118408203

Token 1357: ' movement' (ID: 12772)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1317470818758011
    2. 'from' → logprob: -2.506747007369995
    3. 'Direction' → logprob: -3.756747007369995
    4. 'Directions' → logprob: -4.756747245788574
    5. 'the' → logprob: -5.256747245788574
    6. 'dire' → logprob: -6.381747245788574
    7. 'possible' → logprob: -7.256747245788574
    8. 'import' → logprob: -7.381747245788574
    9. 'direction' → logprob: -7.506747245788574
    10. 'Directional' → logprob: -8.381747245788574

Token 1358: ' directions' (ID: 24921)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.47493913769721985
    2. 'from' → logprob: -0.9749391078948975
    3. 'D' → logprob: -7.349939346313477
    4. 'direction' → logprob: -9.599939346313477
    5. 'Direction' → logprob: -10.349939346313477
    6. ' from' → logprob: -10.724939346313477
    7. ' class' → logprob: -10.849939346313477
    8. 'dire' → logprob: -10.849939346313477
    9. '
' → logprob: -10.974939346313477
    10. 'Directions' → logprob: -11.599939346313477

Token 1359: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.050289932638406754
    2. 'from' → logprob: -3.0502898693084717
    3. 'D' → logprob: -6.425290107727051
    4. 'Direction' → logprob: -11.05029010772705
    5. 'direction' → logprob: -11.17529010772705
    6. 'N' → logprob: -11.30029010772705
    7. '#' → logprob: -11.80029010772705
    8. '
' → logprob: -11.80029010772705
    9. 'dire' → logprob: -11.92529010772705
    10. 'E' → logprob: -12.55029010772705

Token 1360: 'class' (ID: 1444)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20141607522964478
    2. 'class' → logprob: -1.701416015625
    3. '#' → logprob: -13.826416015625
    4. 'import' → logprob: -13.951416015625
    5. 'Direction' → logprob: -14.201416015625
    6. ' from' → logprob: -16.451416015625
    7. '```' → logprob: -16.951416015625
    8. 'Directions' → logprob: -17.076416015625
    9. 'D' → logprob: -17.076416015625
    10. '
' → logprob: -17.576416015625

Token 1361: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.0740436241030693
    2. 'Movement' → logprob: -3.3240435123443604
    3. 'Coordinate' → logprob: -4.3240437507629395
    4. ' Direction' → logprob: -4.8240437507629395
    5. 'str' → logprob: -4.9490437507629395
    6. 'Move' → logprob: -5.5740437507629395
    7. ' Movement' → logprob: -6.5740437507629395
    8. 'Enum' → logprob: -7.3240437507629395
    9. ' str' → logprob: -7.8240437507629395
    10. 'enum' → logprob: -8.574043273925781

Token 1362: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04969845712184906
    2. ':' → logprob: -3.6746983528137207
    3. '(Enum' → logprob: -3.7996983528137207
    4. '(str' → logprob: -7.924698352813721
    5. '(enum' → logprob: -7.924698352813721
    6. '   ' → logprob: -11.674698829650879
    7. '(int' → logprob: -12.424698829650879
    8. ':
' → logprob: -12.674698829650879
    9. 'Enum' → logprob: -12.924698829650879
    10. '(Int' → logprob: -13.424698829650879

Token 1363: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3783310055732727
    2. '   ' → logprob: -1.378330945968628
    3. 'E' → logprob: -3.503330945968628
    4. ' N' → logprob: -5.003331184387207
    5. 'A' → logprob: -5.628331184387207
    6. 'North' → logprob: -5.753331184387207
    7. '(N' → logprob: -5.878331184387207
    8. 'from' → logprob: -6.128331184387207
    9. '.NORTH' → logprob: -6.253331184387207
    10. '(' → logprob: -6.503331184387207

Token 1364: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004107732092961669
    2. 'North' → logprob: -9.000411033630371
    3. '   ' → logprob: -9.375411033630371
    4. 'E' → logprob: -9.500411033630371
    5. ' N' → logprob: -9.750411033630371
    6. '_N' → logprob: -11.250411033630371
    7. ' NORTH' → logprob: -11.250411033630371
    8. 'north' → logprob: -11.625411033630371
    9. '	N' → logprob: -12.250411033630371
    10. 'class' → logprob: -12.375411033630371

Token 1365: ' M' (ID: 391)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004897649050690234
    2. 'E' → logprob: -8.125490188598633
    3. 'North' → logprob: -9.500490188598633
    4. '#' → logprob: -10.250490188598633
    5. 'north' → logprob: -10.875490188598633
    6. ' N' → logprob: -11.625490188598633
    7. 'UP' → logprob: -11.625490188598633
    8. '   ' → logprob: -11.875490188598633
    9. 'NS' → logprob: -11.875490188598633
    10. '
' → logprob: -12.250490188598633

Token 1366: 'appings' (ID: 38691)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5658876895904541
    2. 'OVE' → logprob: -0.9408876895904541
    3. 'OV' → logprob: -4.190887451171875
    4. '_N' → logprob: -5.315887451171875
    5. 'ove' → logprob: -5.690887451171875
    6. 'AP' → logprob: -5.940887451171875
    7. 'ap' → logprob: -6.315887451171875
    8. 'ORTH' → logprob: -6.565887451171875
    9. 'oves' → logprob: -6.565887451171875
    10. 'NONE' → logprob: -6.690887451171875

Token 1367: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02438206598162651
    2. '   ' → logprob: -4.8993821144104
    3. 'N' → logprob: -5.1493821144104
    4. 'E' → logprob: -5.2743821144104
    5. '=' → logprob: -5.7743821144104
    6. '_N' → logprob: -6.6493821144104
    7. '_E' → logprob: -8.024381637573242
    8. '_' → logprob: -8.649381637573242
    9. 'D' → logprob: -9.399381637573242
    10. '```' → logprob: -10.149381637573242

Token 1368: ' coordinate' (ID: 30380)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.656100332736969
    2. 'E' → logprob: -1.7811002731323242
    3. '{
' → logprob: -2.031100273132324
    4. ''N' → logprob: -2.531100273132324
    5. ''' → logprob: -3.531100273132324
    6. 'north' → logprob: -3.656100273132324
    7. '{' → logprob: -4.656100273132324
    8. '{'' → logprob: -4.781100273132324
    9. ''E' → logprob: -5.406100273132324
    10. 'op' → logprob: -5.906100273132324

Token 1369: ' axis' (ID: 16300)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.145211100578308
    2. '_offsets' → logprob: -1.520211100578308
    3. '_changes' → logprob: -2.6452112197875977
    4. '_d' → logprob: -2.6452112197875977
    5. 's' → logprob: -2.8952112197875977
    6. 'moves' → logprob: -3.1452112197875977
    7. '_moves' → logprob: -3.5202112197875977
    8. '_to' → logprob: -3.6452112197875977
    9. 'changes' → logprob: -3.7702112197875977
    10. 'offset' → logprob: -3.7702112197875977

Token 1370: ' changes' (ID: 6629)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17095133662223816
    2. 'E' → logprob: -2.1709513664245605
    3. '   ' → logprob: -4.0459513664245605
    4. '=' → logprob: -4.5459513664245605
    5. '_to' → logprob: -6.1709513664245605
    6. 's' → logprob: -6.2959513664245605
    7. '_E' → logprob: -6.7959513664245605
    8. '_e' → logprob: -6.9209513664245605
    9. '{
' → logprob: -7.0459513664245605
    10. 'D' → logprob: -7.1709513664245605

Token 1371: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4346870481967926
    2. '   ' → logprob: -1.1846870183944702
    3. '=' → logprob: -4.05968713760376
    4. 'N' → logprob: -4.30968713760376
    5. 'E' → logprob: -4.55968713760376
    6. 'class' → logprob: -7.43468713760376
    7. '{
' → logprob: -7.43468713760376
    8. 'UP' → logprob: -7.55968713760376
    9. '```' → logprob: -7.93468713760376
    10. ' =
' → logprob: -8.059686660766602

Token 1372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7527523040771484
    2. ' =' → logprob: -1.2527523040771484
    3. 'N' → logprob: -1.7527523040771484
    4. 'E' → logprob: -3.7527523040771484
    5. '{
' → logprob: -4.127752304077148
    6. ':' → logprob: -5.252752304077148
    7. 'class' → logprob: -5.627752304077148
    8. ' ' → logprob: -5.627752304077148
    9. ' N' → logprob: -5.877752304077148
    10. '=' → logprob: -6.002752304077148

Token 1373: ' EAST' (ID: 142770)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.3814696669578552
    2. 'N' → logprob: -1.8814697265625
    3. 'D' → logprob: -3.0064697265625
    4. '   ' → logprob: -4.2564697265625
    5. ' EAST' → logprob: -4.2564697265625
    6. 'east' → logprob: -4.2564697265625
    7. 'UP' → logprob: -4.3814697265625
    8. 'EW' → logprob: -4.3814697265625
    9. 'dire' → logprob: -5.2564697265625
    10. 'north' → logprob: -5.3814697265625

Token 1374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006040900480002165
    2. '=' → logprob: -5.131041049957275
    3. '   ' → logprob: -9.756040573120117
    4. ',' → logprob: -10.881040573120117
    5. ':' → logprob: -11.006040573120117
    6. ' ' → logprob: -11.881040573120117
    7. ' =
' → logprob: -11.881040573120117
    8. 'E' → logprob: -13.881040573120117
    9. '    ' → logprob: -14.256040573120117
    10. '=
' → logprob: -14.631040573120117

Token 1375: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.14031121134757996
    2. ''e' → logprob: -2.7653112411499023
    3. '"a' → logprob: -3.6403112411499023
    4. '"' → logprob: -4.390311241149902
    5. '1' → logprob: -4.390311241149902
    6. ''' → logprob: -5.140311241149902
    7. ''E' → logprob: -5.515311241149902
    8. ' '' → logprob: -5.640311241149902
    9. '('' → logprob: -6.890311241149902
    10. '(' → logprob: -7.515311241149902

Token 1376: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0001875671005109325
    2. ''E' → logprob: -9.125187873840332
    3. '"E' → logprob: -9.500187873840332
    4. ''' → logprob: -13.375187873840332
    5. ' E' → logprob: -14.375187873840332
    6. '"' → logprob: -14.875187873840332
    7. '\'' → logprob: -15.000187873840332
    8. '>E' → logprob: -15.500187873840332
    9. 'East' → logprob: -15.625187873840332
    10. '’E' → logprob: -16.000186920166016

Token 1377: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07892657816410065
    2. ''
' → logprob: -2.5789265632629395
    3. ''
' → logprob: -11.078927040100098
    4. ''E' → logprob: -11.328927040100098
    5. '"' → logprob: -13.203927040100098
    6. ''

' → logprob: -13.828927040100098
    7. ' '' → logprob: -13.828927040100098
    8. ''#' → logprob: -13.953927040100098
    9. ' '
' → logprob: -14.328927040100098
    10. ''A' → logprob: -14.453927040100098

Token 1378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006881130393594503
    2. 'N' → logprob: -6.006881237030029
    3. 'WEST' → logprob: -6.131881237030029
    4. ',' → logprob: -6.881881237030029
    5. '    
' → logprob: -8.131880760192871
    6. '<|end|>' → logprob: -8.631880760192871
    7. '
' → logprob: -8.881880760192871
    8. '#' → logprob: -9.256880760192871
    9. 'S' → logprob: -9.381880760192871
    10. ' NORTH' → logprob: -9.506880760192871

Token 1379: ' WEST' (ID: 110006)
  Prédit: 'WEST'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WEST' (adapté à ' WEST') → logprob: -0.0024970639497041702
    2. ' WEST' → logprob: -6.50249719619751
    3. 'W' → logprob: -7.25249719619751
    4. ''' → logprob: -8.502496719360352
    5. '   ' → logprob: -10.002496719360352
    6. 'West' → logprob: -11.627496719360352
    7. 'west' → logprob: -12.002496719360352
    8. '.WEST' → logprob: -12.127496719360352
    9. '"W' → logprob: -12.502496719360352
    10. 'N' → logprob: -13.127496719360352

Token 1380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39333081245422363
    2. ' =' → logprob: -1.3933308124542236
    3. '   ' → logprob: -3.5183308124542236
    4. '<|end|>' → logprob: -4.0183305740356445
    5. '
' → logprob: -4.6433305740356445
    6. 'E' → logprob: -5.3933305740356445
    7. 'W' → logprob: -5.8933305740356445
    8. ''' → logprob: -6.0183305740356445
    9. ',' → logprob: -6.0183305740356445
    10. ' ' → logprob: -6.3933305740356445

Token 1381: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.618001053633634e-05
    2. 'W' → logprob: -11.000025749206543
    3. ' '' → logprob: -11.875025749206543
    4. '"W' → logprob: -13.625025749206543
    5. '   ' → logprob: -14.625025749206543
    6. ' ' → logprob: -14.875025749206543
    7. '`' → logprob: -16.37502670288086
    8. '	W' → logprob: -16.75002670288086
    9. ' W' → logprob: -16.87502670288086
    10. '  ' → logprob: -17.00002670288086

Token 1382: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00015955790877342224
    2. ''' → logprob: -8.75015926361084
    3. ' W' → logprob: -14.12515926361084
    4. '```' → logprob: -16.000160217285156
    5. '"W' → logprob: -16.125160217285156
    6. '	W' → logprob: -16.625160217285156
    7. '`' → logprob: -17.625160217285156
    8. '<W' → logprob: -17.625160217285156
    9. ''''' → logprob: -18.125160217285156
    10. '   ' → logprob: -18.625160217285156

Token 1383: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030690548941493034
    2. ''' → logprob: -3.7806904315948486
    3. '
' → logprob: -5.405690670013428
    4. ''
' → logprob: -6.530690670013428
    5. ' ' → logprob: -7.780690670013428
    6. '<|end|>' → logprob: -8.03069019317627
    7. '    
' → logprob: -8.90569019317627
    8. '  ' → logprob: -8.90569019317627
    9. ')' → logprob: -9.15569019317627
    10. 'E' → logprob: -9.28069019317627

Token 1384: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09200236201286316
    2. '   ' → logprob: -2.4670023918151855
    3. ' NORTH' → logprob: -6.3420023918151855
    4. ' ' → logprob: -7.9670023918151855
    5. 'S' → logprob: -8.342001914978027
    6. '    
' → logprob: -8.717001914978027
    7. '.NORTH' → logprob: -8.842001914978027
    8. ' N' → logprob: -9.092001914978027
    9. '
' → logprob: -9.967001914978027
    10. '  
' → logprob: -10.342001914978027

Token 1385: ' NORTH' (ID: 134155)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.421908958349377e-05
    2. ' NORTH' → logprob: -10.37507438659668
    3. 'S' → logprob: -10.75007438659668
    4. '   ' → logprob: -12.25007438659668
    5. 'NOR' → logprob: -12.25007438659668
    6. 'North' → logprob: -12.75007438659668
    7. 'north' → logprob: -13.12507438659668
    8. '.NORTH' → logprob: -13.50007438659668
    9. 'NONE' → logprob: -13.62507438659668
    10. ' N' → logprob: -13.75007438659668

Token 1386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12698407471179962
    2. ' =' → logprob: -2.126984119415283
    3. '='' → logprob: -10.001983642578125
    4. '   ' → logprob: -11.751983642578125
    5. '=
' → logprob: -13.751983642578125
    6. ' ='' → logprob: -14.376983642578125
    7. ''' → logprob: -14.876983642578125
    8. '<|end|>' → logprob: -15.376983642578125
    9. ' =
' → logprob: -15.501983642578125
    10. ' ' → logprob: -16.001983642578125

Token 1387: ' '' (ID: 461)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -4.5014188799541444e-05
    2. 'N' → logprob: -10.125044822692871
    3. ' '' → logprob: -13.000044822692871
    4. '"N' → logprob: -13.750044822692871
    5. ''S' → logprob: -14.125044822692871
    6. ''n' → logprob: -15.375044822692871
    7. ''' → logprob: -15.500044822692871
    8. ''\' → logprob: -16.125045776367188
    9. '('' → logprob: -16.250045776367188
    10. '   ' → logprob: -16.625045776367188

Token 1388: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0031817557755857706
    2. ''N' → logprob: -5.7531819343566895
    3. ''' → logprob: -12.753181457519531
    4. ' N' → logprob: -14.253181457519531
    5. '"N' → logprob: -15.503181457519531
    6. ''
' → logprob: -16.12818145751953
    7. ''\' → logprob: -17.62818145751953
    8. '	N' → logprob: -18.12818145751953
    9. ''''' → logprob: -18.12818145751953
    10. '
' → logprob: -18.25318145751953

Token 1389: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13574375212192535
    2. ''' → logprob: -2.2607438564300537
    3. 'S' → logprob: -4.010743618011475
    4. ''
' → logprob: -6.760743618011475
    5. ' SOUTH' → logprob: -6.885743618011475
    6. ''S' → logprob: -7.510743618011475
    7. ' ' → logprob: -7.635743618011475
    8. '
' → logprob: -8.010744094848633
    9. ',' → logprob: -8.135744094848633
    10. ' S' → logprob: -8.510744094848633

Token 1390: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.038350485265254974
    2. '   ' → logprob: -3.2883505821228027
    3. ' SOUTH' → logprob: -8.788350105285645
    4. ' ' → logprob: -9.413350105285645
    5. '    
' → logprob: -10.788350105285645
    6. '  
' → logprob: -11.663350105285645
    7. '```' → logprob: -11.788350105285645
    8. '
' → logprob: -11.913350105285645
    9. 'South' → logprob: -12.163350105285645
    10. '  ' → logprob: -12.413350105285645

Token 1391: ' SOUTH' (ID: 127319)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.9504606825648807e-05
    2. ' SOUTH' → logprob: -11.125019073486328
    3. ' S' → logprob: -13.000019073486328
    4. ''' → logprob: -14.000019073486328
    5. ''S' → logprob: -14.250019073486328
    6. 'South' → logprob: -14.750019073486328
    7. '.SOUTH' → logprob: -15.375019073486328
    8. 'south' → logprob: -15.625019073486328
    9. 'SOR' → logprob: -17.000019073486328
    10. '   ' → logprob: -17.250019073486328

Token 1392: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1393: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -9.13388703338569e-06
    2. 'S' → logprob: -11.750009536743164
    3. '"S' → logprob: -13.875009536743164
    4. ' '' → logprob: -16.625009536743164
    5. '’S' → logprob: -16.625009536743164
    6. ''' → logprob: -17.125009536743164
    7. ''s' → logprob: -17.500009536743164
    8. '('' → logprob: -18.250009536743164
    9. '	S' → logprob: -18.250009536743164
    10. ' S' → logprob: -18.875009536743164

Token 1394: 'S' (ID: 50)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.5759484171867371
    2. 'S' → logprob: -0.8259484171867371
    3. '"S' → logprob: -12.575948715209961
    4. ' S' → logprob: -13.575948715209961
    5. ''' → logprob: -13.700948715209961
    6. ''s' → logprob: -14.200948715209961
    7. ''''' → logprob: -14.325948715209961
    8. '’S' → logprob: -14.325948715209961
    9. '\S' → logprob: -15.325948715209961
    10. '	S' → logprob: -15.450948715209961

Token 1395: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007179321721196175
    2. '   ' → logprob: -5.257179260253906
    3. '<|end|>' → logprob: -6.882179260253906
    4. ''
' → logprob: -8.757179260253906
    5. '"' → logprob: -8.757179260253906
    6. ''''' → logprob: -8.882179260253906
    7. '#' → logprob: -9.132179260253906
    8. ')' → logprob: -9.382179260253906
    9. '```' → logprob: -10.007179260253906
    10. '<|end|>' → logprob: -10.382179260253906

Token 1396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08104805648326874
    2. '
' → logprob: -2.956048011779785
    3. 'def' → logprob: -3.831048011779785
    4. '    
' → logprob: -5.956048011779785
    5. '@' → logprob: -7.081048011779785
    6. 'IND' → logprob: -9.331048011779785
    7. '#' → logprob: -9.456048011779785
    8. 'class' → logprob: -9.456048011779785
    9. 'indent' → logprob: -10.206048011779785
    10. '  
' → logprob: -10.331048011779785

Token 1397: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.016592372208833694
    2. 'dir' → logprob: -5.641592502593994
    3. '_d' → logprob: -6.141592502593994
    4. 'dire' → logprob: -6.266592502593994
    5. 'delta' → logprob: -6.266592502593994
    6. 'direction' → logprob: -6.516592502593994
    7. 'D' → logprob: -6.516592502593994
    8. 'd' → logprob: -6.641592502593994
    9. 'DIR' → logprob: -7.766592502593994
    10. 'op' → logprob: -7.891592502593994

Token 1398: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -3.128163257315464e-07
    2. 'classmethod' → logprob: -15.25
    3. 'property' → logprob: -18.5
    4. 'static' → logprob: -19.0
    5. ' static' → logprob: -23.875
    6. 'dat' → logprob: -25.5
    7. 'stat' → logprob: -27.625
    8. '_static' → logprob: -27.875
    9. 'st' → logprob: -28.5
    10. '
' → logprob: -28.5

Token 1399: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019025782821699977
    2. '
' → logprob: -6.8769025802612305
    3. ' def' → logprob: -7.6269025802612305
    4. '   ' → logprob: -8.25190258026123
    5. '	def' → logprob: -10.12690258026123
    6. '(' → logprob: -10.75190258026123
    7. '(
' → logprob: -11.00190258026123
    8. '    
' → logprob: -11.12690258026123
    9. '('' → logprob: -11.37690258026123
    10. '  
' → logprob: -11.87690258026123

Token 1400: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001490716531407088
    2. ' def' → logprob: -9.12514877319336
    3. '   ' → logprob: -10.25014877319336
    4. '	def' → logprob: -13.00014877319336
    5. '
' → logprob: -13.25014877319336
    6. ' ' → logprob: -15.62514877319336
    7. '(def' → logprob: -15.62514877319336
    8. '_def' → logprob: -16.00014877319336
    9. '('' → logprob: -16.75014877319336
    10. '(' → logprob: -16.75014877319336

Token 1401: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.676292231422849e-05
    2. ' def' → logprob: -11.000017166137695
    3. '
' → logprob: -20.000017166137695
    4. '   ' → logprob: -20.875017166137695
    5. ' ' → logprob: -22.000017166137695
    6. '	def' → logprob: -22.125017166137695
    7. 'from' → logprob: -22.500017166137695
    8. '    
' → logprob: -23.000017166137695
    9. 'de' → logprob: -23.375017166137695
    10. 'd' → logprob: -24.750017166137695

Token 1402: ' between' (ID: 2870)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3571777641773224
    2. 'from' → logprob: -1.482177734375
    3. 'between' → logprob: -3.732177734375
    4. 'direction' → logprob: -3.982177734375
    5. 'get' → logprob: -4.232177734375
    6. 'delta' → logprob: -5.357177734375
    7. 'vector' → logprob: -6.107177734375
    8. 'reverse' → logprob: -6.607177734375
    9. 'def' → logprob: -6.857177734375
    10. 'diff' → logprob: -6.982177734375

Token 1403: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.13031107187271118
    2. '(coord' → logprob: -2.1303110122680664
    3. '(a' → logprob: -6.630311012268066
    4. '(' → logprob: -6.755311012268066
    5. '(coords' → logprob: -8.380311012268066
    6. '(co' → logprob: -8.755311012268066
    7. '(from' → logprob: -9.130311012268066
    8. '(prev' → logprob: -9.130311012268066
    9. '(p' → logprob: -10.005311012268066
    10. '(origin' → logprob: -10.380311012268066

Token 1404: '_from' (ID: 12526)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25813791155815125
    2. 'o' → logprob: -1.5081379413604736
    3. 'oord' → logprob: -5.3831377029418945
    4. '(o' → logprob: -6.6331377029418945
    5. '(c' → logprob: -9.383137702941895
    6. 'oor' → logprob: -10.508137702941895
    7. '(coord' → logprob: -10.883137702941895
    8. 'ode' → logprob: -11.008137702941895
    9. '{o' → logprob: -11.008137702941895
    10. '(' → logprob: -11.383137702941895

Token 1405: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030002709478139877
    2. ',c' → logprob: -4.030002593994141
    3. 'and' → logprob: -4.655002593994141
    4. ' ,' → logprob: -6.780002593994141
    5. ' and' → logprob: -7.405002593994141
    6. 'c' → logprob: -8.28000259399414
    7. '(c' → logprob: -9.78000259399414
    8. ' c' → logprob: -9.90500259399414
    9. 'to' → logprob: -10.53000259399414
    10. ':' → logprob: -10.78000259399414

Token 1406: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.04296733811497688
    2. 'Coordinates' → logprob: -3.7929673194885254
    3. 'c' → logprob: -4.167967319488525
    4. ' c' → logprob: -6.042967319488525
    5. 'Coord' → logprob: -7.417967319488525
    6. ' Coordinate' → logprob: -7.792967319488525
    7. 'str' → logprob: -8.667967796325684
    8. ')' → logprob: -8.917967796325684
    9. 'staticmethod' → logprob: -10.292967796325684
    10. 'C' → logprob: -10.417967796325684

Token 1407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004273315134923905
    2. ',c' → logprob: -8.00042724609375
    3. ' ,' → logprob: -9.37542724609375
    4. ',
' → logprob: -12.37542724609375
    5. 'c' → logprob: -13.00042724609375
    6. 'and' → logprob: -15.87542724609375
    7. '):
' → logprob: -16.12542724609375
    8. ' c' → logprob: -16.50042724609375
    9. ')' → logprob: -16.50042724609375
    10. '   ' → logprob: -16.87542724609375

Token 1408: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01416398212313652
    2. ' c' → logprob: -4.264163970947266
    3. '	c' → logprob: -15.264163970947266
    4. '   ' → logprob: -15.389163970947266
    5. ')c' → logprob: -17.264163970947266
    6. '
' → logprob: -18.639163970947266
    7. '    ' → logprob: -18.889163970947266
    8. ' ' → logprob: -19.389163970947266
    9. '  ' → logprob: -19.639163970947266
    10. '_c' → logprob: -19.889163970947266

Token 1409: '_to' (ID: 5089)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.20150727033615112
    2. '_to' → logprob: -1.701507329940796
    3. 'from' → logprob: -9.576507568359375
    4. '_' → logprob: -11.201507568359375
    5. '_for' → logprob: -12.451507568359375
    6. 'rom' → logprob: -13.201507568359375
    7. '_f' → logprob: -13.201507568359375
    8. '_next' → logprob: -14.701507568359375
    9. 'to' → logprob: -14.826507568359375
    10. '_into' → logprob: -15.076507568359375

Token 1410: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2561592161655426
    2. ':' → logprob: -1.6311591863632202
    3. '):' → logprob: -3.5061593055725098
    4. ')' → logprob: -8.506158828735352
    5. ':
' → logprob: -10.881158828735352
    6. ' :' → logprob: -11.381158828735352
    7. '):

' → logprob: -11.631158828735352
    8. ' ):
' → logprob: -11.631158828735352
    9. '):
' → logprob: -11.881158828735352
    10. ')
' → logprob: -12.881158828735352

Token 1411: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0005765048554167151
    2. ' Coordinate' → logprob: -7.750576496124268
    3. 'Coordinates' → logprob: -8.875576972961426
    4. 'Coord' → logprob: -13.375576972961426
    5. ')' → logprob: -13.750576972961426
    6. 'staticmethod' → logprob: -13.875576972961426
    7. '_coordinate' → logprob: -14.125576972961426
    8. 'str' → logprob: -14.250576972961426
    9. 'coordinate' → logprob: -15.125576972961426
    10. 'Coordinator' → logprob: -15.625576972961426

Token 1412: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07014860957860947
    2. '):' → logprob: -2.9451487064361572
    3. ')' → logprob: -4.195148468017578
    4. '):
' → logprob: -10.195148468017578
    5. '():
' → logprob: -11.195148468017578
    6. ' ):
' → logprob: -11.195148468017578
    7. ')->' → logprob: -12.320148468017578
    8. '   ' → logprob: -12.570148468017578
    9. '()):
' → logprob: -13.070148468017578
    10. '):

' → logprob: -13.195148468017578

Token 1413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001805377542041242
    2. ':' → logprob: -10.2501802444458
    3. 'if' → logprob: -10.3751802444458
    4. '```' → logprob: -10.3751802444458
    5. ' if' → logprob: -10.5001802444458
    6. '#' → logprob: -11.6251802444458
    7. '
' → logprob: -11.8751802444458
    8. '(' → logprob: -11.8751802444458
    9. '        ' → logprob: -12.0001802444458
    10. ',' → logprob: -12.2501802444458

Token 1414: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3445861339569092
    2. 'dx' → logprob: -1.3445861339569092
    3. '       ' → logprob: -3.969586133956909
    4. 'ew' → logprob: -4.844586372375488
    5. 'diff' → logprob: -5.844586372375488
    6. ' if' → logprob: -7.344586372375488
    7. ' dx' → logprob: -8.719586372375488
    8. '        ' → logprob: -8.844586372375488
    9. 'delta' → logprob: -9.594586372375488
    10. 'x' → logprob: -9.969586372375488

Token 1415: ' Determine' (ID: 57076)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016551222652196884
    2. 'ew' → logprob: -4.3915510177612305
    3. 'dx' → logprob: -6.2665510177612305
    4. 'delta' → logprob: -7.0165510177612305
    5. '#' → logprob: -7.1415510177612305
    6. 'diff' → logprob: -8.14155101776123
    7. 'ord' → logprob: -9.51655101776123
    8. 'dw' → logprob: -10.14155101776123
    9. ' if' → logprob: -11.39155101776123
    10. '"""' → logprob: -12.01655101776123

Token 1416: ' direction' (ID: 9262)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13698816299438477
    2. ' if' → logprob: -2.7619881629943848
    3. ''' → logprob: -3.0119881629943848
    4. '"' → logprob: -6.011988162994385
    5. ' '' → logprob: -6.386988162994385
    6. '   ' → logprob: -6.886988162994385
    7. 'direction' → logprob: -7.011988162994385
    8. ''d' → logprob: -7.261988162994385
    9. 'dir' → logprob: -7.261988162994385
    10. 'dx' → logprob: -7.386988162994385

Token 1417: ' of' (ID: 328)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1196451485157013
    2. ' if' → logprob: -2.619645118713379
    3. '       ' → logprob: -3.244645118713379
    4. 'diff' → logprob: -7.369645118713379
    5. 'dx' → logprob: -9.369645118713379
    6. 'east' → logprob: -10.119645118713379
    7. '        ' → logprob: -10.369645118713379
    8. '           ' → logprob: -10.494645118713379
    9. '(' → logprob: -10.619645118713379
    10. ':' → logprob: -11.244645118713379

Token 1418: ' movement' (ID: 12772)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2953127920627594
    2. 'movement' → logprob: -1.545312762260437
    3. 'travel' → logprob: -3.5453128814697266
    4. 'the' → logprob: -4.920312881469727
    5. ' movement' → logprob: -6.045312881469727
    6. 'move' → logprob: -6.045312881469727
    7. ' c' → logprob: -6.670312881469727
    8. ' travel' → logprob: -9.170312881469727
    9. ' the' → logprob: -9.920312881469727
    10. 'change' → logprob: -10.920312881469727

Token 1419: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17551912367343903
    2. 'if' → logprob: -2.3005192279815674
    3. '(' → logprob: -3.5505192279815674
    4. ' if' → logprob: -3.6755192279815674
    5. ':' → logprob: -5.675518989562988
    6. ',' → logprob: -7.300518989562988
    7. '        ' → logprob: -7.300518989562988
    8. '(
' → logprob: -7.550518989562988
    9. '   ' → logprob: -8.425518989562988
    10. ':
' → logprob: -8.550518989562988

Token 1420: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014239625306800008
    2. ' c' → logprob: -8.875142097473145
    3. '
' → logprob: -13.625142097473145
    4. 'the' → logprob: -15.000142097473145
    5. ')c' → logprob: -15.000142097473145
    6. '	c' → logprob: -15.500142097473145
    7. '`' → logprob: -16.37514305114746
    8. 'coordinates' → logprob: -16.75014305114746
    9. '```' → logprob: -16.75014305114746
    10. 'from' → logprob: -16.87514305114746

Token 1421: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -4.246537173457909e-06
    2. 'from' → logprob: -13.125003814697266
    3. '_to' → logprob: -13.750003814697266
    4. '_' → logprob: -14.500003814697266
    5. '_f' → logprob: -14.625003814697266
    6. '_between' → logprob: -16.875003814697266
    7. '_FROM' → logprob: -16.875003814697266
    8. ' _' → logprob: -17.000003814697266
    9. '_for' → logprob: -17.250003814697266
    10. '_
' → logprob: -17.625003814697266

Token 1422: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14344622194766998
    2. 'to' → logprob: -2.018446207046509
    3. ',' → logprob: -7.768446445465088
    4. '       ' → logprob: -9.26844596862793
    5. 'east' → logprob: -10.01844596862793
    6. '.' → logprob: -10.26844596862793
    7. '   ' → logprob: -10.39344596862793
    8. '.e' → logprob: -10.51844596862793
    9. '
' → logprob: -11.14344596862793
    10. ' east' → logprob: -11.26844596862793

Token 1423: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00043233807082287967
    2. ' c' → logprob: -7.75043249130249
    3. 'the' → logprob: -14.250432014465332
    4. '`' → logprob: -15.750432014465332
    5. '   ' → logprob: -16.37543296813965
    6. '```' → logprob: -16.37543296813965
    7. '#' → logprob: -16.50043296813965
    8. '
' → logprob: -16.75043296813965
    9. '<|end|>' → logprob: -17.00043296813965
    10. 'coordinate' → logprob: -17.00043296813965

Token 1424: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.014164801687002182
    2. '_from' → logprob: -4.264164924621582
    3. 'from' → logprob: -14.639164924621582
    4. 'Coordinate' → logprob: -14.889164924621582
    5. '._' → logprob: -15.639164924621582
    6. '_for' → logprob: -16.764163970947266
    7. '_of' → logprob: -17.014163970947266
    8. '_coordinate' → logprob: -17.139163970947266
    9. '`' → logprob: -17.389163970947266
    10. '```' → logprob: -17.639163970947266

Token 1425: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7445699572563171
    2. '       ' → logprob: -1.119570016860962
    3. ':
' → logprob: -1.744570016860962
    4. 'if' → logprob: -4.369569778442383
    5. ',' → logprob: -5.494569778442383
    6. ' if' → logprob: -6.369569778442383
    7. '(' → logprob: -6.619569778442383
    8. '):
' → logprob: -6.744569778442383
    9. '   ' → logprob: -7.369569778442383
    10. '():
' → logprob: -7.994569778442383

Token 1426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41019317507743835
    2. ':' → logprob: -1.1601932048797607
    3. ':
' → logprob: -4.035192966461182
    4. '(' → logprob: -6.535192966461182
    5. '   ' → logprob: -7.035192966461182
    6. ' :' → logprob: -7.160192966461182
    7. 'if' → logprob: -7.535192966461182
    8. ' if' → logprob: -8.03519344329834
    9. '    ' → logprob: -8.53519344329834
    10. '(
' → logprob: -8.53519344329834

Token 1427: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4058181643486023
    2. 'dx' → logprob: -1.155818223953247
    3. '       ' → logprob: -4.155817985534668
    4. 'diff' → logprob: -6.530817985534668
    5. ' if' → logprob: -7.280817985534668
    6. 'ew' → logprob: -7.280817985534668
    7. 'delta' → logprob: -9.155817985534668
    8. ' dx' → logprob: -9.155817985534668
    9. 'x' → logprob: -11.030817985534668
    10. '        ' → logprob: -11.905817985534668

Token 1428: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.1318875446449965e-05
    2. ' c' → logprob: -10.375041007995605
    3. 'ord' → logprob: -11.625041007995605
    4. '   ' → logprob: -14.375041007995605
    5. '	c' → logprob: -15.000041007995605
    6. '(ord' → logprob: -17.000041961669922
    7. ' ' → logprob: -17.375041961669922
    8. ' ord' → logprob: -17.500041961669922
    9. ')c' → logprob: -17.750041961669922
    10. '  ' → logprob: -18.000041961669922

Token 1429: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.01939789392054081
    2. '_to' → logprob: -4.144397735595703
    3. 'from' → logprob: -5.894397735595703
    4. '.e' → logprob: -8.019397735595703
    5. '.from' → logprob: -8.894397735595703
    6. '_.' → logprob: -9.894397735595703
    7. '   ' → logprob: -10.519397735595703
    8. '._' → logprob: -11.019397735595703
    9. '_e' → logprob: -11.519397735595703
    10. '.c' → logprob: -12.019397735595703

Token 1430: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.00020067949662916362
    2. '.' → logprob: -8.875200271606445
    3. 'east' → logprob: -10.125200271606445
    4. '.c' → logprob: -12.250200271606445
    5. '.n' → logprob: -13.000200271606445
    6. ' .' → logprob: -13.375200271606445
    7. '   ' → logprob: -13.625200271606445
    8. '.x' → logprob: -13.875200271606445
    9. '.eas' → logprob: -14.000200271606445
    10. '.__' → logprob: -14.000200271606445

Token 1431: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.00491268141195178
    2. 'east' → logprob: -5.629912853240967
    3. '_w' → logprob: -7.504912853240967
    4. '_' → logprob: -7.754912853240967
    5. '_ast' → logprob: -9.254912376403809
    6. 'a' → logprob: -9.379912376403809
    7. 'west' → logprob: -10.004912376403809
    8. 'w' → logprob: -10.629912376403809
    9. '```' → logprob: -10.629912376403809
    10. '.ast' → logprob: -11.629912376403809

Token 1432: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -2.339278580620885e-06
    2. ' _' → logprob: -13.875001907348633
    3. '_' → logprob: -14.750001907348633
    4. 'w' → logprob: -15.500001907348633
    5. '
' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.125001907348633
    7. '_v' → logprob: -16.125001907348633
    8. '       ' → logprob: -16.375001907348633
    9. '_s' → logprob: -17.125001907348633
    10. 'west' → logprob: -17.125001907348633

Token 1433: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0013242880813777447
    2. 'st' → logprob: -7.00132417678833
    3. '_est' → logprob: -8.501324653625488
    4. '_w' → logprob: -8.876324653625488
    5. '_' → logprob: -10.251324653625488
    6. 'w' → logprob: -11.501324653625488
    7. 'west' → logprob: -11.876324653625488
    8. '_st' → logprob: -12.126324653625488
    9. '_rest' → logprob: -13.126324653625488
    10. 'ost' → logprob: -13.376324653625488

Token 1434: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12739062309265137
    2. ' <' → logprob: -2.1273906230926514
    3. '>' → logprob: -8.87739086151123
    4. ' ' → logprob: -9.62739086151123
    5. '<char' → logprob: -10.00239086151123
    6. '<E' → logprob: -10.62739086151123
    7. '==' → logprob: -10.87739086151123
    8. '<c' → logprob: -10.87739086151123
    9. '[' → logprob: -11.12739086151123
    10. ')' → logprob: -11.25239086151123

Token 1435: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0067167943343520164
    2. ' c' → logprob: -5.006716728210449
    3. '   ' → logprob: -15.00671672821045
    4. ' ' → logprob: -15.25671672821045
    5. '       ' → logprob: -15.50671672821045
    6. ''' → logprob: -16.131717681884766
    7. '    ' → logprob: -16.381717681884766
    8. '	c' → logprob: -16.506717681884766
    9. ')c' → logprob: -16.506717681884766
    10. '     ' → logprob: -16.631717681884766

Token 1436: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.8232690460281447e-05
    2. '_from' → logprob: -10.125048637390137
    3. 'c' → logprob: -12.500048637390137
    4. 'to' → logprob: -12.875048637390137
    5. 'To' → logprob: -14.125048637390137
    6. '_TO' → logprob: -15.125048637390137
    7. '   ' → logprob: -15.750048637390137
    8. ''' → logprob: -16.00004768371582
    9. 'o' → logprob: -16.12504768371582
    10. 'from' → logprob: -16.37504768371582

Token 1437: '.e' (ID: 2560)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5786276459693909
    2. '_w' → logprob: -1.453627586364746
    3. 'c' → logprob: -1.953627586364746
    4. 'to' → logprob: -4.328627586364746
    5. 'east' → logprob: -4.578627586364746
    6. '_e' → logprob: -4.578627586364746
    7. 'e' → logprob: -4.828627586364746
    8. 'To' → logprob: -4.828627586364746
    9. '.c' → logprob: -5.828627586364746
    10. 'west' → logprob: -6.328627586364746

Token 1438: 'ast' (ID: 629)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.026906704530119896
    2. 'west' → logprob: -4.276906490325928
    3. 'w' → logprob: -4.401906490325928
    4. 'ast' → logprob: -7.901906490325928
    5. 'st' → logprob: -11.401906967163086
    6. 'W' → logprob: -12.776906967163086
    7. '_' → logprob: -12.776906967163086
    8. 'ew' → logprob: -13.026906967163086
    9. 'east' → logprob: -13.151906967163086
    10. 'c' → logprob: -13.276906967163086

Token 1439: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -9.491498531133402e-06
    2. 'w' → logprob: -11.875009536743164
    3. 'west' → logprob: -13.250009536743164
    4. '   ' → logprob: -15.000009536743164
    5. ' ' → logprob: -16.875009536743164
    6. '_v' → logprob: -17.125009536743164
    7. ' _' → logprob: -17.250009536743164
    8. '_s' → logprob: -17.500009536743164
    9. '  ' → logprob: -17.750009536743164
    10. '
' → logprob: -18.000009536743164

Token 1440: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.002997904783114791
    2. 'st' → logprob: -5.877997875213623
    3. 'west' → logprob: -9.002998352050781
    4. 'rest' → logprob: -10.752998352050781
    5. 'w' → logprob: -11.002998352050781
    6. '_est' → logprob: -11.377998352050781
    7. 'ost' → logprob: -12.252998352050781
    8. '_w' → logprob: -12.752998352050781
    9. 'ест' → logprob: -13.252998352050781
    10. '_' → logprob: -13.252998352050781

Token 1441: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17751401662826538
    2. 'and' → logprob: -2.17751407623291
    3. ':
' → logprob: -3.17751407623291
    4. ':' → logprob: -5.05251407623291
    5. '       ' → logprob: -6.80251407623291
    6. '           ' → logprob: -9.55251407623291
    7. '<|end|>' → logprob: -10.80251407623291
    8. '   ' → logprob: -11.42751407623291
    9. ' ' → logprob: -12.67751407623291
    10. '        ' → logprob: -12.80251407623291

Token 1442: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2135057896375656
    2. ' and' → logprob: -1.713505744934082
    3. '           ' → logprob: -4.963505744934082
    4. ':' → logprob: -5.838505744934082
    5. 'and' → logprob: -6.963505744934082
    6. ':
' → logprob: -6.963505744934082
    7. '<|end|>' → logprob: -9.838505744934082
    8. '        ' → logprob: -10.463505744934082
    9. '	       ' → logprob: -10.463505744934082
    10. '   ' → logprob: -10.713505744934082

Token 1443: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12869125604629517
    2. ' if' → logprob: -2.1286911964416504
    3. '           ' → logprob: -7.00369119644165
    4. '               ' → logprob: -7.62869119644165
    5. 'diff' → logprob: -8.628691673278809
    6. 'north' → logprob: -9.503691673278809
    7. 'return' → logprob: -10.503691673278809
    8. ' ' → logprob: -11.128691673278809
    9. 'ns' → logprob: -11.253691673278809
    10. '#' → logprob: -11.628691673278809

Token 1444: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.060365608893335e-05
    2. ' c' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.500041007995605
    4. '	c' → logprob: -15.875041007995605
    5. '           ' → logprob: -16.25004005432129
    6. '       ' → logprob: -18.62504005432129
    7. '(c' → logprob: -19.00004005432129
    8. 'cation' → logprob: -19.00004005432129
    9. ' ' → logprob: -19.12504005432129
    10. ')c' → logprob: -19.25004005432129

Token 1445: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.01816340535879135
    2. '_to' → logprob: -4.018163204193115
    3. 'from' → logprob: -11.518163681030273
    4. '_FROM' → logprob: -14.018163681030273
    5. '.from' → logprob: -14.018163681030273
    6. 'From' → logprob: -14.518163681030273
    7. '_' → logprob: -15.018163681030273
    8. '_for' → logprob: -15.643163681030273
    9. '_From' → logprob: -15.643163681030273
    10. '_t' → logprob: -16.393163681030273

Token 1446: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.002527149161323905
    2. 'north' → logprob: -6.002527236938477
    3. '_n' → logprob: -11.127527236938477
    4. '.' → logprob: -11.502527236938477
    5. '<n' → logprob: -12.377527236938477
    6. ' north' → logprob: -12.752527236938477
    7. ' .' → logprob: -12.752527236938477
    8. '
' → logprob: -12.877527236938477
    9. 'North' → logprob: -13.252527236938477

Token 1447: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.008156721480190754
    2. 'north' → logprob: -4.883156776428223
    3. '_n' → logprob: -8.008156776428223
    4. '_s' → logprob: -9.883156776428223
    5. 'south' → logprob: -10.383156776428223
    6. 'n' → logprob: -10.383156776428223
    7. 'outh' → logprob: -10.633156776428223
    8. '_' → logprob: -11.008156776428223
    9. 'o' → logprob: -11.258156776428223
    10. '__' → logprob: -11.258156776428223

Token 1448: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.069664333248511e-05
    2. 'south' → logprob: -11.125020980834961
    3. '+' → logprob: -13.500020980834961
    4. 's' → logprob: -14.250020980834961
    5. '\' → logprob: -14.500020980834961
    6. '>' → logprob: -14.500020980834961
    7. '_n' → logprob: -14.625020980834961
    8. 'South' → logprob: -15.125020980834961
    9. '<' → logprob: -15.375020980834961
    10. '_' → logprob: -15.375020980834961

Token 1449: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.04054369404911995
    2. 'orth' → logprob: -3.415543794631958
    3. '_s' → logprob: -5.290543556213379
    4. 's' → logprob: -7.040543556213379
    5. '_' → logprob: -7.665543556213379
    6. 'south' → logprob: -8.415543556213379
    7. '>' → logprob: -10.415543556213379
    8. '__' → logprob: -10.415543556213379
    9. 'uth' → logprob: -10.665543556213379
    10. '_out' → logprob: -10.665543556213379

Token 1450: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11140122264623642
    2. ' <' → logprob: -2.361401319503784
    3. '>' → logprob: -4.736401081085205
    4. ' >' → logprob: -6.111401081085205
    5. '<int' → logprob: -10.361401557922363
    6. '<
' → logprob: -10.611401557922363
    7. '+' → logprob: -11.111401557922363
    8. '<n' → logprob: -11.611401557922363
    9. ' ' → logprob: -11.861401557922363
    10. '<class' → logprob: -12.111401557922363

Token 1451: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029750484973192215
    2. ' c' → logprob: -3.5297505855560303
    3. '	c' → logprob: -17.15475082397461
    4. '   ' → logprob: -17.52975082397461
    5. ' ' → logprob: -18.27975082397461
    6. 'cation' → logprob: -19.02975082397461
    7. ')c' → logprob: -19.15475082397461
    8. 'ct' → logprob: -19.27975082397461
    9. '  ' → logprob: -20.02975082397461
    10. '<c' → logprob: -20.15475082397461

Token 1452: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0003209229907952249
    2. 'c' → logprob: -8.250321388244629
    3. 'to' → logprob: -10.125321388244629
    4. 'To' → logprob: -11.750321388244629
    5. ' c' → logprob: -12.125321388244629
    6. '_t' → logprob: -13.250321388244629
    7. '_s' → logprob: -14.000321388244629
    8. 'o' → logprob: -14.125321388244629
    9. '_TO' → logprob: -14.125321388244629
    10. '_' → logprob: -14.750321388244629

Token 1453: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.1689406931400299
    2. 'north' → logprob: -2.293940782546997
    3. '_n' → logprob: -2.918940782546997
    4. '_s' → logprob: -8.418940544128418
    5. 'North' → logprob: -9.793940544128418
    6. 'n' → logprob: -9.793940544128418
    7. 'south' → logprob: -9.793940544128418
    8. '.s' → logprob: -10.668940544128418
    9. ' north' → logprob: -10.793940544128418
    10. 's' → logprob: -10.793940544128418

Token 1454: 'orth' (ID: 2909)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.17408300936222076
    2. 'south' → logprob: -2.1740829944610596
    3. 'orth' → logprob: -3.1740829944610596
    4. 's' → logprob: -5.674083232879639
    5. 'north' → logprob: -7.549083232879639
    6. '_' → logprob: -9.92408275604248
    7. 'South' → logprob: -10.17408275604248
    8. '_to' → logprob: -10.42408275604248
    9. 'outh' → logprob: -10.42408275604248
    10. '.s' → logprob: -10.54908275604248

Token 1455: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.6405310816480778e-05
    2. 'south' → logprob: -11.375016212463379
    3. 's' → logprob: -12.500016212463379
    4. 'South' → logprob: -15.000016212463379
    5. '_to' → logprob: -15.500016212463379
    6. '_w' → logprob: -15.875016212463379
    7. 'to' → logprob: -16.000017166137695
    8. 'sou' → logprob: -16.125017166137695
    9. '_' → logprob: -16.250017166137695
    10. '_so' → logprob: -17.000017166137695

Token 1456: 'outh' (ID: 4656)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.6744330525398254
    2. 'outh' → logprob: -1.1744329929351807
    3. 's' → logprob: -2.1744329929351807
    4. '_s' → logprob: -3.4244329929351807
    5. 'orth' → logprob: -3.4244329929351807
    6. 'South' → logprob: -6.29943323135376
    7. 'sou' → logprob: -7.92443323135376
    8. 'north' → logprob: -9.174432754516602
    9. 'w' → logprob: -9.924432754516602
    10. '```' → logprob: -9.924432754516602

Token 1457: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2951127886772156
    2. ':' → logprob: -1.4201128482818604
    3. '           ' → logprob: -4.545112609863281
    4. ':return' → logprob: -6.545112609863281
    5. '       ' → logprob: -6.670112609863281
    6. '               ' → logprob: -8.795112609863281
    7. '):
' → logprob: -9.420112609863281
    8. ' and' → logprob: -10.045112609863281
    9. ' :
' → logprob: -10.170112609863281
    10. '<|end|>' → logprob: -10.545112609863281

Token 1458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012090337462723255
    2. '           ' → logprob: -4.63709020614624
    3. ':
' → logprob: -7.13709020614624
    4. ' return' → logprob: -7.63709020614624
    5. '       ' → logprob: -8.012090682983398
    6. ':' → logprob: -8.262090682983398
    7. 'return' → logprob: -8.887090682983398
    8. '
' → logprob: -9.387090682983398
    9. '<|end|>' → logprob: -9.762090682983398
    10. '	       ' → logprob: -10.137090682983398

Token 1459: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7709439992904663
    2. 'return' (adapté à ' return') → logprob: -0.7709439992904663
    3. ' return' → logprob: -2.770944118499756
    4. '               ' → logprob: -4.770944118499756
    5. '	       ' → logprob: -5.895944118499756
    6. '	return' → logprob: -7.395944118499756
    7. '	           ' → logprob: -10.020943641662598
    8. '       ' → logprob: -10.020943641662598
    9. '		' → logprob: -10.270943641662598
    10. ' ' → logprob: -10.270943641662598

Token 1460: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.020336439833045006
    2. ''' → logprob: -4.520336627960205
    3. ' Direction' → logprob: -5.020336627960205
    4. ''S' → logprob: -6.145336627960205
    5. ''s' → logprob: -8.145336151123047
    6. ' '' → logprob: -9.520336151123047
    7. ''D' → logprob: -10.145336151123047
    8. ''N' → logprob: -10.770336151123047
    9. '(Direction' → logprob: -10.770336151123047
    10. '"' → logprob: -10.895336151123047

Token 1461: '.SOUTH' (ID: 187559)
  Prédit: '.SOUTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SOUTH' → logprob: -0.006715370807796717
    2. '.NORTH' → logprob: -5.131715297698975
    3. 'S' → logprob: -7.381715297698975
    4. '   ' → logprob: -9.381715774536133
    5. '.S' → logprob: -10.131715774536133
    6. '.' → logprob: -11.381715774536133
    7. 'N' → logprob: -12.131715774536133
    8. ''S' → logprob: -12.631715774536133
    9. '.DOWN' → logprob: -12.881715774536133
    10. '
' → logprob: -13.006715774536133

Token 1462: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007907903753221035
    2. '           ' → logprob: -5.132907867431641
    3. '
' → logprob: -6.632907867431641
    4. '<|end|>' → logprob: -8.38290786743164
    5. 'elif' → logprob: -8.63290786743164
    6. '        
' → logprob: -9.25790786743164
    7. ' elif' → logprob: -10.25790786743164
    8. '<|end|>' → logprob: -10.50790786743164
    9. '            
' → logprob: -11.38290786743164
    10. '    
' → logprob: -11.50790786743164

Token 1463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016599055379629135
    2. '       ' → logprob: -4.266599178314209
    3. '
' → logprob: -6.516599178314209
    4. '            
' → logprob: -8.14159870147705
    5. '    
' → logprob: -8.76659870147705
    6. '        
' → logprob: -8.89159870147705
    7. '	       ' → logprob: -9.51659870147705
    8. '		' → logprob: -9.76659870147705
    9. 'elif' → logprob: -9.89159870147705
    10. '   ' → logprob: -10.14159870147705

Token 1464: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003976054955273867
    2. '
' → logprob: -6.128975868225098
    3. 'elif' → logprob: -6.628975868225098
    4. ' elif' → logprob: -8.503975868225098
    5. 'else' (adapté à ' else') → logprob: -9.628975868225098
    6. '           ' → logprob: -9.753975868225098
    7. ' else' → logprob: -10.128975868225098
    8. 'return' → logprob: -10.628975868225098
    9. '        
' → logprob: -11.003975868225098
    10. 'if' → logprob: -11.128975868225098

Token 1465: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20868158340454102
    2. ':' → logprob: -2.083681583404541
    3. '           ' → logprob: -4.208681583404541
    4. ' if' → logprob: -4.208681583404541
    5. ':
' → logprob: -4.333681583404541
    6. 'if' → logprob: -4.958681583404541
    7. '       ' → logprob: -5.458681583404541
    8. ',' → logprob: -6.208681583404541
    9. ':return' → logprob: -6.833681583404541
    10. '<|end|>' → logprob: -6.833681583404541

Token 1466: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6301845908164978
    2. '               ' → logprob: -1.0051846504211426
    3. ' return' → logprob: -2.5051846504211426
    4. '           ' → logprob: -4.005184650421143
    5. '            ' → logprob: -7.630184650421143
    6. 'Direction' → logprob: -8.630184173583984
    7. '              ' → logprob: -8.630184173583984
    8. '   ' → logprob: -8.755184173583984
    9. '             ' → logprob: -8.880184173583984
    10. '       ' → logprob: -9.005184173583984

Token 1467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12785407900810242
    2. ' return' → logprob: -2.127854108810425
    3. 'Direction' → logprob: -7.127853870391846
    4. 'Return' → logprob: -10.127854347229004
    5. '               ' → logprob: -10.127854347229004
    6. 'eturn' → logprob: -10.752854347229004
    7. ' Direction' → logprob: -11.502854347229004
    8. '	return' → logprob: -13.002854347229004
    9. ' ' → logprob: -13.127854347229004
    10. '   ' → logprob: -13.127854347229004

Token 1468: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -5.848420551046729e-05
    2. ' Direction' → logprob: -9.7500581741333
    3. 'Directional' → logprob: -16.500059127807617
    4. '(Direction' → logprob: -17.875059127807617
    5. 'North' → logprob: -18.250059127807617
    6. '.Direction' → logprob: -18.250059127807617
    7. '   ' → logprob: -18.625059127807617
    8. 'Directions' → logprob: -19.500059127807617
    9. ' ' → logprob: -19.750059127807617
    10. 'direction' → logprob: -20.250059127807617

Token 1469: '.NORTH' (ID: 152731)
  Prédit: '.NORTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.NORTH' → logprob: -2.534558552724775e-05
    2. '.' → logprob: -10.875025749206543
    3. 'N' → logprob: -12.375025749206543
    4. '.N' → logprob: -13.625025749206543
    5. '   ' → logprob: -14.500025749206543
    6. '['' → logprob: -15.250025749206543
    7. 'north' → logprob: -17.750024795532227
    8. '`' → logprob: -18.000024795532227
    9. ''N' → logprob: -18.000024795532227
    10. '  ' → logprob: -18.250024795532227

Token 1470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00060307263629511
    2. '<|end|>' → logprob: -7.875603199005127
    3. '	' → logprob: -9.125602722167969
    4. '<|end|>' → logprob: -10.625602722167969
    5. '
' → logprob: -11.125602722167969
    6. '        
' → logprob: -11.125602722167969
    7. 'elif' → logprob: -11.875602722167969
    8. '	       ' → logprob: -12.000602722167969
    9. '        ' → logprob: -12.000602722167969
    10. '	elif' → logprob: -12.125602722167969

Token 1471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002854924649000168
    2. '<|end|>' → logprob: -6.002854824066162
    3. '	' → logprob: -9.12785530090332
    4. '        
' → logprob: -9.62785530090332
    5. '        ' → logprob: -10.00285530090332
    6. '<|end|>' → logprob: -10.37785530090332
    7. '	       ' → logprob: -10.75285530090332
    8. '      ' → logprob: -11.62785530090332
    9. '[' → logprob: -11.62785530090332
    10. '
' → logprob: -11.75285530090332

Token 1472: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028587589040398598
    2. 'else' → logprob: -4.403587818145752
    3. ' else' → logprob: -4.403587818145752
    4. 'elif' (adapté à ' elif') → logprob: -6.528587818145752
    5. '   ' → logprob: -6.778587818145752
    6. ' elif' → logprob: -7.528587818145752
    7. '
' → logprob: -8.153587341308594
    8. 'if' → logprob: -8.903587341308594
    9. ' if' → logprob: -9.653587341308594
    10. '           ' → logprob: -10.528587341308594

Token 1473: ' c' (ID: 274)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.33303573727607727
    2. 'c' → logprob: -1.9580357074737549
    3. ' ord' → logprob: -2.333035707473755
    4. '(ord' → logprob: -3.708035707473755
    5. 'abs' → logprob: -4.333035945892334
    6. ' c' → logprob: -5.208035945892334
    7. 'chr' → logprob: -7.208035945892334
    8. ' abs' → logprob: -8.083035469055176
    9. ' (' → logprob: -8.083035469055176
    10. '   ' → logprob: -8.208035469055176

Token 1474: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00022725824965164065
    2. 'from' → logprob: -8.625226974487305
    3. '_to' → logprob: -10.250226974487305
    4. '.from' → logprob: -11.625226974487305
    5. '._' → logprob: -13.500226974487305
    6. '_FROM' → logprob: -14.875226974487305
    7. '_w' → logprob: -15.000226974487305
    8. '.' → logprob: -15.500226974487305
    9. 'From' → logprob: -15.750226974487305
    10. '_.' → logprob: -15.750226974487305

Token 1475: '.n' (ID: 1835)
  Prédit: '.e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.e' → logprob: -9.913265239447355e-05
    2. '.' → logprob: -9.375099182128906
    3. 'east' → logprob: -11.625099182128906
    4. ' .' → logprob: -12.625099182128906
    5. '.eas' → logprob: -14.375099182128906
    6. '   ' → logprob: -15.375099182128906
    7. '.E' → logprob: -15.375099182128906
    8. '.w' → logprob: -15.750099182128906
    9. '.eclipse' → logprob: -16.125099182128906
    10. ' ' → logprob: -16.375099182128906

Token 1476: 'orth' (ID: 2909)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.02943674474954605
    2. 'west' → logprob: -4.4044365882873535
    3. 'east' → logprob: -4.6544365882873535
    4. 'ew' → logprob: -5.5294365882873535
    5. 'w' → logprob: -6.2794365882873535
    6. '_to' → logprob: -7.9044365882873535
    7. 'orth' → logprob: -8.529437065124512
    8. 'ow' → logprob: -8.654437065124512
    9. '_' → logprob: -8.779437065124512
    10. 'e' → logprob: -9.029437065124512

Token 1477: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.173704271830502e-06
    2. '_w' → logprob: -13.25000286102295
    3. 's' → logprob: -14.50000286102295
    4. 'south' → logprob: -14.62500286102295
    5. '_n' → logprob: -16.500003814697266
    6. '_' → logprob: -17.250003814697266
    7. '\' → logprob: -17.375003814697266
    8. 'e' → logprob: -17.750003814697266
    9. '```' → logprob: -17.750003814697266
    10. '_e' → logprob: -17.875003814697266

Token 1478: 'outh' (ID: 4656)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.21691112220287323
    2. 'south' → logprob: -1.7169110774993896
    3. '_w' → logprob: -4.591911315917969
    4. 's' → logprob: -5.966911315917969
    5. 'w' → logprob: -6.091911315917969
    6. 'north' → logprob: -8.966911315917969
    7. '_' → logprob: -9.841911315917969
    8. 'sou' → logprob: -9.966911315917969
    9. 'ns' → logprob: -10.341911315917969
    10. 'South' → logprob: -10.466911315917969

Token 1479: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20555473864078522
    2. '==' → logprob: -1.830554723739624
    3. ' <' → logprob: -4.330554962158203
    4. ' >' → logprob: -4.455554962158203
    5. '<' → logprob: -7.955554962158203
    6. '>' → logprob: -8.080554962158203
    7. '<|end|>' → logprob: -11.205554962158203
    8. '=' → logprob: -11.330554962158203
    9. ' ' → logprob: -11.955554962158203
    10. ' =' → logprob: -12.205554962158203

Token 1480: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002805110299959779
    2. ' c' → logprob: -5.877805233001709
    3. '   ' → logprob: -16.377805709838867
    4. '	c' → logprob: -16.377805709838867
    5. ' ' → logprob: -17.377805709838867
    6. ')c' → logprob: -17.752805709838867
    7. '       ' → logprob: -18.627805709838867
    8. '  ' → logprob: -18.877805709838867
    9. '[c' → logprob: -19.127805709838867
    10. 'ct' → logprob: -19.127805709838867

Token 1481: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0012259430950507522
    2. 'to' → logprob: -6.87622594833374
    3. 'c' → logprob: -9.501225471496582
    4. 'To' → logprob: -9.501225471496582
    5. 'n' → logprob: -10.751225471496582
    6. 'ns' → logprob: -11.501225471496582
    7. 't' → logprob: -13.126225471496582
    8. '_from' → logprob: -13.126225471496582
    9. '_TO' → logprob: -13.376225471496582
    10. '_t' → logprob: -13.751225471496582

Token 1482: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.010768238455057144
    2. '_n' → logprob: -5.260768413543701
    3. 'north' → logprob: -5.260768413543701
    4. 'n' → logprob: -8.760767936706543
    5. '_.' → logprob: -9.385767936706543
    6. 'North' → logprob: -11.135767936706543
    7. '_' → logprob: -11.885767936706543
    8. '_s' → logprob: -12.010767936706543
    9. ',n' → logprob: -12.260767936706543
    10. 'from' → logprob: -12.260767936706543

Token 1483: 'orth' (ID: 2909)
  Prédit: 'south'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'south' → logprob: -0.6832273602485657
    2. 'orth' → logprob: -1.933227300643921
    3. '_to' → logprob: -2.058227300643921
    4. 'north' → logprob: -2.183227300643921
    5. '_s' → logprob: -2.308227300643921
    6. '_from' → logprob: -5.8082275390625
    7. 's' → logprob: -6.0582275390625
    8. '.s' → logprob: -7.3082275390625
    9. 'To' → logprob: -7.4332275390625
    10. '_n' → logprob: -7.6832275390625

Token 1484: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0010696083772927523
    2. 'south' → logprob: -7.62606954574585
    3. 's' → logprob: -7.75106954574585
    4. '_w' → logprob: -9.001070022583008
    5. 'w' → logprob: -12.001070022583008
    6. 'South' → logprob: -12.126070022583008
    7. 'sou' → logprob: -13.001070022583008
    8. '_to' → logprob: -13.126070022583008
    9. 'to' → logprob: -13.501070022583008
    10. 'ns' → logprob: -13.626070022583008

Token 1485: 'outh' (ID: 4656)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3750518262386322
    2. 'outh' → logprob: -1.2500518560409546
    3. 'south' → logprob: -3.875051736831665
    4. 's' → logprob: -5.375051975250244
    5. 'sou' → logprob: -8.375051498413086
    6. 'orth' → logprob: -9.250051498413086
    7. 'South' → logprob: -9.375051498413086
    8. '_to' → logprob: -9.500051498413086
    9. '_out' → logprob: -9.500051498413086
    10. 'out' → logprob: -10.125051498413086

Token 1486: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1587768942117691
    2. ':' → logprob: -2.5337769985198975
    3. ' and' → logprob: -3.1587769985198975
    4. '       ' → logprob: -4.658776760101318
    5. 'and' → logprob: -4.658776760101318
    6. '           ' → logprob: -5.283776760101318
    7. '	       ' → logprob: -8.783777236938477
    8. ',' → logprob: -8.908777236938477
    9. '{
' → logprob: -8.908777236938477
    10. '<|end|>' → logprob: -9.533777236938477

Token 1487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36275169253349304
    2. ':' → logprob: -1.8627517223358154
    3. '       ' → logprob: -2.3627517223358154
    4. ':
' → logprob: -3.1127517223358154
    5. ' and' → logprob: -5.612751483917236
    6. '        ' → logprob: -6.737751483917236
    7. '               ' → logprob: -6.862751483917236
    8. '<|end|>' → logprob: -7.112751483917236
    9. ':return' → logprob: -7.487751483917236
    10. '[' → logprob: -7.487751483917236

Token 1488: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013639183714985847
    2. ' if' → logprob: -4.388638973236084
    3. '           ' → logprob: -6.888638973236084
    4. 'return' → logprob: -9.638639450073242
    5. '               ' → logprob: -10.388639450073242
    6. '	if' → logprob: -12.513639450073242
    7. '       ' → logprob: -13.013639450073242
    8. '	       ' → logprob: -13.138639450073242
    9. '        ' → logprob: -13.763639450073242
    10. 'If' → logprob: -14.138639450073242

Token 1489: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.48759129643440247
    2. 'ord' → logprob: -1.61259126663208
    3. ' c' → logprob: -2.11259126663208
    4. ' ord' → logprob: -2.73759126663208
    5. '(ord' → logprob: -7.23759126663208
    6. '   ' → logprob: -9.987591743469238
    7. 'chr' → logprob: -10.487591743469238
    8. '	c' → logprob: -11.050091743469238
    9. 'ords' → logprob: -11.050091743469238
    10. ' (' → logprob: -11.737591743469238

Token 1490: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00023357603640761226
    2. '_to' → logprob: -8.62523365020752
    3. 'from' → logprob: -9.87523365020752
    4. 'From' → logprob: -13.25023365020752
    5. '.from' → logprob: -14.87523365020752
    6. '_FROM' → logprob: -16.000232696533203
    7. '_From' → logprob: -17.125232696533203
    8. '
' → logprob: -17.250232696533203
    9. '_for' → logprob: -17.375232696533203
    10. '_form' → logprob: -17.625232696533203

Token 1491: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.005263645201921463
    2. 'east' → logprob: -5.255263805389404
    3. '.' → logprob: -10.880263328552246
    4. 'e' → logprob: -11.880263328552246
    5. '_e' → logprob: -13.880263328552246
    6. ' east' → logprob: -14.255263328552246
    7. '.eas' → logprob: -14.630263328552246
    8. '```' → logprob: -14.755263328552246
    9. 'East' → logprob: -15.130263328552246
    10. ' .' → logprob: -15.630263328552246

Token 1492: 'ast' (ID: 629)
  Prédit: 'ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.11524809896945953
    2. '_w' → logprob: -2.240248203277588
    3. 'w' → logprob: -6.615248203277588
    4. 'east' → logprob: -8.49024772644043
    5. '_ast' → logprob: -8.61524772644043
    6. '_' → logprob: -8.74024772644043
    7. 'a' → logprob: -8.86524772644043
    8. 'west' → logprob: -8.86524772644043
    9. '
' → logprob: -10.24024772644043
    10. 'st' → logprob: -10.36524772644043

Token 1493: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.27099974633893e-05
    2. 'w' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.125012397766113
    4. 'west' → logprob: -15.500012397766113
    5. '_' → logprob: -15.750012397766113
    6. 'a' → logprob: -16.37501335144043
    7. '_ro' → logprob: -16.62501335144043
    8. 'ew' → logprob: -16.75001335144043
    9. '\' → logprob: -16.87501335144043
    10. '_v' → logprob: -17.00001335144043

Token 1494: 'est' (ID: 376)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.005405576433986425
    2. 'west' → logprob: -5.630405426025391
    3. 'est' → logprob: -6.505405426025391
    4. 'w' → logprob: -8.13040542602539
    5. 'ew' → logprob: -12.25540542602539
    6. '   ' → logprob: -13.38040542602539
    7. '_' → logprob: -13.75540542602539
    8. 'vest' → logprob: -13.88040542602539
    9. '-west' → logprob: -14.00540542602539
    10. 'st' → logprob: -14.13040542602539

Token 1495: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.428870290517807
    2. '<' → logprob: -1.0538703203201294
    3. '<W' → logprob: -10.05387020111084
    4. '<char' → logprob: -10.67887020111084
    5. '<E' → logprob: -10.80387020111084
    6. '<c' → logprob: -11.05387020111084
    7. '<int' → logprob: -11.55387020111084
    8. ' >' → logprob: -11.67887020111084
    9. '<w' → logprob: -11.80387020111084
    10. '>' → logprob: -11.92887020111084

Token 1496: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04299987852573395
    2. ' c' → logprob: -3.1679999828338623
    3. ')c' → logprob: -16.042999267578125
    4. '	c' → logprob: -16.167999267578125
    5. ' ' → logprob: -16.542999267578125
    6. 'cation' → logprob: -16.792999267578125
    7. '   ' → logprob: -17.042999267578125
    8. '_c' → logprob: -17.417999267578125
    9. ' ' → logprob: -17.417999267578125
    10. '=c' → logprob: -17.542999267578125

Token 1497: '_to' (ID: 5089)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006314247148111463
    2. '_to' → logprob: -7.875631332397461
    3. ' c' → logprob: -8.375631332397461
    4. 'to' → logprob: -11.750631332397461
    5. 'To' → logprob: -11.875631332397461
    6. '_c' → logprob: -13.250631332397461
    7. '   ' → logprob: -13.750631332397461
    8. '  ' → logprob: -15.000631332397461
    9. ' ' → logprob: -15.125631332397461
    10. '(c' → logprob: -15.250631332397461

Token 1498: '.e' (ID: 2560)
  Prédit: '.c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.5376231074333191
    2. 'c' → logprob: -1.0376231670379639
    3. ' c' → logprob: -3.537623167037964
    4. '_to' → logprob: -3.912623167037964
    5. '_e' → logprob: -5.162622928619385
    6. 'e' → logprob: -6.037622928619385
    7. '_c' → logprob: -6.287622928619385
    8. '.e' → logprob: -6.662622928619385
    9. 'to' → logprob: -7.787622928619385
    10. 'To' → logprob: -8.037623405456543

Token 1499: 'ast' (ID: 629)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.01850540190935135
    2. 'ast' → logprob: -4.143505573272705
    3. 'west' → logprob: -6.893505573272705
    4. '_to' → logprob: -7.143505573272705
    5. 'w' → logprob: -7.643505573272705
    6. 'st' → logprob: -9.143505096435547
    7. '_from' → logprob: -10.393505096435547
    8. '_ast' → logprob: -10.893505096435547
    9. '_' → logprob: -12.393505096435547
    10. '_st' → logprob: -12.643505096435547

Token 1500: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0001601539261173457
    2. '_to' → logprob: -9.625160217285156
    3. 'west' → logprob: -9.750160217285156
    4. 'w' → logprob: -11.125160217285156
    5. 'to' → logprob: -11.375160217285156
    6. 'West' → logprob: -13.000160217285156
    7. '_from' → logprob: -13.375160217285156
    8. 'from' → logprob: -13.625160217285156
    9. '
' → logprob: -14.125160217285156
    10. '_' → logprob: -14.250160217285156

Token 1501: 'est' (ID: 376)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.2380673736333847
    2. 'est' → logprob: -1.738067388534546
    3. '_w' → logprob: -3.613067388534546
    4. 'st' → logprob: -5.613067150115967
    5. 'West' → logprob: -5.738067150115967
    6. 'w' → logprob: -6.363067150115967
    7. 'rest' → logprob: -8.613067626953125
    8. '
' → logprob: -9.488067626953125
    9. 'vest' → logprob: -10.113067626953125
    10. 'ost' → logprob: -10.863067626953125

Token 1502: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15670154988765717
    2. ':' → logprob: -2.5317015647888184
    3. '               ' → logprob: -2.7817015647888184
    4. ':return' → logprob: -5.781701564788818
    5. '           ' → logprob: -8.28170108795166
    6. 'return' → logprob: -9.78170108795166
    7. '):
' → logprob: -10.03170108795166
    8. ' :
' → logprob: -10.40670108795166
    9. '():
' → logprob: -11.15670108795166
    10. '{
' → logprob: -11.28170108795166

Token 1503: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3293552100658417
    2. ' return' → logprob: -1.829355239868164
    3. 'return' → logprob: -2.329355239868164
    4. ''' → logprob: -3.954355239868164
    5. ':return' → logprob: -6.454355239868164
    6. '           ' → logprob: -7.204355239868164
    7. '"' → logprob: -7.704355239868164
    8. ':' → logprob: -8.454355239868164
    9. ' :' → logprob: -9.454355239868164
    10. ' '' → logprob: -9.454355239868164

Token 1504: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08268103748559952
    2. ' return' → logprob: -2.5826809406280518
    3. '               ' → logprob: -5.582681179046631
    4. '	return' → logprob: -11.582680702209473
    5. '           ' → logprob: -11.957680702209473
    6. 'eturn' → logprob: -13.082680702209473
    7. ' ' → logprob: -14.207680702209473
    8. ' ' → logprob: -14.332680702209473
    9. ':return' → logprob: -14.332680702209473
    10. '   ' → logprob: -14.582680702209473

Token 1505: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.00043102685594931245
    2. ' Direction' → logprob: -7.750431060791016
    3. 'Directional' → logprob: -15.125431060791016
    4. '(Direction' → logprob: -19.625431060791016
    5. 'Directions' → logprob: -19.875431060791016
    6. '.Direction' → logprob: -20.000431060791016
    7. '_direction' → logprob: -21.125431060791016
    8. ' direction' → logprob: -21.250431060791016
    9. 'direction' → logprob: -21.500431060791016
    10. '   ' → logprob: -22.625431060791016

Token 1506: '.E' (ID: 9032)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.04040059074759483
    2. '.E' → logprob: -3.290400505065918
    3. ''E' → logprob: -6.415400505065918
    4. 'East' → logprob: -7.540400505065918
    5. '.' → logprob: -10.040400505065918
    6. ' EAST' → logprob: -10.040400505065918
    7. '   ' → logprob: -10.540400505065918
    8. '"E' → logprob: -11.040400505065918
    9. 'east' → logprob: -11.415400505065918
    10. 'Direction' → logprob: -12.040400505065918

Token 1507: 'AST' (ID: 10141)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0002728985855355859
    2. 'ast' → logprob: -8.750272750854492
    3. 'AST' → logprob: -9.750272750854492
    4. ''' → logprob: -9.875272750854492
    5. '(W' → logprob: -14.125272750854492
    6. 'E' → logprob: -14.875272750854492
    7. '(ast' → logprob: -15.125272750854492
    8. '`' → logprob: -15.125272750854492
    9. '}' → logprob: -15.250272750854492
    10. '	W' → logprob: -15.250272750854492

Token 1508: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4122283458709717
    2. '           ' → logprob: -1.5372283458709717
    3. ' else' → logprob: -2.5372283458709717
    4. 'else' → logprob: -3.2872283458709717
    5. '       ' → logprob: -5.412228584289551
    6. '<|end|>' → logprob: -6.912228584289551
    7. '<|end|>' → logprob: -8.78722858428955
    8. '                
' → logprob: -8.91222858428955
    9. '	else' → logprob: -9.91222858428955
    10. '	       ' → logprob: -10.03722858428955

Token 1509: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008718935772776604
    2. '           ' → logprob: -5.008718967437744
    3. ' else' → logprob: -6.383718967437744
    4. 'else' → logprob: -8.383718490600586
    5. '       ' → logprob: -10.758718490600586
    6. '                   ' → logprob: -11.383718490600586
    7. ':
' → logprob: -11.758718490600586
    8. '                
' → logprob: -11.883718490600586
    9. ' return' → logprob: -12.008718490600586
    10. 'return' → logprob: -12.133718490600586

Token 1510: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026998838409781456
    2. 'else' (adapté à ' else') → logprob: -3.77699875831604
    3. ' else' → logprob: -6.026998996734619
    4. '               ' → logprob: -6.651998996734619
    5. 'return' → logprob: -10.276998519897461
    6. '       ' → logprob: -12.151998519897461
    7. '
' → logprob: -14.526998519897461
    8. '          ' → logprob: -15.026998519897461
    9. 'elif' → logprob: -15.026998519897461
    10. '	       ' → logprob: -15.401998519897461

Token 1511: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09863826632499695
    2. ':
' → logprob: -2.5986382961273193
    3. ':' → logprob: -4.72363805770874
    4. ':return' → logprob: -5.09863805770874
    5. 'return' → logprob: -5.47363805770874
    6. ' return' → logprob: -8.223638534545898
    7. 'eturn' → logprob: -10.098638534545898
    8. '              ' → logprob: -10.598638534545898
    9. ' :
' → logprob: -12.223638534545898
    10. '           ' → logprob: -12.473638534545898

Token 1512: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7218404412269592
    2. 'return' → logprob: -0.7218404412269592
    3. ' return' → logprob: -3.5968403816223145
    4. 'Direction' → logprob: -7.4718403816223145
    5. ':return' → logprob: -8.971840858459473
    6. 'Return' → logprob: -9.596840858459473
    7. '           ' → logprob: -9.721840858459473
    8. '              ' → logprob: -11.346840858459473
    9. '                   ' → logprob: -12.346840858459473
    10. '             ' → logprob: -12.346840858459473

Token 1513: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014163863845169544
    2. ' return' → logprob: -4.264163970947266
    3. 'eturn' → logprob: -15.889163970947266
    4. '               ' → logprob: -16.264163970947266
    5. 'Return' → logprob: -16.514163970947266
    6. '           ' → logprob: -18.014163970947266
    7. ':return' → logprob: -18.014163970947266
    8. '                   ' → logprob: -18.139163970947266
    9. ' ' → logprob: -18.514163970947266
    10. 'Direction' → logprob: -18.764163970947266

Token 1514: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -6.2729995988775045e-06
    2. ' Direction' → logprob: -12.000006675720215
    3. 'Directional' → logprob: -18.1250057220459
    4. '.Direction' → logprob: -21.1250057220459
    5. 'direction' → logprob: -21.2500057220459
    6. '_direction' → logprob: -21.3750057220459
    7. '
' → logprob: -21.5000057220459
    8. 'Directions' → logprob: -21.6250057220459
    9. '(Direction' → logprob: -22.0000057220459
    10. '   ' → logprob: -22.8750057220459

Token 1515: '.WEST' (ID: 177563)
  Prédit: '.WEST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.WEST' → logprob: -0.00021212305000517517
    2. 'Direction' → logprob: -9.000211715698242
    3. 'WEST' → logprob: -9.375211715698242
    4. '.' → logprob: -13.500211715698242
    5. '.Direction' → logprob: -13.625211715698242
    6. '.W' → logprob: -15.000211715698242
    7. '.NORTH' → logprob: -15.000211715698242
    8. '   ' → logprob: -15.500211715698242
    9. ''' → logprob: -16.000211715698242
    10. 'West' → logprob: -16.250211715698242

Token 1516: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1517: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1518: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1519: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6810376644134521
    2. ':
' → logprob: -0.8060376644134521
    3. '       ' → logprob: -3.556037664413452
    4. '           ' → logprob: -4.056037902832031
    5. ':return' → logprob: -7.681037902832031
    6. '<|end|>' → logprob: -8.306037902832031
    7. '   ' → logprob: -9.181037902832031
    8. '        ' → logprob: -9.306037902832031
    9. '               ' → logprob: -9.681037902832031
    10. '<|end|>' → logprob: -9.681037902832031

Token 1520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017940141260623932
    2. '       ' → logprob: -4.392940044403076
    3. 'return' → logprob: -5.517940044403076
    4. 'None' → logprob: -7.017940044403076
    5. ' return' → logprob: -7.767940044403076
    6. ' None' → logprob: -10.017940521240234
    7. '               ' → logprob: -10.392940521240234
    8. '   ' → logprob: -13.267940521240234
    9. '	       ' → logprob: -13.642940521240234
    10. '
' → logprob: -14.017940521240234

Token 1521: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00966412853449583
    2. '           ' → logprob: -5.009664058685303
    3. 'None' → logprob: -6.009664058685303
    4. ' return' → logprob: -7.884664058685303
    5. '       ' → logprob: -9.634664535522461
    6. '#' → logprob: -10.759664535522461
    7. 'raise' → logprob: -10.884664535522461
    8. ' None' → logprob: -12.134664535522461
    9. '               ' → logprob: -13.634664535522461
    10. '
' → logprob: -15.134664535522461

Token 1522: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.320199877838604e-07
    2. ' None' → logprob: -15.0
    3. '(None' → logprob: -21.5
    4. '   ' → logprob: -21.875
    5. '_None' → logprob: -22.25
    6. 'No' → logprob: -23.625
    7. '=None' → logprob: -23.875
    8. '       ' → logprob: -24.0
    9. ',None' → logprob: -24.0
    10. '           ' → logprob: -24.5

Token 1523: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023308252915740013
    2. 'class' → logprob: -3.898308277130127
    3. '#' → logprob: -6.273308277130127
    4. 'def' → logprob: -7.523308277130127
    5. '

' → logprob: -8.648307800292969
    6. '   ' → logprob: -9.273307800292969
    7. '
' → logprob: -10.023307800292969
    8. 'import' → logprob: -11.773307800292969
    9. '```' → logprob: -12.648307800292969
    10. '    
' → logprob: -12.898307800292969

Token 1524: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2694628834724426
    2. 'def' → logprob: -2.019462823867798
    3. '#' → logprob: -2.269462823867798
    4. '
' → logprob: -9.519462585449219
    5. 'import' → logprob: -10.144462585449219
    6. 'from' → logprob: -13.519462585449219
    7. '   ' → logprob: -13.894462585449219
    8. ' class' → logprob: -15.269462585449219
    9. '```' → logprob: -15.269462585449219
    10. 'INF' → logprob: -16.76946258544922

Token 1525: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5544627904891968
    2. '<|end|>' → logprob: -1.8044627904891968
    3. '#' → logprob: -2.3044629096984863
    4. 'class' → logprob: -2.4294629096984863
    5. '<|end|>' → logprob: -3.3044629096984863
    6. '   ' → logprob: -4.179462909698486
    7. '
' → logprob: -4.179462909698486
    8. '```' → logprob: -5.679462909698486
    9. ')' → logprob: -7.054462909698486
    10. ' def' → logprob: -7.804462909698486

Token 1526: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -1.9361264946837764e-07
    2. 'classmethod' → logprob: -16.0
    3. 'property' → logprob: -19.5
    4. 'static' → logprob: -20.625
    5. '@' → logprob: -22.25
    6. 'dat' → logprob: -22.375
    7. ' static' → logprob: -22.875
    8. '```' → logprob: -26.75
    9. 'Static' → logprob: -26.875
    10. '_static' → logprob: -27.0

Token 1527: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06427731364965439
    2. '(' → logprob: -3.439277410507202
    3. '   ' → logprob: -4.189277172088623
    4. ' def' → logprob: -4.314277172088623
    5. '(
' → logprob: -7.189277172088623
    6. '
' → logprob: -7.439277172088623
    7. ' (' → logprob: -9.064277648925781
    8. '	def' → logprob: -10.189277648925781
    9. '('' → logprob: -10.189277648925781
    10. '(def' → logprob: -10.189277648925781

Token 1528: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009418400935828686
    2. ' def' → logprob: -4.759418487548828
    3. '   ' → logprob: -7.759418487548828
    4. '(' → logprob: -8.384418487548828
    5. '(
' → logprob: -9.259418487548828
    6. '('' → logprob: -10.759418487548828
    7. '
' → logprob: -11.009418487548828
    8. '    
' → logprob: -12.384418487548828
    9. '()' → logprob: -13.634418487548828
    10. '("' → logprob: -13.884418487548828

Token 1529: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.73183855926618e-05
    2. ' def' → logprob: -10.000077247619629
    3. '
' → logprob: -10.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. 'staticmethod' → logprob: -14.750077247619629
    6. 'from' → logprob: -14.875077247619629
    7. '    
' → logprob: -15.375077247619629
    8. '	def' → logprob: -15.625077247619629
    9. 'classmethod' → logprob: -16.000078201293945
    10. 'return' → logprob: -16.250078201293945

Token 1530: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0007928356644697487
    2. 'reverse' → logprob: -7.250792980194092
    3. 'opp' → logprob: -10.125792503356934
    4. 'inverse' → logprob: -11.000792503356934
    5. 'per' → logprob: -11.375792503356934
    6. 'all' → logprob: -11.875792503356934
    7. 'invert' → logprob: -13.000792503356934
    8. 'other' → logprob: -13.000792503356934
    9. 'get' → logprob: -14.125792503356934
    10. 'is' → logprob: -14.375792503356934

Token 1531: '(direction' (ID: 97422)
  Prédit: '(direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(direction' → logprob: -0.00026848804554902017
    2. '(' → logprob: -8.750268936157227
    3. 'direction' → logprob: -10.000268936157227
    4. '(dir' → logprob: -10.125268936157227
    5. '(d' → logprob: -11.875268936157227
    6. '(def' → logprob: -12.375268936157227
    7. '(Direction' → logprob: -12.750268936157227
    8. '(op' → logprob: -12.875268936157227
    9. ' (' → logprob: -12.875268936157227
    10. '('' → logprob: -13.250268936157227

Token 1532: ':' (ID: 25)
  Prédit: '(direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(direction' → logprob: -0.004112950060516596
    2. 'direction' → logprob: -6.254112720489502
    3. '):
' → logprob: -6.379112720489502
    4. '   ' → logprob: -8.87911319732666
    5. '):' → logprob: -9.12911319732666
    6. ')(' → logprob: -9.37911319732666
    7. ' (' → logprob: -9.87911319732666
    8. '(d' → logprob: -10.50411319732666
    9. ')' → logprob: -10.75411319732666
    10. '(dir' → logprob: -11.00411319732666

Token 1533: ' str' (ID: 989)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.0049457852728664875
    2. ' direction' → logprob: -5.879945755004883
    3. '(direction' → logprob: -6.879945755004883
    4. 'dir' → logprob: -7.629945755004883
    5. ')' → logprob: -8.504945755004883
    6. '   ' → logprob: -8.629945755004883
    7. ''' → logprob: -9.754945755004883
    8. 'd' → logprob: -10.129945755004883
    9. 'Direction' → logprob: -10.629945755004883
    10. ''d' → logprob: -10.754945755004883

Token 1534: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02078302390873432
    2. '):' → logprob: -4.145782947540283
    3. ')' → logprob: -5.395782947540283
    4. '(direction' → logprob: -8.895783424377441
    5. ':' → logprob: -10.520783424377441
    6. '   ' → logprob: -10.770783424377441
    7. '):
' → logprob: -12.270783424377441
    8. 'direction' → logprob: -12.395783424377441
    9. ''):
' → logprob: -13.020783424377441
    10. ')
' → logprob: -13.395783424377441

Token 1535: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2141079157590866
    2. '       ' → logprob: -2.0891079902648926
    3. ' return' → logprob: -3.8391079902648926
    4. 'return' → logprob: -4.089107990264893
    5. '{
' → logprob: -4.464107990264893
    6. ''' → logprob: -4.964107990264893
    7. '<|end|>' → logprob: -6.339107990264893
    8. '    ' → logprob: -6.714107990264893
    9. '('' → logprob: -7.339107990264893
    10. '	return' → logprob: -7.339107990264893

Token 1536: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03234363719820976
    2. '       ' → logprob: -3.532343626022339
    3. ' if' → logprob: -6.032343864440918
    4. '   ' → logprob: -9.532343864440918
    5. 'mapping' → logprob: -9.782343864440918
    6. 'op' → logprob: -11.032343864440918
    7. 'dire' → logprob: -11.157343864440918
    8. 'return' (adapté à ' return') → logprob: -11.282343864440918
    9. '	if' → logprob: -12.282343864440918
    10. '
' → logprob: -12.907343864440918

Token 1537: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.26048752665519714
    2. '{
' → logprob: -1.5104875564575195
    3. '{' → logprob: -5.0104875564575195
    4. ''' → logprob: -6.7604875564575195
    5. ''N' → logprob: -8.38548755645752
    6. '{"' → logprob: -8.63548755645752
    7. ''E' → logprob: -8.88548755645752
    8. ''S' → logprob: -9.13548755645752
    9. '{
' → logprob: -11.88548755645752
    10. ' {'' → logprob: -12.01048755645752

Token 1538: 'N' (ID: 45)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.3159158527851105
    2. 'N' → logprob: -1.815915822982788
    3. ''E' → logprob: -2.565915822982788
    4. 'E' → logprob: -3.565915822982788
    5. ''' → logprob: -5.815916061401367
    6. '   ' → logprob: -10.565916061401367
    7. ''S' → logprob: -10.815916061401367
    8. '"N' → logprob: -11.565916061401367
    9. ''n' → logprob: -11.690916061401367
    10. ' '' → logprob: -11.940916061401367

Token 1539: '':'' (ID: 22947)
  Prédit: '':''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.1802172064781189
    2. '':' → logprob: -1.9302172660827637
    3. ''S' → logprob: -4.180217266082764
    4. ''' → logprob: -5.680217266082764
    5. 'S' → logprob: -7.055217266082764
    6. ':' → logprob: -8.805216789245605
    7. ''E' → logprob: -10.555216789245605
    8. ':'' → logprob: -11.180216789245605
    9. ':S' → logprob: -11.305216789245605
    10. ''O' → logprob: -12.180216789245605

Token 1540: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.57594895362854
    2. ''S' → logprob: -0.82594895362854
    3. ''s' → logprob: -12.075948715209961
    4. ''' → logprob: -13.575948715209961
    5. ' S' → logprob: -14.200948715209961
    6. '"S' → logprob: -14.200948715209961
    7. '{'' → logprob: -14.825948715209961
    8. '
' → logprob: -15.700948715209961
    9. '`' → logprob: -15.700948715209961
    10. '   ' → logprob: -15.825948715209961

Token 1541: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03708231821656227
    2. '',' → logprob: -3.4120824337005615
    3. ','' → logprob: -5.787082195281982
    4. ',
' → logprob: -8.78708267211914
    5. '','' → logprob: -9.16208267211914
    6. '       ' → logprob: -10.53708267211914
    7. ' ,' → logprob: -10.91208267211914
    8. ''' → logprob: -11.03708267211914
    9. '   ' → logprob: -11.28708267211914
    10. ''S' → logprob: -11.53708267211914

Token 1542: ' '' (ID: 461)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.0006223689415492117
    2. ''N' → logprob: -7.625622272491455
    3. '   ' → logprob: -9.750622749328613
    4. ''E' → logprob: -10.125622749328613
    5. ' '' → logprob: -10.875622749328613
    6. ''' → logprob: -11.250622749328613
    7. '       ' → logprob: -13.375622749328613
    8. '  ' → logprob: -15.000622749328613
    9. '     ' → logprob: -15.250622749328613
    10. '    ' → logprob: -15.250622749328613

Token 1543: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00011403311509639025
    2. ''S' → logprob: -9.125114440917969
    3. ''' → logprob: -13.000114440917969
    4. 'E' → logprob: -13.625114440917969
    5. ''s' → logprob: -13.625114440917969
    6. ' S' → logprob: -15.500114440917969
    7. 'N' → logprob: -16.00011444091797
    8. '"S' → logprob: -17.25011444091797
    9. '{'' → logprob: -18.37511444091797
    10. ''E' → logprob: -18.37511444091797

Token 1544: '':'' (ID: 22947)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.8501355648040771
    2. '':'' → logprob: -1.7251355648040771
    3. ':' → logprob: -1.8501355648040771
    4. ''' → logprob: -1.9751355648040771
    5. ':'' → logprob: -2.600135564804077
    6. '':' → logprob: -4.600135803222656
    7. ':E' → logprob: -5.725135803222656
    8. ''O' → logprob: -5.850135803222656
    9. '   ' → logprob: -5.850135803222656
    10. ''N' → logprob: -6.600135803222656

Token 1545: 'N' (ID: 45)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.3132789433002472
    2. 'N' → logprob: -1.3132789134979248
    3. ''' → logprob: -11.063279151916504
    4. ''n' → logprob: -13.688279151916504
    5. ' N' → logprob: -16.063278198242188
    6. '"N' → logprob: -16.438278198242188
    7. '['' → logprob: -17.063278198242188
    8. '{'' → logprob: -17.063278198242188
    9. 'n' → logprob: -17.313278198242188
    10. '('' → logprob: -18.688278198242188

Token 1546: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002187376143410802
    2. '',' → logprob: -6.252187252044678
    3. ' ,' → logprob: -8.752187728881836
    4. ',
' → logprob: -10.002187728881836
    5. ','' → logprob: -10.002187728881836
    6. '   ' → logprob: -12.752187728881836
    7. '       ' → logprob: -13.002187728881836
    8. ',E' → logprob: -13.252187728881836
    9. ''' → logprob: -14.252187728881836
    10. ''E' → logprob: -14.627187728881836

Token 1547: ' '' (ID: 461)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.0020076262298971415
    2. '   ' → logprob: -7.252007484436035
    3. ' '' → logprob: -7.377007484436035
    4. '{'' → logprob: -7.502007484436035
    5. ''' → logprob: -10.127007484436035
    6. '['' → logprob: -10.752007484436035
    7. '       ' → logprob: -11.002007484436035
    8. ''N' → logprob: -11.252007484436035
    9. '’E' → logprob: -12.627007484436035
    10. ''S' → logprob: -12.752007484436035

Token 1548: 'E' (ID: 36)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.0027048930060118437
    2. 'E' → logprob: -6.252705097198486
    3. ''' → logprob: -7.502705097198486
    4. ''N' → logprob: -8.502704620361328
    5. ''e' → logprob: -11.877704620361328
    6. '   ' → logprob: -12.252704620361328
    7. 'W' → logprob: -13.002704620361328
    8. ' '' → logprob: -13.002704620361328
    9. '['' → logprob: -14.127704620361328
    10. '’E' → logprob: -14.127704620361328

Token 1549: '':'' (ID: 22947)
  Prédit: '':''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.02470940165221691
    2. '','' → logprob: -4.149709224700928
    3. '',' → logprob: -5.024709224700928
    4. ''' → logprob: -6.524709224700928
    5. '':' → logprob: -7.649709224700928
    6. ':'' → logprob: -9.399709701538086
    7. ':' → logprob: -10.899709701538086
    8. ','' → logprob: -12.274709701538086
    9. ''S' → logprob: -12.399709701538086
    10. ',' → logprob: -12.899709701538086

Token 1550: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.5759487152099609
    2. ''' → logprob: -0.8259487152099609
    3. '"W' → logprob: -11.825948715209961
    4. '['' → logprob: -14.200948715209961
    5. ' W' → logprob: -14.450948715209961
    6. ''w' → logprob: -14.700948715209961
    7. '`' → logprob: -15.825948715209961
    8. '	W' → logprob: -16.32594871520996
    9. '```' → logprob: -17.20094871520996
    10. ''O' → logprob: -17.57594871520996

Token 1551: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015634235460311174
    2. '',' → logprob: -7.001563549041748
    3. ','' → logprob: -8.00156307220459
    4. ' ,' → logprob: -8.25156307220459
    5. ',
' → logprob: -10.12656307220459
    6. '       ' → logprob: -11.87656307220459
    7. '   ' → logprob: -12.37656307220459
    8. ' ,'' → logprob: -13.37656307220459
    9. ''' → logprob: -13.75156307220459
    10. '}' → logprob: -14.75156307220459

Token 1552: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008247767575085163
    2. ' '' → logprob: -4.8832478523254395
    3. '   ' → logprob: -8.008247375488281
    4. ''E' → logprob: -8.758247375488281
    5. ''O' → logprob: -10.008247375488281
    6. '"W' → logprob: -10.758247375488281
    7. '       ' → logprob: -11.383247375488281
    8. ''U' → logprob: -11.508247375488281
    9. '     ' → logprob: -11.633247375488281
    10. ' ' → logprob: -11.633247375488281

Token 1553: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.4794944226741791
    2. ''' → logprob: -0.9794944524765015
    3. ''E' → logprob: -5.604494571685791
    4. ''w' → logprob: -7.479494571685791
    5. ''O' → logprob: -7.979494571685791
    6. ' '' → logprob: -8.104494094848633
    7. '"W' → logprob: -8.479494094848633
    8. '   ' → logprob: -9.229494094848633
    9. '['' → logprob: -9.729494094848633
    10. ' W' → logprob: -9.979494094848633

Token 1554: '':'' (ID: 22947)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.5933673977851868
    2. '}' → logprob: -1.093367338180542
    3. ''' → logprob: -2.968367338180542
    4. '}'' → logprob: -3.843367338180542
    5. '':'' → logprob: -3.843367338180542
    6. '':' → logprob: -4.718367576599121
    7. '['' → logprob: -6.093367576599121
    8. '}[' → logprob: -6.968367576599121
    9. ''E' → logprob: -6.968367576599121
    10. ':' → logprob: -7.343367576599121

Token 1555: 'E' (ID: 36)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.0005675682332366705
    2. 'E' → logprob: -7.500567436218262
    3. ''e' → logprob: -12.625567436218262
    4. ''' → logprob: -12.750567436218262
    5. '"E' → logprob: -12.750567436218262
    6. ' '' → logprob: -13.125567436218262
    7. '’E' → logprob: -13.625567436218262
    8. '   ' → logprob: -14.375567436218262
    9. ''S' → logprob: -14.625567436218262
    10. '{'' → logprob: -14.875567436218262

Token 1556: ''}' (ID: 17352)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.10078582167625427
    2. '}[' → logprob: -2.475785732269287
    3. ''}' → logprob: -4.475785732269287
    4. '   ' → logprob: -9.225786209106445
    5. '}.' → logprob: -9.225786209106445
    6. '}'' → logprob: -9.975786209106445
    7. '       ' → logprob: -10.100786209106445
    8. '}
' → logprob: -10.100786209106445
    9. ''' → logprob: -10.600786209106445
    10. ' }' → logprob: -11.100786209106445

Token 1557: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018214354058727622
    2. '   ' → logprob: -6.376821517944336
    3. '
' → logprob: -10.126821517944336
    4. 'def' → logprob: -11.001821517944336
    5. '}[' → logprob: -11.501821517944336
    6. '.get' → logprob: -11.751821517944336
    7. '[
' → logprob: -12.126821517944336
    8. '[(' → logprob: -12.251821517944336
    9. '```' → logprob: -12.501821517944336
    10. '}' → logprob: -12.501821517944336

Token 1558: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.0206720617134124e-05
    2. ' direction' → logprob: -11.50001049041748
    3. '(direction' → logprob: -18.625009536743164
    4. '   ' → logprob: -19.125009536743164
    5. ' ' → logprob: -20.500009536743164
    6. 'dire' → logprob: -20.875009536743164
    7. ')' → logprob: -22.000009536743164
    8. '
' → logprob: -22.250009536743164
    9. 'Direction' → logprob: -22.250009536743164
    10. 'directory' → logprob: -22.375009536743164

Token 1559: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5522833466529846
    2. ')' → logprob: -1.5522832870483398
    3. '}' → logprob: -1.5522832870483398
    4. '<|end|>' → logprob: -7.92728328704834
    5. '']' → logprob: -8.55228328704834
    6. '   ' → logprob: -8.67728328704834
    7. '[' → logprob: -11.17728328704834
    8. '<|end|>' → logprob: -11.30228328704834
    9. '】' → logprob: -11.42728328704834
    10. ' }' → logprob: -11.55228328704834

Token 1560: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011010446585714817
    2. 'def' → logprob: -4.636010646820068
    3. 'class' → logprob: -7.261010646820068
    4. '
' → logprob: -7.886010646820068
    5. ' def' → logprob: -9.88601016998291
    6. '#' → logprob: -10.26101016998291
    7. '```' → logprob: -10.51101016998291
    8. 'import' → logprob: -11.13601016998291
    9. '       ' → logprob: -11.51101016998291
    10. '    ' → logprob: -11.88601016998291

Token 1561: ' State' (ID: 5388)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08493178337812424
    2. '#' → logprob: -3.0849318504333496
    3. 'class' → logprob: -3.3349318504333496
    4. '   ' → logprob: -9.834931373596191
    5. 'import' → logprob: -11.209931373596191
    6. '
' → logprob: -11.959931373596191
    7. ' def' → logprob: -14.709931373596191
    8. 'from' → logprob: -15.084931373596191
    9. ' #' → logprob: -15.709931373596191
    10. '```' → logprob: -15.834931373596191

Token 1562: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0005020392127335072
    2. ' class' → logprob: -8.25050163269043
    3. '
' → logprob: -8.62550163269043
    4. ':' → logprob: -10.75050163269043
    5. ':
' → logprob: -11.00050163269043
    6. '#' → logprob: -12.37550163269043
    7. '<|end|>' → logprob: -12.37550163269043
    8. '(
' → logprob: -12.50050163269043
    9. 'from' → logprob: -12.62550163269043
    10. '<class' → logprob: -13.12550163269043

Token 1563: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6529290080070496
    2. 'def' → logprob: -1.1529290676116943
    3. 'd' → logprob: -2.1529290676116943
    4. 'the' → logprob: -3.5279290676116943
    5. ' the' → logprob: -4.777928829193115
    6. ' D' → logprob: -6.152928829193115
    7. '#' → logprob: -6.527928829193115
    8. 'path' → logprob: -6.652928829193115
    9. 'a' → logprob: -7.027928829193115
    10. ' def' → logprob: -7.152928829193115

Token 1564: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0009852928342297673
    2. 'ijk' → logprob: -7.000985145568848
    3. 'ij' → logprob: -10.125985145568848
    4. 'jik' → logprob: -10.750985145568848
    5. '#' → logprob: -12.625985145568848
    6. '```' → logprob: -12.875985145568848
    7. 'i' → logprob: -13.000985145568848
    8. '   ' → logprob: -13.250985145568848
    9. 'ijks' → logprob: -13.750985145568848
    10. 'e' → logprob: -15.250985145568848

Token 1565: ''s' (ID: 885)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07448874413967133
    2. ':' → logprob: -3.324488639831543
    3. ':
' → logprob: -3.699488639831543
    4. '
' → logprob: -5.074488639831543
    5. ' class' → logprob: -5.574488639831543
    6. '   ' → logprob: -7.574488639831543
    7. '#' → logprob: -8.699488639831543
    8. '(
' → logprob: -9.074488639831543
    9. '```' → logprob: -9.699488639831543
    10. '<class' → logprob: -10.699488639831543

Token 1566: ' with' (ID: 483)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.31937897205352783
    2. 'def' → logprob: -2.0693788528442383
    3. 'State' → logprob: -3.0693788528442383
    4. 'Algorithm' → logprob: -3.1943788528442383
    5. 'class' → logprob: -3.6943788528442383
    6. 'node' → logprob: -4.319378852844238
    7. 'algorithm' → logprob: -5.069378852844238
    8. ' algorithm' → logprob: -5.444378852844238
    9. 'Search' → logprob: -5.944378852844238
    10. '_node' → logprob: -6.319378852844238

Token 1567: ' directions' (ID: 24921)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9722050428390503
    2. 'waiting' → logprob: -1.2222050428390503
    3. 'time' → logprob: -1.4722050428390503
    4. 'arrival' → logprob: -3.47220516204834
    5. 'traffic' → logprob: -3.84720516204834
    6. 'priority' → logprob: -4.47220516204834
    7. ' waiting' → logprob: -4.59720516204834
    8. 'wait' → logprob: -5.22220516204834
    9. 'tim' → logprob: -5.84720516204834
    10. 'prior' → logprob: -6.22220516204834

Token 1568: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.246537173457909e-06
    2. '
' → logprob: -12.500003814697266
    3. ' class' → logprob: -14.750003814697266
    4. ':
' → logprob: -17.750003814697266
    5. ':' → logprob: -19.125003814697266
    6. 'from' → logprob: -19.750003814697266
    7. '"class' → logprob: -20.000003814697266
    8. '#' → logprob: -20.250003814697266
    9. '<class' → logprob: -20.500003814697266
    10. '_class' → logprob: -20.625003814697266

Token 1569: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5064358115196228
    2. 'waiting' → logprob: -1.3814358711242676
    3. 'wait' → logprob: -2.8814358711242676
    4. 'arrival' → logprob: -3.0064358711242676
    5. 'times' → logprob: -3.6314358711242676
    6. 'tim' → logprob: -5.256435871124268
    7. 'traffic' → logprob: -5.631435871124268
    8. 'signals' → logprob: -6.506435871124268
    9. 'signal' → logprob: -6.881435871124268
    10. 'timestamps' → logprob: -7.131435871124268

Token 1570: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.4849443838757e-06
    2. '
' → logprob: -12.375004768371582
    3. ' class' → logprob: -15.750004768371582
    4. '@dat' → logprob: -18.625003814697266
    5. '"class' → logprob: -19.125003814697266
    6. 'from' → logprob: -19.375003814697266
    7. '#' → logprob: -20.500003814697266
    8. '<class' → logprob: -20.750003814697266
    9. 'clas' → logprob: -21.250003814697266
    10. 'import' → logprob: -21.500003814697266

Token 1571: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. 'from' → logprob: -17.125
    3. '
' → logprob: -17.875
    4. ' class' → logprob: -19.0
    5. 'import' → logprob: -19.5
    6. '@dat' → logprob: -20.625
    7. '<class' → logprob: -22.625
    8. '"class' → logprob: -22.875
    9. '#' → logprob: -23.5
    10. 'clas' → logprob: -24.5

Token 1572: ' State' (ID: 5388)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.3636489808559418
    2. 'D' → logprob: -1.2386490106582642
    3. 'Path' → logprob: -5.238648891448975
    4. 'Travel' → logprob: -5.863648891448975
    5. 'Route' → logprob: -6.238648891448975
    6. 'Search' → logprob: -6.613648891448975
    7. 'Node' → logprob: -6.988648891448975
    8. 'Traffic' → logprob: -7.738648891448975
    9. 'Traversal' → logprob: -7.738648891448975
    10. 'Journey' → logprob: -7.738648891448975

Token 1573: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11283699423074722
    2. ':
' → logprob: -2.237837076187134
    3. '   ' → logprob: -12.487836837768555
    4. '(' → logprob: -13.362836837768555
    5. '<|end|>' → logprob: -13.362836837768555
    6. '(object' → logprob: -13.487836837768555
    7. '):' → logprob: -13.487836837768555
    8. '):
' → logprob: -13.487836837768555
    9. ' :' → logprob: -14.112836837768555
    10. ':

' → logprob: -14.112836837768555

Token 1574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007598580792546272
    2. 'def' → logprob: -5.757598400115967
    3. 'class' → logprob: -6.007598400115967
    4. ':' → logprob: -6.882598400115967
    5. ' def' → logprob: -7.507598400115967
    6. '```' → logprob: -9.382598876953125
    7. '@dat' → logprob: -10.007598876953125
    8. '__' → logprob: -10.132598876953125
    9. '    ' → logprob: -10.257598876953125
    10. '  ' → logprob: -10.382598876953125

Token 1575: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004818849731236696
    2. ' def' → logprob: -6.004818916320801
    3. '__' → logprob: -6.504818916320801
    4. '   ' → logprob: -7.129818916320801
    5. ' __' → logprob: -11.1298189163208
    6. 'class' → logprob: -11.2548189163208
    7. '@dat' → logprob: -11.5048189163208
    8. '	def' → logprob: -13.0048189163208
    9. '```' → logprob: -14.0048189163208
    10. ' ' → logprob: -14.5048189163208

Token 1576: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02231583558022976
    2. 'def' → logprob: -4.397315979003906
    3. ' __' → logprob: -5.647315979003906
    4. '@dat' → logprob: -6.522315979003906
    5. 'object' → logprob: -6.647315979003906
    6. '```' → logprob: -7.272315979003906
    7. 'dat' → logprob: -7.522315979003906
    8. '   ' → logprob: -7.647315979003906
    9. 'classmethod' → logprob: -7.647315979003906
    10. 'staticmethod' → logprob: -8.147315979003906

Token 1577: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. 'lt' → logprob: -14.250000953674316
    3. '_init' → logprob: -18.875
    4. 'eq' → logprob: -19.25
    5. ' init' → logprob: -19.875
    6. 'hash' → logprob: -20.0
    7. 'inite' → logprob: -21.875
    8. '
' → logprob: -21.875
    9. '.init' → logprob: -22.625
    10. 'def' → logprob: -23.25

Token 1578: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.046020593494176865
    2. '(self' → logprob: -3.1710205078125
    3. '__(
' → logprob: -6.2960205078125
    4. ' (' → logprob: -7.4210205078125
    5. '(' → logprob: -7.6710205078125
    6. '__' → logprob: -9.7960205078125
    7. '__((' → logprob: -10.7960205078125
    8. 'self' → logprob: -11.2960205078125
    9. '_(' → logprob: -11.6710205078125
    10. '   ' → logprob: -13.0460205078125

Token 1579: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010151672904612496
    2. '(self' → logprob: -10.250101089477539
    3. 'coord' → logprob: -10.500101089477539
    4. ' self' → logprob: -11.375101089477539
    5. 'current' → logprob: -11.875101089477539
    6. '   ' → logprob: -12.125101089477539
    7. 'coordinate' → logprob: -12.375101089477539
    8. ',' → logprob: -12.750101089477539
    9. ',self' → logprob: -13.500101089477539
    10. '       ' → logprob: -13.625101089477539

Token 1580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07171712070703506
    2. 'self' → logprob: -3.0717170238494873
    3. '(self' → logprob: -3.8217170238494873
    4. '__(' → logprob: -8.071717262268066
    5. ' (' → logprob: -8.321717262268066
    6. ',self' → logprob: -8.696717262268066
    7. '__,' → logprob: -9.196717262268066
    8. ' self' → logprob: -9.446717262268066
    9. ' ,' → logprob: -10.321717262268066
    10. '(' → logprob: -11.571717262268066

Token 1581: ' coordinate' (ID: 30380)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.004524111747741699
    2. 'coordinate' → logprob: -6.379524230957031
    3. 'position' → logprob: -6.629524230957031
    4. 'current' → logprob: -7.129524230957031
    5. 'location' → logprob: -8.254524230957031
    6. 'time' → logprob: -8.379524230957031
    7. 'pos' → logprob: -9.379524230957031
    8. ' coord' → logprob: -9.379524230957031
    9. 'curr' → logprob: -11.504524230957031
    10. 'node' → logprob: -11.504524230957031

Token 1582: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.256334695033729e-05
    2. ' ,' → logprob: -10.000082969665527
    3. ':' → logprob: -10.250082969665527
    4. '=' → logprob: -14.625082969665527
    5. '   ' → logprob: -15.375082969665527
    6. ',
' → logprob: -15.375082969665527
    7. '‌,' → logprob: -15.625082969665527
    8. '):' → logprob: -15.875082969665527
    9. '<|end|>' → logprob: -16.00008201599121
    10. '_,' → logprob: -16.12508201599121

Token 1583: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -5.133198283147067e-05
    2. ' Coordinate' → logprob: -10.000051498413086
    3. 'coordinate' → logprob: -12.625051498413086
    4. '_coordinate' → logprob: -13.875051498413086
    5. 'Coordinates' → logprob: -14.125051498413086
    6. ' coordinate' → logprob: -14.625051498413086
    7. 'Coord' → logprob: -15.625051498413086
    8. '   ' → logprob: -16.375051498413086
    9. '       ' → logprob: -16.500051498413086
    10. ',' → logprob: -16.625051498413086

Token 1584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.12500286102295
    3. ',
' → logprob: -14.87500286102295
    4. ',time' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.375001907348633
    6. '‌,' → logprob: -17.625001907348633
    7. '       ' → logprob: -17.750001907348633
    8. ',current' → logprob: -18.250001907348633
    9. '):
' → logprob: -18.875001907348633
    10. '):' → logprob: -18.875001907348633

Token 1585: ' facing' (ID: 20511)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.03983519971370697
    2. 'arrival' → logprob: -4.039834976196289
    3. 'current' → logprob: -4.289834976196289
    4. ' time' → logprob: -5.039834976196289
    5. '   ' → logprob: -7.914834976196289
    6. 'arr' → logprob: -7.914834976196289
    7. ' current' → logprob: -8.289834976196289
    8. ' arrival' → logprob: -9.164834976196289
    9. 'cost' → logprob: -9.914834976196289
    10. 'direction' → logprob: -10.289834976196289

Token 1586: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.557890772819519
    2. '_direction' → logprob: -1.807890772819519
    3. ',' → logprob: -2.0578908920288086
    4. 'direction' → logprob: -2.3078908920288086
    5. '=' → logprob: -4.557890892028809
    6. '):' → logprob: -4.557890892028809
    7. '=None' → logprob: -4.807890892028809
    8. '):
' → logprob: -5.807890892028809
    9. ')' → logprob: -6.557890892028809
    10. ' =' → logprob: -6.932890892028809

Token 1587: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0061270371079444885
    2. 'Direction' → logprob: -5.131126880645752
    3. 'None' → logprob: -8.88112735748291
    4. ' str' → logprob: -10.38112735748291
    5. 'direction' → logprob: -11.25612735748291
    6. 'object' → logprob: -12.25612735748291
    7. 'int' → logprob: -13.13112735748291
    8. ' Direction' → logprob: -13.25612735748291
    9. '   ' → logprob: -13.38112735748291
    10. '[str' → logprob: -13.38112735748291

Token 1588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000377049611415714
    2. '=None' → logprob: -8.75037670135498
    3. '):' → logprob: -8.87537670135498
    4. ' ,' → logprob: -10.00037670135498
    5. '):
' → logprob: -10.62537670135498
    6. '=' → logprob: -12.37537670135498
    7. '   ' → logprob: -13.12537670135498
    8. 'None' → logprob: -14.12537670135498
    9. ',None' → logprob: -14.62537670135498
    10. ' =' → logprob: -15.00037670135498

Token 1589: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.004948746878653765
    2. 'arrival' → logprob: -5.879948616027832
    3. ' time' → logprob: -6.379948616027832
    4. 'current' → logprob: -8.129948616027832
    5. 'arr' → logprob: -9.504948616027832
    6. '   ' → logprob: -10.754948616027832
    7. 'elapsed' → logprob: -11.504948616027832
    8. ' arrival' → logprob: -11.504948616027832
    9. 'cost' → logprob: -11.754948616027832
    10. 't' → logprob: -11.879948616027832

Token 1590: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.851378858089447
    2. '):' → logprob: -0.851378858089447
    3. '=' → logprob: -1.9763789176940918
    4. ',' → logprob: -4.976378917694092
    5. '):
' → logprob: -7.976378917694092
    6. ')' → logprob: -8.101378440856934
    7. ' ):' → logprob: -9.476378440856934
    8. '+' → logprob: -10.226378440856934
    9. '=None' → logprob: -10.351378440856934
    10. ':int' → logprob: -11.101378440856934

Token 1591: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00010592726175673306
    2. ' int' → logprob: -9.375105857849121
    3. '0' → logprob: -11.375105857849121
    4. ':int' → logprob: -12.500105857849121
    5. '=int' → logprob: -12.875105857849121
    6. '[int' → logprob: -14.000105857849121
    7. ')' → logprob: -14.125105857849121
    8. '(int' → logprob: -14.500105857849121
    9. 'float' → logprob: -14.750105857849121
    10. ']int' → logprob: -15.125105857849121

Token 1592: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48606571555137634
    2. '):
' → logprob: -1.2360657453536987
    3. ',' → logprob: -2.361065626144409
    4. '       ' → logprob: -9.986065864562988
    5. '):
' → logprob: -10.611065864562988
    6. '   ' → logprob: -11.111065864562988
    7. ')' → logprob: -11.361065864562988
    8. ' ):' → logprob: -12.236065864562988
    9. '):

' → logprob: -13.111065864562988
    10. ' ,' → logprob: -13.236065864562988

Token 1593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010551994200795889
    2. ',' → logprob: -7.3760552406311035
    3. 'self' → logprob: -8.001054763793945
    4. '
' → logprob: -10.626054763793945
    5. ' self' → logprob: -10.876054763793945
    6. '        
' → logprob: -11.251054763793945
    7. '   ' → logprob: -11.876054763793945
    8. ':' → logprob: -12.251054763793945
    9. '```' → logprob: -12.501054763793945
    10. '           ' → logprob: -12.501054763793945

Token 1594: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.7697225252486533e-06
    2. '       ' → logprob: -13.000003814697266
    3. ' self' → logprob: -13.500003814697266
    4. '	self' → logprob: -19.750003814697266
    5. '   ' → logprob: -20.750003814697266
    6. '
' → logprob: -21.750003814697266
    7. '(self' → logprob: -22.000003814697266
    8. '        
' → logprob: -22.875003814697266
    9. 'super' → logprob: -23.625003814697266
    10. '           ' → logprob: -24.125003814697266

Token 1595: '.coordinate' (ID: 175320)
  Prédit: '.coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coordinate' → logprob: -0.01428244635462761
    2. '.' → logprob: -4.2642822265625
    3. 'coordinate' → logprob: -9.2642822265625
    4. '.
' → logprob: -11.1392822265625
    5. '.coord' → logprob: -13.3892822265625
    6. '.co' → logprob: -13.5142822265625
    7. '._' → logprob: -13.6392822265625
    8. '.=' → logprob: -13.6392822265625
    9. '.coordinates' → logprob: -13.8892822265625
    10. ' .' → logprob: -14.3892822265625

Token 1596: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055964428931474686
    2. ' =' → logprob: -2.930964469909668
    3. ',' → logprob: -6.930964469909668
    4. '.' → logprob: -9.430964469909668
    5. '<|end|>' → logprob: -11.930964469909668
    6. '=
' → logprob: -12.180964469909668
    7. ' ' → logprob: -12.555964469909668
    8. ')' → logprob: -12.805964469909668
    9. ' =
' → logprob: -13.805964469909668
    10. '   ' → logprob: -13.805964469909668

Token 1597: ' coordinate' (ID: 30380)
  Prédit: 'coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinate' → logprob: -0.0015023599844425917
    2. ' coordinate' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.376502990722656
    4. 'coord' → logprob: -17.751502990722656
    5. '.coordinate' → logprob: -17.751502990722656
    6. 'coordinates' → logprob: -18.001502990722656
    7. '       ' → logprob: -18.251502990722656
    8. '_coordinate' → logprob: -18.626502990722656
    9. 'co' → logprob: -18.751502990722656
    10. 'Coordinate' → logprob: -18.751502990722656

Token 1598: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1646776646375656
    2. ',' → logprob: -2.789677619934082
    3. 'self' → logprob: -3.289677619934082
    4. '<|end|>' → logprob: -3.789677619934082
    5. '
' → logprob: -4.164677619934082
    6. '        
' → logprob: -4.914677619934082
    7. ' ' → logprob: -6.164677619934082
    8. ',
' → logprob: -6.539677619934082
    9. ' 
' → logprob: -7.039677619934082
    10. '        ' → logprob: -7.539677619934082

Token 1599: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3626248836517334
    2. '       ' → logprob: -1.2376248836517334
    3. ',' → logprob: -4.3626251220703125
    4. ' self' → logprob: -7.6126251220703125
    5. '   ' → logprob: -8.112625122070312
    6. '	' → logprob: -9.237625122070312
    7. ' ' → logprob: -9.237625122070312
    8. '
' → logprob: -9.612625122070312
    9. '        
' → logprob: -9.862625122070312
    10. '	self' → logprob: -9.987625122070312

Token 1600: ' self' (ID: 1051)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2521742284297943
    2. 'self' (adapté à ' self') → logprob: -1.5021742582321167
    3. 'time' → logprob: -8.752174377441406
    4. '       ' → logprob: -10.752174377441406
    5. 'face' → logprob: -10.877174377441406
    6. '   ' → logprob: -11.002174377441406
    7. ' self' → logprob: -11.377174377441406
    8. 'fac' → logprob: -11.877174377441406
    9. ' facing' → logprob: -12.002174377441406
    10. 'Facing' → logprob: -13.627174377441406

Token 1601: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.060408174991607666
    2. '.' → logprob: -3.560408115386963
    3. 'f' → logprob: -3.560408115386963
    4. 'time' → logprob: -7.060408115386963
    5. '.time' → logprob: -8.060408592224121
    6. '_f' → logprob: -8.935408592224121
    7. ' .' → logprob: -9.310408592224121
    8. ',' → logprob: -9.560408592224121
    9. '.face' → logprob: -9.935408592224121
    10. '   ' → logprob: -10.060408592224121

Token 1602: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -4.4849443838757e-06
    2. 'ace' → logprob: -13.125004768371582
    3. 'aced' → logprob: -14.375004768371582
    4. '
' → logprob: -14.750004768371582
    5. 'ac' → logprob: -14.750004768371582
    6. '_' → logprob: -15.625004768371582
    7. 'a' → logprob: -16.000003814697266
    8. '#' → logprob: -16.125003814697266
    9. 'Facing' → logprob: -16.250003814697266
    10. '[' → logprob: -16.375003814697266

Token 1603: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3485546410083771
    2. ' =' → logprob: -1.2235546112060547
    3. '<|end|>' → logprob: -9.723554611206055
    4. ' ' → logprob: -10.723554611206055
    5. 'direction' → logprob: -11.723554611206055
    6. ')' → logprob: -12.098554611206055
    7. 'f' → logprob: -12.473554611206055
    8. '   ' → logprob: -13.473554611206055
    9. ',' → logprob: -13.848554611206055
    10. 'import' → logprob: -13.848554611206055

Token 1604: ' facing' (ID: 20511)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.463036435074173e-05
    2. ' facing' → logprob: -10.625024795532227
    3. 'fac' → logprob: -15.750024795532227
    4. 'None' → logprob: -16.375024795532227
    5. '	f' → logprob: -18.000024795532227
    6. 'Facing' → logprob: -18.125024795532227
    7. '_f' → logprob: -18.500024795532227
    8. ' None' → logprob: -18.875024795532227
    9. '   ' → logprob: -19.250024795532227
    10. 'face' → logprob: -19.750024795532227

Token 1605: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9116100668907166
    2. '       ' → logprob: -1.1616101264953613
    3. '<|end|>' → logprob: -1.4116101264953613
    4. ',' → logprob: -3.7866101264953613
    5. ',
' → logprob: -4.786610126495361
    6. 'self' → logprob: -5.536610126495361
    7. '<|end|>' → logprob: -6.036610126495361
    8. '        
' → logprob: -6.161610126495361
    9. ' ' → logprob: -7.286610126495361
    10. ' 
' → logprob: -8.161609649658203

Token 1606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002796199405565858
    2. ',' → logprob: -6.502796173095703
    3. 'self' → logprob: -7.377796173095703
    4. '
' → logprob: -7.752796173095703
    5. '<|end|>' → logprob: -9.252796173095703
    6. ',
' → logprob: -10.252796173095703
    7. ' ' → logprob: -10.377796173095703
    8. '   ' → logprob: -10.877796173095703
    9. '	' → logprob: -11.127796173095703
    10. '        
' → logprob: -11.502796173095703

Token 1607: ' self' (ID: 1051)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.038231395184993744
    2. 'self' (adapté à ' self') → logprob: -3.288231372833252
    3. ' time' → logprob: -8.78823184967041
    4. '       ' → logprob: -10.53823184967041
    5. ' self' → logprob: -11.53823184967041
    6. '   ' → logprob: -13.91323184967041
    7. '"time' → logprob: -16.163230895996094
    8. '
' → logprob: -16.288230895996094
    9. '	time' → logprob: -17.163230895996094
    10. '.time' → logprob: -17.288230895996094

Token 1608: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.0010910429991781712
    2. 'time' → logprob: -7.001091003417969
    3. '.' → logprob: -8.751091003417969
    4. '_time' → logprob: -11.626091003417969
    5. ' time' → logprob: -12.126091003417969
    6. ' .' → logprob: -12.876091003417969
    7. '=time' → logprob: -13.251091003417969
    8. '"time' → logprob: -14.126091003417969
    9. '   ' → logprob: -15.001091003417969
    10. 'Time' → logprob: -15.251091003417969

Token 1609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09561605006456375
    2. ' =' → logprob: -3.095616102218628
    3. '+' → logprob: -3.220616102218628
    4. ' +' → logprob: -6.220615863800049
    5. '<|end|>' → logprob: -6.470615863800049
    6. ' +=' → logprob: -6.970615863800049
    7. '+=' → logprob: -6.970615863800049
    8. ')' → logprob: -8.595616340637207
    9. '<|end|>' → logprob: -8.595616340637207
    10. ',' → logprob: -10.095616340637207

Token 1610: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0007107630372047424
    2. ' time' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.250710487365723
    4. '  ' → logprob: -17.50071144104004
    5. '	time' → logprob: -17.50071144104004
    6. '(time' → logprob: -18.12571144104004
    7. ' ' → logprob: -18.25071144104004
    8. '    ' → logprob: -18.50071144104004
    9. '"time' → logprob: -18.62571144104004
    10. '=time' → logprob: -18.75071144104004

Token 1611: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6339057087898254
    2. '
' → logprob: -0.7589057087898254
    3. '<|end|>' → logprob: -7.25890588760376
    4. '    
' → logprob: -7.75890588760376
    5. '<|end|>' → logprob: -10.258905410766602
    6. '

' → logprob: -10.258905410766602
    7. '
' → logprob: -10.633905410766602
    8. '       ' → logprob: -11.133905410766602
    9. 'Next' → logprob: -11.508905410766602
    10. ' 
' → logprob: -11.633905410766602

Token 1612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008786633610725403
    2. '
' → logprob: -5.008786678314209
    3. 'def' → logprob: -6.508786678314209
    4. '    
' → logprob: -7.883786678314209
    5. '<|end|>' → logprob: -9.25878620147705
    6. ' def' → logprob: -10.75878620147705
    7. '       ' → logprob: -11.00878620147705
    8. 'Next' → logprob: -11.25878620147705
    9. ' 
' → logprob: -11.50878620147705
    10. '        
' → logprob: -11.63378620147705

Token 1613: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001055676257237792
    2. '   ' → logprob: -7.251055717468262
    3. ' def' → logprob: -8.001055717468262
    4. '
' → logprob: -12.626055717468262
    5. 'import' → logprob: -12.751055717468262
    6. '#' → logprob: -13.376055717468262
    7. '	def' → logprob: -14.251055717468262
    8. '    
' → logprob: -14.376055717468262
    9. 'Next' → logprob: -14.876055717468262
    10. '       ' → logprob: -15.376055717468262

Token 1614: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09261161834001541
    2. 'def' → logprob: -2.59261155128479
    3. 'lt' → logprob: -5.592611789703369
    4. ' __' → logprob: -5.842611789703369
    5. '<' → logprob: -5.967611789703369
    6. '_lt' → logprob: -5.967611789703369
    7. ' def' → logprob: -6.967611789703369
    8. '   ' → logprob: -7.967611789703369
    9. '_def' → logprob: -9.092611312866211
    10. '___' → logprob: -9.092611312866211

Token 1615: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.0015052208909764886
    2. 'eq' → logprob: -6.501505374908447
    3. 'hash' → logprob: -12.751504898071289
    4. ' lt' → logprob: -20.12650489807129
    5. 'gt' → logprob: -22.25150489807129
    6. 'repr' → logprob: -22.37650489807129
    7. '_lt' → logprob: -22.50150489807129
    8. 'le' → logprob: -23.12650489807129
    9. 'cmp' → logprob: -23.50150489807129
    10. 'init' → logprob: -24.12650489807129

Token 1616: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0025103818625211716
    2. '__' → logprob: -6.0025105476379395
    3. '__((' → logprob: -11.127510070800781
    4. '__(
' → logprob: -11.252510070800781
    5. '__('' → logprob: -12.127510070800781
    6. '(self' → logprob: -14.627510070800781
    7. '__("' → logprob: -15.252510070800781
    8. '_(' → logprob: -15.252510070800781
    9. '__(*' → logprob: -15.377510070800781
    10. '(' → logprob: -15.627510070800781

Token 1617: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0445127372804563e-05
    2. 'other' → logprob: -11.75001049041748
    3. ' self' → logprob: -12.87501049041748
    4. '(self' → logprob: -20.125009536743164
    5. 's' → logprob: -20.375009536743164
    6. '0' → logprob: -20.625009536743164
    7. ',' → logprob: -20.875009536743164
    8. 'o' → logprob: -21.250009536743164
    9. ' other' → logprob: -21.250009536743164
    10. '1' → logprob: -22.125009536743164

Token 1618: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00817091204226017
    2. '__' → logprob: -5.508171081542969
    3. '__,' → logprob: -6.383171081542969
    4. '__((' → logprob: -6.883171081542969
    5. '(' → logprob: -7.258171081542969
    6. ',' → logprob: -8.133171081542969
    7. '(self' → logprob: -8.383171081542969
    8. '__(
' → logprob: -9.383171081542969
    9. '__('' → logprob: -10.383171081542969
    10. 'self' → logprob: -12.008171081542969

Token 1619: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00012594614236149937
    2. ' other' → logprob: -9.000125885009766
    3. 'self' → logprob: -13.000125885009766
    4. 'Other' → logprob: -15.375125885009766
    5. '_other' → logprob: -17.500125885009766
    6. '(other' → logprob: -17.625125885009766
    7. 'o' → logprob: -19.250125885009766
    8. '.other' → logprob: -19.875125885009766
    9. 'oth' → logprob: -22.000125885009766
    10. 'OTHER' → logprob: -22.375125885009766

Token 1620: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0970841646194458
    2. '):' → logprob: -2.5970840454101562
    3. '<|end|>' → logprob: -4.847084045410156
    4. ',' → logprob: -5.722084045410156
    5. '):
' → logprob: -6.222084045410156
    6. '.' → logprob: -6.222084045410156
    7. ':
' → logprob: -6.972084045410156
    8. ')' → logprob: -7.847084045410156
    9. '<|end|>' → logprob: -7.847084045410156
    10. '       ' → logprob: -8.472084045410156

Token 1621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4843941926956177
    2. 'return' → logprob: -0.9843941926956177
    3. ' return' → logprob: -4.609394073486328
    4. 'self' → logprob: -8.359394073486328
    5. '   ' → logprob: -10.359394073486328
    6. ':return' → logprob: -11.359394073486328
    7. '	return' → logprob: -11.484394073486328
    8. '           ' → logprob: -12.609394073486328
    9. ' self' → logprob: -12.984394073486328
    10. '               ' → logprob: -12.984394073486328

Token 1622: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014205467887222767
    2. 'self' → logprob: -4.264205455780029
    3. ' return' → logprob: -10.264205932617188
    4. '       ' → logprob: -11.889205932617188
    5. ' self' → logprob: -16.139205932617188
    6. '	return' → logprob: -17.014205932617188
    7. '(self' → logprob: -17.639205932617188
    8. '           ' → logprob: -18.014205932617188
    9. '{return' → logprob: -18.764205932617188
    10. 'Return' → logprob: -19.264205932617188

Token 1623: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9266199160483666e-05
    2. ' self' → logprob: -11.250019073486328
    3. '(self' → logprob: -12.000019073486328
    4. '   ' → logprob: -18.875019073486328
    5. '	self' → logprob: -18.875019073486328
    6. '
' → logprob: -20.500019073486328
    7. '       ' → logprob: -21.000019073486328
    8. '[self' → logprob: -21.625019073486328
    9. 's' → logprob: -21.750019073486328
    10. '(' → logprob: -22.125019073486328

Token 1624: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -13.62500286102295
    3. 'time' → logprob: -14.12500286102295
    4. '.code' → logprob: -15.12500286102295
    5. '.tim' → logprob: -15.12500286102295
    6. '.token' → logprob: -16.000003814697266
    7. '.state' → logprob: -16.625003814697266
    8. '.t' → logprob: -16.750003814697266
    9. ' .' → logprob: -17.625003814697266
    10. '
' → logprob: -17.625003814697266

Token 1625: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4163619577884674
    2. ' <' → logprob: -1.166361927986145
    3. '<|end|>' → logprob: -3.6663620471954346
    4. '<=' → logprob: -6.5413618087768555
    5. ' <=' → logprob: -6.6663618087768555
    6. '[' → logprob: -8.791361808776855
    7. '<|end|>' → logprob: -8.791361808776855
    8. '   ' → logprob: -9.416361808776855
    9. ' ' → logprob: -9.916361808776855
    10. '  ' → logprob: -10.541361808776855

Token 1626: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -2.935296834039036e-06
    2. ' other' → logprob: -12.75000286102295
    3. '(other' → logprob: -19.750003814697266
    4. '.other' → logprob: -22.750003814697266
    5. 'self' → logprob: -23.500003814697266
    6. 'Other' → logprob: -23.750003814697266
    7. '_other' → logprob: -24.500003814697266
    8. ' ' → logprob: -25.875003814697266
    9. 'others' → logprob: -26.375003814697266
    10. 'othe' → logprob: -26.625003814697266

Token 1627: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -2.951771421066951e-05
    2. '.' → logprob: -10.500029563903809
    3. 'time' → logprob: -14.125029563903809
    4. '.state' → logprob: -14.250029563903809
    5. '.token' → logprob: -15.250029563903809
    6. '.t' → logprob: -16.500028610229492
    7. ' .' → logprob: -16.750028610229492
    8. '.tim' → logprob: -17.250028610229492
    9. '
' → logprob: -17.625028610229492
    10. '.
' → logprob: -18.000028610229492

Token 1628: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12337934225797653
    2. 'class' → logprob: -2.8733792304992676
    3. 'def' → logprob: -2.8733792304992676
    4. '   ' → logprob: -6.623379230499268
    5. '#' → logprob: -7.498379230499268
    6. 'import' → logprob: -7.498379230499268
    7. '

' → logprob: -7.748379230499268
    8. '
' → logprob: -9.623379707336426
    9. '    
' → logprob: -9.873379707336426
    10. ' class' → logprob: -11.373379707336426

Token 1629: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10043375939130783
    2. 'class' → logprob: -2.350433826446533
    3. '   ' → logprob: -8.725433349609375
    4. '#' → logprob: -10.475433349609375
    5. '
' → logprob: -10.850433349609375
    6. 'import' → logprob: -11.100433349609375
    7. '```' → logprob: -13.725433349609375
    8. ' def' → logprob: -14.725433349609375
    9. 'from' → logprob: -15.725433349609375
    10. ' class' → logprob: -16.350433349609375

Token 1630: ' A' (ID: 355)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029835186898708344
    2. 'class' → logprob: -3.5298352241516113
    3. 'import' → logprob: -9.904834747314453
    4. '#' → logprob: -10.279834747314453
    5. 'from' → logprob: -15.029834747314453
    6. '
' → logprob: -16.529834747314453
    7. ' def' → logprob: -17.154834747314453
    8. '```' → logprob: -17.779834747314453
    9. 'Def' → logprob: -17.904834747314453
    10. '   ' → logprob: -19.029834747314453

Token 1631: ' complex' (ID: 8012)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012443976011127234
    2. 'class' → logprob: -7.50124454498291
    3. '#' → logprob: -8.75124454498291
    4. '
' → logprob: -8.75124454498291
    5. 'dd' → logprob: -8.75124454498291
    6. ' def' → logprob: -9.12624454498291
    7. '   ' → logprob: -10.12624454498291
    8. 'd' → logprob: -10.12624454498291
    9. 'dding' → logprob: -11.50124454498291
    10. 'dv' → logprob: -12.62624454498291

Token 1632: ' car' (ID: 1669)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023237948771566153
    2. 'class' → logprob: -6.252323627471924
    3. '
' → logprob: -8.502324104309082
    4. '   ' → logprob: -9.252324104309082
    5. ' def' → logprob: -10.002324104309082
    6. '#' → logprob: -10.752324104309082
    7. '*' → logprob: -11.752324104309082
    8. 'd' → logprob: -12.127324104309082
    9. 'path' → logprob: -12.752324104309082
    10. ')' → logprob: -13.127324104309082

Token 1633: ' navigation' (ID: 17719)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.8947209715843201
    2. 'navigation' → logprob: -1.0197210311889648
    3. 'class' → logprob: -1.8947210311889648
    4. 'route' → logprob: -3.644721031188965
    5. 'routing' → logprob: -3.644721031188965
    6. 'trip' → logprob: -4.144721031188965
    7. '_navigation' → logprob: -6.144721031188965
    8. ' navigation' → logprob: -6.769721031188965
    9. '_path' → logprob: -6.894721031188965
    10. 'router' → logprob: -6.894721031188965

Token 1634: ' system' (ID: 2420)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.019590677693486214
    2. 'def' → logprob: -4.269590854644775
    3. ' class' → logprob: -5.519590854644775
    4. '
' → logprob: -7.769590854644775
    5. 'system' → logprob: -8.019590377807617
    6. 'algorithm' → logprob: -8.144590377807617
    7. '#' → logprob: -9.519590377807617
    8. ' system' → logprob: -9.769590377807617
    9. 'navigation' → logprob: -9.894590377807617
    10. ' algorithm' → logprob: -9.894590377807617

Token 1635: ' encaps' (ID: 79272)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.014273861423134804
    2. ' class' → logprob: -4.764273643493652
    3. '   ' → logprob: -5.764273643493652
    4. ':
' → logprob: -6.389273643493652
    5. ':' → logprob: -7.514273643493652
    6. '
' → logprob: -8.889273643493652
    7. 'def' → logprob: -9.889273643493652
    8. ' :
' → logprob: -10.014273643493652
    9. ' :' → logprob: -10.639273643493652
    10. ' def' → logprob: -11.389273643493652

Token 1636: 'ulation' (ID: 4672)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.006164005026221275
    2. 'ulating' → logprob: -5.256164073944092
    3. 'ulates' → logprob: -7.006164073944092
    4. 'ulated' → logprob: -11.631163597106934
    5. ' class' → logprob: -11.756163597106934
    6. 'ulation' → logprob: -12.756163597106934
    7. '#' → logprob: -13.631163597106934
    8. 's' → logprob: -14.006163597106934
    9. 'uling' → logprob: -15.006163597106934
    10. '```' → logprob: -15.131163597106934

Token 1637: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0280383548888494e-06
    2. ' class' → logprob: -14.000000953674316
    3. '
' → logprob: -16.125001907348633
    4. 'def' → logprob: -17.000001907348633
    5. 'clas' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '"class' → logprob: -20.125001907348633
    8. 'c' → logprob: -20.625001907348633
    9. 'import' → logprob: -20.875001907348633
    10. '<class' → logprob: -21.250001907348633

Token 1638: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: 0.0
    2. ' class' → logprob: -17.375
    3. '
' → logprob: -20.625
    4. '"class' → logprob: -21.0
    5. 'car' → logprob: -21.875
    6. 'import' → logprob: -22.25
    7. 'def' → logprob: -22.375
    8. '#' → logprob: -22.5
    9. '```' → logprob: -22.5
    10. '<class' → logprob: -23.125

Token 1639: ' Car' (ID: 4004)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.04015028849244118
    2. 'Navigation' → logprob: -3.2901504039764404
    3. 'Traffic' → logprob: -7.040150165557861
    4. 'Navigator' → logprob: -7.290150165557861
    5. 'City' → logprob: -8.29015064239502
    6. 'Complex' → logprob: -9.16515064239502
    7. ' Car' → logprob: -9.29015064239502
    8. 'Route' → logprob: -10.79015064239502
    9. 'Nav' → logprob: -11.16515064239502
    10. 'Vehicle' → logprob: -11.41515064239502

Token 1640: 'Navigation' (ID: 20916)
  Prédit: 'Navigator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Navigator' → logprob: -0.24497869610786438
    2. 'Navigation' → logprob: -1.869978666305542
    3. ':' → logprob: -2.869978666305542
    4. ':
' → logprob: -6.494978904724121
    5. '(' → logprob: -6.619978904724121
    6. 'Router' → logprob: -6.619978904724121
    7. 'Planner' → logprob: -7.494978904724121
    8. 'Nav' → logprob: -8.244978904724121
    9. '(
' → logprob: -8.494978904724121
    10. ')' → logprob: -8.619978904724121

Token 1641: 'System' (ID: 3320)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054992981255054474
    2. ':
' → logprob: -2.929992914199829
    3. 'System' → logprob: -10.05499267578125
    4. ':System' → logprob: -10.30499267578125
    5. '(Car' → logprob: -11.05499267578125
    6. '(System' → logprob: -12.42999267578125
    7. 'Car' → logprob: -12.80499267578125
    8. '):' → logprob: -12.92999267578125
    9. ':

' → logprob: -13.42999267578125
    10. ':
' → logprob: -13.80499267578125

Token 1642: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3485497534275055
    2. ':
' → logprob: -1.223549723625183
    3. '   ' → logprob: -10.723549842834473
    4. '):
' → logprob: -10.848549842834473
    5. ':

' → logprob: -11.348549842834473
    6. ' :' → logprob: -11.723549842834473
    7. '(object' → logprob: -11.723549842834473
    8. ' :
' → logprob: -11.848549842834473
    9. '():
' → logprob: -12.098549842834473
    10. '(Car' → logprob: -12.223549842834473

Token 1643: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0325924449716695e-05
    2. ' def' → logprob: -12.37501049041748
    3. 'def' → logprob: -12.62501049041748
    4. ':' → logprob: -14.12501049041748
    5. '#' → logprob: -14.50001049041748
    6. '    
' → logprob: -14.75001049041748
    7. 'class' → logprob: -15.00001049041748
    8. '```' → logprob: -15.37501049041748
    9. '
' → logprob: -16.250009536743164
    10. '	def' → logprob: -16.375009536743164

Token 1644: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6943662166595459
    2. ' def' → logprob: -0.9443662166595459
    3. 'def' (adapté à ' def') → logprob: -2.194366216659546
    4. 'class' → logprob: -8.819366455078125
    5. '	def' → logprob: -10.069366455078125
    6. ' ' → logprob: -10.569366455078125
    7. '```' → logprob: -11.694366455078125
    8. ':' → logprob: -12.069366455078125
    9. '    ' → logprob: -12.444366455078125
    10. '  ' → logprob: -12.569366455078125

Token 1645: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32512417435646057
    2. '__' → logprob: -1.3251241445541382
    3. ' def' → logprob: -4.825124263763428
    4. ' __' → logprob: -5.950124263763428
    5. 'init' → logprob: -7.325124263763428
    6. '```' → logprob: -8.07512378692627
    7. '_init' → logprob: -8.82512378692627
    8. '.__' → logprob: -11.07512378692627
    9. '___' → logprob: -11.57512378692627
    10. '__(' → logprob: -12.70012378692627

Token 1646: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. '__' → logprob: -15.125
    3. ' __' → logprob: -16.875
    4. ' init' → logprob: -17.375
    5. '```' → logprob: -17.375
    6. 'new' → logprob: -17.75
    7. '   ' → logprob: -17.875
    8. 'int' → logprob: -18.375
    9. 'def' → logprob: -19.0
    10. 'iter' → logprob: -19.25

Token 1647: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009990048594772816
    2. '(self' → logprob: -4.634990215301514
    3. '__(
' → logprob: -8.634989738464355
    4. '__' → logprob: -10.384989738464355
    5. ' (' → logprob: -11.759989738464355
    6. '(' → logprob: -11.759989738464355
    7. '   ' → logprob: -12.759989738464355
    8. 'self' → logprob: -12.884989738464355
    9. '_(' → logprob: -13.134989738464355
    10. '
' → logprob: -14.634989738464355

Token 1648: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7432603272027336e-06
    2. ' self' → logprob: -13.875001907348633
    3. '       ' → logprob: -15.250001907348633
    4. '
' → logprob: -15.750001907348633
    5. ',' → logprob: -16.000001907348633
    6. '(self' → logprob: -16.250001907348633
    7. '0' → logprob: -16.500001907348633
    8. '   ' → logprob: -17.125001907348633
    9. 'M' → logprob: -17.750001907348633
    10. ',self' → logprob: -17.875001907348633

Token 1649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04925576224923134
    2. 'self' → logprob: -3.799255847930908
    3. '(self' → logprob: -4.174255847930908
    4. '__(' → logprob: -4.924255847930908
    5. ' (' → logprob: -6.174255847930908
    6. '__(
' → logprob: -8.17425537109375
    7. '(' → logprob: -8.67425537109375
    8. '__,' → logprob: -9.04925537109375
    9. ' self' → logprob: -9.54925537109375
    10. ' ,' → logprob: -9.92425537109375

Token 1650: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.004236531909555197
    2. 'M' → logprob: -6.129236698150635
    3. ' city' → logprob: -6.254236698150635
    4. '   ' → logprob: -10.004236221313477
    5. ' M' → logprob: -10.379236221313477
    6. 'self' → logprob: -10.379236221313477
    7. 'map' → logprob: -12.254236221313477
    8. 'City' → logprob: -12.629236221313477
    9. ' ' → logprob: -13.379236221313477
    10. '  ' → logprob: -13.504236221313477

Token 1651: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.4808594286441803
    2. 'Map' → logprob: -0.9808593988418579
    3. '   ' → logprob: -6.105859279632568
    4. 'map' → logprob: -6.605859279632568
    5. '       ' → logprob: -6.730859279632568
    6. '):
' → logprob: -6.980859279632568
    7. ':' → logprob: -8.105859756469727
    8. '):' → logprob: -8.230859756469727
    9. '=' → logprob: -8.730859756469727
    10. '_Map' → logprob: -8.855859756469727

Token 1652: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8124497532844543
    2. ':' → logprob: -1.3124496936798096
    3. '):
' → logprob: -1.5624496936798096
    4. ',' → logprob: -2.5624496936798096
    5. '):
' → logprob: -9.43744945526123
    6. '   ' → logprob: -9.56244945526123
    7. '=' → logprob: -9.93744945526123
    8. '=None' → logprob: -10.31244945526123
    9. '       ' → logprob: -10.81244945526123
    10. ' ):' → logprob: -10.93744945526123

Token 1653: ' City' (ID: 5686)
  Prédit: 'City'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'City' → logprob: -0.0763539969921112
    2. 'city' → logprob: -2.8263540267944336
    3. ' city' → logprob: -4.826354026794434
    4. ' City' → logprob: -5.076354026794434
    5. '_city' → logprob: -10.826354026794434
    6. '   ' → logprob: -13.451354026794434
    7. '(city' → logprob: -13.826354026794434
    8. '.city' → logprob: -14.076354026794434
    9. 'CITY' → logprob: -14.826354026794434
    10. '       ' → logprob: -14.951354026794434

Token 1654: 'Map' (ID: 2307)
  Prédit: 'Map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Map' → logprob: -0.00011653638648567721
    2. '):
' → logprob: -10.250116348266602
    3. '   ' → logprob: -10.500116348266602
    4. '       ' → logprob: -10.500116348266602
    5. '):' → logprob: -11.625116348266602
    6. '_map' → logprob: -12.000116348266602
    7. '	Map' → logprob: -12.750116348266602
    8. '.Map' → logprob: -12.875116348266602
    9. '_Map' → logprob: -13.500116348266602
    10. ')' → logprob: -14.250116348266602

Token 1655: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5530082583427429
    2. '):
' → logprob: -0.9280082583427429
    3. ',' → logprob: -3.5530083179473877
    4. '   ' → logprob: -7.803008079528809
    5. '       ' → logprob: -9.053008079528809
    6. ' ):' → logprob: -9.303008079528809
    7. '):
' → logprob: -9.428008079528809
    8. ')' → logprob: -9.678008079528809
    9. ' ):
' → logprob: -10.928008079528809
    10. ' ,' → logprob: -11.803008079528809

Token 1656: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.011145677417516708
    2. ' start' → logprob: -4.63614559173584
    3. 'origin' → logprob: -7.13614559173584
    4. 'source' → logprob: -8.13614559173584
    5. 'starting' → logprob: -9.13614559173584
    6. 'destination' → logprob: -9.38614559173584
    7. 'departure' → logprob: -10.63614559173584
    8. ' ' → logprob: -11.13614559173584
    9. '   ' → logprob: -11.13614559173584
    10. 'car' → logprob: -11.26114559173584

Token 1657: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6640335321426392
    2. ',' → logprob: -1.0390335321426392
    3. '_coordinate' → logprob: -2.5390334129333496
    4. '_coord' → logprob: -3.2890334129333496
    5. '):' → logprob: -4.91403341293335
    6. '):
' → logprob: -5.66403341293335
    7. ' ,' → logprob: -6.41403341293335
    8. '_coordinates' → logprob: -7.78903341293335
    9. '_coords' → logprob: -7.91403341293335
    10. '=' → logprob: -8.414033889770508

Token 1658: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.00018530222587287426
    2. ' Coordinate' → logprob: -8.750185012817383
    3. 'Coordinates' → logprob: -11.750185012817383
    4. '_coordinate' → logprob: -12.125185012817383
    5. ')' → logprob: -12.375185012817383
    6. 'Coord' → logprob: -12.375185012817383
    7. 'State' → logprob: -14.000185012817383
    8. 'str' → logprob: -14.125185012817383
    9. '):
' → logprob: -14.375185012817383
    10. '   ' → logprob: -14.500185012817383

Token 1659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005013240152038634
    2. ' ,' → logprob: -8.50050163269043
    3. '):' → logprob: -8.87550163269043
    4. '):
' → logprob: -9.00050163269043
    5. '   ' → logprob: -11.00050163269043
    6. '       ' → logprob: -12.00050163269043
    7. '<|end|>' → logprob: -12.75050163269043
    8. ')' → logprob: -13.25050163269043
    9. ',
' → logprob: -13.50050163269043
    10. '<|end|>' → logprob: -13.62550163269043

Token 1660: ' destination' (ID: 13330)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.20159050822257996
    2. 'destination' → logprob: -1.8265905380249023
    3. ' end' → logprob: -4.576590538024902
    4. 'dest' → logprob: -5.201590538024902
    5. ' destination' → logprob: -5.701590538024902
    6. 'goal' → logprob: -6.451590538024902
    7. 'target' → logprob: -7.451590538024902
    8. ' ' → logprob: -9.076590538024902
    9. ' dest' → logprob: -9.951590538024902
    10. '   ' → logprob: -10.076590538024902

Token 1661: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004399617202579975
    2. '):' → logprob: -6.12939977645874
    3. '):
' → logprob: -6.75439977645874
    4. ',' → logprob: -6.87939977645874
    5. ')' → logprob: -12.129399299621582
    6. ' :' → logprob: -12.129399299621582
    7. ':
' → logprob: -13.379399299621582
    8. ' ):' → logprob: -13.504399299621582
    9. '):

' → logprob: -14.129399299621582
    10. '   ' → logprob: -14.879399299621582

Token 1662: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0068437191657722
    2. ' Coordinate' → logprob: -5.506843566894531
    3. 'end' → logprob: -6.131843566894531
    4. 'destination' → logprob: -9.006843566894531
    5. ' end' → logprob: -9.131843566894531
    6. 'Coordinates' → logprob: -9.256843566894531
    7. 'stop' → logprob: -9.506843566894531
    8. 'Coord' → logprob: -10.506843566894531
    9. '   ' → logprob: -10.506843566894531
    10. 'Destination' → logprob: -10.631843566894531

Token 1663: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6821013689041138
    2. '):
' → logprob: -0.8071013689041138
    3. '):' → logprob: -3.057101249694824
    4. '       ' → logprob: -7.307101249694824
    5. '   ' → logprob: -7.557101249694824
    6. '):
' → logprob: -10.307101249694824
    7. ' ,' → logprob: -10.682101249694824
    8. ' ):
' → logprob: -11.932101249694824
    9. '):

' → logprob: -12.807101249694824
    10. ')' → logprob: -12.807101249694824

Token 1664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000340111117111519
    2. 'self' → logprob: -8.125340461730957
    3. ' self' → logprob: -11.250340461730957
    4. '   ' → logprob: -11.750340461730957
    5. '
' → logprob: -12.125340461730957
    6. ',' → logprob: -12.375340461730957
    7. '```' → logprob: -12.500340461730957
    8. '	' → logprob: -12.625340461730957
    9. '	self' → logprob: -13.875340461730957
    10. ')' → logprob: -14.125340461730957

Token 1665: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004822697374038398
    2. '       ' → logprob: -7.750482082366943
    3. ' self' → logprob: -9.875482559204102
    4. '	self' → logprob: -17.1254825592041
    5. '
' → logprob: -17.8754825592041
    6. '(self' → logprob: -18.0004825592041
    7. '   ' → logprob: -18.0004825592041
    8. '        
' → logprob: -19.3754825592041
    9. '[self' → logprob: -19.7504825592041
    10. 'super' → logprob: -19.8754825592041

Token 1666: '.city' (ID: 50562)
  Prédit: '.city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.001806202926672995
    2. 'city' → logprob: -6.376806259155273
    3. '.' → logprob: -9.376806259155273
    4. '.City' → logprob: -12.501806259155273
    5. '_city' → logprob: -12.876806259155273
    6. '.start' → logprob: -12.876806259155273
    7. '.car' → logprob: -13.251806259155273
    8. '   ' → logprob: -13.501806259155273
    9. '._' → logprob: -13.751806259155273
    10. 'City' → logprob: -13.876806259155273

Token 1667: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.523948907968588e-05
    2. 'Map' → logprob: -11.000035285949707
    3. '._' → logprob: -11.125035285949707
    4. '       ' → logprob: -13.250035285949707
    5. '   ' → logprob: -14.500035285949707
    6. '_maps' → logprob: -15.250035285949707
    7. '_Map' → logprob: -15.500035285949707
    8. '_MAP' → logprob: -15.625035285949707
    9. '.' → logprob: -15.625035285949707
    10. 'map' → logprob: -16.12503433227539

Token 1668: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20156389474868774
    2. ' =' → logprob: -1.701563835144043
    3. '   ' → logprob: -9.326563835144043
    4. '       ' → logprob: -10.451563835144043
    5. '.' → logprob: -11.826563835144043
    6. ',' → logprob: -11.826563835144043
    7. '.city' → logprob: -12.201563835144043
    8. '    ' → logprob: -12.701563835144043
    9. ' ' → logprob: -13.201563835144043
    10. '        ' → logprob: -13.326563835144043

Token 1669: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.0019289902411401272
    2. ' city' → logprob: -6.251928806304932
    3. '       ' → logprob: -15.62692928314209
    4. 'City' → logprob: -16.751928329467773
    5. '(city' → logprob: -16.751928329467773
    6. '   ' → logprob: -16.876928329467773
    7. 'car' → logprob: -17.751928329467773
    8. '
' → logprob: -17.876928329467773
    9. '.city' → logprob: -18.001928329467773
    10. ' ' → logprob: -18.001928329467773

Token 1670: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -6.957014556974173e-05
    2. 'Map' → logprob: -10.000069618225098
    3. '._' → logprob: -12.250069618225098
    4. '   ' → logprob: -12.375069618225098
    5. 'map' → logprob: -12.375069618225098
    6. '_' → logprob: -12.625069618225098
    7. '       ' → logprob: -12.625069618225098
    8. '.' → logprob: -14.000069618225098
    9. '
' → logprob: -14.125069618225098
    10. 'start' → logprob: -14.750069618225098

Token 1671: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030566859641112387
    2. 'self' → logprob: -8.375306129455566
    3. '
' → logprob: -10.125306129455566
    4. ',' → logprob: -10.625306129455566
    5. ' self' → logprob: -12.000306129455566
    6. '	' → logprob: -13.625306129455566
    7. '   ' → logprob: -14.250306129455566
    8. '<|end|>' → logprob: -14.250306129455566
    9. ',
' → logprob: -14.500306129455566
    10. '        
' → logprob: -14.625306129455566

Token 1672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003154432924930006
    2. 'self' → logprob: -8.12531566619873
    3. ' self' → logprob: -11.50031566619873
    4. '
' → logprob: -11.75031566619873
    5. '   ' → logprob: -14.75031566619873
    6. ',' → logprob: -15.00031566619873
    7. '	' → logprob: -15.37531566619873
    8. '<|end|>' → logprob: -15.50031566619873
    9. '	self' → logprob: -15.75031566619873
    10. '```' → logprob: -16.750314712524414

Token 1673: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017077792435884476
    2. ' self' → logprob: -6.626707553863525
    3. '       ' → logprob: -7.876707553863525
    4. '   ' → logprob: -13.501708030700684
    5. '
' → logprob: -14.751708030700684
    6. 'start' → logprob: -16.001707077026367
    7. '      ' → logprob: -16.376707077026367
    8. '     ' → logprob: -16.751707077026367
    9. '	self' → logprob: -16.751707077026367
    10. '           ' → logprob: -16.751707077026367

Token 1674: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.006324774120002985
    2. '.destination' → logprob: -5.756324768066406
    3. 'start' → logprob: -6.006324768066406
    4. '.' → logprob: -7.381324768066406
    5. '.current' → logprob: -11.381324768066406
    6. ' start' → logprob: -11.506324768066406
    7. 'destination' → logprob: -11.756324768066406
    8. '.end' → logprob: -12.006324768066406
    9. '_start' → logprob: -12.631324768066406
    10. ' .' → logprob: -12.631324768066406

Token 1675: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6423486471176147
    2. '=' → logprob: -0.7673486471176147
    3. ',' → logprob: -5.267348766326904
    4. '<|end|>' → logprob: -6.142348766326904
    5. '       ' → logprob: -7.767348766326904
    6. '   ' → logprob: -7.892348766326904
    7. 'self' → logprob: -8.392348289489746
    8. ' ' → logprob: -8.642348289489746
    9. '=self' → logprob: -8.892348289489746
    10. ')' → logprob: -8.892348289489746

Token 1676: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3868713080883026
    2. ' start' → logprob: -1.136871337890625
    3. '[start' → logprob: -16.386871337890625
    4. '(start' → logprob: -16.386871337890625
    5. '=start' → logprob: -17.511871337890625
    6. '
' → logprob: -17.761871337890625
    7. '	start' → logprob: -18.011871337890625
    8. 'end' → logprob: -18.261871337890625
    9. '       ' → logprob: -18.511871337890625
    10. ' ' → logprob: -19.261871337890625

Token 1677: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023871837183833122
    2. 'self' → logprob: -6.127387046813965
    3. '
' → logprob: -9.002387046813965
    4. ',' → logprob: -9.752387046813965
    5. ' self' → logprob: -11.627387046813965
    6. '<|end|>' → logprob: -12.252387046813965
    7. '   ' → logprob: -13.502387046813965
    8. ',
' → logprob: -13.752387046813965
    9. '.' → logprob: -14.002387046813965
    10. '      ' → logprob: -14.252387046813965

Token 1678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005266957450658083
    2. 'self' → logprob: -5.255267143249512
    3. ' self' → logprob: -10.505267143249512
    4. '   ' → logprob: -13.130267143249512
    5. '
' → logprob: -13.880267143249512
    6. '           ' → logprob: -14.130267143249512
    7. ',' → logprob: -14.255267143249512
    8. '      ' → logprob: -14.880267143249512
    9. '<|end|>' → logprob: -15.505267143249512
    10. '	' → logprob: -15.755267143249512

Token 1679: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.874882430769503e-05
    2. '       ' → logprob: -9.500079154968262
    3. ' self' → logprob: -12.500079154968262
    4. '
' → logprob: -15.875079154968262
    5. '   ' → logprob: -17.875078201293945
    6. '	self' → logprob: -18.500078201293945
    7. '        
' → logprob: -19.250078201293945
    8. '           ' → logprob: -19.875078201293945
    9. '(self' → logprob: -20.000078201293945
    10. ' ' → logprob: -20.500078201293945

Token 1680: '.destination' (ID: 79702)
  Prédit: '.destination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.destination' → logprob: -0.0384540781378746
    2. 'destination' → logprob: -3.288454055786133
    3. '_destination' → logprob: -8.413454055786133
    4. '.' → logprob: -8.788454055786133
    5. '.dest' → logprob: -11.413454055786133
    6. ' destination' → logprob: -11.788454055786133
    7. '._' → logprob: -12.163454055786133
    8. 'estination' → logprob: -12.413454055786133
    9. 'Destination' → logprob: -13.163454055786133
    10. '(destination' → logprob: -13.788454055786133

Token 1681: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3507464826107025
    2. ' =' → logprob: -1.225746512413025
    3. '<|end|>' → logprob: -6.4757466316223145
    4. ' ' → logprob: -7.8507466316223145
    5. '       ' → logprob: -9.475746154785156
    6. '   ' → logprob: -9.725746154785156
    7. ' =
' → logprob: -9.850746154785156
    8. '=
' → logprob: -9.850746154785156
    9. '=self' → logprob: -10.225746154785156
    10. ')' → logprob: -10.975746154785156

Token 1682: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.0007106438861228526
    2. ' destination' → logprob: -7.250710487365723
    3. '(destination' → logprob: -14.625710487365723
    4. 'dest' → logprob: -15.500710487365723
    5. '       ' → logprob: -18.75071144104004
    6. '.destination' → logprob: -19.25071144104004
    7. '   ' → logprob: -19.62571144104004
    8. 'd' → logprob: -20.12571144104004
    9. '
' → logprob: -20.12571144104004
    10. 'Destination' → logprob: -20.50071144104004

Token 1683: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7829435467720032
    2. '
' → logprob: -0.9079435467720032
    3. '<|end|>' → logprob: -2.1579434871673584
    4. '<|end|>' → logprob: -4.7829437255859375
    5. '    
' → logprob: -5.1579437255859375
    6. '       ' → logprob: -5.4079437255859375
    7. ',' → logprob: -6.1579437255859375
    8. 'def' → logprob: -7.0329437255859375
    9. ')' → logprob: -7.9079437255859375
    10. '        
' → logprob: -8.032943725585938

Token 1684: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09815221279859543
    2. '
' → logprob: -2.9731521606445312
    3. 'def' → logprob: -3.4731521606445312
    4. '    
' → logprob: -4.848152160644531
    5. ' def' → logprob: -6.473152160644531
    6. '<|end|>' → logprob: -7.098152160644531
    7. '       ' → logprob: -8.223152160644531
    8. '        
' → logprob: -8.723152160644531
    9. ',' → logprob: -8.973152160644531
    10. '```' → logprob: -9.348152160644531

Token 1685: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31507790088653564
    2. '   ' → logprob: -1.9400779008865356
    3. '       ' → logprob: -2.315077781677246
    4. 'self' (adapté à ' self') → logprob: -4.315077781677246
    5. ' def' → logprob: -5.190077781677246
    6. '
' → logprob: -5.440077781677246
    7. '<|end|>' → logprob: -5.690077781677246
    8. ' self' → logprob: -7.690077781677246
    9. '```' → logprob: -8.940077781677246
    10. '<|end|>' → logprob: -9.440077781677246

Token 1686: '.max' (ID: 11883)
  Prédit: '.vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -1.2293592691421509
    2. '.best' → logprob: -1.7293592691421509
    3. '.dist' → logprob: -2.2293591499328613
    4. '.' → logprob: -2.6043591499328613
    5. '.max' → logprob: -2.7293591499328613
    6. '.current' → logprob: -3.1043591499328613
    7. '.time' → logprob: -3.1043591499328613
    8. '.min' → logprob: -3.8543591499328613
    9. '.initial' → logprob: -3.9793591499328613
    10. '.start' → logprob: -3.9793591499328613

Token 1687: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.20926320552825928
    2. '_wait' → logprob: -1.7092632055282593
    3. '_delay' → logprob: -6.459263324737549
    4. '_int' → logprob: -6.459263324737549
    5. '_search' → logprob: -6.834263324737549
    6. '_speed' → logprob: -7.334263324737549
    7. 'time' → logprob: -7.334263324737549
    8. '_tr' → logprob: -7.709263324737549
    9. 'int' → logprob: -7.834263324737549
    10. '_queue' → logprob: -8.58426284790039

Token 1688: '_limit' (ID: 34361)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.180416077375412
    2. '=' → logprob: -1.8054161071777344
    3. '   ' → logprob: -7.555416107177734
    4. ' ' → logprob: -9.930416107177734
    5. '  ' → logprob: -10.055416107177734
    6. '    ' → logprob: -10.180416107177734
    7. ':' → logprob: -11.305416107177734
    8. '=None' → logprob: -13.430416107177734
    9. ',' → logprob: -13.930416107177734
    10. '	' → logprob: -14.555416107177734

Token 1689: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520765960216522
    2. '=' → logprob: -1.5020766258239746
    3. '   ' → logprob: -9.002076148986816
    4. '    ' → logprob: -11.127076148986816
    5. ' ' → logprob: -12.252076148986816
    6. ':' → logprob: -12.752076148986816
    7. '       ' → logprob: -14.502076148986816
    8. '  ' → logprob: -14.502076148986816
    9. '_' → logprob: -15.377076148986816
    10. '=None' → logprob: -15.627076148986816

Token 1690: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008972267620265484
    2. '100' → logprob: -5.38397216796875
    3. 'sys' → logprob: -5.63397216796875
    4. 'float' → logprob: -7.75897216796875
    5. 'int' → logprob: -8.38397216796875
    6. '1' → logprob: -10.00897216796875
    7. '24' → logprob: -10.50897216796875
    8. '360' → logprob: -10.88397216796875
    9. '120' → logprob: -12.63397216796875
    10. '999' → logprob: -12.88397216796875

Token 1691: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.020292410627007484
    2. '100' → logprob: -4.020292282104492
    3. 'sys' → logprob: -6.270292282104492
    4. 'int' → logprob: -9.270292282104492
    5. 'float' → logprob: -9.770292282104492
    6. '1' → logprob: -10.270292282104492
    7. '24' → logprob: -10.520292282104492
    8. '360' → logprob: -11.145292282104492
    9. '144' → logprob: -12.395292282104492
    10. '300' → logprob: -12.645292282104492

Token 1692: ' ' (ID: 220)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '00' → logprob: -0.8693709373474121
    2. '0' → logprob: -1.119370937347412
    3. '000' → logprob: -1.369370937347412
    4. '_' → logprob: -10.61937141418457
    5. '       ' → logprob: -12.74437141418457
    6. '           ' → logprob: -13.36937141418457
    7. '*' → logprob: -13.99437141418457
    8. '   ' → logprob: -14.11937141418457
    9. ':' → logprob: -14.36937141418457
    10. '```' → logprob: -14.49437141418457

Token 1693: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5648289322853088
    2. '00' → logprob: -1.314828872680664
    3. '000' → logprob: -1.814828872680664
    4. '_' → logprob: -9.439828872680664
    5. '       ' → logprob: -10.064828872680664
    6. '   ' → logprob: -11.689828872680664
    7. '*' → logprob: -11.939828872680664
    8. '
' → logprob: -12.064828872680664
    9. '        
' → logprob: -12.439828872680664
    10. '```' → logprob: -13.064828872680664

Token 1694: ' given' (ID: 4335)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36542266607284546
    2. '000' → logprob: -1.3654227256774902
    3. 'self' → logprob: -3.9904227256774902
    4. '00' → logprob: -4.36542272567749
    5. '100' → logprob: -4.49042272567749
    6. 'def' → logprob: -6.11542272567749
    7. 'max' → logprob: -6.11542272567749
    8. 'None' → logprob: -6.61542272567749
    9. '   ' → logprob: -6.99042272567749
    10. 'import' → logprob: -7.74042272567749

Token 1695: ' problem' (ID: 4792)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12000320106744766
    2. '
' → logprob: -2.3700032234191895
    3. '

' → logprob: -5.4950032234191895
    4. 'def' → logprob: -5.4950032234191895
    5. '   ' → logprob: -5.8700032234191895
    6. '000' → logprob: -6.3700032234191895
    7. '00' → logprob: -6.7450032234191895
    8. '    
' → logprob: -6.8700032234191895
    9. 'self' → logprob: -7.2450032234191895
    10. '
' → logprob: -7.3700032234191895

Token 1696: ' constraint' (ID: 44762)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7945763468742371
    2. '
' → logprob: -1.0445764064788818
    3. 'def' → logprob: -1.9195764064788818
    4. '       ' → logprob: -4.794576168060303
    5. '<|end|>' → logprob: -5.044576168060303
    6. '0' → logprob: -5.169576168060303
    7. ' def' → logprob: -5.419576168060303
    8. ':' → logprob: -5.544576168060303
    9. '    
' → logprob: -5.669576168060303
    10. '        
' → logprob: -6.044576168060303

Token 1697: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3186664879322052
    2. '   ' → logprob: -1.3186664581298828
    3. '<|end|>' → logprob: -5.943666458129883
    4. '<|end|>' → logprob: -7.068666458129883
    5. '    
' → logprob: -7.443666458129883
    6. '

' → logprob: -7.818666458129883
    7. '       ' → logprob: -8.193666458129883
    8. ',' → logprob: -8.443666458129883
    9. ')' → logprob: -9.068666458129883
    10. '  
' → logprob: -9.943666458129883

Token 1698: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4357353746891022
    2. 'def' → logprob: -1.0607353448867798
    3. ' def' → logprob: -5.18573522567749
    4. '
' → logprob: -6.68573522567749
    5. '```' → logprob: -9.810735702514648
    6. '    
' → logprob: -10.435735702514648
    7. ' ' → logprob: -11.310735702514648
    8. '#' → logprob: -11.310735702514648
    9. '	def' → logprob: -11.310735702514648
    10. 'import' → logprob: -11.685735702514648

Token 1699: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0017433661269024014
    2. '   ' → logprob: -6.876743316650391
    3. ' def' → logprob: -7.251743316650391
    4. '
' → logprob: -14.12674331665039
    5. '	def' → logprob: -15.12674331665039
    6. '#' → logprob: -15.87674331665039
    7. ' ' → logprob: -16.62674331665039
    8. 'import' → logprob: -16.75174331665039
    9. '```' → logprob: -17.12674331665039
    10. '  ' → logprob: -17.75174331665039

Token 1700: ' compute' (ID: 23864)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4211638569831848
    2. 'd' → logprob: -2.04616379737854
    3. 'short' → logprob: -2.17116379737854
    4. ' find' → logprob: -3.54616379737854
    5. 'compute' → logprob: -3.54616379737854
    6. ' shortest' → logprob: -3.67116379737854
    7. 'run' → logprob: -5.421164035797119
    8. '_short' → logprob: -5.921164035797119
    9. 'solve' → logprob: -6.046164035797119
    10. ' d' → logprob: -6.421164035797119

Token 1701: '_short' (ID: 40379)
  Prédit: '_short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.1599799394607544
    2. '_fast' → logprob: -2.784979820251465
    3. '_next' → logprob: -4.034979820251465
    4. '(self' → logprob: -4.034979820251465
    5. '_path' → logprob: -4.159979820251465
    6. '_opt' → logprob: -4.659979820251465
    7. '_time' → logprob: -4.909979820251465
    8. '_min' → logprob: -5.409979820251465
    9. '_tr' → logprob: -5.659979820251465
    10. '_' → logprob: -6.034979820251465

Token 1702: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -7.493430894101039e-05
    2. '_path' → logprob: -9.750075340270996
    3. '   ' → logprob: -12.250075340270996
    4. 'path' → logprob: -12.375075340270996
    5. '
' → logprob: -13.375075340270996
    6. '_est' → logprob: -14.125075340270996
    7. '#' → logprob: -14.250075340270996
    8. 'test' → logprob: -14.250075340270996
    9. '       ' → logprob: -14.250075340270996
    10. '```' → logprob: -14.750075340270996

Token 1703: '_time' (ID: 6425)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0006579888286069036
    2. '_time' → logprob: -7.87565803527832
    3. '_tr' → logprob: -8.50065803527832
    4. '_route' → logprob: -10.00065803527832
    5. '_trip' → logprob: -10.87565803527832
    6. '_paths' → logprob: -11.87565803527832
    7. 'path' → logprob: -12.87565803527832
    8. '_arr' → logprob: -15.75065803527832
    9. 'travel' → logprob: -15.75065803527832
    10. '_distance' → logprob: -15.75065803527832

Token 1704: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.375006675720215
    4. '   ' → logprob: -16.8750057220459
    5. 'self' → logprob: -17.2500057220459
    6. '       ' → logprob: -18.1250057220459
    7. '(
' → logprob: -18.8750057220459
    8. '(this' → logprob: -20.3750057220459
    9. '(start' → logprob: -21.3750057220459
    10. '(s' → logprob: -21.6250057220459

Token 1705: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.040555138140916824
    2. 'self' → logprob: -3.665555238723755
    3. ')' → logprob: -5.290555000305176
    4. '   ' → logprob: -5.915555000305176
    5. '):
' → logprob: -6.290555000305176
    6. '       ' → logprob: -6.540555000305176
    7. ',' → logprob: -6.790555000305176
    8. ')(' → logprob: -6.790555000305176
    9. '(' → logprob: -8.290555000305176
    10. '):' → logprob: -9.290555000305176

Token 1706: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001483564410591498
    2. '(' → logprob: -9.37514877319336
    3. '       ' → logprob: -10.00014877319336
    4. '   ' → logprob: -11.12514877319336
    5. 'self' → logprob: -13.12514877319336
    6. ' (' → logprob: -14.75014877319336
    7. '(
' → logprob: -15.00014877319336
    8. 'def' → logprob: -15.12514877319336
    9. ':' → logprob: -15.62514877319336
    10. '(s' → logprob: -16.00014877319336

Token 1707: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.742448022123426e-05
    2. ' int' → logprob: -10.125067710876465
    3. 'None' → logprob: -11.125067710876465
    4. '(int' → logprob: -11.625067710876465
    5. 'Optional' → logprob: -13.500067710876465
    6. '[int' → logprob: -14.125067710876465
    7. '   ' → logprob: -14.625067710876465
    8. 'float' → logprob: -15.375067710876465
    9. '```' → logprob: -15.875067710876465
    10. 'self' → logprob: -16.00006675720215

Token 1708: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25113606452941895
    2. '(self' → logprob: -1.751136064529419
    3. ':
' → logprob: -3.876136064529419
    4. ':' → logprob: -4.00113582611084
    5. '   ' → logprob: -4.87613582611084
    6. '(' → logprob: -7.37613582611084
    7. '(
' → logprob: -7.62613582611084
    8. 'self' → logprob: -8.12613582611084
    9. '):
' → logprob: -9.12613582611084
    10. ',' → logprob: -10.25113582611084

Token 1709: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001835141738411039
    2. '
' → logprob: -9.25018310546875
    3. '        
' → logprob: -10.00018310546875
    4. '```' → logprob: -10.50018310546875
    5. '   ' → logprob: -12.12518310546875
    6. '           ' → logprob: -13.12518310546875
    7. 'import' → logprob: -13.62518310546875
    8. '    
' → logprob: -14.12518310546875
    9. ',' → logprob: -14.25018310546875
    10. '#' → logprob: -14.25018310546875

Token 1710: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6370550990104675
    2. 'import' → logprob: -0.8870550990104675
    3. 'dist' → logprob: -2.8870551586151123
    4. 'visited' → logprob: -6.387054920196533
    5. 'heap' → logprob: -6.887054920196533
    6. '#' (adapté à ' #') → logprob: -8.012055397033691
    7. 'start' → logprob: -8.512055397033691
    8. 'distance' → logprob: -9.012055397033691
    9. 'pq' → logprob: -9.512055397033691
    10. ' import' → logprob: -10.262055397033691

Token 1711: ' Use' (ID: 7649)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4943692088127136
    2. 'import' → logprob: -1.4943692684173584
    3. 'visited' → logprob: -2.4943692684173584
    4. '       ' → logprob: -2.7443692684173584
    5. '#' → logprob: -5.244369029998779
    6. 'start' → logprob: -5.369369029998779
    7. 'heap' → logprob: -5.869369029998779
    8. 'def' → logprob: -5.994369029998779
    9. '   ' → logprob: -6.744369029998779
    10. 'pq' → logprob: -6.869369029998779

Token 1712: ' D' (ID: 415)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.054145026952028275
    2. 'import' → logprob: -3.054145097732544
    3. 'def' → logprob: -5.429144859313965
    4. '       ' → logprob: -7.179144859313965
    5. ' heap' → logprob: -9.304144859313965
    6. 'self' → logprob: -9.304144859313965
    7. 'sys' → logprob: -9.554144859313965
    8. '
' → logprob: -10.179144859313965
    9. 'queue' → logprob: -10.554144859313965
    10. '   ' → logprob: -10.679144859313965

Token 1713: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0007102862582542002
    2. 'ijk' → logprob: -7.375710487365723
    3. 'ij' → logprob: -10.125710487365723
    4. '   ' → logprob: -10.500710487365723
    5. 'jik' → logprob: -11.750710487365723
    6. '```' → logprob: -13.000710487365723
    7. 'ijks' → logprob: -13.375710487365723
    8. 'jk' → logprob: -13.375710487365723
    9. '       ' → logprob: -13.750710487365723
    10. 'import' → logprob: -14.375710487365723

Token 1714: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2947220802307129
    2. '(self' → logprob: -1.919722080230713
    3. '(
' → logprob: -2.669722080230713
    4. '(' → logprob: -3.419722080230713
    5. '   ' → logprob: -6.669722080230713
    6. '(queue' → logprob: -6.794722080230713
    7. 'self' → logprob: -6.919722080230713
    8. ' (' → logprob: -7.419722080230713
    9. '_queue' → logprob: -8.044721603393555
    10. '...' → logprob: -8.294721603393555

Token 1715: ' state' (ID: 2608)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051722172647714615
    2. 'import' → logprob: -4.051722049713135
    3. ' heap' → logprob: -4.676722049713135
    4. 'heap' → logprob: -5.301722049713135
    5. '
' → logprob: -5.426722049713135
    6. '```' → logprob: -6.176722049713135
    7. ' start' → logprob: -6.176722049713135
    8. 'visited' → logprob: -6.426722049713135
    9. 'self' → logprob: -6.551722049713135
    10. '   ' → logprob: -6.551722049713135

Token 1716: ' includes' (ID: 6664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0319468975067139
    2. ' includes' → logprob: -1.4069468975067139
    3. '       ' → logprob: -1.6569468975067139
    4. '_queue' → logprob: -2.906946897506714
    5. ' with' → logprob: -3.781946897506714
    6. '=' → logprob: -3.906946897506714
    7. ' queue' → logprob: -3.906946897506714
    8. ':' → logprob: -4.406947135925293
    9. ' heap' → logprob: -4.906947135925293
    10. 'includes' → logprob: -4.906947135925293

Token 1717: ' facing' (ID: 20511)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4604335129261017
    2. 'time' → logprob: -1.3354334831237793
    3. ' self' → logprob: -2.8354334831237793
    4. ' time' → logprob: -4.085433483123779
    5. 'f' → logprob: -4.460433483123779
    6. '(self' → logprob: -5.085433483123779
    7. 'direction' → logprob: -5.585433483123779
    8. ' direction' → logprob: -6.210433483123779
    9. 'the' → logprob: -6.335433483123779
    10. ' (' → logprob: -6.710433483123779

Token 1718: ' direction' (ID: 9262)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05995672941207886
    2. '
' → logprob: -4.6849565505981445
    3. ':' → logprob: -4.8099565505981445
    4. '   ' → logprob: -4.9349565505981445
    5. '(self' → logprob: -5.1849565505981445
    6. '        
' → logprob: -5.1849565505981445
    7. ',' → logprob: -5.4349565505981445
    8. 'self' → logprob: -5.5599565505981445
    9. '(
' → logprob: -6.1849565505981445
    10. '_' → logprob: -6.3099565505981445

Token 1719: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005121330730617046
    2. 'import' → logprob: -6.255121231079102
    3. ',' → logprob: -6.380121231079102
    4. '
' → logprob: -7.005121231079102
    5. '        
' → logprob: -8.755121231079102
    6. '```' → logprob: -8.880121231079102
    7. ':' → logprob: -9.880121231079102
    8. '   ' → logprob: -10.005121231079102
    9. ' and' → logprob: -10.380121231079102
    10. '()' → logprob: -10.630121231079102

Token 1720: ' current' (ID: 2208)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.03842609375715256
    2. 'current' → logprob: -3.788426160812378
    3. ' time' → logprob: -4.788425922393799
    4. 'arrival' → logprob: -5.413425922393799
    5. 'waiting' → logprob: -6.788425922393799
    6. ' current' → logprob: -7.288425922393799
    7. ' arrival' → logprob: -8.788426399230957
    8. '
' → logprob: -9.413426399230957
    9. 'position' → logprob: -9.538426399230957
    10. '   ' → logprob: -10.413426399230957

Token 1721: ' intersection' (ID: 42002)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.45218321681022644
    2. 'time' → logprob: -1.3271832466125488
    3. ' time' → logprob: -2.327183246612549
    4. '_' → logprob: -7.827183246612549
    5. '
' → logprob: -8.70218276977539
    6. 'position' → logprob: -9.57718276977539
    7. '   ' → logprob: -9.82718276977539
    8. ' position' → logprob: -10.45218276977539
    9. '_position' → logprob: -10.45218276977539
    10. '_t' → logprob: -10.70218276977539

Token 1722: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031953046564012766
    2. '
' → logprob: -6.378195285797119
    3. ',' → logprob: -7.753195285797119
    4. 'import' → logprob: -8.128195762634277
    5. '        
' → logprob: -8.503195762634277
    6. '```' → logprob: -8.628195762634277
    7. '   ' → logprob: -9.128195762634277
    8. ':' → logprob: -9.628195762634277
    9. 'def' → logprob: -10.003195762634277
    10. 'queue' → logprob: -10.378195762634277

Token 1723: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.08996365964412689
    2. ' time' → logprob: -2.839963674545288
    3. 'current' → logprob: -3.839963674545288
    4. ' current' → logprob: -5.464963436126709
    5. 'arrival' → logprob: -6.589963436126709
    6. ' arrival' → logprob: -8.339963912963867
    7. '
' → logprob: -9.214963912963867
    8. 'waiting' → logprob: -9.964963912963867
    9. ' waiting' → logprob: -10.589963912963867
    10. '   ' → logprob: -10.839963912963867

Token 1724: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0138778705149889
    2. '
' → logprob: -4.638877868652344
    3. '```' → logprob: -6.638877868652344
    4. 'import' → logprob: -7.013877868652344
    5. '        
' → logprob: -7.013877868652344
    6. ',' → logprob: -8.263877868652344
    7. ':' → logprob: -8.388877868652344
    8. ':
' → logprob: -9.388877868652344
    9. 'tokens' → logprob: -9.888877868652344
    10. 'dist' → logprob: -10.013877868652344

Token 1725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007930741412565112
    2. '
' → logprob: -7.875792980194092
    3. '        
' → logprob: -8.12579345703125
    4. '```' → logprob: -9.50079345703125
    5. ':' → logprob: -12.12579345703125
    6. 'import' → logprob: -12.62579345703125
    7. '           ' → logprob: -12.62579345703125
    8. '    
' → logprob: -13.00079345703125
    9. '`' → logprob: -13.25079345703125
    10. '{
' → logprob: -13.25079345703125

Token 1726: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19571807980537415
    2. 'import' → logprob: -1.9457180500030518
    3. 'dist' → logprob: -3.4457180500030518
    4. 'visited' → logprob: -6.070718288421631
    5. 'distance' → logprob: -8.570717811584473
    6. ' import' → logprob: -8.945717811584473
    7. 'heap' → logprob: -9.070717811584473
    8. '#' (adapté à ' #') → logprob: -9.195717811584473
    9. 'queue' → logprob: -10.445717811584473
    10. '```' → logprob: -10.820717811584473

Token 1727: ' Facing' (ID: 174535)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0988149642944336
    2. 'import' → logprob: -2.9738149642944336
    3. 'dist' → logprob: -3.4738149642944336
    4. 'visited' → logprob: -4.473814964294434
    5. 'queue' → logprob: -8.848814964294434
    6. 'heap' → logprob: -9.348814964294434
    7. 'distance' → logprob: -9.473814964294434
    8. 'pq' → logprob: -9.473814964294434
    9. '```' → logprob: -10.223814964294434
    10. '#' → logprob: -10.223814964294434

Token 1728: ' direction' (ID: 9262)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17910021543502808
    2. '=' → logprob: -2.554100275039673
    3. '_direction' → logprob: -3.429100275039673
    4. 'direction' → logprob: -4.054100036621094
    5. ',' → logprob: -4.554100036621094
    6. '<|end|>' → logprob: -5.804100036621094
    7. ')' → logprob: -5.929100036621094
    8. '=None' → logprob: -5.929100036621094
    9. ':' → logprob: -6.054100036621094
    10. '   ' → logprob: -6.054100036621094

Token 1729: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3609529137611389
    2. ' =' → logprob: -1.3609528541564941
    3. '       ' → logprob: -4.235952854156494
    4. ',' → logprob: -4.860952854156494
    5. ' is' → logprob: -4.860952854156494
    6. 'import' → logprob: -5.360952854156494
    7. 'is' → logprob: -5.860952854156494
    8. 'initial' → logprob: -6.485952854156494
    9. 'from' → logprob: -6.610952854156494
    10. ':' → logprob: -6.610952854156494

Token 1730: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0522676482796669
    2. 'self' → logprob: -3.052267551422119
    3. 'the' → logprob: -5.677267551422119
    4. 'departure' → logprob: -9.427268028259277
    5. '#' → logprob: -9.677268028259277
    6. ' start' → logprob: -9.927268028259277
    7. 'arrival' → logprob: -10.427268028259277
    8. 'starting' → logprob: -11.302268028259277
    9. '       ' → logprob: -11.927268028259277
    10. 'initial' → logprob: -13.302268028259277

Token 1731: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6140604019165039
    2. ' =' → logprob: -0.8640604019165039
    3. '       ' → logprob: -3.989060401916504
    4. ':' → logprob: -4.114060401916504
    5. ',' → logprob: -7.114060401916504
    6. '=self' → logprob: -7.864060401916504
    7. 'self' → logprob: -8.114060401916504
    8. ' is' → logprob: -8.114060401916504
    9. '=start' → logprob: -8.864060401916504
    10. 'initial' → logprob: -9.239060401916504

Token 1732: ' East' (ID: 10809)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06117981672286987
    2. 'Direction' → logprob: -3.1861798763275146
    3. 'self' → logprob: -4.0611796379089355
    4. ''' → logprob: -8.436180114746094
    5. ' None' → logprob: -8.436180114746094
    6. 'North' → logprob: -8.936180114746094
    7. ' Direction' → logprob: -10.186180114746094
    8. ''N' → logprob: -10.186180114746094
    9. 'north' → logprob: -10.811180114746094
    10. ''s' → logprob: -11.061180114746094

Token 1733: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015312748961150646
    2. '
' → logprob: -4.765312671661377
    3. '        
' → logprob: -5.640312671661377
    4. ':' → logprob: -6.640312671661377
    5. ',' → logprob: -6.890312671661377
    6. '<|end|>' → logprob: -9.640313148498535
    7. ':
' → logprob: -9.765313148498535
    8. '   ' → logprob: -10.015313148498535
    9. ')' → logprob: -10.015313148498535
    10. ' =' → logprob: -10.140313148498535

Token 1734: ' time' (ID: 1058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4540488123893738
    2. 'visited' → logprob: -1.9540488719940186
    3. ' start' → logprob: -2.9540488719940186
    4. 'start' → logprob: -3.3290488719940186
    5. ' dist' → logprob: -3.4540488719940186
    6. ' visited' → logprob: -3.8290488719940186
    7. '
' → logprob: -4.0790486335754395
    8. 'import' → logprob: -4.3290486335754395
    9. 'initial' → logprob: -4.8290486335754395
    10. ' initial' → logprob: -4.8290486335754395

Token 1735: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18372571468353271
    2. ' =' → logprob: -1.8087257146835327
    3. '0' → logprob: -5.683725833892822
    4. '       ' → logprob: -7.808725833892822
    5. ':' → logprob: -9.683725357055664
    6. ',' → logprob: -10.683725357055664
    7. '
' → logprob: -10.683725357055664
    8. '        
' → logprob: -11.058725357055664
    9. '=
' → logprob: -11.683725357055664
    10. ' =
' → logprob: -12.433725357055664

Token 1736: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011236425780225545
    2. ' ' → logprob: -9.125112533569336
    3. '       ' → logprob: -12.875112533569336
    4. '=' → logprob: -15.500112533569336
    5. '   ' → logprob: -15.625112533569336
    6. '        ' → logprob: -16.250112533569336
    7. '1' → logprob: -16.500112533569336
    8. '               ' → logprob: -16.625112533569336
    9. '           ' → logprob: -16.875112533569336
    10. '```' → logprob: -17.250112533569336

Token 1737: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046582937240600586
    2. '
' → logprob: -3.1715829372406006
    3. '        
' → logprob: -6.04658317565918
    4. 'import' → logprob: -7.42158317565918
    5. 'queue' → logprob: -8.79658317565918
    6. '   ' → logprob: -9.54658317565918
    7. 'start' → logprob: -9.67158317565918
    8. ',' → logprob: -10.17158317565918
    9. ' 
' → logprob: -10.29658317565918
    10. '' → logprob: -10.42158317565918

Token 1738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000294586323434487
    2. '
' → logprob: -8.25029468536377
    3. 'import' → logprob: -11.12529468536377
    4. '        
' → logprob: -11.50029468536377
    5. '```' → logprob: -12.25029468536377
    6. 'queue' → logprob: -13.75029468536377
    7. '   ' → logprob: -14.50029468536377
    8. 'from' → logprob: -14.75029468536377
    9. '           ' → logprob: -15.12529468536377
    10. '	' → logprob: -15.50029468536377

Token 1739: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05676770210266113
    2. 'import' → logprob: -3.056767702102661
    3. 'dist' → logprob: -5.306767463684082
    4. 'visited' → logprob: -6.681767463684082
    5. 'queue' → logprob: -7.181767463684082
    6. 'heap' → logprob: -7.306767463684082
    7. 'pq' → logprob: -7.931767463684082
    8. 'start' → logprob: -9.556767463684082
    9. '```' → logprob: -10.681767463684082
    10. ' import' → logprob: -11.806767463684082

Token 1740: ' At' (ID: 3604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44794711470603943
    2. 'import' → logprob: -1.1979471445083618
    3. 'dist' → logprob: -3.0729470252990723
    4. 'visited' → logprob: -5.822947025299072
    5. 'pq' → logprob: -5.947947025299072
    6. 'start' → logprob: -6.072947025299072
    7. 'heap' → logprob: -6.197947025299072
    8. ' import' → logprob: -6.697947025299072
    9. 'queue' → logprob: -7.072947025299072
    10. ' dist' → logprob: -7.947947025299072

Token 1741: ' each' (ID: 2454)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.3644542098045349
    2. ' least' → logprob: -1.8644542694091797
    3. 'each' → logprob: -2.9894542694091797
    4. 'self' → logprob: -3.2394542694091797
    5. ' each' → logprob: -3.6144542694091797
    6. 'start' → logprob: -4.23945426940918
    7. 'def' → logprob: -5.23945426940918
    8. 'the' → logprob: -5.48945426940918
    9. ' the' → logprob: -5.61445426940918
    10. ' start' → logprob: -6.61445426940918

Token 1742: ' intersection' (ID: 42002)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.2637304365634918
    2. ' step' → logprob: -1.6387304067611694
    3. 'intersection' → logprob: -4.513730525970459
    4. 'neighbor' → logprob: -5.138730525970459
    5. 'node' → logprob: -5.263730525970459
    6. '_step' → logprob: -5.388730525970459
    7. 'state' → logprob: -5.763730525970459
    8. '   ' → logprob: -6.638730525970459
    9. 'move' → logprob: -7.013730525970459
    10. '       ' → logprob: -7.138730525970459

Token 1743: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6926428079605103
    2. ':' → logprob: -1.3176428079605103
    3. ',' → logprob: -1.5676428079605103
    4. ':
' → logprob: -4.067642688751221
    5. '
' → logprob: -6.192642688751221
    6. '        
' → logprob: -6.692642688751221
    7. '   ' → logprob: -7.192642688751221
    8. '):
' → logprob: -7.817642688751221
    9. '):' → logprob: -8.067643165588379
    10. '<|end|>' → logprob: -8.567643165588379

Token 1744: ' cannot' (ID: 6284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48032185435295105
    2. ' current' → logprob: -2.4803218841552734
    3. 'current' → logprob: -2.7303218841552734
    4. '   ' → logprob: -3.6053218841552734
    5. ' for' → logprob: -3.6053218841552734
    6. 'queue' → logprob: -3.7303218841552734
    7. 'import' → logprob: -3.7303218841552734
    8. 'visited' → logprob: -3.8553218841552734
    9. ' queue' → logprob: -4.355321884155273
    10. 'for' → logprob: -4.355321884155273

Token 1745: ' do' (ID: 621)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.024430930614471436
    2. 'stay' → logprob: -4.649430751800537
    3. 'move' → logprob: -4.774430751800537
    4. 'stand' → logprob: -6.399430751800537
    5. 'stop' → logprob: -6.899430751800537
    6. 'remain' → logprob: -7.274430751800537
    7. ' wait' → logprob: -7.774430751800537
    8. 'start' → logprob: -8.149431228637695
    9. 'change' → logprob: -8.149431228637695
    10. '   ' → logprob: -8.274431228637695

Token 1746: ' U' (ID: 601)
  Prédit: 'nothing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nothing' → logprob: -0.3844052255153656
    2. 'a' → logprob: -2.0094051361083984
    3. 'im' → logprob: -3.1344051361083984
    4. 'waiting' → logprob: -3.6344051361083984
    5. 'u' → logprob: -4.009405136108398
    6. ' nothing' → logprob: -4.134405136108398
    7. 'instant' → logprob: -4.384405136108398
    8. 'an' → logprob: -5.134405136108398
    9. 'wait' → logprob: -5.259405136108398
    10. '180' → logprob: -5.259405136108398

Token 1747: '-turn' (ID: 120746)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.021406199783086777
    2. '-turn' → logprob: -4.646406173706055
    3. '_turn' → logprob: -5.021406173706055
    4. ' turn' → logprob: -5.646406173706055
    5. 'TURN' → logprob: -7.146406173706055
    6. 'Turn' → logprob: -7.396406173706055
    7. '   ' → logprob: -11.021406173706055
    8. '.turn' → logprob: -12.146406173706055
    9. '
' → logprob: -12.271406173706055
    10. '턴' → logprob: -12.271406173706055

Token 1748: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18680888414382935
    2. '
' → logprob: -1.8118088245391846
    3. '        
' → logprob: -5.811809062957764
    4. ':' → logprob: -6.436809062957764
    5. '```' → logprob: -6.811809062957764
    6. ',' → logprob: -7.311809062957764
    7. ':
' → logprob: -8.311808586120605
    8. 'import' → logprob: -9.811808586120605
    9. 'def' → logprob: -10.436808586120605
    10. ')' → logprob: -10.436808586120605

Token 1749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014084660506341606
    2. '
' → logprob: -9.500141143798828
    3. 'import' → logprob: -10.375141143798828
    4. '        
' → logprob: -10.875141143798828
    5. '   ' → logprob: -12.000141143798828
    6. '```' → logprob: -12.375141143798828
    7. '           ' → logprob: -13.500141143798828
    8. 'from' → logprob: -13.750141143798828
    9. 'queue' → logprob: -14.750141143798828
    10. 'visited' → logprob: -15.000141143798828

Token 1750: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.35103318095207214
    2. 'dist' → logprob: -1.8510332107543945
    3. 'visited' → logprob: -2.6010332107543945
    4. '       ' → logprob: -3.1010332107543945
    5. 'heap' → logprob: -4.4760332107543945
    6. 'start' → logprob: -5.8510332107543945
    7. 'pq' → logprob: -6.8510332107543945
    8. 'queue' → logprob: -6.9760332107543945
    9. '#' (adapté à ' #') → logprob: -7.1010332107543945
    10. 'distance' → logprob: -7.2260332107543945

Token 1751: ' Dist' (ID: 35375)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5246774554252625
    2. 'visited' → logprob: -1.2746775150299072
    3. 'import' → logprob: -2.2746775150299072
    4. '       ' → logprob: -3.8996775150299072
    5. 'heap' → logprob: -5.899677276611328
    6. 'distance' → logprob: -7.399677276611328
    7. 'queue' → logprob: -7.649677276611328
    8. '#' → logprob: -7.774677276611328
    9. 'pq' → logprob: -7.899677276611328
    10. 'start' → logprob: -8.399677276611328

Token 1752: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.16325464844703674
    2. 'ance' → logprob: -1.9132546186447144
    3. '   ' → logprob: -6.413254737854004
    4. '       ' → logprob: -6.788254737854004
    5. 'import' → logprob: -8.663254737854004
    6. 'dist' → logprob: -10.538254737854004
    7. '           ' → logprob: -11.663254737854004
    8. '     ' → logprob: -11.788254737854004
    9. 'rance' → logprob: -11.788254737854004
    10. ' =' → logprob: -11.913254737854004

Token 1753: ' dictionary' (ID: 22131)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5235274434089661
    2. ' =' → logprob: -0.8985274434089661
    3. '       ' → logprob: -8.398527145385742
    4. 's' → logprob: -9.648527145385742
    5. ',' → logprob: -10.148527145385742
    6. '   ' → logprob: -10.898527145385742
    7. ':' → logprob: -10.898527145385742
    8. ')' → logprob: -11.898527145385742
    9. ' ' → logprob: -11.898527145385742
    10. '[' → logprob: -12.523527145385742

Token 1754: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49873650074005127
    2. '=' → logprob: -1.2487365007400513
    3. '       ' → logprob: -2.3737363815307617
    4. 'self' → logprob: -4.873736381530762
    5. ':' → logprob: -5.498736381530762
    6. 'dist' → logprob: -7.748736381530762
    7. ' self' → logprob: -8.373736381530762
    8. '{' → logprob: -8.873736381530762
    9. ' distances' → logprob: -9.998736381530762
    10. 'distance' → logprob: -10.498736381530762

Token 1755: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.010305598378181458
    2. ' dist' → logprob: -4.885305404663086
    3. 'self' → logprob: -6.885305404663086
    4. '       ' → logprob: -7.510305404663086
    5. 'default' → logprob: -7.760305404663086
    6. ' defaultdict' → logprob: -8.135305404663086
    7. ' distances' → logprob: -8.385305404663086
    8. 'distance' → logprob: -9.510305404663086
    9. ' self' → logprob: -10.135305404663086
    10. '{' → logprob: -11.010305404663086

Token 1756: 'Coordinate' (ID: 40872)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.020726745948195457
    2. 'self' → logprob: -4.020726680755615
    3. ' (' → logprob: -6.020726680755615
    4. '(co' → logprob: -9.645727157592773
    5. '(' → logprob: -10.395727157592773
    6. ' self' → logprob: -10.520727157592773
    7. ')' → logprob: -11.395727157592773
    8. '       ' → logprob: -12.395727157592773
    9. '   ' → logprob: -13.145727157592773
    10. '           ' → logprob: -13.520727157592773

Token 1757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7372048862162046e-05
    2. ' ,' → logprob: -11.250027656555176
    3. ',
' → logprob: -12.000027656555176
    4. '   ' → logprob: -12.500027656555176
    5. ')' → logprob: -13.375027656555176
    6. '
' → logprob: -14.000027656555176
    7. '<|end|>' → logprob: -14.750027656555176
    8. '),' → logprob: -15.500027656555176
    9. '    ' → logprob: -15.875027656555176
    10. '‌,' → logprob: -16.00002670288086

Token 1758: ' facing' (ID: 20511)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07901658117771149
    2. ' facing' → logprob: -2.57901668548584
    3. 'Facing' → logprob: -10.82901668548584
    4. 'str' → logprob: -11.20401668548584
    5. ')' → logprob: -11.20401668548584
    6. '_f' → logprob: -11.45401668548584
    7. ' direction' → logprob: -11.70401668548584
    8. 'direction' → logprob: -11.70401668548584
    9. 'face' → logprob: -11.82901668548584
    10. ' f' → logprob: -11.82901668548584

Token 1759: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4869123697280884
    2. ')' → logprob: -0.9869123697280884
    3. '_direction' → logprob: -4.611912250518799
    4. 'direction' → logprob: -6.236912250518799
    5. ' direction' → logprob: -8.361912727355957
    6. '),' → logprob: -8.611912727355957
    7. '   ' → logprob: -9.486912727355957
    8. ' ,' → logprob: -9.611912727355957
    9. '_dir' → logprob: -9.986912727355957
    10. '_DIRECTION' → logprob: -10.236912727355957

Token 1760: ' ->' (ID: 2747)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5959241986274719
    2. ' =' → logprob: -0.9709241986274719
    3. ',' → logprob: -2.845924139022827
    4. ')' → logprob: -4.595924377441406
    5. ':' → logprob: -7.345924377441406
    6. '       ' → logprob: -7.470924377441406
    7. ')=' → logprob: -8.095924377441406
    8. ' ,' → logprob: -9.470924377441406
    9. '),' → logprob: -9.595924377441406
    10. '
' → logprob: -10.345924377441406

Token 1761: ' minimum' (ID: 11085)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03744214028120041
    2. 'sys' → logprob: -3.912442207336426
    3. '{' → logprob: -5.537442207336426
    4. '[int' → logprob: -5.662442207336426
    5. 'time' → logprob: -6.162442207336426
    6. ' int' → logprob: -6.287442207336426
    7. '0' → logprob: -6.287442207336426
    8. 'float' → logprob: -6.412442207336426
    9. 'dict' → logprob: -7.787442207336426
    10. '{}' → logprob: -7.912442207336426

Token 1762: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.3240554928779602
    2. 'time' → logprob: -2.0740554332733154
    3. 'distance' → logprob: -2.8240554332733154
    4. '_distance' → logprob: -2.8240554332733154
    5. ' time' → logprob: -3.8240554332733154
    6. 'dist' → logprob: -5.8240556716918945
    7. ' distance' → logprob: -6.1990556716918945
    8. '       ' → logprob: -6.1990556716918945
    9. '_dist' → logprob: -6.4490556716918945
    10. 'int' → logprob: -7.0740556716918945

Token 1763: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02289438061416149
    2. 'dist' → logprob: -3.8978943824768066
    3. 'distance' → logprob: -6.897894382476807
    4. ' distances' → logprob: -7.397894382476807
    5. 'import' → logprob: -8.272893905639648
    6. 'd' → logprob: -8.522893905639648
    7. 'self' → logprob: -9.272893905639648
    8. ' dist' → logprob: -9.647893905639648
    9. ',' → logprob: -10.147893905639648
    10. 'from' → logprob: -11.272893905639648

Token 1764: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005942588322795928
    2. 'dist' → logprob: -8.125594139099121
    3. 'self' → logprob: -8.250594139099121
    4. 'd' → logprob: -11.875594139099121
    5. '   ' → logprob: -12.125594139099121
    6. 'distance' → logprob: -12.250594139099121
    7. ' distances' → logprob: -12.250594139099121
    8. ' self' → logprob: -12.375594139099121
    9. '        
' → logprob: -12.750594139099121
    10. '           ' → logprob: -13.750594139099121

Token 1765: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.004428931977599859
    2. '       ' → logprob: -5.504428863525391
    3. 'self' → logprob: -8.75442886352539
    4. 'import' → logprob: -9.50442886352539
    5. ' distances' → logprob: -9.87942886352539
    6. ' dist' → logprob: -10.12942886352539
    7. 'distance' → logprob: -11.00442886352539
    8. 'from' → logprob: -11.75442886352539
    9. 'd' → logprob: -13.37942886352539
    10. ' self' → logprob: -15.25442886352539

Token 1766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327822804450989
    2. '=' → logprob: -0.7577822804450989
    3. '   ' → logprob: -9.257781982421875
    4. '[' → logprob: -10.757781982421875
    5. '={}' → logprob: -11.132781982421875
    6. ',' → logprob: -11.257781982421875
    7. ' ' → logprob: -11.632781982421875
    8. 's' → logprob: -12.257781982421875
    9. '  ' → logprob: -12.257781982421875
    10. ')' → logprob: -12.257781982421875

Token 1767: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -5.848420551046729e-05
    2. ' defaultdict' → logprob: -10.0000581741333
    3. '{}' → logprob: -11.8750581741333
    4. 'dict' → logprob: -12.5000581741333
    5. '{' → logprob: -13.5000581741333
    6. '.default' → logprob: -15.0000581741333
    7. '(default' → logprob: -15.0000581741333
    8. ' default' → logprob: -15.7500581741333
    9. '       ' → logprob: -16.875059127807617
    10. '"default' → logprob: -17.000059127807617

Token 1768: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25851336121559143
    2. '()
' → logprob: -2.0085134506225586
    3. '()' → logprob: -2.3835134506225586
    4. '{' → logprob: -7.133513450622559
    5. '[(' → logprob: -8.508513450622559
    6. ',' → logprob: -8.758513450622559
    7. '[' → logprob: -10.008513450622559
    8. '()

' → logprob: -11.008513450622559
    9. '
' → logprob: -11.008513450622559
    10. '()
' → logprob: -11.133513450622559

Token 1769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035412744618952274
    2. 'pq' → logprob: -6.628541469573975
    3. 'queue' → logprob: -6.878541469573975
    4. 'heap' → logprob: -8.128540992736816
    5. 'priority' → logprob: -8.128540992736816
    6. '```' → logprob: -8.253540992736816
    7. 'import' → logprob: -8.378540992736816
    8. '   ' → logprob: -10.753540992736816
    9. 'start' → logprob: -10.753540992736816
    10. '
' → logprob: -11.003540992736816

Token 1770: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0051416158676147
    2. 'start' → logprob: -1.2551416158676147
    3. 'pq' → logprob: -1.5051416158676147
    4. 'import' → logprob: -3.0051417350769043
    5. 'queue' → logprob: -3.2551417350769043
    6. 'heap' → logprob: -3.2551417350769043
    7. 'dist' → logprob: -9.630141258239746
    8. 'from' → logprob: -10.005141258239746
    9. 'priority' → logprob: -10.130141258239746
    10. 'initial' → logprob: -10.380141258239746

Token 1771: ' Priority' (ID: 54625)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6014454960823059
    2. 'pq' → logprob: -0.8514454960823059
    3. 'import' → logprob: -4.60144567489624
    4. 'queue' → logprob: -4.85144567489624
    5. 'start' → logprob: -5.10144567489624
    6. 'hq' → logprob: -6.97644567489624
    7. '#' → logprob: -8.851445198059082
    8. 'initial' → logprob: -9.601445198059082
    9. 'priority' → logprob: -10.976445198059082
    10. '   ' → logprob: -11.101445198059082

Token 1772: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.02105807326734066
    2. 'q' → logprob: -4.021058082580566
    3. ' queue' → logprob: -6.021058082580566
    4. 'que' → logprob: -8.396058082580566
    5. 'heap' → logprob: -8.896058082580566
    6. '_queue' → logprob: -9.271058082580566
    7. '       ' → logprob: -11.646058082580566
    8. 'Queue' → logprob: -12.146058082580566
    9. '
' → logprob: -12.896058082580566
    10. '   ' → logprob: -13.896058082580566

Token 1773: ':' (ID: 25)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.28404927253723145
    2. 'heap' → logprob: -2.0340492725372314
    3. 'queue' → logprob: -2.7840492725372314
    4. '       ' → logprob: -3.0340492725372314
    5. 'q' → logprob: -5.409049034118652
    6. 'hq' → logprob: -6.659049034118652
    7. 'import' → logprob: -8.534049034118652
    8. '=' → logprob: -9.284049034118652
    9. ' =' → logprob: -9.534049034118652
    10. '```' → logprob: -9.659049034118652

Token 1774: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6258097290992737
    2. '[(' → logprob: -1.125809669494629
    3. 'heap' → logprob: -2.125809669494629
    4. '[]
' → logprob: -3.875809669494629
    5. ' []' → logprob: -8.000809669494629
    6. 'pq' → logprob: -8.875809669494629
    7. ' [(' → logprob: -9.750809669494629
    8. ' heap' → logprob: -10.000809669494629
    9. '[' → logprob: -10.125809669494629
    10. ' []
' → logprob: -10.875809669494629

Token 1775: 'time' (ID: 4580)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014057852327823639
    2. '0' → logprob: -4.764057636260986
    3. '(self' → logprob: -5.514057636260986
    4. ' self' → logprob: -7.264057636260986
    5. 'time' → logprob: -8.139058113098145
    6. 'heap' → logprob: -8.889058113098145
    7. ' (' → logprob: -9.014058113098145
    8. '(' → logprob: -9.514058113098145
    9. '   ' → logprob: -10.639058113098145
    10. ')' → logprob: -10.889058113098145

Token 1776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001468067930545658
    2. ',
' → logprob: -9.250146865844727
    3. ' ,' → logprob: -10.875146865844727
    4. '       ' → logprob: -11.125146865844727
    5. ')' → logprob: -12.000146865844727
    6. '
' → logprob: -13.250146865844727
    7. ',(' → logprob: -13.625146865844727
    8. '```' → logprob: -13.625146865844727
    9. '   ' → logprob: -14.000146865844727
    10. '),' → logprob: -14.250146865844727

Token 1777: ' Coordinate' (ID: 78454)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.0069196149706840515
    2. ' State' → logprob: -5.2569193840026855
    3. 'self' → logprob: -6.5069193840026855
    4. ' self' → logprob: -9.006919860839844
    5. 'state' → logprob: -10.256919860839844
    6. '   ' → logprob: -11.381919860839844
    7. 'Self' → logprob: -11.756919860839844
    8. ' state' → logprob: -12.381919860839844
    9. '       ' → logprob: -12.631919860839844
    10. '
' → logprob: -13.381919860839844

Token 1778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009708948782645166
    2. ')' → logprob: -7.000970840454102
    3. ',
' → logprob: -10.250970840454102
    4. ' ,' → logprob: -11.125970840454102
    5. '),' → logprob: -12.875970840454102
    6. '<|end|>' → logprob: -12.875970840454102
    7. '   ' → logprob: -14.000970840454102
    8. '
' → logprob: -14.375970840454102
    9. ',)' → logprob: -14.750970840454102
    10. ',f' → logprob: -15.250970840454102

Token 1779: ' facing' (ID: 20511)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0020907807629555464
    2. ' facing' → logprob: -6.627090930938721
    3. 'State' → logprob: -7.502090930938721
    4. 'Facing' → logprob: -9.252090454101562
    5. ')' → logprob: -10.127090454101562
    6. ' State' → logprob: -10.502090454101562
    7. 'fac' → logprob: -11.252090454101562
    8. '   ' → logprob: -11.502090454101562
    9. 'state' → logprob: -12.002090454101562
    10. 'self' → logprob: -12.252090454101562

Token 1780: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03130553662776947
    2. ',' → logprob: -3.5313055515289307
    3. ')
' → logprob: -6.531305313110352
    4. '       ' → logprob: -10.531305313110352
    5. '   ' → logprob: -10.656305313110352
    6. ')`' → logprob: -11.406305313110352
    7. '),' → logprob: -11.531305313110352
    8. ' )' → logprob: -11.906305313110352
    9. ')
' → logprob: -12.406305313110352
    10. '))' → logprob: -12.531305313110352

Token 1781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3736714720726013
    2. 'heap' → logprob: -2.123671531677246
    3. ',' → logprob: -2.373671531677246
    4. ' heap' → logprob: -3.123671531677246
    5. 'queue' → logprob: -3.873671531677246
    6. 'pq' → logprob: -4.248671531677246
    7. ')' → logprob: -4.873671531677246
    8. ' queue' → logprob: -5.748671531677246
    9. 'import' → logprob: -5.873671531677246
    10. 'q' → logprob: -6.123671531677246

Token 1782: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.7071375846862793
    2. 'pq' → logprob: -1.2071375846862793
    3. '       ' → logprob: -2.2071375846862793
    4. 'import' → logprob: -2.4571375846862793
    5. 'queue' → logprob: -4.457137584686279
    6. 'hq' → logprob: -8.082138061523438
    7. ' heap' → logprob: -8.832138061523438
    8. 'p' → logprob: -9.832138061523438
    9. '   ' → logprob: -9.957138061523438
    10. 'q' → logprob: -11.082138061523438

Token 1783: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003061015158891678
    2. ' =' → logprob: -6.753060817718506
    3. '=' → logprob: -7.128060817718506
    4. '       ' → logprob: -7.503060817718506
    5. '.push' → logprob: -8.628061294555664
    6. '   ' → logprob: -9.003061294555664
    7. '.he' → logprob: -9.878061294555664
    8. '.' → logprob: -10.003061294555664
    9. 'push' → logprob: -10.753061294555664
    10. '=[]
' → logprob: -10.753061294555664

Token 1784: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.02355140633881092
    2. '[]' → logprob: -3.7735514640808105
    3. '[]
' → logprob: -8.273550987243652
    4. ' [(' → logprob: -10.273550987243652
    5. '[' → logprob: -11.273550987243652
    6. ' []' → logprob: -13.023550987243652
    7. '[((' → logprob: -14.273550987243652
    8. '[]

' → logprob: -15.023550987243652
    9. '[
' → logprob: -15.898550987243652
    10. '[],' → logprob: -16.64855194091797

Token 1785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5717206001281738
    2. ' heap' → logprob: -1.3217206001281738
    3. 'heap' → logprob: -1.8217206001281738
    4. '(heap' → logprob: -5.821720600128174
    5. '```' → logprob: -6.321720600128174
    6. '
' → logprob: -7.696720600128174
    7. 'he' → logprob: -8.571720123291016
    8. 'dist' → logprob: -8.696720123291016
    9. ',' → logprob: -8.696720123291016
    10. '        
' → logprob: -8.946720123291016

Token 1786: ' start' (ID: 1604)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.06739848107099533
    2. '       ' → logprob: -3.1923985481262207
    3. ' heap' → logprob: -3.8173985481262207
    4. 'import' → logprob: -7.317398548126221
    5. 'initial' → logprob: -7.317398548126221
    6. 'start' (adapté à ' start') → logprob: -7.442398548126221
    7. 'state' → logprob: -9.567398071289062
    8. 'he' → logprob: -9.692398071289062
    9. '(heap' → logprob: -11.067398071289062
    10. 'dist' → logprob: -11.442398071289062

Token 1787: '_f' (ID: 1337)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.840739905834198
    2. '.append' → logprob: -1.9657399654388428
    3. '.push' → logprob: -2.4657399654388428
    4. ' =' → logprob: -2.5907399654388428
    5. '_item' → logprob: -2.7157399654388428
    6. '_push' → logprob: -3.0907399654388428
    7. '.' → logprob: -3.3407399654388428
    8. '=' → logprob: -3.5907399654388428
    9. 'q' → logprob: -3.7157399654388428
    10. '_coord' → logprob: -4.090739727020264

Token 1788: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -0.0016948189586400986
    2. 'ace' → logprob: -6.501694679260254
    3. 'ac' → logprob: -9.501694679260254
    4. ')' → logprob: -10.876694679260254
    5. 'aced' → logprob: -11.001694679260254
    6. '```' → logprob: -11.751694679260254
    7. 'Facing' → logprob: -12.001694679260254
    8. 'acement' → logprob: -12.126694679260254
    9. 'acet' → logprob: -12.126694679260254
    10. 'acem' → logprob: -12.126694679260254

Token 1789: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0232557263225317
    2. ' =' → logprob: -3.7732558250427246
    3. '='' → logprob: -11.898255348205566
    4. ')' → logprob: -12.898255348205566
    5. ',' → logprob: -14.648255348205566
    6. ' ='' → logprob: -15.523255348205566
    7. ')=' → logprob: -16.773256301879883
    8. '=
' → logprob: -16.898256301879883
    9. '=None' → logprob: -17.148256301879883
    10. ' ' → logprob: -17.523256301879883

Token 1790: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.12889845669269562
    2. ''E' → logprob: -2.1288983821868896
    3. ''' → logprob: -6.503898620605469
    4. 'E' → logprob: -8.753898620605469
    5. ''D' → logprob: -9.128898620605469
    6. ' Direction' → logprob: -9.628898620605469
    7. 'Directional' → logprob: -9.753898620605469
    8. ''e' → logprob: -10.253898620605469
    9. 'East' → logprob: -10.503898620605469
    10. '"E' → logprob: -12.128898620605469

Token 1791: '.E' (ID: 9032)
  Prédit: '.E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -0.00770174153149128
    2. 'E' → logprob: -5.257701873779297
    3. ''E' → logprob: -7.007701873779297
    4. '.' → logprob: -7.382701873779297
    5. '('' → logprob: -7.632701873779297
    6. ''.' → logprob: -8.757701873779297
    7. '['' → logprob: -9.507701873779297
    8. '   ' → logprob: -10.382701873779297
    9. '(E' → logprob: -10.382701873779297
    10. 'East' → logprob: -10.632701873779297

Token 1792: 'AST' (ID: 10141)
  Prédit: 'AST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AST' → logprob: -0.0010500772623345256
    2. 'A' → logprob: -7.626049995422363
    3. 'ast' → logprob: -7.751049995422363
    4. 'ASTE' → logprob: -10.251049995422363
    5. 'AS' → logprob: -10.626049995422363
    6. 'ST' → logprob: -11.251049995422363
    7. '```' → logprob: -11.501049995422363
    8. '(ast' → logprob: -11.751049995422363
    9. '[' → logprob: -12.001049995422363
    10. ',' → logprob: -12.501049995422363

Token 1793: '
' (ID: 198)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5761615037918091
    2. '       ' → logprob: -1.576161503791809
    3. ')' → logprob: -1.826161503791809
    4. '
' → logprob: -3.0761613845825195
    5. 'heap' → logprob: -4.2011613845825195
    6. ',' → logprob: -5.4511613845825195
    7. ',
' → logprob: -6.4511613845825195
    8. ' heap' → logprob: -7.3261613845825195
    9. '),' → logprob: -7.7011613845825195
    10. ')
' → logprob: -7.9511613845825195

Token 1794: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6475937962532043
    2. '       ' → logprob: -1.0225937366485596
    3. ' heap' → logprob: -2.1475937366485596
    4. 'state' → logprob: -9.39759349822998
    5. 'start' → logprob: -10.02259349822998
    6. '(heap' → logprob: -10.14759349822998
    7. 'import' → logprob: -10.39759349822998
    8. 'he' → logprob: -10.77259349822998
    9. '```' → logprob: -11.39759349822998
    10. '.heap' → logprob: -11.64759349822998

Token 1795: ' start' (ID: 1604)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0002444125711917877
    2. 'start' (adapté à ' start') → logprob: -8.875244140625
    3. 'dist' → logprob: -9.875244140625
    4. 'he' → logprob: -10.625244140625
    5. 'state' → logprob: -11.250244140625
    6. ' heap' → logprob: -12.250244140625
    7. 'initial' → logprob: -12.500244140625
    8. '       ' → logprob: -12.875244140625
    9. 'import' → logprob: -13.000244140625
    10. '   ' → logprob: -13.000244140625

Token 1796: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.022495238110423088
    2. '_time' → logprob: -4.397495269775391
    3. 'state' → logprob: -5.397495269775391
    4. ')' → logprob: -6.522495269775391
    5. 'State' → logprob: -7.272495269775391
    6. '_dist' → logprob: -7.522495269775391
    7. '=' → logprob: -7.647495269775391
    8. ' =' → logprob: -7.772495269775391
    9. '_f' → logprob: -8.02249526977539
    10. ',' → logprob: -8.02249526977539

Token 1797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011735594598576427
    2. ' =' → logprob: -6.751173496246338
    3. '=
' → logprob: -13.001173973083496
    4. ')' → logprob: -14.501173973083496
    5. ')=' → logprob: -15.126173973083496
    6. '=

' → logprob: -15.876173973083496
    7. ',' → logprob: -16.37617301940918
    8. '=}' → logprob: -16.50117301940918
    9. '.=' → logprob: -17.62617301940918
    10. ' ' → logprob: -17.62617301940918

Token 1798: ' State' (ID: 5388)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -0.018151935189962387
    2. ' State' → logprob: -4.018151760101318
    3. '(State' → logprob: -13.268152236938477
    4. '	State' → logprob: -15.393152236938477
    5. '   ' → logprob: -17.018152236938477
    6. 'state' → logprob: -17.518152236938477
    7. '_State' → logprob: -18.393152236938477
    8. '_state' → logprob: -18.768152236938477
    9. ' state' → logprob: -19.893152236938477
    10. '<State' → logprob: -20.018152236938477

Token 1799: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005822229431942105
    2. 'self' → logprob: -7.500582218170166
    3. '(' → logprob: -10.625582695007324
    4. '(
' → logprob: -12.250582695007324
    5. ' self' → logprob: -16.000581741333008
    6. '       ' → logprob: -18.250581741333008
    7. '[self' → logprob: -18.625581741333008
    8. '=self' → logprob: -19.125581741333008
    9. '(
' → logprob: -19.375581741333008
    10. ' (' → logprob: -19.500581741333008

Token 1800: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0067167943343520164
    2. 'start' → logprob: -5.006716728210449
    3. '.user' → logprob: -14.63171672821045
    4. ' start' → logprob: -14.75671672821045
    5. '_start' → logprob: -15.75671672821045
    6. 'user' → logprob: -16.256717681884766
    7. ').' → logprob: -16.631717681884766
    8. '=start' → logprob: -16.881717681884766
    9. '	start' → logprob: -17.131717681884766
    10. ',start' → logprob: -17.256717681884766

Token 1801: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.619311974034645e-05
    2. ',
' → logprob: -11.500036239624023
    3. ' ,' → logprob: -11.875036239624023
    4. '<|end|>' → logprob: -12.000036239624023
    5. ')' → logprob: -12.500036239624023
    6. ',None' → logprob: -12.625036239624023
    7. '‌,' → logprob: -13.875036239624023
    8. '),' → logprob: -14.125036239624023
    9. ',start' → logprob: -14.750036239624023
    10. ',)' → logprob: -14.750036239624023

Token 1802: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00015872348740231246
    2. ' start' → logprob: -8.750158309936523
    3. '[start' → logprob: -15.500158309936523
    4. '   ' → logprob: -18.125158309936523
    5. '(start' → logprob: -18.250158309936523
    6. ' ' → logprob: -19.125158309936523
    7. 'Direction' → logprob: -19.375158309936523
    8. '=start' → logprob: -19.375158309936523
    9. '       ' → logprob: -19.625158309936523
    10. '	start' → logprob: -19.750158309936523

Token 1803: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.570319702499546e-05
    2. ')' → logprob: -11.750025749206543
    3. 'f' → logprob: -12.250025749206543
    4. ')_' → logprob: -13.125025749206543
    5. '`' → logprob: -13.375025749206543
    6. '._' → logprob: -13.500025749206543
    7. '_' → logprob: -13.625025749206543
    8. '
' → logprob: -14.000025749206543
    9. '```' → logprob: -14.250025749206543
    10. ',' → logprob: -14.625025749206543

Token 1804: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -0.00987283792346716
    2. '_f' → logprob: -4.759872913360596
    3. 'ing' → logprob: -6.884872913360596
    4. 'f' → logprob: -9.259872436523438
    5. '_direction' → logprob: -10.009872436523438
    6. 'ac' → logprob: -10.759872436523438
    7. 'ACING' → logprob: -11.259872436523438
    8. 'Facing' → logprob: -11.759872436523438
    9. 'aced' → logprob: -11.759872436523438
    10. 'ace' → logprob: -12.134872436523438

Token 1805: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ',
' → logprob: -11.125021934509277
    3. ')' → logprob: -12.250021934509277
    4. ' ,' → logprob: -13.875021934509277
    5. '<|end|>' → logprob: -14.625021934509277
    6. '       ' → logprob: -15.500021934509277
    7. '‌,' → logprob: -15.750021934509277
    8. ',

' → logprob: -16.00002098083496
    9. '),' → logprob: -16.75002098083496
    10. '0' → logprob: -17.00002098083496

Token 1806: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -19.125
    5. '       ' → logprob: -19.875
    6. '
' → logprob: -20.25
    7. '00' → logprob: -20.75
    8. '۰' → logprob: -21.25
    9. '1' → logprob: -21.375
    10. '           ' → logprob: -21.5

Token 1807: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -20.0
    5. '00' → logprob: -20.5
    6. '۰' → logprob: -20.625
    7. '
' → logprob: -21.125
    8. '       ' → logprob: -21.4375
    9. '=' → logprob: -21.75
    10. '           ' → logprob: -22.0

Token 1808: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04884135350584984
    2. ')' → logprob: -3.0488412380218506
    3. ')
' → logprob: -8.54884147644043
    4. '       ' → logprob: -9.79884147644043
    5. '   ' → logprob: -13.67384147644043
    6. ')`
' → logprob: -13.79884147644043
    7. ')

' → logprob: -15.04884147644043
    8. ' )
' → logprob: -15.04884147644043
    9. ')`' → logprob: -15.04884147644043
    10. '),' → logprob: -15.42384147644043

Token 1809: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5526179671287537
    2. '       ' → logprob: -0.9276179671287537
    3. ' heap' → logprob: -3.5526180267333984
    4. '(heap' → logprob: -8.677618026733398
    5. '```' → logprob: -8.677618026733398
    6. '.heap' → logprob: -10.802618026733398
    7. 'he' → logprob: -11.427618026733398
    8. '	' → logprob: -11.802618026733398
    9. '   ' → logprob: -11.802618026733398
    10. 'import' → logprob: -12.427618026733398

Token 1810: ' dist' (ID: 3601)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -2.3676733690081164e-05
    2. '       ' → logprob: -11.12502384185791
    3. ' heap' → logprob: -11.75002384185791
    4. 'import' → logprob: -15.00002384185791
    5. 'he' → logprob: -15.37502384185791
    6. '   ' → logprob: -15.50002384185791
    7. 'dist' (adapté à ' dist') → logprob: -16.000022888183594
    8. '```' → logprob: -16.750022888183594
    9. '        
' → logprob: -18.375022888183594
    10. '
' → logprob: -18.500022888183594

Token 1811: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.41151395440101624
    2. '[' → logprob: -1.1615139245986938
    3. '[start' → logprob: -3.7865140438079834
    4. '[
' → logprob: -7.661513805389404
    5. '[state' → logprob: -8.536514282226562
    6. '.setdefault' → logprob: -8.786514282226562
    7. '[key' → logprob: -8.786514282226562
    8. '```' → logprob: -8.786514282226562
    9. '[token' → logprob: -9.036514282226562
    10. '[((' → logprob: -9.161514282226562

Token 1812: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38691475987434387
    2. 'start' → logprob: -1.1369147300720215
    3. '(self' → logprob: -10.63691520690918
    4. ' self' → logprob: -11.38691520690918
    5. '(start' → logprob: -12.01191520690918
    6. ' start' → logprob: -13.38691520690918
    7. 'state' → logprob: -15.13691520690918
    8. ')' → logprob: -15.63691520690918
    9. 'str' → logprob: -16.63691520690918
    10. '(' → logprob: -16.63691520690918

Token 1813: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.008619419299066067
    2. 'start' → logprob: -4.75861930847168
    3. '_start' → logprob: -12.75861930847168
    4. '.state' → logprob: -14.50861930847168
    5. 'state' → logprob: -15.13361930847168
    6. '[start' → logprob: -15.25861930847168
    7. '(start' → logprob: -15.75861930847168
    8. ' start' → logprob: -16.00861930847168
    9. '.s' → logprob: -16.13361930847168
    10. '.' → logprob: -16.38361930847168

Token 1814: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003986144147347659
    2. ',
' → logprob: -9.625398635864258
    3. ' ,' → logprob: -9.625398635864258
    4. ',None' → logprob: -10.000398635864258
    5. ',),' → logprob: -10.000398635864258
    6. ',)' → logprob: -10.250398635864258
    7. '),' → logprob: -10.250398635864258
    8. '<|end|>' → logprob: -10.500398635864258
    9. ')' → logprob: -10.625398635864258
    10. ',start' → logprob: -11.875398635864258

Token 1815: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00026300468016415834
    2. ' start' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.375263214111328
    4. '[start' → logprob: -15.625263214111328
    5. 'Start' → logprob: -16.000263214111328
    6. '(start' → logprob: -16.125263214111328
    7. 'self' → logprob: -16.125263214111328
    8. '       ' → logprob: -16.125263214111328
    9. 'star' → logprob: -16.375263214111328
    10. ' ' → logprob: -16.375263214111328

Token 1816: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0052634067833423615
    2. '_state' → logprob: -5.255263328552246
    3. 'state' → logprob: -11.630263328552246
    4. 'f' → logprob: -12.130263328552246
    5. '_' → logprob: -12.255263328552246
    6. ')' → logprob: -12.630263328552246
    7. ')]' → logprob: -13.255263328552246
    8. '_direction' → logprob: -13.755263328552246
    9. '_face' → logprob: -14.255263328552246
    10. ')_' → logprob: -14.755263328552246

Token 1817: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -0.0004577174549922347
    2. 'cing' → logprob: -9.000457763671875
    3. 'ing' → logprob: -9.500457763671875
    4. ')' → logprob: -10.000457763671875
    5. 'ace' → logprob: -10.625457763671875
    6. 'ac' → logprob: -10.750457763671875
    7. 'f' → logprob: -10.875457763671875
    8. '_' → logprob: -11.375457763671875
    9. '```' → logprob: -11.375457763671875
    10. 'aced' → logprob: -11.375457763671875

Token 1818: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011038987431675196
    2. ')' → logprob: -7.00110387802124
    3. ' )' → logprob: -9.376104354858398
    4. '),' → logprob: -10.251104354858398
    5. ']' → logprob: -10.376104354858398
    6. ',' → logprob: -11.251104354858398
    7. ')]
' → logprob: -11.626104354858398
    8. ')])' → logprob: -11.876104354858398
    9. ')],' → logprob: -12.626104354858398
    10. ')][' → logprob: -13.001104354858398

Token 1819: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004372254479676485
    2. ' =' → logprob: -7.750437259674072
    3. '=
' → logprob: -12.000436782836914
    4. ')' → logprob: -15.875436782836914
    5. ')=' → logprob: -15.875436782836914
    6. '=

' → logprob: -16.750436782836914
    7. ']=' → logprob: -17.250436782836914
    8. '[' → logprob: -17.750436782836914
    9. '=None' → logprob: -17.875436782836914
    10. '   ' → logprob: -18.250436782836914

Token 1820: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -20.875
    4. '   ' → logprob: -21.125
    5. '[' → logprob: -21.625
    6. '00' → logprob: -22.25
    7. '=' → logprob: -23.0625
    8. '(' → logprob: -23.125
    9. '000' → logprob: -23.5
    10. '```' → logprob: -23.625

Token 1821: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۰' → logprob: -20.5
    4. '   ' → logprob: -21.375
    5. '000' → logprob: -21.625
    6. '(' → logprob: -21.875
    7. '00' → logprob: -22.1875
    8. '{' → logprob: -22.4375
    9. '[' → logprob: -22.625
    10. '০' → logprob: -22.75

Token 1822: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05001533031463623
    2. 'heap' → logprob: -3.050015449523926
    3. ' heap' → logprob: -7.175015449523926
    4. '(heap' → logprob: -8.550015449523926
    5. '
' → logprob: -9.050015449523926
    6. '```' → logprob: -9.300015449523926
    7. '   ' → logprob: -9.550015449523926
    8. ',' → logprob: -9.675015449523926
    9. ')' → logprob: -10.300015449523926
    10. '.heap' → logprob: -10.675015449523926

Token 1823: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12767238914966583
    2. 'heap' → logprob: -2.1276724338531494
    3. ' heap' → logprob: -8.12767219543457
    4. '```' → logprob: -8.62767219543457
    5. '(heap' → logprob: -9.00267219543457
    6. ',' → logprob: -10.25267219543457
    7. '	' → logprob: -10.37767219543457
    8. '   ' → logprob: -10.62767219543457
    9. '
' → logprob: -11.12767219543457
    10. ')' → logprob: -11.87767219543457

Token 1824: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.5048530030981055e-06
    2. ' heap' → logprob: -14.125001907348633
    3. '       ' → logprob: -14.375001907348633
    4. '```' → logprob: -16.750001907348633
    5. 'he' → logprob: -17.000001907348633
    6. 'import' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '
' → logprob: -19.250001907348633
    9. '        
' → logprob: -19.250001907348633
    10. 'queue' → logprob: -20.250001907348633

Token 1825: 'q' (ID: 80)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011636919341981411
    2. '.append' → logprob: -4.761636734008789
    3. '.he' → logprob: -6.011636734008789
    4. '.
' → logprob: -8.386636734008789
    5. '.push' → logprob: -8.636636734008789
    6. 'q' → logprob: -9.511636734008789
    7. ' .' → logprob: -10.761636734008789
    8. 'app' → logprob: -10.761636734008789
    9. '.app' → logprob: -11.386636734008789
    10. '.put' → logprob: -11.636636734008789

Token 1826: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00024144348572008312
    2. '.' → logprob: -8.62524127960205
    3. '.heap' → logprob: -10.25024127960205
    4. '.push' → logprob: -10.75024127960205
    5. ').' → logprob: -12.75024127960205
    6. '.put' → logprob: -13.50024127960205
    7. ' .' → logprob: -15.25024127960205
    8. 'he' → logprob: -15.62524127960205
    9. '.He' → logprob: -16.625242233276367
    10. '```' → logprob: -16.625242233276367

Token 1827: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.2352385965641588e-05
    2. 'pp' → logprob: -11.500012397766113
    3. 'ap' → logprob: -13.625012397766113
    4. 'push' → logprob: -13.875012397766113
    5. '```' → logprob: -18.250011444091797
    6. 'p' → logprob: -18.875011444091797
    7. 'append' → logprob: -18.875011444091797
    8. '[' → logprob: -19.125011444091797
    9. 'appen' → logprob: -19.250011444091797
    10. '(app' → logprob: -19.750011444091797

Token 1828: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -2.1008713702030946e-06
    2. 'push' → logprob: -13.750001907348633
    3. 'le' → logprob: -14.500001907348633
    4. 'sh' → logprob: -15.125001907348633
    5. 'USH' → logprob: -17.000001907348633
    6. 'u' → logprob: -17.750001907348633
    7. 'us' → logprob: -18.125001907348633
    8. 'ut' → logprob: -18.250001907348633
    9. 'al' → logprob: -18.375001907348633
    10. 't' → logprob: -19.625001907348633

Token 1829: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.981667537620524e-06
    2. 'heap' → logprob: -13.250001907348633
    3. '```' → logprob: -16.750001907348633
    4. '(' → logprob: -16.750001907348633
    5. '(h' → logprob: -17.125001907348633
    6. '(queue' → logprob: -19.500001907348633
    7. '((' → logprob: -19.625001907348633
    8. ' (' → logprob: -20.125001907348633
    9. '(
' → logprob: -20.375001907348633
    10. '.heap' → logprob: -20.375001907348633

Token 1830: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.273621405242011e-05
    2. 'heap' → logprob: -11.125032424926758
    3. ',' → logprob: -12.000032424926758
    4. ' heap' → logprob: -12.500032424926758
    5. ')' → logprob: -12.875032424926758
    6. '(' → logprob: -13.500032424926758
    7. '```' → logprob: -13.500032424926758
    8. ' (' → logprob: -13.625032424926758
    9. '(
' → logprob: -14.250032424926758
    10. '(h' → logprob: -14.875032424926758

Token 1831: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.024222439154982567
    2. '(' → logprob: -3.7742223739624023
    3. ' (' → logprob: -7.024222373962402
    4. 'start' → logprob: -10.024222373962402
    5. '[start' → logprob: -10.524222373962402
    6. '(time' → logprob: -11.524222373962402
    7. '(t' → logprob: -13.274222373962402
    8. '   ' → logprob: -13.774222373962402
    9. '((' → logprob: -14.399222373962402
    10. ' ' → logprob: -14.524222373962402

Token 1832: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003819332632701844
    2. 'start' → logprob: -7.875381946563721
    3. ' ' → logprob: -14.125381469726562
    4. '(start' → logprob: -14.750381469726562
    5. ' start' → logprob: -15.375381469726562
    6. '   ' → logprob: -15.875381469726562
    7. '[start' → logprob: -16.375381469726562
    8. '(' → logprob: -16.625381469726562
    9. '```' → logprob: -17.375381469726562
    10. ')' → logprob: -17.500381469726562

Token 1833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.066919301403686e-05
    2. ',
' → logprob: -9.750090599060059
    3. ',start' → logprob: -11.250090599060059
    4. ',)' → logprob: -12.125090599060059
    5. ')' → logprob: -12.625090599060059
    6. ' ,' → logprob: -13.125090599060059
    7. ',state' → logprob: -13.250090599060059
    8. ',{
' → logprob: -13.375090599060059
    9. ',

' → logprob: -14.125090599060059
    10. ',next' → logprob: -14.125090599060059

Token 1834: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.006414677947759628
    2. ' start' → logprob: -5.131414890289307
    3. 'self' → logprob: -8.131414413452148
    4. 'State' → logprob: -9.381414413452148
    5. 'state' → logprob: -9.506414413452148
    6. 'Start' → logprob: -11.881414413452148
    7. ')' → logprob: -11.881414413452148
    8. '(start' → logprob: -12.381414413452148
    9. ' self' → logprob: -12.631414413452148
    10. '0' → logprob: -13.256414413452148

Token 1835: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00025549851125106215
    2. 'state' → logprob: -8.375255584716797
    3. 'State' → logprob: -10.750255584716797
    4. '_f' → logprob: -13.625255584716797
    5. 'f' → logprob: -14.750255584716797
    6. ')' → logprob: -14.750255584716797
    7. '_STATE' → logprob: -14.875255584716797
    8. '_State' → logprob: -15.250255584716797
    9. '_' → logprob: -15.750255584716797
    10. 'STATE' → logprob: -16.125255584716797

Token 1836: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006728279870003462
    2. ')' → logprob: -5.006728172302246
    3. '))
' → logprob: -11.756728172302246
    4. '       ' → logprob: -13.631728172302246
    5. ' ))' → logprob: -13.881728172302246
    6. ')))' → logprob: -14.006728172302246
    7. '   ' → logprob: -14.381728172302246
    8. ')
' → logprob: -14.881728172302246
    9. '));' → logprob: -14.881728172302246
    10. '),' → logprob: -14.881728172302246

Token 1837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.347205251455307
    2. 'while' → logprob: -1.3472052812576294
    3. ' while' → logprob: -4.09720516204834
    4. '   ' → logprob: -4.34720516204834
    5. '	while' → logprob: -6.34720516204834
    6. '```' → logprob: -6.34720516204834
    7. 'While' → logprob: -8.84720516204834
    8. '<|end|>' → logprob: -9.72220516204834
    9. ')' → logprob: -10.34720516204834
    10. '        
' → logprob: -11.34720516204834

Token 1838: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00043472214019857347
    2. '       ' → logprob: -7.750434875488281
    3. ' while' → logprob: -12.750434875488281
    4. '
' → logprob: -14.125434875488281
    5. '	while' → logprob: -15.500434875488281
    6. '   ' → logprob: -16.12543487548828
    7. 'While' → logprob: -17.00043487548828
    8. '        
' → logprob: -17.25043487548828
    9. '```' → logprob: -17.25043487548828
    10. 'wh' → logprob: -18.87543487548828

Token 1839: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0002387018030276522
    2. ' heap' → logprob: -8.375238418579102
    3. 'len' → logprob: -11.875238418579102
    4. '   ' → logprob: -13.875238418579102
    5. '(heap' → logprob: -16.5002384185791
    6. '```' → logprob: -18.0002384185791
    7. '       ' → logprob: -18.2502384185791
    8. 'he' → logprob: -18.5002384185791
    9. ' ' → logprob: -18.7502384185791
    10. '.heap' → logprob: -18.8752384185791

Token 1840: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4783143699169159
    2. ':' → logprob: -0.9783143997192383
    3. '[' → logprob: -5.603314399719238
    4. '       ' → logprob: -9.103314399719238
    5. '           ' → logprob: -9.478314399719238
    6. '=' → logprob: -9.603314399719238
    7. '   ' → logprob: -10.353314399719238
    8. '!=' → logprob: -10.478314399719238
    9. '):
' → logprob: -10.478314399719238
    10. 'and' → logprob: -10.478314399719238

Token 1841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04737807437777519
    2. '0' → logprob: -4.047378063201904
    3. ',' → logprob: -4.172378063201904
    4. '       ' → logprob: -5.547378063201904
    5. '(time' → logprob: -6.047378063201904
    6. '```' → logprob: -6.172378063201904
    7. '(' → logprob: -6.422378063201904
    8. ' (' → logprob: -7.172378063201904
    9. 'time' → logprob: -7.172378063201904
    10. '_,' → logprob: -7.547378063201904

Token 1842: ' current' (ID: 2208)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.11924897879362106
    2. 'current' (adapté à ' current') → logprob: -2.744248867034912
    3. 'curr' → logprob: -3.619248867034912
    4. 'cur' → logprob: -4.494248867034912
    5. '(time' → logprob: -5.119248867034912
    6. '           ' → logprob: -6.119248867034912
    7. 't' → logprob: -7.119248867034912
    8. '(current' → logprob: -7.494248867034912
    9. '               ' → logprob: -8.61924934387207
    10. '0' → logprob: -9.24424934387207

Token 1843: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00133285962510854
    2. 'time' → logprob: -7.001332759857178
    3. '_t' → logprob: -8.751333236694336
    4. ',' → logprob: -9.376333236694336
    5. '_' → logprob: -9.626333236694336
    6. '_,' → logprob: -10.751333236694336
    7. '
' → logprob: -11.251333236694336
    8. '_token' → logprob: -11.251333236694336
    9. 't' → logprob: -11.376333236694336
    10. 'Time' → logprob: -11.501333236694336

Token 1844: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025073037249967456
    2. ' ,' → logprob: -9.250250816345215
    3. '=' → logprob: -9.375250816345215
    4. ',
' → logprob: -10.000250816345215
    5. '_,' → logprob: -11.750250816345215
    6. ')' → logprob: -12.250250816345215
    7. ',_' → logprob: -12.625250816345215
    8. ' =' → logprob: -13.375250816345215
    9. '           ' → logprob: -13.500250816345215
    10. ',)' → logprob: -13.875250816345215

Token 1845: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0685279592871666
    2. 'state' → logprob: -2.818527936935425
    3. ' current' → logprob: -5.068528175354004
    4. ' state' → logprob: -8.693528175354004
    5. 'curr' → logprob: -9.693528175354004
    6. 'cur' → logprob: -11.068528175354004
    7. '   ' → logprob: -14.068528175354004
    8. ' curr' → logprob: -14.943528175354004
    9. '(current' → logprob: -15.318528175354004
    10. '```' → logprob: -15.818528175354004

Token 1846: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0069354744628071785
    2. 'state' → logprob: -5.0069355964660645
    3. '_' → logprob: -9.256935119628906
    4. 'State' → logprob: -10.131935119628906
    5. '_,' → logprob: -10.881935119628906
    6. '
' → logprob: -11.256935119628906
    7. '_time' → logprob: -11.381935119628906
    8. ',' → logprob: -11.756935119628906
    9. '_token' → logprob: -12.381935119628906
    10. '`' → logprob: -12.506935119628906

Token 1847: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196970492601395
    2. ' =' → logprob: -2.811969757080078
    3. '           ' → logprob: -13.936969757080078
    4. '=
' → logprob: -14.436969757080078
    5. '            ' → logprob: -15.561969757080078
    6. ')' → logprob: -16.436969757080078
    7. '   ' → logprob: -16.561969757080078
    8. ' ' → logprob: -16.686969757080078
    9. ',' → logprob: -16.936969757080078
    10. ')=' → logprob: -16.936969757080078

Token 1848: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.008699782192707062
    2. ' heap' → logprob: -4.758699893951416
    3. '           ' → logprob: -9.758699417114258
    4. '               ' → logprob: -11.633699417114258
    5. '(heap' → logprob: -11.633699417114258
    6. 'he' → logprob: -12.008699417114258
    7. 'current' → logprob: -13.508699417114258
    8. '.heap' → logprob: -14.508699417114258
    9. '                   ' → logprob: -14.758699417114258
    10. '            ' → logprob: -15.383699417114258

Token 1849: 'q' (ID: 80)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.628818690776825
    2. '.pop' → logprob: -1.3788187503814697
    3. ' =' → logprob: -1.7538187503814697
    4. 'q' → logprob: -3.8788187503814697
    5. '           ' → logprob: -4.878818511962891
    6. '[' → logprob: -5.128818511962891
    7. 'pop' → logprob: -6.003818511962891
    8. '.he' → logprob: -6.378818511962891
    9. '=
' → logprob: -6.378818511962891
    10. '       ' → logprob: -7.503818511962891

Token 1850: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.35653916001319885
    2. '.he' → logprob: -1.2315391302108765
    3. 'he' → logprob: -5.106539249420166
    4. '[' → logprob: -6.606539249420166
    5. ' he' → logprob: -8.481538772583008
    6. 'op' → logprob: -9.106538772583008
    7. '.' → logprob: -9.731538772583008
    8. 'app' → logprob: -9.731538772583008
    9. '```' → logprob: -9.981538772583008
    10. '.heap' → logprob: -10.606538772583008

Token 1851: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.10654635727405548
    2. 'pp' → logprob: -2.356546401977539
    3. 'pop' → logprob: -5.106546401977539
    4. 'op' → logprob: -8.856546401977539
    5. 'p' → logprob: -9.981546401977539
    6. '[' → logprob: -10.856546401977539
    7. 'q' → logprob: -11.356546401977539
    8. '           ' → logprob: -11.606546401977539
    9. '   ' → logprob: -11.981546401977539
    10. 'he' → logprob: -12.106546401977539

Token 1852: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.08350394666194916
    2. 'ush' → logprob: -3.2085039615631104
    3. 'app' → logprob: -3.3335039615631104
    4. 'pop' → logprob: -6.333503723144531
    5. 'q' → logprob: -7.208503723144531
    6. 'ap' → logprob: -7.583503723144531
    7. 'p' → logprob: -7.708503723144531
    8. 'u' → logprob: -8.958503723144531
    9. 'push' → logprob: -9.333503723144531
    10. 'pp' → logprob: -9.333503723144531

Token 1853: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0027046618051826954
    2. 'heap' → logprob: -6.252704620361328
    3. '(' → logprob: -7.752704620361328
    4. '(
' → logprob: -8.002704620361328
    5. '(None' → logprob: -12.127704620361328
    6. ' heap' → logprob: -13.377704620361328
    7. '(h' → logprob: -13.502704620361328
    8. '(queue' → logprob: -14.377704620361328
    9. '```' → logprob: -14.627704620361328
    10. '   ' → logprob: -14.627704620361328

Token 1854: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47567683458328247
    2. ')' → logprob: -0.9756768345832825
    3. '           ' → logprob: -6.600677013397217
    4. '):
' → logprob: -9.350676536560059
    5. ')
' → logprob: -9.475676536560059
    6. '       ' → logprob: -10.725676536560059
    7. ')

' → logprob: -11.100676536560059
    8. ')`
' → logprob: -11.225676536560059
    9. '               ' → logprob: -12.475676536560059
    10. ')`' → logprob: -12.600676536560059

Token 1855: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.277553620748222e-05
    2. '            
' → logprob: -10.375062942504883
    3. '
' → logprob: -10.875062942504883
    4. '       ' → logprob: -11.750062942504883
    5. 'if' → logprob: -13.000062942504883
    6. '```' → logprob: -14.250062942504883
    7. ' if' → logprob: -14.500062942504883
    8. '        
' → logprob: -14.750062942504883
    9. '               ' → logprob: -15.000062942504883
    10. '          ' → logprob: -15.375062942504883

Token 1856: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.036331694573163986
    2. 'current' → logprob: -3.5363316535949707
    3. '           ' → logprob: -5.536331653594971
    4. 'curr' → logprob: -6.661331653594971
    5. 'c' (adapté à ' c') → logprob: -7.161331653594971
    6. 'coord' → logprob: -7.911331653594971
    7. ' if' → logprob: -9.286332130432129
    8. 'cur' → logprob: -9.411332130432129
    9. '#' → logprob: -11.036332130432129
    10. '            
' → logprob: -13.536332130432129

Token 1857: ' =' (ID: 314)
  Prédit: 'urrent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrent' → logprob: -0.0022711048368364573
    2. 'current' → logprob: -6.1272711753845215
    3. '=current' → logprob: -10.002270698547363
    4. 'urent' → logprob: -10.752270698547363
    5. 'urr' → logprob: -11.877270698547363
    6. 'ur' → logprob: -12.752270698547363
    7. '   ' → logprob: -13.252270698547363
    8. '=' → logprob: -13.377270698547363
    9. ' =' → logprob: -13.377270698547363
    10. '_current' → logprob: -13.752270698547363

Token 1858: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -7.52919222577475e-05
    2. ' current' → logprob: -9.500075340270996
    3. 'urrent' → logprob: -15.000075340270996
    4. '.current' → logprob: -17.00007438659668
    5. '(current' → logprob: -18.75007438659668
    6. '[current' → logprob: -19.62507438659668
    7. '=current' → logprob: -19.75007438659668
    8. '$current' → logprob: -19.75007438659668
    9. '	current' → logprob: -21.25007438659668
    10. '_current' → logprob: -21.75007438659668

Token 1859: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -4.930552313453518e-05
    2. 'state' → logprob: -10.375049591064453
    3. '._' → logprob: -12.250049591064453
    4. 'current' → logprob: -12.250049591064453
    5. '_time' → logprob: -12.750049591064453
    6. 'State' → logprob: -12.875049591064453
    7. 'urrent' → logprob: -14.000049591064453
    8. '.state' → logprob: -14.750049591064453
    9. '_code' → logprob: -15.000049591064453
    10. '_current' → logprob: -15.500049591064453

Token 1860: '.coordinate' (ID: 175320)
  Prédit: '.coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.coordinate' → logprob: -4.1080467781284824e-05
    2. 'coordinate' → logprob: -10.500041007995605
    3. '.c' → logprob: -12.125041007995605
    4. ' .' → logprob: -13.125041007995605
    5. '.state' → logprob: -13.250041007995605
    6. '.' → logprob: -13.250041007995605
    7. '.character' → logprob: -13.500041007995605
    8. '.coordinates' → logprob: -15.000041007995605
    9. '.coe' → logprob: -15.750041007995605
    10. '.co' → logprob: -16.000041961669922

Token 1861: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002572090830653906
    2. 'if' → logprob: -6.877572059631348
    3. '
' → logprob: -7.252572059631348
    4. 'f' → logprob: -8.252572059631348
    5. '            
' → logprob: -8.627572059631348
    6. 'd' → logprob: -9.252572059631348
    7. ' if' → logprob: -9.252572059631348
    8. ',' → logprob: -9.502572059631348
    9. '<|end|>' → logprob: -10.127572059631348
    10. '#' → logprob: -10.627572059631348

Token 1862: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2890107333660126
    2. 'f' → logprob: -1.414010763168335
    3. 'if' → logprob: -5.039010524749756
    4. ' f' → logprob: -7.164010524749756
    5. 'd' → logprob: -8.289011001586914
    6. ' if' → logprob: -8.664011001586914
    7. '            
' → logprob: -10.164011001586914
    8. 't' → logprob: -11.289011001586914
    9. 'face' → logprob: -11.289011001586914
    10. '
' → logprob: -11.289011001586914

Token 1863: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.11439267545938492
    2. 'if' → logprob: -2.2393927574157715
    3. 'current' → logprob: -6.8643927574157715
    4. '           ' → logprob: -8.364392280578613
    5. '       ' → logprob: -9.739392280578613
    6. 'face' → logprob: -9.989392280578613
    7. '   ' → logprob: -10.114392280578613
    8. '            
' → logprob: -10.614392280578613
    9. '#' → logprob: -10.864392280578613
    10. 'd' → logprob: -10.989392280578613

Token 1864: ' =' (ID: 314)
  Prédit: 'acing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -0.00081963452976197
    2. 'ace' → logprob: -7.625819683074951
    3. 'ac' → logprob: -9.625819206237793
    4. 'aced' → logprob: -9.625819206237793
    5. 'a' → logprob: -9.750819206237793
    6. '   ' → logprob: -9.875819206237793
    7. ' =' → logprob: -11.125819206237793
    8. '=' → logprob: -11.125819206237793
    9. 'aces' → logprob: -11.250819206237793
    10. 'f' → logprob: -12.000819206237793

Token 1865: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -7.493430894101039e-05
    2. ' current' → logprob: -9.500075340270996
    3. '.current' → logprob: -18.62507438659668
    4. '$current' → logprob: -19.50007438659668
    5. '[current' → logprob: -19.75007438659668
    6. 'urrent' → logprob: -20.12507438659668
    7. '(current' → logprob: -20.12507438659668
    8. 'Current' → logprob: -20.25007438659668
    9. '=current' → logprob: -21.12507438659668
    10. 'c' → logprob: -21.37507438659668

Token 1866: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.001708732801489532
    2. 'state' → logprob: -6.376708507537842
    3. 'State' → logprob: -13.126708984375
    4. 'f' → logprob: -14.126708984375
    5. '_direction' → logprob: -14.126708984375
    6. '_STATE' → logprob: -14.376708984375
    7. 'acing' → logprob: -14.501708984375
    8. '_' → logprob: -14.751708984375
    9. '_f' → logprob: -14.876708984375
    10. 'c' → logprob: -16.001708984375

Token 1867: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0007366081699728966
    2. '.' → logprob: -7.500736713409424
    3. ' .' → logprob: -10.000736236572266
    4. '
' → logprob: -10.125736236572266
    5. 'f' → logprob: -10.250736236572266
    6. '   ' → logprob: -11.125736236572266
    7. 'Facing' → logprob: -12.000736236572266
    8. ')' → logprob: -12.375736236572266
    9. '	f' → logprob: -12.500736236572266
    10. '    
' → logprob: -12.625736236572266

Token 1868: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -2.339278580620885e-06
    2. 'aced' → logprob: -14.250001907348633
    3. 'ac' → logprob: -14.375001907348633
    4. 'ace' → logprob: -15.500001907348633
    5. 'f' → logprob: -15.625001907348633
    6. 'Facing' → logprob: -16.000001907348633
    7. 'a' → logprob: -16.125001907348633
    8. 'ACING' → logprob: -16.250001907348633
    9. '
' → logprob: -16.375001907348633
    10. 'acem' → logprob: -16.375001907348633

Token 1869: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003862781682983041
    2. '
' → logprob: -6.3788628578186035
    3. '            
' → logprob: -7.0038628578186035
    4. '<|end|>' → logprob: -7.1288628578186035
    5. '#' → logprob: -9.253862380981445
    6. ' if' → logprob: -9.378862380981445
    7. 'if' → logprob: -9.503862380981445
    8. ',' → logprob: -9.878862380981445
    9. '<|end|>' → logprob: -9.878862380981445
    10. ')' → logprob: -11.253862380981445

Token 1870: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007031376590020955
    2. '            
' → logprob: -7.50070333480835
    3. '
' → logprob: -8.875702857971191
    4. ' if' → logprob: -13.000702857971191
    5. 'if' → logprob: -13.500702857971191
    6. ' 
' → logprob: -13.750702857971191
    7. '       ' → logprob: -14.125702857971191
    8. '    
' → logprob: -14.125702857971191
    9. '        
' → logprob: -14.250702857971191
    10. '           
' → logprob: -14.375702857971191

Token 1871: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014889346435666084
    2. '           ' → logprob: -4.264889240264893
    3. '#' → logprob: -7.264889240264893
    4. ' if' → logprob: -11.38988971710205
    5. '            
' → logprob: -11.38988971710205
    6. 'for' → logprob: -13.76488971710205
    7. '
' → logprob: -13.88988971710205
    8. '```' → logprob: -14.88988971710205
    9. '       ' → logprob: -15.51488971710205
    10. 'If' → logprob: -15.63988971710205

Token 1872: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2827288806438446
    2. ' =' → logprob: -1.532728910446167
    3. 'ime' → logprob: -3.532728910446167
    4. '           ' → logprob: -7.532728672027588
    5. 'imes' → logprob: -8.907729148864746
    6. ',' → logprob: -9.407729148864746
    7. '_' → logprob: -9.782729148864746
    8. '       ' → logprob: -10.157729148864746
    9. '        ' → logprob: -10.532729148864746
    10. 'i' → logprob: -10.657729148864746

Token 1873: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0009114635176956654
    2. ' current' → logprob: -7.000911235809326
    3. 'urrent' → logprob: -20.000911712646484
    4. '$current' → logprob: -20.875911712646484
    5. '(current' → logprob: -21.375911712646484
    6. '	current' → logprob: -21.625911712646484
    7. '_current' → logprob: -21.750911712646484
    8. 'Current' → logprob: -22.000911712646484
    9. '[current' → logprob: -22.125911712646484
    10. '.current' → logprob: -22.125911712646484

Token 1874: '_state' (ID: 9479)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.05509970337152481
    2. '_state' → logprob: -2.9300997257232666
    3. 'time' → logprob: -8.930099487304688
    4. '.time' → logprob: -10.680099487304688
    5. '_' → logprob: -10.805099487304688
    6. 'state' → logprob: -11.555099487304688
    7. '._' → logprob: -11.680099487304688
    8. 'ime' → logprob: -12.555099487304688
    9. '.' → logprob: -12.680099487304688
    10. '   ' → logprob: -12.680099487304688

Token 1875: '.time' (ID: 11486)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1876: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10069496184587479
    2. '
' → logprob: -2.4756948947906494
    3. '            
' → logprob: -4.4756951332092285
    4. '<|end|>' → logprob: -9.35069465637207
    5. '  
' → logprob: -10.47569465637207
    6. '           
' → logprob: -10.60069465637207
    7. '        
' → logprob: -10.72569465637207
    8. '    
' → logprob: -10.85069465637207
    9. ' 
' → logprob: -10.85069465637207
    10. '<|end|>' → logprob: -10.97569465637207

Token 1877: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016885085497051477
    2. '            
' → logprob: -6.501688480377197
    3. '
' → logprob: -9.001688957214355
    4. 'if' → logprob: -11.001688957214355
    5. '<|end|>' → logprob: -11.126688957214355
    6. '        
' → logprob: -12.001688957214355
    7. ' if' → logprob: -12.376688957214355
    8. '       ' → logprob: -12.501688957214355
    9. '    
' → logprob: -12.501688957214355
    10. '<|end|>' → logprob: -13.001688957214355

Token 1878: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014258346520364285
    2. '           ' → logprob: -4.26425838470459
    3. '#' → logprob: -9.76425838470459
    4. ' if' → logprob: -10.51425838470459
    5. '            
' → logprob: -12.01425838470459
    6. '
' → logprob: -12.51425838470459
    7. '```' → logprob: -14.63925838470459
    8. 'If' → logprob: -17.014257431030273
    9. '   ' → logprob: -17.389257431030273
    10. '       ' → logprob: -17.889257431030273

Token 1879: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0041222115978598595
    2. ' c' → logprob: -5.504122257232666
    3. '           ' → logprob: -10.254121780395508
    4. '(c' → logprob: -12.254121780395508
    5. 'current' → logprob: -13.004121780395508
    6. '               ' → logprob: -14.754121780395508
    7. ' (' → logprob: -15.254121780395508
    8. ' current' → logprob: -15.379121780395508
    9. '   ' → logprob: -15.504121780395508
    10. '	c' → logprob: -15.629121780395508

Token 1880: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.470901229884475e-05
    2. 'current' → logprob: -9.50008487701416
    3. '(c' → logprob: -12.12508487701416
    4. ')c' → logprob: -13.62508487701416
    5. ' c' → logprob: -13.87508487701416
    6. '(current' → logprob: -14.75008487701416
    7. '   ' → logprob: -15.37508487701416
    8. 'cation' → logprob: -15.50008487701416
    9. 'self' → logprob: -15.75008487701416
    10. ')' → logprob: -15.81258487701416

Token 1881: ',' (ID: 11)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2021394520998001
    2. '==' → logprob: -1.7021394968032837
    3. ')==' → logprob: -7.702139377593994
    4. ')' → logprob: -8.327139854431152
    5. ',' → logprob: -10.952139854431152
    6. '==
' → logprob: -12.452139854431152
    7. ']==' → logprob: -12.577139854431152
    8. '           ' → logprob: -13.077139854431152
    9. ' ==
' → logprob: -13.202139854431152
    10. '=' → logprob: -13.952139854431152

Token 1882: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00017183588352054358
    2. ' f' → logprob: -9.625171661376953
    3. 'c' → logprob: -9.875171661376953
    4. ')' → logprob: -10.375171661376953
    5. 'None' → logprob: -11.000171661376953
    6. '   ' → logprob: -13.500171661376953
    7. ' ' → logprob: -13.750171661376953
    8. 't' → logprob: -14.250171661376953
    9. ''f' → logprob: -15.000171661376953
    10. '       ' → logprob: -15.000171661376953

Token 1883: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008767019025981426
    2. ')==' → logprob: -4.758767127990723
    3. '==' → logprob: -9.258767127990723
    4. ' ==' → logprob: -10.508767127990723
    5. ' )' → logprob: -10.883767127990723
    6. ')!=' → logprob: -12.258767127990723
    7. ')>' → logprob: -14.008767127990723
    8. ')
' → logprob: -14.133767127990723
    9. ')>=' → logprob: -14.383767127990723
    10. ']==' → logprob: -14.633767127990723

Token 1884: ' not' (ID: 625)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31399619579315186
    2. ' ==' → logprob: -1.3139961957931519
    3. ' in' → logprob: -8.438996315002441
    4. '!=' → logprob: -9.063996315002441
    5. ' !=' → logprob: -9.313996315002441
    6. 'in' → logprob: -9.313996315002441
    7. ')==' → logprob: -9.563996315002441
    8. ')' → logprob: -9.813996315002441
    9. ' not' → logprob: -9.813996315002441
    10. 'not' → logprob: -11.188996315002441

Token 1885: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519575357437134
    2. ' in' → logprob: -1.5019575357437134
    3. ')' → logprob: -11.501957893371582
    4. '<|end|>' → logprob: -11.876957893371582
    5. '           ' → logprob: -12.001957893371582
    6. 'dist' → logprob: -13.626957893371582
    7. '```' → logprob: -14.126957893371582
    8. '[' → logprob: -14.626957893371582
    9. '<|end|>' → logprob: -15.001957893371582
    10. 'not' → logprob: -15.126957893371582

Token 1886: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.9361264946837764e-07
    2. ' dist' → logprob: -15.75
    3. '	dist' → logprob: -20.625
    4. '(dist' → logprob: -21.5
    5. '.dist' → logprob: -21.875
    6. '
' → logprob: -22.0
    7. '```' → logprob: -22.0
    8. '_dist' → logprob: -22.25
    9. 'Dist' → logprob: -22.25
    10. 'dest' → logprob: -22.5

Token 1887: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008719762787222862
    2. 'or' → logprob: -4.7587199211120605
    3. ':' → logprob: -10.258719444274902
    4. '               ' → logprob: -10.508719444274902
    5. '           ' → logprob: -10.508719444274902
    6. '	or' → logprob: -12.133719444274902
    7. ':
' → logprob: -12.883719444274902
    8. '            ' → logprob: -12.883719444274902
    9. ')' → logprob: -13.133719444274902
    10. '                   ' → logprob: -13.633719444274902

Token 1888: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04770556092262268
    2. 'current' → logprob: -3.54770565032959
    3. 't' → logprob: -4.04770565032959
    4. ' dist' → logprob: -8.42270565032959
    5. ' current' → logprob: -9.79770565032959
    6. '	dist' → logprob: -11.17270565032959
    7. 'curr' → logprob: -11.29770565032959
    8. '   ' → logprob: -11.54770565032959
    9. ' t' → logprob: -11.79770565032959
    10. 'cur' → logprob: -13.29770565032959

Token 1889: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.881560041918419e-05
    2. '[c' → logprob: -10.250039100646973
    3. '[' → logprob: -13.125039100646973
    4. '.get' → logprob: -14.500039100646973
    5. ' [(' → logprob: -14.500039100646973
    6. '(c' → logprob: -15.625039100646973
    7. '[current' → logprob: -16.625038146972656
    8. '[
' → logprob: -17.000038146972656
    9. '[[' → logprob: -17.125038146972656
    10. '```' → logprob: -17.125038146972656

Token 1890: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.306760805164231e-05
    2. ')c' → logprob: -11.37501335144043
    3. ' c' → logprob: -14.12501335144043
    4. '(c' → logprob: -14.75001335144043
    5. ')' → logprob: -15.62501335144043
    6. '	c' → logprob: -16.87501335144043
    7. '   ' → logprob: -17.00001335144043
    8. '           ' → logprob: -17.00001335144043
    9. '_c' → logprob: -18.25001335144043
    10. '               ' → logprob: -18.87501335144043

Token 1891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16180455684661865
    2. ',c' → logprob: -1.9118045568466187
    3. 'c' → logprob: -6.786804676055908
    4. '(c' → logprob: -8.28680419921875
    5. ',(' → logprob: -9.28680419921875
    6. ' ,' → logprob: -10.16180419921875
    7. '),(' → logprob: -10.91180419921875
    8. ',
' → logprob: -11.53680419921875
    9. ' c' → logprob: -11.91180419921875
    10. '(' → logprob: -12.16180419921875

Token 1892: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.537868779967539e-06
    2. ' f' → logprob: -12.250008583068848
    3. 'c' → logprob: -12.625008583068848
    4. '   ' → logprob: -16.12500762939453
    5. ')' → logprob: -16.37500762939453
    6. ' ' → logprob: -16.87500762939453
    7. '(f' → logprob: -17.12500762939453
    8. '    ' → logprob: -18.12500762939453
    9. '	f' → logprob: -18.12500762939453
    10. ''f' → logprob: -18.12500762939453

Token 1893: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020983250811696053
    2. ']' → logprob: -4.1459832191467285
    3. ')>' → logprob: -6.2709832191467285
    4. ')]' → logprob: -7.0209832191467285
    5. ')!=' → logprob: -7.2709832191467285
    6. '])' → logprob: -7.6459832191467285
    7. ']!=' → logprob: -8.395983695983887
    8. ')<' → logprob: -8.520983695983887
    9. '[' → logprob: -8.645983695983887
    10. ' )' → logprob: -9.395983695983887

Token 1894: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8238483667373657
    2. '!=' → logprob: -1.0738483667373657
    3. ' <' → logprob: -2.323848247528076
    4. ' !=' → logprob: -2.323848247528076
    5. '>' → logprob: -3.948848247528076
    6. ' >' → logprob: -7.198848247528076
    7. '<int' → logprob: -7.323848247528076
    8. '==' → logprob: -7.448848247528076
    9. '<t' → logprob: -8.198848724365234
    10. ' is' → logprob: -8.323848724365234

Token 1895: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0181878749281168
    2. 'current' → logprob: -4.018187999725342
    3. ' t' → logprob: -10.518187522888184
    4. ' current' → logprob: -12.268187522888184
    5. 'c' → logprob: -13.268187522888184
    6. '=current' → logprob: -13.768187522888184
    7. 'curr' → logprob: -13.893187522888184
    8. '=' → logprob: -14.643187522888184
    9. '=t' → logprob: -15.143187522888184
    10. 'cur' → logprob: -15.143187522888184

Token 1896: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28721868991851807
    2. ':
' → logprob: -1.537218689918518
    3. '           ' → logprob: -3.5372185707092285
    4. '               ' → logprob: -5.6622185707092285
    5. 'continue' → logprob: -6.7872185707092285
    6. ' continue' → logprob: -7.5372185707092285
    7. ':
' → logprob: -8.662219047546387
    8. '       ' → logprob: -9.037219047546387
    9. '   ' → logprob: -9.537219047546387
    10. '	continue' → logprob: -11.162219047546387

Token 1897: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03688908740878105
    2. 'continue' → logprob: -4.28688907623291
    3. ' continue' → logprob: -4.28688907623291
    4. '           ' → logprob: -4.78688907623291
    5. ':' → logprob: -8.66188907623291
    6. '	continue' → logprob: -9.03688907623291
    7. '_continue' → logprob: -9.91188907623291
    8. ' continues' → logprob: -11.53688907623291
    9. '	           ' → logprob: -12.03688907623291
    10. ':
' → logprob: -12.03688907623291

Token 1898: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.007828421890735626
    2. ' continue' → logprob: -5.507828235626221
    3. '               ' → logprob: -5.757828235626221
    4. '           ' → logprob: -7.507828235626221
    5. '	continue' → logprob: -10.507828712463379
    6. '_continue' → logprob: -12.507828712463379
    7. 'contin' → logprob: -13.257828712463379
    8. '                   ' → logprob: -13.632828712463379
    9. '   ' → logprob: -14.257828712463379
    10. 'continu' → logprob: -14.382828712463379

Token 1899: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012853523949161172
    2. '
' → logprob: -7.501285552978516
    3. '            
' → logprob: -7.751285552978516
    4. '<|end|>' → logprob: -8.251285552978516
    5. '          ' → logprob: -11.751285552978516
    6. '```' → logprob: -12.001285552978516
    7. '<|end|>' → logprob: -12.126285552978516
    8. '       ' → logprob: -12.376285552978516
    9. '
' → logprob: -12.876285552978516
    10. '        
' → logprob: -12.876285552978516

Token 1900: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.583550642360933e-05
    2. '```' → logprob: -11.500036239624023
    3. '            
' → logprob: -11.875036239624023
    4. 'if' → logprob: -12.000036239624023
    5. '       ' → logprob: -12.625036239624023
    6. '
' → logprob: -13.125036239624023
    7. 'continue' → logprob: -13.375036239624023
    8. '          ' → logprob: -13.375036239624023
    9. '<|end|>' → logprob: -13.500036239624023
    10. '<|end|>' → logprob: -15.125036239624023

Token 1901: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12704674899578094
    2. 'if' (adapté à ' if') → logprob: -2.127046823501587
    3. ' if' → logprob: -9.127046585083008
    4. '            
' → logprob: -12.127046585083008
    5. '#' → logprob: -13.627046585083008
    6. '       ' → logprob: -13.877046585083008
    7. 'for' → logprob: -14.377046585083008
    8. '
' → logprob: -14.627046585083008
    9. '          ' → logprob: -14.627046585083008
    10. '```' → logprob: -15.002046585083008

Token 1902: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5761105418205261
    2. 'c' → logprob: -0.8261105418205261
    3. '(c' → logprob: -9.32611083984375
    4. '           ' → logprob: -9.57611083984375
    5. ' (' → logprob: -11.82611083984375
    6. ')c' → logprob: -13.57611083984375
    7. '   ' → logprob: -14.20111083984375
    8. '	c' → logprob: -14.20111083984375
    9. '               ' → logprob: -14.32611083984375
    10. '            ' → logprob: -14.57611083984375

Token 1903: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04859475791454315
    2. '==' → logprob: -3.0485947132110596
    3. ')==' → logprob: -12.29859447479248
    4. '==
' → logprob: -13.92359447479248
    5. ')' → logprob: -14.42359447479248
    6. ' ==
' → logprob: -14.67359447479248
    7. ']==' → logprob: -14.79859447479248
    8. '=' → logprob: -15.54859447479248
    9. ' !=' → logprob: -16.048595428466797
    10. '()==' → logprob: -16.298595428466797

Token 1904: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033546582562848926
    2. ' self' → logprob: -8.000335693359375
    3. '           ' → logprob: -17.500335693359375
    4. '(self' → logprob: -18.750335693359375
    5. '
' → logprob: -19.625335693359375
    6. '       ' → logprob: -20.500335693359375
    7. '   ' → logprob: -21.250335693359375
    8. '[self' → logprob: -21.375335693359375
    9. '=self' → logprob: -21.625335693359375
    10. '	self' → logprob: -21.750335693359375

Token 1905: '.destination' (ID: 79702)
  Prédit: '.destination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.destination' → logprob: -0.00033593899570405483
    2. 'destination' → logprob: -8.000335693359375
    3. 'self' → logprob: -15.125335693359375
    4. '.' → logprob: -15.500335693359375
    5. ' .' → logprob: -17.375335693359375
    6. 'estination' → logprob: -18.125335693359375
    7. '_destination' → logprob: -18.250335693359375
    8. 'Destination' → logprob: -18.375335693359375
    9. ' destination' → logprob: -18.500335693359375
    10. '(destination' → logprob: -18.625335693359375

Token 1906: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6488382816314697
    2. ':' → logprob: -0.8988382816314697
    3. '               ' → logprob: -2.7738382816314697
    4. ' and' → logprob: -5.273838043212891
    5. 'and' → logprob: -6.648838043212891
    6. '           ' → logprob: -7.023838043212891
    7. ':return' → logprob: -8.02383804321289
    8. '<|end|>' → logprob: -9.64883804321289
    9. '                       ' → logprob: -10.39883804321289
    10. '.' → logprob: -10.77383804321289

Token 1907: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014247063547372818
    2. 'return' → logprob: -4.264246940612793
    3. ' return' → logprob: -9.514246940612793
    4. '           ' → logprob: -12.139246940612793
    5. '                   ' → logprob: -13.264246940612793
    6. '   ' → logprob: -14.639246940612793
    7. '{return' → logprob: -14.639246940612793
    8. ':return' → logprob: -14.639246940612793
    9. '	return' → logprob: -14.889246940612793
    10. '                       ' → logprob: -15.139246940612793

Token 1908: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0002338144404347986
    2. '               ' → logprob: -8.75023365020752
    3. ' return' → logprob: -9.50023365020752
    4. '           ' → logprob: -15.50023365020752
    5. '                   ' → logprob: -16.125234603881836
    6. '	return' → logprob: -16.375234603881836
    7. '{return' → logprob: -16.500234603881836
    8. '   ' → logprob: -18.875234603881836
    9. '                       ' → logprob: -19.250234603881836
    10. ':return' → logprob: -19.375234603881836

Token 1909: ' Destination' (ID: 69870)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -7.941850526549388e-06
    2. '               ' → logprob: -12.250007629394531
    3. ' return' → logprob: -12.750007629394531
    4. '           ' → logprob: -16.00000762939453
    5. '                   ' → logprob: -17.25000762939453
    6. '   ' → logprob: -19.00000762939453
    7. '	return' → logprob: -19.00000762939453
    8. '                       ' → logprob: -19.75000762939453
    9. '       ' → logprob: -19.87500762939453
    10. 'Return' → logprob: -21.87500762939453

Token 1910: ' reached' (ID: 15237)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21301546692848206
    2. '               ' → logprob: -1.8380154371261597
    3. ':return' → logprob: -4.213015556335449
    4. ':
' → logprob: -4.838015556335449
    5. ' return' → logprob: -5.588015556335449
    6. ':' → logprob: -6.213015556335449
    7. '           ' → logprob: -6.588015556335449
    8. '                   ' → logprob: -6.963015556335449
    9. '
' → logprob: -7.338015556335449
    10. '_return' → logprob: -8.33801555633545

Token 1911: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5773594379425049
    2. 'return' → logprob: -0.8273594379425049
    3. ' return' → logprob: -6.577359199523926
    4. '           ' → logprob: -11.452359199523926
    5. '                   ' → logprob: -11.702359199523926
    6. '{return' → logprob: -12.577359199523926
    7. '	return' → logprob: -13.077359199523926
    8. ':return' → logprob: -13.577359199523926
    9. '	           ' → logprob: -15.202359199523926
    10. '                       ' → logprob: -15.452359199523926

Token 1912: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018243594095110893
    2. 'return' → logprob: -4.018243789672852
    3. ' return' → logprob: -9.393243789672852
    4. '                   ' → logprob: -11.643243789672852
    5. '           ' → logprob: -14.018243789672852
    6. '
' → logprob: -15.768243789672852
    7. '   ' → logprob: -16.39324378967285
    8. '			' → logprob: -16.51824378967285
    9. '	return' → logprob: -16.51824378967285
    10. '                ' → logprob: -16.64324378967285

Token 1913: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0921942703134846e-05
    2. '               ' → logprob: -11.75001049041748
    3. ' return' → logprob: -12.75001049041748
    4. '           ' → logprob: -16.500011444091797
    5. '	return' → logprob: -17.750011444091797
    6. '                   ' → logprob: -18.500011444091797
    7. '{return' → logprob: -18.750011444091797
    8. '   ' → logprob: -20.750011444091797
    9. '_return' → logprob: -21.125011444091797
    10. '                       ' → logprob: -21.250011444091797

Token 1914: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.0590548703912646e-05
    2. ' t' → logprob: -10.750030517578125
    3. 'current' → logprob: -11.625030517578125
    4. '           ' → logprob: -16.125030517578125
    5. '`t' → logprob: -16.500030517578125
    6. ' current' → logprob: -17.500030517578125
    7. '               ' → logprob: -18.125030517578125
    8. '                   ' → logprob: -18.875030517578125
    9. '	t' → logprob: -19.625030517578125
    10. '   ' → logprob: -20.000030517578125

Token 1915: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08860591053962708
    2. '
' → logprob: -2.5886058807373047
    3. '            
' → logprob: -4.713605880737305
    4. '
' → logprob: -8.463605880737305
    5. '        
' → logprob: -8.838605880737305
    6. '       ' → logprob: -9.463605880737305
    7. '#' → logprob: -10.088605880737305
    8. '    
' → logprob: -10.213605880737305
    9. '<|end|>' → logprob: -10.338605880737305
    10. '           
' → logprob: -10.713605880737305

Token 1916: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.93710636976175e-05
    2. '
' → logprob: -10.125099182128906
    3. '       ' → logprob: -10.250099182128906
    4. '            
' → logprob: -11.250099182128906
    5. 'for' → logprob: -12.125099182128906
    6. '        
' → logprob: -13.375099182128906
    7. '#' → logprob: -13.750099182128906
    8. '          ' → logprob: -14.500099182128906
    9. '```' → logprob: -14.500099182128906
    10. 'continue' → logprob: -15.000099182128906

Token 1917: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012484468752518296
    2. '#' (adapté à ' #') → logprob: -6.751248359680176
    3. '           ' → logprob: -9.751248359680176
    4. 'neighbors' → logprob: -10.876248359680176
    5. ' for' → logprob: -14.251248359680176
    6. '            
' → logprob: -15.501248359680176
    7. 'next' → logprob: -16.126249313354492
    8. '       ' → logprob: -18.751249313354492
    9. 'adj' → logprob: -18.751249313354492
    10. 'neighbor' → logprob: -19.126249313354492

Token 1918: ' Explore' (ID: 48055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003442832676228136
    2. '           ' → logprob: -8.750344276428223
    3. '#' → logprob: -9.125344276428223
    4. 'neighbors' → logprob: -9.500344276428223
    5. ' for' → logprob: -13.500344276428223
    6. 'next' → logprob: -14.500344276428223
    7. 'adj' → logprob: -15.875344276428223
    8. '            
' → logprob: -16.75034523010254
    9. 'For' → logprob: -18.25034523010254
    10. 'neighbor' → logprob: -18.25034523010254

Token 1919: ' neighbors' (ID: 31655)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029651667922735214
    2. 'neighbors' → logprob: -3.779651641845703
    3. 'neighbor' → logprob: -6.029651641845703
    4. ' for' → logprob: -6.029651641845703
    5. 'self' → logprob: -6.779651641845703
    6. '           ' → logprob: -8.654651641845703
    7. ' neighbors' → logprob: -8.654651641845703
    8. 'next' → logprob: -9.779651641845703
    9. 'adj' → logprob: -11.404651641845703
    10. '   ' → logprob: -11.654651641845703

Token 1920: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001931696751853451
    2. 'for' → logprob: -9.37519359588623
    3. ' for' → logprob: -9.50019359588623
    4. '
' → logprob: -11.00019359588623
    5. '       ' → logprob: -11.62519359588623
    6. '            
' → logprob: -12.62519359588623
    7. ',' → logprob: -13.87519359588623
    8. '<|end|>' → logprob: -14.12519359588623
    9. '               ' → logprob: -14.62519359588623
    10. '	       ' → logprob: -15.00019359588623

Token 1921: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031258241506293416
    2. 'for' → logprob: -8.500312805175781
    3. '       ' → logprob: -9.625312805175781
    4. ' for' → logprob: -10.125312805175781
    5. '
' → logprob: -13.250312805175781
    6. '   ' → logprob: -15.375312805175781
    7. '            
' → logprob: -15.500312805175781
    8. '               ' → logprob: -15.625312805175781
    9. '          ' → logprob: -15.750312805175781
    10. '	       ' → logprob: -16.12531280517578

Token 1922: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0394962802529335
    2. '           ' → logprob: -3.2894961833953857
    3. ' for' → logprob: -6.539496421813965
    4. 'neighbors' → logprob: -11.914496421813965
    5. '            
' → logprob: -14.289496421813965
    6. '       ' → logprob: -15.289496421813965
    7. '```' → logprob: -15.289496421813965
    8. '   ' → logprob: -15.414496421813965
    9. '	for' → logprob: -15.664496421813965
    10. 'next' → logprob: -16.53949546813965

Token 1923: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.030013933777809143
    2. 'next' → logprob: -3.5300140380859375
    3. 'nbr' → logprob: -9.405014038085938
    4. 'adj' → logprob: -9.655014038085938
    5. ' neighbor' → logprob: -10.280014038085938
    6. 'n' → logprob: -10.405014038085938
    7. '   ' → logprob: -10.655014038085938
    8. 'nei' → logprob: -11.030014038085938
    9. 'nb' → logprob: -11.905014038085938
    10. '           ' → logprob: -13.905014038085938

Token 1924: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3487379550933838
    2. 'in' → logprob: -1.2237379550933838
    3. '_in' → logprob: -8.848737716674805
    4. '	in' → logprob: -9.723737716674805
    5. '<|end|>' → logprob: -10.348737716674805
    6. ')' → logprob: -11.098737716674805
    7. '<|end|>' → logprob: -11.973737716674805
    8. '_neighbor' → logprob: -12.098737716674805
    9. ' ' → logprob: -12.473737716674805
    10. ',' → logprob: -12.473737716674805

Token 1925: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019491063430905342
    2. ' self' → logprob: -6.251949310302734
    3. '[self' → logprob: -11.501949310302734
    4. '           ' → logprob: -11.626949310302734
    5. '(self' → logprob: -13.626949310302734
    6. '=self' → logprob: -16.501949310302734
    7. '       ' → logprob: -17.126949310302734
    8. '
' → logprob: -17.251949310302734
    9. '	self' → logprob: -17.376949310302734
    10. '               ' → logprob: -18.001949310302734

Token 1926: '.city' (ID: 50562)
  Prédit: '.city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.18096791207790375
    2. 'city' → logprob: -1.805967926979065
    3. ' city' → logprob: -8.055968284606934
    4. 'self' → logprob: -8.055968284606934
    5. 'continue' → logprob: -9.180968284606934
    6. '.user' → logprob: -9.680968284606934
    7. '_city' → logprob: -10.305968284606934
    8. ':' → logprob: -10.430968284606934
    9. '
' → logprob: -10.555968284606934
    10. '(city' → logprob: -10.555968284606934

Token 1927: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.002119330922141671
    2. 'adj' → logprob: -6.752119541168213
    3. '.ad' → logprob: -7.502119541168213
    4. '_ad' → logprob: -8.377119064331055
    5. 'c' → logprob: -9.377119064331055
    6. '           ' → logprob: -10.502119064331055
    7. 'ad' → logprob: -11.502119064331055
    8. '_adj' → logprob: -11.877119064331055
    9. '.c' → logprob: -12.002119064331055
    10. '   ' → logprob: -12.127119064331055

Token 1928: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.00010604646377032623
    2. 'adj' → logprob: -9.625105857849121
    3. '[c' → logprob: -10.250105857849121
    4. 'ad' → logprob: -13.250105857849121
    5. '.c' → logprob: -13.750105857849121
    6. '_ad' → logprob: -14.500105857849121
    7. ' adjacency' → logprob: -14.875105857849121
    8. '-ad' → logprob: -15.000105857849121
    9. '.Ad' → logprob: -16.000106811523438
    10. '.' → logprob: -16.250106811523438

Token 1929: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -4.723352049040841e-06
    2. 'j' → logprob: -12.375004768371582
    3. 'acency' → logprob: -15.375004768371582
    4. 'Jac' → logprob: -16.000003814697266
    5. ' jac' → logprob: -16.000003814697266
    6. ' adjacency' → logprob: -18.500003814697266
    7. '
' → logprob: -19.625003814697266
    8. '       ' → logprob: -20.625003814697266
    9. '   ' → logprob: -20.750003814697266
    10. 'junction' → logprob: -20.750003814697266

Token 1930: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0075978729873895645
    2. 'acy' → logprob: -5.007597923278809
    3. 'acency' → logprob: -7.382597923278809
    4. '   ' → logprob: -9.757597923278809
    5. 'cy' → logprob: -9.882597923278809
    6. '#' → logprob: -10.007597923278809
    7. 'ancy' → logprob: -10.757597923278809
    8. '       ' → logprob: -11.132597923278809
    9. 'ac' → logprob: -11.507597923278809
    10. 'c' → logprob: -11.632597923278809

Token 1931: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.700132997939363e-05
    2. '[' → logprob: -11.250017166137695
    3. '[current' → logprob: -12.750017166137695
    4. 'c' → logprob: -15.375017166137695
    5. '[(' → logprob: -15.500017166137695
    6. '[
' → logprob: -15.750017166137695
    7. '(c' → logprob: -15.875017166137695
    8. ':' → logprob: -16.125017166137695
    9. '   ' → logprob: -16.625017166137695
    10. ' [' → logprob: -16.750017166137695

Token 1932: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2295997440814972
    2. ']:' → logprob: -1.6045997142791748
    3. ':' → logprob: -5.854599952697754
    4. ':
' → logprob: -7.354599952697754
    5. ']:
' → logprob: -7.979599952697754
    6. ']' → logprob: -8.604599952697754
    7. ']:

' → logprob: -9.854599952697754
    8. '           ' → logprob: -10.354599952697754
    9. '):
' → logprob: -10.729599952697754
    10. '       ' → logprob: -11.479599952697754

Token 1933: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01346537284553051
    2. '           ' → logprob: -4.888465404510498
    3. '                
' → logprob: -6.388465404510498
    4. ' direction' → logprob: -6.638465404510498
    5. 'direction' → logprob: -7.013465404510498
    6. '```' → logprob: -7.263465404510498
    7. '
' → logprob: -8.26346492767334
    8. '            
' → logprob: -8.76346492767334
    9. ' next' → logprob: -9.01346492767334
    10. 'next' → logprob: -9.13846492767334

Token 1934: ' road' (ID: 8733)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.721450924873352
    2. ' direction' → logprob: -1.471450924873352
    3. '               ' → logprob: -2.2214508056640625
    4. '#' → logprob: -2.4714508056640625
    5. 'next' → logprob: -3.8464508056640625
    6. ' #' → logprob: -3.8464508056640625
    7. '                   ' → logprob: -3.9714508056640625
    8. 'neighbor' → logprob: -4.9714508056640625
    9. ' next' → logprob: -5.4714508056640625
    10. 'd' → logprob: -5.8464508056640625

Token 1935: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3499223291873932
    2. '=' → logprob: -1.2249222993850708
    3. '_key' → logprob: -6.974922180175781
    4. '_time' → logprob: -7.724922180175781
    5. '_' → logprob: -10.099922180175781
    6. '_obj' → logprob: -11.099922180175781
    7. 'key' → logprob: -11.349922180175781
    8. ':' → logprob: -11.849922180175781
    9. '   ' → logprob: -12.349922180175781
    10. '           ' → logprob: -12.724922180175781

Token 1936: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023246292024850845
    2. ' self' → logprob: -3.7732462882995605
    3. '(self' → logprob: -14.898246765136719
    4. '[self' → logprob: -15.523246765136719
    5. '=self' → logprob: -16.27324676513672
    6. '               ' → logprob: -16.52324676513672
    7. 'elf' → logprob: -16.64824676513672
    8. '	self' → logprob: -16.77324676513672
    9. '$self' → logprob: -17.77324676513672
    10. 'city' → logprob: -18.02324676513672

Token 1937: '.city' (ID: 50562)
  Prédit: '.city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.004673980642110109
    2. 'city' → logprob: -5.504673957824707
    3. '.get' → logprob: -7.504673957824707
    4. '_city' → logprob: -11.754673957824707
    5. '.car' → logprob: -12.004673957824707
    6. ' city' → logprob: -12.004673957824707
    7. 'get' → logprob: -12.379673957824707
    8. 'City' → logprob: -13.004673957824707
    9. '.user' → logprob: -13.129673957824707
    10. ').' → logprob: -13.379673957824707

Token 1938: '_map' (ID: 11824)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.06600484997034073
    2. '.ro' → logprob: -4.066004753112793
    3. '               ' → logprob: -4.316004753112793
    4. 'self' → logprob: -4.816004753112793
    5. 'get' → logprob: -5.441004753112793
    6. '           ' → logprob: -5.691004753112793
    7. '_map' → logprob: -5.691004753112793
    8. '.city' → logprob: -5.816004753112793
    9. '[self' → logprob: -5.941004753112793
    10. 'roads' → logprob: -7.066004753112793

Token 1939: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0007922396762296557
    2. 'get' → logprob: -7.250792026519775
    3. '.ro' → logprob: -9.500792503356934
    4. '.' → logprob: -12.250792503356934
    5. '```' → logprob: -14.375792503356934
    6. 'ro' → logprob: -15.125792503356934
    7. '_get' → logprob: -15.125792503356934
    8. '.ge' → logprob: -15.375792503356934
    9. '   ' → logprob: -15.375792503356934
    10. ' get' → logprob: -15.750792503356934

Token 1940: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.2729995988775045e-06
    2. 'road' → logprob: -12.750006675720215
    3. '_ro' → logprob: -12.875006675720215
    4. 'Road' → logprob: -14.250006675720215
    5. '```' → logprob: -16.7500057220459
    6. '_between' → logprob: -17.0000057220459
    7. ''_' → logprob: -17.2500057220459
    8. '`' → logprob: -18.5000057220459
    9. '(_' → logprob: -18.8750057220459
    10. ' Road' → logprob: -19.0000057220459

Token 1941: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -2.6060808522743173e-05
    2. '_' → logprob: -11.000025749206543
    3. 'Road' → logprob: -11.875025749206543
    4. ' road' → logprob: -13.625025749206543
    5. 'rod' → logprob: -15.125025749206543
    6. 'ro' → logprob: -15.875025749206543
    7. '```' → logprob: -15.875025749206543
    8. '-road' → logprob: -16.25002670288086
    9. '
' → logprob: -16.87502670288086
    10. 'r' → logprob: -16.87502670288086

Token 1942: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -3.292907877039397e-06
    2. 'between' → logprob: -12.75000286102295
    3. '-between' → logprob: -16.125003814697266
    4. 'Between' → logprob: -16.250003814697266
    5. '_b' → logprob: -16.375003814697266
    6. '((' → logprob: -16.625003814697266
    7. '```' → logprob: -17.375003814697266
    8. '[(' → logprob: -18.125003814697266
    9. '   ' → logprob: -18.250003814697266
    10. ' between' → logprob: -18.625003814697266

Token 1943: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.125003814697266
    3. '(current' → logprob: -13.875003814697266
    4. '(co' → logprob: -14.500003814697266
    5. 'c' → logprob: -15.375003814697266
    6. '(
' → logprob: -16.000003814697266
    7. ' (' → logprob: -16.875003814697266
    8. '(coord' → logprob: -17.875003814697266
    9. '```' → logprob: -19.125003814697266
    10. ')c' → logprob: -19.125003814697266

Token 1944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.491498531133402e-06
    2. ' ,' → logprob: -11.875009536743164
    3. ',
' → logprob: -13.125009536743164
    4. ',c' → logprob: -16.375009536743164
    5. '[' → logprob: -16.625009536743164
    6. ',n' → logprob: -16.875009536743164
    7. '               ' → logprob: -17.000009536743164
    8. 'neighbor' → logprob: -17.125009536743164
    9. 's' → logprob: -17.250009536743164
    10. ')' → logprob: -17.625009536743164

Token 1945: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.00029720881138928235
    2. ' neighbor' → logprob: -8.125297546386719
    3. 'coordinate' → logprob: -14.375297546386719
    4. '           ' → logprob: -15.375297546386719
    5. '               ' → logprob: -16.00029754638672
    6. 'c' → logprob: -17.12529754638672
    7. '                   ' → logprob: -17.25029754638672
    8. '
' → logprob: -17.37529754638672
    9. '   ' → logprob: -17.50029754638672
    10. '  ' → logprob: -17.62529754638672

Token 1946: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2546699643135071
    2. ')' → logprob: -1.5046699047088623
    3. '               ' → logprob: -6.254670143127441
    4. ')
' → logprob: -7.129670143127441
    5. ')`
' → logprob: -12.629670143127441
    6. '                   ' → logprob: -12.879670143127441
    7. ')

' → logprob: -13.129670143127441
    8. '           ' → logprob: -13.629670143127441
    9. '                ' → logprob: -14.254670143127441
    10. '       ' → logprob: -14.254670143127441

Token 1947: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000170882252859883
    2. ' if' → logprob: -9.250170707702637
    3. '                   ' → logprob: -10.500170707702637
    4. '                
' → logprob: -11.000170707702637
    5. '
' → logprob: -11.125170707702637
    6. 'if' → logprob: -12.000170707702637
    7. '                ' → logprob: -13.000170707702637
    8. '           ' → logprob: -13.125170707702637
    9. ',' → logprob: -13.625170707702637
    10. '```' → logprob: -14.000170707702637

Token 1948: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0024365431163460016
    2. '               ' → logprob: -6.127436637878418
    3. ' if' → logprob: -8.377436637878418
    4. 'travel' → logprob: -11.127436637878418
    5. '```' → logprob: -13.377436637878418
    6. '#' → logprob: -13.502436637878418
    7. 'next' → logprob: -13.877436637878418
    8. '                   ' → logprob: -14.002436637878418
    9. 'road' → logprob: -14.252436637878418
    10. 'If' → logprob: -14.752436637878418

Token 1949: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.0018052493687719107
    2. 'not' → logprob: -6.501805305480957
    3. ' road' → logprob: -8.876805305480957
    4. '(' → logprob: -9.126805305480957
    5. '(not' → logprob: -10.751805305480957
    6. '   ' → logprob: -10.876805305480957
    7. '           ' → logprob: -12.626805305480957
    8. ' not' → logprob: -12.626805305480957
    9. '               ' → logprob: -13.501805305480957
    10. '       ' → logprob: -13.626805305480957

Token 1950: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07786241173744202
    2. '.closed' → logprob: -2.952862501144409
    3. 'is' → logprob: -3.827862501144409
    4. ' and' → logprob: -7.20286226272583
    5. '.is' → logprob: -9.202862739562988
    6. 'and' → logprob: -9.327862739562988
    7. 'closed' → logprob: -11.577862739562988
    8. '	is' → logprob: -11.952862739562988
    9. '   ' → logprob: -12.577862739562988
    10. ' closed' → logprob: -13.077862739562988

Token 1951: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.003183420980349183
    2. ' None' → logprob: -5.753183364868164
    3. '(None' → logprob: -12.503183364868164
    4. 'closed' → logprob: -13.753183364868164
    5. 'not' → logprob: -14.753183364868164
    6. '_None' → logprob: -16.003183364868164
    7. '=None' → logprob: -16.378183364868164
    8. '           ' → logprob: -16.628183364868164
    9. 'Closed' → logprob: -16.878183364868164
    10. '   ' → logprob: -17.003183364868164

Token 1952: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.41983693838119507
    2. '                   ' → logprob: -1.1698369979858398
    3. 'or' → logprob: -3.79483699798584
    4. '               ' → logprob: -4.66983699798584
    5. '                       ' → logprob: -8.41983699798584
    6. '                  ' → logprob: -8.91983699798584
    7. '	or' → logprob: -10.16983699798584
    8. '           ' → logprob: -10.16983699798584
    9. '                ' → logprob: -10.41983699798584
    10. '                 ' → logprob: -11.16983699798584

Token 1953: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.006809514947235584
    2. ' road' → logprob: -5.006809711456299
    3. '               ' → logprob: -10.00680923461914
    4. '   ' → logprob: -10.75680923461914
    5. '                   ' → logprob: -11.63180923461914
    6. '           ' → logprob: -12.38180923461914
    7. 'ro' → logprob: -13.00680923461914
    8. 'closed' → logprob: -13.00680923461914
    9. '                       ' → logprob: -14.13180923461914
    10. 'roads' → logprob: -14.13180923461914

Token 1954: '.closed' (ID: 174028)
  Prédit: '.closed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.closed' → logprob: -8.895480277715251e-06
    2. '.' → logprob: -12.000008583068848
    3. ' .' → logprob: -14.500008583068848
    4. '               ' → logprob: -15.000008583068848
    5. '.disabled' → logprob: -15.000008583068848
    6. '.has' → logprob: -15.125008583068848
    7. '.cl' → logprob: -15.250008583068848
    8. '.lock' → logprob: -15.500008583068848
    9. '.is' → logprob: -15.500008583068848
    10. ').' → logprob: -15.875008583068848

Token 1955: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3980991244316101
    2. ':
' → logprob: -1.6480991840362549
    3. '                   ' → logprob: -2.398099184036255
    4. '               ' → logprob: -3.898099184036255
    5. ' or' → logprob: -4.148098945617676
    6. '                       ' → logprob: -5.398098945617676
    7. 'continue' → logprob: -5.898098945617676
    8. '           ' → logprob: -7.648098945617676
    9. 'or' → logprob: -7.648098945617676
    10. ' continue' → logprob: -8.023098945617676

Token 1956: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.796184723294573e-06
    2. '               ' → logprob: -12.750005722045898
    3. '                       ' → logprob: -13.125005722045898
    4. '                  ' → logprob: -14.500005722045898
    5. 'continue' → logprob: -16.5000057220459
    6. '           ' → logprob: -16.5000057220459
    7. '                           ' → logprob: -16.5000057220459
    8. '                    ' → logprob: -16.6250057220459
    9. '		           ' → logprob: -16.8750057220459
    10. '				' → logprob: -17.3750057220459

Token 1957: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004118649754673243
    2. 'continue' (adapté à ' continue') → logprob: -5.5041184425354
    3. ' continue' → logprob: -10.254118919372559
    4. '                       ' → logprob: -12.379118919372559
    5. '               ' → logprob: -14.879118919372559
    6. '   ' → logprob: -15.254118919372559
    7. '	continue' → logprob: -16.379117965698242
    8. '                  ' → logprob: -16.504117965698242
    9. '				' → logprob: -17.004117965698242
    10. '                    ' → logprob: -17.504117965698242

Token 1958: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10088562220335007
    2. '
' → logprob: -2.6008856296539307
    3. '                
' → logprob: -3.8508856296539307
    4. '                    
' → logprob: -9.225885391235352
    5. '
' → logprob: -9.350885391235352
    6. '                   ' → logprob: -9.850885391235352
    7. '               
' → logprob: -10.100885391235352
    8. '                

' → logprob: -10.475885391235352
    9. '  
' → logprob: -10.725885391235352
    10. '                
' → logprob: -11.100885391235352

Token 1959: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23300068080425262
    2. 'travel' → logprob: -2.4830007553100586
    3. 'next' → logprob: -2.8580007553100586
    4. 'new' → logprob: -3.1080007553100586
    5. '#' → logprob: -4.608000755310059
    6. 'direction' → logprob: -5.108000755310059
    7. '                
' → logprob: -5.858000755310059
    8. 'neighbor' → logprob: -6.733000755310059
    9. ' travel' → logprob: -7.983000755310059
    10. '
' → logprob: -7.983000755310059

Token 1960: ' travel' (ID: 6410)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.5688372850418091
    2. 'travel' (adapté à ' travel') → logprob: -1.193837285041809
    3. 'move' → logprob: -3.1938371658325195
    4. 'dir' → logprob: -3.5688371658325195
    5. '               ' → logprob: -3.6938371658325195
    6. '#' → logprob: -3.8188371658325195
    7. 'next' → logprob: -4.8188371658325195
    8. 'new' → logprob: -5.8188371658325195
    9. 'movement' → logprob: -7.0688371658325195
    10. 'time' → logprob: -7.3188371658325195

Token 1961: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00017958412354346365
    2. '_' → logprob: -9.625179290771484
    3. 'time' → logprob: -9.750179290771484
    4. '               ' → logprob: -10.500179290771484
    5. '_t' → logprob: -11.250179290771484
    6. 't' → logprob: -11.750179290771484
    7. '=' → logprob: -13.250179290771484
    8. ' =' → logprob: -13.750179290771484
    9. 'Time' → logprob: -13.750179290771484
    10. '_duration' → logprob: -13.875179290771484

Token 1962: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759449005126953
    2. '=' → logprob: -0.8259449005126953
    3. '_' → logprob: -13.450944900512695
    4. ' ' → logprob: -14.325944900512695
    5. '               ' → logprob: -14.325944900512695
    6. '                   ' → logprob: -14.450944900512695
    7. '                ' → logprob: -14.700944900512695
    8. '   ' → logprob: -15.075944900512695
    9. '+' → logprob: -15.325944900512695
    10. '_=' → logprob: -15.325944900512695

Token 1963: ' road' (ID: 8733)
  Prédit: 'road'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.011224424466490746
    2. ' road' → logprob: -4.511224269866943
    3. 'travel' → logprob: -9.011224746704102
    4. '               ' → logprob: -10.886224746704102
    5. '                   ' → logprob: -11.136224746704102
    6. ' travel' → logprob: -11.511224746704102
    7. '   ' → logprob: -13.136224746704102
    8. '                       ' → logprob: -13.761224746704102
    9. '           ' → logprob: -14.136224746704102
    10. ' ' → logprob: -14.261224746704102

Token 1964: '.travel' (ID: 152570)
  Prédit: '.travel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.travel' → logprob: -0.00014251544780563563
    2. '.' → logprob: -9.000142097473145
    3. 'travel' → logprob: -11.500142097473145
    4. '.trip' → logprob: -13.000142097473145
    5. ' .' → logprob: -13.375142097473145
    6. '._' → logprob: -14.000142097473145
    7. '.time' → logprob: -14.000142097473145
    8. '.tr' → logprob: -14.375142097473145
    9. '.base' → logprob: -14.500142097473145
    10. '.
' → logprob: -15.125142097473145

Token 1965: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.7292167184641585e-05
    2. '_' → logprob: -10.250057220458984
    3. '()' → logprob: -11.125057220458984
    4. '               ' → logprob: -13.000057220458984
    5. '(_' → logprob: -13.875057220458984
    6. '()
' → logprob: -13.875057220458984
    7. 'time' → logprob: -14.625057220458984
    8. ' _' → logprob: -14.750057220458984
    9. '           ' → logprob: -14.875057220458984
    10. '   ' → logprob: -15.375057220458984

Token 1966: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9979889392852783
    2. ' +' → logprob: -1.4979889392852783
    3. '+' → logprob: -1.6229889392852783
    4. '               ' → logprob: -1.6229889392852783
    5. '                   ' → logprob: -4.997988700866699
    6. '()+' → logprob: -6.247988700866699
    7. ')' → logprob: -6.622988700866699
    8. '                ' → logprob: -6.872988700866699
    9. '                       ' → logprob: -8.2479887008667
    10. '()
' → logprob: -8.3729887008667

Token 1967: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017839208885561675
    2. ' if' → logprob: -9.750178337097168
    3. '                
' → logprob: -10.625178337097168
    4. 'if' → logprob: -10.750178337097168
    5. '                   ' → logprob: -10.875178337097168
    6. '              ' → logprob: -11.125178337097168
    7. '                ' → logprob: -11.250178337097168
    8. '           ' → logprob: -11.875178337097168
    9. '                               ' → logprob: -12.500178337097168
    10. '			' → logprob: -13.000178337097168

Token 1968: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02776460163295269
    2. ' if' → logprob: -3.7777645587921143
    3. '               ' → logprob: -5.402764797210693
    4. '
' → logprob: -13.152764320373535
    5. 'If' → logprob: -13.902764320373535
    6. '                
' → logprob: -14.652764320373535
    7. '#' → logprob: -15.027764320373535
    8. '                   ' → logprob: -15.152764320373535
    9. '```' → logprob: -15.527764320373535
    10. '	if' → logprob: -15.527764320373535

Token 1969: ' travel' (ID: 6410)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.03804688900709152
    2. ' travel' → logprob: -3.2880468368530273
    3. '                   ' → logprob: -12.413046836853027
    4. '               ' → logprob: -13.913046836853027
    5. 'trav' → logprob: -16.163047790527344
    6. 'tr' → logprob: -16.413047790527344
    7. 'Travel' → logprob: -16.538047790527344
    8. '                       ' → logprob: -16.663047790527344
    9. '.travel' → logprob: -17.163047790527344
    10. '           ' → logprob: -17.163047790527344

Token 1970: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.75
    3. ' _' → logprob: -17.25
    4. 'time' → logprob: -17.625
    5. '   ' → logprob: -17.75
    6. 'ing' → logprob: -18.0
    7. '_times' → logprob: -18.0
    8. '==' → logprob: -18.25
    9. '._' → logprob: -18.375
    10. '           ' → logprob: -18.625

Token 1971: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00770955067127943
    2. 'is' → logprob: -4.882709503173828
    3. ' ==' → logprob: -9.757709503173828
    4. '==' → logprob: -10.507709503173828
    5. '                   ' → logprob: -12.007709503173828
    6. ')' → logprob: -12.632709503173828
    7. '               ' → logprob: -13.257709503173828
    8. '                ' → logprob: -13.632709503173828
    9. 'in' → logprob: -14.007709503173828
    10. '   ' → logprob: -14.382709503173828

Token 1972: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.77022064034827e-05
    2. ' None' → logprob: -9.250097274780273
    3. '0' → logprob: -13.500097274780273
    4. '_None' → logprob: -17.000097274780273
    5. '                   ' → logprob: -17.375097274780273
    6. '(None' → logprob: -17.375097274780273
    7. '   ' → logprob: -17.500097274780273
    8. 'not' → logprob: -18.625097274780273
    9. '                       ' → logprob: -18.875097274780273
    10. '=None' → logprob: -18.875097274780273

Token 1973: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07735510915517807
    2. ':' → logprob: -2.827355146408081
    3. ':
' → logprob: -4.327354907989502
    4. '               ' → logprob: -6.952354907989502
    5. '                       ' → logprob: -7.702354907989502
    6. 'continue' → logprob: -8.45235538482666
    7. '                  ' → logprob: -8.70235538482666
    8. ' or' → logprob: -9.32735538482666
    9. ' continue' → logprob: -9.70235538482666
    10. '                           ' → logprob: -10.57735538482666

Token 1974: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010092071170220152
    2. 'continue' → logprob: -10.000101089477539
    3. '                       ' → logprob: -10.125101089477539
    4. '               ' → logprob: -11.750101089477539
    5. ' continue' → logprob: -12.125101089477539
    6. '                  ' → logprob: -14.500101089477539
    7. '   ' → logprob: -14.625101089477539
    8. '                           ' → logprob: -14.875101089477539
    9. '           ' → logprob: -15.375101089477539
    10. '                    ' → logprob: -16.25010108947754

Token 1975: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.31366756558418274
    2. '                   ' → logprob: -1.3136675357818604
    3. ' continue' → logprob: -8.063667297363281
    4. '               ' → logprob: -10.438667297363281
    5. '                       ' → logprob: -10.563667297363281
    6. '	continue' → logprob: -10.688667297363281
    7. '   ' → logprob: -11.563667297363281
    8. '           ' → logprob: -13.438667297363281
    9. '				' → logprob: -14.688667297363281
    10. '_continue' → logprob: -15.188667297363281

Token 1976: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06901039183139801
    2. '
' → logprob: -3.0690104961395264
    3. '                
' → logprob: -4.069010257720947
    4. ' 
' → logprob: -7.069010257720947
    5. '<|end|>' → logprob: -7.694010257720947
    6. '               
' → logprob: -8.444010734558105
    7. '                    
' → logprob: -8.569010734558105
    8. '
' → logprob: -8.694010734558105
    9. '  
' → logprob: -8.819010734558105
    10. '                ' → logprob: -8.819010734558105

Token 1977: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13179242610931396
    2. '                
' → logprob: -2.6317925453186035
    3. '
' → logprob: -3.3817925453186035
    4. ' next' → logprob: -5.0067925453186035
    5. 'next' → logprob: -5.2567925453186035
    6. '               
' → logprob: -7.1317925453186035
    7. '                    
' → logprob: -7.2567925453186035
    8. ' 
' → logprob: -7.7567925453186035
    9. 'direction' → logprob: -7.7567925453186035
    10. ' direction' → logprob: -7.8817925453186035

Token 1978: ' #' (ID: 1069)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.1564655303955078
    2. '#' (adapté à ' #') → logprob: -1.2814655303955078
    3. 'arrival' → logprob: -1.6564655303955078
    4. 'next' → logprob: -2.031465530395508
    5. 'new' → logprob: -3.406465530395508
    6. 'dir' → logprob: -4.531465530395508
    7. 'arr' → logprob: -4.656465530395508
    8. 'move' → logprob: -4.781465530395508
    9. 'wait' → logprob: -5.156465530395508
    10. 'neighbor' → logprob: -5.406465530395508

Token 1979: ' Determine' (ID: 57076)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.6841200590133667
    2. '#' → logprob: -1.8091200590133667
    3. 'arrival' → logprob: -2.0591201782226562
    4. 'move' → logprob: -2.4341201782226562
    5. 'next' → logprob: -3.0591201782226562
    6. 'dir' → logprob: -3.5591201782226562
    7. 'new' → logprob: -4.559120178222656
    8. 'movement' → logprob: -4.809120178222656
    9. 'arr' → logprob: -4.934120178222656
    10. 'neighbor' → logprob: -5.309120178222656

Token 1980: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.4241357147693634
    2. 'move' → logprob: -1.549135684967041
    3. 'next' → logprob: -2.424135684967041
    4. 'dir' → logprob: -3.424135684967041
    5. 'movement' → logprob: -5.049135684967041
    6. 'new' → logprob: -5.424135684967041
    7. '#' → logprob: -8.2991361618042
    8. 'travel' → logprob: -8.6741361618042
    9. 'nd' → logprob: -8.7991361618042
    10. 'm' → logprob: -8.9241361618042

Token 1981: ' from' (ID: 591)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.386293888092041
    2. '               ' → logprob: -1.761293888092041
    3. 'of' → logprob: -1.761293888092041
    4. ' =' → logprob: -2.136293888092041
    5. 'next' → logprob: -2.136293888092041
    6. 'dir' → logprob: -2.636293888092041
    7. '=' → logprob: -3.261293888092041
    8. 'd' → logprob: -4.136293888092041
    9. 'out' → logprob: -4.511293888092041
    10. 'direction' → logprob: -4.636293888092041

Token 1982: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0011044946731999516
    2. ' c' → logprob: -6.876104354858398
    3. 'current' → logprob: -9.626104354858398
    4. ' current' → logprob: -13.626104354858398
    5. '               ' → logprob: -13.751104354858398
    6. '_c' → logprob: -14.251104354858398
    7. 'f' → logprob: -14.751104354858398
    8. '                   ' → logprob: -14.751104354858398
    9. 'neighbor' → logprob: -14.751104354858398
    10. ')c' → logprob: -15.501104354858398

Token 1983: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3557034134864807
    2. '_to' → logprob: -1.855703353881836
    3. ' to' → logprob: -1.980703353881836
    4. '               ' → logprob: -6.230703353881836
    5. ',' → logprob: -6.355703353881836
    6. 'tow' → logprob: -7.355703353881836
    7. ')' → logprob: -8.605703353881836
    8. 't' → logprob: -9.230703353881836
    9. '_t' → logprob: -9.855703353881836
    10. '_' → logprob: -9.980703353881836

Token 1984: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0015023599844425917
    2. ' neighbor' → logprob: -6.501502513885498
    3. 'ne' → logprob: -17.376502990722656
    4. '_neighbor' → logprob: -17.876502990722656
    5. '
' → logprob: -18.376502990722656
    6. 'n' → logprob: -18.376502990722656
    7. 'neighbors' → logprob: -19.126502990722656
    8. '```' → logprob: -19.376502990722656
    9. 'nei' → logprob: -19.876502990722656
    10. ' neighbour' → logprob: -20.251502990722656

Token 1985: '
' (ID: 198)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8315346240997314
    2. 'direction' → logprob: -1.5815346240997314
    3. 'd' → logprob: -1.9565346240997314
    4. '               ' → logprob: -2.3315346240997314
    5. 'dir' → logprob: -2.8315346240997314
    6. 'move' → logprob: -3.5815346240997314
    7. 'neighbor' → logprob: -4.831534385681152
    8. 'new' → logprob: -5.081534385681152
    9. ' next' → logprob: -5.456534385681152
    10. ' direction' → logprob: -5.706534385681152

Token 1986: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2893279194831848
    2. 'next' → logprob: -1.66432785987854
    3. ' next' → logprob: -3.28932785987854
    4. 'direction' → logprob: -4.164328098297119
    5. ' direction' → logprob: -5.664328098297119
    6. 'd' → logprob: -6.164328098297119
    7. 'new' → logprob: -6.789328098297119
    8. ' nxt' → logprob: -7.164328098297119
    9. ' d' → logprob: -7.914328098297119
    10. 'dir' → logprob: -8.039327621459961

Token 1987: ' move' (ID: 5275)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.3230835795402527
    2. 'dir' → logprob: -1.9480836391448975
    3. 'next' → logprob: -2.4480836391448975
    4. 'd' → logprob: -3.8230836391448975
    5. 'move' (adapté à ' move') → logprob: -4.198083400726318
    6. 'nd' → logprob: -5.823083400726318
    7. ' direction' → logprob: -6.198083400726318
    8. 'ndir' → logprob: -6.323083400726318
    9. '               ' → logprob: -6.448083400726318
    10. 'new' → logprob: -7.573083400726318

Token 1988: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.6934892535209656
    2. '_direction' → logprob: -0.6934892535209656
    3. '_' → logprob: -8.943489074707031
    4. 'dir' → logprob: -9.568489074707031
    5. ' =' → logprob: -9.568489074707031
    6. 'direction' → logprob: -9.943489074707031
    7. '=' → logprob: -11.568489074707031
    8. '_d' → logprob: -12.193489074707031
    9. '_direct' → logprob: -12.443489074707031
    10. 'd' → logprob: -13.443489074707031

Token 1989: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894839882850647
    2. '=' → logprob: -2.4639484882354736
    3. '_' → logprob: -13.088948249816895
    4. ',' → logprob: -13.588948249816895
    5. '               ' → logprob: -13.838948249816895
    6. ' ' → logprob: -13.963948249816895
    7. '                ' → logprob: -14.088948249816895
    8. ')' → logprob: -14.463948249816895
    9. '                   ' → logprob: -14.713948249816895
    10. ':' → logprob: -14.713948249816895

Token 1990: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -2.7848862373502925e-05
    2. ' Direction' → logprob: -10.500027656555176
    3. 'Directional' → logprob: -15.375027656555176
    4. '(Direction' → logprob: -18.250028610229492
    5. '           ' → logprob: -18.750028610229492
    6. '               ' → logprob: -21.125028610229492
    7. '_direction' → logprob: -21.375028610229492
    8. 'direction' → logprob: -21.750028610229492
    9. '   ' → logprob: -21.750028610229492
    10. '.Direction' → logprob: -21.750028610229492

Token 1991: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.003978312481194735
    2. 'between' → logprob: -5.753978252410889
    3. '.' → logprob: -7.378978252410889
    4. '.bet' → logprob: -8.753978729248047
    5. ' between' → logprob: -12.378978729248047
    6. '```' → logprob: -12.753978729248047
    7. '_between' → logprob: -13.128978729248047
    8. '   ' → logprob: -13.128978729248047
    9. '.be' → logprob: -13.253978729248047
    10. '.B' → logprob: -14.003978729248047

Token 1992: 'etween' (ID: 32336)
  Prédit: 'etween'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etween' → logprob: -1.0564331205387134e-05
    2. 'between' → logprob: -11.50001049041748
    3. 'et' → logprob: -14.87501049041748
    4. 'Between' → logprob: -18.750011444091797
    5. '_between' → logprob: -19.375011444091797
    6. ' between' → logprob: -20.000011444091797
    7. 'efore' → logprob: -21.375011444091797
    8. 'ecause' → logprob: -22.000011444091797
    9. 'ween' → logprob: -22.250011444091797
    10. 'e' → logprob: -23.125011444091797

Token 1993: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00026968008023686707
    2. '(current' → logprob: -8.750269889831543
    3. 'c' → logprob: -9.750269889831543
    4. '(' → logprob: -10.000269889831543
    5. '(
' → logprob: -12.750269889831543
    6. '(co' → logprob: -13.125269889831543
    7. 'current' → logprob: -13.250269889831543
    8. '(coord' → logprob: -15.250269889831543
    9. ')c' → logprob: -16.125268936157227
    10. ' c' → logprob: -16.125268936157227

Token 1994: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011175924446433783
    2. ',c' → logprob: -6.876117706298828
    3. ',current' → logprob: -9.751117706298828
    4. ' ,' → logprob: -10.876117706298828
    5. ',
' → logprob: -13.126117706298828
    6. ',n' → logprob: -13.251117706298828
    7. 'c' → logprob: -14.376117706298828
    8. ',m' → logprob: -14.376117706298828
    9. ',next' → logprob: -14.376117706298828
    10. ')' → logprob: -14.751117706298828

Token 1995: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0010386446956545115
    2. ' neighbor' → logprob: -6.876038551330566
    3. 'c' → logprob: -13.251038551330566
    4. 'coordinate' → logprob: -13.251038551330566
    5. 'ne' → logprob: -14.251038551330566
    6. 'n' → logprob: -14.501038551330566
    7. '
' → logprob: -15.251038551330566
    8. 'neighbors' → logprob: -15.626038551330566
    9. 'coord' → logprob: -15.751038551330566
    10. '_neighbor' → logprob: -16.501039505004883

Token 1996: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11479756981134415
    2. ')' → logprob: -2.364797592163086
    3. '               ' → logprob: -4.239797592163086
    4. ')
' → logprob: -9.739797592163086
    5. '           ' → logprob: -11.989797592163086
    6. ')

' → logprob: -12.864797592163086
    7. '                   ' → logprob: -13.239797592163086
    8. ')`
' → logprob: -13.239797592163086
    9. '              ' → logprob: -14.614797592163086
    10. '):
' → logprob: -14.989797592163086

Token 1997: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004495634697377682
    2. '
' → logprob: -5.879495620727539
    3. '                
' → logprob: -6.629495620727539
    4. 'if' → logprob: -8.629495620727539
    5. '```' → logprob: -9.629495620727539
    6. ' if' → logprob: -10.254495620727539
    7. '                   ' → logprob: -10.629495620727539
    8. '                    
' → logprob: -11.504495620727539
    9. '               
' → logprob: -11.504495620727539
    10. ',' → logprob: -12.004495620727539

Token 1998: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12260696291923523
    2. '               ' → logprob: -2.3726069927215576
    3. '#' → logprob: -3.8726069927215576
    4. ' if' → logprob: -6.7476067543029785
    5. '```' → logprob: -9.622607231140137
    6. ' #' → logprob: -10.247607231140137
    7. '           ' → logprob: -10.247607231140137
    8. '                   ' → logprob: -11.622607231140137
    9. '                
' → logprob: -11.997607231140137
    10. '                ' → logprob: -12.747607231140137

Token 1999: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.006029761396348476
    2. ' move' → logprob: -5.1310296058654785
    3. 'f' → logprob: -9.881030082702637
    4. '(move' → logprob: -11.256030082702637
    5. '           ' → logprob: -11.381030082702637
    6. '               ' → logprob: -11.506030082702637
    7. '	move' → logprob: -12.006030082702637
    8. 'Direction' → logprob: -12.756030082702637
    9. '   ' → logprob: -13.256030082702637
    10. '                   ' → logprob: -14.006030082702637

Token 2000: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -3.2020991056924686e-05
    2. '!=' → logprob: -11.750032424926758
    3. 'dir' → logprob: -12.125032424926758
    4. '==' → logprob: -12.625032424926758
    5. 'Dir' → logprob: -12.750032424926758
    6. '_' → logprob: -13.000032424926758
    7. '__' → logprob: -14.000032424926758
    8. 'ing' → logprob: -14.125032424926758
    9. '_from' → logprob: -14.437532424926758
    10. ' !=' → logprob: -14.500032424926758

Token 2001: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29979902505874634
    2. '==' → logprob: -1.4247989654541016
    3. ' is' → logprob: -4.174798965454102
    4. ' !=' → logprob: -6.049798965454102
    5. '!=' → logprob: -8.299798965454102
    6. '<|end|>' → logprob: -9.049798965454102
    7. ')' → logprob: -9.424798965454102
    8. ')==' → logprob: -9.549798965454102
    9. '=' → logprob: -10.299798965454102
    10. 'is' → logprob: -10.549798965454102

Token 2002: ' None' (ID: 4662)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.580764651298523
    2. 'None' → logprob: -0.830764651298523
    3. 'f' → logprob: -5.8307647705078125
    4. ' Direction' → logprob: -7.0807647705078125
    5. ' None' → logprob: -7.9557647705078125
    6. '   ' → logprob: -8.580764770507812
    7. ''f' → logprob: -8.955764770507812
    8. ''' → logprob: -9.080764770507812
    9. '           ' → logprob: -10.205764770507812
    10. '       ' → logprob: -10.330764770507812

Token 2003: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39697155356407166
    2. ':' → logprob: -1.396971583366394
    3. '               ' → logprob: -3.3969714641571045
    4. ':
' → logprob: -3.6469714641571045
    5. '                       ' → logprob: -4.896971702575684
    6. ' or' → logprob: -5.021971702575684
    7. '                           ' → logprob: -5.896971702575684
    8. '                               ' → logprob: -7.146971702575684
    9. ' and' → logprob: -7.396971702575684
    10. '   ' → logprob: -7.771971702575684

Token 2004: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02636079676449299
    2. '               ' → logprob: -4.026360988616943
    3. '                       ' → logprob: -5.151360988616943
    4. '                               ' → logprob: -7.401360988616943
    5. '                  ' → logprob: -7.776360988616943
    6. '                           ' → logprob: -7.901360988616943
    7. ' continue' → logprob: -8.026360511779785
    8. '                ' → logprob: -9.026360511779785
    9. 'continue' → logprob: -9.026360511779785
    10. ' or' → logprob: -9.401360511779785

Token 2005: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.672475278377533
    2. '                   ' → logprob: -1.0474753379821777
    3. 'continue' (adapté à ' continue') → logprob: -2.0474753379821777
    4. '               ' → logprob: -5.047475337982178
    5. '                       ' → logprob: -6.422475337982178
    6. '   ' → logprob: -7.922475337982178
    7. '                               ' → logprob: -8.04747486114502
    8. '                  ' → logprob: -9.17247486114502
    9. '                ' → logprob: -9.42247486114502
    10. '                           ' → logprob: -9.42247486114502

Token 2006: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00465013412758708
    2. '                
' → logprob: -5.629650115966797
    3. '
' → logprob: -7.379650115966797
    4. '<|end|>' → logprob: -9.504650115966797
    5. '```' → logprob: -10.004650115966797
    6. '                   ' → logprob: -10.129650115966797
    7. '               
' → logprob: -10.254650115966797
    8. '                ' → logprob: -10.629650115966797
    9. '                    
' → logprob: -10.754650115966797
    10. '  
' → logprob: -10.754650115966797

Token 2007: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015461683506146073
    2. '                
' → logprob: -6.626546382904053
    3. '                   ' → logprob: -9.876545906066895
    4. '                ' → logprob: -10.501545906066895
    5. '              ' → logprob: -10.501545906066895
    6. '               
' → logprob: -11.001545906066895
    7. '```' → logprob: -11.001545906066895
    8. 'if' → logprob: -11.376545906066895
    9. ' if' → logprob: -11.501545906066895
    10. '                    
' → logprob: -11.751545906066895

Token 2008: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4498916268348694
    2. '               ' → logprob: -1.1998915672302246
    3. 'wait' → logprob: -3.0748915672302246
    4. 'next' → logprob: -5.074891567230225
    5. 'arrival' → logprob: -5.949891567230225
    6. 'turn' → logprob: -6.074891567230225
    7. 'waiting' → logprob: -6.574891567230225
    8. 'new' → logprob: -7.074891567230225
    9. 'if' → logprob: -7.324891567230225
    10. '                
' → logprob: -8.699892044067383

Token 2009: ' No' (ID: 3004)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35114580392837524
    2. 'if' → logprob: -1.2261457443237305
    3. '               ' → logprob: -5.9761457443237305
    4. ' #' → logprob: -10.47614574432373
    5. 'If' → logprob: -10.85114574432373
    6. 'wait' → logprob: -10.97614574432373
    7. 'next' → logprob: -11.10114574432373
    8. ' if' → logprob: -11.22614574432373
    9. '           ' → logprob: -11.22614574432373
    10. '
' → logprob: -11.47614574432373

Token 2010: ' U' (ID: 601)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9196513891220093
    2. ' move' → logprob: -1.0446513891220093
    3. ' if' → logprob: -2.669651508331299
    4. ' continue' → logprob: -3.169651508331299
    5. '_' → logprob: -3.919651508331299
    6. ' U' → logprob: -4.044651508331299
    7. '           ' → logprob: -4.169651508331299
    8. 'turn' → logprob: -4.419651508331299
    9. 'move' → logprob: -4.669651508331299
    10. ' turn' → logprob: -4.669651508331299

Token 2011: '-turn' (ID: 120746)
  Prédit: '-turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-turn' → logprob: -0.0005919939721934497
    2. '_turn' → logprob: -7.750592231750488
    3. 'Turn' → logprob: -9.500592231750488
    4. 'turn' → logprob: -9.875592231750488
    5. '-' → logprob: -11.000592231750488
    6. '-T' → logprob: -11.625592231750488
    7. '-
' → logprob: -12.750592231750488
    8. '
' → logprob: -13.750592231750488
    9. '_' → logprob: -14.000592231750488
    10. '   ' → logprob: -14.375592231750488

Token 2012: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017712609842419624
    2. 'if' → logprob: -4.642712593078613
    3. ' if' → logprob: -4.892712593078613
    4. '
' → logprob: -8.767712593078613
    5. ' or' → logprob: -9.142712593078613
    6. ' and' → logprob: -10.267712593078613
    7. '           ' → logprob: -10.517712593078613
    8. '                   ' → logprob: -10.517712593078613
    9. 'and' → logprob: -10.767712593078613
    10. '                
' → logprob: -10.892712593078613

Token 2013: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3375077545642853
    2. ' and' → logprob: -1.712507724761963
    3. ' or' → logprob: -2.712507724761963
    4. 'and' → logprob: -3.837507724761963
    5. '                   ' → logprob: -5.212507724761963
    6. 'if' → logprob: -5.337507724761963
    7. ' if' → logprob: -5.587507724761963
    8. 'or' → logprob: -6.462507724761963
    9. '           ' → logprob: -6.837507724761963
    10. '
' → logprob: -8.087508201599121

Token 2014: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023278210312128067
    2. 'move' → logprob: -4.27327823638916
    3. ' if' → logprob: -5.02327823638916
    4. ' move' → logprob: -6.52327823638916
    5. '               ' → logprob: -7.27327823638916
    6. 'continue' → logprob: -8.27327823638916
    7. 'f' → logprob: -10.39827823638916
    8. ' continue' → logprob: -11.27327823638916
    9. ' f' → logprob: -11.89827823638916
    10. '(move' → logprob: -11.89827823638916

Token 2015: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.033183611929416656
    2. ' Direction' → logprob: -3.7831835746765137
    3. 'move' → logprob: -4.783183574676514
    4. '(Direction' → logprob: -7.408183574676514
    5. ' move' → logprob: -7.658183574676514
    6. 'f' → logprob: -8.533184051513672
    7. 'op' → logprob: -10.158184051513672
    8. ' f' → logprob: -10.283184051513672
    9. '   ' → logprob: -10.283184051513672
    10. '(move' → logprob: -10.408184051513672

Token 2016: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.09215174615383148
    2. 'op' → logprob: -3.092151641845703
    3. '_op' → logprob: -3.842151641845703
    4. '.b' → logprob: -4.092151641845703
    5. '   ' → logprob: -7.467151641845703
    6. '_between' → logprob: -7.467151641845703
    7. 'OP' → logprob: -7.592151641845703
    8. '_b' → logprob: -7.717151641845703
    9. '           ' → logprob: -7.842151641845703
    10. '.' → logprob: -7.967151641845703

Token 2017: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -1.6405310816480778e-05
    2. 'p' → logprob: -12.250016212463379
    3. '{' → logprob: -12.250016212463379
    4. '{
' → logprob: -13.125016212463379
    5. '==' → logprob: -13.625016212463379
    6. '[' → logprob: -14.250016212463379
    7. '>' → logprob: -14.250016212463379
    8. '(' → logprob: -14.750016212463379
    9. '```' → logprob: -14.750016212463379
    10. '``' → logprob: -14.750016212463379

Token 2018: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0625084862112999
    2. '(move' → logprob: -2.8125085830688477
    3. '(' → logprob: -7.562508583068848
    4. '(
' → logprob: -11.687508583068848
    5. 'move' → logprob: -11.937508583068848
    6. 'f' → logprob: -13.437508583068848
    7. '```' → logprob: -13.687508583068848
    8. ' (' → logprob: -14.062508583068848
    9. ')' → logprob: -14.437508583068848
    10. '(current' → logprob: -14.812508583068848

Token 2019: ')' (ID: 8)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.06124372407793999
    2. '==' → logprob: -3.311243772506714
    3. ')' → logprob: -4.561243534088135
    4. '(' → logprob: -4.686243534088135
    5. ' ==' → logprob: -6.186243534088135
    6. 'move' → logprob: -7.936243534088135
    7. '(f' → logprob: -8.186244010925293
    8. '=' → logprob: -8.686244010925293
    9. ')==' → logprob: -9.061244010925293
    10. '[' → logprob: -9.811244010925293

Token 2020: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.576744794845581
    2. ' ==' → logprob: -0.826744794845581
    3. '()==' → logprob: -8.45174503326416
    4. '=' → logprob: -8.82674503326416
    5. ' !=' → logprob: -9.07674503326416
    6. '!=' → logprob: -9.07674503326416
    7. '()' → logprob: -9.45174503326416
    8. '                   ' → logprob: -10.57674503326416
    9. '(move' → logprob: -10.70174503326416
    10. '==
' → logprob: -10.82674503326416

Token 2021: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.00026169343618676066
    2. ' move' → logprob: -8.250261306762695
    3. '(move' → logprob: -15.500261306762695
    4. '	move' → logprob: -16.375261306762695
    5. '
' → logprob: -18.875261306762695
    6. 'mov' → logprob: -19.750261306762695
    7. '.move' → logprob: -19.875261306762695
    8. ' ' → logprob: -19.875261306762695
    9. '   ' → logprob: -19.875261306762695
    10. '`' → logprob: -20.000261306762695

Token 2022: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -6.704273118884885e-07
    2. 'Dir' → logprob: -15.000000953674316
    3. 'dir' → logprob: -15.125000953674316
    4. '-dir' → logprob: -17.5
    5. '\' → logprob: -18.375
    6. '_' → logprob: -18.375
    7. 'o' → logprob: -18.625
    8. '__' → logprob: -18.75
    9. '_DIR' → logprob: -18.875
    10. 'ing' → logprob: -19.25

Token 2023: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3869498670101166
    2. ':
' → logprob: -1.511949896812439
    3. ':' → logprob: -2.5119497776031494
    4. ' continue' → logprob: -5.0119500160217285
    5. 'continue' → logprob: -5.6369500160217285
    6. '               ' → logprob: -5.7619500160217285
    7. ' or' → logprob: -6.1369500160217285
    8. '                       ' → logprob: -6.5119500160217285
    9. '                  ' → logprob: -7.5119500160217285
    10. '                           ' → logprob: -7.6369500160217285

Token 2024: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00219866749830544
    2. ' continue' → logprob: -6.752198696136475
    3. 'continue' → logprob: -7.127198696136475
    4. '               ' → logprob: -9.127198219299316
    5. '                       ' → logprob: -9.377198219299316
    6. '                           ' → logprob: -11.752198219299316
    7. '                  ' → logprob: -12.252198219299316
    8. '                               ' → logprob: -12.377198219299316
    9. '   ' → logprob: -13.002198219299316
    10. '	continue' → logprob: -13.127198219299316

Token 2025: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18651007115840912
    2. 'continue' (adapté à ' continue') → logprob: -1.9365100860595703
    3. ' continue' → logprob: -3.6865100860595703
    4. '                       ' → logprob: -7.56151008605957
    5. '	continue' → logprob: -8.31151008605957
    6. '               ' → logprob: -10.06151008605957
    7. '	               ' → logprob: -10.68651008605957
    8. '				' → logprob: -10.81151008605957
    9. '_continue' → logprob: -11.06151008605957
    10. '   ' → logprob: -12.56151008605957

Token 2026: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43657341599464417
    2. '               ' → logprob: -1.1865733861923218
    3. '                
' → logprob: -3.0615735054016113
    4. '                    
' → logprob: -8.186573028564453
    5. '                

' → logprob: -8.436573028564453
    6. '

' → logprob: -8.686573028564453
    7. '  
' → logprob: -8.686573028564453
    8. '
' → logprob: -8.811573028564453
    9. '               
' → logprob: -8.936573028564453
    10. '
                
' → logprob: -9.436573028564453

Token 2027: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07193946093320847
    2. '```' → logprob: -3.196939468383789
    3. 'next' → logprob: -4.071939468383789
    4. '``' → logprob: -5.696939468383789
    5. '                
' → logprob: -5.696939468383789
    6. 'new' → logprob: -6.196939468383789
    7. 'wait' → logprob: -6.571939468383789
    8. '
' → logprob: -7.821939468383789
    9. 'time' → logprob: -8.071939468383789
    10. '#' → logprob: -8.946939468383789

Token 2028: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7086891531944275
    2. 'wait' → logprob: -0.8336891531944275
    3. '#' (adapté à ' #') → logprob: -2.9586892127990723
    4. 'arrival' → logprob: -4.458689212799072
    5. 'next' → logprob: -5.458689212799072
    6. 'waiting' → logprob: -5.833689212799072
    7. 'new' → logprob: -6.958689212799072
    8. 'arr' → logprob: -7.583689212799072
    9. '                
' → logprob: -8.333688735961914
    10. '```' → logprob: -8.583688735961914

Token 2029: ' Calculate' (ID: 38942)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.20292648673057556
    2. '#' → logprob: -2.0779263973236084
    3. 'arrival' → logprob: -3.7029263973236084
    4. 'waiting' → logprob: -4.0779266357421875
    5. '               ' → logprob: -4.7029266357421875
    6. 'next' → logprob: -5.4529266357421875
    7. 'arr' → logprob: -7.0779266357421875
    8. '                   ' → logprob: -7.4529266357421875
    9. '           ' → logprob: -7.7029266357421875
    10. ' wait' → logprob: -8.202926635742188

Token 2030: ' arrival' (ID: 24861)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.18449410796165466
    2. 'arrival' → logprob: -1.934494137763977
    3. 'waiting' → logprob: -4.4344940185546875
    4. 'next' → logprob: -4.9344940185546875
    5. 'arr' → logprob: -6.3094940185546875
    6. 'departure' → logprob: -6.9344940185546875
    7. 'new' → logprob: -7.1844940185546875
    8. ' wait' → logprob: -7.3094940185546875
    9. '#' → logprob: -8.934494018554688
    10. '   ' → logprob: -9.059494018554688

Token 2031: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00013846253568772227
    2. 'time' → logprob: -9.375138282775879
    3. ' =' → logprob: -10.250138282775879
    4. '_t' → logprob: -12.500138282775879
    5. '_at' → logprob: -12.750138282775879
    6. '               ' → logprob: -13.000138282775879
    7. '           ' → logprob: -13.000138282775879
    8. '=' → logprob: -13.375138282775879
    9. 't' → logprob: -13.875138282775879
    10. '_' → logprob: -14.000138282775879

Token 2032: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8796715140342712
    2. '=' → logprob: -1.379671573638916
    3. 'arrival' → logprob: -1.629671573638916
    4. '               ' → logprob: -2.504671573638916
    5. 'next' → logprob: -3.504671573638916
    6. '+' → logprob: -5.379671573638916
    7. '_next' → logprob: -5.754671573638916
    8. ' next' → logprob: -5.754671573638916
    9. 'arr' → logprob: -5.754671573638916
    10. '                   ' → logprob: -6.004671573638916

Token 2033: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.004315468482673168
    2. 'current' → logprob: -6.379315376281738
    3. 'next' → logprob: -6.629315376281738
    4. 'intersection' → logprob: -7.504315376281738
    5. ' neighbor' → logprob: -8.129315376281738
    6. 'the' → logprob: -8.754315376281738
    7. 'arrival' → logprob: -9.504315376281738
    8. 'c' → logprob: -10.004315376281738
    9. 'destination' → logprob: -10.504315376281738
    10. 'road' → logprob: -10.879315376281738

Token 2034: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29600363969802856
    2. 'arrival' → logprob: -2.171003580093384
    3. '               ' → logprob: -2.671003580093384
    4. '=' → logprob: -2.921003580093384
    5. 'next' → logprob: -5.171003818511963
    6. '_arr' → logprob: -5.546003818511963
    7. '_next' → logprob: -5.796003818511963
    8. 'arr' → logprob: -6.171003818511963
    9. 'new' → logprob: -6.546003818511963
    10. '                   ' → logprob: -6.796003818511963

Token 2035: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09696818888187408
    2. '
' → logprob: -3.471968173980713
    3. 'arrival' → logprob: -3.846968173980713
    4. '                   ' → logprob: -4.596968173980713
    5. '```' → logprob: -4.846968173980713
    6. '                
' → logprob: -4.846968173980713
    7. ' arrival' → logprob: -5.846968173980713
    8. '``' → logprob: -6.596968173980713
    9. '_next' → logprob: -6.721968173980713
    10. ',' → logprob: -6.721968173980713

Token 2036: ' depart' (ID: 14182)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.5201225876808167
    2. ' arrival' → logprob: -1.6451225280761719
    3. 'next' → logprob: -2.395122528076172
    4. 'new' → logprob: -3.145122528076172
    5. ' new' → logprob: -3.395122528076172
    6. ' next' → logprob: -3.520122528076172
    7. 'arr' → logprob: -5.020122528076172
    8. 'wait' → logprob: -6.145122528076172
    9. ' wait' → logprob: -6.395122528076172
    10. '               ' → logprob: -6.645122528076172

Token 2037: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0061469427309930325
    2. '_' → logprob: -5.6311469078063965
    3. '_t' → logprob: -7.0061469078063965
    4. '=' → logprob: -7.6311469078063965
    5. '+' → logprob: -8.006147384643555
    6. ' =' → logprob: -8.006147384643555
    7. 'time' → logprob: -8.381147384643555
    8. 't' → logprob: -10.131147384643555
    9. ' +' → logprob: -10.381147384643555
    10. 'Time' → logprob: -10.506147384643555

Token 2038: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3269621431827545
    2. '=' → logprob: -1.3269621133804321
    3. ' +' → logprob: -4.826961994171143
    4. '+' → logprob: -5.201961994171143
    5. ' ' → logprob: -10.7019624710083
    6. ')' → logprob: -11.8269624710083
    7. '                ' → logprob: -12.2019624710083
    8. '=t' → logprob: -12.2019624710083
    9. '    ' → logprob: -12.3269624710083
    10. '                   ' → logprob: -12.4519624710083

Token 2039: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010047763586044312
    2. ' t' → logprob: -4.635047912597656
    3. 'current' → logprob: -8.260047912597656
    4. ' current' → logprob: -10.385047912597656
    5. '   ' → logprob: -13.760047912597656
    6. '	t' → logprob: -14.635047912597656
    7. '`t' → logprob: -14.760047912597656
    8. '(t' → logprob: -16.135047912597656
    9. '           ' → logprob: -16.760047912597656
    10. '               ' → logprob: -16.760047912597656

Token 2040: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3134504556655884
    2. ' +' → logprob: -1.3134504556655884
    3. '               ' → logprob: -9.938450813293457
    4. '+
' → logprob: -9.938450813293457
    5. '                ' → logprob: -10.438450813293457
    6. '                   ' → logprob: -10.688450813293457
    7. '                    ' → logprob: -11.688450813293457
    8. ' +
' → logprob: -11.938450813293457
    9. '                       ' → logprob: -11.938450813293457
    10. '
' → logprob: -12.063450813293457

Token 2041: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09990186244249344
    2. 'next' → logprob: -3.2249019145965576
    3. ' next' → logprob: -4.2249016761779785
    4. '                
' → logprob: -4.4749016761779785
    5. 'travel' → logprob: -4.8499016761779785
    6. 'arrival' → logprob: -5.3499016761779785
    7. ' travel' → logprob: -5.4749016761779785
    8. '
' → logprob: -5.4749016761779785
    9. '```' → logprob: -6.3499016761779785
    10. ',' → logprob: -6.9749016761779785

Token 2042: ' arrival' (ID: 24861)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0452187061309814
    2. '               ' → logprob: -1.2952187061309814
    3. 'if' → logprob: -1.6702187061309814
    4. 'wait' → logprob: -1.7952187061309814
    5. 'arrival' (adapté à ' arrival') → logprob: -5.045218467712402
    6. 'signal' → logprob: -5.170218467712402
    7. 'waiting' → logprob: -5.420218467712402
    8. 'arr' → logprob: -6.420218467712402
    9. 'next' → logprob: -7.920218467712402
    10. '``' → logprob: -8.170218467712402

Token 2043: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.001557355048134923
    2. '_' → logprob: -6.501557350158691
    3. ' =' → logprob: -10.876557350158691
    4. '_t' → logprob: -12.001557350158691
    5. '_token' → logprob: -12.251557350158691
    6. ' _' → logprob: -12.376557350158691
    7. '=_' → logprob: -13.001557350158691
    8. 'Time' → logprob: -13.126557350158691
    9. '=' → logprob: -13.126557350158691
    10. '_tokens' → logprob: -13.376557350158691

Token 2044: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28336408734321594
    2. '=' → logprob: -1.4083640575408936
    3. '+' → logprob: -6.658364295959473
    4. ' +' → logprob: -7.283364295959473
    5. ' +=' → logprob: -8.658364295959473
    6. '+=' → logprob: -9.908364295959473
    7. '                ' → logprob: -12.158364295959473
    8. ')' → logprob: -12.658364295959473
    9. '               ' → logprob: -13.533364295959473
    10. '                    ' → logprob: -13.533364295959473

Token 2045: ' depart' (ID: 14182)
  Prédit: 'depart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depart' → logprob: -0.09475209563970566
    2. 't' → logprob: -3.094752073287964
    3. ' depart' → logprob: -3.219752073287964
    4. ' t' → logprob: -5.594752311706543
    5. 'travel' → logprob: -6.969752311706543
    6. '               ' → logprob: -8.344752311706543
    7. ' travel' → logprob: -9.594752311706543
    8. 'departure' → logprob: -9.969752311706543
    9. 'current' → logprob: -10.844752311706543
    10. '           ' → logprob: -10.969752311706543

Token 2046: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00018863992590922862
    2. 'ure' → logprob: -9.375188827514648
    3. '+' → logprob: -10.000188827514648
    4. 'Time' → logprob: -10.500188827514648
    5. 't' → logprob: -11.500188827514648
    6. 'ance' → logprob: -11.750188827514648
    7. 'time' → logprob: -12.375188827514648
    8. '_t' → logprob: -12.875188827514648
    9. 'al' → logprob: -13.250188827514648
    10. '_' → logprob: -14.625188827514648

Token 2047: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25194862484931946
    2. ' +' → logprob: -1.501948595046997
    3. '+
' → logprob: -11.251948356628418
    4. ' +
' → logprob: -13.376948356628418
    5. '                ' → logprob: -13.751948356628418
    6. '
' → logprob: -14.001948356628418
    7. '               ' → logprob: -14.126948356628418
    8. '+self' → logprob: -14.501948356628418
    9. ' ' → logprob: -14.876948356628418
    10. '                   ' → logprob: -15.001948356628418

Token 2048: ' travel' (ID: 6410)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.0031790214125066996
    2. ' travel' → logprob: -5.75317907333374
    3. 'road' → logprob: -14.628178596496582
    4. 'trav' → logprob: -14.753178596496582
    5. 'tr' → logprob: -15.503178596496582
    6. '.travel' → logprob: -17.0031795501709
    7. 'trip' → logprob: -17.1281795501709
    8. 'traffic' → logprob: -17.1281795501709
    9. 'train' → logprob: -17.5031795501709
    10. 'trade' → logprob: -18.1281795501709

Token 2049: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. 'time' → logprob: -17.125
    3. '_' → logprob: -18.375
    4. '_t' → logprob: -18.5
    5. 'Time' → logprob: -19.25
    6. 'al' → logprob: -19.5
    7. ' _' → logprob: -20.0
    8. '_TIME' → logprob: -20.25
    9. '_type' → logprob: -20.25
    10. '_times' → logprob: -20.375

Token 2050: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3177461326122284
    2. '
' → logprob: -1.4427461624145508
    3. '                
' → logprob: -3.692746162414551
    4. '<|end|>' → logprob: -5.192746162414551
    5. '           ' → logprob: -7.192746162414551
    6. '                ' → logprob: -7.442746162414551
    7. ' 
' → logprob: -7.692746162414551
    8. '            
' → logprob: -7.817746162414551
    9. '                    
' → logprob: -7.817746162414551
    10. '               
' → logprob: -8.06774616241455

Token 2051: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25997358560562134
    2. '                
' → logprob: -2.1349735260009766
    3. '
' → logprob: -2.3849735260009766
    4. '```' → logprob: -4.384973526000977
    5. 'if' → logprob: -6.259973526000977
    6. '                    
' → logprob: -6.884973526000977
    7. '               
' → logprob: -7.509973526000977
    8. '#' → logprob: -7.634973526000977
    9. ' if' → logprob: -8.134973526000977
    10. '                        
' → logprob: -8.509973526000977

Token 2052: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5385814309120178
    2. 'if' → logprob: -1.788581371307373
    3. 'wait' → logprob: -2.038581371307373
    4. 'signal' → logprob: -2.538581371307373
    5. '               ' → logprob: -3.413581371307373
    6. 'waiting' → logprob: -6.163581371307373
    7. '                   ' → logprob: -6.413581371307373
    8. '```' → logprob: -6.913581371307373
    9. '``' → logprob: -7.288581371307373
    10. '           ' → logprob: -7.788581371307373

Token 2053: ' Must' (ID: 20953)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.45883798599243164
    2. '#' → logprob: -1.3338379859924316
    3. 'signal' → logprob: -2.7088379859924316
    4. 'if' → logprob: -3.4588379859924316
    5. 'waiting' → logprob: -5.208837985992432
    6. 'delay' → logprob: -8.458837509155273
    7. 'traffic' → logprob: -8.833837509155273
    8. 'arrival' → logprob: -9.333837509155273
    9. 'stop' → logprob: -9.833837509155273
    10. 'next' → logprob: -9.833837509155273

Token 2054: ' check' (ID: 2371)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.0512896403670311
    2. '_wait' → logprob: -3.1762895584106445
    3. ' wait' → logprob: -4.9262895584106445
    4. 'check' → logprob: -8.176289558410645
    5. '               ' → logprob: -8.551289558410645
    6. 'pass' → logprob: -8.926289558410645
    7. '           ' → logprob: -9.176289558410645
    8. '_check' → logprob: -10.051289558410645
    9. 'arr' → logprob: -10.301289558410645
    10. 'stop' → logprob: -10.551289558410645

Token 2055: ' signal' (ID: 12884)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03652756288647652
    2. 'self' → logprob: -3.661527633666992
    3. ' if' → logprob: -5.911527633666992
    4. 'for' → logprob: -6.036527633666992
    5. 'signal' → logprob: -6.161527633666992
    6. '               ' → logprob: -6.411527633666992
    7. 'current' → logprob: -7.286527633666992
    8. '                   ' → logprob: -9.036527633666992
    9. '#' → logprob: -9.036527633666992
    10. 'road' → logprob: -9.161527633666992

Token 2056: ' at' (ID: 540)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23620471358299255
    2. ' if' → logprob: -2.2362046241760254
    3. '               ' → logprob: -2.4862046241760254
    4. ' at' → logprob: -4.486204624176025
    5. '
' → logprob: -5.736204624176025
    6. 'at' → logprob: -6.486204624176025
    7. '                
' → logprob: -6.861204624176025
    8. 'signal' → logprob: -6.986204624176025
    9. '#' → logprob: -7.611204624176025
    10. '```' → logprob: -7.986204624176025

Token 2057: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.026530884206295013
    2. 'c' → logprob: -3.6515309810638428
    3. 'current' → logprob: -9.651531219482422
    4. 'intersection' → logprob: -9.651531219482422
    5. 'the' → logprob: -10.526531219482422
    6. ' neighbor' → logprob: -10.651531219482422
    7. 'coordinate' → logprob: -11.401531219482422
    8. 'coord' → logprob: -11.901531219482422
    9. 'departure' → logprob: -12.401531219482422
    10. 'ne' → logprob: -12.401531219482422

Token 2058: ' at' (ID: 540)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03746568411588669
    2. 'if' → logprob: -3.4124655723571777
    3. ' if' → logprob: -6.162465572357178
    4. '                
' → logprob: -6.787465572357178
    5. '
' → logprob: -8.037466049194336
    6. ',' → logprob: -9.412466049194336
    7. '```' → logprob: -9.537466049194336
    8. 'signal' → logprob: -10.287466049194336
    9. ':
' → logprob: -11.662466049194336
    10. 'neighbor' → logprob: -11.787466049194336

Token 2059: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.0007046872633509338
    2. ' arrival' → logprob: -7.375704765319824
    3. 'neighbor' → logprob: -9.625704765319824
    4. '#' → logprob: -12.625704765319824
    5. 'departure' → logprob: -12.750704765319824
    6. 'arr' → logprob: -13.000704765319824
    7. 'the' → logprob: -13.875704765319824
    8. '
' → logprob: -14.375704765319824
    9. 'next' → logprob: -15.000704765319824
    10. '   ' → logprob: -15.250704765319824

Token 2060: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.36805295944213867
    2. '               ' → logprob: -1.8680529594421387
    3. 'if' → logprob: -2.8680529594421387
    4. ' if' → logprob: -3.6180529594421387
    5. '```' → logprob: -4.368052959442139
    6. '
' → logprob: -4.493052959442139
    7. ':
' → logprob: -4.743052959442139
    8. 'time' → logprob: -4.868052959442139
    9. '                   ' → logprob: -5.243052959442139
    10. '_' → logprob: -5.618052959442139

Token 2061: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001164388144388795
    2. '                
' → logprob: -6.876164436340332
    3. 'if' → logprob: -9.626164436340332
    4. ',' → logprob: -10.876164436340332
    5. '
' → logprob: -11.126164436340332
    6. ' if' → logprob: -12.126164436340332
    7. '                   ' → logprob: -12.251164436340332
    8. '               
' → logprob: -12.376164436340332
    9. '                
                
' → logprob: -12.751164436340332
    10. '```' → logprob: -13.001164436340332

Token 2062: ' movement' (ID: 12772)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.4366556704044342
    2. 'arrival' → logprob: -2.3116557598114014
    3. 'entry' → logprob: -2.4366557598114014
    4. 'enter' → logprob: -2.6866557598114014
    5. 'moving' → logprob: -3.1866557598114014
    6. 'the' → logprob: -4.186655521392822
    7. 'direction' → logprob: -4.311655521392822
    8. 'incoming' → logprob: -4.686655521392822
    9. 'entr' → logprob: -5.311655521392822
    10. 'movement' → logprob: -5.311655521392822

Token 2063: ' direction' (ID: 9262)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8613172769546509
    2. 'if' → logprob: -1.3613172769546509
    3. 'from' → logprob: -1.8613172769546509
    4. ' if' → logprob: -2.2363171577453613
    5. 'in' → logprob: -4.111317157745361
    6. ' in' → logprob: -4.486317157745361
    7. 'direction' → logprob: -5.361317157745361
    8. ',' → logprob: -5.736317157745361
    9. ' from' → logprob: -5.861317157745361
    10. 'tow' → logprob: -5.986317157745361

Token 2064: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1276410073041916
    2. 'if' → logprob: -2.252640962600708
    3. ' if' → logprob: -5.127641201019287
    4. '
' → logprob: -5.877641201019287
    5. '                
' → logprob: -6.127641201019287
    6. '#' → logprob: -6.252641201019287
    7. ',' → logprob: -7.502641201019287
    8. 'signal' → logprob: -7.502641201019287
    9. 'direction' → logprob: -9.377640724182129
    10. ';' → logprob: -9.377640724182129

Token 2065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002925598528236151
    2. '```' → logprob: -8.625292778015137
    3. ' if' → logprob: -9.750292778015137
    4. '                
' → logprob: -10.625292778015137
    5. '              ' → logprob: -12.125292778015137
    6. 'if' → logprob: -12.125292778015137
    7. '                   ' → logprob: -12.500292778015137
    8. '       ' → logprob: -12.875292778015137
    9. ',' → logprob: -13.625292778015137
    10. '                ' → logprob: -13.625292778015137

Token 2066: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03736784681677818
    2. 'if' → logprob: -3.787367820739746
    3. ' if' → logprob: -4.662367820739746
    4. '                
' → logprob: -6.162367820739746
    5. '
' → logprob: -7.287367820739746
    6. 'signal' → logprob: -7.287367820739746
    7. '```' → logprob: -7.912367820739746
    8. '                   ' → logprob: -8.287367820739746
    9. ' signal' → logprob: -9.287367820739746
    10. 'next' → logprob: -9.537367820739746

Token 2067: ' The' (ID: 623)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12634152173995972
    2. 'if' → logprob: -2.6263415813446045
    3. 'signal' → logprob: -3.1263415813446045
    4. 'neighbor' → logprob: -7.126341342926025
    5. ' if' → logprob: -7.251341342926025
    6. '                
' → logprob: -7.876341342926025
    7. 'sign' → logprob: -8.751341819763184
    8. '```' → logprob: -9.126341819763184
    9. 'next' → logprob: -9.251341819763184
    10. '#' → logprob: -10.126341819763184

Token 2068: ' direction' (ID: 9262)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5175737142562866
    2. 'signal' → logprob: -1.5175737142562866
    3. 'neighbor' → logprob: -2.017573833465576
    4. 'direction' → logprob: -4.017573833465576
    5. '#' → logprob: -4.642573833465576
    6. '               ' → logprob: -4.892573833465576
    7. '```' → logprob: -5.642573833465576
    8. 'next' → logprob: -5.767573833465576
    9. '                   ' → logprob: -5.767573833465576
    10. ' if' → logprob: -6.767573833465576

Token 2069: ' we' (ID: 581)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.34931039810180664
    2. 'to' → logprob: -1.9743103981018066
    3. 'from' → logprob: -2.7243103981018066
    4. '_from' → logprob: -3.2243103981018066
    5. 'is' → logprob: -4.224310398101807
    6. 'of' → logprob: -4.974310398101807
    7. ' =' → logprob: -5.099310398101807
    8. 'tow' → logprob: -5.474310398101807
    9. '_at' → logprob: -5.974310398101807
    10. 'for' → logprob: -6.099310398101807

Token 2070: ' arrive' (ID: 18338)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.8691272735595703
    2. 'appro' → logprob: -1.4941272735595703
    3. 'arr' → logprob: -1.7441272735595703
    4. 'came' → logprob: -2.7441272735595703
    5. 'entered' → logprob: -3.4941272735595703
    6. 'm' → logprob: -4.11912727355957
    7. 'enter' → logprob: -4.36912727355957
    8. 'move' → logprob: -4.99412727355957
    9. 'left' → logprob: -5.11912727355957
    10. 'started' → logprob: -5.24412727355957

Token 2071: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2787920236587524
    2. 'at' → logprob: -2.153791904449463
    3. ' at' → logprob: -2.153791904449463
    4. ' is' → logprob: -2.403791904449463
    5. '_at' → logprob: -2.528791904449463
    6. '=' → logprob: -2.653791904449463
    7. 'is' → logprob: -2.653791904449463
    8. 'from' → logprob: -2.778791904449463
    9. '_from' → logprob: -3.028791904449463
    10. '_to' → logprob: -3.403791904449463

Token 2072: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3439715504646301
    2. 'arrival' → logprob: -1.8439714908599854
    3. '#' → logprob: -3.4689714908599854
    4. 'arr' → logprob: -3.9689714908599854
    5. 'from' → logprob: -3.9689714908599854
    6. 'reverse' → logprob: -4.7189717292785645
    7. 'back' → logprob: -4.8439717292785645
    8. 'prev' → logprob: -5.0939717292785645
    9. 'signal' → logprob: -5.3439717292785645
    10. 'incoming' → logprob: -5.5939717292785645

Token 2073: ' opposite' (ID: 23821)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.0036472335923463106
    2. ' Direction' → logprob: -6.128647327423096
    3. 'neighbor' → logprob: -7.253647327423096
    4. 'move' → logprob: -8.003646850585938
    5. '(Direction' → logprob: -8.878646850585938
    6. '                   ' → logprob: -9.253646850585938
    7. '               ' → logprob: -9.878646850585938
    8. ' neighbor' → logprob: -10.253646850585938
    9. '`' → logprob: -10.753646850585938
    10. '           ' → logprob: -11.628646850585938

Token 2074: ' of' (ID: 328)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.5414025187492371
    2. 'move' → logprob: -0.9164025187492371
    3. 'direction' → logprob: -5.541402339935303
    4. ':' → logprob: -5.666402339935303
    5. 'of' → logprob: -5.916402339935303
    6. ' move' → logprob: -6.041402339935303
    7. '               ' → logprob: -6.666402339935303
    8. 'to' → logprob: -6.666402339935303
    9. ' of' → logprob: -7.166402339935303
    10. '_direction' → logprob: -7.916402339935303

Token 2075: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -4.370294846012257e-05
    2. ' move' → logprob: -10.375043869018555
    3. '(move' → logprob: -11.375043869018555
    4. '	move' → logprob: -15.000043869018555
    5. '`' → logprob: -15.375043869018555
    6. 'Direction' → logprob: -15.500043869018555
    7. '```' → logprob: -16.625043869018555
    8. '   ' → logprob: -17.000043869018555
    9. '
' → logprob: -17.125043869018555
    10. '.move' → logprob: -17.375043869018555

Token 2076: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.0006253490573726594
    2. 'dir' → logprob: -8.000625610351562
    3. 'ment' → logprob: -8.250625610351562
    4. 'direction' → logprob: -11.000625610351562
    5. '_direction' → logprob: -12.625625610351562
    6. 'ent' → logprob: -13.000625610351562
    7. 'Dir' → logprob: -13.375625610351562
    8. 'ion' → logprob: -14.500625610351562
    9. 'ing' → logprob: -14.750625610351562
    10. 'to' → logprob: -14.875625610351562

Token 2077: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002773609245195985
    2. '                
' → logprob: -7.627773761749268
    3. ' if' → logprob: -7.752773761749268
    4. 'arrival' → logprob: -7.752773761749268
    5. '```' → logprob: -7.752773761749268
    6. ',' → logprob: -8.25277328491211
    7. 'if' → logprob: -8.37777328491211
    8. 'direction' → logprob: -9.50277328491211
    9. ' arrival' → logprob: -9.75277328491211
    10. '                   ' → logprob: -10.12777328491211

Token 2078: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007607458624988794
    2. ' if' → logprob: -6.007607460021973
    3. '```' → logprob: -6.007607460021973
    4. '                
' → logprob: -6.882607460021973
    5. 'if' → logprob: -7.007607460021973
    6. ',' → logprob: -7.507607460021973
    7. '                   ' → logprob: -9.507607460021973
    8. '``' → logprob: -11.257607460021973
    9. '`' → logprob: -11.507607460021973
    10. 'signal' → logprob: -11.757607460021973

Token 2079: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03215273097157478
    2. ' if' → logprob: -4.4071526527404785
    3. ' signal' → logprob: -5.2821526527404785
    4. 'signal' → logprob: -5.6571526527404785
    5. 'if' → logprob: -5.9071526527404785
    6. '                
' → logprob: -6.0321526527404785
    7. ' direction' → logprob: -6.6571526527404785
    8. ' opposite' → logprob: -6.7821526527404785
    9. '
' → logprob: -7.7821526527404785
    10. 'direction' → logprob: -8.032153129577637

Token 2080: ' Because' (ID: 13602)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025547241792082787
    2. 'signal' → logprob: -3.7755472660064697
    3. 'neighbor' → logprob: -6.775547027587891
    4. '                
' → logprob: -8.15054702758789
    5. 'if' → logprob: -8.40054702758789
    6. 'arrival' → logprob: -8.65054702758789
    7. ' signal' → logprob: -9.15054702758789
    8. 'sign' → logprob: -9.40054702758789
    9. 'traffic' → logprob: -10.02554702758789
    10. '```' → logprob: -10.27554702758789

Token 2081: ' signal' (ID: 12884)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.12824131548404694
    2. 'the' → logprob: -2.3782413005828857
    3. 'move' → logprob: -4.503241539001465
    4. 'cars' → logprob: -4.878241539001465
    5. 'arrival' → logprob: -6.503241539001465
    6. '#' → logprob: -6.628241539001465
    7. 'vehicles' → logprob: -6.753241539001465
    8. 'moving' → logprob: -6.753241539001465
    9. 'arr' → logprob: -7.253241539001465
    10. 'signals' → logprob: -7.628241539001465

Token 2082: ' controls' (ID: 20081)
  Prédit: ' checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' checks' → logprob: -0.8067876696586609
    2. 'checks' → logprob: -1.9317877292633057
    3. 'at' → logprob: -2.1817877292633057
    4. ' at' → logprob: -2.4317877292633057
    5. '.check' → logprob: -3.0567877292633057
    6. 'is' → logprob: -3.5567877292633057
    7. 's' → logprob: -3.9317877292633057
    8. ' is' → logprob: -4.181787490844727
    9. '.is' → logprob: -4.431787490844727
    10. 'must' → logprob: -4.431787490844727

Token 2083: ' arrival' (ID: 24861)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6038318276405334
    2. 'arrival' → logprob: -1.8538317680358887
    3. ' the' → logprob: -2.6038317680358887
    4. 'entry' → logprob: -3.1038317680358887
    5. 'traffic' → logprob: -3.4788317680358887
    6. '#' → logprob: -3.7288317680358887
    7. 'movement' → logprob: -3.7288317680358887
    8. '   ' → logprob: -3.8538317680358887
    9. 'neighbor' → logprob: -4.478831768035889
    10. 'appro' → logprob: -4.603831768035889

Token 2084: ' into' (ID: 1511)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5114521384239197
    2. '_direction' → logprob: -1.5114521980285645
    3. 'direction' → logprob: -2.5114521980285645
    4. 'from' → logprob: -2.5114521980285645
    5. ' direction' → logprob: -4.7614521980285645
    6. '_from' → logprob: -5.7614521980285645
    7. '_dir' → logprob: -6.7614521980285645
    8. '                
' → logprob: -7.1364521980285645
    9. 'dir' → logprob: -7.2614521980285645
    10. ' from' → logprob: -7.2614521980285645

Token 2085: ' intersection' (ID: 42002)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.013414788991212845
    2. 'the' → logprob: -4.7634148597717285
    3. 'intersection' → logprob: -5.3884148597717285
    4. ' neighbor' → logprob: -9.13841438293457
    5. '```' → logprob: -9.38841438293457
    6. 'ne' → logprob: -11.76341438293457
    7. ' intersection' → logprob: -12.01341438293457
    8. ' the' → logprob: -12.13841438293457
    9. 'coordinate' → logprob: -13.13841438293457
    10. '`' → logprob: -13.26341438293457

Token 2086: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030033713206648827
    2. ' if' → logprob: -4.280033588409424
    3. '                
' → logprob: -4.530033588409424
    4. '
' → logprob: -6.030033588409424
    5. ',' → logprob: -7.030033588409424
    6. 'if' → logprob: -7.280033588409424
    7. ' direction' → logprob: -8.530034065246582
    8. ' at' → logprob: -8.655034065246582
    9. ' signal' → logprob: -9.905034065246582
    10. '```' → logprob: -9.905034065246582

Token 2087: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007622364908456802
    2. '```' → logprob: -5.632622241973877
    3. '                
' → logprob: -6.132622241973877
    4. ' if' → logprob: -6.757622241973877
    5. '
' → logprob: -7.757622241973877
    6. 'if' → logprob: -9.257622718811035
    7. '                   ' → logprob: -10.257622718811035
    8. '``' → logprob: -10.632622718811035
    9. ',' → logprob: -11.257622718811035
    10. '`' → logprob: -11.382622718811035

Token 2088: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06340374052524567
    2. ' if' → logprob: -3.688403844833374
    3. ' signal' → logprob: -4.313403606414795
    4. 'if' (adapté à ' if') → logprob: -5.063403606414795
    5. 'signal' → logprob: -5.063403606414795
    6. '                
' → logprob: -5.313403606414795
    7. '
' → logprob: -6.438403606414795
    8. ' next' → logprob: -7.063403606414795
    9. '```' → logprob: -7.563403606414795
    10. ' direction' → logprob: -7.688403606414795

Token 2089: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06239795684814453
    2. ' self' → logprob: -2.8123979568481445
    3. '               ' → logprob: -8.062397956848145
    4. '                   ' → logprob: -9.312397956848145
    5. 'neighbor' → logprob: -11.562397956848145
    6. '   ' → logprob: -12.437397956848145
    7. '           ' → logprob: -12.562397956848145
    8. '(self' → logprob: -12.562397956848145
    9. 'not' → logprob: -14.187397956848145
    10. ' ' → logprob: -14.812397956848145

Token 2090: '.city' (ID: 50562)
  Prédit: '.city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.0006029533687978983
    2. 'city' → logprob: -7.750602722167969
    3. '.' → logprob: -10.250602722167969
    4. '.user' → logprob: -11.125602722167969
    5. '.has' → logprob: -11.250602722167969
    6. '.car' → logprob: -11.375602722167969
    7. ' .' → logprob: -11.375602722167969
    8. '_city' → logprob: -11.500602722167969
    9. '   ' → logprob: -11.750602722167969
    10. '.country' → logprob: -12.125602722167969

Token 2091: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00047845521476119757
    2. '           ' → logprob: -9.000478744506836
    3. '._' → logprob: -9.125478744506836
    4. '_city' → logprob: -9.375478744506836
    5. 'city' → logprob: -9.750478744506836
    6. '.city' → logprob: -9.875478744506836
    7. 'Map' → logprob: -11.500478744506836
    8. '       ' → logprob: -11.625478744506836
    9. '   ' → logprob: -12.250478744506836
    10. '               ' → logprob: -12.375478744506836

Token 2092: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -4.36574100604048e-06
    2. '           ' → logprob: -13.250004768371582
    3. 'has' → logprob: -14.250004768371582
    4. '       ' → logprob: -14.875004768371582
    5. '.have' → logprob: -15.500004768371582
    6. '.' → logprob: -15.625004768371582
    7. '.get' → logprob: -15.625004768371582
    8. '               ' → logprob: -15.750004768371582
    9. '_has' → logprob: -16.000003814697266
    10. '```' → logprob: -16.000003814697266

Token 2093: '_signal' (ID: 50953)
  Prédit: '_signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_signal' → logprob: -0.42103099822998047
    2. '(ne' → logprob: -1.6710309982299805
    3. '(c' → logprob: -1.9210309982299805
    4. '(current' → logprob: -5.4210309982299805
    5. '_sign' → logprob: -6.5460309982299805
    6. '_' → logprob: -7.5460309982299805
    7. '(coord' → logprob: -7.5460309982299805
    8. 'neighbor' → logprob: -7.9210309982299805
    9. '(co' → logprob: -8.29603099822998
    10. 'signal' → logprob: -8.29603099822998

Token 2094: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.21012113988399506
    2. '(' → logprob: -2.2101211547851562
    3. '(current' → logprob: -2.7101211547851562
    4. '(c' → logprob: -4.460121154785156
    5. '(co' → logprob: -7.460121154785156
    6. '(
' → logprob: -8.085121154785156
    7. '(n' → logprob: -8.085121154785156
    8. '(coord' → logprob: -8.835121154785156
    9. '((' → logprob: -9.335121154785156
    10. '(next' → logprob: -9.585121154785156

Token 2095: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.003870973829180002
    2. 'neighbor' → logprob: -5.878870964050293
    3. '(ne' → logprob: -7.878870964050293
    4. 'gh' → logprob: -8.753870964050293
    5. 'igh' → logprob: -9.128870964050293
    6. 'ighbour' → logprob: -9.628870964050293
    7. 'or' → logprob: -9.628870964050293
    8. 'r' → logprob: -9.753870964050293
    9. ')' → logprob: -10.753870964050293
    10. 'ar' → logprob: -11.003870964050293

Token 2096: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005208732560276985
    2. '):' → logprob: -5.630208969116211
    3. ')' → logprob: -6.505208969116211
    4. '):

' → logprob: -10.380208969116211
    5. '               ' → logprob: -10.630208969116211
    6. '):
' → logprob: -10.755208969116211
    7. '                   ' → logprob: -10.880208969116211
    8. ' and' → logprob: -12.630208969116211
    9. ' ):
' → logprob: -12.755208969116211
    10. '           ' → logprob: -13.005208969116211

Token 2097: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013980379328131676
    2. '               ' → logprob: -4.388980388641357
    3. '                       ' → logprob: -7.138980388641357
    4. '```' → logprob: -8.1389799118042
    5. '                    
' → logprob: -8.5139799118042
    6. '           ' → logprob: -10.5139799118042
    7. 'if' → logprob: -10.5139799118042
    8. '
' → logprob: -10.8889799118042
    9. ' if' → logprob: -11.1389799118042
    10. '                  ' → logprob: -11.2639799118042

Token 2098: ' signal' (ID: 12884)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' (adapté à ' signal') → logprob: -0.06052015721797943
    2. '                   ' → logprob: -3.1855201721191406
    3. ' signal' → logprob: -4.060520172119141
    4. '               ' → logprob: -9.93552017211914
    5. '   ' → logprob: -10.43552017211914
    6. 'sign' → logprob: -11.68552017211914
    7. '                       ' → logprob: -11.81052017211914
    8. 'sig' → logprob: -12.06052017211914
    9. 'traffic' → logprob: -12.06052017211914
    10. '
' → logprob: -12.31052017211914

Token 2099: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011329567059874535
    2. '=' → logprob: -4.511329650878906
    3. '                   ' → logprob: -8.886329650878906
    4. '_signal' → logprob: -9.386329650878906
    5. ':' → logprob: -10.886329650878906
    6. '                       ' → logprob: -11.761329650878906
    7. '   ' → logprob: -11.886329650878906
    8. 'signal' → logprob: -12.386329650878906
    9. '_obj' → logprob: -12.636329650878906
    10. '               ' → logprob: -12.886329650878906

Token 2100: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018029935017693788
    2. ' self' → logprob: -8.6251802444458
    3. '                   ' → logprob: -15.0001802444458
    4. '=self' → logprob: -15.7501802444458
    5. '(self' → logprob: -16.000181198120117
    6. '[self' → logprob: -16.125181198120117
    7. '	self' → logprob: -16.750181198120117
    8. 'Self' → logprob: -17.000181198120117
    9. '               ' → logprob: -18.500181198120117
    10. '           ' → logprob: -19.375181198120117

Token 2101: '.city' (ID: 50562)
  Prédit: '.city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.1818598210811615
    2. '.get' → logprob: -2.0568597316741943
    3. 'city' → logprob: -3.4318597316741943
    4. '_city' → logprob: -6.056859970092773
    5. 'get' → logprob: -6.431859970092773
    6. 'signals' → logprob: -6.931859970092773
    7. '.sign' → logprob: -7.181859970092773
    8. 'City' → logprob: -8.556859970092773
    9. '.user' → logprob: -10.681859970092773
    10. '.' → logprob: -10.681859970092773

Token 2102: '_map' (ID: 11824)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.049168262630701065
    2. 'get' → logprob: -4.049168109893799
    3. '_map' → logprob: -4.174168109893799
    4. 'signals' → logprob: -4.424168109893799
    5. '.sign' → logprob: -6.549168109893799
    6. 's' → logprob: -7.299168109893799
    7. '_get' → logprob: -7.799168109893799
    8. 'Map' → logprob: -8.424168586730957
    9. '_sign' → logprob: -9.299168586730957
    10. 'sign' → logprob: -9.674168586730957

Token 2103: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0016356664709746838
    2. 'get' → logprob: -6.501635551452637
    3. '.sign' → logprob: -9.501635551452637
    4. 'signals' → logprob: -10.501635551452637
    5. '.' → logprob: -11.251635551452637
    6. '_get' → logprob: -12.626635551452637
    7. 'sign' → logprob: -12.751635551452637
    8. '           ' → logprob: -12.876635551452637
    9. '```' → logprob: -13.126635551452637
    10. '               ' → logprob: -13.626635551452637

Token 2104: '_signal' (ID: 50953)
  Prédit: '_signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_signal' → logprob: -0.0011785586830228567
    2. 'signal' → logprob: -6.751178741455078
    3. '(signal' → logprob: -12.626178741455078
    4. 'Signal' → logprob: -12.751178741455078
    5. '_sign' → logprob: -13.626178741455078
    6. '_SIGNAL' → logprob: -15.001178741455078
    7. '(ne' → logprob: -15.626178741455078
    8. '(n' → logprob: -15.751178741455078
    9. '```' → logprob: -16.501178741455078
    10. '(' → logprob: -16.626178741455078

Token 2105: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -4.763666947837919e-05
    2. '[' → logprob: -10.00004768371582
    3. '(' → logprob: -13.62504768371582
    4. '(n' → logprob: -15.37504768371582
    5. '```' → logprob: -15.87504768371582
    6. 'neighbor' → logprob: -16.25004768371582
    7. '(not' → logprob: -16.25004768371582
    8. '(next' → logprob: -16.37504768371582
    9. '(friend' → logprob: -17.00004768371582
    10. '(
' → logprob: -17.25004768371582

Token 2106: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.6003549695014954
    2. '[' → logprob: -1.3503549098968506
    3. 'neighbor' → logprob: -2.4753549098968506
    4. 'or' → logprob: -3.2253549098968506
    5. '(ne' → logprob: -3.9753549098968506
    6. 'ignal' → logprob: -4.97535514831543
    7. 's' → logprob: -5.22535514831543
    8. 'ign' → logprob: -5.35035514831543
    9. 'er' → logprob: -5.35035514831543
    10. 'ing' → logprob: -5.35035514831543

Token 2107: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16450951993465424
    2. ')' → logprob: -1.9145095348358154
    3. '                   ' → logprob: -5.789509296417236
    4. ')[' → logprob: -7.914509296417236
    5. '[' → logprob: -8.289509773254395
    6. '())
' → logprob: -8.539509773254395
    7. '               ' → logprob: -9.289509773254395
    8. ')
' → logprob: -9.414509773254395
    9. ').' → logprob: -10.289509773254395
    10. ')

' → logprob: -10.414509773254395

Token 2108: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005637581925839186
    2. 'if' → logprob: -6.5056376457214355
    3. ' if' → logprob: -6.8806376457214355
    4. '               ' → logprob: -7.0056376457214355
    5. '                    
' → logprob: -7.0056376457214355
    6. '           ' → logprob: -8.005637168884277
    7. '
' → logprob: -8.380637168884277
    8. '```' → logprob: -8.380637168884277
    9. '                       ' → logprob: -8.505637168884277
    10. '       ' → logprob: -9.380637168884277

Token 2109: ' arrive' (ID: 18338)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01114272978156805
    2. '                   ' → logprob: -5.261142730712891
    3. ' if' → logprob: -6.011142730712891
    4. 'while' → logprob: -6.011142730712891
    5. 'wait' → logprob: -7.636142730712891
    6. 'can' → logprob: -8.76114273071289
    7. 'green' → logprob: -9.13614273071289
    8. 'waiting' → logprob: -9.63614273071289
    9. 'is' → logprob: -10.01114273071289
    10. '#' → logprob: -11.01114273071289

Token 2110: '_dir' (ID: 9526)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2729288935661316
    2. '_direction' → logprob: -1.6479289531707764
    3. 's' → logprob: -3.5229289531707764
    4. '_from' → logprob: -5.022928714752197
    5. '_time' → logprob: -5.897928714752197
    6. '_d' → logprob: -6.147928714752197
    7. 'direction' → logprob: -6.522928714752197
    8. 'ing' → logprob: -6.772928714752197
    9. '_dir' → logprob: -6.772928714752197
    10. 'from' → logprob: -7.772928714752197

Token 2111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327397227287292
    2. ' =' → logprob: -0.7577397227287292
    3. '_' → logprob: -9.507740020751953
    4. ')' → logprob: -10.632740020751953
    5. '_=' → logprob: -11.257740020751953
    6. '_from' → logprob: -12.632740020751953
    7. '                   ' → logprob: -12.757740020751953
    8. '   ' → logprob: -13.132740020751953
    9. 's' → logprob: -13.257740020751953
    10. '_in' → logprob: -13.257740020751953

Token 2112: ' Direction' (ID: 39049)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.0004329341172706336
    2. ' Direction' → logprob: -7.750432968139648
    3. 'Directional' → logprob: -13.500432968139648
    4. '                   ' → logprob: -14.625432968139648
    5. '(Direction' → logprob: -15.250432968139648
    6. '   ' → logprob: -16.50043296813965
    7. '.Direction' → logprob: -17.50043296813965
    8. '_direction' → logprob: -17.87543296813965
    9. '                       ' → logprob: -18.12543296813965
    10. '               ' → logprob: -18.50043296813965

Token 2113: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.0006865793839097023
    2. 'op' → logprob: -7.3756866455078125
    3. 'Opp' → logprob: -10.625686645507812
    4. '(op' → logprob: -11.250686645507812
    5. '.b' → logprob: -12.000686645507812
    6. '```' → logprob: -12.250686645507812
    7. '   ' → logprob: -13.250686645507812
    8. 'between' → logprob: -13.375686645507812
    9. '_op' → logprob: -13.750686645507812
    10. '.' → logprob: -13.750686645507812

Token 2114: 'posite' (ID: 25800)
  Prédit: 'osite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osite' → logprob: -0.0010871129343286157
    2. 'posite' → logprob: -6.876087188720703
    3. 'site' → logprob: -10.376087188720703
    4. 'os' → logprob: -11.626087188720703
    5. '[' → logprob: -12.626087188720703
    6. '{' → logprob: -12.876087188720703
    7. 'isite' → logprob: -13.376087188720703
    8. '`' → logprob: -14.376087188720703
    9. '```' → logprob: -14.376087188720703
    10. 'op' → logprob: -14.501087188720703

Token 2115: '(move' (ID: 69621)
  Prédit: '(move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.003204450011253357
    2. '(' → logprob: -5.753204345703125
    3. 'move' → logprob: -10.878204345703125
    4. '(
' → logprob: -12.503204345703125
    5. '(m' → logprob: -13.378204345703125
    6. '(f' → logprob: -14.003204345703125
    7. '('' → logprob: -14.378204345703125
    8. '((' → logprob: -15.128204345703125
    9. '```' → logprob: -15.503204345703125
    10. '("("' → logprob: -15.878204345703125

Token 2116: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.00038169484469108284
    2. 'dir' → logprob: -7.8753814697265625
    3. 'Dir' → logprob: -14.000381469726562
    4. 'move' → logprob: -15.875381469726562
    5. 'direction' → logprob: -16.125381469726562
    6. '(dir' → logprob: -16.250381469726562
    7. '[' → logprob: -16.750381469726562
    8. '_' → logprob: -17.000381469726562
    9. '-dir' → logprob: -17.125381469726562
    10. 'd' → logprob: -17.250381469726562

Token 2117: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004185009747743607
    2. ')' → logprob: -5.879185199737549
    3. '                   ' → logprob: -6.629185199737549
    4. ')
' → logprob: -10.62918472290039
    5. ')

' → logprob: -11.25418472290039
    6. '               ' → logprob: -11.50418472290039
    7. ' )
' → logprob: -12.37918472290039
    8. '                       ' → logprob: -13.75418472290039
    9. ')`
' → logprob: -13.87918472290039
    10. '):
' → logprob: -14.25418472290039

Token 2118: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.110158272087574
    2. '
' → logprob: -2.3601582050323486
    3. '                    
' → logprob: -5.485158443450928
    4. ')' → logprob: -6.235158443450928
    5. '               ' → logprob: -7.235158443450928
    6. ')
' → logprob: -7.360158443450928
    7. 'if' → logprob: -7.485158443450928
    8. ',' → logprob: -7.610158443450928
    9. ' if' → logprob: -8.36015796661377
    10. '           ' → logprob: -8.73515796661377

Token 2119: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7389971017837524
    2. '                   ' → logprob: -0.7389971017837524
    3. 'if' → logprob: -4.238996982574463
    4. '                    
' → logprob: -4.238996982574463
    5. ')
' → logprob: -5.113996982574463
    6. ' if' → logprob: -5.488996982574463
    7. ')' → logprob: -6.863996982574463
    8. ':
' → logprob: -6.863996982574463
    9. '               ' → logprob: -7.738996982574463
    10. '):
' → logprob: -7.738996982574463

Token 2120: ' direction' (ID: 9262)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.840900719165802
    2. 'if' → logprob: -1.0909006595611572
    3. '                   ' → logprob: -1.5909006595611572
    4. '
' → logprob: -4.465900897979736
    5. '                    
' → logprob: -5.215900897979736
    6. '#' → logprob: -5.340900897979736
    7. 'is' → logprob: -6.465900897979736
    8. ' is' → logprob: -7.215900897979736
    9. 'True' → logprob: -7.590900897979736
    10. ')
' → logprob: -7.590900897979736

Token 2121: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5045719146728516
    2. 'of' → logprob: -1.7545719146728516
    3. '                   ' → logprob: -2.8795719146728516
    4. 'at' → logprob: -3.0045719146728516
    5. ' =' → logprob: -3.6295719146728516
    6. 'to' → logprob: -4.129571914672852
    7. '_from' → logprob: -4.379571914672852
    8. 'we' → logprob: -5.254571914672852
    9. '=' → logprob: -5.254571914672852
    10. ' of' → logprob: -5.379571914672852

Token 2122: ' which' (ID: 1118)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.01141736563295126
    2. 'neighbor' → logprob: -4.636417388916016
    3. 'where' → logprob: -7.011417388916016
    4. 'car' → logprob: -7.886417388916016
    5. 'arrival' → logprob: -9.386417388916016
    6. 'the' → logprob: -9.636417388916016
    7. 'signal' → logprob: -10.136417388916016
    8. ' which' → logprob: -10.261417388916016
    9. 'arr' → logprob: -10.511417388916016
    10. 'move' → logprob: -11.011417388916016

Token 2123: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.09911362826824188
    2. 'car' → logprob: -2.849113702774048
    3. 'vehicle' → logprob: -3.474113702774048
    4. 'the' → logprob: -5.849113464355469
    5. 'which' → logprob: -6.099113464355469
    6. 'traffic' → logprob: -9.849113464355469
    7. '   ' → logprob: -10.224113464355469
    8. 'arr' → logprob: -10.349113464355469
    9. '#' → logprob: -10.474113464355469
    10. 'arrival' → logprob: -10.474113464355469

Token 2124: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1864968091249466
    2. 'appro' → logprob: -1.8114968538284302
    3. 'are' → logprob: -5.186496734619141
    4. 'enter' → logprob: -7.061496734619141
    5. 'come' → logprob: -8.68649673461914
    6. ' arrive' → logprob: -10.56149673461914
    7. 'entered' → logprob: -10.68649673461914
    8. '#' → logprob: -11.18649673461914
    9. 'came' → logprob: -11.31149673461914
    10. 'appear' → logprob: -12.06149673461914

Token 2125: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14048981666564941
    2. '
' → logprob: -2.1404898166656494
    3. '                    
' → logprob: -5.26548957824707
    4. '               ' → logprob: -5.64048957824707
    5. 'if' → logprob: -6.01548957824707
    6. '```' → logprob: -7.39048957824707
    7. ' if' → logprob: -7.64048957824707
    8. ')' → logprob: -8.51548957824707
    9. ')
' → logprob: -8.64048957824707
    10. ',' → logprob: -8.89048957824707

Token 2126: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03237422555685043
    2. '
' → logprob: -4.657374382019043
    3. 'if' → logprob: -5.032374382019043
    4. '               ' → logprob: -5.282374382019043
    5. ' if' → logprob: -5.657374382019043
    6. '```' → logprob: -5.907374382019043
    7. '                    
' → logprob: -5.907374382019043
    8. '           ' → logprob: -7.532374382019043
    9. 'while' → logprob: -8.032374382019043
    10. '``' → logprob: -8.532374382019043

Token 2127: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11433227360248566
    2. 'while' → logprob: -2.8643321990966797
    3. ' if' → logprob: -3.7393321990966797
    4. '                   ' → logprob: -3.8643321990966797
    5. 'wait' → logprob: -5.48933219909668
    6. ' while' → logprob: -6.86433219909668
    7. 'waiting' → logprob: -7.73933219909668
    8. '#' (adapté à ' #') → logprob: -9.23933219909668
    9. ' wait' → logprob: -9.36433219909668
    10. '                    
' → logprob: -9.61433219909668

Token 2128: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23143413662910461
    2. 'while' → logprob: -1.8564341068267822
    3. '                   ' → logprob: -3.2314341068267822
    4. 'wait' → logprob: -4.981434345245361
    5. '#' → logprob: -5.856434345245361
    6. 'waiting' → logprob: -7.856434345245361
    7. ' if' → logprob: -8.106433868408203
    8. '```' → logprob: -9.231433868408203
    9. 'delay' → logprob: -9.731433868408203
    10. 'can' → logprob: -9.856433868408203

Token 2129: ' red' (ID: 3592)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00414523808285594
    2. ' not' → logprob: -5.50414514541626
    3. '                   ' → logprob: -10.379145622253418
    4. '(not' → logprob: -10.504145622253418
    5. '   ' → logprob: -12.754145622253418
    6. '
' → logprob: -13.004145622253418
    7. '               ' → logprob: -14.129145622253418
    8. '                       ' → logprob: -14.254145622253418
    9. '!' → logprob: -14.879145622253418
    10. 'signal' → logprob: -15.004145622253418

Token 2130: ' at' (ID: 540)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.171159267425537
    2. '_at' → logprob: -1.546159267425537
    3. 'at' → logprob: -2.171159267425537
    4. '                       ' → logprob: -2.421159267425537
    5. ' not' → logprob: -2.921159267425537
    6. '                   ' → logprob: -2.921159267425537
    7. 'and' → logprob: -3.671159267425537
    8. '==' → logprob: -3.796159267425537
    9. '(not' → logprob: -4.171159267425537
    10. '_not' → logprob: -4.296159267425537

Token 2131: ' arrival' (ID: 24861)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.01007408183068037
    2. 'neighbor' → logprob: -5.010074138641357
    3. 'arrival' → logprob: -5.885074138641357
    4. '                   ' → logprob: -8.0100736618042
    5. ' neighbor' → logprob: -9.3850736618042
    6. 'ne' → logprob: -9.8850736618042
    7. ' arrive' → logprob: -10.0100736618042
    8. '                       ' → logprob: -10.8850736618042
    9. 'move' → logprob: -12.2600736618042
    10. ' arrival' → logprob: -12.3850736618042

Token 2132: ' time' (ID: 1058)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6905539035797119
    2. '_time' → logprob: -0.8155539035797119
    3. ':
' → logprob: -3.815553903579712
    4. ':' → logprob: -4.815553665161133
    5. '                       ' → logprob: -4.940553665161133
    6. '):
' → logprob: -5.815553665161133
    7. '               ' → logprob: -6.190553665161133
    8. ',' → logprob: -6.565553665161133
    9. ' and' → logprob: -6.565553665161133
    10. '_' → logprob: -6.690553665161133

Token 2133: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4643881320953369
    2. '                   ' → logprob: -1.214388132095337
    3. 'and' → logprob: -3.089388132095337
    4. ':
' → logprob: -4.589387893676758
    5. ',' → logprob: -5.464387893676758
    6. '                       ' → logprob: -5.589387893676758
    7. ':' → logprob: -5.589387893676758
    8. ' not' → logprob: -5.714387893676758
    9. 'not' → logprob: -6.964387893676758
    10. '               ' → logprob: -7.839387893676758

Token 2134: ' must' (ID: 2804)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18877379596233368
    2. ' while' → logprob: -2.8137738704681396
    3. '                   ' → logprob: -3.4387738704681396
    4. 'wait' → logprob: -3.6887738704681396
    5. '#' → logprob: -3.9387738704681396
    6. 'delay' → logprob: -4.5637736320495605
    7. '                       ' → logprob: -4.8137736320495605
    8. ' wait' → logprob: -5.5637736320495605
    9. 'waiting' → logprob: -5.6887736320495605
    10. ' #' → logprob: -6.0637736320495605

Token 2135: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.009293806739151478
    2. '                   ' → logprob: -5.509294033050537
    3. ' wait' → logprob: -6.009294033050537
    4. 'arrival' → logprob: -6.759294033050537
    5. 'arr' → logprob: -7.884294033050537
    6. 'while' → logprob: -8.634293556213379
    7. '
' → logprob: -8.884293556213379
    8. 'delay' → logprob: -9.009293556213379
    9. '_wait' → logprob: -9.134293556213379
    10. 'continue' → logprob: -9.384293556213379

Token 2136: ' until' (ID: 4609)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7346939444541931
    2. '                   ' → logprob: -1.859694004058838
    3. ' while' → logprob: -1.984694004058838
    4. '
' → logprob: -2.484694004058838
    5. 'for' → logprob: -3.484694004058838
    6. '                    
' → logprob: -3.859694004058838
    7. ' for' → logprob: -4.109694004058838
    8. ' =' → logprob: -4.984694004058838
    9. ' until' → logprob: -4.984694004058838
    10. ' if' → logprob: -5.109694004058838

Token 2137: ' green' (ID: 8851)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.009044329635798931
    2. 'green' → logprob: -5.134044170379639
    3. 'True' → logprob: -6.634044170379639
    4. ' signal' → logprob: -6.759044170379639
    5. 'the' → logprob: -8.509044647216797
    6. 'next' → logprob: -9.134044647216797
    7. '(signal' → logprob: -9.259044647216797
    8. ' green' → logprob: -9.634044647216797
    9. 'arrival' → logprob: -10.259044647216797
    10. ' True' → logprob: -10.634044647216797

Token 2138: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1019158884882927
    2. '
' → logprob: -3.6019158363342285
    3. 'while' → logprob: -4.2269158363342285
    4. '                       ' → logprob: -4.3519158363342285
    5. ':
' → logprob: -4.8519158363342285
    6. '_wait' → logprob: -5.2269158363342285
    7. '               ' → logprob: -5.3519158363342285
    8. ' while' → logprob: -5.7269158363342285
    9. 'if' → logprob: -6.3519158363342285
    10. '_time' → logprob: -6.4769158363342285

Token 2139: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017171164974570274
    2. '
' → logprob: -4.267171382904053
    3. 'while' → logprob: -7.017171382904053
    4. '               ' → logprob: -7.267171382904053
    5. '                    
' → logprob: -7.267171382904053
    6. '                       ' → logprob: -8.642170906066895
    7. '```' → logprob: -8.642170906066895
    8. ' while' → logprob: -9.142170906066895
    9. '           ' → logprob: -9.767170906066895
    10. 'if' → logprob: -10.017170906066895

Token 2140: ' if' (ID: 538)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.7218738794326782
    2. '                   ' → logprob: -1.0968738794326782
    3. 'if' (adapté à ' if') → logprob: -2.0968737602233887
    4. 'while' → logprob: -3.0968737602233887
    5. 'delay' → logprob: -5.221873760223389
    6. 'waiting' → logprob: -6.221873760223389
    7. ' wait' → logprob: -6.471873760223389
    8. ' if' → logprob: -7.471873760223389
    9. 'time' → logprob: -7.596873760223389
    10. 'next' → logprob: -7.846873760223389

Token 2141: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0036669373512268066
    2. ' not' → logprob: -5.628666877746582
    3. '(not' → logprob: -10.128666877746582
    4. '   ' → logprob: -11.378666877746582
    5. '                   ' → logprob: -11.628666877746582
    6. '                       ' → logprob: -12.628666877746582
    7. '	not' → logprob: -13.878666877746582
    8. '               ' → logprob: -14.378666877746582
    9. '!' → logprob: -14.628666877746582
    10. 'signal' → logprob: -15.128666877746582

Token 2142: ' signal' (ID: 12884)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.00033796546631492674
    2. ' signal' → logprob: -8.000337600708008
    3. '(signal' → logprob: -13.250337600708008
    4. '                   ' → logprob: -14.125337600708008
    5. '.signal' → logprob: -17.000337600708008
    6. '                       ' → logprob: -18.125337600708008
    7. '               ' → logprob: -18.500337600708008
    8. '   ' → logprob: -18.625337600708008
    9. '
' → logprob: -19.000337600708008
    10. '           ' → logprob: -19.500337600708008

Token 2143: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -4.127333340875339e-06
    2. '.' → logprob: -12.625003814697266
    3. 'is' → logprob: -14.375003814697266
    4. ' .' → logprob: -16.000003814697266
    5. ').' → logprob: -17.500003814697266
    6. '`.' → logprob: -17.875003814697266
    7. '.isnan' → logprob: -17.875003814697266
    8. '.
' → logprob: -19.500003814697266
    9. '.endswith' → logprob: -19.750003814697266
    10. '   ' → logprob: -19.875003814697266

Token 2144: '_green' (ID: 113714)
  Prédit: '_green'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -8.721228368813172e-05
    2. 'green' → logprob: -9.375086784362793
    3. ' green' → logprob: -14.000086784362793
    4. '_GREEN' → logprob: -14.750086784362793
    5. '_' → logprob: -15.125086784362793
    6. '_gr' → logprob: -15.250086784362793
    7. '```' → logprob: -16.12508773803711
    8. '_red' → logprob: -16.62508773803711
    9. 'Green' → logprob: -16.75008773803711
    10. '_blue' → logprob: -17.37508773803711

Token 2145: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -3.297462171758525e-05
    2. 'at' → logprob: -10.375033378601074
    3. '(at' → logprob: -14.750033378601074
    4. '	at' → logprob: -15.125033378601074
    5. 'At' → logprob: -15.250033378601074
    6. '   ' → logprob: -15.500033378601074
    7. '(' → logprob: -16.250032424926758
    8. '(direction' → logprob: -16.500032424926758
    9. 'direction' → logprob: -16.625032424926758
    10. ' at' → logprob: -16.875032424926758

Token 2146: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.008637377060949802
    2. 'arr' → logprob: -4.758637428283691
    3. '(' → logprob: -11.633637428283691
    4. '[arr' → logprob: -12.258637428283691
    5. '```' → logprob: -13.133637428283691
    6. ')' → logprob: -13.508637428283691
    7. '(move' → logprob: -13.758637428283691
    8. '(
' → logprob: -13.758637428283691
    9. 'arrival' → logprob: -13.758637428283691
    10. ' (' → logprob: -14.133637428283691

Token 2147: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.00020330198458395898
    2. 'arr' → logprob: -9.625203132629395
    3. '_arr' → logprob: -9.625203132629395
    4. 'rive' → logprob: -11.125203132629395
    5. 'ival' → logprob: -11.375203132629395
    6. 'ave' → logprob: -11.750203132629395
    7. '[' → logprob: -12.250203132629395
    8. '_dir' → logprob: -12.875203132629395
    9. '=' → logprob: -13.250203132629395
    10. ' arrive' → logprob: -13.250203132629395

Token 2148: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.0007648374885320663
    2. 'ive' → logprob: -7.875764846801758
    3. 'dir' → logprob: -8.500764846801758
    4. 'ival' → logprob: -9.750764846801758
    5. 'Dir' → logprob: -9.750764846801758
    6. 'e' → logprob: -10.375764846801758
    7. '       ' → logprob: -12.250764846801758
    8. 've' → logprob: -12.500764846801758
    9. '   ' → logprob: -12.625764846801758
    10. '-dir' → logprob: -12.875764846801758

Token 2149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017982252757064998
    2. ' ,' → logprob: -9.5001802444458
    3. '                   ' → logprob: -10.3751802444458
    4. ',
' → logprob: -11.1251802444458
    5. '                           ' → logprob: -11.1251802444458
    6. 'arrival' → logprob: -11.3751802444458
    7. '                       ' → logprob: -11.5001802444458
    8. ',current' → logprob: -12.8751802444458
    9. ')' → logprob: -13.2501802444458
    10. '                          ' → logprob: -13.6251802444458

Token 2150: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.00032962486147880554
    2. ' arrival' → logprob: -8.125329971313477
    3. '                   ' → logprob: -10.750329971313477
    4. '           ' → logprob: -12.375329971313477
    5. '               ' → logprob: -12.875329971313477
    6. 'arr' → logprob: -13.000329971313477
    7. '   ' → logprob: -14.000329971313477
    8. '                       ' → logprob: -14.000329971313477
    9. '
' → logprob: -14.750329971313477
    10. '                           ' → logprob: -15.875329971313477

Token 2151: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.1557283111615106e-05
    2. 'time' → logprob: -10.500041961669922
    3. 'al' → logprob: -11.750041961669922
    4. 'tion' → logprob: -13.250041961669922
    5. 'ion' → logprob: -13.625041961669922
    6. 'ation' → logprob: -14.000041961669922
    7. 'arrival' → logprob: -15.125041961669922
    8. 'Time' → logprob: -15.250041961669922
    9. 'l' → logprob: -15.250041961669922
    10. 'val' → logprob: -15.375041961669922

Token 2152: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018171481788158417
    2. '):' → logprob: -4.143171310424805
    3. '                       ' → logprob: -6.768171310424805
    4. '):
' → logprob: -7.643171310424805
    5. '                   ' → logprob: -7.893171310424805
    6. '                           ' → logprob: -10.018171310424805
    7. ' ):
' → logprob: -11.143171310424805
    8. ':
' → logprob: -11.518171310424805
    9. '                               ' → logprob: -11.893171310424805
    10. ')' → logprob: -11.893171310424805

Token 2153: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.020417388528585434
    2. '                   ' → logprob: -4.645417213439941
    3. '                           ' → logprob: -6.145417213439941
    4. '                        
' → logprob: -6.145417213439941
    5. '```' → logprob: -6.520417213439941
    6. 'while' → logprob: -6.645417213439941
    7. '
' → logprob: -7.270417213439941
    8. ' while' → logprob: -7.520417213439941
    9. '``' → logprob: -7.520417213439941
    10. '                               ' → logprob: -8.270417213439941

Token 2154: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.04231438413262367
    2. '                       ' → logprob: -4.167314529418945
    3. 'arrival' → logprob: -5.042314529418945
    4. 'while' → logprob: -5.292314529418945
    5. 'waiting' → logprob: -5.292314529418945
    6. '#' (adapté à ' #') → logprob: -5.667314529418945
    7. 'delay' → logprob: -6.292314529418945
    8. ' wait' → logprob: -6.667314529418945
    9. 'next' → logprob: -7.042314529418945
    10. 'w' → logprob: -7.417314529418945

Token 2155: ' Wait' (ID: 24305)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.01905994489789009
    2. '#' → logprob: -4.894060134887695
    3. '                       ' → logprob: -5.394060134887695
    4. 'waiting' → logprob: -6.144060134887695
    5. ' wait' → logprob: -6.269060134887695
    6. 'delay' → logprob: -7.144060134887695
    7. 'next' → logprob: -7.769060134887695
    8. '                   ' → logprob: -8.019060134887695
    9. '                        
' → logprob: -8.394060134887695
    10. 'phase' → logprob: -8.769060134887695

Token 2156: ' until' (ID: 4609)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.39548736810684204
    2. '_until' → logprob: -2.1454873085021973
    3. 'while' → logprob: -2.3954873085021973
    4. '=' → logprob: -3.1454873085021973
    5. '+=' → logprob: -3.3954873085021973
    6. '_=' → logprob: -4.520487308502197
    7. 'until' → logprob: -4.895487308502197
    8. 'arrival' → logprob: -5.020487308502197
    9. 'time' → logprob: -5.520487308502197
    10. '_' → logprob: -5.770487308502197

Token 2157: ' next' (ID: 2613)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -0.7797489166259766
    2. 'arrival' → logprob: -0.7797489166259766
    3. 'next' → logprob: -3.1547489166259766
    4. 'green' → logprob: -3.7797489166259766
    5. 'the' → logprob: -4.279748916625977
    6. '(signal' → logprob: -6.654748916625977
    7. ' arrival' → logprob: -7.654748916625977
    8. ' next' → logprob: -7.904748916625977
    9. 'arr' → logprob: -8.029748916625977
    10. ' signal' → logprob: -8.154748916625977

Token 2158: ' green' (ID: 8851)
  Prédit: 'green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'green' → logprob: -0.08735529333353043
    2. 'arrival' → logprob: -3.337355375289917
    3. 'phase' → logprob: -3.587355375289917
    4. 'change' → logprob: -4.587355136871338
    5. 'signal' → logprob: -5.462355136871338
    6. 'time' → logprob: -6.337355136871338
    7. '_green' → logprob: -6.462355136871338
    8. ' green' → logprob: -7.087355136871338
    9. '```' → logprob: -8.087355613708496
    10. '(signal' → logprob: -8.087355613708496

Token 2159: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1401323676109314
    2. 'while' → logprob: -3.515132427215576
    3. 'arrival' → logprob: -3.640132427215576
    4. 'next' → logprob: -4.765132427215576
    5. '                        
' → logprob: -5.015132427215576
    6. '(next' → logprob: -5.265132427215576
    7. '                   ' → logprob: -5.390132427215576
    8. 'waiting' → logprob: -5.515132427215576
    9. '()' → logprob: -5.640132427215576
    10. '(' → logprob: -5.640132427215576

Token 2160: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10485554486513138
    2. 'arrival' → logprob: -3.479855537414551
    3. '_time' → logprob: -3.729855537414551
    4. 'while' → logprob: -4.979855537414551
    5. '_wait' → logprob: -5.229855537414551
    6. 'wait' → logprob: -5.604855537414551
    7. '+' → logprob: -5.854855537414551
    8. 'time' → logprob: -5.854855537414551
    9. ' =' → logprob: -5.854855537414551
    10. 'waiting' → logprob: -5.979855537414551

Token 2161: ' cycle' (ID: 15839)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.016234008595347404
    2. 'waiting' → logprob: -5.391233921051025
    3. 'next' → logprob: -5.641233921051025
    4. '                       ' → logprob: -5.891233921051025
    5. ' wait' → logprob: -6.516233921051025
    6. 'while' → logprob: -6.641233921051025
    7. 'cycle' (adapté à ' cycle') → logprob: -6.891233921051025
    8. 'phase' → logprob: -7.766233921051025
    9. 'delay' → logprob: -8.641234397888184
    10. 'w' → logprob: -9.266234397888184

Token 2162: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.28533098101615906
    2. ' =' → logprob: -1.9103310108184814
    3. '=' → logprob: -2.4103310108184814
    4. '_remaining' → logprob: -5.785330772399902
    5. '_wait' → logprob: -6.160330772399902
    6. '_length' → logprob: -6.910330772399902
    7. '_duration' → logprob: -7.035330772399902
    8. '       ' → logprob: -7.035330772399902
    9. '_delay' → logprob: -7.660330772399902
    10. 'time' → logprob: -7.910330772399902

Token 2163: ' signal' (ID: 12884)
  Prédit: 'signal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'signal' → logprob: -2.7610454708337784e-05
    2. ' signal' → logprob: -10.500027656555176
    3. 'sign' → logprob: -17.37502670288086
    4. '                       ' → logprob: -18.00002670288086
    5. '                   ' → logprob: -18.25002670288086
    6. '2' → logprob: -19.00002670288086
    7. '.signal' → logprob: -19.62502670288086
    8. '(signal' → logprob: -19.75002670288086
    9. '               ' → logprob: -20.12502670288086
    10. '   ' → logprob: -20.25002670288086

Token 2164: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -7.076218025758862e-05
    2. '                       ' → logprob: -10.125070571899414
    3. '_cycle' → logprob: -11.250070571899414
    4. ' .' → logprob: -12.375070571899414
    5. '                           ' → logprob: -13.000070571899414
    6. '.' → logprob: -13.125070571899414
    7. 'cycle' → logprob: -13.250070571899414
    8. ' =' → logprob: -13.750070571899414
    9. '.cy' → logprob: -14.375070571899414
    10. '   ' → logprob: -14.375070571899414

Token 2165: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -0.0015127197839319706
    2. 'cycle' → logprob: -6.50151252746582
    3. 'ycl' → logprob: -12.00151252746582
    4. '   ' → logprob: -13.12651252746582
    5. 'y' → logprob: -14.87651252746582
    6. 'ircle' → logprob: -14.87651252746582
    7. 'YCLE' → logprob: -15.37651252746582
    8. '       ' → logprob: -15.50151252746582
    9. '_cycle' → logprob: -15.75151252746582
    10. 'ycles' → logprob: -16.00151252746582

Token 2166: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02467636950314045
    2. '
' → logprob: -4.774676322937012
    3. '                        
' → logprob: -5.274676322937012
    4. ')
' → logprob: -5.649676322937012
    5. ')' → logprob: -6.024676322937012
    6. ',' → logprob: -7.149676322937012
    7. '+' → logprob: -7.524676322937012
    8. 'while' → logprob: -8.024676322937012
    9. 'next' → logprob: -8.149676322937012
    10. ' =' → logprob: -8.274676322937012

Token 2167: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007300990633666515
    2. 'wait' → logprob: -5.382300853729248
    3. 'delay' → logprob: -7.257300853729248
    4. 'next' → logprob: -7.382300853729248
    5. '```' → logprob: -8.132301330566406
    6. 'waiting' → logprob: -8.382301330566406
    7. 'while' → logprob: -8.757301330566406
    8. '                        
' → logprob: -8.757301330566406
    9. ' wait' → logprob: -8.882301330566406
    10. '
' → logprob: -10.007301330566406

Token 2168: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.059127189218997955
    2. 'phase' → logprob: -3.43412709236145
    3. '                       ' → logprob: -4.809127330780029
    4. 'waiting' → logprob: -5.309127330780029
    5. 'next' → logprob: -5.684127330780029
    6. 'if' → logprob: -5.684127330780029
    7. ' wait' → logprob: -5.934127330780029
    8. 'while' → logprob: -7.059127330780029
    9. 'time' → logprob: -7.934127330780029
    10. '                        
' → logprob: -8.434126853942871

Token 2169: ' calculate' (ID: 17950)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.1513625979423523
    2. 'wait' → logprob: -2.026362657546997
    3. 'if' → logprob: -5.901362419128418
    4. 'waiting' → logprob: -6.651362419128418
    5. '#' → logprob: -6.901362419128418
    6. 'remaining' → logprob: -7.276362419128418
    7. 'offset' → logprob: -7.651362419128418
    8. 'time' → logprob: -8.026362419128418
    9. 'next' → logprob: -8.026362419128418
    10. 're' → logprob: -8.526362419128418

Token 2170: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.013150815851986408
    2. ' wait' → logprob: -4.888150691986084
    3. 'waiting' → logprob: -5.513150691986084
    4. '(wait' → logprob: -8.013151168823242
    5. 'next' → logprob: -8.263151168823242
    6. 'delay' → logprob: -8.388151168823242
    7. '   ' → logprob: -9.013151168823242
    8. 'phase' → logprob: -9.138151168823242
    9. 'time' → logprob: -9.263151168823242
    10. '```' → logprob: -9.513151168823242

Token 2171: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.05365152284502983
    2. '=' → logprob: -3.4286515712738037
    3. ' =' → logprob: -4.303651332855225
    4. 'time' → logprob: -6.303651332855225
    5. '_cycles' → logprob: -6.303651332855225
    6. '_wait' → logprob: -7.178651332855225
    7. 't' → logprob: -7.553651332855225
    8. '_until' → logprob: -7.553651332855225
    9. '_cycle' → logprob: -8.553651809692383
    10. '_ticks' → logprob: -8.803651809692383

Token 2172: ' until' (ID: 4609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0329926013946533
    2. '                       ' → logprob: -1.2829926013946533
    3. '=' → logprob: -1.4079926013946533
    4. 'wait' → logprob: -2.2829926013946533
    5. '                        
' → logprob: -5.282992362976074
    6. 'while' → logprob: -6.282992362976074
    7. '_wait' → logprob: -6.282992362976074
    8. '                           ' → logprob: -6.532992362976074
    9. '=
' → logprob: -6.532992362976074
    10. 'next' → logprob: -7.032992362976074

Token 2173: ' green' (ID: 8851)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6818409562110901
    2. 'arrival' → logprob: -0.9318409562110901
    3. 'signal' → logprob: -3.5568408966064453
    4. '(' → logprob: -4.056840896606445
    5. '(signal' → logprob: -4.431840896606445
    6. 'green' → logprob: -4.556840896606445
    7. '(next' → logprob: -4.556840896606445
    8. '((' → logprob: -5.181840896606445
    9. ' next' → logprob: -5.181840896606445
    10. 'cycle' → logprob: -5.681840896606445

Token 2174: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5935677289962769
    2. 'wait' → logprob: -1.4685677289962769
    3. '=' → logprob: -2.3435678482055664
    4. ' =' → logprob: -2.9685678482055664
    5. 'next' → logprob: -4.093567848205566
    6. '                        
' → logprob: -4.468567848205566
    7. 'waiting' → logprob: -4.718567848205566
    8. 'while' → logprob: -5.343567848205566
    9. 'until' → logprob: -5.593567848205566
    10. 'remaining' → logprob: -5.843567848205566

Token 2175: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.004671610891819
    2. 'arrival' → logprob: -5.879671573638916
    3. 'ns' → logprob: -7.379671573638916
    4. 'direction' → logprob: -7.379671573638916
    5. 'Direction' → logprob: -9.129672050476074
    6. 'that' → logprob: -9.379672050476074
    7. ' arrive' → logprob: -9.754672050476074
    8. '(arr' → logprob: -9.754672050476074
    9. 'the' → logprob: -10.004672050476074
    10. '   ' → logprob: -10.254672050476074

Token 2176: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.03065079264342785
    2. '                       ' → logprob: -4.530650615692139
    3. '                   ' → logprob: -5.530650615692139
    4. '_time' → logprob: -5.780650615692139
    5. '_direction' → logprob: -5.780650615692139
    6. 'arrival' → logprob: -5.780650615692139
    7. '                           ' → logprob: -6.655650615692139
    8. ')' → logprob: -7.155650615692139
    9. '_
' → logprob: -7.530650615692139
    10. '                        
' → logprob: -7.530650615692139

Token 2177: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1741400957107544
    2. 'wait' → logprob: -3.174139976501465
    3. '                        
' → logprob: -3.674139976501465
    4. ' =' → logprob: -3.674139976501465
    5. '=' → logprob: -4.299139976501465
    6. 'while' → logprob: -4.924139976501465
    7. '
' → logprob: -5.049139976501465
    8. '```' → logprob: -5.049139976501465
    9. 'next' → logprob: -5.799139976501465
    10. '_wait' → logprob: -5.924139976501465

Token 2178: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0304642952978611
    2. 'wait' → logprob: -4.780464172363281
    3. ' =' → logprob: -5.280464172363281
    4. '=' → logprob: -5.280464172363281
    5. '                        
' → logprob: -5.280464172363281
    6. ' wait' → logprob: -6.655464172363281
    7. '_wait' → logprob: -7.405464172363281
    8. '                        ' → logprob: -7.530464172363281
    9. '                           ' → logprob: -7.905464172363281
    10. 'next' → logprob: -8.030464172363281

Token 2179: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.22305351495742798
    2. 'if' → logprob: -1.7230534553527832
    3. 'phase' → logprob: -4.098053455352783
    4. '                       ' → logprob: -6.223053455352783
    5. 'waiting' → logprob: -6.973053455352783
    6. 'cycle' → logprob: -7.723053455352783
    7. ' wait' → logprob: -8.348053932189941
    8. 'current' → logprob: -8.348053932189941
    9. 'time' → logprob: -8.598053932189941
    10. 'offset' → logprob: -8.973053932189941

Token 2180: ' cycle' (ID: 15839)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.8833653330802917
    2. 'if' → logprob: -1.2583653926849365
    3. 'phase' → logprob: -1.3833653926849365
    4. '                       ' → logprob: -3.3833653926849365
    5. '                        
' → logprob: -5.883365154266357
    6. ' if' → logprob: -6.008365154266357
    7. ' wait' → logprob: -6.133365154266357
    8. 'cycle' → logprob: -6.508365154266357
    9. 'waiting' → logprob: -6.758365154266357
    10. 'while' → logprob: -7.008365154266357

Token 2181: ':' (ID: 25)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.11766724288463593
    2. '_phase' → logprob: -3.1176671981811523
    3. '_wait' → logprob: -4.117667198181152
    4. '=' → logprob: -4.367667198181152
    5. ' =' → logprob: -4.492667198181152
    6. '_duration' → logprob: -4.742667198181152
    7. '_length' → logprob: -5.117667198181152
    8. '_start' → logprob: -5.992667198181152
    9. '_remaining' → logprob: -6.117667198181152
    10. '_offset' → logprob: -6.742667198181152

Token 2182: ' green' (ID: 8851)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8735676407814026
    2. 'cycle' → logprob: -0.8735676407814026
    3. 'wait' → logprob: -3.373567581176758
    4. 'k' → logprob: -3.873567581176758
    5. ' cycle' → logprob: -3.873567581176758
    6. ' c' → logprob: -4.123567581176758
    7. '2' → logprob: -4.123567581176758
    8. 'if' → logprob: -4.748567581176758
    9. '                       ' → logprob: -4.748567581176758
    10. 'phase' → logprob: -4.748567581176758

Token 2183: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.4696837365627289
    2. 'time' → logprob: -2.5946836471557617
    3. '_phase' → logprob: -2.5946836471557617
    4. '_duration' → logprob: -2.7196836471557617
    5. '_length' → logprob: -3.0946836471557617
    6. 'phase' → logprob: -3.0946836471557617
    7. '_period' → logprob: -3.5946836471557617
    8. 'duration' → logprob: -4.469683647155762
    9. '=' → logprob: -4.969683647155762
    10. 'length' → logprob: -5.094683647155762

Token 2184: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1929820775985718
    2. '=' → logprob: -1.3179820775985718
    3. '_time' → logprob: -1.9429820775985718
    4. '_length' → logprob: -2.6929821968078613
    5. '_remaining' → logprob: -3.3179821968078613
    6. '_period' → logprob: -3.8179821968078613
    7. '_' → logprob: -4.192982196807861
    8. 's' → logprob: -4.192982196807861
    9. '+' → logprob: -4.442982196807861
    10. '_duration' → logprob: -4.692982196807861

Token 2185: ' first' (ID: 1577)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.07245472818613052
    2. 'signal' → logprob: -2.6974546909332275
    3. ' cycle' → logprob: -6.197454929351807
    4. '                       ' → logprob: -9.197454452514648
    5. '
' → logprob: -9.572454452514648
    6. 'phase' → logprob: -9.697454452514648
    7. 'arrival' → logprob: -9.822454452514648
    8. '                   ' → logprob: -10.322454452514648
    9. '                           ' → logprob: -10.947454452514648
    10. '```' → logprob: -11.322454452514648

Token 2186: ' k' (ID: 372)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6651827692985535
    2. ' (' → logprob: -2.7901828289031982
    3. 'phase' → logprob: -3.0401828289031982
    4. 'cycle' → logprob: -3.1651828289031982
    5. '```' → logprob: -3.1651828289031982
    6. '                        
' → logprob: -3.4151828289031982
    7. '_time' → logprob: -3.6651828289031982
    8. '(' → logprob: -3.6651828289031982
    9. '                           ' → logprob: -3.9151828289031982
    10. 'if' → logprob: -4.040182590484619

Token 2187: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6488528251647949
    2. '=' → logprob: -1.023852825164795
    3. ' -' → logprob: -2.898852825164795
    4. '-' → logprob: -3.773852825164795
    5. '           ' → logprob: -4.898852825164795
    6. 'if' → logprob: -5.148852825164795
    7. '       ' → logprob: -5.148852825164795
    8. 'time' → logprob: -5.398852825164795
    9. '               ' → logprob: -5.773852825164795
    10. '_time' → logprob: -6.398852825164795

Token 2188: ' red' (ID: 3592)
  Prédit: 'then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'then' → logprob: -0.3561108708381653
    2. ' then' → logprob: -2.1061108112335205
    3. 'red' → logprob: -2.3561108112335205
    4. 'else' → logprob: -3.4811108112335205
    5. 'cycle' → logprob: -4.4811110496521
    6. '2' → logprob: -5.1061110496521
    7. 'wait' → logprob: -5.3561110496521
    8. 'k' → logprob: -5.6061110496521
    9. 'green' → logprob: -5.7311110496521
    10. '                       ' → logprob: -5.7311110496521

Token 2189: ' next' (ID: 2613)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8967605233192444
    2. '_time' → logprob: -1.7717604637145996
    3. ' +' → logprob: -2.2717604637145996
    4. ' =' → logprob: -2.2717604637145996
    5. '=' → logprob: -2.6467604637145996
    6. '_period' → logprob: -3.5217604637145996
    7. '                       ' → logprob: -3.7717604637145996
    8. '_wait' → logprob: -3.7717604637145996
    9. '_phase' → logprob: -4.0217604637146
    10. '+
' → logprob: -5.0217604637146

Token 2190: ' k' (ID: 372)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.2502293586730957
    2. '_time' → logprob: -1.5002293586730957
    3. '=' → logprob: -1.8752293586730957
    4. 'cycle' → logprob: -2.7502293586730957
    5. ' =' → logprob: -3.1252293586730957
    6. '_cycle' → logprob: -3.1252293586730957
    7. '                        
' → logprob: -3.6252293586730957
    8. '_wait' → logprob: -4.000229358673096
    9. 'time' → logprob: -4.125229358673096
    10. '+' → logprob: -4.375229358673096

Token 2191: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006865509320050478
    2. '
' → logprob: -5.881865501403809
    3. ',' → logprob: -6.756865501403809
    4. '                        
' → logprob: -6.756865501403809
    5. 'wait' → logprob: -7.131865501403809
    6. ';' → logprob: -9.256865501403809
    7. '_wait' → logprob: -9.381865501403809
    8. 'if' → logprob: -9.631865501403809
    9. 'next' → logprob: -9.881865501403809
    10. '                        ' → logprob: -9.881865501403809

Token 2192: ' repeat' (ID: 22962)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.8751538991928101
    2. 'if' → logprob: -1.12515389919281
    3. '                       ' → logprob: -1.87515389919281
    4. 'phase' → logprob: -2.5001540184020996
    5. '#' → logprob: -4.7501540184021
    6. ' if' → logprob: -5.3751540184021
    7. ' wait' → logprob: -6.3751540184021
    8. 'offset' → logprob: -6.6251540184021
    9. '                           ' → logprob: -7.0001540184021
    10. 're' → logprob: -7.1251540184021

Token 2193: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1631649285554886
    2. 'wait' → logprob: -2.5381648540496826
    3. 'if' → logprob: -3.0381648540496826
    4. '                        
' → logprob: -4.538165092468262
    5. 'while' → logprob: -6.288165092468262
    6. 'next' → logprob: -6.413165092468262
    7. '
' → logprob: -6.538165092468262
    8. ' if' → logprob: -7.038165092468262
    9. '#' → logprob: -7.288165092468262
    10. 'phase' → logprob: -7.288165092468262

Token 2194: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0303336251527071
    2. '                        
' → logprob: -4.030333518981934
    3. '\x' → logprob: -5.780333518981934
    4. '                           ' → logprob: -6.030333518981934
    5. '                        ' → logprob: -6.530333518981934
    6. '```' → logprob: -6.905333518981934
    7. '\' → logprob: -7.530333518981934
    8. '\n' → logprob: -7.905333518981934
    9. '
' → logprob: -7.905333518981934
    10. '                               ' → logprob: -8.280333518981934

Token 2195: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.2546716332435608
    2. 'if' → logprob: -1.629671573638916
    3. '                       ' → logprob: -4.504671573638916
    4. ' wait' → logprob: -5.129671573638916
    5. ' if' → logprob: -5.379671573638916
    6. 'phase' → logprob: -5.504671573638916
    7. 'waiting' → logprob: -7.254671573638916
    8. '                        
' → logprob: -7.629671573638916
    9. 'next' → logprob: -8.004672050476074
    10. '
' → logprob: -8.129672050476074

Token 2196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3673710823059082
    2. 'wait' → logprob: -1.4923710823059082
    3. 'phase' → logprob: -2.992371082305908
    4. '                       ' → logprob: -3.867371082305908
    5. ' if' → logprob: -6.367371082305908
    6. 'offset' → logprob: -6.617371082305908
    7. '#' → logprob: -6.617371082305908
    8. 'green' → logprob: -6.992371082305908
    9. ' wait' → logprob: -7.242371082305908
    10. 'cycle' → logprob: -7.242371082305908

Token 2197: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.013640359975397587
    2. 'ns' → logprob: -5.513640403747559
    3. 'phase' → logprob: -5.513640403747559
    4. 'cycle' → logprob: -6.388640403747559
    5. 'signal' → logprob: -6.388640403747559
    6. 'not' → logprob: -6.763640403747559
    7. ' arrive' → logprob: -7.888640403747559
    8. 'arrival' → logprob: -8.513640403747559
    9. ' ns' → logprob: -9.763640403747559
    10. '(arr' → logprob: -10.013640403747559

Token 2198: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.03475934639573097
    2. '_time' → logprob: -3.409759283065796
    3. 'r' → logprob: -8.409759521484375
    4. 'd' → logprob: -8.534759521484375
    5. '_direction' → logprob: -8.534759521484375
    6. '_d' → logprob: -9.659759521484375
    7. 'ing' → logprob: -9.909759521484375
    8. 's' → logprob: -10.034759521484375
    9. 't' → logprob: -10.159759521484375
    10. 'e' → logprob: -10.284759521484375

Token 2199: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5783624053001404
    2. 'in' → logprob: -1.3283624649047852
    3. ' ==' → logprob: -2.078362464904785
    4. '==' → logprob: -3.078362464904785
    5. '=='' → logprob: -6.453362464904785
    6. ':' → logprob: -7.078362464904785
    7. ' !=' → logprob: -9.078362464904785
    8. ')' → logprob: -9.453362464904785
    9. ' not' → logprob: -10.078362464904785
    10. ' ' → logprob: -10.203362464904785

Token 2200: ' NS' (ID: 6950)
  Prédit: ''N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''N' → logprob: -0.051666248589754105
    2. '('' → logprob: -3.301666259765625
    3. ''' → logprob: -4.551666259765625
    4. ''S' → logprob: -6.926666259765625
    5. 'in' → logprob: -7.051666259765625
    6. ''E' → logprob: -8.301666259765625
    7. ''n' → logprob: -8.551666259765625
    8. 'N' → logprob: -8.801666259765625
    9. '"N' → logprob: -8.926666259765625
    10. ' '' → logprob: -9.801666259765625

Token 2201: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5551721453666687
    2. ':
' → logprob: -1.3051722049713135
    3. ' and' → logprob: -2.5551722049713135
    4. ':' → logprob: -3.1801722049713135
    5. '                           ' → logprob: -4.180171966552734
    6. ',' → logprob: -5.430171966552734
    7. 'if' → logprob: -5.555171966552734
    8. 'and' → logprob: -5.555171966552734
    9. ' if' → logprob: -6.430171966552734
    10. '==' → logprob: -6.680171966552734

Token 2202: ' green' (ID: 8851)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04722457379102707
    2. 'wait' → logprob: -3.172224521636963
    3. '#' → logprob: -5.922224521636963
    4. '                       ' → logprob: -7.672224521636963
    5. '                           ' → logprob: -8.297224998474121
    6. ' if' → logprob: -8.422224998474121
    7. 'phase' → logprob: -8.672224998474121
    8. 'waiting' → logprob: -8.672224998474121
    9. 'cycle' → logprob: -8.922224998474121
    10. '
' → logprob: -10.422224998474121

Token 2203: ' in' (ID: 306)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.36496445536613464
    2. '_end' → logprob: -2.239964485168457
    3. '_phase' → logprob: -2.739964485168457
    4. '_start' → logprob: -3.114964485168457
    5. '_duration' → logprob: -3.364964485168457
    6. '_wait' → logprob: -4.239964485168457
    7. '_until' → logprob: -4.239964485168457
    8. 'time' → logprob: -5.114964485168457
    9. ' =' → logprob: -5.239964485168457
    10. '=' → logprob: -5.989964485168457

Token 2204: ' [' (ID: 723)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.16162171959877014
    2. 'cycle' → logprob: -2.4116218090057373
    3. '0' → logprob: -3.9116218090057373
    4. 'arrival' → logprob: -4.411621570587158
    5. '(' → logprob: -4.661621570587158
    6. 'first' → logprob: -5.286621570587158
    7. 'the' → logprob: -5.536621570587158
    8. 'range' → logprob: -6.036621570587158
    9. '[' → logprob: -6.161621570587158
    10. '```' → logprob: -7.411621570587158

Token 2205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005834150360897183
    2. 'arrival' → logprob: -8.12558364868164
    3. 'phase' → logprob: -8.62558364868164
    4. '(' → logprob: -10.12558364868164
    5. 'cycle' → logprob: -10.50058364868164
    6. 'arr' → logprob: -11.50058364868164
    7. '```' → logprob: -12.25058364868164
    8. ' ' → logprob: -12.50058364868164
    9. '`' → logprob: -13.31308364868164
    10. ')' → logprob: -13.43808364868164

Token 2206: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04108843952417374
    2. 'cycle' → logprob: -3.666088342666626
    3. ':' → logprob: -5.041088581085205
    4. ' cycle' → logprob: -6.291088581085205
    5. '
' → logprob: -6.666088581085205
    6. ' ,' → logprob: -6.666088581085205
    7. ',
' → logprob: -6.916088581085205
    8. '       ' → logprob: -7.666088581085205
    9. ':,' → logprob: -7.666088581085205
    10. ')' → logprob: -8.541088104248047

Token 2207: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4036023020744324
    2. ')' → logprob: -1.5286023616790771
    3. ')
' → logprob: -2.778602361679077
    4. '):' → logprob: -4.153602123260498
    5. ',' → logprob: -4.653602123260498
    6. '):
' → logprob: -4.778602123260498
    7. '],' → logprob: -5.028602123260498
    8. ']' → logprob: -5.278602123260498
    9. ']
' → logprob: -7.028602123260498
    10. '
' → logprob: -7.403602123260498

Token 2208: ' red' (ID: 3592)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4977799355983734
    2. '                       ' → logprob: -1.9977799654006958
    3. '#' → logprob: -2.2477798461914062
    4. 'else' → logprob: -3.2477798461914062
    5. 'wait' → logprob: -3.3727798461914062
    6. 'elif' → logprob: -3.4977798461914062
    7. ' if' → logprob: -3.8727798461914062
    8. '                           ' → logprob: -4.747779846191406
    9. '
' → logprob: -4.997779846191406
    10. 'cycle' → logprob: -6.497779846191406

Token 2209: ' in' (ID: 306)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.512515902519226
    2. '+' → logprob: -1.637515902519226
    3. 'if' → logprob: -1.637515902519226
    4. '                       ' → logprob: -2.6375160217285156
    5. ',' → logprob: -2.7625160217285156
    6. ' if' → logprob: -2.7625160217285156
    7. ' +' → logprob: -3.0125160217285156
    8. '
' → logprob: -3.3875160217285156
    9. '=' → logprob: -4.262516021728516
    10. ' else' → logprob: -4.387516021728516

Token 2210: ' [' (ID: 723)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.010284719057381153
    2. '(k' → logprob: -5.260284900665283
    3. 'k' → logprob: -5.885284900665283
    4. '{k' → logprob: -7.010284900665283
    5. ' [' → logprob: -7.135284900665283
    6. '[' → logprob: -8.260284423828125
    7. ' (' → logprob: -9.635284423828125
    8. 'range' → logprob: -9.885284423828125
    9. '   ' → logprob: -10.385284423828125
    10. ' ' → logprob: -10.510284423828125

Token 2211: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.019352994859218597
    2. 'cycle' → logprob: -4.019352912902832
    3. 'self' → logprob: -7.019352912902832
    4. 'signal' → logprob: -8.394352912902832
    5. 'code' → logprob: -10.644352912902832
    6. ' cycle' → logprob: -11.269352912902832
    7. '0' → logprob: -11.769352912902832
    8. '2' → logprob: -11.894352912902832
    9. ' k' → logprob: -12.144352912902832
    10. '{k' → logprob: -12.269352912902832

Token 2212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008706280030310154
    2. '),' → logprob: -5.258706092834473
    3. ',
' → logprob: -6.883706092834473
    4. ',),' → logprob: -7.008706092834473
    5. ',)' → logprob: -7.508706092834473
    6. '*' → logprob: -7.758706092834473
    7. ')' → logprob: -8.508706092834473
    8. '
' → logprob: -9.508706092834473
    9. ' ,' → logprob: -9.883706092834473
    10. ',),
' → logprob: -10.383706092834473

Token 2213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011389078572392464
    2. 'cycle' → logprob: -7.626138687133789
    3. 'k' → logprob: -8.251138687133789
    4. '(' → logprob: -8.376138687133789
    5. '
' → logprob: -9.126138687133789
    6. ' ' → logprob: -11.126138687133789
    7. '0' → logprob: -12.001138687133789
    8. '```' → logprob: -12.251138687133789
    9. '20' → logprob: -12.376138687133789
    10. ']' → logprob: -13.251138687133789

Token 2214: 'k' (ID: 74)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.6366297602653503
    2. 'k' → logprob: -0.7616297602653503
    3. '*' → logprob: -6.011629581451416
    4. ' *' → logprob: -6.511629581451416
    5. '_k' → logprob: -10.636630058288574
    6. '
' → logprob: -10.886630058288574
    7. '*self' → logprob: -11.011630058288574
    8. ' k' → logprob: -11.886630058288574
    9. '*c' → logprob: -11.886630058288574
    10. '```' → logprob: -12.886630058288574

Token 2215: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06059757620096207
    2. ']
' → logprob: -3.8105976581573486
    3. '                       ' → logprob: -3.9355976581573486
    4. '):
' → logprob: -4.8105974197387695
    5. ')' → logprob: -5.4355974197387695
    6. 'if' → logprob: -7.0605974197387695
    7. ']' → logprob: -7.8105974197387695
    8. '),' → logprob: -7.9355974197387695
    9. '                   ' → logprob: -8.06059741973877
    10. '])
' → logprob: -8.18559741973877

Token 2216: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08153339475393295
    2. ' if' → logprob: -3.581533432006836
    3. 'if' → logprob: -3.706533432006836
    4. '                           ' → logprob: -4.956533432006836
    5. '                        
' → logprob: -5.331533432006836
    6. '```' → logprob: -5.456533432006836
    7. '
' → logprob: -6.206533432006836
    8. '\x' → logprob: -6.956533432006836
    9. 'wait' → logprob: -7.206533432006836
    10. ',' → logprob: -7.331533432006836

Token 2217: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6268956065177917
    2. '                       ' → logprob: -1.6268956661224365
    3. 'wait' → logprob: -1.6268956661224365
    4. ' if' → logprob: -2.7518956661224365
    5. ' wait' → logprob: -5.501895427703857
    6. '
' → logprob: -6.501895427703857
    7. '                        
' → logprob: -6.876895427703857
    8. 'waiting' → logprob: -7.626895427703857
    9. 'next' → logprob: -7.876895427703857
    10. '                           ' → logprob: -8.376895904541016

Token 2218: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03585611656308174
    2. 'phase' → logprob: -4.285856246948242
    3. 'wait' → logprob: -4.285856246948242
    4. '                       ' → logprob: -5.035856246948242
    5. ' if' → logprob: -7.660856246948242
    6. '```' → logprob: -8.535856246948242
    7. '``' → logprob: -8.910856246948242
    8. '#' → logprob: -9.410856246948242
    9. 'waiting' → logprob: -9.535856246948242
    10. 'green' → logprob: -9.910856246948242

Token 2219: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0038561318069696426
    2. '(arr' → logprob: -6.753856182098389
    3. 'not' → logprob: -6.753856182098389
    4. ' arrive' → logprob: -7.128856182098389
    5. 'Direction' → logprob: -8.75385570526123
    6. '(not' → logprob: -9.00385570526123
    7. ' not' → logprob: -9.37885570526123
    8. 'move' → logprob: -9.87885570526123
    9. 'arrival' → logprob: -10.00385570526123
    10. '   ' → logprob: -10.12885570526123

Token 2220: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.00014239625306800008
    2. '_time' → logprob: -9.000142097473145
    3. '_' → logprob: -12.500142097473145
    4. 'Dir' → logprob: -12.625142097473145
    5. '_type' → logprob: -12.750142097473145
    6. '_arr' → logprob: -12.750142097473145
    7. ' _' → logprob: -14.125142097473145
    8. ''_' → logprob: -14.750142097473145
    9. '   ' → logprob: -14.875142097473145
    10. '_dirs' → logprob: -15.125142097473145

Token 2221: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6499695181846619
    2. ' in' → logprob: -1.5249695777893066
    3. ' ==' → logprob: -2.2749695777893066
    4. 'is' → logprob: -2.2749695777893066
    5. '==' → logprob: -3.3999695777893066
    6. ' not' → logprob: -4.649969577789307
    7. 'in' → logprob: -4.649969577789307
    8. ')' → logprob: -7.274969577789307
    9. 'not' → logprob: -7.899969577789307
    10. '=='' → logprob: -8.524969100952148

Token 2222: ' EW' (ID: 143307)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.2170480489730835
    2. '('' → logprob: -2.467048168182373
    3. 'EW' → logprob: -2.967048168182373
    4. ''' → logprob: -3.092048168182373
    5. 'NS' → logprob: -4.592048168182373
    6. 'E' → logprob: -7.092048168182373
    7. ''e' → logprob: -7.342048168182373
    8. 'ew' → logprob: -8.092047691345215
    9. '   ' → logprob: -8.342047691345215
    10. ''N' → logprob: -8.842047691345215

Token 2223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28144314885139465
    2. ':' → logprob: -2.0314431190490723
    3. ':
' → logprob: -2.4064431190490723
    4. '):
' → logprob: -5.156443119049072
    5. '==' → logprob: -5.406443119049072
    6. '                       ' → logprob: -6.031443119049072
    7. ' is' → logprob: -6.156443119049072
    8. 'is' → logprob: -6.281443119049072
    9. ' ==' → logprob: -6.781443119049072
    10. 'else' → logprob: -7.031443119049072

Token 2224: ' inverse' (ID: 53743)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.7842921614646912
    2. 'wait' → logprob: -1.534292221069336
    3. 'arrival' → logprob: -2.034292221069336
    4. ' phase' → logprob: -3.284292221069336
    5. '                       ' → logprob: -3.409292221069336
    6. ' wait' → logprob: -3.534292221069336
    7. 'cycle' → logprob: -3.659292221069336
    8. 'green' → logprob: -3.784292221069336
    9. 'arr' → logprob: -4.784292221069336
    10. '#' → logprob: -5.034292221069336

Token 2225: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07570193707942963
    2. '
' → logprob: -3.200701951980591
    3. '                        
' → logprob: -4.950701713562012
    4. ':
' → logprob: -5.075701713562012
    5. ' if' → logprob: -5.575701713562012
    6. ')
' → logprob: -6.075701713562012
    7. ' (' → logprob: -6.450701713562012
    8. 'if' → logprob: -6.450701713562012
    9. ' =' → logprob: -6.825701713562012
    10. ',' → logprob: -7.075701713562012

Token 2226: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010571738705039024
    2. 'wait' → logprob: -5.1355719566345215
    3. 'if' → logprob: -6.6355719566345215
    4. '
' → logprob: -6.8855719566345215
    5. '                        
' → logprob: -7.2605719566345215
    6. ' wait' → logprob: -7.8855719566345215
    7. '```' → logprob: -7.8855719566345215
    8. ' if' → logprob: -8.135571479797363
    9. '                           ' → logprob: -9.135571479797363
    10. '                        ' → logprob: -9.885571479797363

Token 2227: ' time' (ID: 1058)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3075522184371948
    2. 'wait' → logprob: -1.5575522184371948
    3. 'phase' → logprob: -3.4325523376464844
    4. '                       ' → logprob: -4.182552337646484
    5. 'offset' → logprob: -6.057552337646484
    6. ' if' → logprob: -6.432552337646484
    7. 'waiting' → logprob: -7.807552337646484
    8. 'cycle' → logprob: -7.932552337646484
    9. 'next' → logprob: -8.057552337646484
    10. 'time' (adapté à ' time') → logprob: -8.182552337646484

Token 2228: '_in' (ID: 2267)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.7222455143928528
    2. '_in' → logprob: -1.222245454788208
    3. '_to' → logprob: -2.222245454788208
    4. 'mod' → logprob: -3.097245454788208
    5. '_offset' → logprob: -4.097245693206787
    6. '=' → logprob: -4.472245693206787
    7. '_until' → logprob: -5.097245693206787
    8. '_wait' → logprob: -5.347245693206787
    9. '_phase' → logprob: -5.597245693206787
    10. ' =' → logprob: -5.597245693206787

Token 2229: '_cycle' (ID: 97714)
  Prédit: 'phase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phase' → logprob: -0.6917017698287964
    2. 'cycle' → logprob: -0.9417017698287964
    3. '_cycle' → logprob: -2.566701889038086
    4. '_phase' → logprob: -3.566701889038086
    5. '=' → logprob: -6.691701889038086
    6. '(' → logprob: -6.816701889038086
    7. 'arrival' → logprob: -7.191701889038086
    8. ' cycle' → logprob: -8.941701889038086
    9. '%' → logprob: -9.066701889038086
    10. 'period' → logprob: -9.316701889038086

Token 2230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1426795870065689
    2. ' =' → logprob: -2.0176796913146973
    3. '=time' → logprob: -14.392679214477539
    4. 's' → logprob: -14.642679214477539
    5. ',' → logprob: -14.767679214477539
    6. ' ' → logprob: -15.017679214477539
    7. ')' → logprob: -15.142679214477539
    8. '＝' → logprob: -15.392679214477539
    9. '=
' → logprob: -15.392679214477539
    10. '=end' → logprob: -15.392679214477539

Token 2231: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.0004353181866463274
    2. ' arrival' → logprob: -7.7504353523254395
    3. 'arr' → logprob: -12.375434875488281
    4. '   ' → logprob: -15.500434875488281
    5. '                   ' → logprob: -15.750434875488281
    6. '(' → logprob: -16.87543487548828
    7. '                       ' → logprob: -17.75043487548828
    8. '           ' → logprob: -18.25043487548828
    9. ' (' → logprob: -18.37543487548828
    10. '                           ' → logprob: -18.50043487548828

Token 2232: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.319370302458992e-06
    2. '```' → logprob: -13.875005722045898
    3. '_code' → logprob: -14.250005722045898
    4. ')_' → logprob: -14.250005722045898
    5. ' _' → logprob: -14.375005722045898
    6. '               ' → logprob: -14.750005722045898
    7. '                   ' → logprob: -15.000005722045898
    8. '_' → logprob: -15.000005722045898
    9. '`' → logprob: -15.375005722045898
    10. '           ' → logprob: -15.625005722045898

Token 2233: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6125110983848572
    2. '=' → logprob: -1.112511157989502
    3. ' %' → logprob: -2.862511157989502
    4. ' =' → logprob: -3.487511157989502
    5. '%=' → logprob: -3.737511157989502
    6. ' %=' → logprob: -4.237511157989502
    7. '<|end|>' → logprob: -6.487511157989502
    8. ' ' → logprob: -7.737511157989502
    9. ')' → logprob: -8.237510681152344
    10. '
' → logprob: -8.237510681152344

Token 2234: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.451116051815916e-05
    2. ' (' → logprob: -10.625024795532227
    3. '                       ' → logprob: -17.375024795532227
    4. '   ' → logprob: -17.625024795532227
    5. '(int' → logprob: -17.625024795532227
    6. '       ' → logprob: -18.250024795532227
    7. '((' → logprob: -18.750024795532227
    8. '(c' → logprob: -18.875024795532227
    9. '                   ' → logprob: -19.125024795532227
    10. ' ' → logprob: -19.125024795532227

Token 2235: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.900034299585968e-05
    2. '2' → logprob: -9.875088691711426
    3. ' (' → logprob: -10.500088691711426
    4. '(signal' → logprob: -11.875088691711426
    5. '(c' → logprob: -13.125088691711426
    6. 'cycle' → logprob: -14.750088691711426
    7. 'signal' → logprob: -15.125088691711426
    8. '   ' → logprob: -16.500089645385742
    9. '{' → logprob: -16.750089645385742
    10. ' ' → logprob: -17.000089645385742

Token 2236: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10049876570701599
    2. ' *' → logprob: -2.350498676300049
    3. 'signal' → logprob: -8.350499153137207
    4. 'cycle' → logprob: -11.850499153137207
    5. '                       ' → logprob: -11.975499153137207
    6. ' signal' → logprob: -11.975499153137207
    7. '`' → logprob: -12.350499153137207
    8. '```' → logprob: -12.350499153137207
    9. '*c' → logprob: -12.475499153137207
    10. '                   ' → logprob: -12.600499153137207

Token 2237: 'cycle' (ID: 24879)
  Prédit: 'cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.000740538293030113
    2. 'signal' → logprob: -7.2507405281066895
    3. ' cycle' → logprob: -10.875741004943848
    4. '```' → logprob: -11.875741004943848
    5. 'self' → logprob: -13.750741004943848
    6. '   ' → logprob: -14.500741004943848
    7. '
' → logprob: -14.875741004943848
    8. '       ' → logprob: -15.000741004943848
    9. 'cycl' → logprob: -15.375741004943848
    10. '           ' → logprob: -15.500741004943848

Token 2238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02008935622870922
    2. ')
' → logprob: -4.270089149475098
    3. '                       ' → logprob: -5.145089149475098
    4. '                           ' → logprob: -11.020089149475098
    5. '                        ' → logprob: -11.645089149475098
    6. ')+' → logprob: -11.770089149475098
    7. '+' → logprob: -11.895089149475098
    8. '                   ' → logprob: -12.020089149475098
    9. '                        
' → logprob: -12.020089149475098
    10. ')
' → logprob: -12.520089149475098

Token 2239: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16879339516162872
    2. 'if' → logprob: -3.4187934398651123
    3. '                           ' → logprob: -3.4187934398651123
    4. '```' → logprob: -3.6687934398651123
    5. ' if' → logprob: -3.7937934398651123
    6. 'wait' → logprob: -4.043793201446533
    7. '                        
' → logprob: -4.668793201446533
    8. '                               ' → logprob: -6.043793201446533
    9. '
' → logprob: -6.168793201446533
    10. '+' → logprob: -6.293793201446533

Token 2240: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.48016852140426636
    2. 'wait' → logprob: -0.9801685214042664
    3. '                       ' → logprob: -5.355168342590332
    4. 'waiting' → logprob: -6.855168342590332
    5. ' if' → logprob: -9.355168342590332
    6. '```' → logprob: -9.855168342590332
    7. 'delay' → logprob: -10.230168342590332
    8. '``' → logprob: -10.355168342590332
    9. ' wait' → logprob: -10.480168342590332
    10. '                        
' → logprob: -10.855168342590332

Token 2241: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0021006562747061253
    2. 'time' → logprob: -6.627100467681885
    3. '(arr' → logprob: -8.002100944519043
    4. ' arrive' → logprob: -8.252100944519043
    5. 'arrival' → logprob: -9.752100944519043
    6. 'signal' → logprob: -10.627100944519043
    7. '(time' → logprob: -10.752100944519043
    8. 'cycle' → logprob: -11.377100944519043
    9. '   ' → logprob: -11.627100944519043
    10. '(' → logprob: -11.627100944519043

Token 2242: '_dir' (ID: 9526)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.3871447443962097
    2. '_dir' → logprob: -1.1371448040008545
    3. 'time' → logprob: -8.387145042419434
    4. 'dir' → logprob: -11.637145042419434
    5. '_direction' → logprob: -11.762145042419434
    6. 'Dir' → logprob: -12.387145042419434
    7. 'in' → logprob: -12.637145042419434
    8. '_in' → logprob: -12.762145042419434
    9. '_token' → logprob: -12.887145042419434
    10. '_code' → logprob: -13.137145042419434

Token 2243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2017393857240677
    2. 'in' → logprob: -1.7017394304275513
    3. '<|end|>' → logprob: -9.451739311218262
    4. ')' → logprob: -9.701739311218262
    5. '==' → logprob: -10.326739311218262
    6. 'In' → logprob: -10.326739311218262
    7. ' ==' → logprob: -10.701739311218262
    8. ' ' → logprob: -11.201739311218262
    9. 'IN' → logprob: -11.201739311218262
    10. '=='' → logprob: -11.451739311218262

Token 2244: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00015633940347470343
    2. '{'' → logprob: -9.12515640258789
    3. ' ('' → logprob: -10.25015640258789
    4. '['' → logprob: -11.87515640258789
    5. '("' → logprob: -12.62515640258789
    6. '(('' → logprob: -14.12515640258789
    7. '({'' → logprob: -15.00015640258789
    8. ''S' → logprob: -16.12515640258789
    9. '(' → logprob: -16.12515640258789
    10. '   ' → logprob: -16.37515640258789

Token 2245: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10086493194103241
    2. ''N' → logprob: -2.350864887237549
    3. ''' → logprob: -7.600864887237549
    4. ''S' → logprob: -10.100865364074707
    5. '"N' → logprob: -10.725865364074707
    6. ''E' → logprob: -10.850865364074707
    7. '['' → logprob: -11.225865364074707
    8. ' N' → logprob: -11.475865364074707
    9. 'E' → logprob: -11.600865364074707
    10. '{'' → logprob: -11.725865364074707

Token 2246: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.026776036247611046
    2. '','' → logprob: -3.651776075363159
    3. 'S' → logprob: -8.151776313781738
    4. ''' → logprob: -9.276776313781738
    5. '',
' → logprob: -10.651776313781738
    6. ',S' → logprob: -10.776776313781738
    7. ''S' → logprob: -10.901776313781738
    8. ',' → logprob: -11.151776313781738
    9. '',"' → logprob: -12.401776313781738
    10. ' ',' → logprob: -12.901776313781738

Token 2247: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.31334081292152405
    2. ''S' → logprob: -1.3133407831192017
    3. ''' → logprob: -10.43834114074707
    4. ''s' → logprob: -11.31334114074707
    5. ' S' → logprob: -11.43834114074707
    6. '   ' → logprob: -11.68834114074707
    7. '"S' → logprob: -12.81334114074707
    8. '`' → logprob: -13.06334114074707
    9. ' ' → logprob: -13.31334114074707
    10. ''''' → logprob: -13.81334114074707

Token 2248: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.0046399300917983055
    2. '):
' → logprob: -5.754640102386475
    3. '')' → logprob: -7.379640102386475
    4. ''):' → logprob: -8.129639625549316
    5. ')' → logprob: -8.254639625549316
    6. '                       ' → logprob: -8.879639625549316
    7. ',' → logprob: -10.129639625549316
    8. ''):
' → logprob: -10.504639625549316
    9. '                           ' → logprob: -10.629639625549316
    10. '',' → logprob: -11.504639625549316

Token 2249: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.025398366153240204
    2. '                               ' → logprob: -4.150398254394531
    3. ':' → logprob: -5.400398254394531
    4. '                       ' → logprob: -6.650398254394531
    5. 'wait' → logprob: -7.525398254394531
    6. ':
' → logprob: -7.650398254394531
    7. '                            ' → logprob: -7.775398254394531
    8. '                            
' → logprob: -8.400398254394531
    9. 'waiting' → logprob: -8.525398254394531
    10. '```' → logprob: -8.650398254394531

Token 2250: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.005988758988678455
    2. 'waiting' → logprob: -5.505988597869873
    3. 'arrival' → logprob: -6.880988597869873
    4. '                           ' → logprob: -7.880988597869873
    5. 'if' → logprob: -8.880989074707031
    6. ' wait' → logprob: -9.005989074707031
    7. '                               ' → logprob: -9.630989074707031
    8. 'time' → logprob: -10.630989074707031
    9. 'delay' → logprob: -10.630989074707031
    10. '(wait' → logprob: -10.630989074707031

Token 2251: ' NS' (ID: 6950)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.38817840814590454
    2. 'if' → logprob: -1.1381783485412598
    3. 'waiting' → logprob: -7.51317834854126
    4. '                           ' → logprob: -7.63817834854126
    5. '                               ' → logprob: -9.638178825378418
    6. '                       ' → logprob: -9.888178825378418
    7. 'arrival' → logprob: -9.888178825378418
    8. 'delay' → logprob: -11.013178825378418
    9. '```' → logprob: -11.013178825378418
    10. ' if' → logprob: -11.138178825378418

Token 2252: ' green' (ID: 8851)
  Prédit: '_green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.1179606020450592
    2. 'if' → logprob: -2.7429606914520264
    3. 'green' → logprob: -3.6179606914520264
    4. '                       ' → logprob: -4.617960453033447
    5. '                           ' → logprob: -5.992960453033447
    6. '_time' → logprob: -7.117960453033447
    7. '                   ' → logprob: -7.242960453033447
    8. ' green' → logprob: -7.617960453033447
    9. '```' → logprob: -7.617960453033447
    10. '_GREEN' → logprob: -7.742960453033447

Token 2253: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.20486323535442352
    2. 'if' → logprob: -2.5798633098602295
    3. '                       ' → logprob: -2.5798633098602295
    4. '                               ' → logprob: -4.20486307144165
    5. ' if' → logprob: -5.32986307144165
    6. ':
' → logprob: -5.32986307144165
    7. ':' → logprob: -5.82986307144165
    8. ',' → logprob: -6.07986307144165
    9. 'elif' → logprob: -7.32986307144165
    10. '
' → logprob: -7.70486307144165

Token 2254: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0008056987426243722
    2. ' time' → logprob: -7.125805854797363
    3. '   ' → logprob: -14.875805854797363
    4. '                           ' → logprob: -15.875805854797363
    5. '	time' → logprob: -15.875805854797363
    6. '                               ' → logprob: -16.125804901123047
    7. '"time' → logprob: -16.125804901123047
    8. 'phase' → logprob: -16.375804901123047
    9. '=time' → logprob: -16.500804901123047
    10. '                       ' → logprob: -16.625804901123047

Token 2255: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -8.828512363834307e-05
    2. 'in' → logprob: -9.500088691711426
    3. '<' → logprob: -11.750088691711426
    4. 'In' → logprob: -14.125088691711426
    5. 's' → logprob: -14.375088691711426
    6. '	in' → logprob: -14.500088691711426
    7. '                   ' → logprob: -14.750088691711426
    8. '                       ' → logprob: -14.875088691711426
    9. ' <' → logprob: -15.125088691711426
    10. '  ' → logprob: -15.500088691711426

Token 2256: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -0.020577741786837578
    2. 'cycle' → logprob: -3.8955776691436768
    3. ' cycle' → logprob: -12.145577430725098
    4. 'Cycle' → logprob: -12.270577430725098
    5. 'c' → logprob: -12.395577430725098
    6. '_c' → logprob: -12.645577430725098
    7. 'in' → logprob: -12.645577430725098
    8. '<' → logprob: -12.895577430725098
    9. '_in' → logprob: -12.895577430725098
    10. '   ' → logprob: -12.895577430725098

Token 2257: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04871102422475815
    2. ' <' → logprob: -3.048711061477661
    3. '<size' → logprob: -11.048710823059082
    4. '<class' → logprob: -11.423710823059082
    5. '<int' → logprob: -11.673710823059082
    6. '<|end|>' → logprob: -11.673710823059082
    7. '<n' → logprob: -11.923710823059082
    8. '<th' → logprob: -12.548710823059082
    9. '<len' → logprob: -12.548710823059082
    10. '<s' → logprob: -12.673710823059082

Token 2258: ' k' (ID: 372)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0009511216776445508
    2. ' cycle' → logprob: -7.000951290130615
    3. 'self' → logprob: -10.375950813293457
    4. 'signal' → logprob: -13.000950813293457
    5. '                   ' → logprob: -13.750950813293457
    6. '                       ' → logprob: -13.875950813293457
    7. '```' → logprob: -13.875950813293457
    8. '   ' → logprob: -14.375950813293457
    9. '                           ' → logprob: -14.500950813293457
    10. ' ' → logprob: -15.250950813293457

Token 2259: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2420266568660736
    2. '                               ' → logprob: -1.867026686668396
    3. ':
' → logprob: -3.8670265674591064
    4. ':' → logprob: -4.1170268058776855
    5. '                       ' → logprob: -4.1170268058776855
    6. 'else' → logprob: -6.2420268058776855
    7. '+' → logprob: -7.6170268058776855
    8. ',' → logprob: -7.7420268058776855
    9. '                                   ' → logprob: -7.7420268058776855
    10. '                            ' → logprob: -7.7420268058776855

Token 2260: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.842340350151062
    2. 'else' → logprob: -0.842340350151062
    3. ' else' → logprob: -2.3423404693603516
    4. '                               ' → logprob: -3.3423404693603516
    5. '                       ' → logprob: -5.717340469360352
    6. ':' → logprob: -6.467340469360352
    7. ':
' → logprob: -6.592340469360352
    8. '=' → logprob: -7.967340469360352
    9. '                            ' → logprob: -9.592340469360352
    10. 'elif' → logprob: -9.717340469360352

Token 2261: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' (adapté à ' wait') → logprob: -0.08021224290132523
    2. 'if' → logprob: -2.705212354660034
    3. '                           ' → logprob: -5.205212116241455
    4. 'waiting' → logprob: -5.580212116241455
    5. '                               ' → logprob: -7.580212116241455
    6. ' wait' → logprob: -8.580212593078613
    7. ' if' → logprob: -9.580212593078613
    8. 'delay' → logprob: -10.205212593078613
    9. 'next' → logprob: -10.580212593078613
    10. 'await' → logprob: -10.830212593078613

Token 2262: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.004564342088997364
    2. '=' → logprob: -6.00456428527832
    3. '_' → logprob: -6.75456428527832
    4. ' =' → logprob: -7.12956428527832
    5. 'time' → logprob: -10.37956428527832
    6. '_=' → logprob: -10.62956428527832
    7. '_until' → logprob: -11.37956428527832
    8. '_times' → logprob: -11.37956428527832
    9. '_needed' → logprob: -11.50456428527832
    10. '_t' → logprob: -11.62956428527832

Token 2263: ' ' (ID: 220)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.007052679546177387
    2. '0' → logprob: -6.132052898406982
    3. '(c' → logprob: -6.132052898406982
    4. 'self' → logprob: -6.882052898406982
    5. '(' → logprob: -7.632052898406982
    6. ' cycle' → logprob: -7.882052898406982
    7. 'signal' → logprob: -7.882052898406982
    8. '2' → logprob: -10.132052421569824
    9. '   ' → logprob: -10.257052421569824
    10. '((' → logprob: -10.382052421569824

Token 2264: '0' (ID: 15)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.11656779795885086
    2. '(c' → logprob: -2.741567850112915
    3. '0' → logprob: -3.491567850112915
    4. '(' → logprob: -4.366567611694336
    5. 'signal' → logprob: -7.366567611694336
    6. '((' → logprob: -7.616567611694336
    7. ' cycle' → logprob: -8.366567611694336
    8. '(signal' → logprob: -8.741567611694336
    9. 'self' → logprob: -8.866567611694336
    10. '2' → logprob: -8.991567611694336

Token 2265: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14241763949394226
    2. 'if' → logprob: -3.1424176692962646
    3. ' if' → logprob: -3.2674176692962646
    4. 'else' → logprob: -3.7674176692962646
    5. '                           ' → logprob: -4.2674174308776855
    6. '
' → logprob: -5.0174174308776855
    7. 'elif' → logprob: -5.3924174308776855
    8. '					' → logprob: -7.6424174308776855
    9. '                               ' → logprob: -7.7674174308776855
    10. '<|end|>' → logprob: -8.267417907714844

Token 2266: '                           ' (ID: 1686)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7481202483177185
    2. '                       ' → logprob: -1.1231203079223633
    3. ' else' → logprob: -2.8731203079223633
    4. ' if' → logprob: -2.9981203079223633
    5. '<|end|>' → logprob: -3.7481203079223633
    6. 'elif' → logprob: -3.9981203079223633
    7. '                           ' → logprob: -4.248120307922363
    8. '
' → logprob: -4.623120307922363
    9. 'if' → logprob: -4.873120307922363
    10. '                        ' → logprob: -5.998120307922363

Token 2267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01730789802968502
    2. 'else' → logprob: -4.517307758331299
    3. '                           ' → logprob: -5.517307758331299
    4. 'elif' → logprob: -6.267307758331299
    5. '                       ' → logprob: -8.767308235168457
    6. ' if' → logprob: -8.892308235168457
    7. '                               ' → logprob: -10.892308235168457
    8. 'while' → logprob: -12.392308235168457
    9. '                            ' → logprob: -13.017308235168457
    10. '                   ' → logprob: -13.892308235168457

Token 2268: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -7.40998875699006e-05
    2. ' time' → logprob: -9.75007438659668
    3. 'not' → logprob: -11.25007438659668
    4. '   ' → logprob: -13.37507438659668
    5. '(time' → logprob: -15.12507438659668
    6. '	time' → logprob: -15.25007438659668
    7. '"time' → logprob: -15.50007438659668
    8. '           ' → logprob: -16.00007438659668
    9. '                   ' → logprob: -16.37507438659668
    10. '!' → logprob: -16.87507438659668

Token 2269: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0002993544621858746
    2. 'in' → logprob: -8.625299453735352
    3. '>' → logprob: -10.000299453735352
    4. '=' → logprob: -12.000299453735352
    5. '_' → logprob: -12.000299453735352
    6. ' _' → logprob: -12.000299453735352
    7. '   ' → logprob: -12.125299453735352
    8. 'In' → logprob: -12.125299453735352
    9. '                   ' → logprob: -12.625299453735352
    10. '_i' → logprob: -12.750299453735352

Token 2270: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -0.01423379685729742
    2. 'cycle' → logprob: -4.264233589172363
    3. 'Cycle' → logprob: -11.389233589172363
    4. 'ycle' → logprob: -11.639233589172363
    5. ' cycle' → logprob: -11.889233589172363
    6. '
' → logprob: -12.139233589172363
    7. '-cycle' → logprob: -12.639233589172363
    8. '_time' → logprob: -12.764233589172363
    9. '_c' → logprob: -12.889233589172363
    10. '...' → logprob: -13.014233589172363

Token 2271: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07044507563114166
    2. ' >=' → logprob: -2.6954450607299805
    3. ')>=' → logprob: -8.69544506072998
    4. ']>=' → logprob: -9.07044506072998
    5. '>' → logprob: -9.19544506072998
    6. '<' → logprob: -10.07044506072998
    7. '[' → logprob: -10.94544506072998
    8. ')' → logprob: -11.07044506072998
    9. '≥' → logprob: -11.19544506072998
    10. ' <' → logprob: -12.07044506072998

Token 2272: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0006525091012008488
    2. ' cycle' → logprob: -7.500652313232422
    3. 'signal' → logprob: -9.250652313232422
    4. 'self' → logprob: -14.375652313232422
    5. '0' → logprob: -14.500652313232422
    6. '                           ' → logprob: -14.875652313232422
    7. '
' → logprob: -15.125652313232422
    8. '                       ' → logprob: -15.250652313232422
    9. '                   ' → logprob: -15.625652313232422
    10. '   ' → logprob: -15.625652313232422

Token 2273: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.433658242225647
    2. ':' → logprob: -1.308658242225647
    3. '                               ' → logprob: -2.6836581230163574
    4. '                           ' → logprob: -4.433658123016357
    5. ' and' → logprob: -7.433658123016357
    6. '                       ' → logprob: -8.058658599853516
    7. '                                   ' → logprob: -9.183658599853516
    8. '+' → logprob: -9.558658599853516
    9. '               ' → logprob: -10.058658599853516
    10. ',' → logprob: -10.433658599853516

Token 2274: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.029285909608006477
    2. 'wait' → logprob: -3.9042859077453613
    3. '                           ' → logprob: -5.404285907745361
    4. ' wait' → logprob: -5.904285907745361
    5. '                                   ' → logprob: -7.279285907745361
    6. '(wait' → logprob: -8.15428638458252
    7. '							' → logprob: -9.15428638458252
    8. ':
' → logprob: -9.65428638458252
    9. '	wait' → logprob: -9.65428638458252
    10. '```' → logprob: -10.02928638458252

Token 2275: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' (adapté à ' wait') → logprob: -0.00026729601086117327
    2. ' wait' → logprob: -8.250267028808594
    3. '                               ' → logprob: -12.375267028808594
    4. '                                   ' → logprob: -13.875267028808594
    5. '(wait' → logprob: -15.000267028808594
    6. 'waiting' → logprob: -15.500267028808594
    7. '```' → logprob: -15.750267028808594
    8. '	wait' → logprob: -16.500267028808594
    9. '
' → logprob: -16.625267028808594
    10. '``' → logprob: -18.125267028808594

Token 2276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02325037121772766
    2. ' =' → logprob: -3.7732503414154053
    3. 's' → logprob: -12.773250579833984
    4. '+=' → logprob: -13.773250579833984
    5. '=
' → logprob: -14.023250579833984
    6. ' +=' → logprob: -15.898250579833984
    7. '.=' → logprob: -17.148250579833984
    8. '＝' → logprob: -17.398250579833984
    9. '<|end|>' → logprob: -17.773250579833984
    10. '.' → logprob: -17.898250579833984

Token 2277: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6330742239952087
    2. '2' → logprob: -0.7580742239952087
    3. ' (' → logprob: -8.008073806762695
    4. ' ' → logprob: -9.883073806762695
    5. '((' → logprob: -10.508073806762695
    6. '   ' → logprob: -10.633073806762695
    7. '       ' → logprob: -12.008073806762695
    8. 'cycle' → logprob: -12.133073806762695
    9. '                       ' → logprob: -12.383073806762695
    10. '           ' → logprob: -12.758073806762695

Token 2278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018625108525156975
    2. '(' → logprob: -4.143625259399414
    3. 'cycle' → logprob: -6.018625259399414
    4. ' ' → logprob: -10.143625259399414
    5. '(c' → logprob: -10.143625259399414
    6. '(k' → logprob: -10.893625259399414
    7. '((' → logprob: -11.393625259399414
    8. ' (' → logprob: -11.393625259399414
    9. 'c' → logprob: -12.143625259399414
    10. '   ' → logprob: -12.393625259399414

Token 2279: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04859157279133797
    2. ' *' → logprob: -3.0485916137695312
    3. '*self' → logprob: -12.798591613769531
    4. '*c' → logprob: -14.298591613769531
    5. '*object' → logprob: -14.673591613769531
    6. '**' → logprob: -15.798591613769531
    7. '```' → logprob: -17.29859161376953
    8. '`' → logprob: -17.67359161376953
    9. '           ' → logprob: -17.79859161376953
    10. ')' → logprob: -17.92359161376953

Token 2280: 'cycle' (ID: 24879)
  Prédit: 'cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -9.186122770188376e-05
    2. ' cycle' → logprob: -9.750091552734375
    3. ' ' → logprob: -11.875091552734375
    4. '`' → logprob: -12.250091552734375
    5. '
' → logprob: -12.500091552734375
    6. '[' → logprob: -12.875091552734375
    7. 'self' → logprob: -13.375091552734375
    8. '```' → logprob: -13.375091552734375
    9. 'signal' → logprob: -13.500091552734375
    10. ')' → logprob: -13.500091552734375

Token 2281: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17198000848293304
    2. '-' → logprob: -2.0469799041748047
    3. ')' → logprob: -3.5469799041748047
    4. ')-' → logprob: -9.921979904174805
    5. ' )' → logprob: -12.046979904174805
    6. ' ' → logprob: -12.171979904174805
    7. '   ' → logprob: -13.421979904174805
    8. '-)' → logprob: -13.921979904174805
    9. '        ' → logprob: -14.171979904174805
    10. '       ' → logprob: -14.421979904174805

Token 2282: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38687339425086975
    2. '-' → logprob: -1.1368733644485474
    3. '-time' → logprob: -14.011873245239258
    4. ' ' → logprob: -14.886873245239258
    5. '–' → logprob: -15.636873245239258
    6. '+' → logprob: -15.761873245239258
    7. ' ' → logprob: -15.886873245239258
    8. '   ' → logprob: -16.511873245239258
    9. '−' → logprob: -16.511873245239258
    10. '-t' → logprob: -16.636873245239258

Token 2283: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00015872348740231246
    2. ' time' → logprob: -8.750158309936523
    3. '(time' → logprob: -15.250158309936523
    4. '"time' → logprob: -17.875158309936523
    5. '	time' → logprob: -19.000158309936523
    6. '=time' → logprob: -19.625158309936523
    7. 'Time' → logprob: -20.750158309936523
    8. '   ' → logprob: -20.875158309936523
    9. '_time' → logprob: -21.250158309936523
    10. 'cycle' → logprob: -21.625158309936523

Token 2284: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.3075999915599823
    2. 'arrival' → logprob: -1.4326000213623047
    3. '_time' → logprob: -3.9326000213623047
    4. 'in' → logprob: -5.932600021362305
    5. '_arr' → logprob: -6.057600021362305
    6. 'arr' → logprob: -8.057600021362305
    7. ' arrival' → logprob: -8.182600021362305
    8. ')' → logprob: -8.182600021362305
    9. 'In' → logprob: -8.307600021362305
    10. 'time' → logprob: -9.057600021362305

Token 2285: '_cycle' (ID: 97714)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.04900653287768364
    2. '_cycle' → logprob: -3.049006462097168
    3. 'time' → logprob: -8.424006462097168
    4. 'arrival' → logprob: -8.799006462097168
    5. ' cycle' → logprob: -10.799006462097168
    6. 'ycle' → logprob: -11.674006462097168
    7. '_time' → logprob: -11.674006462097168
    8. 'wait' → logprob: -13.549006462097168
    9. '-cycle' → logprob: -13.549006462097168
    10. 'Cycle' → logprob: -13.674006462097168

Token 2286: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.021739758551120758
    2. '                           ' → logprob: -4.521739959716797
    3. 'else' → logprob: -5.021739959716797
    4. ' else' → logprob: -6.771739959716797
    5. '                               ' → logprob: -6.896739959716797
    6. '
' → logprob: -7.646739959716797
    7. ')' → logprob: -8.021739959716797
    8. '               ' → logprob: -8.146739959716797
    9. '                   ' → logprob: -8.646739959716797
    10. '                        
' → logprob: -8.646739959716797

Token 2287: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03402680903673172
    2. '                           ' → logprob: -3.909026861190796
    3. 'else' → logprob: -4.909026622772217
    4. '                               ' → logprob: -5.534026622772217
    5. ' else' → logprob: -7.659026622772217
    6. '
' → logprob: -7.659026622772217
    7. '                        
' → logprob: -8.534027099609375
    8. '               ' → logprob: -8.659027099609375
    9. '                   ' → logprob: -8.784027099609375
    10. ')' → logprob: -8.909027099609375

Token 2288: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4136112332344055
    2. '                       ' → logprob: -1.6636111736297607
    3. ' else' → logprob: -1.9136111736297607
    4. '                           ' → logprob: -7.16361141204834
    5. '                               ' → logprob: -8.03861141204834
    6. 'elif' → logprob: -8.53861141204834
    7. '                        ' → logprob: -9.78861141204834
    8. '	else' → logprob: -9.91361141204834
    9. '					' → logprob: -10.03861141204834
    10. ' elif' → logprob: -10.03861141204834

Token 2289: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.8455913066864014
    2. ':
' → logprob: -1.4705913066864014
    3. ':' → logprob: -1.5955913066864014
    4. '                       ' → logprob: -2.0955913066864014
    5. ' :' → logprob: -5.3455915451049805
    6. '                        ' → logprob: -5.8455915451049805
    7. '                               ' → logprob: -6.0955915451049805
    8. ' :
' → logprob: -6.7205915451049805
    9. '                            ' → logprob: -7.0955915451049805
    10. '                          ' → logprob: -7.4705915451049805

Token 2290: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.05924908444285393
    2. '                       ' → logprob: -3.18424916267395
    3. '                               ' → logprob: -4.309248924255371
    4. '                        ' → logprob: -7.184248924255371
    5. '                            ' → logprob: -8.059248924255371
    6. ' wait' → logprob: -8.434248924255371
    7. '                        
' → logprob: -8.684248924255371
    8. '           ' → logprob: -8.809248924255371
    9. '```' → logprob: -8.934248924255371
    10. '                            
' → logprob: -9.059248924255371

Token 2291: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.007899156771600246
    2. ' wait' → logprob: -5.382899284362793
    3. '                           ' → logprob: -6.632899284362793
    4. '                       ' → logprob: -6.632899284362793
    5. 'if' → logprob: -8.132899284362793
    6. '                               ' → logprob: -8.382899284362793
    7. '(wait' → logprob: -10.507899284362793
    8. 'waiting' → logprob: -11.382899284362793
    9. '                   ' → logprob: -11.507899284362793
    10. '	wait' → logprob: -11.757899284362793

Token 2292: ' EW' (ID: 143307)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.0013010689290240407
    2. 'if' → logprob: -7.501301288604736
    3. ' wait' → logprob: -8.001300811767578
    4. '                               ' → logprob: -8.876300811767578
    5. 'time' → logprob: -8.876300811767578
    6. '                           ' → logprob: -9.126300811767578
    7. '                                   ' → logprob: -12.501300811767578
    8. '
' → logprob: -12.501300811767578
    9. 'waiting' → logprob: -12.876300811767578
    10. '(wait' → logprob: -12.876300811767578

Token 2293: ' green' (ID: 8851)
  Prédit: '_green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_green' → logprob: -0.5652310848236084
    2. 'green' → logprob: -1.8152310848236084
    3. ' green' → logprob: -1.9402310848236084
    4. ' wait' → logprob: -3.0652310848236084
    5. 'wait' → logprob: -3.4402310848236084
    6. '_in' → logprob: -4.3152313232421875
    7. ' in' → logprob: -4.6902313232421875
    8. '_time' → logprob: -5.1902313232421875
    9. 'in' → logprob: -5.8152313232421875
    10. ')' → logprob: -6.3152313232421875

Token 2294: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6233117580413818
    2. ' =' → logprob: -1.4983117580413818
    3. '=' → logprob: -1.8733117580413818
    4. ' if' → logprob: -2.873311758041382
    5. 'if' → logprob: -3.748311758041382
    6. '                       ' → logprob: -6.498311996459961
    7. 'wait' → logprob: -6.498311996459961
    8. ' wait' → logprob: -6.998311996459961
    9. ':' → logprob: -7.373311996459961
    10. '                            ' → logprob: -7.498311996459961

Token 2295: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.002212346764281392
    2. ' time' → logprob: -6.1272125244140625
    3. 'wait' → logprob: -11.002212524414062
    4. '   ' → logprob: -12.502212524414062
    5. '(time' → logprob: -12.752212524414062
    6. 'cycle' → logprob: -14.002212524414062
    7. 'not' → logprob: -14.377212524414062
    8. ' wait' → logprob: -14.502212524414062
    9. '0' → logprob: -14.502212524414062
    10. '           ' → logprob: -15.252212524414062

Token 2296: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.003616585396230221
    2. 'in' → logprob: -5.628616809844971
    3. 'wait' → logprob: -11.378616333007812
    4. '   ' → logprob: -13.628616333007812
    5. 'In' → logprob: -13.753616333007812
    6. '=' → logprob: -14.378616333007812
    7. '_wait' → logprob: -14.378616333007812
    8. '```' → logprob: -15.003616333007812
    9. '                   ' → logprob: -15.503616333007812
    10. '           ' → logprob: -16.128616333007812

Token 2297: '_cycle' (ID: 97714)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0434858575463295
    2. '_cycle' → logprob: -3.1684858798980713
    3. 'time' → logprob: -8.668485641479492
    4. '_in' → logprob: -9.043485641479492
    5. 'ycle' → logprob: -9.293485641479492
    6. ' cycle' → logprob: -9.793485641479492
    7. '   ' → logprob: -10.918485641479492
    8. 'in' → logprob: -11.668485641479492
    9. '-cycle' → logprob: -11.918485641479492
    10. '
' → logprob: -11.918485641479492

Token 2298: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09233469516038895
    2. ' <' → logprob: -2.467334747314453
    3. '>=' → logprob: -6.092334747314453
    4. ' >=' → logprob: -6.842334747314453
    5. '                           ' → logprob: -11.092334747314453
    6. '<E' → logprob: -11.717334747314453
    7. '<n' → logprob: -12.217334747314453
    8. '<w' → logprob: -12.592334747314453
    9. '                       ' → logprob: -12.842334747314453
    10. '<size' → logprob: -13.092334747314453

Token 2299: ' k' (ID: 372)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.002505386248230934
    2. ' cycle' → logprob: -6.002505302429199
    3. 'self' → logprob: -11.0025053024292
    4. ' ' → logprob: -12.2525053024292
    5. '   ' → logprob: -12.8775053024292
    6. '0' → logprob: -13.2525053024292
    7. '1' → logprob: -14.3775053024292
    8. '           ' → logprob: -14.5025053024292
    9. '       ' → logprob: -14.8775053024292
    10. 'circle' → logprob: -15.1275053024292

Token 2300: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4978043735027313
    2. '=' → logprob: -1.8728044033050537
    3. ' =' → logprob: -1.9978044033050537
    4. '                       ' → logprob: -2.9978044033050537
    5. '                               ' → logprob: -3.6228044033050537
    6. ':' → logprob: -4.872804164886475
    7. '                        ' → logprob: -5.622804164886475
    8. '
' → logprob: -5.747804164886475
    9. '                            ' → logprob: -5.747804164886475
    10. ':
' → logprob: -5.997804164886475

Token 2301: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.17200560867786407
    2. ' =' → logprob: -2.4220056533813477
    3. '=' → logprob: -3.0470056533813477
    4. '                               ' → logprob: -4.422005653381348
    5. 'wait' → logprob: -5.422005653381348
    6. '                            ' → logprob: -6.922005653381348
    7. '                       ' → logprob: -6.922005653381348
    8. '                            
' → logprob: -7.172005653381348
    9. ' wait' → logprob: -7.922005653381348
    10. ':' → logprob: -8.047005653381348

Token 2302: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' (adapté à ' wait') → logprob: -0.10280762612819672
    2. 'if' → logprob: -2.3528075218200684
    3. ' wait' → logprob: -6.352807521820068
    4. ' if' → logprob: -7.227807521820068
    5. '                           ' → logprob: -9.227807998657227
    6. '                               ' → logprob: -10.602807998657227
    7. '                       ' → logprob: -13.227807998657227
    8. '(wait' → logprob: -13.977807998657227
    9. '                            ' → logprob: -14.102807998657227
    10. 'waiting' → logprob: -14.227807998657227

Token 2303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868745267391205
    2. '=' → logprob: -1.1368745565414429
    3. ' ' → logprob: -14.386874198913574
    4. '=
' → logprob: -14.511874198913574
    5. '                        ' → logprob: -14.761874198913574
    6. ' =
' → logprob: -15.261874198913574
    7. ' +=' → logprob: -15.386874198913574
    8. '                           ' → logprob: -16.01187515258789
    9. '            ' → logprob: -16.01187515258789
    10. ' ' → logprob: -16.13687515258789

Token 2304: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.058874450623989105
    2. 'cycle' → logprob: -2.9338743686676025
    3. '(c' → logprob: -6.808874607086182
    4. '0' → logprob: -6.808874607086182
    5. '2' → logprob: -7.183874607086182
    6. ' (' → logprob: -7.308874607086182
    7. 'signal' → logprob: -9.558874130249023
    8. ' cycle' → logprob: -9.558874130249023
    9. '(signal' → logprob: -9.808874130249023
    10. 'max' → logprob: -10.058874130249023

Token 2305: '0' (ID: 15)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.2777884304523468
    2. '(' → logprob: -1.5277884006500244
    3. '0' → logprob: -4.1527886390686035
    4. '(c' → logprob: -5.0277886390686035
    5. '2' → logprob: -6.7777886390686035
    6. 'max' → logprob: -6.9027886390686035
    7. '(max' → logprob: -8.277788162231445
    8. ' cycle' → logprob: -8.402788162231445
    9. 'signal' → logprob: -8.652788162231445
    10. '((' → logprob: -9.152788162231445

Token 2306: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.007189149968326092
    2. '                       ' → logprob: -5.7571892738342285
    3. ' if' → logprob: -6.5071892738342285
    4. '
' → logprob: -7.1321892738342285
    5. 'if' → logprob: -7.5071892738342285
    6. '						' → logprob: -8.00718879699707
    7. '                               ' → logprob: -8.13218879699707
    8. '                            
' → logprob: -8.63218879699707
    9. '                            ' → logprob: -9.13218879699707
    10. '                        ' → logprob: -10.25718879699707

Token 2307: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.08723774552345276
    2. ' if' → logprob: -2.96223783493042
    3. '                               ' → logprob: -4.08723783493042
    4. '                       ' → logprob: -4.58723783493042
    5. 'if' → logprob: -5.96223783493042
    6. '                            ' → logprob: -7.71223783493042
    7. '                        ' → logprob: -7.83723783493042
    8. ' else' → logprob: -8.712237358093262
    9. '
' → logprob: -8.962237358093262
    10. '                            
' → logprob: -8.962237358093262

Token 2308: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.8444881536415778e-05
    2. ' if' → logprob: -10.500028610229492
    3. '                           ' → logprob: -14.000028610229492
    4. '                       ' → logprob: -17.875028610229492
    5. 'elif' → logprob: -18.250028610229492
    6. '                               ' → logprob: -19.625028610229492
    7. '```' → logprob: -19.750028610229492
    8. ' ' → logprob: -20.000028610229492
    9. 'If' → logprob: -20.125028610229492
    10. 'else' → logprob: -20.125028610229492

Token 2309: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0008068907191045582
    2. ' time' → logprob: -7.12580680847168
    3. 'not' → logprob: -14.12580680847168
    4. '   ' → logprob: -14.75080680847168
    5. 'arrival' → logprob: -14.87580680847168
    6. '	time' → logprob: -15.12580680847168
    7. 'arr' → logprob: -15.12580680847168
    8. '(time' → logprob: -15.25080680847168
    9. ' not' → logprob: -16.75080680847168
    10. '"time' → logprob: -17.25080680847168

Token 2310: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -8.745069499127567e-05
    2. 'in' → logprob: -9.37508773803711
    3. '   ' → logprob: -14.25008773803711
    4. 'In' → logprob: -15.12508773803711
    5. '>' → logprob: -15.12508773803711
    6. '                   ' → logprob: -15.87508773803711
    7. '...' → logprob: -16.00008773803711
    8. '=' → logprob: -16.37508773803711
    9. '                       ' → logprob: -16.50008773803711
    10. '_out' → logprob: -16.62508773803711

Token 2311: '_cycle' (ID: 97714)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.03401816636323929
    2. '_cycle' → logprob: -3.4090182781219482
    3. 'time' → logprob: -8.159018516540527
    4. '_in' → logprob: -9.909018516540527
    5. ' cycle' → logprob: -11.034018516540527
    6. 'in' → logprob: -11.784018516540527
    7. '
' → logprob: -12.534018516540527
    8. 'ycle' → logprob: -12.909018516540527
    9. 'arrival' → logprob: -12.909018516540527
    10. 'course' → logprob: -14.159018516540527

Token 2312: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01611049845814705
    2. ' <' → logprob: -4.141110420227051
    3. '<class' → logprob: -10.39111042022705
    4. '<int' → logprob: -11.51611042022705
    5. '<size' → logprob: -11.76611042022705
    6. '<n' → logprob: -12.51611042022705
    7. '<E' → logprob: -13.14111042022705
    8. '<th' → logprob: -13.26611042022705
    9. '[' → logprob: -13.26611042022705
    10. '<count' → logprob: -13.51611042022705

Token 2313: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.003813376184552908
    2. ' cycle' → logprob: -5.62881326675415
    3. 'self' → logprob: -8.878813743591309
    4. '       ' → logprob: -10.878813743591309
    5. '   ' → logprob: -11.003813743591309
    6. 'chain' → logprob: -11.878813743591309
    7. ' ' → logprob: -12.128813743591309
    8. '           ' → logprob: -12.378813743591309
    9. '1' → logprob: -12.878813743591309
    10. '
' → logprob: -13.003813743591309

Token 2314: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.10878919810056686
    2. '                           ' → logprob: -2.7337892055511475
    3. ':
' → logprob: -3.4837892055511475
    4. ':' → logprob: -5.108788967132568
    5. '                                   ' → logprob: -8.108789443969727
    6. '                       ' → logprob: -8.108789443969727
    7. '+' → logprob: -9.108789443969727
    8. ' =' → logprob: -9.358789443969727
    9. '=' → logprob: -9.483789443969727
    10. '                              ' → logprob: -9.483789443969727

Token 2315: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.19729746878147125
    2. '                           ' → logprob: -1.82229745388031
    3. 'wait' → logprob: -5.0722975730896
    4. ' wait' → logprob: -5.5722975730896
    5. ' =' → logprob: -5.8222975730896
    6. '                                   ' → logprob: -5.9472975730896
    7. '                            ' → logprob: -7.5722975730896
    8. '=' → logprob: -8.072297096252441
    9. '(wait' → logprob: -9.072297096252441
    10. '                       ' → logprob: -9.072297096252441

Token 2316: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' (adapté à ' wait') → logprob: -3.726595241460018e-05
    2. ' wait' → logprob: -10.25003719329834
    3. '                               ' → logprob: -13.25003719329834
    4. '	wait' → logprob: -17.875038146972656
    5. 'waiting' → logprob: -18.125038146972656
    6. '                                   ' → logprob: -18.250038146972656
    7. '(wait' → logprob: -18.375038146972656
    8. '   ' → logprob: -19.125038146972656
    9. '```' → logprob: -19.875038146972656
    10. '                                ' → logprob: -19.875038146972656

Token 2317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00010914575977949426
    2. ' =' → logprob: -9.12510871887207
    3. '+=' → logprob: -15.62510871887207
    4. '=
' → logprob: -17.37510871887207
    5. '.=' → logprob: -18.75010871887207
    6. '=

' → logprob: -19.25010871887207
    7. '＝' → logprob: -19.62510871887207
    8. '=int' → logprob: -20.87510871887207
    9. '=}' → logprob: -21.00010871887207
    10. ' +=' → logprob: -21.12510871887207

Token 2318: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0007107630372047424
    2. ' cycle' → logprob: -7.250710964202881
    3. 'cycl' → logprob: -15.500710487365723
    4. '   ' → logprob: -15.750710487365723
    5. 'cycled' → logprob: -16.37571144104004
    6. 'chain' → logprob: -16.87571144104004
    7. '(c' → logprob: -17.00071144104004
    8. 'cycling' → logprob: -17.12571144104004
    9. ' (' → logprob: -17.25071144104004
    10. '(' → logprob: -17.25071144104004

Token 2319: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0033943254966288805
    2. '-' → logprob: -5.75339412689209
    3. '                               ' → logprob: -9.12839412689209
    4. ' ' → logprob: -9.87839412689209
    5. '                                ' → logprob: -10.87839412689209
    6. ' ' → logprob: -11.25339412689209
    7. '<|end|>' → logprob: -12.12839412689209
    8. '<|end|>' → logprob: -12.75339412689209
    9. '                                   ' → logprob: -13.00339412689209
    10. ' –' → logprob: -13.37839412689209

Token 2320: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0007100477814674377
    2. ' time' → logprob: -7.2507100105285645
    3. '(time' → logprob: -17.875709533691406
    4. '	time' → logprob: -18.375709533691406
    5. '"time' → logprob: -19.250709533691406
    6. '=time' → logprob: -20.375709533691406
    7. '_time' → logprob: -20.875709533691406
    8. 'Time' → logprob: -21.500709533691406
    9. '   ' → logprob: -21.750709533691406
    10. 'int' → logprob: -21.875709533691406

Token 2321: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0019373197574168444
    2. 'in' → logprob: -6.251937389373779
    3. 'ime' → logprob: -12.626936912536621
    4. 'In' → logprob: -12.626936912536621
    5. 'n' → logprob: -14.251936912536621
    6. '_time' → logprob: -15.126936912536621
    7. ')' → logprob: -15.251936912536621
    8. 'int' → logprob: -16.251937866210938
    9. '	in' → logprob: -16.501937866210938
    10. 'im' → logprob: -16.626937866210938

Token 2322: '_cycle' (ID: 97714)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.2633771598339081
    2. 'time' → logprob: -1.5133771896362305
    3. '_cycle' → logprob: -4.7633771896362305
    4. 'arrival' → logprob: -6.0133771896362305
    5. '_time' → logprob: -8.01337718963623
    6. ' cycle' → logprob: -11.01337718963623
    7. ' arrival' → logprob: -11.63837718963623
    8. '```' → logprob: -11.76337718963623
    9. 'type' → logprob: -12.13837718963623
    10. '
' → logprob: -12.38837718963623

Token 2323: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5385925769805908
    2. '                       ' → logprob: -1.0385925769805908
    3. 'arrival' → logprob: -3.663592576980591
    4. ' arrival' → logprob: -4.038592338562012
    5. ')
' → logprob: -4.413592338562012
    6. '                        
' → logprob: -6.038592338562012
    7. ')' → logprob: -6.538592338562012
    8. '                   ' → logprob: -7.413592338562012
    9. ' 
' → logprob: -7.788592338562012
    10. '
' → logprob: -8.038592338562012

Token 2324: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013659057207405567
    2. 'arrival' → logprob: -4.8886590003967285
    3. ' arrival' → logprob: -5.7636590003967285
    4. '
' → logprob: -6.7636590003967285
    5. '                           ' → logprob: -7.3886590003967285
    6. '                               ' → logprob: -7.6386590003967285
    7. '                   ' → logprob: -8.013659477233887
    8. '                        
' → logprob: -9.138659477233887
    9. '               ' → logprob: -9.263659477233887
    10. '+' → logprob: -10.513659477233887

Token 2325: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' (adapté à ' arrival') → logprob: -0.09484340250492096
    2. ' arrival' → logprob: -2.4698433876037598
    3. '                   ' → logprob: -6.59484338760376
    4. '                       ' → logprob: -6.71984338760376
    5. 'departure' → logprob: -6.71984338760376
    6. '                           ' → logprob: -6.96984338760376
    7. 'arr' → logprob: -7.71984338760376
    8. '               ' → logprob: -8.469843864440918
    9. '                               ' → logprob: -8.594843864440918
    10. '                                   ' → logprob: -9.969843864440918

Token 2326: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.165027217415627e-05
    2. 'time' → logprob: -10.875021934509277
    3. 'Time' → logprob: -14.750021934509277
    4. '_arr' → logprob: -15.125021934509277
    5. '+' → logprob: -15.375021934509277
    6. '                   ' → logprob: -15.375021934509277
    7. '```' → logprob: -15.375021934509277
    8. '_' → logprob: -15.500021934509277
    9. '_TIME' → logprob: -15.625021934509277
    10. 'arrival' → logprob: -15.750021934509277

Token 2327: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01816246658563614
    2. ' +=' → logprob: -4.018162250518799
    3. '+' → logprob: -11.893162727355957
    4. '=' → logprob: -12.268162727355957
    5. ']+=' → logprob: -14.018162727355957
    6. '+='' → logprob: -17.01816177368164
    7. '   ' → logprob: -17.39316177368164
    8. '+=(' → logprob: -17.64316177368164
    9. '```' → logprob: -17.76816177368164
    10. '+="' → logprob: -17.76816177368164

Token 2328: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -3.547789674485102e-05
    2. ' wait' → logprob: -10.250035285949707
    3. '(wait' → logprob: -19.500036239624023
    4. '	wait' → logprob: -22.000036239624023
    5. 'waiting' → logprob: -23.625036239624023
    6. 'w' → logprob: -23.875036239624023
    7. '   ' → logprob: -23.875036239624023
    8. '
' → logprob: -24.125036239624023
    9. '_wait' → logprob: -24.500036239624023
    10. 'watch' → logprob: -24.875036239624023

Token 2329: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19118370115756989
    2. '
' → logprob: -1.9411836862564087
    3. '                
' → logprob: -4.066183567047119
    4. '<|end|>' → logprob: -5.316183567047119
    5. '
' → logprob: -6.316183567047119
    6. '                        
' → logprob: -7.066183567047119
    7. ',' → logprob: -7.191183567047119
    8. ')' → logprob: -7.316183567047119
    9. '                    
' → logprob: -7.316183567047119
    10. '                   ' → logprob: -7.441183567047119

Token 2330: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10152092576026917
    2. '
' → logprob: -3.1015210151672363
    3. 'new' → logprob: -4.226521015167236
    4. 'next' → logprob: -4.476521015167236
    5. ' new' → logprob: -4.601521015167236
    6. ' next' → logprob: -4.976521015167236
    7. '                
' → logprob: -5.601521015167236
    8. '```' → logprob: -6.351521015167236
    9. 'neighbor' → logprob: -6.976521015167236
    10. ',' → logprob: -7.351521015167236

Token 2331: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7016859650611877
    2. 'new' → logprob: -1.326685905456543
    3. 'next' → logprob: -1.451685905456543
    4. 'neighbor' → logprob: -6.326685905456543
    5. ' new' → logprob: -6.826685905456543
    6. ' next' → logprob: -6.951685905456543
    7. 'key' → logprob: -7.951685905456543
    8. 'if' → logprob: -8.326685905456543
    9. '                   ' → logprob: -8.826685905456543
    10. 'state' → logprob: -9.701685905456543

Token 2332: ' After' (ID: 6311)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7711347937583923
    2. 'new' → logprob: -1.271134853363037
    3. 'key' → logprob: -1.396134853363037
    4. 'state' → logprob: -5.521134853363037
    5. '               ' → logprob: -6.146134853363037
    6. 'if' → logprob: -6.271134853363037
    7. 'neighbor' → logprob: -6.646134853363037
    8. ' key' → logprob: -10.771134376525879
    9. '                   ' → logprob: -11.021134376525879
    10. 'arrival' → logprob: -11.271134376525879

Token 2333: ' arriving' (ID: 53419)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7841045260429382
    2. '               ' → logprob: -1.409104585647583
    3. 'arrival' → logprob: -2.659104585647583
    4. 'state' → logprob: -3.159104585647583
    5. 'new' → logprob: -3.284104585647583
    6. '                   ' → logprob: -3.409104585647583
    7. '#' → logprob: -3.659104585647583
    8. 'key' → logprob: -3.784104585647583
    9. 'next' → logprob: -4.034104347229004
    10. '           ' → logprob: -4.659104347229004

Token 2334: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1324363648891449
    2. ',' → logprob: -2.5074362754821777
    3. '_state' → logprob: -3.5074362754821777
    4. '_time' → logprob: -5.632436275482178
    5. 'state' → logprob: -6.132436275482178
    6. '                   ' → logprob: -6.257436275482178
    7. '_key' → logprob: -7.382436275482178
    8. ')' → logprob: -7.757436275482178
    9. 'new' → logprob: -7.757436275482178
    10. '                
' → logprob: -7.757436275482178

Token 2335: ' can' (ID: 665)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4116925299167633
    2. 'next' → logprob: -1.161692500114441
    3. 'key' → logprob: -4.1616926193237305
    4. '               ' → logprob: -5.1616926193237305
    5. 'neighbor' → logprob: -6.9116926193237305
    6. ' new' → logprob: -7.5366926193237305
    7. 'state' → logprob: -7.6616926193237305
    8. '           ' → logprob: -8.03669261932373
    9. '#' → logprob: -8.16169261932373
    10. ' next' → logprob: -8.41169261932373

Token 2336: ' face' (ID: 4950)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06544926762580872
    2. ' continue' → logprob: -3.3154492378234863
    3. 'continue' → logprob: -5.190449237823486
    4. '                   ' → logprob: -5.690449237823486
    5. ' new' → logprob: -5.940449237823486
    6. '                       ' → logprob: -6.315449237823486
    7. ' proceed' → logprob: -6.440449237823486
    8. ' go' → logprob: -6.690449237823486
    9. ' next' → logprob: -6.940449237823486
    10. '           ' → logprob: -7.065449237823486

Token 2337: ' any' (ID: 1062)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.0020891157910227776
    2. '(move' → logprob: -6.877089023590088
    3. ' move' → logprob: -6.877089023590088
    4. '	move' → logprob: -12.127089500427246
    5. '               ' → logprob: -12.377089500427246
    6. 'arrival' → logprob: -12.377089500427246
    7. '           ' → logprob: -13.127089500427246
    8. '   ' → logprob: -13.127089500427246
    9. 'op' → logprob: -13.252089500427246
    10. '.move' → logprob: -13.502089500427246

Token 2338: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.11350787431001663
    2. 'of' → logprob: -3.2385079860687256
    3. ' of' → logprob: -3.6135079860687256
    4. ' direction' → logprob: -3.7385079860687256
    5. 'neighbor' → logprob: -4.4885077476501465
    6. 'move' → logprob: -6.3635077476501465
    7. '_direction' → logprob: -6.7385077476501465
    8. 'side' → logprob: -7.6135077476501465
    9. 'dire' → logprob: -7.8635077476501465
    10. '(direction' → logprob: -7.9885077476501465

Token 2339: ' except' (ID: 6384)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028262002393603325
    2. '                
' → logprob: -4.278262138366699
    3. '
' → logprob: -4.778262138366699
    4. ' (' → logprob: -6.278262138366699
    5. ',' → logprob: -7.403262138366699
    6. ':
' → logprob: -7.653262138366699
    7. ' for' → logprob: -7.653262138366699
    8. ' new' → logprob: -8.0282621383667
    9. ' 
' → logprob: -8.6532621383667
    10. '(next' → logprob: -8.9032621383667

Token 2340: ' the' (ID: 290)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -7.584239938296378e-06
    2. ' Direction' → logprob: -12.000007629394531
    3. '(Direction' → logprob: -14.625007629394531
    4. 'Directional' → logprob: -14.750007629394531
    5. '               ' → logprob: -15.250007629394531
    6. 'direction' → logprob: -15.875007629394531
    7. '           ' → logprob: -16.62500762939453
    8. 'Directions' → logprob: -17.12500762939453
    9. 'move' → logprob: -17.62500762939453
    10. '                   ' → logprob: -18.00000762939453

Token 2341: ' opposite' (ID: 23821)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -2.45848218582978e-06
    2. ' Direction' → logprob: -14.12500286102295
    3. '`' → logprob: -14.87500286102295
    4. 'direction' → logprob: -15.25000286102295
    5. '               ' → logprob: -15.50000286102295
    6. 'op' → logprob: -15.75000286102295
    7. '           ' → logprob: -15.75000286102295
    8. '(Direction' → logprob: -15.75000286102295
    9. 'Directions' → logprob: -15.87500286102295
    10. 'Directional' → logprob: -16.500001907348633

Token 2342: ' direction' (ID: 9262)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.46363189816474915
    2. 'of' → logprob: -1.5886318683624268
    3. '               ' → logprob: -1.9636318683624268
    4. '_of' → logprob: -4.713632106781006
    5. '[' → logprob: -5.963632106781006
    6. ' if' → logprob: -6.213632106781006
    7. ')' → logprob: -6.213632106781006
    8. 'if' → logprob: -6.713632106781006
    9. '(move' → logprob: -6.713632106781006
    10. '                
' → logprob: -6.838632106781006

Token 2343: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008664918132126331
    2. '                
' → logprob: -4.883665084838867
    3. ',' → logprob: -8.383665084838867
    4. '               
' → logprob: -9.258665084838867
    5. '                
                
' → logprob: -9.508665084838867
    6. ' (' → logprob: -9.508665084838867
    7. '<|end|>' → logprob: -9.633665084838867
    8. ' of' → logprob: -9.758665084838867
    9. ' 
' → logprob: -9.883665084838867
    10. '  
' → logprob: -10.008665084838867

Token 2344: ' arrival' (ID: 24861)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.0010565068805590272
    2. ' move' → logprob: -7.126056671142578
    3. 'arr' → logprob: -9.001056671142578
    4. 'arrival' → logprob: -10.001056671142578
    5. '(move' → logprob: -11.001056671142578
    6. 'f' → logprob: -11.001056671142578
    7. 'the' → logprob: -11.626056671142578
    8. 'current' → logprob: -11.751056671142578
    9. '   ' → logprob: -12.001056671142578
    10. '	move' → logprob: -12.126056671142578

Token 2345: '_dir' (ID: 9526)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0376078337430954
    2. '                
' → logprob: -3.4126079082489014
    3. '
' → logprob: -5.912607669830322
    4. ',' → logprob: -8.53760814666748
    5. '               
' → logprob: -8.66260814666748
    6. '                    
' → logprob: -9.03760814666748
    7. '  
' → logprob: -9.16260814666748
    8. ' 
' → logprob: -9.41260814666748
    9. '                
                
' → logprob: -9.66260814666748
    10. ':
' → logprob: -9.91260814666748

Token 2346: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01695353537797928
    2. '                
' → logprob: -4.516953468322754
    3. '
' → logprob: -5.516953468322754
    4. ',' → logprob: -7.016953468322754
    5. '```' → logprob: -8.766953468322754
    6. ' (' → logprob: -9.141953468322754
    7. ' for' → logprob: -9.266953468322754
    8. '<|end|>' → logprob: -9.641953468322754
    9. '                    
' → logprob: -9.891953468322754
    10. ' new' → logprob: -9.891953468322754

Token 2347: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004523042589426041
    2. '                
' → logprob: -5.629523277282715
    3. '```' → logprob: -8.254523277282715
    4. '                   ' → logprob: -8.879523277282715
    5. '<|end|>' → logprob: -9.004523277282715
    6. ',' → logprob: -10.129523277282715
    7. '               
' → logprob: -10.629523277282715
    8. '                    
' → logprob: -10.629523277282715
    9. '  
' → logprob: -10.754523277282715
    10. '                ' → logprob: -10.879523277282715

Token 2348: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03368062525987625
    2. '                
' → logprob: -4.408680438995361
    3. ' for' → logprob: -4.658680438995361
    4. '
' → logprob: -5.533680438995361
    5. 'for' → logprob: -5.783680438995361
    6. ' 
' → logprob: -7.158680438995361
    7. '                   ' → logprob: -7.408680438995361
    8. '```' → logprob: -7.908680438995361
    9. '                    
' → logprob: -8.40868091583252
    10. ' continue' → logprob: -8.53368091583252

Token 2349: ' But' (ID: 3072)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0077242180705070496
    2. 'for' → logprob: -5.257724285125732
    3. ' for' → logprob: -6.257724285125732
    4. '```' → logprob: -8.132723808288574
    5. 'next' → logprob: -9.507723808288574
    6. ' next' → logprob: -9.632723808288574
    7. '
' → logprob: -10.132723808288574
    8. '                   ' → logprob: -10.757723808288574
    9. '                
' → logprob: -11.007723808288574
    10. '#' → logprob: -11.632723808288574

Token 2350: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39249902963638306
    2. ' for' → logprob: -1.6424989700317383
    3. '#' → logprob: -2.2674989700317383
    4. '               ' → logprob: -5.642498970031738
    5. 'possible' → logprob: -5.642498970031738
    6. 'continue' → logprob: -5.892498970031738
    7. 'the' → logprob: -6.267498970031738
    8. ' the' → logprob: -6.517498970031738
    9. ' not' → logprob: -6.517498970031738
    10. ' continue' → logprob: -6.642498970031738

Token 2351: ' problem' (ID: 4792)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.9781277775764465
    2. 'move' → logprob: -1.2281277179718018
    3. 'the' → logprob: -1.7281277179718018
    4. 'neighbor' → logprob: -3.2281277179718018
    5. 'here' → logprob: -3.4781277179718018
    6. '#' → logprob: -3.8531277179718018
    7. 'code' → logprob: -4.478127956390381
    8. 'current' → logprob: -5.103127956390381
    9. 'problem' → logprob: -5.228127956390381
    10. 'previous' → logprob: -5.353127956390381

Token 2352: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044380154460668564
    2. '                
' → logprob: -3.7943801879882812
    3. '                   ' → logprob: -5.419380187988281
    4. '
' → logprob: -6.169380187988281
    5. ' 
' → logprob: -6.544380187988281
    6. '                

' → logprob: -6.544380187988281
    7. '                ' → logprob: -6.794380187988281
    8. '                    
' → logprob: -6.919380187988281
    9. ':' → logprob: -7.044380187988281
    10. '
                
' → logprob: -7.169380187988281

Token 2353: ' truck' (ID: 13790)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48546916246414185
    2. '               ' → logprob: -1.485469102859497
    3. 'for' → logprob: -2.360469102859497
    4. ' #' → logprob: -3.610469102859497
    5. ' for' → logprob: -3.735469102859497
    6. '                   ' → logprob: -5.985469341278076
    7. '```' → logprob: -6.485469341278076
    8. '
' → logprob: -6.610469341278076
    9. 'continue' → logprob: -6.860469341278076
    10. '                
' → logprob: -6.985469341278076

Token 2354: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8330918550491333
    2. ' cannot' → logprob: -2.4580917358398438
    3. '               ' → logprob: -2.5830917358398438
    4. '#' → logprob: -2.5830917358398438
    5. 'cannot' → logprob: -2.8330917358398438
    6. ' must' → logprob: -2.9580917358398438
    7. 'must' → logprob: -3.5830917358398438
    8. '                   ' → logprob: -3.8330917358398438
    9. ' has' → logprob: -4.083091735839844
    10. 's' → logprob: -4.208091735839844

Token 2355: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.3826865553855896
    2. 'face' → logprob: -2.2576866149902344
    3. 'not' → logprob: -2.5076866149902344
    4. ' only' → logprob: -2.6326866149902344
    5. 'turn' → logprob: -3.8826866149902344
    6. 'continue' → logprob: -4.132686614990234
    7. 'cannot' → logprob: -5.632686614990234
    8. ' face' → logprob: -5.757686614990234
    9. 'change' → logprob: -5.757686614990234
    10. 'never' → logprob: -6.257686614990234

Token 2356: ' turn' (ID: 3716)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.42356666922569275
    2. 'continue' → logprob: -1.6735666990280151
    3. 'go' → logprob: -2.6735665798187256
    4. 'turn' → logprob: -3.2985665798187256
    5. 'move' → logprob: -3.9235665798187256
    6. 'change' → logprob: -4.173566818237305
    7. 'pro' → logprob: -4.923566818237305
    8. 'keep' → logprob: -6.173566818237305
    9. ' face' → logprob: -6.548566818237305
    10. 'maint' → logprob: -6.673566818237305

Token 2357: ' directions' (ID: 24921)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.4419814348220825
    2. '_left' → logprob: -1.9419814348220825
    3. ' to' → logprob: -2.066981315612793
    4. ' ' → logprob: -2.316981315612793
    5. 'left' → logprob: -2.566981315612793
    6. ' right' → logprob: -2.691981315612793
    7. '_right' → logprob: -3.441981315612793
    8. '<|end|>' → logprob: -3.441981315612793
    9. 's' → logprob: -3.816981315612793
    10. ' around' → logprob: -3.816981315612793

Token 2358: ' at' (ID: 540)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12309762835502625
    2. '                
' → logprob: -2.4980976581573486
    3. '
' → logprob: -3.6230976581573486
    4. ' 
' → logprob: -6.4980974197387695
    5. '               
' → logprob: -7.3730974197387695
    6. '                
                
' → logprob: -7.3730974197387695
    7. '                    
' → logprob: -7.6230974197387695
    8. '
                
' → logprob: -7.7480974197387695
    9. ',' → logprob: -7.8730974197387695
    10. '                

' → logprob: -8.12309741973877

Token 2359: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.34556844830513
    2. 'an' → logprob: -2.0955684185028076
    3. 'inter' → logprob: -2.3455684185028076
    4. 'the' → logprob: -3.2205684185028076
    5. 'arrival' → logprob: -3.9705684185028076
    6. ' intersections' → logprob: -5.345568656921387
    7. 'next' → logprob: -5.595568656921387
    8. 'neighbor' → logprob: -6.595568656921387
    9. 'this' → logprob: -6.970568656921387
    10. 'each' → logprob: -7.220568656921387

Token 2360: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2504417896270752
    2. '
' → logprob: -1.7504417896270752
    3. '                
' → logprob: -3.125441789627075
    4. '<|end|>' → logprob: -7.000441551208496
    5. '  
' → logprob: -7.625441551208496
    6. ',' → logprob: -7.625441551208496
    7. '                    
' → logprob: -7.875441551208496
    8. ' 
' → logprob: -8.250441551208496
    9. '
                
' → logprob: -8.750441551208496
    10. '
' → logprob: -8.750441551208496

Token 2361: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008723941282369196
    2. '                
' → logprob: -7.875872611999512
    3. '```' → logprob: -8.750872611999512
    4. '                   ' → logprob: -9.000872611999512
    5. '                ' → logprob: -10.750872611999512
    6. ',' → logprob: -10.875872611999512
    7. '                       ' → logprob: -11.125872611999512
    8. '
' → logprob: -11.125872611999512
    9. '#' → logprob: -11.125872611999512
    10. '              ' → logprob: -11.250872611999512

Token 2362: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022351622581481934
    2. '
' → logprob: -4.7723517417907715
    3. ' for' → logprob: -4.7723517417907715
    4. '                
' → logprob: -6.0223517417907715
    5. 'for' → logprob: -6.8973517417907715
    6. ' new' → logprob: -7.8973517417907715
    7. ' next' → logprob: -8.022351264953613
    8. '```' → logprob: -8.147351264953613
    9. '                   ' → logprob: -8.522351264953613
    10. 'new' → logprob: -9.897351264953613

Token 2363: ' It' (ID: 1225)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0062661319971084595
    2. '```' → logprob: -6.131266117095947
    3. '                   ' → logprob: -6.506266117095947
    4. ' for' → logprob: -7.256266117095947
    5. 'for' → logprob: -7.506266117095947
    6. '
' → logprob: -7.506266117095947
    7. '                
' → logprob: -7.881266117095947
    8. '#' → logprob: -9.131266593933105
    9. '                       ' → logprob: -9.756266593933105
    10. ' next' → logprob: -9.881266593933105

Token 2364: ' can' (ID: 665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5267640352249146
    2. '#' → logprob: -2.651763916015625
    3. ''s' → logprob: -3.151763916015625
    4. '=' → logprob: -3.526763916015625
    5. ' seems' → logprob: -3.526763916015625
    6. ' is' → logprob: -3.651763916015625
    7. 'is' → logprob: -3.901763916015625
    8. ' =' → logprob: -4.026763916015625
    9. '               ' → logprob: -4.026763916015625
    10. ' continues' → logprob: -4.401763916015625

Token 2365: ' face' (ID: 4950)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.6503540873527527
    2. 'turn' → logprob: -2.4003541469573975
    3. 'only' → logprob: -2.4003541469573975
    4. 'not' → logprob: -3.0253541469573975
    5. ' continue' → logprob: -3.0253541469573975
    6. ' turn' → logprob: -3.1503541469573975
    7. ' not' → logprob: -3.6503541469573975
    8. 'continue' → logprob: -3.6503541469573975
    9. ' face' → logprob: -4.025353908538818
    10. '               ' → logprob: -4.025353908538818

Token 2366: ' N' (ID: 478)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0585579089820385
    2. 'move' → logprob: -3.0585579872131348
    3. ' any' → logprob: -5.558557987213135
    4. 'only' → logprob: -6.183557987213135
    5. 'either' → logprob: -7.433557987213135
    6. ' move' → logprob: -7.558557987213135
    7. 'dire' → logprob: -7.808557987213135
    8. 'Direction' → logprob: -8.183557510375977
    9. 'neighbor' → logprob: -8.308557510375977
    10. 'f' → logprob: -8.433557510375977

Token 2367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016254890710115433
    2. ',S' → logprob: -4.516254901885986
    3. 'O' → logprob: -6.516254901885986
    4. 'or' → logprob: -6.766254901885986
    5. ',
' → logprob: -7.391254901885986
    6. ' or' → logprob: -7.391254901885986
    7. 'S' → logprob: -8.391254425048828
    8. ' ,' → logprob: -8.516254425048828
    9. ',O' → logprob: -8.891254425048828
    10. 'o' → logprob: -9.141254425048828

Token 2368: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0013332172529771924
    2. 'E' → logprob: -6.751333236694336
    3. ' S' → logprob: -8.751333236694336
    4. '               ' → logprob: -13.251333236694336
    5. '                   ' → logprob: -13.751333236694336
    6. ',' → logprob: -14.126333236694336
    7. '   ' → logprob: -14.876333236694336
    8. '       ' → logprob: -15.376333236694336
    9. '           ' → logprob: -15.501333236694336
    10. '
' → logprob: -16.001333236694336

Token 2369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008536208420991898
    2. 'or' → logprob: -5.508536338806152
    3. ',
' → logprob: -6.008536338806152
    4. ' or' → logprob: -6.758536338806152
    5. ' ,' → logprob: -8.383536338806152
    6. 'E' → logprob: -8.758536338806152
    7. ',E' → logprob: -9.008536338806152
    8. 'W' → logprob: -9.133536338806152
    9. ',W' → logprob: -9.383536338806152
    10. '               ' → logprob: -10.008536338806152

Token 2370: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0009171743295155466
    2. ' E' → logprob: -7.000916957855225
    3. 'W' → logprob: -12.750917434692383
    4. '                   ' → logprob: -14.125917434692383
    5. '   ' → logprob: -14.125917434692383
    6. 'or' → logprob: -15.250917434692383
    7. '
' → logprob: -15.375917434692383
    8. '               ' → logprob: -15.625917434692383
    9. '                       ' → logprob: -16.250917434692383
    10. ',E' → logprob: -16.375917434692383

Token 2371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2322577238082886
    2. '               ' → logprob: -1.2322577238082886
    3. 'W' → logprob: -1.4822577238082886
    4. 'or' → logprob: -1.8572577238082886
    5. ' or' → logprob: -3.857257843017578
    6. '
' → logprob: -4.857257843017578
    7. '                   ' → logprob: -6.482257843017578
    8. '                       ' → logprob: -7.107257843017578
    9. ',W' → logprob: -7.482257843017578
    10. '           ' → logprob: -8.357257843017578

Token 2372: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.011928617022931576
    2. 'or' → logprob: -5.011928558349609
    3. ' W' → logprob: -5.511928558349609
    4. ' or' → logprob: -6.761928558349609
    5. '   ' → logprob: -13.38692855834961
    6. '                   ' → logprob: -13.38692855834961
    7. '               ' → logprob: -14.51192855834961
    8. '                       ' → logprob: -15.88692855834961
    9. '	W' → logprob: -16.38692855834961
    10. '
' → logprob: -16.51192855834961

Token 2373: ' as' (ID: 472)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007458607666194439
    2. '
' → logprob: -5.632458686828613
    3. '                
' → logprob: -5.757458686828613
    4. '                   ' → logprob: -8.507458686828613
    5. '```' → logprob: -9.132458686828613
    6. ' for' → logprob: -9.257458686828613
    7. '                    
' → logprob: -10.132458686828613
    8. '  
' → logprob: -10.257458686828613
    9. 'for' → logprob: -10.507458686828613
    10. ' 
' → logprob: -10.507458686828613

Token 2374: ' long' (ID: 1701)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.0018774702912196517
    2. ' long' → logprob: -6.376877307891846
    3. 'next' → logprob: -9.001877784729004
    4. '                       ' → logprob: -10.876877784729004
    5. '               ' → logprob: -11.126877784729004
    6. '                   ' → logprob: -11.501877784729004
    7. '                           ' → logprob: -13.501877784729004
    8. '           ' → logprob: -13.501877784729004
    9. '
' → logprob: -13.751877784729004
    10. 'any' → logprob: -14.501877784729004

Token 2375: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.08909988403320312
    2. ' as' → logprob: -2.464099884033203
    3. 'it' → logprob: -10.089099884033203
    4. '               ' → logprob: -10.214099884033203
    5. '                   ' → logprob: -10.589099884033203
    6. '   ' → logprob: -11.464099884033203
    7. 'not' → logprob: -12.089099884033203
    8. 'the' → logprob: -12.089099884033203
    9. 'that' → logprob: -12.339099884033203
    10. '<|end|>' → logprob: -12.589099884033203

Token 2376: ' not' (ID: 625)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.527567446231842
    2. 'f' → logprob: -1.1525673866271973
    3. 'not' → logprob: -4.152567386627197
    4. 'new' → logprob: -4.277567386627197
    5. 'direction' → logprob: -4.277567386627197
    6. 'face' → logprob: -4.652567386627197
    7. 'the' → logprob: -5.027567386627197
    8. 'op' → logprob: -5.402567386627197
    9. 'it' → logprob: -5.402567386627197
    10. '_direction' → logprob: -5.527567386627197

Token 2377: ' the' (ID: 290)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.0395217202603817
    2. 'arr' → logprob: -3.7895216941833496
    3. '(Direction' → logprob: -5.03952169418335
    4. 'move' → logprob: -5.28952169418335
    5. 'arrival' → logprob: -5.91452169418335
    6. ' Direction' → logprob: -6.91452169418335
    7. 'op' → logprob: -7.66452169418335
    8. '(move' → logprob: -9.164522171020508
    9. ' move' → logprob: -9.914522171020508
    10. 'Arrival' → logprob: -10.289522171020508

Token 2378: ' direction' (ID: 9262)
  Prédit: 'Direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Direction' → logprob: -0.08168818056583405
    2. 'op' → logprob: -2.831688165664673
    3. 'arr' → logprob: -4.081688404083252
    4. 'arrival' → logprob: -7.081688404083252
    5. ' opposite' → logprob: -7.581688404083252
    6. 'move' → logprob: -8.081687927246094
    7. 'direction' → logprob: -8.206687927246094
    8. 'opp' → logprob: -8.956687927246094
    9. ' Direction' → logprob: -9.206687927246094
    10. 'reverse' → logprob: -9.581687927246094

Token 2379: ' of' (ID: 328)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5215349197387695
    2. ' opposite' → logprob: -1.1465349197387695
    3. 'of' → logprob: -3.6465349197387695
    4. '               ' → logprob: -4.2715349197387695
    5. ' of' → logprob: -4.3965349197387695
    6. 'from' → logprob: -4.5215349197387695
    7. '                   ' → logprob: -5.0215349197387695
    8. '           ' → logprob: -5.3965349197387695
    9. '   ' → logprob: -5.8965349197387695
    10. '       ' → logprob: -6.2715349197387695

Token 2380: ' coming' (ID: 7245)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.4700038433074951
    2. 'Direction' → logprob: -1.4700038433074951
    3. 'arr' → logprob: -1.9700038433074951
    4. 'move' → logprob: -5.720004081726074
    5. ' arrival' → logprob: -6.970004081726074
    6. 'movement' → logprob: -7.720004081726074
    7. 'Arrival' → logprob: -8.345004081726074
    8. ' Direction' → logprob: -8.470004081726074
    9. 'op' → logprob: -8.970004081726074
    10. 'the' → logprob: -9.595004081726074

Token 2381: ' back' (ID: 1602)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.16111592948436737
    2. '_from' → logprob: -1.9111158847808838
    3. 'into' → logprob: -8.536115646362305
    4. 'arrival' → logprob: -8.661115646362305
    5. '_arr' → logprob: -8.786115646362305
    6. '_into' → logprob: -9.286115646362305
    7. 'arr' → logprob: -9.786115646362305
    8. '_dir' → logprob: -10.036115646362305
    9. 'to' → logprob: -10.161115646362305
    10. '[from' → logprob: -10.411115646362305

Token 2382: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33161023259162903
    2. '
' → logprob: -1.3316102027893066
    3. '                
' → logprob: -4.081610202789307
    4. ' 
' → logprob: -8.581610679626465
    5. '
' → logprob: -8.956610679626465
    6. '                    
' → logprob: -8.956610679626465
    7. '```' → logprob: -8.956610679626465
    8. '               
' → logprob: -9.081610679626465
    9. '                   ' → logprob: -9.206610679626465
    10. '  
' → logprob: -9.581610679626465

Token 2383: 'u' (ID: 84)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8057898879051208
    2. 'arrival' → logprob: -1.4307899475097656
    3. 'Direction' → logprob: -1.5557899475097656
    4. 'move' → logprob: -2.3057899475097656
    5. ' Direction' → logprob: -7.555789947509766
    6. ' arrival' → logprob: -7.930789947509766
    7. ' move' → logprob: -8.180789947509766
    8. '           ' → logprob: -8.180789947509766
    9. 'Arrival' → logprob: -8.305789947509766
    10. ' arrive' → logprob: -8.555789947509766

Token 2384: '-turn' (ID: 120746)
  Prédit: 'rn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rn' → logprob: -0.2122489959001541
    2. 'r' → logprob: -1.7122490406036377
    3. 'turn' → logprob: -4.962248802185059
    4. '-turn' → logprob: -5.962248802185059
    5. 'urn' → logprob: -8.087248802185059
    6. 'n' → logprob: -8.212248802185059
    7. 'Turn' → logprob: -8.587248802185059
    8. '_turn' → logprob: -9.087248802185059
    9. 'p' → logprob: -9.337248802185059
    10. 'rne' → logprob: -9.462248802185059

Token 2385: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25827518105506897
    2. ')' → logprob: -1.7582751512527466
    3. '               ' → logprob: -3.008275270462036
    4. '):
' → logprob: -5.758275032043457
    5. ')
' → logprob: -6.758275032043457
    6. ')

' → logprob: -8.008275032043457
    7. ').
' → logprob: -8.008275032043457
    8. ').' → logprob: -8.258275032043457
    9. '                   ' → logprob: -8.883275032043457
    10. ')`
' → logprob: -9.758275032043457

Token 2386: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012715185061097145
    2. '
' → logprob: -4.8877153396606445
    3. '                
' → logprob: -5.3877153396606445
    4. '<|end|>' → logprob: -9.512715339660645
    5. '  
' → logprob: -9.637715339660645
    6. '                   ' → logprob: -9.762715339660645
    7. ' for' → logprob: -9.887715339660645
    8. ' 
' → logprob: -10.012715339660645
    9. '```' → logprob: -10.012715339660645
    10. '                    
' → logprob: -10.012715339660645

Token 2387: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05037948861718178
    2. '
' → logprob: -3.300379514694214
    3. '                
' → logprob: -4.800379276275635
    4. ' for' → logprob: -6.800379276275635
    5. ' 
' → logprob: -7.175379276275635
    6. '  
' → logprob: -7.675379276275635
    7. 'for' → logprob: -8.050379753112793
    8. '                   ' → logprob: -8.300379753112793
    9. '    
' → logprob: -8.925379753112793
    10. '                    
' → logprob: -9.050379753112793

Token 2388: ' For' (ID: 2214)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20821034908294678
    2. 'for' → logprob: -1.7082103490829468
    3. ' for' → logprob: -5.583210468292236
    4. '```' → logprob: -6.208210468292236
    5. '
' → logprob: -7.958210468292236
    6. '                   ' → logprob: -8.458209991455078
    7. '                
' → logprob: -8.708209991455078
    8. 'possible' → logprob: -9.583209991455078
    9. '#' → logprob: -9.958209991455078
    10. '``' → logprob: -10.083209991455078

Token 2389: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2330472320318222
    2. 'new' → logprob: -1.7330472469329834
    3. 'f' → logprob: -4.608047008514404
    4. 'face' → logprob: -4.733047008514404
    5. ' next' → logprob: -5.483047008514404
    6. 'neighbor' → logprob: -6.358047008514404
    7. 'dir' → logprob: -6.608047008514404
    8. 'd' → logprob: -6.983047008514404
    9. 'possible' → logprob: -7.108047008514404
    10. 'each' → logprob: -7.358047008514404

Token 2390: ' edge' (ID: 11165)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.48307013511657715
    2. '_dir' → logprob: -2.233070135116577
    3. 'f' → logprob: -2.733070135116577
    4. 'direction' → logprob: -3.108070135116577
    5. 'move' → logprob: -3.233070135116577
    6. 'dir' → logprob: -3.233070135116577
    7. '_direction' → logprob: -3.983070135116577
    8. ' neighbor' → logprob: -4.108070373535156
    9. '_neighbor' → logprob: -4.983070373535156
    10. 'next' → logprob: -5.108070373535156

Token 2391: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027154763229191303
    2. '
' → logprob: -6.627715587615967
    3. ' for' → logprob: -7.502715587615967
    4. '                
' → logprob: -7.752715587615967
    5. 'for' → logprob: -8.502715110778809
    6. '                   ' → logprob: -9.877715110778809
    7. ',' → logprob: -10.252715110778809
    8. '<|end|>' → logprob: -10.752715110778809
    9. '```' → logprob: -11.002715110778809
    10. '           ' → logprob: -11.502715110778809

Token 2392: ' facing' (ID: 20511)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0048729428090155125
    2. ' for' → logprob: -6.504872798919678
    3. 'possible' → logprob: -6.629872798919678
    4. '#' → logprob: -7.254872798919678
    5. '               ' → logprob: -7.629872798919678
    6. 'next' → logprob: -8.129873275756836
    7. '                   ' → logprob: -8.629873275756836
    8. 'new' → logprob: -8.879873275756836
    9. 'allowed' → logprob: -9.504873275756836
    10. '```' → logprob: -9.754873275756836

Token 2393: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6906011700630188
    2. 'in' → logprob: -1.440601110458374
    3. ' in' → logprob: -2.815601110458374
    4. 'for' → logprob: -3.065601110458374
    5. '_options' → logprob: -3.315601110458374
    6. 'options' → logprob: -3.565601110458374
    7. '_candidates' → logprob: -4.315601348876953
    8. '               ' → logprob: -4.815601348876953
    9. 'c' → logprob: -5.065601348876953
    10. ' for' → logprob: -5.190601348876953

Token 2394: ' the' (ID: 290)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.02148147113621235
    2. 'Direction' → logprob: -3.896481513977051
    3. ' move' → logprob: -7.646481513977051
    4. 'op' → logprob: -9.02148151397705
    5. 'arr' → logprob: -9.39648151397705
    6. '   ' → logprob: -9.52148151397705
    7. ' Direction' → logprob: -10.39648151397705
    8. 'arrival' → logprob: -10.39648151397705
    9. '           ' → logprob: -10.77148151397705
    10. '               ' → logprob: -11.14648151397705

Token 2395: ' direction' (ID: 9262)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.006398446392267942
    2. 'Direction' → logprob: -5.131398677825928
    3. ' move' → logprob: -9.00639820098877
    4. 'op' → logprob: -9.38139820098877
    5. 'arr' → logprob: -9.50639820098877
    6. 'neighbor' → logprob: -9.63139820098877
    7. 'direction' → logprob: -10.38139820098877
    8. 'arrival' → logprob: -10.63139820098877
    9. 'Move' → logprob: -11.38139820098877
    10. '(move' → logprob: -11.63139820098877

Token 2396: ' truck' (ID: 13790)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6244911551475525
    2. '               ' → logprob: -1.6244912147521973
    3. ' =' → logprob: -1.6244912147521973
    4. ' of' → logprob: -3.7494912147521973
    5. ')' → logprob: -5.124491214752197
    6. '[' → logprob: -5.249491214752197
    7. '                   ' → logprob: -5.374491214752197
    8. 'from' → logprob: -5.624491214752197
    9. 'of' → logprob: -5.749491214752197
    10. '+' → logprob: -5.749491214752197

Token 2397: ' will' (ID: 738)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.188883662223816
    2. 'will' → logprob: -1.688883662223816
    3. 'can' → logprob: -2.1888837814331055
    4. 'from' → logprob: -2.9388837814331055
    5. 'must' → logprob: -2.9388837814331055
    6. '=' → logprob: -3.0638837814331055
    7. 'to' → logprob: -3.0638837814331055
    8. 'arr' → logprob: -3.4388837814331055
    9. 's' → logprob: -3.6888837814331055
    10. 'would' → logprob: -4.1888837814331055

Token 2398: ' go' (ID: 810)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.02284182235598564
    2. 'take' → logprob: -3.8978419303894043
    3. 'choose' → logprob: -7.272841930389404
    4. 'go' → logprob: -7.397841930389404
    5. 'travel' → logprob: -7.522841930389404
    6. 'face' → logprob: -8.897841453552246
    7. ' move' → logprob: -9.272841453552246
    8. 'leave' → logprob: -9.897841453552246
    9. 'enter' → logprob: -10.397841453552246
    10. 'use' → logprob: -10.522841453552246

Token 2399: ',
' (ID: 412)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012678691186010838
    2. '
' → logprob: -5.137678623199463
    3. '                
' → logprob: -5.137678623199463
    4. '```' → logprob: -8.512679100036621
    5. 'for' → logprob: -8.887679100036621
    6. ' for' → logprob: -9.262679100036621
    7. '                   ' → logprob: -9.387679100036621
    8. '<|end|>' → logprob: -9.762679100036621
    9. '               
' → logprob: -10.012679100036621
    10. '                    
' → logprob: -10.512679100036621

Token 2400: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03322109580039978
    2. '#' → logprob: -4.033221244812012
    3. '                   ' → logprob: -5.283221244812012
    4. '                               ' → logprob: -6.283221244812012
    5. '                       ' → logprob: -6.533221244812012
    6. ' but' → logprob: -7.033221244812012
    7. '                           ' → logprob: -7.033221244812012
    8. '                
' → logprob: -7.283221244812012
    9. '                ' → logprob: -7.408221244812012
    10. 'which' → logprob: -7.783221244812012

Token 2401: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020776845514774323
    2. '#' (adapté à ' #') → logprob: -5.270776748657227
    3. ' but' → logprob: -5.770776748657227
    4. '                   ' → logprob: -6.020776748657227
    5. 'but' → logprob: -6.645776748657227
    6. ' so' → logprob: -7.020776748657227
    7. '                               ' → logprob: -7.145776748657227
    8. '                
' → logprob: -7.145776748657227
    9. '           ' → logprob: -7.270776748657227
    10. '                ' → logprob: -7.395776748657227

Token 2402: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04362931847572327
    2. '#' → logprob: -4.418629169464111
    3. '                   ' → logprob: -4.668629169464111
    4. '                               ' → logprob: -4.918629169464111
    5. '                
' → logprob: -5.293629169464111
    6. '                       ' → logprob: -6.293629169464111
    7. '                           ' → logprob: -6.793629169464111
    8. '                ' → logprob: -6.918629169464111
    9. '              ' → logprob: -7.418629169464111
    10. '                                       ' → logprob: -8.16862964630127

Token 2403: ' set' (ID: 920)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006189956795424223
    2. ' for' → logprob: -5.506189823150635
    3. '               ' → logprob: -6.756189823150635
    4. 'next' → logprob: -7.381189823150635
    5. '                   ' → logprob: -9.006190299987793
    6. '#' → logprob: -9.131190299987793
    7. '```' → logprob: -11.131190299987793
    8. 'dire' → logprob: -11.381190299987793
    9. 'continue' → logprob: -11.631190299987793
    10. '                       ' → logprob: -11.756190299987793

Token 2404: ' facing' (ID: 20511)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7318632006645203
    2. 'next' → logprob: -1.606863260269165
    3. 'new' → logprob: -2.356863260269165
    4. 'move' → logprob: -2.731863260269165
    5. 'for' → logprob: -2.981863260269165
    6. 'the' → logprob: -3.106863260269165
    7. 'arrival' → logprob: -3.731863260269165
    8. '_f' → logprob: -5.106863021850586
    9. 'possible' → logprob: -5.106863021850586
    10. '_state' → logprob: -5.606863021850586

Token 2405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1366417557001114
    2. ' =' → logprob: -2.13664174079895
    3. 'move' → logprob: -5.761641979217529
    4. '(move' → logprob: -5.761641979217529
    5. '               ' → logprob: -6.761641979217529
    6. ' move' → logprob: -6.886641979217529
    7. '                   ' → logprob: -7.386641979217529
    8. '_move' → logprob: -9.011641502380371
    9. '           ' → logprob: -9.636641502380371
    10. 'next' → logprob: -9.761641502380371

Token 2406: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -8.590104698669165e-05
    2. ' move' → logprob: -9.375085830688477
    3. '(move' → logprob: -14.125085830688477
    4. '   ' → logprob: -16.000085830688477
    5. '	move' → logprob: -16.000085830688477
    6. '`' → logprob: -16.250085830688477
    7. 'Direction' → logprob: -17.625085830688477
    8. '```' → logprob: -17.750085830688477
    9. '.move' → logprob: -18.250085830688477
    10. '           ' → logprob: -18.625085830688477

Token 2407: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.007099785376340151
    2. '_' → logprob: -5.257099628448486
    3. '_
' → logprob: -6.632099628448486
    4. ')' → logprob: -9.632100105285645
    5. '.
' → logprob: -9.632100105285645
    6. ')
' → logprob: -9.757100105285645
    7. 'r' → logprob: -10.007100105285645
    8. '.' → logprob: -10.382100105285645
    9. '`' → logprob: -11.132100105285645
    10. '_

' → logprob: -11.132100105285645

Token 2408: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01290678046643734
    2. '                
' → logprob: -4.762906551361084
    3. '
' → logprob: -5.887906551361084
    4. '                   ' → logprob: -7.887906551361084
    5. '                    
' → logprob: -8.512907028198242
    6. ' 
' → logprob: -9.012907028198242
    7. ',' → logprob: -9.387907028198242
    8. '
' → logprob: -9.512907028198242
    9. '  
' → logprob: -9.512907028198242
    10. '               
' → logprob: -9.637907028198242

Token 2409: 'direction' (ID: 43278)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00441112881526351
    2. '               ' → logprob: -5.879411220550537
    3. ' )' → logprob: -6.754411220550537
    4. ')
' → logprob: -8.254410743713379
    5. ').' → logprob: -9.379410743713379
    6. '                   ' → logprob: -10.004410743713379
    7. '                       ' → logprob: -12.129410743713379
    8. '                           ' → logprob: -12.504410743713379
    9. '           ' → logprob: -12.629410743713379
    10. '.' → logprob: -12.879410743713379

Token 2410: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.689432680606842
    2. 'from' → logprob: -1.5644326210021973
    3. '               ' → logprob: -2.4394326210021973
    4. ' of' → logprob: -2.5644326210021973
    5. 'of' → logprob: -2.8144326210021973
    6. ' from' → logprob: -3.4394326210021973
    7. 'to' → logprob: -4.689432621002197
    8. '                   ' → logprob: -4.814432621002197
    9. ' to' → logprob: -5.314432621002197
    10. 'that' → logprob: -6.439432621002197

Token 2411: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.001980260480195284
    2. ' neighbor' → logprob: -6.251980304718018
    3. 'go' → logprob: -10.62697982788086
    4. 'next' → logprob: -11.37697982788086
    5. 'move' → logprob: -11.75197982788086
    6. 'continue' → logprob: -12.75197982788086
    7. 'travel' → logprob: -13.62697982788086
    8. ' go' → logprob: -14.00197982788086
    9. '_neighbor' → logprob: -14.25197982788086
    10. 'neighbors' → logprob: -14.37697982788086

Token 2412: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14502760767936707
    2. ')' → logprob: -2.0200276374816895
    3. ')
' → logprob: -6.6450276374816895
    4. '                   ' → logprob: -7.8950276374816895
    5. '                
' → logprob: -9.145027160644531
    6. '):
' → logprob: -9.395027160644531
    7. '           ' → logprob: -9.770027160644531
    8. '                           ' → logprob: -9.895027160644531
    9. '                ' → logprob: -9.895027160644531
    10. '                       ' → logprob: -10.145027160644531

Token 2413: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028966225683689117
    2. '                
' → logprob: -4.153966426849365
    3. '
' → logprob: -4.653966426849365
    4. '                   ' → logprob: -6.778966426849365
    5. '                    
' → logprob: -7.528966426849365
    6. '  
' → logprob: -7.778966426849365
    7. ' 
' → logprob: -8.653965950012207
    8. '```' → logprob: -8.903965950012207
    9. ' if' → logprob: -9.028965950012207
    10. '                       ' → logprob: -9.153965950012207

Token 2414: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1702466607093811
    2. 'for' → logprob: -2.4202466011047363
    3. 'next' → logprob: -3.7952466011047363
    4. 'new' (adapté à ' new') → logprob: -3.7952466011047363
    5. ' for' → logprob: -4.795246601104736
    6. 'if' → logprob: -5.045246601104736
    7. ' new' → logprob: -6.045246601104736
    8. '                   ' → logprob: -6.420246601104736
    9. ' next' → logprob: -6.545246601104736
    10. '
' → logprob: -6.670246601104736

Token 2415: '_f' (ID: 1337)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.7851007580757141
    2. '_state' → logprob: -0.9101007580757141
    3. '_f' → logprob: -2.0351006984710693
    4. '_' → logprob: -5.910100936889648
    5. '_dist' → logprob: -6.035100936889648
    6. '_cost' → logprob: -6.160100936889648
    7. '_coord' → logprob: -7.410100936889648
    8. '_arr' → logprob: -7.535100936889648
    9. '_face' → logprob: -7.535100936889648
    10. '_tuple' → logprob: -7.660100936889648

Token 2416: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -4.5014188799541444e-05
    2. 'aced' → logprob: -10.500044822692871
    3. 'f' → logprob: -12.125044822692871
    4. 'ace' → logprob: -12.625044822692871
    5. '_f' → logprob: -12.750044822692871
    6. '_' → logprob: -13.750044822692871
    7. 'ac' → logprob: -14.125044822692871
    8. '=' → logprob: -14.250044822692871
    9. ' =' → logprob: -14.500044822692871
    10. '`' → logprob: -14.625044822692871

Token 2417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. '=
' → logprob: -15.686967849731445
    4. ')' → logprob: -16.811967849731445
    5. ' ' → logprob: -17.561967849731445
    6. '=

' → logprob: -18.061967849731445
    7. ',' → logprob: -18.686967849731445
    8. ' =
' → logprob: -18.936967849731445
    9. '.' → logprob: -19.061967849731445
    10. '＝' → logprob: -19.436967849731445

Token 2418: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -9.615255839889869e-05
    2. ' move' → logprob: -9.250096321105957
    3. '	move' → logprob: -17.37509536743164
    4. '(move' → logprob: -18.37509536743164
    5. '   ' → logprob: -18.50009536743164
    6. ' ' → logprob: -20.12509536743164
    7. 'mo' → logprob: -20.25009536743164
    8. 'Move' → logprob: -20.37509536743164
    9. 'm' → logprob: -20.37509536743164
    10. 'mov' → logprob: -20.50009536743164

Token 2419: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -7.896309739408025e-07
    2. 'Dir' → logprob: -14.375000953674316
    3. 'dir' → logprob: -15.875000953674316
    4. '_DIR' → logprob: -19.125
    5. 'r' → logprob: -19.375
    6. '-dir' → logprob: -19.5
    7. '_' → logprob: -20.75
    8. '_di' → logprob: -21.5
    9. ' Dir' → logprob: -21.625
    10. '_d' → logprob: -21.875

Token 2420: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015805823728442192
    2. '                
' → logprob: -5.140805721282959
    3. ',' → logprob: -5.890805721282959
    4. ')' → logprob: -6.015805721282959
    5. '
' → logprob: -6.390805721282959
    6. '<|end|>' → logprob: -7.140805721282959
    7. ' 
' → logprob: -7.640805721282959
    8. ' if' → logprob: -8.390806198120117
    9. ',
' → logprob: -8.765806198120117
    10. '.' → logprob: -9.015806198120117

Token 2421: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010623442940413952
    2. 'new' → logprob: -7.751062393188477
    3. '                
' → logprob: -8.501062393188477
    4. 'if' → logprob: -8.751062393188477
    5. 'next' → logprob: -9.501062393188477
    6. '                   ' → logprob: -9.626062393188477
    7. '```' → logprob: -9.876062393188477
    8. ' new' → logprob: -10.501062393188477
    9. ' if' → logprob: -11.251062393188477
    10. '
' → logprob: -11.751062393188477

Token 2422: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6412261128425598
    2. 'new' → logprob: -1.391226053237915
    3. 'key' → logprob: -2.391226053237915
    4. 'if' → logprob: -2.391226053237915
    5. 'next' → logprob: -3.641226053237915
    6. 'for' → logprob: -5.141226291656494
    7. ' new' → logprob: -5.766226291656494
    8. 'state' → logprob: -6.266226291656494
    9. ' key' → logprob: -6.266226291656494
    10. ' if' → logprob: -6.641226291656494

Token 2423: ' Check' (ID: 6208)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5813981294631958
    2. 'if' → logprob: -1.4563981294631958
    3. 'new' → logprob: -2.0813980102539062
    4. '               ' → logprob: -3.2063980102539062
    5. 'next' → logprob: -3.8313980102539062
    6. 'state' → logprob: -4.581398010253906
    7. 'for' → logprob: -4.956398010253906
    8. '                   ' → logprob: -6.706398010253906
    9. ' key' → logprob: -6.956398010253906
    10. ' if' → logprob: -7.831398010253906

Token 2424: ' dist' (ID: 3601)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7176888585090637
    2. 'arrival' → logprob: -1.217688798904419
    3. ' new' → logprob: -2.467688798904419
    4. 'if' → logprob: -2.592688798904419
    5. ' arrival' → logprob: -4.092689037322998
    6. 'dist' → logprob: -4.592689037322998
    7. '(new' → logprob: -4.842689037322998
    8. ' if' → logprob: -4.967689037322998
    9. '                   ' → logprob: -5.842689037322998
    10. '               ' → logprob: -6.092689037322998

Token 2425: ' and' (ID: 326)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.01279650628566742
    2. 'key' → logprob: -5.262796401977539
    3. ' =' → logprob: -5.512796401977539
    4. '[(' → logprob: -6.637796401977539
    5. '_token' → logprob: -7.762796401977539
    6. '=' → logprob: -7.887796401977539
    7. '_candidate' → logprob: -7.887796401977539
    8. '_next' → logprob: -8.512796401977539
    9. '_new' → logprob: -8.637796401977539
    10. '.setdefault' → logprob: -9.137796401977539

Token 2426: ' update' (ID: 4027)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3571523129940033
    2. 'new' → logprob: -2.232152223587036
    3. ' if' → logprob: -2.607152223587036
    4. '               ' → logprob: -2.732152223587036
    5. ' new' → logprob: -3.232152223587036
    6. '                   ' → logprob: -4.982152462005615
    7. 'key' → logprob: -5.482152462005615
    8. ' key' → logprob: -6.482152462005615
    9. 'next' → logprob: -7.482152462005615
    10. 'state' → logprob: -8.107151985168457

Token 2427: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01790432073175907
    2. 'key' → logprob: -4.517904281616211
    3. 'if' → logprob: -5.642904281616211
    4. ' key' → logprob: -6.017904281616211
    5. ' if' → logprob: -7.767904281616211
    6. 'new' → logprob: -8.392904281616211
    7. 'next' → logprob: -9.892904281616211
    8. ' new' → logprob: -10.517904281616211
    9. '_key' → logprob: -10.642904281616211
    10. 'state' → logprob: -10.892904281616211

Token 2428: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024762196466326714
    2. 'if' → logprob: -4.524762153625488
    3. 'key' → logprob: -4.524762153625488
    4. ' key' → logprob: -6.274762153625488
    5. ' if' → logprob: -7.524762153625488
    6. 'new' → logprob: -9.024762153625488
    7. '(key' → logprob: -9.899762153625488
    8. '                
' → logprob: -10.024762153625488
    9. '```' → logprob: -10.399762153625488
    10. '                   ' → logprob: -10.649762153625488

Token 2429: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4184459149837494
    2. 'key' (adapté à ' key') → logprob: -1.7934459447860718
    3. '               ' → logprob: -2.2934458255767822
    4. ' if' → logprob: -3.9184458255767822
    5. 'new' → logprob: -4.043446063995361
    6. ' key' → logprob: -4.418446063995361
    7. 'for' → logprob: -4.418446063995361
    8. 'next' → logprob: -5.168446063995361
    9. '(key' → logprob: -6.668446063995361
    10. '```' → logprob: -6.918446063995361

Token 2430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47428253293037415
    2. '=' → logprob: -0.9742825031280518
    3. '=(' → logprob: -8.724282264709473
    4. ' =(' → logprob: -10.849282264709473
    5. ' (' → logprob: -11.349282264709473
    6. '           ' → logprob: -13.224282264709473
    7. '               ' → logprob: -13.349282264709473
    8. '((' → logprob: -13.599282264709473
    9. '=
' → logprob: -13.599282264709473
    10. ',' → logprob: -14.224282264709473

Token 2431: ' (' (ID: 350)
  Prédit: '(ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.14440035820007324
    2. ' (' → logprob: -2.1444003582000732
    3. '(' → logprob: -4.269400596618652
    4. '               ' → logprob: -6.019400596618652
    5. '(n' → logprob: -7.519400596618652
    6. '                   ' → logprob: -9.019400596618652
    7. '           ' → logprob: -9.269400596618652
    8. '(next' → logprob: -9.894400596618652
    9. '   ' → logprob: -10.769400596618652
    10. '(new' → logprob: -10.769400596618652

Token 2432: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -2.8087270038668066e-05
    2. ' neighbor' → logprob: -11.000027656555176
    3. '(ne' → logprob: -11.500027656555176
    4. '                   ' → logprob: -14.625027656555176
    5. '               ' → logprob: -14.875027656555176
    6. '   ' → logprob: -16.000028610229492
    7. '           ' → logprob: -16.500028610229492
    8. '(' → logprob: -16.875028610229492
    9. 'ne' → logprob: -17.625028610229492
    10. ' (' → logprob: -17.625028610229492

Token 2433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005592276575043797
    2. ',new' → logprob: -7.500559329986572
    3. ' ,' → logprob: -12.500558853149414
    4. 'new' → logprob: -13.875558853149414
    5. ',
' → logprob: -14.125558853149414
    6. ',key' → logprob: -14.625558853149414
    7. ',n' → logprob: -16.875558853149414
    8. ',next' → logprob: -17.000558853149414
    9. '   ' → logprob: -17.125558853149414
    10. ',user' → logprob: -17.125558853149414

Token 2434: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.547789674485102e-05
    2. ' new' → logprob: -10.250035285949707
    3. '                   ' → logprob: -17.625036239624023
    4. '               ' → logprob: -17.750036239624023
    5. ')new' → logprob: -19.250036239624023
    6. '```' → logprob: -19.875036239624023
    7. 'New' → logprob: -20.250036239624023
    8. '	new' → logprob: -20.750036239624023
    9. '_new' → logprob: -20.750036239624023
    10. '           ' → logprob: -20.750036239624023

Token 2435: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -5.836499985889532e-05
    2. 'f' → logprob: -9.7500581741333
    3. '_' → logprob: -17.375059127807617
    4. ')' → logprob: -19.000059127807617
    5. 'Facing' → logprob: -19.125059127807617
    6. ' _' → logprob: -19.125059127807617
    7. '_face' → logprob: -19.500059127807617
    8. '`' → logprob: -19.875059127807617
    9. '   ' → logprob: -20.125059127807617
    10. '	f' → logprob: -20.250059127807617

Token 2436: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -3.7697225252486533e-06
    2. 'f' → logprob: -13.000003814697266
    3. 'Facing' → logprob: -14.250003814697266
    4. 'ac' → logprob: -15.000003814697266
    5. 'aced' → logprob: -16.250003814697266
    6. 'acting' → logprob: -16.250003814697266
    7. 'ACING' → logprob: -16.375003814697266
    8. 'ace' → logprob: -16.875003814697266
    9. '-facing' → logprob: -16.875003814697266
    10. ' facing' → logprob: -17.250003814697266

Token 2437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02348363772034645
    2. ')
' → logprob: -3.7734837532043457
    3. '<|end|>' → logprob: -9.898483276367188
    4. ',' → logprob: -10.023483276367188
    5. ')
' → logprob: -10.523483276367188
    6. ')

' → logprob: -11.148483276367188
    7. '       ' → logprob: -11.273483276367188
    8. '):
' → logprob: -11.773483276367188
    9. ')>
' → logprob: -12.148483276367188
    10. '),' → logprob: -12.148483276367188

Token 2438: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01621689274907112
    2. ' if' → logprob: -4.89121675491333
    3. '           ' → logprob: -5.89121675491333
    4. '                   ' → logprob: -6.01621675491333
    5. '                
' → logprob: -7.39121675491333
    6. '<|end|>' → logprob: -7.51621675491333
    7. '```' → logprob: -7.51621675491333
    8. '       ' → logprob: -7.76621675491333
    9. 'if' → logprob: -8.266217231750488
    10. ')' → logprob: -8.641217231750488

Token 2439: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20228895545005798
    2. '               ' → logprob: -1.8272889852523804
    3. ' if' → logprob: -3.827288866043091
    4. 'next' → logprob: -8.077288627624512
    5. 'new' → logprob: -9.077288627624512
    6. '```' → logprob: -9.952288627624512
    7. 'prev' → logprob: -11.452288627624512
    8. 'existing' → logprob: -11.702288627624512
    9. 'current' → logprob: -11.952288627624512
    10. ' next' → logprob: -12.327288627624512

Token 2440: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.018571985885500908
    2. ' key' → logprob: -4.143571853637695
    3. '(key' → logprob: -6.143571853637695
    4. 'dist' → logprob: -8.393571853637695
    5. '           ' → logprob: -9.518571853637695
    6. '               ' → logprob: -9.768571853637695
    7. 'arrival' → logprob: -12.143571853637695
    8. ' (' → logprob: -12.268571853637695
    9. 'arr' → logprob: -12.393571853637695
    10. '(dist' → logprob: -12.518571853637695

Token 2441: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.038415879011154175
    2. 'not' → logprob: -3.2884159088134766
    3. ' in' → logprob: -9.413415908813477
    4. ')' → logprob: -9.663415908813477
    5. 'in' → logprob: -10.038415908813477
    6. '[' → logprob: -10.163415908813477
    7. '   ' → logprob: -10.288415908813477
    8. '==' → logprob: -10.788415908813477
    9. ' =' → logprob: -11.038415908813477
    10. '_not' → logprob: -11.163415908813477

Token 2442: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.437999963760376
    2. ' in' → logprob: -1.062999963760376
    3. 'or' → logprob: -5.312999725341797
    4. ' or' → logprob: -6.062999725341797
    5. 'dist' → logprob: -6.437999725341797
    6. '               ' → logprob: -8.812999725341797
    7. '                   ' → logprob: -9.687999725341797
    8. ' dist' → logprob: -10.062999725341797
    9. ')' → logprob: -10.562999725341797
    10. '           ' → logprob: -10.687999725341797

Token 2443: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.088346359931165e-07
    2. ' dist' → logprob: -14.000000953674316
    3. '(dist' → logprob: -20.0
    4. '	dist' → logprob: -20.75
    5. '   ' → logprob: -21.875
    6. '.dist' → logprob: -22.0
    7. 'Dist' → logprob: -23.25
    8. '_dist' → logprob: -23.375
    9. '           ' → logprob: -23.625
    10. '       ' → logprob: -23.75

Token 2444: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12696978449821472
    2. 'or' → logprob: -2.126969814300537
    3. '	or' → logprob: -10.501969337463379
    4. '           ' → logprob: -12.251969337463379
    5. '               ' → logprob: -13.001969337463379
    6. ':' → logprob: -13.001969337463379
    7. '<|end|>' → logprob: -13.251969337463379
    8. '                   ' → logprob: -14.001969337463379
    9. ''or' → logprob: -14.876969337463379
    10. '```' → logprob: -15.251969337463379

Token 2445: ' dist' (ID: 3601)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.1649632751941681
    2. 'dist' → logprob: -1.9149632453918457
    3. 'arr' → logprob: -5.664963245391846
    4. ' arrival' → logprob: -6.789963245391846
    5. ' dist' → logprob: -9.414963722229004
    6. 'new' → logprob: -11.039963722229004
    7. '   ' → logprob: -11.164963722229004
    8. '           ' → logprob: -11.664963722229004
    9. '               ' → logprob: -12.664963722229004
    10. '                   ' → logprob: -12.914963722229004

Token 2446: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.06752518564462662
    2. '[(' → logprob: -3.5675251483917236
    3. '[current' → logprob: -4.067525386810303
    4. '[' → logprob: -4.442525386810303
    5. '>' → logprob: -5.567525386810303
    6. '>[' → logprob: -6.817525386810303
    7. ' >' → logprob: -7.442525386810303
    8. 'key' → logprob: -7.692525386810303
    9. '[
' → logprob: -7.692525386810303
    10. '[token' → logprob: -7.817525386810303

Token 2447: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0031871015671640635
    2. ' >' → logprob: -5.75318717956543
    3. '[' → logprob: -12.50318717956543
    4. '>[' → logprob: -14.12818717956543
    5. '">' → logprob: -14.25318717956543
    6. ']>' → logprob: -14.25318717956543
    7. '>
' → logprob: -14.37818717956543
    8. ']' → logprob: -14.50318717956543
    9. '   ' → logprob: -14.50318717956543
    10. ' ' → logprob: -14.75318717956543

Token 2448: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0004896456957794726
    2. ' >' → logprob: -7.625489711761475
    3. '>`' → logprob: -15.625489234924316
    4. '">' → logprob: -16.000490188598633
    5. '>
' → logprob: -16.000490188598633
    6. '```' → logprob: -16.375490188598633
    7. '>tag' → logprob: -16.500490188598633
    8. '>a' → logprob: -16.625490188598633
    9. '>b' → logprob: -16.750490188598633
    10. '>{' → logprob: -16.875490188598633

Token 2449: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.0002627662615850568
    2. ' arrival' → logprob: -8.250263214111328
    3. '                   ' → logprob: -14.500263214111328
    4. '               ' → logprob: -14.625263214111328
    5. '           ' → logprob: -14.750263214111328
    6. 'arr' → logprob: -16.375263214111328
    7. '   ' → logprob: -16.625263214111328
    8. '                       ' → logprob: -18.125263214111328
    9. '       ' → logprob: -19.250263214111328
    10. '              ' → logprob: -19.500263214111328

Token 2450: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1472419600977446e-06
    2. '_t' → logprob: -15.000000953674316
    3. '+' → logprob: -15.375000953674316
    4. '_tim' → logprob: -16.000001907348633
    5. '_' → logprob: -16.125001907348633
    6. 'Time' → logprob: -16.625001907348633
    7. 'time' → logprob: -16.750001907348633
    8. '_token' → logprob: -17.375001907348633
    9. '_times' → logprob: -17.375001907348633
    10. '```' → logprob: -18.500001907348633

Token 2451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41216418147087097
    2. '[' → logprob: -2.4121642112731934
    3. ')' → logprob: -3.0371642112731934
    4. '               ' → logprob: -3.1621642112731934
    5. ':
' → logprob: -3.6621642112731934
    6. '):' → logprob: -3.7871642112731934
    7. '                   ' → logprob: -4.162164211273193
    8. '                           ' → logprob: -4.537164211273193
    9. 'heap' → logprob: -4.537164211273193
    10. '                       ' → logprob: -4.662164211273193

Token 2452: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9982922673225403
    2. '                           ' → logprob: -1.4982922077178955
    3. '                       ' → logprob: -1.6232922077178955
    4. '```' → logprob: -1.9982922077178955
    5. '                               ' → logprob: -2.9982922077178955
    6. '               ' → logprob: -4.623292446136475
    7. 'heap' → logprob: -4.998292446136475
    8. '                                   ' → logprob: -6.248292446136475
    9. '                                           ' → logprob: -6.748292446136475
    10. '[' → logprob: -7.123292446136475

Token 2453: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.011251295916736126
    2. '                   ' → logprob: -4.636251449584961
    3. '                       ' → logprob: -6.886251449584961
    4. ' dist' → logprob: -7.761251449584961
    5. '               ' → logprob: -10.761251449584961
    6. '```' → logprob: -11.261251449584961
    7. '                           ' → logprob: -12.261251449584961
    8. '           ' → logprob: -13.386251449584961
    9. '	dist' → logprob: -13.511251449584961
    10. '   ' → logprob: -13.761251449584961

Token 2454: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0004946522531099617
    2. '[(' → logprob: -7.625494480133057
    3. '[' → logprob: -12.375494956970215
    4. '[token' → logprob: -13.875494956970215
    5. '[
' → logprob: -14.375494956970215
    6. '(key' → logprob: -14.750494956970215
    7. '```' → logprob: -15.000494956970215
    8. 'key' → logprob: -16.0004940032959
    9. '                   ' → logprob: -16.2504940032959
    10. '                       ' → logprob: -17.0004940032959

Token 2455: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6359007358551025
    2. ' =' → logprob: -0.7609007358551025
    3. ',' → logprob: -6.010900497436523
    4. '[' → logprob: -7.885900497436523
    5. '                   ' → logprob: -8.885900497436523
    6. ']=' → logprob: -9.385900497436523
    7. ')' → logprob: -9.885900497436523
    8. '=
' → logprob: -10.010900497436523
    9. ']' → logprob: -10.260900497436523
    10. ')=' → logprob: -10.385900497436523

Token 2456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00044556602369993925
    2. ' =' → logprob: -7.750445365905762
    3. '=
' → logprob: -11.500445365905762
    4. '[' → logprob: -12.375445365905762
    5. ']=' → logprob: -15.125445365905762
    6. '[
' → logprob: -16.250446319580078
    7. ')=' → logprob: -16.750446319580078
    8. '[key' → logprob: -17.250446319580078
    9. '=[' → logprob: -18.125446319580078
    10. '=

' → logprob: -18.125446319580078

Token 2457: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -0.0015024791937321424
    2. ' arrival' → logprob: -6.501502513885498
    3. 'arr' → logprob: -15.87650203704834
    4. '   ' → logprob: -20.001502990722656
    5. 'Arrival' → logprob: -20.501502990722656
    6. '                   ' → logprob: -21.626502990722656
    7. '
' → logprob: -21.626502990722656
    8. 'departure' → logprob: -21.876502990722656
    9. 'attendance' → logprob: -21.876502990722656
    10. 'appearance' → logprob: -22.001502990722656

Token 2458: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. 'time' → logprob: -18.875
    3. '_value' → logprob: -19.125
    4. 'Time' → logprob: -19.625
    5. '_token' → logprob: -19.875
    6. '_code' → logprob: -20.0
    7. '_type' → logprob: -20.125
    8. '_times' → logprob: -20.625
    9. '_TIME' → logprob: -20.875
    10. '_' → logprob: -21.0

Token 2459: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00036514020757749677
    2. '```' → logprob: -8.125365257263184
    3. '               ' → logprob: -10.875365257263184
    4. ',' → logprob: -11.500365257263184
    5. '           ' → logprob: -11.625365257263184
    6. '                       ' → logprob: -12.000365257263184
    7. '				' → logprob: -12.125365257263184
    8. '   ' → logprob: -12.375365257263184
    9. '                    
' → logprob: -12.750365257263184
    10. '
' → logprob: -12.750365257263184

Token 2460: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02068856917321682
    2. '```' → logprob: -3.895688533782959
    3. 'heap' → logprob: -10.020689010620117
    4. '               ' → logprob: -10.395689010620117
    5. '``' → logprob: -10.520689010620117
    6. '           ' → logprob: -10.895689010620117
    7. '                       ' → logprob: -11.020689010620117
    8. '				' → logprob: -13.145689010620117
    9. '                  ' → logprob: -13.770689010620117
    10. '       ' → logprob: -13.770689010620117

Token 2461: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -5.319370302458992e-06
    2. ' heap' → logprob: -12.250005722045898
    3. '                   ' → logprob: -14.750005722045898
    4. '           ' → logprob: -16.7500057220459
    5. '```' → logprob: -17.5000057220459
    6. '               ' → logprob: -18.0000057220459
    7. 'he' → logprob: -18.5000057220459
    8. '                       ' → logprob: -18.8750057220459
    9. '   ' → logprob: -19.1250057220459
    10. '
' → logprob: -19.5000057220459

Token 2462: ' arrival' (ID: 24861)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.13848432898521423
    2. 'len' → logprob: -2.763484239578247
    3. 'arrival' → logprob: -2.888484239578247
    4. '(heap' → logprob: -5.763484477996826
    5. ' heap' → logprob: -6.388484477996826
    6. '(len' → logprob: -6.638484477996826
    7. 'time' → logprob: -7.513484477996826
    8. 'not' → logprob: -7.638484477996826
    9. 'new' → logprob: -7.763484477996826
    10. 'he' → logprob: -8.013484001159668

Token 2463: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.12743376195430756
    2. 'q' → logprob: -2.1274337768554688
    3. 'e' → logprob: -9.002433776855469
    4. 't' → logprob: -9.752433776855469
    5. '[' → logprob: -9.877433776855469
    6. ')' → logprob: -10.002433776855469
    7. 'f' → logprob: -10.127433776855469
    8. '                   ' → logprob: -10.877433776855469
    9. '           ' → logprob: -11.002433776855469
    10. '               ' → logprob: -11.252433776855469

Token 2464: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.2366942167282104
    2. '<' → logprob: -1.3616942167282104
    3. '<=' → logprob: -1.4866942167282104
    4. ' <' → logprob: -1.6116942167282104
    5. '+' → logprob: -4.3616943359375
    6. '                   ' → logprob: -5.4866943359375
    7. ')' → logprob: -5.8616943359375
    8. '                       ' → logprob: -5.9866943359375
    9. ' +' → logprob: -6.1116943359375
    10. '```' → logprob: -7.8616943359375

Token 2465: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.9153885558771435e-06
    2. ' self' → logprob: -12.250005722045898
    3. '100' → logprob: -13.750005722045898
    4. '   ' → logprob: -18.5000057220459
    5. '(self' → logprob: -18.5000057220459
    6. ' ' → logprob: -20.0000057220459
    7. '	self' → logprob: -20.3750057220459
    8. '=self' → logprob: -20.6250057220459
    9. '[self' → logprob: -21.7500057220459
    10. '1' → logprob: -22.1250057220459

Token 2466: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0015030752401798964
    2. 'max' → logprob: -6.501502990722656
    3. '.city' → logprob: -14.626502990722656
    4. '.user' → logprob: -15.876502990722656
    5. '.dist' → logprob: -16.251502990722656
    6. '.current' → logprob: -17.876502990722656
    7. '
' → logprob: -18.251502990722656
    8. ' max' → logprob: -18.376502990722656
    9. '   ' → logprob: -18.501502990722656
    10. '.maximum' → logprob: -18.876502990722656

Token 2467: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -8.180258191714529e-06
    2. 'time' → logprob: -12.125008583068848
    3. 'Time' → logprob: -14.375008583068848
    4. 'heap' → logprob: -14.500008583068848
    5. '_limit' → logprob: -15.000008583068848
    6. '_t' → logprob: -15.375008583068848
    7. '   ' → logprob: -15.625008583068848
    8. '
' → logprob: -16.25000762939453
    9. 'limit' → logprob: -16.25000762939453
    10. '_tim' → logprob: -16.37500762939453

Token 2468: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.03855467587709427
    2. 'limit' → logprob: -3.9135546684265137
    3. 'imit' → logprob: -4.413554668426514
    4. '_time' → logprob: -6.038554668426514
    5. 'ime' → logprob: -7.163554668426514
    6. '               ' → logprob: -7.538554668426514
    7. '                   ' → logprob: -7.913554668426514
    8. 'Limit' → logprob: -8.038555145263672
    9. '           ' → logprob: -8.163555145263672
    10. ':
' → logprob: -8.413555145263672

Token 2469: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1050834208726883
    2. '                       ' → logprob: -3.230083465576172
    3. '                           ' → logprob: -3.855083465576172
    4. '                   ' → logprob: -3.980083465576172
    5. ':' → logprob: -4.980083465576172
    6. ',' → logprob: -4.980083465576172
    7. '):
' → logprob: -5.980083465576172
    8. '                               ' → logprob: -6.730083465576172
    9. ',
' → logprob: -7.355083465576172
    10. '               ' → logprob: -7.355083465576172

Token 2470: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9792672395706177
    2. '                   ' → logprob: -1.1042672395706177
    3. 'heap' → logprob: -1.4792672395706177
    4. ' heap' → logprob: -3.229267120361328
    5. '```' → logprob: -3.729267120361328
    6. '                           ' → logprob: -7.229267120361328
    7. '               ' → logprob: -8.229267120361328
    8. '           ' → logprob: -8.479267120361328
    9. '   ' → logprob: -8.729267120361328
    10. '``' → logprob: -9.729267120361328

Token 2471: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -6.802049756515771e-05
    2. '                           ' → logprob: -10.250067710876465
    3. ' heap' → logprob: -11.125067710876465
    4. '                       ' → logprob: -11.750067710876465
    5. '                   ' → logprob: -12.250067710876465
    6. '           ' → logprob: -13.125067710876465
    7. '   ' → logprob: -13.625067710876465
    8. '```' → logprob: -13.625067710876465
    9. '               ' → logprob: -14.750067710876465
    10. '                               ' → logprob: -15.375067710876465

Token 2472: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06210571527481079
    2. '.he' → logprob: -2.812105655670166
    3. 'he' → logprob: -9.437106132507324
    4. '.heap' → logprob: -10.562106132507324
    5. 'app' → logprob: -11.062106132507324
    6. '.' → logprob: -12.312106132507324
    7. '.q' → logprob: -12.437106132507324
    8. '```' → logprob: -13.062106132507324
    9. 'heap' → logprob: -13.562106132507324
    10. ' he' → logprob: -14.187106132507324

Token 2473: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -3.47626737493556e-05
    2. 'he' → logprob: -10.50003433227539
    3. '.heap' → logprob: -12.25003433227539
    4. '.push' → logprob: -13.75003433227539
    5. '```' → logprob: -14.75003433227539
    6. 'q' → logprob: -15.12503433227539
    7. ' he' → logprob: -15.25003433227539
    8. '.' → logprob: -16.75003433227539
    9. 'ush' → logprob: -16.87503433227539
    10. ').' → logprob: -17.00003433227539

Token 2474: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00833489466458559
    2. 'pp' → logprob: -5.258335113525391
    3. 'ush' → logprob: -6.258335113525391
    4. 'push' → logprob: -6.758335113525391
    5. 'p' → logprob: -11.13333511352539
    6. 'ap' → logprob: -12.38333511352539
    7. 'q' → logprob: -14.63333511352539
    8. 'e' → logprob: -15.13333511352539
    9. '```' → logprob: -15.13333511352539
    10. 'appen' → logprob: -15.88333511352539

Token 2475: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00027301779482513666
    2. 'push' → logprob: -8.375272750854492
    3. 'sh' → logprob: -10.250272750854492
    4. 'app' → logprob: -12.750272750854492
    5. 'pp' → logprob: -12.875272750854492
    6. 's' → logprob: -14.375272750854492
    7. 'p' → logprob: -15.000272750854492
    8. '.push' → logprob: -15.875272750854492
    9. '```' → logprob: -16.000272750854492
    10. 'us' → logprob: -16.250272750854492

Token 2476: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.9504606825648807e-05
    2. '(' → logprob: -11.375019073486328
    3. '(h' → logprob: -11.875019073486328
    4. '```' → logprob: -14.125019073486328
    5. 'heap' → logprob: -15.625019073486328
    6. '(
' → logprob: -16.125019073486328
    7. ' (' → logprob: -16.750019073486328
    8. '(hit' → logprob: -17.250019073486328
    9. '(queue' → logprob: -18.125019073486328
    10. '(hash' → logprob: -18.375019073486328

Token 2477: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0004473540757317096
    2. '(' → logprob: -8.000447273254395
    3. '(h' → logprob: -9.500447273254395
    4. ',' → logprob: -10.750447273254395
    5. '```' → logprob: -12.000447273254395
    6. 'heap' → logprob: -12.500447273254395
    7. '(
' → logprob: -13.250447273254395
    8. '((' → logprob: -13.375447273254395
    9. '(_,' → logprob: -14.750447273254395
    10. '(hit' → logprob: -15.125447273254395

Token 2478: ' (' (ID: 350)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0026456944178789854
    2. ' (' → logprob: -6.252645492553711
    3. '(' → logprob: -7.252645492553711
    4. '[arr' → logprob: -11.877645492553711
    5. '                           ' → logprob: -15.127645492553711
    6. '(ar' → logprob: -15.752645492553711
    7. '(interval' → logprob: -15.752645492553711
    8. '(abs' → logprob: -15.752645492553711
    9. '```' → logprob: -15.752645492553711
    10. '   ' → logprob: -15.877645492553711

Token 2479: 'arrival' (ID: 183251)
  Prédit: 'arrival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -1.8624639324116288e-06
    2. ' arrival' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.375001907348633
    4. '                   ' → logprob: -18.500001907348633
    5. '           ' → logprob: -19.250001907348633
    6. '
' → logprob: -20.500001907348633
    7. '               ' → logprob: -20.875001907348633
    8. '                                   ' → logprob: -21.125001907348633
    9. 'arr' → logprob: -21.375001907348633
    10. ' ' → logprob: -21.375001907348633

Token 2480: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: 0.0
    2. 'time' → logprob: -18.125
    3. 'arrival' → logprob: -19.625
    4. '_arr' → logprob: -20.125
    5. '   ' → logprob: -20.5
    6. '_times' → logprob: -20.5
    7. '                   ' → logprob: -20.625
    8. '_TIME' → logprob: -20.875
    9. '+' → logprob: -21.0
    10. 'Time' → logprob: -21.0

Token 2481: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.697387966094539e-05
    2. ',
' → logprob: -10.000086784362793
    3. ',state' → logprob: -10.500086784362793
    4. ',new' → logprob: -11.500086784362793
    5. ' ,' → logprob: -13.875086784362793
    6. '                       ' → logprob: -14.875086784362793
    7. '           ' → logprob: -15.250086784362793
    8. '                           ' → logprob: -15.250086784362793
    9. ',{
' → logprob: -15.250086784362793
    10. '   ' → logprob: -15.375086784362793

Token 2482: ' State' (ID: 5388)
  Prédit: 'State'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -7.493430894101039e-05
    2. ' State' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.37507438659668
    4. '	State' → logprob: -17.37507438659668
    5. '                       ' → logprob: -17.75007438659668
    6. 'state' → logprob: -17.87507438659668
    7. '                           ' → logprob: -18.37507438659668
    8. '                   ' → logprob: -19.37507438659668
    9. '(State' → logprob: -19.87507438659668
    10. '_State' → logprob: -19.87507438659668

Token 2483: '(ne' (ID: 79401)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.20142629742622375
    2. '(ne' → logprob: -1.7014262676239014
    3. 'ne' → logprob: -12.07642650604248
    4. '```' → logprob: -12.57642650604248
    5. '
' → logprob: -13.57642650604248
    6. '(
' → logprob: -14.07642650604248
    7. '(' → logprob: -14.57642650604248
    8. ' neighbor' → logprob: -14.82642650604248
    9. '                   ' → logprob: -15.20142650604248
    10. 'Neighbor' → logprob: -15.70142650604248

Token 2484: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.00027468299958854914
    2. 'gh' → logprob: -9.375274658203125
    3. 'igh' → logprob: -9.875274658203125
    4. 'neighbor' → logprob: -10.000274658203125
    5. 'ighborhood' → logprob: -10.875274658203125
    6. 'ight' → logprob: -11.500274658203125
    7. 'w' → logprob: -11.875274658203125
    8. 'or' → logprob: -12.000274658203125
    9. 'ighbour' → logprob: -12.000274658203125
    10. 'bor' → logprob: -12.125274658203125

Token 2485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00466330349445343
    2. ',new' → logprob: -5.379663467407227
    3. 'new' → logprob: -10.129663467407227
    4. ',
' → logprob: -13.254663467407227
    5. ',next' → logprob: -15.004663467407227
    6. ' ,' → logprob: -15.379663467407227
    7. ',n' → logprob: -15.879663467407227
    8. '                       ' → logprob: -16.254663467407227
    9. '                           ' → logprob: -16.379663467407227
    10. '‌,' → logprob: -16.754663467407227

Token 2486: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -5.1928003813372925e-05
    2. ' new' → logprob: -9.875051498413086
    3. 'move' → logprob: -16.500051498413086
    4. '   ' → logprob: -17.125051498413086
    5. '
' → logprob: -17.125051498413086
    6. '                               ' → logprob: -17.375051498413086
    7. '[new' → logprob: -17.750051498413086
    8. '                                   ' → logprob: -17.750051498413086
    9. '                           ' → logprob: -17.875051498413086
    10. '                   ' → logprob: -18.125051498413086

Token 2487: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0024787469301372766
    2. 'f' → logprob: -6.00247859954834
    3. 'Facing' → logprob: -13.50247859954834
    4. 'direction' → logprob: -14.50247859954834
    5. '-facing' → logprob: -14.50247859954834
    6. ' facing' → logprob: -15.75247859954834
    7. 'face' → logprob: -16.127479553222656
    8. '_dir' → logprob: -16.127479553222656
    9. 'dir' → logprob: -16.627479553222656
    10. 'fac' → logprob: -17.002479553222656

Token 2488: 'acing' (ID: 7997)
  Prédit: 'acing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acing' → logprob: -0.00026860725483857095
    2. '_dir' → logprob: -9.375268936157227
    3. 'ing' → logprob: -10.000268936157227
    4. 'ac' → logprob: -10.625268936157227
    5. 'Facing' → logprob: -11.125268936157227
    6. 'ace' → logprob: -11.250268936157227
    7. 'cing' → logprob: -11.375268936157227
    8. 'aced' → logprob: -11.375268936157227
    9. 'acting' → logprob: -11.750268936157227
    10. 'ading' → logprob: -12.000268936157227

Token 2489: ',' (ID: 11)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.001654229243285954
    2. ',' → logprob: -6.501654148101807
    3. ')))
' → logprob: -9.376654624938965
    4. '))' → logprob: -9.751654624938965
    5. '))))' → logprob: -12.626654624938965
    6. ')' → logprob: -13.001654624938965
    7. ')));' → logprob: -13.626654624938965
    8. ' ' → logprob: -14.501654624938965
    9. ')))

' → logprob: -14.751654624938965
    10. '   ' → logprob: -15.626654624938965

Token 2490: ' arrival' (ID: 24861)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -3.7697225252486533e-06
    2. ' arrival' → logprob: -12.500003814697266
    3. '                   ' → logprob: -18.125003814697266
    4. '                                   ' → logprob: -18.500003814697266
    5. '           ' → logprob: -19.000003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '                                           ' → logprob: -19.500003814697266
    8. '                           ' → logprob: -20.000003814697266
    9. '                       ' → logprob: -20.750003814697266
    10. 'arr' → logprob: -21.125003814697266

Token 2491: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5048530030981055e-06
    2. 'time' → logprob: -13.625001907348633
    3. 'arrival' → logprob: -16.250001907348633
    4. ')' → logprob: -16.875001907348633
    5. 'Time' → logprob: -17.625001907348633
    6. '_arr' → logprob: -17.625001907348633
    7. '))' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '"time' → logprob: -18.750001907348633
    10. 'ation' → logprob: -18.875001907348633

Token 2492: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00023238400171976537
    2. '))' → logprob: -8.875232696533203
    3. ')))
' → logprob: -9.500232696533203
    4. ')' → logprob: -11.875232696533203
    5. '))))' → logprob: -12.250232696533203
    6. '                   ' → logprob: -12.875232696533203
    7. '                       ' → logprob: -14.000232696533203
    8. '               ' → logprob: -14.250232696533203
    9. ')));' → logprob: -14.375232696533203
    10. '           ' → logprob: -14.750232696533203

Token 2493: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2494: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03826272487640381
    2. '       ' → logprob: -3.2882628440856934
    3. '```' → logprob: -8.663262367248535
    4. ' return' → logprob: -10.413262367248535
    5. '	return' → logprob: -12.288262367248535
    6. '
' → logprob: -12.413262367248535
    7. '{return' → logprob: -12.538262367248535
    8. '   ' → logprob: -12.913262367248535
    9. '#' (adapté à ' #') → logprob: -14.163262367248535
    10. '        
' → logprob: -14.163262367248535

Token 2495: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00043496055877767503
    2. '#' → logprob: -7.750434875488281
    3. '       ' → logprob: -12.500434875488281
    4. ' return' → logprob: -14.500434875488281
    5. '   ' → logprob: -18.12543487548828
    6. '	return' → logprob: -18.12543487548828
    7. 'Return' → logprob: -20.12543487548828
    8. '```' → logprob: -20.50043487548828
    9. '        
' → logprob: -21.87543487548828
    10. 'raise' → logprob: -22.12543487548828

Token 2496: ' no' (ID: 860)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004919105558656156
    2. ' -' → logprob: -7.750492095947266
    3. 'None' → logprob: -9.750492095947266
    4. '       ' → logprob: -13.250492095947266
    5. ' None' → logprob: -14.000492095947266
    6. 'return' → logprob: -15.625492095947266
    7. '   ' → logprob: -16.000492095947266
    8. ' ' → logprob: -17.500492095947266
    9. '-return' → logprob: -18.125492095947266
    10. '  ' → logprob: -18.250492095947266

Token 2497: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1269829124212265
    2. ' return' → logprob: -2.7519829273223877
    3. 'result' → logprob: -3.3769829273223877
    4. 'valid' → logprob: -5.501982688903809
    5. 'def' → logprob: -5.876982688903809
    6. ' -' → logprob: -6.001982688903809
    7. 'answer' → logprob: -6.126982688903809
    8. '-' → logprob: -6.751982688903809
    9. '   ' → logprob: -6.751982688903809
    10. ' valid' → logprob: -6.751982688903809

Token 2498: ' found' (ID: 2491)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0013613052433356643
    2. '       ' → logprob: -6.75136137008667
    3. 'found' → logprob: -9.501360893249512
    4. ' return' → logprob: -9.501360893249512
    5. '```' → logprob: -10.876360893249512
    6. '-' → logprob: -11.876360893249512
    7. ':return' → logprob: -12.626360893249512
    8. 'is' → logprob: -12.751360893249512
    9. '   ' → logprob: -13.376360893249512
    10. ':' → logprob: -13.376360893249512

Token 2499: ' within' (ID: 3518)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5764740109443665
    2. '       ' → logprob: -0.8264740109443665
    3. ' return' → logprob: -8.2014741897583
    4. '-' → logprob: -9.0764741897583
    5. '   ' → logprob: -9.4514741897583
    6. '{return' → logprob: -10.5764741897583
    7. '	return' → logprob: -10.8264741897583
    8. '
' → logprob: -12.2014741897583
    9. '	' → logprob: -12.4514741897583
    10. '```' → logprob: -12.7014741897583

Token 2500: ' limit' (ID: 5967)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2664456789934775e-06
    2. ' self' → logprob: -13.875000953674316
    3. '
' → logprob: -16.500001907348633
    4. '       ' → logprob: -17.625001907348633
    5. '   ' → logprob: -17.875001907348633
    6. 'the' → logprob: -18.125001907348633
    7. '100' → logprob: -18.375001907348633
    8. '=self' → logprob: -18.875001907348633
    9. '(self' → logprob: -19.625001907348633
    10. '```' → logprob: -19.625001907348633

Token 2501: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0017137357499450445
    2. '       ' → logprob: -6.751713752746582
    3. ' return' → logprob: -7.626713752746582
    4. ':return' → logprob: -10.751713752746582
    5. '{return' → logprob: -11.126713752746582
    6. '
' → logprob: -12.126713752746582
    7. ',' → logprob: -12.626713752746582
    8. '```' → logprob: -12.626713752746582
    9. '	return' → logprob: -13.501713752746582
    10. '-' → logprob: -13.501713752746582

Token 2502: ' problem' (ID: 4792)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.975612187583465e-05
    2. ' return' → logprob: -11.000029563903809
    3. '       ' → logprob: -11.250029563903809
    4. '	return' → logprob: -17.500030517578125
    5. '```' → logprob: -18.250030517578125
    6. '-' → logprob: -19.000030517578125
    7. '{return' → logprob: -19.250030517578125
    8. '   ' → logprob: -19.500030517578125
    9. '#' → logprob: -21.250030517578125
    10. ':return' → logprob: -21.250030517578125

Token 2503: ' states' (ID: 9407)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.032089002430438995
    2. '       ' → logprob: -3.6570889949798584
    3. 'raise' → logprob: -6.2820892333984375
    4. '
' → logprob: -6.7820892333984375
    5. '```' → logprob: -6.9070892333984375
    6. ' return' → logprob: -7.5320892333984375
    7. ':return' → logprob: -7.7820892333984375
    8. ':
' → logprob: -8.282089233398438
    9. ':' → logprob: -8.532089233398438
    10. '        
' → logprob: -9.032089233398438

Token 2504: ' reachable' (ID: 143580)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006815764936618507
    2. ' return' → logprob: -8.00068187713623
    3. '       ' → logprob: -8.12568187713623
    4. '-' → logprob: -10.87568187713623
    5. '```' → logprob: -10.87568187713623
    6. '           ' → logprob: -11.75068187713623
    7. ':return' → logprob: -13.75068187713623
    8. '#' → logprob: -14.00068187713623
    9. '   ' → logprob: -14.25068187713623
    10. '	return' → logprob: -14.37568187713623

Token 2505: ' within' (ID: 3518)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.058079756796360016
    2. '       ' → logprob: -3.558079719543457
    3. ' return' → logprob: -4.433079719543457
    4. '
' → logprob: -5.183079719543457
    5. 'None' → logprob: -5.683079719543457
    6. '        
' → logprob: -6.808079719543457
    7. 'raise' → logprob: -6.808079719543457
    8. ':
' → logprob: -6.933079719543457
    9. ':return' → logprob: -6.933079719543457
    10. '```' → logprob: -7.183079719543457

Token 2506: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32215309143066406
    2. 'self' → logprob: -1.322153091430664
    3. 'float' → logprob: -5.447153091430664
    4. 'return' → logprob: -5.822153091430664
    5. '100' → logprob: -7.572153091430664
    6. '-self' → logprob: -8.072153091430664
    7. 'None' → logprob: -9.072153091430664
    8. '10' → logprob: -9.072153091430664
    9. '
' → logprob: -9.447153091430664
    10. ' -' → logprob: -9.572153091430664

Token 2507: '100' (ID: 1353)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4511719048023224
    2. 'self' → logprob: -1.076171875
    3. '100' → logprob: -4.701171875
    4. 'the' → logprob: -5.576171875
    5. 'float' → logprob: -5.701171875
    6. '-' → logprob: -6.201171875
    7. 'int' → logprob: -7.076171875
    8. '10' → logprob: -7.451171875
    9. 'sys' → logprob: -7.576171875
    10. 'that' → logprob: -7.701171875

Token 2508: ' minutes' (ID: 5438)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2049439400434494
    2. '       ' → logprob: -1.7049438953399658
    3. ' return' → logprob: -5.704944133758545
    4. '   ' → logprob: -9.454943656921387
    5. '```' → logprob: -10.329943656921387
    6. '-' → logprob: -10.954943656921387
    7. '
' → logprob: -11.204943656921387
    8. '      ' → logprob: -11.704943656921387
    9. 'raise' → logprob: -11.829943656921387
    10. '	return' → logprob: -12.079943656921387

Token 2509: '.
' (ID: 558)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.577750563621521
    2. '       ' → logprob: -0.827750563621521
    3. '
' → logprob: -7.0777506828308105
    4. ' return' → logprob: -8.327750205993652
    5. '   ' → logprob: -8.327750205993652
    6. '```' → logprob: -8.327750205993652
    7. '	' → logprob: -9.452750205993652
    8. 'None' → logprob: -9.952750205993652
    9. '	return' → logprob: -10.202750205993652
    10. '        
' → logprob: -10.327750205993652

Token 2510: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07146067917346954
    2. '       ' → logprob: -2.696460723876953
    3. '```' → logprob: -7.196460723876953
    4. ' return' → logprob: -8.071460723876953
    5. '{return' → logprob: -8.321460723876953
    6. '	return' → logprob: -8.946460723876953
    7. '   ' → logprob: -10.446460723876953
    8. ':return' → logprob: -10.571460723876953
    9. '
' → logprob: -11.946460723876953
    10. '@return' → logprob: -12.196460723876953

Token 2511: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.030182350426912308
    2. '       ' → logprob: -3.530182361602783
    3. ' return' → logprob: -8.530181884765625
    4. '{return' → logprob: -9.655181884765625
    5. '   ' → logprob: -9.780181884765625
    6. '	return' → logprob: -9.905181884765625
    7. '```' → logprob: -10.030181884765625
    8. 'Return' → logprob: -12.405181884765625
    9. '_return' → logprob: -12.530181884765625
    10. ':return' → logprob: -12.780181884765625

Token 2512: ' So' (ID: 2632)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -5.967624019831419e-05
    2. '       ' → logprob: -10.000060081481934
    3. ' return' → logprob: -11.750060081481934
    4. '```' → logprob: -12.375060081481934
    5. '	return' → logprob: -13.750060081481934
    6. '{return' → logprob: -14.500060081481934
    7. '   ' → logprob: -15.125060081481934
    8. 'raise' → logprob: -15.125060081481934
    9. 'Return' → logprob: -17.375059127807617
    10. ':return' → logprob: -17.500059127807617

Token 2513: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.7432603272027336e-06
    2. '       ' → logprob: -13.750001907348633
    3. ' return' → logprob: -14.250001907348633
    4. 'raise' → logprob: -18.750001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '	return' → logprob: -22.250001907348633
    7. '           ' → logprob: -22.625001907348633
    8. '#' → logprob: -22.625001907348633
    9. '```' → logprob: -23.125001907348633
    10. '               ' → logprob: -23.750001907348633

Token 2514: ' something' (ID: 3543)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1875571544806007e-05
    2. ' -' → logprob: -11.500011444091797
    3. 'None' → logprob: -13.750011444091797
    4. 'float' → logprob: -14.500011444091797
    5. '100' → logprob: -17.250011444091797
    6. '   ' → logprob: -17.750011444091797
    7. 'sys' → logprob: -17.875011444091797
    8. '```' → logprob: -18.125011444091797
    9. 'int' → logprob: -19.375011444091797
    10. '-inf' → logprob: -19.500011444091797

Token 2515: ' large' (ID: 4410)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.308546245098114
    2. '       ' → logprob: -1.6835463047027588
    3. 'return' → logprob: -2.683546304702759
    4. '
' → logprob: -4.80854606628418
    5. ' -' → logprob: -6.55854606628418
    6. '0' → logprob: -7.55854606628418
    7. '        
' → logprob: -8.18354606628418
    8. '   ' → logprob: -8.43354606628418
    9. 'None' → logprob: -8.55854606628418
    10. 'float' → logprob: -8.93354606628418

Token 2516: ' or' (ID: 503)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04945319518446922
    2. '       ' → logprob: -3.0494532585144043
    3. '
' → logprob: -7.674453258514404
    4. '100' → logprob: -8.549452781677246
    5. ' return' → logprob: -9.424452781677246
    6. '999' → logprob: -9.549452781677246
    7. 'float' → logprob: -10.674452781677246
    8. '        
' → logprob: -11.674452781677246
    9. '```' → logprob: -12.049452781677246
    10. '10' → logprob: -12.174452781677246

Token 2517: ' no' (ID: 860)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -4.584861744660884e-05
    2. ' -' → logprob: -10.500045776367188
    3. 'None' → logprob: -11.000045776367188
    4. 'return' → logprob: -14.375045776367188
    5. '
' → logprob: -15.375045776367188
    6. 'sys' → logprob: -15.625045776367188
    7. '```' → logprob: -15.625045776367188
    8. '       ' → logprob: -15.875045776367188
    9. 'float' → logprob: -16.625045776367188
    10. '   ' → logprob: -16.625045776367188

Token 2518: ' solution' (ID: 7578)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5226796865463257
    2. 'ne' → logprob: -1.1476796865463257
    3. 'n' → logprob: -2.7726798057556152
    4. 't' → logprob: -4.897679805755615
    5. 'result' → logprob: -4.897679805755615
    6. ' return' → logprob: -5.647679805755615
    7. 'r' → logprob: -5.647679805755615
    8. '```' → logprob: -6.522679805755615
    9. 'None' → logprob: -7.272679805755615
    10. 'answer' → logprob: -7.397679805755615

Token 2519: ' fallback' (ID: 66264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023889247328042984
    2. '       ' → logprob: -3.7738893032073975
    3. '
' → logprob: -7.898889064788818
    4. ' return' → logprob: -9.148889541625977
    5. '100' → logprob: -9.273889541625977
    6. '        
' → logprob: -10.273889541625977
    7. 'float' → logprob: -11.398889541625977
    8. '999' → logprob: -11.648889541625977
    9. '{return' → logprob: -12.148889541625977
    10. '   ' → logprob: -12.273889541625977

Token 2520: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06243748962879181
    2. '       ' → logprob: -2.8124375343322754
    3. ' return' → logprob: -8.562437057495117
    4. '
' → logprob: -8.812437057495117
    5. '```' → logprob: -9.687437057495117
    6. '{return' → logprob: -10.687437057495117
    7. '        
' → logprob: -10.937437057495117
    8. '   ' → logprob: -11.562437057495117
    9. '	return' → logprob: -12.562437057495117
    10. 'float' → logprob: -12.812437057495117

Token 2521: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.028987299650907516
    2. '```' → logprob: -4.153987407684326
    3. '       ' → logprob: -4.403987407684326
    4. ' return' → logprob: -8.653986930847168
    5. '{return' → logprob: -8.903986930847168
    6. 'None' → logprob: -9.528986930847168
    7. '
' → logprob: -9.653986930847168
    8. '   ' → logprob: -10.278986930847168
    9. '<|end|>' → logprob: -10.528986930847168
    10. 'Return' → logprob: -10.653986930847168

Token 2522: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019711002241820097
    2. '```' → logprob: -6.876971244812012
    3. '       ' → logprob: -7.251971244812012
    4. '{return' → logprob: -9.126971244812012
    5. ' return' → logprob: -9.251971244812012
    6. '   ' → logprob: -12.251971244812012
    7. ':return' → logprob: -13.001971244812012
    8. 'Return' → logprob: -13.251971244812012
    9. '999' → logprob: -13.376971244812012
    10. '        
' → logprob: -13.376971244812012

Token 2523: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0021050558425486088
    2. 'float' → logprob: -6.252105236053467
    3. 'None' → logprob: -9.252104759216309
    4. ' -' → logprob: -10.127104759216309
    5. 'sys' → logprob: -10.752104759216309
    6. '10' → logprob: -11.002104759216309
    7. '100' → logprob: -13.627104759216309
    8. 'int' → logprob: -13.752104759216309
    9. '999' → logprob: -16.502105712890625
    10. '   ' → logprob: -16.502105712890625

Token 2524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '999' → logprob: -20.125
    3. '2' → logprob: -21.5
    4. '99' → logprob: -22.0
    5. '１' → logprob: -22.5
    6. '```' → logprob: -22.625
    7. '۱' → logprob: -22.75
    8. '-' → logprob: -23.125
    9. 'float' → logprob: -24.125
    10. '100' → logprob: -24.125

Token 2525: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2526: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2527: ' Main' (ID: 7956)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07295985519886017
    2. '```' → logprob: -3.1979598999023438
    3. '<|end|>' → logprob: -3.8229598999023438
    4. 'def' → logprob: -4.947959899902344
    5. 'import' → logprob: -8.447959899902344
    6. '<|end|>' → logprob: -8.572959899902344
    7. '``' → logprob: -10.447959899902344
    8. '...' → logprob: -10.697959899902344
    9. '"""' → logprob: -11.322959899902344
    10. 'The' → logprob: -11.322959899902344

Token 2528: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00772055983543396
    2. 'if' → logprob: -4.882720470428467
    3. '```' → logprob: -9.757720947265625
    4. '#' → logprob: -10.882720947265625
    5. 'import' → logprob: -11.257720947265625
    6. 'class' → logprob: -11.882720947265625
    7. ':' → logprob: -12.007720947265625
    8. '
' → logprob: -12.132720947265625
    9. ':def' → logprob: -13.007720947265625
    10. ' if' → logprob: -13.132720947265625

Token 2529: '/output' (ID: 111294)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1273093968629837
    2. 'if' → logprob: -3.2523093223571777
    3. ':' → logprob: -3.3773093223571777
    4. 'for' → logprob: -4.002309322357178
    5. '():' → logprob: -4.752309322357178
    6. '()' → logprob: -5.252309322357178
    7. 'line' → logprob: -5.502309322357178
    8. 'import' → logprob: -6.127309322357178
    9. '```' → logprob: -6.627309322357178
    10. '#' → logprob: -6.627309322357178

Token 2530: ' processing' (ID: 12323)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009065833874046803
    2. 'if' → logprob: -4.759065628051758
    3. 'import' → logprob: -8.634065628051758
    4. '
' → logprob: -8.759065628051758
    5. '```' → logprob: -9.384065628051758
    6. 'for' → logprob: -11.009065628051758
    7. '#' → logprob: -11.759065628051758
    8. 'n' → logprob: -13.634065628051758
    9. 'line' → logprob: -14.009065628051758
    10. '\' → logprob: -14.134065628051758

Token 2531: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031943509820848703
    2. 'if' → logprob: -5.753194332122803
    3. 'import' → logprob: -11.253194808959961
    4. 'for' → logprob: -13.503194808959961
    5. '```' → logprob: -13.753194808959961
    6. '
' → logprob: -14.128194808959961
    7. ' def' → logprob: -15.128194808959961
    8. '#' → logprob: -16.12819480895996
    9. 'class' → logprob: -16.75319480895996
    10. ' if' → logprob: -16.75319480895996

Token 2532: ' calculation' (ID: 40722)
  Prédit: 'execution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'execution' → logprob: -0.11889117956161499
    2. 'example' → logprob: -3.1188912391662598
    3. 'def' → logprob: -4.11889123916626
    4. 'solution' → logprob: -4.36889123916626
    5. 'testing' → logprob: -4.49389123916626
    6. 'usage' → logprob: -4.74389123916626
    7. 'entry' → logprob: -5.99389123916626
    8. '#' → logprob: -5.99389123916626
    9. 'simulation' → logprob: -6.11889123916626
    10. 'test' → logprob: -6.74389123916626

Token 2533: ' engine' (ID: 6018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004785744531545788
    2. 'if' → logprob: -7.750478744506836
    3. 'import' → logprob: -10.625478744506836
    4. '#' → logprob: -11.625478744506836
    5. '```' → logprob: -11.625478744506836
    6. 'for' → logprob: -12.875478744506836
    7. '
' → logprob: -13.500478744506836
    8. ' def' → logprob: -14.375478744506836
    9. 'class' → logprob: -14.750478744506836
    10. 'n' → logprob: -16.125478744506836

Token 2534: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020430791191756725
    2. 'class' → logprob: -6.2520432472229
    3. 'import' → logprob: -9.252042770385742
    4. '#' → logprob: -11.502042770385742
    5. '<|end|>' → logprob: -12.877042770385742
    6. '   ' → logprob: -13.127042770385742
    7. ' def' → logprob: -13.502042770385742
    8. '```' → logprob: -13.877042770385742
    9. 'if' → logprob: -14.377042770385742
    10. '
' → logprob: -15.002042770385742

Token 2535: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004085997585207224
    2. 'class' → logprob: -5.504086017608643
    3. 'if' → logprob: -12.254085540771484
    4. 'import' → logprob: -12.879085540771484
    5. '#' → logprob: -16.129085540771484
    6. ' def' → logprob: -16.254085540771484
    7. '```' → logprob: -16.379085540771484
    8. '   ' → logprob: -17.004085540771484
    9. ' class' → logprob: -18.004085540771484
    10. '
' → logprob: -18.504085540771484

Token 2536: ' Solver' (ID: 141655)
  Prédit: 'Traffic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Traffic' → logprob: -0.5230806469917297
    2. 'Solution' → logprob: -1.773080587387085
    3. 'Main' → logprob: -2.023080587387085
    4. 'Solver' → logprob: -3.273080587387085
    5. 'Navigation' → logprob: -4.023080825805664
    6. ' Traffic' → logprob: -4.023080825805664
    7. 'Simulation' → logprob: -5.273080825805664
    8. 'Simulator' → logprob: -5.273080825805664
    9. 'Runner' → logprob: -5.398080825805664
    10. 'Input' → logprob: -5.648080825805664

Token 2537: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03805583342909813
    2. ':
' → logprob: -3.288055896759033
    3. ':

' → logprob: -12.038055419921875
    4. '```' → logprob: -13.163055419921875
    5. '):' → logprob: -13.413055419921875
    6. ':def' → logprob: -13.788055419921875
    7. '):
' → logprob: -13.913055419921875
    8. '<|end|>' → logprob: -14.038055419921875
    9. '():
' → logprob: -14.913055419921875
    10. '():' → logprob: -15.163055419921875

Token 2538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25285184383392334
    2. 'def' → logprob: -2.252851963043213
    3. ' def' → logprob: -2.502851963043213
    4. 'class' → logprob: -3.377851963043213
    5. '```' → logprob: -7.002851963043213
    6. ' class' → logprob: -7.127851963043213
    7. '	def' → logprob: -7.877851963043213
    8. '‌' → logprob: -10.252851486206055
    9. '    
' → logprob: -10.252851486206055
    10. ' ind' → logprob: -10.752851486206055

Token 2539: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3342994749546051
    2. ' def' → logprob: -1.8342994451522827
    3. '   ' → logprob: -2.0842995643615723
    4. 'class' → logprob: -10.709299087524414
    5. '	def' → logprob: -11.459299087524414
    6. ':' → logprob: -12.584299087524414
    7. '```' → logprob: -12.834299087524414
    8. ':def' → logprob: -14.209299087524414
    9. '
' → logprob: -14.459299087524414
    10. ':
' → logprob: -15.334299087524414

Token 2540: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.452979177236557
    2. 'object' → logprob: -1.4529792070388794
    3. 'def' → logprob: -2.57797908782959
    4. 'staticmethod' → logprob: -3.45297908782959
    5. 'classmethod' → logprob: -4.70297908782959
    6. '...' → logprob: -5.20297908782959
    7. '```' → logprob: -5.57797908782959
    8. 'init' → logprob: -6.45297908782959
    9. '   ' → logprob: -7.57797908782959
    10. ':
' → logprob: -7.70297908782959

Token 2541: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.141186450899113e-05
    2. '__' → logprob: -11.625020980834961
    3. 'def' → logprob: -11.750020980834961
    4. '```' → logprob: -13.500020980834961
    5. ' init' → logprob: -13.750020980834961
    6. ' __' → logprob: -14.125020980834961
    7. '_init' → logprob: -14.250020980834961
    8. 'int' → logprob: -15.125020980834961
    9. '(init' → logprob: -15.875020980834961
    10. '	init' → logprob: -17.12502098083496

Token 2542: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.028714433312416077
    2. '(' → logprob: -4.278714656829834
    3. ' (' → logprob: -5.028714656829834
    4. '(
' → logprob: -5.403714656829834
    5. '__(' → logprob: -6.278714656829834
    6. 'self' → logprob: -7.528714656829834
    7. '__(
' → logprob: -8.028714179992676
    8. '   ' → logprob: -8.903714179992676
    9. ',' → logprob: -9.278714179992676
    10. ')(' → logprob: -9.653714179992676

Token 2543: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2603901015827432e-05
    2. ')' → logprob: -11.500022888183594
    3. '   ' → logprob: -12.250022888183594
    4. ' self' → logprob: -12.625022888183594
    5. '       ' → logprob: -12.875022888183594
    6. '):
' → logprob: -14.125022888183594
    7. '
' → logprob: -14.750022888183594
    8. '...' → logprob: -16.000022888183594
    9. 'City' → logprob: -16.250022888183594
    10. '):' → logprob: -16.625022888183594

Token 2544: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05705981329083443
    2. 'self' → logprob: -3.3070597648620605
    3. '(self' → logprob: -4.0570597648620605
    4. '   ' → logprob: -7.6820597648620605
    5. '):
' → logprob: -8.057060241699219
    6. ',self' → logprob: -8.057060241699219
    7. ' self' → logprob: -8.682060241699219
    8. '       ' → logprob: -8.932060241699219
    9. ' (' → logprob: -10.182060241699219
    10. '
' → logprob: -10.182060241699219

Token 2545: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00025323365116491914
    2. '   ' → logprob: -8.625253677368164
    3. ' self' → logprob: -9.875253677368164
    4. '       ' → logprob: -11.000253677368164
    5. 'city' → logprob: -12.375253677368164
    6. '
' → logprob: -15.000253677368164
    7. '(self' → logprob: -15.125253677368164
    8. 'def' → logprob: -15.375253677368164
    9. 'City' → logprob: -15.500253677368164
    10. '```' → logprob: -16.000253677368164

Token 2546: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01651967689394951
    2. '       ' → logprob: -4.266519546508789
    3. 'def' → logprob: -6.516519546508789
    4. ' self' → logprob: -7.266519546508789
    5. 'pass' → logprob: -9.516519546508789
    6. '   ' → logprob: -9.641519546508789
    7. '
' → logprob: -10.641519546508789
    8. '(self' → logprob: -11.891519546508789
    9. '```' → logprob: -13.266519546508789
    10. ' ' → logprob: -13.891519546508789

Token 2547: '.results' (ID: 53203)
  Prédit: '.city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.city' → logprob: -0.0244524534791708
    2. '._' → logprob: -4.3994526863098145
    3. 'city' → logprob: -5.5244526863098145
    4. '.' → logprob: -5.8994526863098145
    5. '.input' → logprob: -6.6494526863098145
    6. '_city' → logprob: -6.8994526863098145
    7. ' city' → logprob: -7.7744526863098145
    8. ' .' → logprob: -8.274452209472656
    9. '.inputs' → logprob: -8.399452209472656
    10. '.c' → logprob: -8.399452209472656

Token 2548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.070343516767025
    2. ' =' → logprob: -2.695343494415283
    3. '=[]' → logprob: -8.445343971252441
    4. '.setdefault' → logprob: -10.195343971252441
    5. '.' → logprob: -10.320343971252441
    6. '[' → logprob: -10.445343971252441
    7. '['' → logprob: -10.695343971252441
    8. '.append' → logprob: -10.945343971252441
    9. '={}' → logprob: -11.320343971252441
    10. '_' → logprob: -11.695343971252441

Token 2549: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -5.676981345459353e-06
    2. '[]
' → logprob: -12.750005722045898
    3. '{}' → logprob: -13.000005722045898
    4. '[]

' → logprob: -15.250005722045898
    5. '[' → logprob: -16.0000057220459
    6. 'list' → logprob: -17.3750057220459
    7. '[]}' → logprob: -17.5000057220459
    8. '[])' → logprob: -17.8750057220459
    9. '[]"' → logprob: -18.1250057220459
    10. 'dict' → logprob: -18.7500057220459

Token 2550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07554853707551956
    2. 'def' → logprob: -2.7005486488342285
    3. ' def' → logprob: -5.2005486488342285
    4. '	def' → logprob: -10.07554817199707
    5. '
' → logprob: -11.32554817199707
    6. '    
' → logprob: -11.70054817199707
    7. '<|end|>' → logprob: -11.70054817199707
    8. ' ' → logprob: -13.45054817199707
    9. 'class' → logprob: -13.57554817199707
    10. '    ' → logprob: -13.57554817199707

Token 2551: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019414882408455014
    2. ' def' → logprob: -6.501941680908203
    3. '   ' → logprob: -7.751941680908203
    4. '	def' → logprob: -11.626941680908203
    5. '
' → logprob: -15.751941680908203
    6. '```' → logprob: -17.376941680908203
    7. 'class' → logprob: -18.126941680908203
    8. ' ' → logprob: -18.501941680908203
    9. 'import' → logprob: -19.376941680908203
    10. 'de' → logprob: -19.626941680908203

Token 2552: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.4607275128364563
    2. 'process' → logprob: -1.5857274532318115
    3. 'run' → logprob: -1.9607274532318115
    4. 'add' → logprob: -5.085727691650391
    5. 'read' → logprob: -5.085727691650391
    6. ' solve' → logprob: -5.835727691650391
    7. 'def' → logprob: -6.085727691650391
    8. 'parse' → logprob: -6.085727691650391
    9. ' run' → logprob: -6.585727691650391
    10. ' process' → logprob: -6.710727691650391

Token 2553: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001182607957161963
    2. '(' → logprob: -6.751182556152344
    3. 'self' → logprob: -12.126182556152344
    4. '_(' → logprob: -13.126182556152344
    5. '_from' → logprob: -13.251182556152344
    6. '(
' → logprob: -13.876182556152344
    7. '_' → logprob: -14.626182556152344
    8. '_line' → logprob: -14.751182556152344
    9. '__(' → logprob: -15.376182556152344
    10. '(s' → logprob: -15.376182556152344

Token 2554: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0354984849691391
    2. '(' → logprob: -3.4104983806610107
    3. '_' → logprob: -7.28549861907959
    4. 'self' → logprob: -7.66049861907959
    5. '_(' → logprob: -8.16049861907959
    6. '):' → logprob: -9.53549861907959
    7. '_input' → logprob: -10.03549861907959
    8. '   ' → logprob: -10.03549861907959
    9. '(
' → logprob: -10.03549861907959
    10. '__(' → logprob: -10.28549861907959

Token 2555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004725007340312004
    2. '```' → logprob: -5.504724979400635
    3. 'import' → logprob: -7.504724979400635
    4. '	' → logprob: -10.629725456237793
    5. '   ' → logprob: -11.379725456237793
    6. 'line' → logprob: -11.504725456237793
    7. 'input' → logprob: -11.629725456237793
    8. 'try' → logprob: -12.004725456237793
    9. 'lines' → logprob: -12.004725456237793
    10. ' lines' → logprob: -12.129725456237793

Token 2556: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.8131401538848877
    2. '       ' → logprob: -1.1881401538848877
    3. 'import' → logprob: -2.4381401538848877
    4. 'for' → logprob: -2.5631401538848877
    5. ' input' → logprob: -3.6881401538848877
    6. 'line' → logprob: -3.9381401538848877
    7. 'lines' → logprob: -4.313139915466309
    8. ' lines' → logprob: -4.563139915466309
    9. '```' → logprob: -5.438139915466309
    10. ' for' → logprob: -5.688139915466309

Token 2557: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.33714428544044495
    2. '()' → logprob: -1.4621442556381226
    3. '_lines' → logprob: -3.212144374847412
    4. '_data' → logprob: -4.962144374847412
    5. 'line' → logprob: -5.587144374847412
    6. '=' → logprob: -7.087144374847412
    7. ' =' → logprob: -7.462144374847412
    8. '_' → logprob: -7.587144374847412
    9. '().' → logprob: -7.837144374847412
    10. 'data' → logprob: -8.212143898010254

Token 2558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0844128280878067
    2. ' =' → logprob: -2.7094128131866455
    3. '()' → logprob: -4.334413051605225
    4. '   ' → logprob: -7.709413051605225
    5. '()
' → logprob: -7.959413051605225
    6. '_line' → logprob: -8.959412574768066
    7. '       ' → logprob: -9.209412574768066
    8. '().' → logprob: -9.709412574768066
    9. '=self' → logprob: -10.459412574768066
    10. 'line' → logprob: -10.709412574768066

Token 2559: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0031796174589544535
    2. ' sys' → logprob: -5.753179550170898
    3. '[' → logprob: -14.753179550170898
    4. '(sys' → logprob: -14.878179550170898
    5. '   ' → logprob: -15.003179550170898
    6. 'iter' → logprob: -15.128179550170898
    7. 'deque' → logprob: -15.253179550170898
    8. '	sys' → logprob: -15.378179550170898
    9. '=sys' → logprob: -16.1281795501709
    10. ' [' → logprob: -17.3781795501709

Token 2560: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002261854097014293
    2. 'stdin' → logprob: -8.625226020812988
    3. '.' → logprob: -10.625226020812988
    4. '.stdout' → logprob: -11.125226020812988
    5. '.readline' → logprob: -12.500226020812988
    6. '.argv' → logprob: -13.000226020812988
    7. '(stdin' → logprob: -14.750226020812988
    8. '.std' → logprob: -14.875226020812988
    9. '```' → logprob: -15.500226020812988
    10. '
' → logprob: -16.375226974487305

Token 2561: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002182976808398962
    2. 'read' → logprob: -6.752182960510254
    3. '().' → logprob: -7.252182960510254
    4. '.readlines' → logprob: -8.627182960510254
    5. '_read' → logprob: -10.127182960510254
    6. '.read' → logprob: -10.252182960510254
    7. '```' → logprob: -11.127182960510254
    8. '.' → logprob: -11.127182960510254
    9. ' readline' → logprob: -11.252182960510254
    10. '()' → logprob: -13.252182960510254

Token 2562: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0017131395870819688
    2. '()' → logprob: -6.376713275909424
    3. '(' → logprob: -12.251712799072266
    4. '()
' → logprob: -13.251712799072266
    5. 'lines' → logprob: -13.626712799072266
    6. '())' → logprob: -14.126712799072266
    7. 'split' → logprob: -14.126712799072266
    8. '()\' → logprob: -14.376712799072266
    9. 'line' → logprob: -14.876712799072266
    10. '()`' → logprob: -15.626712799072266

Token 2563: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5760296583175659
    2. 'split' → logprob: -0.8260296583175659
    3. 'read' → logprob: -9.576029777526855
    4. 'decode' → logprob: -11.201029777526855
    5. 'rstrip' → logprob: -11.951029777526855
    6. 'lines' → logprob: -14.451029777526855
    7. '(split' → logprob: -16.20102882385254
    8. ' split' → logprob: -16.95102882385254
    9. 'replace' → logprob: -17.95102882385254
    10. '```' → logprob: -18.20102882385254

Token 2564: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00043460296001285315
    2. '()' → logprob: -7.750434398651123
    3. '()
' → logprob: -12.625434875488281
    4. '('\' → logprob: -15.500434875488281
    5. '.split' → logprob: -16.00043487548828
    6. '()\' → logprob: -16.00043487548828
    7. 'split' → logprob: -16.12543487548828
    8. '(' → logprob: -17.62543487548828
    9. '()`' → logprob: -18.00043487548828
    10. '()

' → logprob: -18.50043487548828

Token 2565: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.0
    3. '(split' → logprob: -18.875
    4. 'spl' → logprob: -20.25
    5. '.split' → logprob: -22.875
    6. '```' → logprob: -23.0
    7. '_split' → logprob: -23.375
    8. 'lines' → logprob: -23.625
    9. 'decode' → logprob: -23.875
    10. 'strip' → logprob: -24.125

Token 2566: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.038967862725257874
    2. 'lines' → logprob: -3.2889678478240967
    3. '()' → logprob: -7.038968086242676
    4. '("\' → logprob: -10.288968086242676
    5. '()
' → logprob: -11.663968086242676
    6. ''\' → logprob: -12.538968086242676
    7. '()\' → logprob: -12.913968086242676
    8. '(' → logprob: -16.03896713256836
    9. '()[' → logprob: -16.28896713256836
    10. '('' → logprob: -17.16396713256836

Token 2567: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.703443770878948e-06
    2. '\n' → logprob: -11.875007629394531
    3. '
' → logprob: -14.625007629394531
    4. ''\' → logprob: -16.62500762939453
    5. 'lines' → logprob: -17.12500762939453
    6. '```' → logprob: -17.37500762939453
    7. 'newline' → logprob: -17.75000762939453
    8. 'b' → logprob: -17.87500762939453
    9. ' n' → logprob: -18.75000762939453
    10. 'ndef' → logprob: -19.00000762939453

Token 2568: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7357991933822632
    2. ')' → logprob: -1.2357991933822632
    3. '       ' → logprob: -1.4857991933822632
    4. '')' → logprob: -6.235799312591553
    5. '')
' → logprob: -6.360799312591553
    6. '")' → logprob: -9.610798835754395
    7. '")
' → logprob: -9.860798835754395
    8. ')
' → logprob: -9.985798835754395
    9. '   ' → logprob: -10.110798835754395
    10. '`)
' → logprob: -11.735798835754395

Token 2569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24537406861782074
    2. 'i' → logprob: -1.995374083518982
    3. 'idx' → logprob: -2.9953739643096924
    4. 'index' → logprob: -3.4953739643096924
    5. '```' → logprob: -7.2453742027282715
    6. 'pos' → logprob: -8.995373725891113
    7. 'line' → logprob: -8.995373725891113
    8. ' idx' → logprob: -9.120373725891113
    9. 'for' → logprob: -9.495373725891113
    10. ' i' → logprob: -9.995373725891113

Token 2570: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.4333834946155548
    2. 'i' → logprob: -1.4333834648132324
    3. 'index' → logprob: -2.1833834648132324
    4. 'line' → logprob: -8.18338394165039
    5. '       ' → logprob: -8.80838394165039
    6. ' idx' → logprob: -10.30838394165039
    7. 't' → logprob: -10.80838394165039
    8. 'pos' → logprob: -10.80838394165039
    9. 'ptr' → logprob: -11.30838394165039
    10. 'pointer' → logprob: -12.30838394165039

Token 2571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03371589258313179
    2. ' =' → logprob: -3.4087159633636475
    3. '+=' → logprob: -9.783716201782227
    4. ' +=' → logprob: -11.908716201782227
    5. '=
' → logprob: -12.658716201782227
    6. '<|end|>' → logprob: -13.533716201782227
    7. '   ' → logprob: -14.658716201782227
    8. '       ' → logprob: -14.908716201782227
    9. '0' → logprob: -15.158716201782227
    10. ' =
' → logprob: -15.283716201782227

Token 2572: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002165299083571881
    2. '1' → logprob: -8.500216484069824
    3. ' ' → logprob: -11.250216484069824
    4. '   ' → logprob: -19.12521743774414
    5. '=' → logprob: -21.00021743774414
    6. '       ' → logprob: -21.62521743774414
    7. '2' → logprob: -23.00021743774414
    8. '+' → logprob: -23.25021743774414
    9. '    ' → logprob: -23.50021743774414
    10. '```' → logprob: -23.75021743774414

Token 2573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.125001907348633
    3. '1' → logprob: -14.250001907348633
    4. '=' → logprob: -20.625001907348633
    5. '   ' → logprob: -20.875001907348633
    6. '```' → logprob: -21.750001907348633
    7. '[' → logprob: -22.875001907348633
    8. '+' → logprob: -22.875001907348633
    9. 'int' → logprob: -23.500001907348633
    10. '2' → logprob: -23.500001907348633

Token 2574: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08008162677288055
    2. '       ' → logprob: -2.5800817012786865
    3. 'n' → logprob: -7.330081462860107
    4. ' while' → logprob: -8.080081939697266
    5. '```' → logprob: -9.705081939697266
    6. 't' → logprob: -9.830081939697266
    7. '
' → logprob: -9.955081939697266
    8. '	while' → logprob: -10.080081939697266
    9. 'num' → logprob: -12.455081939697266
    10. '   ' → logprob: -12.455081939697266

Token 2575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31971198320388794
    2. 'while' → logprob: -1.3197119235992432
    3. '```' → logprob: -5.194712162017822
    4. ' while' → logprob: -7.569712162017822
    5. 'n' → logprob: -8.069711685180664
    6. '	while' → logprob: -10.819711685180664
    7. '``' → logprob: -11.069711685180664
    8. '   ' → logprob: -12.069711685180664
    9. 't' → logprob: -12.569711685180664
    10. ' n' → logprob: -13.319711685180664

Token 2576: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.005293054040521383
    2. '       ' → logprob: -5.255292892456055
    3. ' while' → logprob: -9.880292892456055
    4. 'n' → logprob: -12.755292892456055
    5. '```' → logprob: -12.880292892456055
    6. 't' → logprob: -13.505292892456055
    7. '	while' → logprob: -14.380292892456055
    8. '
' → logprob: -14.880292892456055
    9. '   ' → logprob: -15.505292892456055
    10. 'w' → logprob: -17.130292892456055

Token 2577: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.786196975852363e-05
    2. ' idx' → logprob: -10.250038146972656
    3. 'True' → logprob: -13.000038146972656
    4. '   ' → logprob: -16.625038146972656
    5. '	idx' → logprob: -16.875038146972656
    6. '(idx' → logprob: -17.125038146972656
    7. ' True' → logprob: -17.250038146972656
    8. 'len' → logprob: -18.125038146972656
    9. '       ' → logprob: -19.125038146972656
    10. 'index' → logprob: -19.125038146972656

Token 2578: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6383743286132812
    2. '<' → logprob: -0.7633743286132812
    3. '<len' → logprob: -6.138374328613281
    4. '<n' → logprob: -6.888374328613281
    5. '<|end|>' → logprob: -7.638374328613281
    6. '[' → logprob: -8.013374328613281
    7. ' +=' → logprob: -8.138374328613281
    8. '<class' → logprob: -8.513374328613281
    9. '<size' → logprob: -8.763374328613281
    10. '+=' → logprob: -8.763374328613281

Token 2579: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0280383548888494e-06
    2. ' len' → logprob: -14.125000953674316
    3. 'int' → logprob: -15.625000953674316
    4. 'input' → logprob: -17.875001907348633
    5. 'idx' → logprob: -17.875001907348633
    6. '(len' → logprob: -18.750001907348633
    7. '
' → logprob: -19.125001907348633
    8. '<len' → logprob: -19.250001907348633
    9. 'length' → logprob: -20.750001907348633
    10. '       ' → logprob: -20.750001907348633

Token 2580: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.270118772983551
    2. '(input' → logprob: -1.5201187133789062
    3. ' input' → logprob: -4.020118713378906
    4. '(' → logprob: -10.020118713378906
    5. ' (' → logprob: -11.270118713378906
    6. '_input' → logprob: -11.895118713378906
    7. '(
' → logprob: -12.270118713378906
    8. '
' → logprob: -13.020118713378906
    9. '<input' → logprob: -14.145118713378906
    10. '```' → logprob: -14.395118713378906

Token 2581: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.056589726358652115
    2. '):
' → logprob: -2.9315898418426514
    3. '):' → logprob: -7.556589603424072
    4. '_line' → logprob: -8.55659008026123
    5. '```' → logprob: -8.93159008026123
    6. '(lines' → logprob: -9.05659008026123
    7. 'lines' → logprob: -9.05659008026123
    8. '_' → logprob: -9.18159008026123
    9. '_LINES' → logprob: -9.43159008026123
    10. ')' → logprob: -9.43159008026123

Token 2582: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29050084948539734
    2. ' and' → logprob: -2.0405008792877197
    3. ':' → logprob: -2.2905008792877197
    4. '):
' → logprob: -4.540500640869141
    5. '           ' → logprob: -5.290500640869141
    6. '       ' → logprob: -5.915500640869141
    7. 'and' → logprob: -6.415500640869141
    8. ')' → logprob: -8.29050064086914
    9. '):' → logprob: -8.91550064086914
    10. '():
' → logprob: -9.41550064086914

Token 2583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0982661023736
    2. 'line' → logprob: -2.723266124725342
    3. '```' → logprob: -3.723266124725342
    4. ' line' → logprob: -6.598266124725342
    5. '       ' → logprob: -6.848266124725342
    6. '	line' → logprob: -7.348266124725342
    7. '   ' → logprob: -8.723265647888184
    8. '(line' → logprob: -9.348265647888184
    9. 'token' → logprob: -9.598265647888184
    10. 'tokens' → logprob: -9.973265647888184

Token 2584: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.011066209524869919
    2. 'if' → logprob: -5.136066436767578
    3. '           ' → logprob: -6.011066436767578
    4. ' line' → logprob: -6.511066436767578
    5. 'parts' → logprob: -7.136066436767578
    6. '   ' → logprob: -8.386066436767578
    7. 'n' → logprob: -9.886066436767578
    8. ' if' → logprob: -10.636066436767578
    9. 'M' → logprob: -10.886066436767578
    10. 'tokens' → logprob: -11.011066436767578

Token 2585: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34882548451423645
    2. ' =' → logprob: -1.223825454711914
    3. '           ' → logprob: -9.223825454711914
    4. '=line' → logprob: -9.223825454711914
    5. '```' → logprob: -9.223825454711914
    6. '=
' → logprob: -10.223825454711914
    7. '       ' → logprob: -10.973825454711914
    8. '   ' → logprob: -11.848825454711914
    9. 'tokens' → logprob: -11.973825454711914
    10. '_tokens' → logprob: -12.348825454711914

Token 2586: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009117019944824278
    2. ' input' → logprob: -7.000911712646484
    3. 'line' → logprob: -16.625911712646484
    4. '           ' → logprob: -16.750911712646484
    5. '(input' → logprob: -19.625911712646484
    6. 'output' → logprob: -21.250911712646484
    7. '<input' → logprob: -21.625911712646484
    8. '            
' → logprob: -21.625911712646484
    9. '=input' → logprob: -21.875911712646484
    10. '	input' → logprob: -22.000911712646484

Token 2587: '_lines' (ID: 42980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05338947847485542
    2. '=' → logprob: -3.178389549255371
    3. '=line' → logprob: -5.553389549255371
    4. '_line' → logprob: -6.053389549255371
    5. '_tokens' → logprob: -6.553389549255371
    6. '.strip' → logprob: -6.803389549255371
    7. 'strip' → logprob: -7.553389549255371
    8. '_strip' → logprob: -8.053389549255371
    9. '[line' → logprob: -9.053389549255371
    10. '_lines' → logprob: -9.303389549255371

Token 2588: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0008346432005055249
    2. '=' → logprob: -8.375834465026855
    3. '```' → logprob: -8.500834465026855
    4. 'idx' → logprob: -8.750834465026855
    5. ' =' → logprob: -9.125834465026855
    6. '[
' → logprob: -9.750834465026855
    7. '[line' → logprob: -11.500834465026855
    8. '[' → logprob: -11.750834465026855
    9. '   ' → logprob: -11.875834465026855
    10. '[token' → logprob: -12.000834465026855

Token 2589: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.12605276703834534
    2. '.strip' → logprob: -2.6260528564453125
    3. '           ' → logprob: -3.8760528564453125
    4. ']' → logprob: -4.7510528564453125
    5. ']
' → logprob: -5.1260528564453125
    6. '
' → logprob: -6.1260528564453125
    7. '            
' → logprob: -6.5010528564453125
    8. ').' → logprob: -6.7510528564453125
    9. '().' → logprob: -7.1260528564453125
    10. ' =' → logprob: -7.1260528564453125

Token 2590: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -6.2729995988775045e-06
    2. 'split' → logprob: -12.000006675720215
    3. '.strip' → logprob: -18.8750057220459
    4. 'rstrip' → logprob: -19.3750057220459
    5. ' strip' → logprob: -21.6250057220459
    6. '_strip' → logprob: -22.5000057220459
    7. '
' → logprob: -22.7500057220459
    8. '(strip' → logprob: -23.1250057220459
    9. 'startswith' → logprob: -23.5000057220459
    10. 'trim' → logprob: -23.7500057220459

Token 2591: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010222413577139378
    2. 'if' → logprob: -5.010222434997559
    3. '<|end|>' → logprob: -7.135222434997559
    4. '<|end|>' → logprob: -7.260222434997559
    5. ',' → logprob: -7.760222434997559
    6. ' if' → logprob: -7.760222434997559
    7. '	       ' → logprob: -8.510222434997559
    8. ':
' → logprob: -9.135222434997559
    9. '            
' → logprob: -9.260222434997559
    10. ' =' → logprob: -9.260222434997559

Token 2592: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14463847875595093
    2. 'if' → logprob: -2.0196385383605957
    3. ' if' → logprob: -6.394638538360596
    4. '       ' → logprob: -8.769638061523438
    5. '```' → logprob: -9.519638061523438
    6. '	       ' → logprob: -10.894638061523438
    7. '<|end|>' → logprob: -11.769638061523438
    8. '<|end|>' → logprob: -12.019638061523438
    9. '   ' → logprob: -12.144638061523438
    10. '               ' → logprob: -12.644638061523438

Token 2593: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004350797680672258
    2. '           ' → logprob: -7.750434875488281
    3. ' if' → logprob: -12.625434875488281
    4. 'idx' → logprob: -14.000434875488281
    5. '```' → logprob: -16.50043487548828
    6. '            
' → logprob: -16.87543487548828
    7. '       ' → logprob: -17.25043487548828
    8. '               ' → logprob: -19.12543487548828
    9. '	if' → logprob: -19.12543487548828
    10. 'If' → logprob: -19.37543487548828

Token 2594: ' line' (ID: 2543)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.23998191952705383
    2. ' not' → logprob: -2.2399818897247314
    3. 'line' → logprob: -2.2399818897247314
    4. ' line' → logprob: -7.7399821281433105
    5. '#line' → logprob: -13.739981651306152
    6. 'len' → logprob: -15.239981651306152
    7. '(line' → logprob: -15.239981651306152
    8. '   ' → logprob: -16.48998260498047
    9. '!' → logprob: -16.61498260498047
    10. '	line' → logprob: -16.73998260498047

Token 2595: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0016486376989632845
    2. ' ==' → logprob: -6.501648426055908
    3. '==
' → logprob: -9.126648902893066
    4. '=' → logprob: -10.751648902893066
    5. '()==' → logprob: -12.126648902893066
    6. '===' → logprob: -12.751648902893066
    7. '```' → logprob: -12.876648902893066
    8. '.startswith' → logprob: -13.126648902893066
    9. ']==' → logprob: -13.876648902893066
    10. '=='' → logprob: -14.251648902893066

Token 2596: ' "' (ID: 392)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.13356627523899078
    2. ''' → logprob: -2.383566379547119
    3. '""' → logprob: -3.883566379547119
    4. '"' → logprob: -4.883566379547119
    5. '"":' → logprob: -5.383566379547119
    6. ' '':
' → logprob: -10.633565902709961
    7. ''#' → logprob: -11.008565902709961
    8. ' "":
' → logprob: -12.258565902709961
    9. ''end' → logprob: -12.383565902709961
    10. '''
' → logprob: -12.383565902709961

Token 2597: '0' (ID: 15)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.8380025625228882
    2. '"":' → logprob: -1.2130025625228882
    3. '":' → logprob: -1.5880025625228882
    4. '"' → logprob: -3.3380026817321777
    5. '''' → logprob: -3.8380026817321777
    6. '":
' → logprob: -5.463002681732178
    7. ''' → logprob: -5.838002681732178
    8. '0' → logprob: -7.463002681732178
    9. ' "":
' → logprob: -7.588002681732178
    10. '```' → logprob: -8.83800220489502

Token 2598: ' ' (ID: 220)
  Prédit: '":
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.28406065702438354
    2. '":' → logprob: -2.1590607166290283
    3. '0' → logprob: -2.5340607166290283
    4. ' ' → logprob: -3.7840607166290283
    5. ' "' → logprob: -4.159060478210449
    6. '":
' → logprob: -4.409060478210449
    7. '"' → logprob: -6.409060478210449
    8. '"):
' → logprob: -8.78406047821045
    9. ' ":' → logprob: -10.15906047821045
    10. '   ' → logprob: -10.40906047821045

Token 2599: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.147740689106286e-05
    2. '"' → logprob: -10.50007152557373
    3. ' ' → logprob: -10.62507152557373
    4. '"):
' → logprob: -11.50007152557373
    5. '"):' → logprob: -12.50007152557373
    6. '")' → logprob: -12.62507152557373
    7. '
' → logprob: -14.50007152557373
    8. '">' → logprob: -14.75007152557373
    9. '"):
' → logprob: -14.87507152557373
    10. '":' → logprob: -15.25007152557373

Token 2600: '":
' (ID: 9213)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23044517636299133
    2. ' ' → logprob: -1.605445146560669
    3. '":' → logprob: -6.355445384979248
    4. '":
' → logprob: -6.355445384979248
    5. '"' → logprob: -7.105445384979248
    6. '":
' → logprob: -7.480445384979248
    7. '"):
' → logprob: -10.10544490814209
    8. '\n' → logprob: -10.35544490814209
    9. '```' → logprob: -11.10544490814209
    10. '1' → logprob: -11.85544490814209

Token 2601: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013962512835860252
    2. ':
' → logprob: -4.763962745666504
    3. ':' → logprob: -5.388962745666504
    4. '           ' → logprob: -7.763962745666504
    5. '                   ' → logprob: -9.138962745666504
    6. '<|end|>' → logprob: -9.638962745666504
    7. '\n' → logprob: -10.638962745666504
    8. '              ' → logprob: -10.888962745666504
    9. '<|end|>' → logprob: -10.888962745666504
    10. '                       ' → logprob: -11.263962745666504

Token 2602: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04002430662512779
    2. '               ' → logprob: -3.4150242805480957
    3. ' break' → logprob: -5.290024280548096
    4. '           ' → logprob: -7.540024280548096
    5. '                   ' → logprob: -8.165024757385254
    6. '	break' → logprob: -8.665024757385254
    7. 'return' → logprob: -8.915024757385254
    8. 'idx' → logprob: -8.915024757385254
    9. '_break' → logprob: -10.915024757385254
    10. '```' → logprob: -11.415024757385254

Token 2603: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000693016336299479
    2. '
' → logprob: -7.375692844390869
    3. '            
' → logprob: -10.000693321228027
    4. '		' → logprob: -12.375693321228027
    5. 'idx' → logprob: -13.000693321228027
    6. '	       ' → logprob: -13.000693321228027
    7. '               ' → logprob: -13.125693321228027
    8. '<|end|>' → logprob: -13.375693321228027
    9. '
' → logprob: -13.500693321228027
    10. '```' → logprob: -13.625693321228027

Token 2604: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.045823566731997e-05
    2. '```' → logprob: -11.250020027160645
    3. 'idx' → logprob: -12.875020027160645
    4. '       ' → logprob: -13.375020027160645
    5. '	       ' → logprob: -13.750020027160645
    6. '               ' → logprob: -14.125020027160645
    7. '   ' → logprob: -14.875020027160645
    8. '          ' → logprob: -15.000020027160645
    9. '            
' → logprob: -15.750020027160645
    10. '		' → logprob: -15.750020027160645

Token 2605: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4260290563106537
    2. 'M' → logprob: -1.801029086112976
    3. 'parts' → logprob: -2.1760289669036865
    4. ' parts' → logprob: -3.5510289669036865
    5. 'tokens' → logprob: -4.051029205322266
    6. 'm' → logprob: -4.926029205322266
    7. 'params' → logprob: -5.301029205322266
    8. ' M' → logprob: -5.801029205322266
    9. '```' → logprob: -6.176029205322266
    10. 'n' → logprob: -6.176029205322266

Token 2606: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5102159380912781
    2. 'line' → logprob: -1.2602159976959229
    3. ' line' → logprob: -2.760215997695923
    4. 'not' → logprob: -3.010215997695923
    5. 'len' → logprob: -5.760215759277344
    6. '           ' → logprob: -8.760215759277344
    7. ' len' → logprob: -9.135215759277344
    8. '   ' → logprob: -10.635215759277344
    9. ' True' → logprob: -10.635215759277344
    10. 'True' → logprob: -11.510215759277344

Token 2607: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004306692280806601
    2. ' line' → logprob: -7.750430583953857
    3. 'len' → logprob: -17.500431060791016
    4. '
' → logprob: -18.250431060791016
    5. '(line' → logprob: -19.250431060791016
    6. ' ' → logprob: -21.125431060791016
    7. '   ' → logprob: -21.625431060791016
    8. '	line' → logprob: -21.625431060791016
    9. 'Line' → logprob: -22.250431060791016
    10. 'l' → logprob: -22.375431060791016

Token 2608: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15481629967689514
    2. ':' → logprob: -2.5298163890838623
    3. '.strip' → logprob: -2.9048163890838623
    4. '.startswith' → logprob: -5.279816150665283
    5. '.split' → logprob: -6.404816150665283
    6. '=' → logprob: -7.404816150665283
    7. '.' → logprob: -7.529816150665283
    8. ' or' → logprob: -8.654816627502441
    9. '           ' → logprob: -9.029816627502441
    10. '               ' → logprob: -9.154816627502441

Token 2609: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005786462686955929
    2. ':' → logprob: -5.880786418914795
    3. ':
' → logprob: -6.005786418914795
    4. '           ' → logprob: -8.380786895751953
    5. '```' → logprob: -9.505786895751953
    6. '   ' → logprob: -10.380786895751953
    7. '              ' → logprob: -10.630786895751953
    8. '	           ' → logprob: -10.755786895751953
    9. '                   ' → logprob: -10.880786895751953
    10. '<|end|>' → logprob: -11.005786895751953

Token 2610: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.10105405002832413
    2. '               ' → logprob: -2.3510539531707764
    3. '           ' → logprob: -7.4760541915893555
    4. '   ' → logprob: -9.226054191589355
    5. ' idx' → logprob: -9.226054191589355
    6. '                   ' → logprob: -9.726054191589355
    7. '	idx' → logprob: -12.101054191589355
    8. '```' → logprob: -12.226054191589355
    9. '              ' → logprob: -12.351054191589355
    10. '       ' → logprob: -12.851054191589355

Token 2611: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002407282590866089
    2. ' +=' → logprob: -8.375240325927734
    3. ']+=' → logprob: -12.250240325927734
    4. '```' → logprob: -13.250240325927734
    5. '+' → logprob: -13.500240325927734
    6. '           ' → logprob: -13.750240325927734
    7. '=' → logprob: -14.375240325927734
    8. '               ' → logprob: -15.125240325927734
    9. '   ' → logprob: -16.125240325927734
    10. '                   ' → logprob: -16.250240325927734

Token 2612: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. 'continue' → logprob: -18.75
    4. '
' → logprob: -20.125
    5. '```' → logprob: -20.125
    6. '   ' → logprob: -21.0
    7. '+' → logprob: -22.75
    8. '           ' → logprob: -23.25
    9. '１' → logprob: -23.5
    10. '۱' → logprob: -23.625

Token 2613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. 'continue' → logprob: -18.875
    4. '```' → logprob: -20.875
    5. '
' → logprob: -21.25
    6. '+' → logprob: -21.75
    7. '   ' → logprob: -23.75
    8. '１' → logprob: -23.75
    9. '0' → logprob: -24.125
    10. '=' → logprob: -24.25

Token 2614: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.113290095934644e-05
    2. '           ' → logprob: -10.000081062316895
    3. '                   ' → logprob: -10.875081062316895
    4. '              ' → logprob: -12.500081062316895
    5. '                ' → logprob: -13.250081062316895
    6. '                
' → logprob: -13.250081062316895
    7. '<|end|>' → logprob: -13.250081062316895
    8. 'continue' → logprob: -13.625081062316895
    9. '             ' → logprob: -14.000081062316895
    10. '
' → logprob: -14.000081062316895

Token 2615: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009469495271332562
    2. '           ' → logprob: -7.750946998596191
    3. '```' → logprob: -8.250946998596191
    4. 'continue' → logprob: -9.500946998596191
    5. '                   ' → logprob: -9.625946998596191
    6. ' ' → logprob: -10.375946998596191
    7. '              ' → logprob: -10.500946998596191
    8. '             ' → logprob: -11.375946998596191
    9. ' continue' → logprob: -11.375946998596191
    10. '   ' → logprob: -11.875946998596191

Token 2616: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07998347282409668
    2. '               ' → logprob: -2.5799834728240967
    3. ' continue' → logprob: -6.829983711242676
    4. '           ' → logprob: -12.079983711242676
    5. '	continue' → logprob: -12.454983711242676
    6. '_continue' → logprob: -14.079983711242676
    7. '```' → logprob: -14.704983711242676
    8. 'contin' → logprob: -14.829983711242676
    9. 'continu' → logprob: -15.079983711242676
    10. '                   ' → logprob: -15.954983711242676

Token 2617: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012727351859211922
    2. '            
' → logprob: -7.126272678375244
    3. '
' → logprob: -8.251273155212402
    4. '```' → logprob: -9.876273155212402
    5. 'line' → logprob: -10.001273155212402
    6. ',' → logprob: -10.001273155212402
    7. '	       ' → logprob: -12.001273155212402
    8. ' line' → logprob: -12.126273155212402
    9. '		' → logprob: -12.501273155212402
    10. '       ' → logprob: -12.501273155212402

Token 2618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.232493564719334e-05
    2. '```' → logprob: -10.500082015991211
    3. '       ' → logprob: -10.625082015991211
    4. 'parts' → logprob: -11.875082015991211
    5. '            
' → logprob: -12.250082015991211
    6. 'tokens' → logprob: -12.250082015991211
    7. '	       ' → logprob: -13.250082015991211
    8. 'm' → logprob: -13.375082015991211
    9. '   ' → logprob: -13.750082015991211
    10. '          ' → logprob: -13.750082015991211

Token 2619: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.11871694773435593
    2. 'parts' → logprob: -2.8687169551849365
    3. '           ' → logprob: -3.2437169551849365
    4. 'm' → logprob: -4.618716716766357
    5. ' parts' → logprob: -6.243716716766357
    6. 'params' → logprob: -6.493716716766357
    7. ' M' → logprob: -6.743716716766357
    8. 'tokens' → logprob: -7.243716716766357
    9. 'MN' → logprob: -7.618716716766357
    10. 'n' → logprob: -8.993717193603516

Token 2620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007679026573896408
    2. ',N' → logprob: -4.882678985595703
    3. ' ,' → logprob: -10.132678985595703
    4. ',
' → logprob: -10.507678985595703
    5. ',n' → logprob: -13.507678985595703
    6. ',int' → logprob: -14.132678985595703
    7. '_,' → logprob: -14.382678985595703
    8. ',M' → logprob: -14.507678985595703
    9. '=' → logprob: -15.007678985595703
    10. ' =' → logprob: -15.132678985595703

Token 2621: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004884536610916257
    2. ' N' → logprob: -7.62548828125
    3. '=' → logprob: -15.37548828125
    4. ' ' → logprob: -16.87548828125
    5. ' 
' → logprob: -17.00048828125
    6. ' =' → logprob: -17.00048828125
    7. '  ' → logprob: -17.62548828125
    8. '
' → logprob: -17.87548828125
    9. ',' → logprob: -18.00048828125
    10. 'n' → logprob: -18.37548828125

Token 2622: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29879242181777954
    2. ' =' → logprob: -1.4237923622131348
    3. ',' → logprob: -4.048792362213135
    4. '=int' → logprob: -10.798792839050293
    5. '=line' → logprob: -11.298792839050293
    6. '           ' → logprob: -12.798792839050293
    7. ' ,' → logprob: -13.923792839050293
    8. '=
' → logprob: -13.923792839050293
    9. ')' → logprob: -13.923792839050293
    10. '=input' → logprob: -14.548792839050293

Token 2623: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3872123956680298
    2. ' map' → logprob: -1.1372123956680298
    3. '[' → logprob: -8.262212753295898
    4. 'line' → logprob: -10.387212753295898
    5. ' line' → logprob: -11.012212753295898
    6. '[line' → logprob: -11.262212753295898
    7. ' [' → logprob: -11.887212753295898
    8. 'list' → logprob: -12.012212753295898
    9. '(map' → logprob: -12.012212753295898
    10. '
' → logprob: -13.262212753295898

Token 2624: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003519414458423853
    2. 'int' → logprob: -5.753519535064697
    3. '(str' → logprob: -8.128519058227539
    4. '[int' → logprob: -10.628519058227539
    5. 'str' → logprob: -11.253519058227539
    6. '(lambda' → logprob: -11.878519058227539
    7. 'lambda' → logprob: -13.878519058227539
    8. '<int' → logprob: -14.253519058227539
    9. '=int' → logprob: -14.378519058227539
    10. '(' → logprob: -15.878519058227539

Token 2625: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.48187416791915894
    2. '(input' → logprob: -0.9818741679191589
    3. 'input' → logprob: -5.106873989105225
    4. ',input' → logprob: -7.106873989105225
    5. ',' → logprob: -8.106874465942383
    6. '[line' → logprob: -8.481874465942383
    7. ',line' → logprob: -8.606874465942383
    8. 'line' → logprob: -9.231874465942383
    9. ')' → logprob: -10.481874465942383
    10. '=line' → logprob: -10.731874465942383

Token 2626: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0325924449716695e-05
    2. ' line' → logprob: -11.50001049041748
    3. 'input' → logprob: -16.000009536743164
    4. '(line' → logprob: -16.750009536743164
    5. '[line' → logprob: -19.250009536743164
    6. '#line' → logprob: -19.625009536743164
    7. '           ' → logprob: -20.500009536743164
    8. '=line' → logprob: -20.875009536743164
    9. '	line' → logprob: -21.500009536743164
    10. '
' → logprob: -21.875009536743164

Token 2627: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.034341081976890564
    2. '.split' → logprob: -3.4093410968780518
    3. '.strip' → logprob: -7.534340858459473
    4. '.readline' → logprob: -9.159340858459473
    5. '.' → logprob: -10.909340858459473
    6. ' .' → logprob: -10.909340858459473
    7. '()[' → logprob: -12.284340858459473
    8. '[line' → logprob: -12.909340858459473
    9. '.rstrip' → logprob: -13.284340858459473
    10. '[' → logprob: -13.409340858459473

Token 2628: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.20649297535419464
    2. '())' → logprob: -1.7064930200576782
    3. '()' → logprob: -5.456492900848389
    4. '('' → logprob: -7.456492900848389
    5. '()[' → logprob: -9.206493377685547
    6. '()
' → logprob: -9.956493377685547
    7. ')' → logprob: -10.456493377685547
    8. ')
' → logprob: -11.331493377685547
    9. '())
' → logprob: -11.456493377685547
    10. '())

' → logprob: -11.831493377685547

Token 2629: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005080887582153082
    2. '```' → logprob: -5.630080699920654
    3. 'idx' → logprob: -6.630080699920654
    4. '       ' → logprob: -9.505081176757812
    5. '``' → logprob: -11.005081176757812
    6. '   ' → logprob: -11.130081176757812
    7. '               ' → logprob: -11.255081176757812
    8. '	       ' → logprob: -11.505081176757812
    9. ' idx' → logprob: -12.505081176757812
    10. '          ' → logprob: -12.630081176757812

Token 2630: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.020366225391626358
    2. '           ' → logprob: -4.020366191864014
    3. 'base' → logprob: -6.145366191864014
    4. ' idx' → logprob: -10.520366668701172
    5. 'if' → logprob: -10.645366668701172
    6. '```' → logprob: -12.395366668701172
    7. 'max' → logprob: -12.645366668701172
    8. 'K' → logprob: -13.645366668701172
    9. '       ' → logprob: -13.770366668701172
    10. 'N' → logprob: -14.020366668701172

Token 2631: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02981332130730152
    2. ' +=' → logprob: -3.529813289642334
    3. '           ' → logprob: -10.154813766479492
    4. ']+=' → logprob: -10.779813766479492
    5. '```' → logprob: -13.529813766479492
    6. '+' → logprob: -14.404813766479492
    7. '       ' → logprob: -14.779813766479492
    8. '   ' → logprob: -15.154813766479492
    9. '               ' → logprob: -15.654813766479492
    10. '                   ' → logprob: -16.279813766479492

Token 2632: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'int' → logprob: -15.375027656555176
    4. '
' → logprob: -16.125028610229492
    5. '0' → logprob: -16.250028610229492
    6. '   ' → logprob: -17.125028610229492
    7. '#' → logprob: -18.000028610229492
    8. '```' → logprob: -18.000028610229492
    9. '...' → logprob: -18.375028610229492
    10. '           ' → logprob: -18.375028610229492

Token 2633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.625001907348633
    4. 'int' → logprob: -16.250001907348633
    5. '
' → logprob: -17.250001907348633
    6. '```' → logprob: -18.250001907348633
    7. '#' → logprob: -19.000001907348633
    8. 'line' → logprob: -19.250001907348633
    9. '+' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.625001907348633

Token 2634: '
' (ID: 198)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.9215626120567322
    2. '           ' → logprob: -1.046562671661377
    3. 'line' → logprob: -1.421562671661377
    4. ' base' → logprob: -5.421562671661377
    5. 'start' → logprob: -6.546562671661377
    6. 'if' → logprob: -6.796562671661377
    7. ' line' → logprob: -6.796562671661377
    8. '
' → logprob: -7.671562671661377
    9. 'b' → logprob: -9.046562194824219
    10. '```' → logprob: -9.171562194824219

Token 2635: '           ' (ID: 352)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.43446213006973267
    2. '           ' → logprob: -1.434462070465088
    3. 'base' → logprob: -2.184462070465088
    4. 'while' → logprob: -7.809462070465088
    5. ' line' → logprob: -8.309462547302246
    6. 'if' → logprob: -8.434462547302246
    7. '```' → logprob: -8.684462547302246
    8. ' base' → logprob: -9.684462547302246
    9. 'lines' → logprob: -9.684462547302246
    10. 'b' → logprob: -9.934462547302246

Token 2636: ' D' (ID: 415)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.02703898213803768
    2. 'B' → logprob: -4.027039051055908
    3. 'b' → logprob: -6.152039051055908
    4. 'line' → logprob: -6.152039051055908
    5. '           ' → logprob: -6.402039051055908
    6. 'K' → logprob: -7.402039051055908
    7. 'k' → logprob: -7.652039051055908
    8. 'T' → logprob: -7.902039051055908
    9. 'start' → logprob: -8.27703857421875
    10. 'L' → logprob: -8.27703857421875

Token 2637: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08702874183654785
    2. ' =' → logprob: -2.712028741836548
    3. '=' → logprob: -4.587028503417969
    4. 'elay' → logprob: -5.587028503417969
    5. 'ef' → logprob: -6.462028503417969
    6. '   ' → logprob: -8.337028503417969
    7. 'e' → logprob: -8.587028503417969
    8. ' ,' → logprob: -8.587028503417969
    9. '_line' → logprob: -8.837028503417969
    10. '_,' → logprob: -9.087028503417969

Token 2638: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -14.875
    3. '0' → logprob: -18.0
    4. 'M' → logprob: -18.75
    5. '1' → logprob: -19.0
    6. '
' → logprob: -19.375
    7. 'float' → logprob: -19.375
    8. '   ' → logprob: -19.5
    9. '(int' → logprob: -19.625
    10. 'D' → logprob: -19.625

Token 2639: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00033546582562848926
    2. 'input' → logprob: -8.000335693359375
    3. '(line' → logprob: -16.750335693359375
    4. '(' → logprob: -17.250335693359375
    5. ' input' → logprob: -18.875335693359375
    6. ' (' → logprob: -19.625335693359375
    7. '(
' → logprob: -19.625335693359375
    8. '   ' → logprob: -19.875335693359375
    9. ',input' → logprob: -20.125335693359375
    10. '[input' → logprob: -20.375335693359375

Token 2640: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.401863694190979
    2. '(input' → logprob: -1.151863694190979
    3. 'Lines' → logprob: -5.2768635749816895
    4. '()' → logprob: -6.1518635749816895
    5. '[input' → logprob: -6.2768635749816895
    6. '(lines' → logprob: -6.5268635749816895
    7. ')' → logprob: -6.6518635749816895
    8. 'input' → logprob: -7.0268635749816895
    9. 'lines' → logprob: -7.4018635749816895
    10. '(line' → logprob: -8.026864051818848

Token 2641: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.001172129064798355
    2. 'idx' → logprob: -6.751172065734863
    3. '```' → logprob: -13.626172065734863
    4. '(idx' → logprob: -15.376172065734863
    5. '	idx' → logprob: -15.626172065734863
    6. ' idx' → logprob: -15.876172065734863
    7. '[index' → logprob: -16.87617301940918
    8. '   ' → logprob: -17.25117301940918
    9. '[line' → logprob: -18.12617301940918
    10. '[
' → logprob: -18.37617301940918

Token 2642: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2957388460636139
    2. '])' → logprob: -1.6707388162612915
    3. '])
' → logprob: -3.170738935470581
    4. '[idx' → logprob: -3.670738935470581
    5. ']);' → logprob: -8.42073917388916
    6. '.strip' → logprob: -9.42073917388916
    7. '][' → logprob: -9.54573917388916
    8. '(idx' → logprob: -10.42073917388916
    9. '])
' → logprob: -10.92073917388916
    10. ']' → logprob: -11.04573917388916

Token 2643: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -16.25
    3. '_strip' → logprob: -17.25
    4. ' strip' → logprob: -18.375
    5. 'split' → logprob: -18.375
    6. '.strip' → logprob: -19.875
    7. '(strip' → logprob: -21.875
    8. '-strip' → logprob: -21.875
    9. 'skip' → logprob: -22.0
    10. 'idx' → logprob: -22.5

Token 2644: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10278384387493134
    2. ')' → logprob: -2.4777839183807373
    3. '())
' → logprob: -4.977783679962158
    4. '           ' → logprob: -5.102783679962158
    5. ');' → logprob: -7.602783679962158
    6. '())' → logprob: -8.977784156799316
    7. '()' → logprob: -9.477784156799316
    8. '               ' → logprob: -10.352784156799316
    9. '()
' → logprob: -11.477784156799316
    10. ')
' → logprob: -11.602784156799316

Token 2645: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.580793023109436
    2. 'idx' → logprob: -0.830793023109436
    3. '```' → logprob: -5.7057929039001465
    4. '       ' → logprob: -6.7057929039001465
    5. ' idx' → logprob: -8.705793380737305
    6. '	idx' → logprob: -10.205793380737305
    7. '[idx' → logprob: -10.705793380737305
    8. '               ' → logprob: -10.830793380737305
    9. '``' → logprob: -11.330793380737305
    10. '   ' → logprob: -11.705793380737305

Token 2646: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0008728709071874619
    2. '           ' → logprob: -7.12587308883667
    3. '```' → logprob: -10.000872611999512
    4. ' idx' → logprob: -11.125872611999512
    5. '	idx' → logprob: -12.250872611999512
    6. '               ' → logprob: -13.625872611999512
    7. '_idx' → logprob: -14.000872611999512
    8. '[idx' → logprob: -14.875872611999512
    9. '       ' → logprob: -15.250872611999512
    10. '``' → logprob: -15.250872611999512

Token 2647: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003195654833689332
    2. ' +=' → logprob: -5.753195762634277
    3. ']+=' → logprob: -11.628195762634277
    4. '=' → logprob: -12.253195762634277
    5. '```' → logprob: -13.378195762634277
    6. '+' → logprob: -13.503195762634277
    7. '           ' → logprob: -14.378195762634277
    8. '       ' → logprob: -14.878195762634277
    9. '   ' → logprob: -16.12819480895996
    10. '++' → logprob: -16.87819480895996

Token 2648: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'D' → logprob: -17.5
    4. '
' → logprob: -18.875
    5. '```' → logprob: -19.0
    6. '0' → logprob: -20.125
    7. '   ' → logprob: -20.875
    8. '+' → logprob: -21.125
    9. '(' → logprob: -21.5
    10. 'd' → logprob: -21.625

Token 2649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.333223139634356e-05
    2. 'D' → logprob: -10.500033378601074
    3. '0' → logprob: -12.500033378601074
    4. ' ' → logprob: -13.125033378601074
    5. ' D' → logprob: -17.625032424926758
    6. '   ' → logprob: -17.750032424926758
    7. '
' → logprob: -17.875032424926758
    8. 'd' → logprob: -20.000032424926758
    9. '"D' → logprob: -20.125032424926758
    10. '+D' → logprob: -20.375032424926758

Token 2650: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36301901936531067
    2. 'for' → logprob: -1.3630189895629883
    3. '       ' → logprob: -3.9880189895629883
    4. 'roads' → logprob: -4.738018989562988
    5. 'city' → logprob: -4.988018989562988
    6. '```' → logprob: -5.363018989562988
    7. 'road' → logprob: -5.613018989562988
    8. '
' → logprob: -6.988018989562988
    9. 'base' → logprob: -7.113018989562988
    10. '``' → logprob: -7.113018989562988

Token 2651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1067105159163475
    2. 'for' → logprob: -2.356710433959961
    3. '       ' → logprob: -5.481710433959961
    4. '```' → logprob: -6.981710433959961
    5. 'roads' → logprob: -7.606710433959961
    6. 'road' → logprob: -8.481710433959961
    7. 'signals' → logprob: -8.856710433959961
    8. 'while' → logprob: -9.106710433959961
    9. 'signal' → logprob: -9.231710433959961
    10. '``' → logprob: -9.356710433959961

Token 2652: ' ns' (ID: 18343)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.07835590094327927
    2. 'base' → logprob: -2.9533557891845703
    3. '           ' → logprob: -4.32835578918457
    4. 'for' → logprob: -5.95335578918457
    5. 'C' → logprob: -6.45335578918457
    6. '       ' → logprob: -6.57835578918457
    7. 'road' → logprob: -7.20335578918457
    8. 'signals' → logprob: -7.20335578918457
    9. 'car' → logprob: -7.32835578918457
    10. 'self' → logprob: -7.70335578918457

Token 2653: ' =' (ID: 314)
  Prédit: '_ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.009382619522511959
    2. '_' → logprob: -5.009382724761963
    3. ' =' → logprob: -6.634382724761963
    4. '_e' → logprob: -7.509382724761963
    5. '_lines' → logprob: -8.884382247924805
    6. '_coords' → logprob: -9.134382247924805
    7. '=' → logprob: -9.134382247924805
    8. 'ew' → logprob: -10.009382247924805
    9. 'for' → logprob: -10.134382247924805
    10. '   ' → logprob: -10.384382247924805

Token 2654: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5921622514724731
    2. 'N' → logprob: -1.2171622514724731
    3. '0' → logprob: -3.2171621322631836
    4. 'D' → logprob: -4.092162132263184
    5. '[]
' → logprob: -4.092162132263184
    6. '[' → logprob: -4.217162132263184
    7. 'self' → logprob: -4.467162132263184
    8. ' int' → logprob: -4.592162132263184
    9. '[int' → logprob: -4.842162132263184
    10. ' N' → logprob: -4.967162132263184

Token 2655: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47424766421318054
    2. '(input' → logprob: -0.9742476940155029
    3. 'N' → logprob: -9.599247932434082
    4. 'D' → logprob: -10.224247932434082
    5. ' input' → logprob: -10.349247932434082
    6. '           ' → logprob: -11.224247932434082
    7. 'line' → logprob: -12.724247932434082
    8. '[input' → logprob: -13.099247932434082
    9. ',input' → logprob: -13.349247932434082
    10. '(' → logprob: -13.599247932434082

Token 2656: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.2059771716594696
    2. '(input' → logprob: -1.705977201461792
    3. '[input' → logprob: -5.830976963043213
    4. 'input' → logprob: -7.080976963043213
    5. 'Lines' → logprob: -7.705976963043213
    6. ')' → logprob: -9.955977439880371
    7. ')_' → logprob: -10.330977439880371
    8. '_inputs' → logprob: -10.330977439880371
    9. '_input' → logprob: -10.330977439880371
    10. 'N' → logprob: -10.455977439880371

Token 2657: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.43865957856178284
    2. '(input' → logprob: -1.6886595487594604
    3. '(idx' → logprob: -2.31365966796875
    4. '[input' → logprob: -3.06365966796875
    5. 'idx' → logprob: -4.06365966796875
    6. 'input' → logprob: -5.18865966796875
    7. '_lines' → logprob: -6.93865966796875
    8. '           ' → logprob: -8.56365966796875
    9. 'Lines' → logprob: -9.06365966796875
    10. '=input' → logprob: -9.18865966796875

Token 2658: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.43520307540893555
    2. '.strip' → logprob: -2.0602030754089355
    3. '[idx' → logprob: -2.8102030754089355
    4. '           ' → logprob: -2.9352030754089355
    5. ']' → logprob: -3.1852030754089355
    6. '().' → logprob: -4.4352030754089355
    7. '(idx' → logprob: -4.5602030754089355
    8. '])' → logprob: -5.0602030754089355
    9. '               ' → logprob: -5.1852030754089355
    10. '.' → logprob: -5.3102030754089355

Token 2659: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -17.0
    3. '.strip' → logprob: -18.25
    4. 'split' → logprob: -18.75
    5. '(strip' → logprob: -18.75
    6. '_strip' → logprob: -19.25
    7. ' strip' → logprob: -19.5
    8. 'stripe' → logprob: -20.875
    9. 'skip' → logprob: -21.625
    10. 'str' → logprob: -21.75

Token 2660: '())
' (ID: 4574)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2694622278213501
    2. ')
' → logprob: -1.76946222782135
    3. ')' → logprob: -2.7694621086120605
    4. '())
' → logprob: -7.2694621086120605
    5. '	       ' → logprob: -7.7694621086120605
    6. '<|end|>' → logprob: -7.7694621086120605
    7. '               ' → logprob: -8.269462585449219
    8. '()' → logprob: -8.269462585449219
    9. '		' → logprob: -8.394462585449219
    10. '       ' → logprob: -9.019462585449219

Token 2661: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002322364365682006
    2. '```' → logprob: -6.502322196960449
    3. '       ' → logprob: -7.877322196960449
    4. '	       ' → logprob: -9.37732219696045
    5. '<|end|>' → logprob: -9.62732219696045
    6. 'idx' → logprob: -9.62732219696045
    7. '<|end|>' → logprob: -10.37732219696045
    8. '               ' → logprob: -10.62732219696045
    9. '``' → logprob: -10.75232219696045
    10. '                   ' → logprob: -10.87732219696045

Token 2662: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.019322019070386887
    2. '           ' → logprob: -4.019321918487549
    3. '```' → logprob: -7.394321918487549
    4. '       ' → logprob: -8.019322395324707
    5. ' idx' → logprob: -8.769322395324707
    6. '	idx' → logprob: -10.144322395324707
    7. '_idx' → logprob: -11.894322395324707
    8. '``' → logprob: -11.894322395324707
    9. '               ' → logprob: -12.019322395324707
    10. '   ' → logprob: -12.769322395324707

Token 2663: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007885435596108437
    2. ' +=' → logprob: -4.882885456085205
    3. '=' → logprob: -8.382884979248047
    4. '           ' → logprob: -10.257884979248047
    5. '+' → logprob: -12.007884979248047
    6. ']+=' → logprob: -12.507884979248047
    7. '       ' → logprob: -13.132884979248047
    8. '   ' → logprob: -13.382884979248047
    9. '```' → logprob: -14.007884979248047
    10. '++' → logprob: -15.257884979248047

Token 2664: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -17.625001907348633
    4. '0' → logprob: -18.875001907348633
    5. '```' → logprob: -18.875001907348633
    6. 'ns' → logprob: -20.000001907348633
    7. 'n' → logprob: -20.500001907348633
    8. '   ' → logprob: -21.000001907348633
    9. '+' → logprob: -21.500001907348633
    10. 'int' → logprob: -21.500001907348633

Token 2665: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'ns' → logprob: -15.000001907348633
    4. '0' → logprob: -15.375001907348633
    5. '```' → logprob: -16.125001907348633
    6. '
' → logprob: -16.625001907348633
    7. 'n' → logprob: -16.750001907348633
    8. 's' → logprob: -17.062501907348633
    9. '2' → logprob: -17.062501907348633
    10. '3' → logprob: -17.375001907348633

Token 2666: '

' (ID: 279)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3995884954929352
    2. '           ' → logprob: -1.2745884656906128
    3. 'for' → logprob: -3.3995885848999023
    4. '```' → logprob: -5.024588584899902
    5. 'origin' → logprob: -6.649588584899902
    6. 'ew' → logprob: -6.649588584899902
    7. 'while' → logprob: -6.774588584899902
    8. '#' → logprob: -7.024588584899902
    9. '``' → logprob: -7.649588584899902
    10. 's' → logprob: -7.774588584899902

Token 2667: '           ' (ID: 352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.16040365397930145
    2. '       ' → logprob: -2.6604037284851074
    3. '           ' → logprob: -3.7854037284851074
    4. '```' → logprob: -3.9104037284851074
    5. 'for' → logprob: -4.660403728485107
    6. 'origin' → logprob: -4.785403728485107
    7. '``' → logprob: -5.285403728485107
    8. 'while' → logprob: -6.660403728485107
    9. '#' → logprob: -6.660403728485107
    10. 's' → logprob: -6.785403728485107

Token 2668: ' city' (ID: 5030)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.011892447248101234
    2. 'ew' → logprob: -5.886892318725586
    3. 'base' → logprob: -6.386892318725586
    4. '           ' → logprob: -6.636892318725586
    5. 'S' → logprob: -6.886892318725586
    6. 's' → logprob: -7.136892318725586
    7. 'M' → logprob: -7.261892318725586
    8. '#' → logprob: -7.511892318725586
    9. 'city' (adapté à ' city') → logprob: -7.636892318725586
    10. 'starts' → logprob: -8.261892318725586

Token 2669: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0011465295683592558
    2. '           ' → logprob: -7.00114631652832
    3. ' =' → logprob: -9.50114631652832
    4. 'map' → logprob: -9.62614631652832
    5. '=' → logprob: -10.12614631652832
    6. 'Map' → logprob: -10.37614631652832
    7. '_size' → logprob: -10.87614631652832
    8. 'size' → logprob: -13.62614631652832
    9. '_maps' → logprob: -14.25114631652832
    10. '       ' → logprob: -14.87614631652832

Token 2670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16032466292381287
    2. '=' → logprob: -1.9103246927261353
    3. '           ' → logprob: -9.410325050354004
    4. '       ' → logprob: -11.410325050354004
    5. '   ' → logprob: -12.910325050354004
    6. '        ' → logprob: -14.035325050354004
    7. '=
' → logprob: -14.035325050354004
    8. '.' → logprob: -14.410325050354004
    9. '```' → logprob: -15.035325050354004
    10. ' =
' → logprob: -15.160325050354004

Token 2671: ' City' (ID: 5686)
  Prédit: 'City'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'City' → logprob: -0.061967913061380386
    2. ' City' → logprob: -2.8119678497314453
    3. '           ' → logprob: -15.311967849731445
    4. 'Car' → logprob: -20.186967849731445
    5. '.City' → logprob: -20.186967849731445
    6. '_city' → logprob: -20.811967849731445
    7. ' city' → logprob: -20.811967849731445
    8. 'Code' → logprob: -20.936967849731445
    9. '   ' → logprob: -20.936967849731445
    10. ' ' → logprob: -21.436967849731445

Token 2672: 'Map' (ID: 2307)
  Prédit: 'Map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Map' → logprob: -0.0005348019185476005
    2. '(M' → logprob: -7.625535011291504
    3. '(self' → logprob: -10.875535011291504
    4. '(Map' → logprob: -11.875535011291504
    5. '(
' → logprob: -12.250535011291504
    6. '           ' → logprob: -12.875535011291504
    7. '(' → logprob: -13.000535011291504
    8. '_map' → logprob: -13.250535011291504
    9. '       ' → logprob: -13.500535011291504
    10. '   ' → logprob: -13.500535011291504

Token 2673: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.3425219549390022e-05
    2. '           ' → logprob: -12.00001335144043
    3. 'M' → logprob: -13.00001335144043
    4. '(' → logprob: -13.12501335144043
    5. '(N' → logprob: -13.25001335144043
    6. '(
' → logprob: -14.37501335144043
    7. '(D' → logprob: -15.62501335144043
    8. '(self' → logprob: -15.87501335144043
    9. '               ' → logprob: -16.50001335144043
    10. ' (' → logprob: -16.50001335144043

Token 2674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.333223139634356e-05
    2. ',N' → logprob: -10.625033378601074
    3. '           ' → logprob: -12.250033378601074
    4. ' ,' → logprob: -12.500033378601074
    5. ',
' → logprob: -15.125033378601074
    6. ',n' → logprob: -16.375032424926758
    7. '               ' → logprob: -16.875032424926758
    8. '       ' → logprob: -17.750032424926758
    9. '   ' → logprob: -18.125032424926758
    10. '=' → logprob: -19.000032424926758

Token 2675: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006392885115928948
    2. ' N' → logprob: -7.37563943862915
    3. '           ' → logprob: -12.000638961791992
    4. '               ' → logprob: -13.125638961791992
    5. '                   ' → logprob: -13.500638961791992
    6. '   ' → logprob: -14.125638961791992
    7. '            ' → logprob: -15.250638961791992
    8. '       ' → logprob: -15.250638961791992
    9. '```' → logprob: -15.500638961791992
    10. '  ' → logprob: -15.625638961791992

Token 2676: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009866228327155113
    2. '           ' → logprob: -4.634866237640381
    3. ',
' → logprob: -9.634865760803223
    4. ' ,' → logprob: -11.134865760803223
    5. ')' → logprob: -11.634865760803223
    6. '          ' → logprob: -12.509865760803223
    7. ',D' → logprob: -12.634865760803223
    8. ',n' → logprob: -13.259865760803223
    9. '```' → logprob: -13.259865760803223
    10. ')
' → logprob: -13.634865760803223

Token 2677: ' D' (ID: 415)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.5035116672515869
    2. '1' → logprob: -1.253511667251587
    3. ' ns' → logprob: -2.753511667251587
    4. 'D' → logprob: -4.128511428833008
    5. '10' → logprob: -4.628511428833008
    6. '5' → logprob: -5.753511428833008
    7. ' ' → logprob: -6.003511428833008
    8. ' D' → logprob: -6.128511428833008
    9. '           ' → logprob: -6.253511428833008
    10. '2' → logprob: -6.378511428833008

Token 2678: ')

' (ID: 1029)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17572973668575287
    2. ')' → logprob: -1.925729751586914
    3. ')
' → logprob: -4.175729751586914
    4. '          ' → logprob: -11.675729751586914
    5. '```' → logprob: -13.050729751586914
    6. '       ' → logprob: -13.175729751586914
    7. '<|end|>' → logprob: -13.300729751586914
    8. ',' → logprob: -13.675729751586914
    9. '            
' → logprob: -13.925729751586914
    10. '
' → logprob: -13.925729751586914

Token 2679: '           ' (ID: 352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4063214659690857
    2. 'for' → logprob: -1.2813215255737305
    3. '           ' → logprob: -3.0313215255737305
    4. 'origin' → logprob: -5.7813215255737305
    5. 'while' → logprob: -6.6563215255737305
    6. '```' → logprob: -6.6563215255737305
    7. '#' → logprob: -7.0313215255737305
    8. '``' → logprob: -8.03132152557373
    9. 'destination' → logprob: -8.65632152557373
    10. 'signal' → logprob: -8.78132152557373

Token 2680: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015669959830120206
    2. '           ' → logprob: -7.1265668869018555
    3. 'start' → logprob: -7.5015668869018555
    4. '#' (adapté à ' #') → logprob: -9.001566886901855
    5. ' for' → logprob: -9.876566886901855
    6. '```' → logprob: -10.876566886901855
    7. 'signal' → logprob: -12.126566886901855
    8. '       ' → logprob: -12.376566886901855
    9. 'while' → logprob: -12.876566886901855
    10. '``' → logprob: -13.626566886901855

Token 2681: ' Signals' (ID: 153627)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8325677703833207e-05
    2. '#' → logprob: -11.125028610229492
    3. '           ' → logprob: -11.625028610229492
    4. ' for' → logprob: -12.750028610229492
    5. 'start' → logprob: -14.125028610229492
    6. 'num' → logprob: -15.000028610229492
    7. '```' → logprob: -16.000028610229492
    8. 'For' → logprob: -16.125028610229492
    9. 'signals' → logprob: -16.375028610229492
    10. '
' → logprob: -16.375028610229492

Token 2682: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04416096583008766
    2. 'for' → logprob: -3.169161081314087
    3. ' for' → logprob: -6.794160842895508
    4. '       ' → logprob: -10.794160842895508
    5. 'num' → logprob: -12.544160842895508
    6. '               ' → logprob: -12.794160842895508
    7. '   ' → logprob: -12.794160842895508
    8. '#' → logprob: -13.044160842895508
    9. '```' → logprob: -13.044160842895508
    10. '
' → logprob: -13.669160842895508

Token 2683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12705746293067932
    2. 'for' → logprob: -2.1270575523376465
    3. ' for' → logprob: -9.502057075500488
    4. '       ' → logprob: -10.377057075500488
    5. 'while' → logprob: -11.127057075500488
    6. '```' → logprob: -12.252057075500488
    7. '               ' → logprob: -13.752057075500488
    8. '   ' → logprob: -14.002057075500488
    9. '#' → logprob: -14.627057075500488
    10. '                   ' → logprob: -15.002057075500488

Token 2684: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.68153518543113e-05
    2. '           ' → logprob: -10.000057220458984
    3. ' for' → logprob: -11.500057220458984
    4. 'num' → logprob: -14.000057220458984
    5. 'count' → logprob: -15.000057220458984
    6. 'signal' → logprob: -16.750057220458984
    7. '```' → logprob: -17.125057220458984
    8. 'while' → logprob: -17.250057220458984
    9. '       ' → logprob: -17.250057220458984
    10. '	for' → logprob: -18.000057220458984

Token 2685: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0030242912471294403
    2. '_i' → logprob: -6.003024101257324
    3. ' _' → logprob: -8.128024101257324
    4. 'i' → logprob: -8.628024101257324
    5. '_signal' → logprob: -10.628024101257324
    6. '_s' → logprob: -10.753024101257324
    7. '_in' → logprob: -11.628024101257324
    8. '__' → logprob: -12.253024101257324
    9. '_range' → logprob: -12.253024101257324
    10. '_=' → logprob: -13.003024101257324

Token 2686: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002326224057469517
    2. 'in' → logprob: -8.375232696533203
    3. 'range' → logprob: -13.500232696533203
    4. 'i' → logprob: -14.750232696533203
    5. ' ' → logprob: -15.750232696533203
    6. 's' → logprob: -17.000232696533203
    7. '  ' → logprob: -18.625232696533203
    8. '#' → logprob: -18.875232696533203
    9. '
' → logprob: -19.000232696533203
    10. ' ' → logprob: -19.125232696533203

Token 2687: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002655079588294029
    2. ' range' → logprob: -8.250265121459961
    3. '_' → logprob: -12.625265121459961
    4. '_range' → logprob: -14.125265121459961
    5. 'in' → logprob: -16.37526512145996
    6. ' in' → logprob: -16.75026512145996
    7. 'r' → logprob: -18.50026512145996
    8. '	range' → logprob: -19.00026512145996
    9. '0' → logprob: -19.62526512145996
    10. '(range' → logprob: -19.87526512145996

Token 2688: '(ns' (ID: 79469)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.03583105280995369
    2. '(ns' → logprob: -3.6608309745788574
    3. ' ns' → logprob: -4.660830974578857
    4. '	ns' → logprob: -11.660831451416016
    5. 'n' → logprob: -12.160831451416016
    6. '_ns' → logprob: -12.910831451416016
    7. 'int' → logprob: -13.035831451416016
    8. '/ns' → logprob: -13.410831451416016
    9. '(n' → logprob: -13.535831451416016
    10. 'range' → logprob: -13.535831451416016

Token 2689: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8777900338172913
    2. ':
' → logprob: -1.2527899742126465
    3. ':' → logprob: -1.7527899742126465
    4. '):
' → logprob: -2.2527899742126465
    5. '           ' → logprob: -4.5027899742126465
    6. '():
' → logprob: -5.7527899742126465
    7. '):' → logprob: -6.7527899742126465
    8. '       ' → logprob: -7.3777899742126465
    9. '<|end|>' → logprob: -7.3777899742126465
    10. '<|end|>' → logprob: -7.5027899742126465

Token 2690: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.685467764735222e-05
    2. '	           ' → logprob: -9.875086784362793
    3. '           ' → logprob: -11.500086784362793
    4. '   ' → logprob: -12.500086784362793
    5. '```' → logprob: -13.125086784362793
    6. 'coord' → logprob: -13.250086784362793
    7. '                   ' → logprob: -13.375086784362793
    8. '              ' → logprob: -13.500086784362793
    9. '#line' → logprob: -13.750086784362793
    10. '			   ' → logprob: -13.875086784362793

Token 2691: ' parts' (ID: 7881)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0572030246257782
    2. 'signal' → logprob: -3.1822030544281006
    3. 'coord' → logprob: -5.0572028160095215
    4. '               ' → logprob: -5.0572028160095215
    5. 'parts' (adapté à ' parts') → logprob: -7.6822028160095215
    6. ' line' → logprob: -7.9322028160095215
    7. 'coords' → logprob: -8.80720329284668
    8. 's' → logprob: -9.05720329284668
    9. 'sign' → logprob: -9.68220329284668
    10. 'sig' → logprob: -9.93220329284668

Token 2692: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5321608781814575
    2. '=' → logprob: -0.9071608781814575
    3. '=line' → logprob: -5.157160758972168
    4. '           ' → logprob: -6.407160758972168
    5. '_line' → logprob: -7.532160758972168
    6. '               ' → logprob: -7.782160758972168
    7. '(line' → logprob: -9.157160758972168
    8. '[line' → logprob: -9.282160758972168
    9. '   ' → logprob: -9.407160758972168
    10. 'line' → logprob: -9.657160758972168

Token 2693: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.505351095460355e-05
    2. ' input' → logprob: -9.500075340270996
    3. '           ' → logprob: -16.62507438659668
    4. '               ' → logprob: -17.25007438659668
    5. '(input' → logprob: -19.87507438659668
    6. '                   ' → logprob: -20.25007438659668
    7. '[input' → logprob: -20.37507438659668
    8. '   ' → logprob: -21.87507438659668
    9. '_input' → logprob: -21.87507438659668
    10. 'Input' → logprob: -22.00007438659668

Token 2694: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.016734817996621132
    2. '[input' → logprob: -4.391734600067139
    3. 'input' → logprob: -5.891734600067139
    4. 'Lines' → logprob: -7.141734600067139
    5. '[idx' → logprob: -7.766734600067139
    6. 'lines' → logprob: -9.516735076904297
    7. '=input' → logprob: -10.016735076904297
    8. '[' → logprob: -10.141735076904297
    9. '=' → logprob: -11.266735076904297
    10. '[line' → logprob: -11.516735076904297

Token 2695: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.610702363715973e-06
    2. 'idx' → logprob: -11.750009536743164
    3. '                   ' → logprob: -14.750009536743164
    4. '   ' → logprob: -15.500009536743164
    5. '               ' → logprob: -15.875009536743164
    6. ' idx' → logprob: -16.000009536743164
    7. '           ' → logprob: -16.000009536743164
    8. '(idx' → logprob: -16.250009536743164
    9. '[id' → logprob: -16.500009536743164
    10. '       ' → logprob: -16.500009536743164

Token 2696: '].' (ID: 1651)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.028772227466106415
    2. '.split' → logprob: -4.028772354125977
    3. '```' → logprob: -6.278772354125977
    4. '.strip' → logprob: -6.653772354125977
    5. '[' → logprob: -7.028772354125977
    6. '           ' → logprob: -7.153772354125977
    7. '=' → logprob: -7.153772354125977
    8. '.' → logprob: -7.153772354125977
    9. '               ' → logprob: -7.153772354125977
    10. '                   ' → logprob: -7.278772354125977

Token 2697: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00671584764495492
    2. 'split' → logprob: -5.006715774536133
    3. 'rstrip' → logprob: -14.756715774536133
    4. ' strip' → logprob: -16.756715774536133
    5. '(strip' → logprob: -18.131715774536133
    6. '_strip' → logprob: -18.506715774536133
    7. '.strip' → logprob: -18.881715774536133
    8. '-strip' → logprob: -19.381715774536133
    9. 'Strip' → logprob: -19.881715774536133
    10. 'pop' → logprob: -20.506715774536133

Token 2698: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018887832993641496
    2. '.split' → logprob: -9.000188827514648
    3. '()' → logprob: -9.750188827514648
    4. '()
' → logprob: -13.375188827514648
    5. 'split' → logprob: -13.375188827514648
    6. '()[' → logprob: -13.375188827514648
    7. '_split' → logprob: -15.500188827514648
    8. '=' → logprob: -15.625188827514648
    9. '.Split' → logprob: -15.875188827514648
    10. '.readline' → logprob: -15.875188827514648

Token 2699: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.375
    3. '(split' → logprob: -16.875
    4. '.split' → logprob: -17.25
    5. '_split' → logprob: -19.0
    6. 'spl' → logprob: -20.25
    7. '```' → logprob: -21.0
    8. 'strip' → logprob: -21.25
    9. 'Split' → logprob: -21.875
    10. 'plit' → logprob: -22.125

Token 2700: '()
' (ID: 1234)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.7561208605766296
    2. '[idx' → logprob: -0.8811208605766296
    3. 'idx' → logprob: -3.3811209201812744
    4. '[
' → logprob: -3.7561209201812744
    5. '           ' → logprob: -4.506120681762695
    6. '[' → logprob: -4.631120681762695
    7. '()
' → logprob: -4.631120681762695
    8. '()' → logprob: -5.006120681762695
    9. '(' → logprob: -5.506120681762695
    10. '```' → logprob: -6.006120681762695

Token 2701: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7272005677223206
    2. 'idx' → logprob: -1.2272005081176758
    3. '           ' → logprob: -1.6022005081176758
    4. 'coord' → logprob: -4.352200508117676
    5. '```' → logprob: -5.352200508117676
    6. ' idx' → logprob: -6.977200508117676
    7. '{
' → logprob: -7.602200508117676
    8. '                   ' → logprob: -7.852200508117676
    9. 'coordinate' → logprob: -8.102200508117676
    10. '``' → logprob: -8.227200508117676

Token 2702: ' idx' (ID: 14016)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.002388495020568371
    2. 'signal' → logprob: -6.3773884773254395
    3. ' coord' → logprob: -8.127388954162598
    4. 'coordinate' → logprob: -8.752388954162598
    5. 'idx' (adapté à ' idx') → logprob: -9.502388954162598
    6. '           ' → logprob: -10.127388954162598
    7. 'coords' → logprob: -10.377388954162598
    8. 'cycle' → logprob: -11.002388954162598
    9. '               ' → logprob: -11.002388954162598
    10. 'ew' → logprob: -11.377388954162598

Token 2703: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0025635301135480404
    2. ' +=' → logprob: -6.2525634765625
    3. '```' → logprob: -8.7525634765625
    4. '           ' → logprob: -8.8775634765625
    5. ']+=' → logprob: -8.8775634765625
    6. '[' → logprob: -9.7525634765625
    7. '               ' → logprob: -10.3775634765625
    8. '+' → logprob: -10.3775634765625
    9. '                   ' → logprob: -10.7525634765625
    10. '.append' → logprob: -12.2525634765625

Token 2704: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003175889723934233
    2. '3' → logprob: -8.125317573547363
    3. ' ' → logprob: -11.625317573547363
    4. '4' → logprob: -12.250317573547363
    5. '   ' → logprob: -12.750317573547363
    6. '2' → logprob: -13.375317573547363
    7. 'len' → logprob: -14.000317573547363
    8. '       ' → logprob: -14.125317573547363
    9. '
' → logprob: -14.375317573547363
    10. '           ' → logprob: -14.500317573547363

Token 2705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4272752852994017e-05
    2. '3' → logprob: -11.12502384185791
    3. ' ' → logprob: -12.37502384185791
    4. '4' → logprob: -13.37502384185791
    5. '
' → logprob: -13.37502384185791
    6. '2' → logprob: -14.62502384185791
    7. 'len' → logprob: -14.62502384185791
    8. 'parts' → logprob: -14.75002384185791
    9. '0' → logprob: -15.50002384185791
    10. '   ' → logprob: -16.000024795532227

Token 2706: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14722676575183868
    2. 'coord' → logprob: -2.0222268104553223
    3. '           ' → logprob: -6.147226810455322
    4. ' coord' → logprob: -6.522226810455322
    5. 'coordinate' → logprob: -7.772226810455322
    6. 'signal' → logprob: -8.147226333618164
    7. 'coords' → logprob: -9.647226333618164
    8. '```' → logprob: -10.647226333618164
    9. '                   ' → logprob: -11.147226333618164
    10. '(coord' → logprob: -11.272226333618164

Token 2707: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09578299522399902
    2. 'coord' → logprob: -2.470782995223999
    3. '           ' → logprob: -5.220783233642578
    4. '```' → logprob: -7.720783233642578
    5. ' coord' → logprob: -7.845783233642578
    6. 'coordinate' → logprob: -8.345783233642578
    7. 'signal' → logprob: -8.720783233642578
    8. 'coords' → logprob: -9.845783233642578
    9. '   ' → logprob: -10.470783233642578
    10. 'c' → logprob: -11.095783233642578

Token 2708: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' (adapté à ' coord') → logprob: -0.0007013569120317698
    2. 'signal' → logprob: -7.875701427459717
    3. '               ' → logprob: -8.875700950622559
    4. 'ew' → logprob: -9.625700950622559
    5. 'coordinate' → logprob: -9.875700950622559
    6. ' coord' → logprob: -10.125700950622559
    7. 'coords' → logprob: -11.750700950622559
    8. 'c' → logprob: -12.625700950622559
    9. 'road' → logprob: -13.000700950622559
    10. '           ' → logprob: -13.125700950622559

Token 2709: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136571943759918
    2. '=' → logprob: -1.3136571645736694
    3. '_str' → logprob: -8.0636568069458
    4. ',' → logprob: -10.1886568069458
    5. '_obj' → logprob: -11.3136568069458
    6. '_coord' → logprob: -11.9386568069458
    7. 'str' → logprob: -12.0636568069458
    8. '           ' → logprob: -12.5636568069458
    9. '_token' → logprob: -13.0636568069458
    10. '   ' → logprob: -13.3136568069458

Token 2710: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -3.5597102396423e-05
    2. ' Coordinate' → logprob: -10.250035285949707
    3. '_coordinate' → logprob: -16.375036239624023
    4. 'Coordinator' → logprob: -17.125036239624023
    5. 'Coordinates' → logprob: -18.125036239624023
    6. 'Traffic' → logprob: -18.375036239624023
    7. 'Coord' → logprob: -18.375036239624023
    8. 'coordinate' → logprob: -18.500036239624023
    9. 'Code' → logprob: -19.000036239624023
    10. 'parts' → logprob: -19.375036239624023

Token 2711: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.012553448788821697
    2. 'from' → logprob: -4.5125532150268555
    3. '.' → logprob: -7.0125532150268555
    4. '(parts' → logprob: -8.012553215026855
    5. 'parts' → logprob: -8.387553215026855
    6. ' .' → logprob: -10.762553215026855
    7. '.parts' → logprob: -11.137553215026855
    8. '   ' → logprob: -12.512553215026855
    9. '
' → logprob: -12.887553215026855
    10. '#from' → logprob: -13.887553215026855

Token 2712: '_str' (ID: 6182)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.20383714139461517
    2. '_str' → logprob: -1.7038371562957764
    3. '(parts' → logprob: -6.703836917877197
    4. 'parts' → logprob: -6.828836917877197
    5. '_parts' → logprob: -9.578837394714355
    6. '(str' → logprob: -11.328837394714355
    7. 's' → logprob: -11.578837394714355
    8. 'Str' → logprob: -11.703837394714355
    9. 'string' → logprob: -12.203837394714355
    10. '[str' → logprob: -13.078837394714355

Token 2713: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00020354038861114532
    2. 'parts' → logprob: -8.500203132629395
    3. ' parts' → logprob: -18.50020408630371
    4. '(part' → logprob: -19.00020408630371
    5. '(' → logprob: -19.50020408630371
    6. '(
' → logprob: -19.87520408630371
    7. 'Parts' → logprob: -21.87520408630371
    8. '_parts' → logprob: -22.12520408630371
    9. '`' → logprob: -22.25020408630371
    10. '.parts' → logprob: -22.62520408630371

Token 2714: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19287844002246857
    2. '(' → logprob: -1.9428784847259521
    3. '(parts' → logprob: -3.442878484725952
    4. 'parts' → logprob: -9.442878723144531
    5. '([' → logprob: -10.192878723144531
    6. '0' → logprob: -10.692878723144531
    7. '(
' → logprob: -12.442878723144531
    8. '()[' → logprob: -12.942878723144531
    9. '('' → logprob: -13.317878723144531
    10. '_parts' → logprob: -13.942878723144531

Token 2715: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015814013313502073
    2. '[' → logprob: -7.001581192016602
    3. '1' → logprob: -8.001581192016602
    4. ''' → logprob: -8.876581192016602
    5. '(' → logprob: -9.626581192016602
    6. '"' → logprob: -9.751581192016602
    7. 'parts' → logprob: -10.251581192016602
    8. '(parts' → logprob: -11.376581192016602
    9. '2' → logprob: -12.126581192016602
    10. '`' → logprob: -12.251581192016602

Token 2716: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006127156782895327
    2. ')' → logprob: -5.25612735748291
    3. '())
' → logprob: -7.13112735748291
    4. '])
' → logprob: -10.00612735748291
    5. '[' → logprob: -11.50612735748291
    6. ')
' → logprob: -11.63112735748291
    7. ',' → logprob: -12.13112735748291
    8. '               ' → logprob: -12.38112735748291
    9. '(' → logprob: -12.50612735748291
    10. '(parts' → logprob: -12.50612735748291

Token 2717: '               ' (ID: 506)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.08322954177856445
    2. '               ' → logprob: -2.5832295417785645
    3. 'signal' → logprob: -6.0832295417785645
    4. '```' → logprob: -6.5832295417785645
    5. ' cycle' → logprob: -7.8332295417785645
    6. '           ' → logprob: -8.583229064941406
    7. '``' → logprob: -10.708229064941406
    8. 'c' → logprob: -12.083229064941406
    9. '                   ' → logprob: -12.083229064941406
    10. '       ' → logprob: -12.083229064941406

Token 2718: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' (adapté à ' cycle') → logprob: -0.020907247439026833
    2. 'city' → logprob: -3.895907163619995
    3. '               ' → logprob: -8.395907402038574
    4. 'signal' → logprob: -9.395907402038574
    5. ' cycle' → logprob: -10.770907402038574
    6. 'cycl' → logprob: -11.895907402038574
    7. '                   ' → logprob: -12.020907402038574
    8. 'self' → logprob: -12.145907402038574
    9. '           ' → logprob: -13.020907402038574
    10. 'cy' → logprob: -13.270907402038574

Token 2719: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032736104913055897
    2. ' =' → logprob: -5.7532734870910645
    3. '=int' → logprob: -9.253273963928223
    4. 'int' → logprob: -16.003273010253906
    5. '=
' → logprob: -17.253273010253906
    6. '   ' → logprob: -18.253273010253906
    7. ' ' → logprob: -19.378273010253906
    8. '＝' → logprob: -20.503273010253906
    9. '_=' → logprob: -20.628273010253906
    10. '=

' → logprob: -20.628273010253906

Token 2720: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.935296834039036e-06
    2. ' int' → logprob: -12.75000286102295
    3. '[int' → logprob: -18.875003814697266
    4. '(int' → logprob: -20.250003814697266
    5. '=int' → logprob: -20.500003814697266
    6. '<int' → logprob: -21.500003814697266
    7. '	int' → logprob: -23.000003814697266
    8. ':int' → logprob: -23.125003814697266
    9. '```' → logprob: -24.500003814697266
    10. ']int' → logprob: -25.000003814697266

Token 2721: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -4.842555426876061e-06
    2. 'parts' → logprob: -12.250004768371582
    3. '(' → logprob: -20.0000057220459
    4. '(part' → logprob: -21.1250057220459
    5. ' parts' → logprob: -21.3750057220459
    6. '(
' → logprob: -22.1250057220459
    7. 'Parts' → logprob: -22.3750057220459
    8. '_parts' → logprob: -24.1250057220459
    9. '.parts' → logprob: -24.3750057220459
    10. '(points' → logprob: -24.3750057220459

Token 2722: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3544423381972592e-05
    2. '1' → logprob: -11.25001335144043
    3. 'parts' → logprob: -15.00001335144043
    4. '_parts' → logprob: -15.50001335144043
    5. '(parts' → logprob: -17.12501335144043
    6. '(' → logprob: -17.50001335144043
    7. '[
' → logprob: -18.62501335144043
    8. '[-' → logprob: -18.62501335144043
    9. 'Parts' → logprob: -18.62501335144043
    10. '```' → logprob: -19.62501335144043

Token 2723: '1' (ID: 16)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.1282045990228653
    2. '1' → logprob: -2.128204584121704
    3. ' parts' → logprob: -7.378204822540283
    4. '(parts' → logprob: -7.878204822540283
    5. '[' → logprob: -8.503204345703125
    6. 'idx' → logprob: -10.753204345703125
    7. '0' → logprob: -11.253204345703125
    8. '   ' → logprob: -11.753204345703125
    9. '2' → logprob: -12.503204345703125
    10. '
' → logprob: -12.628204345703125

Token 2724: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31471002101898193
    2. ')' → logprob: -1.314710021018982
    3. '               ' → logprob: -6.5647101402282715
    4. ')
' → logprob: -10.439709663391113
    5. '           ' → logprob: -12.314709663391113
    6. ')`
' → logprob: -13.939709663391113
    7. '                   ' → logprob: -14.189709663391113
    8. ')

' → logprob: -14.564709663391113
    9. ' )
' → logprob: -14.814709663391113
    10. ');' → logprob: -15.064709663391113

Token 2725: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022426925599575043
    2. '           ' → logprob: -4.522427082061768
    3. 'self' → logprob: -4.522427082061768
    4. 'city' → logprob: -7.772427082061768
    5. ' self' → logprob: -11.02242660522461
    6. ' city' → logprob: -12.02242660522461
    7. '                   ' → logprob: -12.64742660522461
    8. '       ' → logprob: -13.39742660522461
    9. '   ' → logprob: -13.39742660522461
    10. '              ' → logprob: -14.14742660522461

Token 2726: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' (adapté à ' city') → logprob: -0.010008337907493114
    2. '               ' → logprob: -5.260008335113525
    3. '           ' → logprob: -5.510008335113525
    4. ' city' → logprob: -7.260008335113525
    5. 'self' → logprob: -11.510008811950684
    6. '                   ' → logprob: -12.885008811950684
    7. '   ' → logprob: -15.135008811950684
    8. '```' → logprob: -15.510008811950684
    9. '             ' → logprob: -15.760008811950684
    10. '       ' → logprob: -16.010007858276367

Token 2727: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.5451681974809617e-05
    2. '           ' → logprob: -11.750015258789062
    3. 'Map' → logprob: -12.500015258789062
    4. '.set' → logprob: -13.625015258789062
    5. 'map' → logprob: -13.875015258789062
    6. '_set' → logprob: -14.500015258789062
    7. '   ' → logprob: -15.250015258789062
    8. '.map' → logprob: -15.500015258789062
    9. '       ' → logprob: -15.750015258789062
    10. '._' → logprob: -15.875015258789062

Token 2728: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -1.8908587662735954e-05
    2. '               ' → logprob: -11.750019073486328
    3. '           ' → logprob: -11.875019073486328
    4. '.sign' → logprob: -13.375019073486328
    5. 'set' → logprob: -13.875019073486328
    6. '   ' → logprob: -14.750019073486328
    7. '.' → logprob: -15.250019073486328
    8. '#set' → logprob: -15.500019073486328
    9. '       ' → logprob: -15.625019073486328
    10. '                   ' → logprob: -15.750019073486328

Token 2729: '_signal' (ID: 50953)
  Prédit: '_signal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_signal' → logprob: -0.018151935189962387
    2. 'signal' → logprob: -4.018151760101318
    3. 'coord' → logprob: -14.143152236938477
    4. '(signal' → logprob: -14.518152236938477
    5. 'Signal' → logprob: -15.018152236938477
    6. '_SIGNAL' → logprob: -15.893152236938477
    7. ' signal' → logprob: -16.393152236938477
    8. '_sign' → logprob: -16.518152236938477
    9. 'sig' → logprob: -16.768152236938477
    10. 'coordinate' → logprob: -17.143152236938477

Token 2730: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -1.1160349458805285e-05
    2. '(co' → logprob: -11.750011444091797
    3. 'coord' → logprob: -13.375011444091797
    4. '(coords' → logprob: -13.500011444091797
    5. '(' → logprob: -15.250011444091797
    6. ' (' → logprob: -17.625011444091797
    7. '(
' → logprob: -17.875011444091797
    8. '(coeff' → logprob: -18.750011444091797
    9. '((' → logprob: -19.000011444091797
    10. ' coord' → logprob: -19.625011444091797

Token 2731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5466692447662354
    2. '(c' → logprob: -0.9216692447662354
    3. ')' → logprob: -4.421669006347656
    4. '(coord' → logprob: -5.546669006347656
    5. '(co' → logprob: -5.546669006347656
    6. '(' → logprob: -6.546669006347656
    7. ' (' → logprob: -7.421669006347656
    8. '               ' → logprob: -7.546669006347656
    9. '           ' → logprob: -8.296669006347656
    10. 'cycle' → logprob: -9.171669006347656

Token 2732: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.0007100477814674377
    2. ' cycle' → logprob: -7.2507100105285645
    3. '
' → logprob: -16.250709533691406
    4. 'cycl' → logprob: -18.000709533691406
    5. '   ' → logprob: -18.125709533691406
    6. '_cycle' → logprob: -18.625709533691406
    7. '           ' → logprob: -18.750709533691406
    8. '```' → logprob: -18.750709533691406
    9. '               ' → logprob: -19.125709533691406
    10. '                   ' → logprob: -19.375709533691406

Token 2733: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12900198996067047
    2. '<|end|>' → logprob: -2.129002094268799
    3. '           ' → logprob: -7.004002094268799
    4. '<|end|>' → logprob: -7.254002094268799
    5. '
' → logprob: -8.25400161743164
    6. ')
' → logprob: -9.00400161743164
    7. '               ' → logprob: -11.37900161743164
    8. '")' → logprob: -11.50400161743164
    9. '')' → logprob: -12.00400161743164
    10. '#' → logprob: -12.00400161743164

Token 2734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002899378538131714
    2. '```' → logprob: -6.127899169921875
    3. 'for' → logprob: -7.377899169921875
    4. '#' → logprob: -10.252899169921875
    5. '       ' → logprob: -10.502899169921875
    6. ' for' → logprob: -10.877899169921875
    7. '
' → logprob: -13.377899169921875
    8. '            
' → logprob: -14.002899169921875
    9. '          ' → logprob: -14.252899169921875
    10. 'For' → logprob: -14.627899169921875

Token 2735: ' nc' (ID: 39841)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.35957932472229
    2. 'for' → logprob: -2.10957932472229
    3. 'rd' → logprob: -2.60957932472229
    4. 'nr' → logprob: -2.85957932472229
    5. 'road' → logprob: -2.85957932472229
    6. 'cr' → logprob: -2.98457932472229
    7. 'roads' → logprob: -3.23457932472229
    8. 'r' → logprob: -3.60957932472229
    9. 'ro' → logprob: -3.73457932472229
    10. 'rm' → logprob: -3.85957932472229

Token 2736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5768671631813049
    2. '=' → logprob: -0.8268671631813049
    3. ',' → logprob: -7.57686710357666
    4. '   ' → logprob: -8.57686710357666
    5. '=int' → logprob: -9.45186710357666
    6. '           ' → logprob: -9.82686710357666
    7. '_' → logprob: -11.07686710357666
    8. 'ount' → logprob: -11.45186710357666
    9. ' ' → logprob: -11.70186710357666
    10. '       ' → logprob: -11.70186710357666

Token 2737: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00861930102109909
    2. ' int' → logprob: -4.75861930847168
    3. '           ' → logprob: -12.38361930847168
    4. '(int' → logprob: -15.25861930847168
    5. '   ' → logprob: -16.38361930847168
    6. '[int' → logprob: -16.63361930847168
    7. '=int' → logprob: -17.50861930847168
    8. ' ' → logprob: -18.00861930847168
    9. '       ' → logprob: -18.13361930847168
    10. '               ' → logprob: -18.13361930847168

Token 2738: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0019299437990412116
    2. 'input' → logprob: -6.251929759979248
    3. '(' → logprob: -15.001930236816406
    4. '(
' → logprob: -15.126930236816406
    5. '=input' → logprob: -15.376930236816406
    6. '[input' → logprob: -15.751930236816406
    7. '(parts' → logprob: -16.001930236816406
    8. 'parts' → logprob: -16.501930236816406
    9. ' input' → logprob: -16.501930236816406
    10. ',input' → logprob: -17.251930236816406

Token 2739: '_lines' (ID: 42980)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.7927263975143433
    2. '_lines' → logprob: -0.7927263975143433
    3. '(input' → logprob: -3.042726516723633
    4. '[input' → logprob: -3.667726516723633
    5. '(idx' → logprob: -4.542726516723633
    6. 'input' → logprob: -5.417726516723633
    7. 'idx' → logprob: -5.792726516723633
    8. '           ' → logprob: -7.167726516723633
    9. '[line' → logprob: -7.667726516723633
    10. '       ' → logprob: -8.292726516723633

Token 2740: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.225939872208983e-05
    2. 'idx' → logprob: -10.500032424926758
    3. '.strip' → logprob: -13.125032424926758
    4. '(idx' → logprob: -13.750032424926758
    5. '```' → logprob: -14.500032424926758
    6. '_idx' → logprob: -15.125032424926758
    7. '.readline' → logprob: -15.375032424926758
    8. '	idx' → logprob: -15.625032424926758
    9. '[index' → logprob: -16.125032424926758
    10. '[ind' → logprob: -16.250032424926758

Token 2741: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3901803195476532
    2. '.strip' → logprob: -1.1401803493499756
    3. ' .' → logprob: -7.6401801109313965
    4. '[idx' → logprob: -7.7651801109313965
    5. '.' → logprob: -7.8901801109313965
    6. ']' → logprob: -7.8901801109313965
    7. '
' → logprob: -8.015180587768555
    8. '           ' → logprob: -8.140180587768555
    9. '().' → logprob: -8.640180587768555
    10. '.readline' → logprob: -8.640180587768555

Token 2742: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.512236498361744e-07
    2. '_strip' → logprob: -15.500000953674316
    3. 'rstrip' → logprob: -15.875000953674316
    4. '.strip' → logprob: -16.625
    5. '```' → logprob: -17.625
    6. 'skip' → logprob: -17.75
    7. ' strip' → logprob: -17.75
    8. '(strip' → logprob: -18.5
    9. '-strip' → logprob: -18.75
    10. 'split' → logprob: -19.25

Token 2743: '())
' (ID: 4574)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.675967812538147
    2. ')
' → logprob: -0.925967812538147
    3. ')' → logprob: -2.4259676933288574
    4. '()' → logprob: -6.550967693328857
    5. '```' → logprob: -6.800967693328857
    6. '               ' → logprob: -7.175967693328857
    7. '())
' → logprob: -7.175967693328857
    8. '()
' → logprob: -7.175967693328857
    9. '<|end|>' → logprob: -8.050968170166016
    10. '       ' → logprob: -8.050968170166016

Token 2744: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04812418669462204
    2. 'idx' → logprob: -3.298124074935913
    3. '       ' → logprob: -5.048124313354492
    4. '```' → logprob: -6.298124313354492
    5. '   ' → logprob: -8.173124313354492
    6. '<|end|>' → logprob: -8.423124313354492
    7. '          ' → logprob: -8.548124313354492
    8. '	       ' → logprob: -9.298124313354492
    9. '               ' → logprob: -9.298124313354492
    10. '<|end|>' → logprob: -9.298124313354492

Token 2745: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0026045527774840593
    2. '           ' → logprob: -6.1276044845581055
    3. ' idx' → logprob: -8.752604484558105
    4. '       ' → logprob: -9.002604484558105
    5. '```' → logprob: -9.252604484558105
    6. '	idx' → logprob: -10.627604484558105
    7. '_idx' → logprob: -11.877604484558105
    8. '[idx' → logprob: -12.502604484558105
    9. '   ' → logprob: -12.627604484558105
    10. '          ' → logprob: -13.877604484558105

Token 2746: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004731772467494011
    2. ' +=' → logprob: -5.87973165512085
    3. '           ' → logprob: -6.50473165512085
    4. '=' → logprob: -8.129732131958008
    5. '+' → logprob: -9.129732131958008
    6. '++' → logprob: -11.379732131958008
    7. ']+=' → logprob: -12.379732131958008
    8. '       ' → logprob: -12.504732131958008
    9. '```' → logprob: -13.504732131958008
    10. '   ' → logprob: -13.504732131958008

Token 2747: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004084574058651924
    2. '0' → logprob: -5.504084587097168
    3. ' ' → logprob: -12.254084587097168
    4. '           ' → logprob: -14.129084587097168
    5. '   ' → logprob: -14.754084587097168
    6. '       ' → logprob: -16.25408363342285
    7. '```' → logprob: -16.50408363342285
    8. 'n' → logprob: -17.25408363342285
    9. '
' → logprob: -17.37908363342285
    10. '#' → logprob: -17.87908363342285

Token 2748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -12.75000286102295
    3. ' ' → logprob: -17.000003814697266
    4. '
' → logprob: -19.375003814697266
    5. 'int' → logprob: -20.000003814697266
    6. '   ' → logprob: -21.250003814697266
    7. '```' → logprob: -21.250003814697266
    8. '(' → logprob: -22.125003814697266
    9. 'n' → logprob: -22.250003814697266
    10. '#' → logprob: -22.250003814697266

Token 2749: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03808888420462608
    2. '           ' → logprob: -3.288088798522949
    3. '       ' → logprob: -10.41308879852295
    4. ' for' → logprob: -11.53808879852295
    5. '```' → logprob: -12.03808879852295
    6. 'while' → logprob: -14.28808879852295
    7. '	for' → logprob: -15.16308879852295
    8. '   ' → logprob: -15.41308879852295
    9. '
' → logprob: -15.91308879852295
    10. 'For' → logprob: -16.163089752197266

Token 2750: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005250710528343916
    2. '           ' → logprob: -5.255250930786133
    3. '       ' → logprob: -11.755250930786133
    4. ' for' → logprob: -12.380250930786133
    5. '```' → logprob: -13.005250930786133
    6. '#' → logprob: -13.130250930786133
    7. '``' → logprob: -15.880250930786133
    8. 'while' → logprob: -15.880250930786133
    9. '
' → logprob: -16.005250930786133
    10. '   ' → logprob: -16.130250930786133

Token 2751: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005581548321060836
    2. '           ' → logprob: -7.500558376312256
    3. ' for' → logprob: -12.750557899475098
    4. '       ' → logprob: -13.750557899475098
    5. '#' (adapté à ' #') → logprob: -14.000557899475098
    6. 'while' → logprob: -15.375557899475098
    7. '```' → logprob: -16.000558853149414
    8. '
' → logprob: -17.125558853149414
    9. '   ' → logprob: -17.250558853149414
    10. '	for' → logprob: -17.500558853149414

Token 2752: ' Closed' (ID: 74030)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7954958821064793e-05
    2. '           ' → logprob: -11.000018119812012
    3. '#' → logprob: -13.750018119812012
    4. ' for' → logprob: -16.875017166137695
    5. '
' → logprob: -17.375017166137695
    6. '       ' → logprob: -17.875017166137695
    7. '```' → logprob: -18.250017166137695
    8. 'while' → logprob: -19.375017166137695
    9. '   ' → logprob: -19.750017166137695
    10. '	for' → logprob: -20.250017166137695

Token 2753: ' roads' (ID: 30027)
  Prédit: 'roads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roads' → logprob: -0.009504962712526321
    2. 'for' → logprob: -5.259504795074463
    3. 'road' → logprob: -6.134504795074463
    4. '           ' → logprob: -7.259504795074463
    5. '#' → logprob: -7.384504795074463
    6. ' roads' → logprob: -7.884504795074463
    7. '=' → logprob: -8.259505271911621
    8. '```' → logprob: -10.384505271911621
    9. '   ' → logprob: -10.634505271911621
    10. '_ro' → logprob: -11.009505271911621

Token 2754: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06218536198139191
    2. '           ' → logprob: -2.812185287475586
    3. ' for' → logprob: -8.437185287475586
    4. '       ' → logprob: -14.437185287475586
    5. '#' → logprob: -15.937185287475586
    6. '	for' → logprob: -16.187185287475586
    7. '   ' → logprob: -16.312185287475586
    8. '
' → logprob: -16.312185287475586
    9. '               ' → logprob: -16.562185287475586
    10. '```' → logprob: -17.312185287475586

Token 2755: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10028193891048431
    2. '           ' → logprob: -2.3502819538116455
    3. ' for' → logprob: -9.850281715393066
    4. '       ' → logprob: -11.100281715393066
    5. '```' → logprob: -11.975281715393066
    6. '   ' → logprob: -14.725281715393066
    7. '
' → logprob: -15.350281715393066
    8. '               ' → logprob: -15.475281715393066
    9. '	for' → logprob: -16.350282669067383
    10. '``' → logprob: -16.475282669067383

Token 2756: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00015943869948387146
    2. '           ' → logprob: -8.75015926361084
    3. ' for' → logprob: -14.00015926361084
    4. '       ' → logprob: -16.250160217285156
    5. '   ' → logprob: -19.750160217285156
    6. '	for' → logprob: -19.875160217285156
    7. '               ' → logprob: -20.625160217285156
    8. '```' → logprob: -20.750160217285156
    9. 'For' → logprob: -21.125160217285156
    10. 'while' → logprob: -21.375160217285156

Token 2757: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.438573680294212e-06
    2. ' _' → logprob: -12.250005722045898
    3. '_c' → logprob: -15.625005722045898
    4. ' in' → logprob: -15.750005722045898
    5. '_in' → logprob: -16.3750057220459
    6. '_i' → logprob: -16.8750057220459
    7. '_range' → logprob: -17.1250057220459
    8. '_=' → logprob: -17.5000057220459
    9. 'i' → logprob: -17.7500057220459
    10. '_
' → logprob: -17.8750057220459

Token 2758: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14350229501724243
    2. 'in' → logprob: -2.1435022354125977
    3. ' in' → logprob: -4.518502235412598
    4. 'range' → logprob: -5.268502235412598
    5. ' _' → logprob: -8.518502235412598
    6. ' range' → logprob: -9.018502235412598
    7. '_range' → logprob: -10.768502235412598
    8. '_in' → logprob: -11.518502235412598
    9. 's' → logprob: -11.893502235412598
    10. ' ' → logprob: -12.018502235412598

Token 2759: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007450564298778772
    2. ' range' → logprob: -5.007450580596924
    3. '_' → logprob: -7.257450580596924
    4. '_range' → logprob: -10.507450103759766
    5. ' in' → logprob: -13.007450103759766
    6. 'in' → logprob: -15.132450103759766
    7. '	range' → logprob: -15.882450103759766
    8. '(range' → logprob: -17.382450103759766
    9. '   ' → logprob: -18.257450103759766
    10. 'r' → logprob: -18.382450103759766

Token 2760: '(n' (ID: 2406)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -6.587483221665025e-05
    2. ' nc' → logprob: -10.000065803527832
    3. '_nc' → logprob: -11.500065803527832
    4. '(n' → logprob: -11.750065803527832
    5. 'range' → logprob: -13.875065803527832
    6. 'n' → logprob: -14.625065803527832
    7. '           ' → logprob: -15.375065803527832
    8. '
' → logprob: -15.750065803527832
    9. 'int' → logprob: -15.875065803527832
    10. '0' → logprob: -15.875065803527832

Token 2761: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6240566083070007e-06
    2. 'nc' → logprob: -14.000001907348633
    3. '_c' → logprob: -14.500001907348633
    4. '[c' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '_nc' → logprob: -17.625001907348633
    7. '
' → logprob: -17.750001907348633
    8. '(c' → logprob: -17.875001907348633
    9. 'C' → logprob: -18.250001907348633
    10. ')c' → logprob: -18.750001907348633

Token 2762: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6559141874313354
    2. '               ' → logprob: -1.4059141874313354
    3. '):
' → logprob: -1.5309141874313354
    4. '           ' → logprob: -4.405914306640625
    5. ':' → logprob: -5.405914306640625
    6. '():
' → logprob: -6.780914306640625
    7. ',' → logprob: -7.530914306640625
    8. '=' → logprob: -8.905914306640625
    9. ']:
' → logprob: -9.030914306640625
    10. '                   ' → logprob: -9.155914306640625

Token 2763: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010026819072663784
    2. '```' → logprob: -7.876002788543701
    3. 'parts' → logprob: -8.751002311706543
    4. '           ' → logprob: -9.001002311706543
    5. '):
' → logprob: -10.376002311706543
    6. '	           ' → logprob: -10.376002311706543
    7. '       ' → logprob: -10.751002311706543
    8. ':
' → logprob: -10.876002311706543
    9. '#line' → logprob: -10.876002311706543
    10. ' parts' → logprob: -11.001002311706543

Token 2764: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.027531757950782776
    2. '               ' → logprob: -4.402531623840332
    3. 'lines' → logprob: -4.777531623840332
    4. 'line' → logprob: -5.152531623840332
    5. 'coords' → logprob: -8.277531623840332
    6. ' parts' → logprob: -8.402531623840332
    7. '_parts' → logprob: -10.277531623840332
    8. '(parts' → logprob: -10.402531623840332
    9. '```' → logprob: -10.652531623840332
    10. 'part' → logprob: -11.027531623840332

Token 2765: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5787988901138306
    2. ' =' → logprob: -0.8287988901138306
    3. '=line' → logprob: -6.078798770904541
    4. '           ' → logprob: -8.5787992477417
    5. '_line' → logprob: -9.7037992477417
    6. 'line' → logprob: -9.9537992477417
    7. '   ' → logprob: -10.3287992477417
    8. '(parts' → logprob: -10.8287992477417
    9. '_parts' → logprob: -10.9537992477417
    10. 'idx' → logprob: -11.0787992477417

Token 2766: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -5.919942486798391e-05
    2. ' input' → logprob: -9.750059127807617
    3. '[input' → logprob: -14.375059127807617
    4. '(input' → logprob: -15.625059127807617
    5. '               ' → logprob: -17.500059127807617
    6. '           ' → logprob: -18.750059127807617
    7. '<input' → logprob: -18.875059127807617
    8. '=input' → logprob: -19.125059127807617
    9. 'inputs' → logprob: -19.500059127807617
    10. '_input' → logprob: -19.750059127807617

Token 2767: '_lines' (ID: 42980)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.12702952325344086
    2. '[input' → logprob: -2.3770294189453125
    3. 'input' → logprob: -3.7520294189453125
    4. 'idx' → logprob: -6.6270294189453125
    5. '_lines' → logprob: -7.5020294189453125
    6. 'lines' → logprob: -7.5020294189453125
    7. '_input' → logprob: -8.377029418945312
    8. '[line' → logprob: -8.877029418945312
    9. '[index' → logprob: -10.502029418945312
    10. '(input' → logprob: -10.627029418945312

Token 2768: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00010986098641296849
    2. 'idx' → logprob: -9.125109672546387
    3. '(idx' → logprob: -15.375109672546387
    4. '[input' → logprob: -15.375109672546387
    5. 'input' → logprob: -16.375110626220703
    6. '   ' → logprob: -16.375110626220703
    7. '	idx' → logprob: -16.750110626220703
    8. ' idx' → logprob: -17.000110626220703
    9. '[line' → logprob: -17.250110626220703
    10. '
' → logprob: -17.500110626220703

Token 2769: '].' (ID: 1651)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0035298748407512903
    2. '.strip' → logprob: -5.753530025482178
    3. 'idx' → logprob: -8.37852954864502
    4. '           ' → logprob: -10.50352954864502
    5. '(idx' → logprob: -10.50352954864502
    6. '               ' → logprob: -11.12852954864502
    7. '                   ' → logprob: -11.87852954864502
    8. 'strip' → logprob: -11.87852954864502
    9. '].' → logprob: -12.00352954864502
    10. '       ' → logprob: -12.25352954864502

Token 2770: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.5048530030981055e-06
    2. 'split' → logprob: -13.750001907348633
    3. 'rstrip' → logprob: -15.375001907348633
    4. ' strip' → logprob: -15.750001907348633
    5. '.strip' → logprob: -17.375001907348633
    6. '_strip' → logprob: -17.500001907348633
    7. '(strip' → logprob: -17.875001907348633
    8. 'str' → logprob: -19.625001907348633
    9. '-strip' → logprob: -19.875001907348633
    10. 'Strip' → logprob: -20.125001907348633

Token 2771: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0029238720890134573
    2. '.split' → logprob: -6.377923965454102
    3. '               ' → logprob: -7.752923965454102
    4. '()' → logprob: -8.127923965454102
    5. '()
' → logprob: -8.252923965454102
    6. '.readline' → logprob: -9.627923965454102
    7. '           ' → logprob: -10.252923965454102
    8. '.strip' → logprob: -10.752923965454102
    9. '```' → logprob: -10.752923965454102
    10. '                   ' → logprob: -11.252923965454102

Token 2772: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0067209405824542046
    2. 'strip' → logprob: -5.006721019744873
    3. '_split' → logprob: -13.006720542907715
    4. 'idx' → logprob: -13.631720542907715
    5. 'rstrip' → logprob: -13.881720542907715
    6. ' split' → logprob: -15.006720542907715
    7. '(split' → logprob: -15.006720542907715
    8. '```' → logprob: -15.006720542907715
    9. '=' → logprob: -16.63172149658203
    10. 'skip' → logprob: -17.00672149658203

Token 2773: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004753476474434137
    2. '           ' → logprob: -6.129753589630127
    3. '```' → logprob: -6.754753589630127
    4. 'idx' → logprob: -8.879753112792969
    5. '[' → logprob: -8.879753112792969
    6. '(' → logprob: -9.004753112792969
    7. '<|end|>' → logprob: -9.129753112792969
    8. '(idx' → logprob: -9.254753112792969
    9. ',' → logprob: -9.379753112792969
    10. 'tokens' → logprob: -9.504753112792969

Token 2774: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016687574097886682
    2. '```' → logprob: -6.501668930053711
    3. '           ' → logprob: -9.376668930053711
    4. 'tokens' → logprob: -10.501668930053711
    5. '``' → logprob: -10.751668930053711
    6. '       ' → logprob: -11.751668930053711
    7. '`' → logprob: -11.876668930053711
    8. '                   ' → logprob: -13.001668930053711
    9. '   ' → logprob: -13.251668930053711
    10. 'parts' → logprob: -13.376668930053711

Token 2775: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.02968800812959671
    2. '               ' → logprob: -4.279687881469727
    3. 'c' → logprob: -4.404687881469727
    4. 'coord' → logprob: -6.529687881469727
    5. 'start' → logprob: -7.404687881469727
    6. 'from' → logprob: -7.904687881469727
    7. '           ' → logprob: -8.154687881469727
    8. 'coords' → logprob: -8.779687881469727
    9. 'index' → logprob: -9.404687881469727
    10. 'src' → logprob: -9.654687881469727

Token 2776: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04580223560333252
    2. ' +=' → logprob: -3.670802116394043
    3. '           ' → logprob: -4.670802116394043
    4. '               ' → logprob: -5.670802116394043
    5. '[idx' → logprob: -6.545802116394043
    6. '```' → logprob: -6.670802116394043
    7. '                   ' → logprob: -6.920802116394043
    8. '.append' → logprob: -7.045802116394043
    9. '=' → logprob: -7.920802116394043
    10. '[' → logprob: -8.420802116394043

Token 2777: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9875325708417222e-05
    2. '2' → logprob: -10.500029563903809
    3. ' ' → logprob: -13.875029563903809
    4. '   ' → logprob: -14.750029563903809
    5. '3' → logprob: -14.875029563903809
    6. '4' → logprob: -15.250029563903809
    7. 'parts' → logprob: -16.250030517578125
    8. '0' → logprob: -16.625030517578125
    9. '           ' → logprob: -17.500030517578125
    10. '       ' → logprob: -17.500030517578125

Token 2778: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '0' → logprob: -13.500003814697266
    3. '2' → logprob: -13.875003814697266
    4. 'parts' → logprob: -14.500003814697266
    5. '3' → logprob: -15.000003814697266
    6. '4' → logprob: -15.250003814697266
    7. ' ' → logprob: -15.500003814697266
    8. '_' → logprob: -15.500003814697266
    9. '   ' → logprob: -17.250003814697266
    10. '
' → logprob: -17.375003814697266

Token 2779: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002343300264328718
    2. 'c' → logprob: -6.25234317779541
    3. '           ' → logprob: -7.87734317779541
    4. '```' → logprob: -11.00234317779541
    5. 'parts' → logprob: -12.37734317779541
    6. ' c' → logprob: -12.50234317779541
    7. 'coord' → logprob: -12.62734317779541
    8. '       ' → logprob: -13.37734317779541
    9. '              ' → logprob: -13.75234317779541
    10. '   ' → logprob: -14.00234317779541

Token 2780: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002027019625529647
    2. 'c' → logprob: -6.3770270347595215
    3. '           ' → logprob: -8.252026557922363
    4. '```' → logprob: -10.002026557922363
    5. 'parts' → logprob: -12.252026557922363
    6. ' c' → logprob: -12.377026557922363
    7. '              ' → logprob: -13.377026557922363
    8. 'coord' → logprob: -13.502026557922363
    9. '       ' → logprob: -13.627026557922363
    10. '   ' → logprob: -13.877026557922363

Token 2781: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0005237233126536012
    2. 'coord' → logprob: -7.750523567199707
    3. '               ' → logprob: -9.375523567199707
    4. ' c' → logprob: -12.875523567199707
    5. 'coords' → logprob: -13.000523567199707
    6. 'start' → logprob: -13.125523567199707
    7. 'from' → logprob: -14.625523567199707
    8. 'cc' → logprob: -15.500523567199707
    9. '                   ' → logprob: -15.750523567199707
    10. 'cord' → logprob: -16.250524520874023

Token 2782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016115084290504456
    2. 'oord' → logprob: -7.001611709594727
    3. 'o' → logprob: -7.751611709594727
    4. 'from' → logprob: -9.626611709594727
    5. 'coord' → logprob: -9.751611709594727
    6. 'parts' → logprob: -10.126611709594727
    7. '_coord' → logprob: -11.501611709594727
    8. 'oor' → logprob: -11.626611709594727
    9. 'c' → logprob: -11.626611709594727
    10. ' =' → logprob: -11.626611709594727

Token 2783: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2551904618740082
    2. '=' → logprob: -1.5051904916763306
    3. ',' → logprob: -6.130190372467041
    4. '_coord' → logprob: -7.005190372467041
    5. '_parts' → logprob: -10.5051908493042
    6. '_coords' → logprob: -10.5051908493042
    7. '_str' → logprob: -10.7551908493042
    8. 'coord' → logprob: -10.8801908493042
    9. 'from' → logprob: -11.0051908493042
    10. '1' → logprob: -11.6301908493042

Token 2784: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -3.173704271830502e-06
    2. ' Coordinate' → logprob: -12.75000286102295
    3. '_coordinate' → logprob: -16.375003814697266
    4. 'Coordinates' → logprob: -17.875003814697266
    5. 'coordinate' → logprob: -19.000003814697266
    6. 'Coord' → logprob: -19.875003814697266
    7. 'Coordinator' → logprob: -20.625003814697266
    8. '   ' → logprob: -21.000003814697266
    9. ' coordinate' → logprob: -21.500003814697266
    10. '           ' → logprob: -21.750003814697266

Token 2785: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.14308993518352509
    2. 'from' → logprob: -2.018090009689331
    3. 'From' → logprob: -8.76809024810791
    4. '(parts' → logprob: -9.01809024810791
    5. '.' → logprob: -10.01809024810791
    6. ' =' → logprob: -10.26809024810791
    7. '#from' → logprob: -10.64309024810791
    8. '.strptime' → logprob: -11.64309024810791
    9. '=' → logprob: -12.39309024810791
    10. ' from' → logprob: -12.64309024810791

Token 2786: '_str' (ID: 6182)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.5852418541908264
    2. 'Str' → logprob: -0.9602418541908264
    3. 'str' → logprob: -2.9602417945861816
    4. '_str' → logprob: -5.335241794586182
    5. 'from' → logprob: -5.835241794586182
    6. 'Coord' → logprob: -8.58524227142334
    7. '_coordinate' → logprob: -8.71024227142334
    8. 'String' → logprob: -9.21024227142334
    9. 'Coordinates' → logprob: -9.33524227142334
    10. 'coordinate' → logprob: -9.83524227142334

Token 2787: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00020354038861114532
    2. 'parts' → logprob: -8.500203132629395
    3. '(part' → logprob: -17.50020408630371
    4. ' parts' → logprob: -18.12520408630371
    5. '(' → logprob: -18.37520408630371
    6. '(
' → logprob: -19.50020408630371
    7. ' (' → logprob: -20.50020408630371
    8. '(points' → logprob: -20.75020408630371
    9. '.parts' → logprob: -21.37520408630371
    10. '
' → logprob: -21.62520408630371

Token 2788: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06858540326356888
    2. '(parts' → logprob: -2.8185853958129883
    3. '(' → logprob: -5.568585395812988
    4. 'parts' → logprob: -5.943585395812988
    5. '0' → logprob: -9.318585395812988
    6. '()[' → logprob: -10.943585395812988
    7. '([' → logprob: -11.568585395812988
    8. ' parts' → logprob: -11.568585395812988
    9. '1' → logprob: -11.943585395812988
    10. 'c' → logprob: -12.318585395812988

Token 2789: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.074571393430233
    2. '[' → logprob: -2.699571371078491
    3. 'parts' → logprob: -5.57457160949707
    4. '1' → logprob: -7.82457160949707
    5. '(' → logprob: -8.57457160949707
    6. 'c' → logprob: -8.69957160949707
    7. '(parts' → logprob: -10.57457160949707
    8. '2' → logprob: -11.94957160949707
    9. '{' → logprob: -11.94957160949707
    10. ' parts' → logprob: -12.19957160949707

Token 2790: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.035397812724113464
    2. ')' → logprob: -3.53539776802063
    3. '(parts' → logprob: -5.410398006439209
    4. '               ' → logprob: -7.035398006439209
    5. ')c' → logprob: -9.41039752960205
    6. ')
' → logprob: -9.53539752960205
    7. '),' → logprob: -9.66039752960205
    8. '())
' → logprob: -11.28539752960205
    9. 'c' → logprob: -11.53539752960205
    10. '[' → logprob: -11.66039752960205

Token 2791: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.040985118597745895
    2. 'c' → logprob: -3.290985107421875
    3. ' c' → logprob: -6.040985107421875
    4. '```' → logprob: -9.040985107421875
    5. '		       ' → logprob: -9.040985107421875
    6. '       ' → logprob: -9.290985107421875
    7. '           ' → logprob: -9.915985107421875
    8. '			' → logprob: -10.040985107421875
    9. ',c' → logprob: -10.915985107421875
    10. '	c' → logprob: -11.040985107421875

Token 2792: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0008166544139385223
    2. '               ' → logprob: -7.625816822052002
    3. ' c' → logprob: -8.125816345214844
    4. '	c' → logprob: -10.375816345214844
    5. '			' → logprob: -14.250816345214844
    6. '           ' → logprob: -15.500816345214844
    7. '       ' → logprob: -15.750816345214844
    8. '   ' → logprob: -15.875816345214844
    9. '                   ' → logprob: -16.250816345214844
    10. '	' → logprob: -16.625816345214844

Token 2793: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. 'c' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.125
    4. '
' → logprob: -17.75
    5. ' ' → logprob: -17.75
    6. '  ' → logprob: -18.625
    7. ' c' → logprob: -19.0
    8. '_' → logprob: -19.125
    9. '               ' → logprob: -19.125
    10. '                   ' → logprob: -19.5

Token 2794: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313264399766922
    2. ' =' → logprob: -1.3132643699645996
    3. '=
' → logprob: -13.063264846801758
    4. ' =
' → logprob: -16.063264846801758
    5. ')' → logprob: -16.188264846801758
    6. ',' → logprob: -16.313264846801758
    7. '<|end|>' → logprob: -16.313264846801758
    8. '   ' → logprob: -16.438264846801758
    9. ' ' → logprob: -17.313264846801758
    10. '       ' → logprob: -17.563264846801758

Token 2795: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -1.1472419600977446e-06
    2. ' Coordinate' → logprob: -14.125000953674316
    3. '_coordinate' → logprob: -15.500000953674316
    4. 'Coordinates' → logprob: -17.250001907348633
    5. 'Coord' → logprob: -17.750001907348633
    6. 'Coordinator' → logprob: -18.125001907348633
    7. 'coordinate' → logprob: -19.000001907348633
    8. '           ' → logprob: -20.500001907348633
    9. '(parts' → logprob: -21.000001907348633
    10. 'C' → logprob: -21.250001907348633

Token 2796: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.5791811347007751
    2. 'from' → logprob: -0.8291811347007751
    3. 'From' → logprob: -6.45418119430542
    4. ' =' → logprob: -7.57918119430542
    5. 'Coordinate' → logprob: -7.70418119430542
    6. '=' → logprob: -8.329180717468262
    7. ' from' → logprob: -8.579180717468262
    8. '.strptime' → logprob: -9.079180717468262
    9. '.' → logprob: -9.954180717468262
    10. '.From' → logprob: -10.329180717468262

Token 2797: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.4912649691104889
    2. 'str' → logprob: -0.9912649393081665
    3. 'Str' → logprob: -4.116264820098877
    4. 'user' → logprob: -7.741264820098877
    5. 'Coordinate' → logprob: -8.366265296936035
    6. '.strptime' → logprob: -11.616265296936035
    7. '[str' → logprob: -12.116265296936035
    8. 's' → logprob: -12.241265296936035
    9. 'Coordinates' → logprob: -12.616265296936035
    10. '_Str' → logprob: -12.616265296936035

Token 2798: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00033581978641450405
    2. 'parts' → logprob: -8.000335693359375
    3. ' parts' → logprob: -14.875335693359375
    4. ' (' → logprob: -18.500335693359375
    5. '(part' → logprob: -19.500335693359375
    6. '(
' → logprob: -19.500335693359375
    7. '.parts' → logprob: -20.000335693359375
    8. '(points' → logprob: -20.500335693359375
    9. '(' → logprob: -20.625335693359375
    10. '(params' → logprob: -21.750335693359375

Token 2799: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013917774776928127
    2. '(' → logprob: -9.125139236450195
    3. '1' → logprob: -10.875139236450195
    4. '{' → logprob: -11.750139236450195
    5. '[idx' → logprob: -14.125139236450195
    6. 'idx' → logprob: -14.500139236450195
    7. 'Parts' → logprob: -14.750139236450195
    8. 'parts' → logprob: -14.875139236450195
    9. '()[' → logprob: -14.875139236450195
    10. '(parts' → logprob: -15.625139236450195

Token 2800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005300519522279501
    2. 'parts' → logprob: -5.255300521850586
    3. '[' → logprob: -10.005300521850586
    4. '0' → logprob: -11.380300521850586
    5. ' parts' → logprob: -12.630300521850586
    6. '2' → logprob: -12.630300521850586
    7. '(parts' → logprob: -13.505300521850586
    8. 'Parts' → logprob: -14.755300521850586
    9. '_parts' → logprob: -14.755300521850586
    10. '{' → logprob: -15.130300521850586

Token 2801: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03000953048467636
    2. ')' → logprob: -3.6550095081329346
    3. '               ' → logprob: -5.655009746551514
    4. ')
' → logprob: -8.905009269714355
    5. '())
' → logprob: -9.905009269714355
    6. '           ' → logprob: -11.780009269714355
    7. '()' → logprob: -13.405009269714355
    8. ')

' → logprob: -13.655009269714355
    9. '                   ' → logprob: -14.155009269714355
    10. '())' → logprob: -14.405009269714355

Token 2802: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004164913552813232
    2. '```' → logprob: -8.50041675567627
    3. '           ' → logprob: -9.12541675567627
    4. 'self' → logprob: -10.25041675567627
    5. '#' → logprob: -11.12541675567627
    6. 'city' → logprob: -11.12541675567627
    7. '                   ' → logprob: -12.37541675567627
    8. '
' → logprob: -12.62541675567627
    9. '       ' → logprob: -12.62541675567627
    10. ')' → logprob: -12.75041675567627

Token 2803: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' (adapté à ' city') → logprob: -0.026376472786068916
    2. '               ' → logprob: -3.776376485824585
    3. ' city' → logprob: -6.026376247406006
    4. '           ' → logprob: -7.276376247406006
    5. '                   ' → logprob: -11.401376724243164
    6. 'self' → logprob: -12.151376724243164
    7. '```' → logprob: -14.276376724243164
    8. '.city' → logprob: -14.776376724243164
    9. '_city' → logprob: -14.901376724243164
    10. '              ' → logprob: -15.026376724243164

Token 2804: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0002353640884393826
    2. '           ' → logprob: -8.875235557556152
    3. 'Map' → logprob: -9.875235557556152
    4. '.close' → logprob: -10.750235557556152
    5. '.map' → logprob: -12.375235557556152
    6. '._' → logprob: -12.500235557556152
    7. '               ' → logprob: -13.125235557556152
    8. '       ' → logprob: -13.250235557556152
    9. '.Map' → logprob: -13.250235557556152
    10. '   ' → logprob: -13.250235557556152

Token 2805: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -8.125210297293961e-05
    2. '           ' → logprob: -9.625081062316895
    3. '               ' → logprob: -11.625081062316895
    4. '.' → logprob: -13.125081062316895
    5. '.closed' → logprob: -14.000081062316895
    6. '.set' → logprob: -14.125081062316895
    7. '.city' → logprob: -14.125081062316895
    8. '       ' → logprob: -14.625081062316895
    9. '.cl' → logprob: -14.750081062316895
    10. '.Close' → logprob: -15.750081062316895

Token 2806: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001559258671477437
    2. 'road' → logprob: -6.501559257507324
    3. '(c' → logprob: -9.876559257507324
    4. 'Road' → logprob: -12.751559257507324
    5. '_ro' → logprob: -14.126559257507324
    6. '       ' → logprob: -14.626559257507324
    7. 'c' → logprob: -14.876559257507324
    8. '           ' → logprob: -15.001559257507324
    9. '   ' → logprob: -15.126559257507324
    10. ' road' → logprob: -16.12656021118164

Token 2807: 'road' (ID: 12086)
  Prédit: 'road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'road' → logprob: -0.001433216268196702
    2. '_' → logprob: -6.626433372497559
    3. 'Road' → logprob: -9.376433372497559
    4. 'c' → logprob: -11.501433372497559
    5. 'roads' → logprob: -11.626433372497559
    6. ' road' → logprob: -14.126433372497559
    7. 'ROAD' → logprob: -14.501433372497559
    8. '-road' → logprob: -14.626433372497559
    9. 'oad' → logprob: -15.001433372497559
    10. '_ro' → logprob: -15.001433372497559

Token 2808: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.339278580620885e-06
    2. '               ' → logprob: -13.750001907348633
    3. '(' → logprob: -14.125001907348633
    4. ' (' → logprob: -15.250001907348633
    5. '           ' → logprob: -16.625001907348633
    6. '(
' → logprob: -16.750001907348633
    7. '                   ' → logprob: -17.625001907348633
    8. 'c' → logprob: -17.750001907348633
    9. '(co' → logprob: -19.000001907348633
    10. '(C' → logprob: -19.625001907348633

Token 2809: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025684027932584286
    2. '2' → logprob: -6.627568244934082
    3. '(c' → logprob: -7.252568244934082
    4. '{' → logprob: -8.127568244934082
    5. ',c' → logprob: -9.252568244934082
    6. '[c' → logprob: -10.377568244934082
    7. ',' → logprob: -10.377568244934082
    8. '(' → logprob: -10.877568244934082
    9. ' c' → logprob: -11.377568244934082
    10. 'c' → logprob: -11.877568244934082

Token 2810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003621212439611554
    2. ',c' → logprob: -5.6286211013793945
    3. ' ,' → logprob: -11.628621101379395
    4. 'c' → logprob: -12.003621101379395
    5. '(c' → logprob: -12.628621101379395
    6. '           ' → logprob: -13.753621101379395
    7. ',
' → logprob: -14.128621101379395
    8. '               ' → logprob: -14.753621101379395
    9. ')' → logprob: -16.00362205505371
    10. ' c' → logprob: -16.25362205505371

Token 2811: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.5491004129871726e-05
    2. ' c' → logprob: -10.000045776367188
    3. '               ' → logprob: -18.625045776367188
    4. '   ' → logprob: -18.750045776367188
    5. '
' → logprob: -19.125045776367188
    6. '           ' → logprob: -19.250045776367188
    7. '	c' → logprob: -19.375045776367188
    8. '                   ' → logprob: -19.750045776367188
    9. '       ' → logprob: -19.875045776367188
    10. ')c' → logprob: -21.250045776367188

Token 2812: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ',' → logprob: -15.375
    3. 'c' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. '
' → logprob: -19.125
    6. '1' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. '{' → logprob: -19.5
    9. ',c' → logprob: -19.5
    10. '₂' → logprob: -19.625

Token 2813: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2814: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039380189031362534
    2. 'for' → logprob: -3.2893800735473633
    3. '```' → logprob: -7.164380073547363
    4. 'n' → logprob: -8.539380073547363
    5. '       ' → logprob: -8.664380073547363
    6. ' for' → logprob: -9.164380073547363
    7. 'nc' → logprob: -10.914380073547363
    8. '               ' → logprob: -11.289380073547363
    9. 'con' → logprob: -11.539380073547363
    10. '            
' → logprob: -11.539380073547363

Token 2815: ' nj' (ID: 8979)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5605019927024841
    2. 'nc' → logprob: -2.310502052307129
    3. '           ' → logprob: -2.685502052307129
    4. 'n' → logprob: -3.060502052307129
    5. 'dc' → logprob: -3.060502052307129
    6. 'ns' → logprob: -3.060502052307129
    7. 'con' → logprob: -3.185502052307129
    8. 'cd' → logprob: -4.185502052307129
    9. 'cg' → logprob: -4.685502052307129
    10. 'ct' → logprob: -5.060502052307129

Token 2816: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936384439468384
    2. ' =' → logprob: -0.6936384439468384
    3. '   ' → logprob: -8.068638801574707
    4. '           ' → logprob: -10.193638801574707
    5. '       ' → logprob: -10.318638801574707
    6. '    ' → logprob: -10.818638801574707
    7. '=int' → logprob: -11.068638801574707
    8. ' ' → logprob: -11.318638801574707
    9. 'umps' → logprob: -11.568638801574707
    10. '        ' → logprob: -11.818638801574707

Token 2817: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07893077284097672
    2. ' int' → logprob: -2.5789308547973633
    3. '=int' → logprob: -10.578930854797363
    4. '(int' → logprob: -11.328930854797363
    5. '[int' → logprob: -13.453930854797363
    6. '           ' → logprob: -14.703930854797363
    7. ' =' → logprob: -15.078930854797363
    8. 'nt' → logprob: -15.453930854797363
    9. '   ' → logprob: -15.703930854797363
    10. '<int' → logprob: -15.828930854797363

Token 2818: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014164448715746403
    2. 'input' → logprob: -4.264164447784424
    3. '[input' → logprob: -14.764164924621582
    4. '=input' → logprob: -15.389164924621582
    5. ' input' → logprob: -15.764164924621582
    6. ',input' → logprob: -17.389163970947266
    7. '<input' → logprob: -17.514163970947266
    8. '
' → logprob: -18.014163970947266
    9. ' (' → logprob: -18.889163970947266
    10. '_input' → logprob: -19.014163970947266

Token 2819: '_lines' (ID: 42980)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.05902088060975075
    2. '(idx' → logprob: -2.93402099609375
    3. 'idx' → logprob: -5.80902099609375
    4. '           ' → logprob: -8.18402099609375
    5. '_idx' → logprob: -8.30902099609375
    6. '
' → logprob: -8.68402099609375
    7. ' idx' → logprob: -9.55902099609375
    8. '```' → logprob: -9.55902099609375
    9. '	idx' → logprob: -9.68402099609375
    10. '       ' → logprob: -9.93402099609375

Token 2820: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.018445251509547234
    2. '.strip' → logprob: -4.643445014953613
    3. '(idx' → logprob: -5.018445014953613
    4. '```' → logprob: -7.393445014953613
    5. '.readline' → logprob: -7.518445014953613
    6. 'idx' → logprob: -8.268445014953613
    7. '           ' → logprob: -8.518445014953613
    8. '       ' → logprob: -9.893445014953613
    9. 'strip' → logprob: -10.268445014953613
    10. '                   ' → logprob: -10.518445014953613

Token 2821: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.31539562344551086
    2. '].' → logprob: -1.6903955936431885
    3. '           ' → logprob: -2.9403955936431885
    4. '[idx' → logprob: -4.690395832061768
    5. '               ' → logprob: -5.190395832061768
    6. ' .' → logprob: -5.565395832061768
    7. '.readline' → logprob: -6.065395832061768
    8. '.' → logprob: -6.440395832061768
    9. '().' → logprob: -6.440395832061768
    10. ']' → logprob: -6.690395832061768

Token 2822: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.339278580620885e-06
    2. '.strip' → logprob: -13.750001907348633
    3. '_strip' → logprob: -14.375001907348633
    4. 'rstrip' → logprob: -14.625001907348633
    5. ' strip' → logprob: -16.625001907348633
    6. 'stride' → logprob: -17.125001907348633
    7. 'skip' → logprob: -17.625001907348633
    8. '(strip' → logprob: -17.750001907348633
    9. 'split' → logprob: -17.875001907348633
    10. '-strip' → logprob: -17.875001907348633

Token 2823: '())
' (ID: 4574)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07638347148895264
    2. ')
' → logprob: -3.451383590698242
    3. ')' → logprob: -3.826383590698242
    4. '<|end|>' → logprob: -4.826383590698242
    5. '```' → logprob: -6.076383590698242
    6. '<|end|>' → logprob: -6.326383590698242
    7. '()' → logprob: -6.701383590698242
    8. '       ' → logprob: -6.826383590698242
    9. '               ' → logprob: -6.951383590698242
    10. '()
' → logprob: -7.451383590698242

Token 2824: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006996677257120609
    2. '       ' → logprob: -5.6319966316223145
    3. 'idx' → logprob: -6.0069966316223145
    4. '<|end|>' → logprob: -8.631997108459473
    5. '          ' → logprob: -8.756997108459473
    6. '<|end|>' → logprob: -9.131997108459473
    7. '```' → logprob: -9.381997108459473
    8. '	       ' → logprob: -9.506997108459473
    9. '               ' → logprob: -9.506997108459473
    10. '                   ' → logprob: -10.256997108459473

Token 2825: ' idx' (ID: 14016)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3147537112236023
    2. 'idx' (adapté à ' idx') → logprob: -1.314753770828247
    3. '       ' → logprob: -7.064753532409668
    4. '```' → logprob: -8.439753532409668
    5. '_idx' → logprob: -9.189753532409668
    6. ' idx' → logprob: -9.314753532409668
    7. '	idx' → logprob: -9.564753532409668
    8. '   ' → logprob: -10.064753532409668
    9. 'index' → logprob: -10.439753532409668
    10. '[idx' → logprob: -10.939753532409668

Token 2826: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014181148260831833
    2. ' +=' → logprob: -4.264181137084961
    3. '=' → logprob: -11.764181137084961
    4. ']+=' → logprob: -11.889181137084961
    5. '           ' → logprob: -13.889181137084961
    6. '   ' → logprob: -14.014181137084961
    7. '+' → logprob: -14.139181137084961
    8. '```' → logprob: -15.264181137084961
    9. '       ' → logprob: -15.389181137084961
    10. '+="' → logprob: -17.88918113708496

Token 2827: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7146746763028204e-05
    2. '0' → logprob: -10.75003719329834
    3. ' ' → logprob: -11.25003719329834
    4. '           ' → logprob: -12.87503719329834
    5. '   ' → logprob: -16.375036239624023
    6. '       ' → logprob: -18.625036239624023
    7. '```' → logprob: -18.750036239624023
    8. '#' → logprob: -19.375036239624023
    9. '
' → logprob: -19.375036239624023
    10. 'n' → logprob: -20.125036239624023

Token 2828: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25193122029304504
    2. '1' → logprob: -1.5019311904907227
    3. 'nj' → logprob: -14.501931190490723
    4. ' ' → logprob: -14.751931190490723
    5. '           ' → logprob: -15.001931190490723
    6. '   ' → logprob: -15.501931190490723
    7. '```' → logprob: -15.501931190490723
    8. '#' → logprob: -15.626931190490723
    9. 'for' → logprob: -16.50193214416504
    10. '
' → logprob: -16.75193214416504

Token 2829: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024443497881293297
    2. '           ' → logprob: -3.7744433879852295
    3. '#' → logprob: -7.274443626403809
    4. '       ' → logprob: -7.649443626403809
    5. ' for' → logprob: -11.274443626403809
    6. '```' → logprob: -11.649443626403809
    7. '	for' → logprob: -13.024443626403809
    8. '   ' → logprob: -13.274443626403809
    9. 'while' → logprob: -13.399443626403809
    10. '
' → logprob: -14.899443626403809

Token 2830: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008087544701993465
    2. '#' → logprob: -5.008087635040283
    3. '           ' → logprob: -6.758087635040283
    4. '       ' → logprob: -8.508087158203125
    5. '```' → logprob: -12.383087158203125
    6. ' for' → logprob: -13.008087158203125
    7. 'while' → logprob: -14.508087158203125
    8. '   ' → logprob: -14.508087158203125
    9. '	for' → logprob: -15.383087158203125
    10. '
' → logprob: -15.883087158203125

Token 2831: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03023752197623253
    2. '#' (adapté à ' #') → logprob: -3.7802374362945557
    3. '           ' → logprob: -5.030237674713135
    4. '       ' → logprob: -7.780237674713135
    5. ' for' → logprob: -12.655237197875977
    6. '   ' → logprob: -12.655237197875977
    7. '```' → logprob: -13.155237197875977
    8. '
' → logprob: -13.405237197875977
    9. 'while' → logprob: -13.530237197875977
    10. '	for' → logprob: -14.530237197875977

Token 2832: ' Cong' (ID: 12565)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1129186749458313
    2. '#' → logprob: -2.2379186153411865
    3. '           ' → logprob: -9.487918853759766
    4. ' for' → logprob: -11.987918853759766
    5. '       ' → logprob: -12.237918853759766
    6. 'while' → logprob: -12.487918853759766
    7. '
' → logprob: -12.987918853759766
    8. ' #' → logprob: -13.487918853759766
    9. '   ' → logprob: -14.237918853759766
    10. '	for' → logprob: -15.487918853759766

Token 2833: 'ested' (ID: 14155)
  Prédit: 'ested'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ested' → logprob: -0.36792218685150146
    2. 'j' → logprob: -1.7429221868515015
    3. 'estion' → logprob: -2.367922306060791
    4. '           ' → logprob: -3.992922306060791
    5. 'est' → logprob: -4.867922306060791
    6. '   ' → logprob: -5.242922306060791
    7. 'estions' → logprob: -6.242922306060791
    8. '       ' → logprob: -6.492922306060791
    9. 'esting' → logprob: -7.492922306060791
    10. 'r' → logprob: -7.492922306060791

Token 2834: ' roads' (ID: 30027)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.39246073365211487
    2. 'delay' → logprob: -1.6424607038497925
    3. '_delay' → logprob: -2.142460823059082
    4. '_del' → logprob: -5.017460823059082
    5. '           ' → logprob: -5.392460823059082
    6. 'for' → logprob: -6.642460823059082
    7. 'lines' → logprob: -7.517460823059082
    8. ' delays' → logprob: -8.392460823059082
    9. '```' → logprob: -9.017460823059082
    10. '       ' → logprob: -9.142460823059082

Token 2835: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07894233614206314
    2. '           ' → logprob: -2.57894229888916
    3. ' for' → logprob: -10.07894229888916
    4. '       ' → logprob: -11.70394229888916
    5. '   ' → logprob: -14.20394229888916
    6. '```' → logprob: -14.45394229888916
    7. '	for' → logprob: -14.82894229888916
    8. '		' → logprob: -15.45394229888916
    9. '               ' → logprob: -15.70394229888916
    10. '          ' → logprob: -15.95394229888916

Token 2836: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023633979726582766
    2. '           ' → logprob: -6.127363204956055
    3. ' for' → logprob: -8.752363204956055
    4. '       ' → logprob: -11.627363204956055
    5. '```' → logprob: -12.002363204956055
    6. '	for' → logprob: -12.627363204956055
    7. 'while' → logprob: -14.877363204956055
    8. 'For' → logprob: -15.002363204956055
    9. '#' → logprob: -15.252363204956055
    10. '   ' → logprob: -15.502363204956055

Token 2837: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003473825636319816
    2. '           ' → logprob: -8.000347137451172
    3. '       ' → logprob: -11.875347137451172
    4. ' for' → logprob: -12.250347137451172
    5. '	for' → logprob: -16.125347137451172
    6. '   ' → logprob: -16.875347137451172
    7. '```' → logprob: -17.625347137451172
    8. '               ' → logprob: -18.250347137451172
    9. '
' → logprob: -18.500347137451172
    10. 'while' → logprob: -19.250347137451172

Token 2838: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.2200749754119897e-06
    2. ' _' → logprob: -13.500001907348633
    3. ' in' → logprob: -14.875001907348633
    4. '_range' → logprob: -15.375001907348633
    5. '_j' → logprob: -16.125001907348633
    6. '_in' → logprob: -18.000001907348633
    7. '_n' → logprob: -18.250001907348633
    8. '_=' → logprob: -18.250001907348633
    9. '_
' → logprob: -18.500001907348633
    10. '_i' → logprob: -18.625001907348633

Token 2839: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.35706390615087e-05
    2. ' in' → logprob: -10.625033378601074
    3. '_range' → logprob: -12.250033378601074
    4. ' _' → logprob: -13.125033378601074
    5. 'range' → logprob: -14.375033378601074
    6. ' range' → logprob: -14.375033378601074
    7. 'in' → logprob: -14.750033378601074
    8. '_in' → logprob: -15.000033378601074
    9. '_j' → logprob: -15.375033378601074
    10. '_
' → logprob: -16.37503433227539

Token 2840: ' range' (ID: 3352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013542831875383854
    2. '_range' → logprob: -6.876354217529297
    3. 'range' → logprob: -8.626354217529297
    4. ' range' → logprob: -8.876354217529297
    5. ' in' → logprob: -13.876354217529297
    6. '0' → logprob: -14.126354217529297
    7. '_in' → logprob: -15.501354217529297
    8. 'in' → logprob: -16.001354217529297
    9. '_ranges' → logprob: -16.376354217529297
    10. '_]' → logprob: -16.751354217529297

Token 2841: '(n' (ID: 2406)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0007079057977534831
    2. '(n' → logprob: -7.875708103179932
    3. '_n' → logprob: -8.750707626342773
    4. ' nj' → logprob: -9.125707626342773
    5. 'n' → logprob: -9.875707626342773
    6. '0' → logprob: -12.875707626342773
    7. '
' → logprob: -13.375707626342773
    8. 'int' → logprob: -13.500707626342773
    9. '_' → logprob: -13.750707626342773
    10. '[n' → logprob: -14.500707626342773

Token 2842: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004141568206250668
    2. 'idx' → logprob: -5.754141330718994
    3. 'nj' → logprob: -7.629141330718994
    4. '_j' → logprob: -7.879141330718994
    5. '(idx' → logprob: -10.879141807556152
    6. '   ' → logprob: -11.254141807556152
    7. '[idx' → logprob: -11.504141807556152
    8. '_idx' → logprob: -11.629141807556152
    9. '
' → logprob: -12.004141807556152
    10. '_' → logprob: -12.254141807556152

Token 2843: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5456766486167908
    2. '               ' → logprob: -1.9206767082214355
    3. '):
' → logprob: -1.9206767082214355
    4. '           ' → logprob: -2.2956767082214355
    5. ',' → logprob: -5.1706767082214355
    6. ':' → logprob: -5.5456767082214355
    7. '       ' → logprob: -6.0456767082214355
    8. '=' → logprob: -6.1706767082214355
    9. '():
' → logprob: -6.1706767082214355
    10. '                   ' → logprob: -6.1706767082214355

Token 2844: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1974867284297943
    2. '           ' → logprob: -1.8224867582321167
    3. 'parts' → logprob: -4.447486877441406
    4. '```' → logprob: -6.197486877441406
    5. '       ' → logprob: -6.322486877441406
    6. ' parts' → logprob: -7.572486877441406
    7. '{
' → logprob: -7.822486877441406
    8. '(parts' → logprob: -8.572486877441406
    9. '   ' → logprob: -8.697486877441406
    10. '	       ' → logprob: -9.072486877441406

Token 2845: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.008795381523668766
    2. '(parts' → logprob: -5.508795261383057
    3. '               ' → logprob: -5.633795261383057
    4. ' parts' → logprob: -7.133795261383057
    5. '           ' → logprob: -8.383795738220215
    6. '_parts' → logprob: -9.883795738220215
    7. 'part' → logprob: -11.758795738220215
    8. '
' → logprob: -11.883795738220215
    9. '       ' → logprob: -12.258795738220215
    10. '```' → logprob: -12.383795738220215

Token 2846: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07052306085824966
    2. '=' → logprob: -2.6955230236053467
    3. '=line' → logprob: -7.945523262023926
    4. '           ' → logprob: -8.820523262023926
    5. '_parts' → logprob: -11.445523262023926
    6. '   ' → logprob: -11.570523262023926
    7. '[idx' → logprob: -11.695523262023926
    8. '               ' → logprob: -11.695523262023926
    9. ' parts' → logprob: -12.320523262023926
    10. 'idx' → logprob: -12.320523262023926

Token 2847: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0006772888009436429
    2. ' input' → logprob: -8.000677108764648
    3. 'int' → logprob: -9.125677108764648
    4. '(input' → logprob: -9.250677108764648
    5. 'len' → logprob: -9.875677108764648
    6. '[input' → logprob: -10.125677108764648
    7. '1' → logprob: -10.625677108764648
    8. 'range' → logprob: -11.875677108764648
    9. '=input' → logprob: -12.750677108764648
    10. '<input' → logprob: -13.125677108764648

Token 2848: '_lines' (ID: 42980)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.01433038804680109
    2. 'idx' → logprob: -4.3893303871154785
    3. '(idx' → logprob: -6.3893303871154785
    4. '       ' → logprob: -10.389330863952637
    5. 'lines' → logprob: -10.514330863952637
    6. '   ' → logprob: -10.514330863952637
    7. '           ' → logprob: -11.389330863952637
    8. '_lines' → logprob: -11.639330863952637
    9. ' idx' → logprob: -11.764330863952637
    10. 'input' → logprob: -12.514330863952637

Token 2849: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0011124740121886134
    2. 'idx' → logprob: -6.876112461090088
    3. '(idx' → logprob: -9.626112937927246
    4. ' idx' → logprob: -12.251112937927246
    5. '	idx' → logprob: -12.626112937927246
    6. '```' → logprob: -12.876112937927246
    7. '
' → logprob: -13.626112937927246
    8. '   ' → logprob: -14.626112937927246
    9. 'Idx' → logprob: -15.126112937927246
    10. '       ' → logprob: -15.626112937927246

Token 2850: '].' (ID: 1651)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5178048610687256
    2. '[idx' → logprob: -1.3928048610687256
    3. '           ' → logprob: -3.0178048610687256
    4. 'idx' → logprob: -3.1428048610687256
    5. '.strip' → logprob: -3.8928048610687256
    6. ' =' → logprob: -4.267805099487305
    7. '(idx' → logprob: -4.642805099487305
    8. '                   ' → logprob: -5.642805099487305
    9. '       ' → logprob: -6.017805099487305
    10. '_idx' → logprob: -6.142805099487305

Token 2851: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.512236498361744e-07
    2. ' strip' → logprob: -15.375000953674316
    3. 'split' → logprob: -15.750000953674316
    4. '.strip' → logprob: -17.0
    5. '
' → logprob: -18.125
    6. '(strip' → logprob: -18.25
    7. 'rstrip' → logprob: -18.5
    8. '_strip' → logprob: -19.75
    9. '#' → logprob: -20.875
    10. '-strip' → logprob: -20.875

Token 2852: '().' (ID: 1454)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.4977569878101349
    2. '               ' → logprob: -1.3727569580078125
    3. '(idx' → logprob: -2.9977569580078125
    4. 'idx' → logprob: -3.4977569580078125
    5. '           ' → logprob: -3.8727569580078125
    6. ' =' → logprob: -4.6227569580078125
    7. '=' → logprob: -4.8727569580078125
    8. '                   ' → logprob: -4.8727569580078125
    9. '```' → logprob: -5.3727569580078125
    10. '       ' → logprob: -6.2477569580078125

Token 2853: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.625
    3. 'strip' → logprob: -15.75
    4. '(split' → logprob: -16.0
    5. '_split' → logprob: -17.375
    6. '.split' → logprob: -18.5
    7. '```' → logprob: -19.125
    8. 'plit' → logprob: -20.375
    9. 'spl' → logprob: -21.0
    10. '#' → logprob: -21.75

Token 2854: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010555570479482412
    2. '<|end|>' → logprob: -8.001055717468262
    3. '<|end|>' → logprob: -8.501055717468262
    4. '[' → logprob: -9.251055717468262
    5. '		       ' → logprob: -9.501055717468262
    6. '	           ' → logprob: -9.626055717468262
    7. ',' → logprob: -10.126055717468262
    8. '           ' → logprob: -10.376055717468262
    9. '	       ' → logprob: -10.751055717468262
    10. '			' → logprob: -10.876055717468262

Token 2855: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.636475493200123e-05
    2. 'c' → logprob: -10.500076293945312
    3. '           ' → logprob: -11.250076293945312
    4. '```' → logprob: -11.375076293945312
    5. 'parts' → logprob: -11.750076293945312
    6. ' parts' → logprob: -11.875076293945312
    7. ' c' → logprob: -13.500076293945312
    8. '		       ' → logprob: -13.875076293945312
    9. '<|end|>' → logprob: -14.000076293945312
    10. '	           ' → logprob: -14.125076293945312

Token 2856: ' idx' (ID: 14016)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02341562882065773
    2. 'c' → logprob: -3.7734155654907227
    3. '           ' → logprob: -9.023415565490723
    4. '```' → logprob: -10.898415565490723
    5. 'parts' → logprob: -11.898415565490723
    6. '       ' → logprob: -12.023415565490723
    7. '                   ' → logprob: -12.148415565490723
    8. ' c' → logprob: -12.648415565490723
    9. '
' → logprob: -12.773415565490723
    10. '              ' → logprob: -13.648415565490723

Token 2857: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02533792331814766
    2. ' +=' → logprob: -3.9003379344940186
    3. '[idx' → logprob: -5.7753376960754395
    4. 'idx' → logprob: -7.6503376960754395
    5. '           ' → logprob: -7.9003376960754395
    6. '               ' → logprob: -8.400338172912598
    7. '[' → logprob: -9.275338172912598
    8. '_idx' → logprob: -9.400338172912598
    9. '   ' → logprob: -9.400338172912598
    10. '                   ' → logprob: -9.650338172912598

Token 2858: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016468366084154695
    2. '(' → logprob: -9.375164985656738
    3. '_' → logprob: -10.375164985656738
    4. ' ' → logprob: -10.875164985656738
    5. '   ' → logprob: -11.250164985656738
    6. '           ' → logprob: -11.750164985656738
    7. '               ' → logprob: -13.250164985656738
    8. '       ' → logprob: -13.500164985656738
    9. '0' → logprob: -13.750164985656738
    10. '()' → logprob: -14.125164985656738

Token 2859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003659102600067854
    2. 'int' → logprob: -5.628659248352051
    3. '3' → logprob: -10.75365924835205
    4. '0' → logprob: -11.00365924835205
    5. '(int' → logprob: -11.50365924835205
    6. '   ' → logprob: -13.12865924835205
    7. '
' → logprob: -13.25365924835205
    8. '2' → logprob: -13.25365924835205
    9. ' ' → logprob: -13.37865924835205
    10. '(' → logprob: -14.25365924835205

Token 2860: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003751423500943929
    2. 'c' → logprob: -8.000374794006348
    3. '           ' → logprob: -10.625374794006348
    4. ' c' → logprob: -12.125374794006348
    5. 'parts' → logprob: -12.625374794006348
    6. '```' → logprob: -12.625374794006348
    7. ' parts' → logprob: -13.875374794006348
    8. '   ' → logprob: -14.000374794006348
    9. '       ' → logprob: -14.750374794006348
    10. '                   ' → logprob: -14.875374794006348

Token 2861: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018159556202590466
    2. 'c' → logprob: -6.3768157958984375
    3. '```' → logprob: -10.126815795898438
    4. '           ' → logprob: -10.501815795898438
    5. ' c' → logprob: -10.876815795898438
    6. 'parts' → logprob: -11.001815795898438
    7. ' parts' → logprob: -12.251815795898438
    8. '   ' → logprob: -13.501815795898438
    9. '                   ' → logprob: -13.501815795898438
    10. '       ' → logprob: -14.001815795898438

Token 2862: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.023270051926374435
    2. '               ' → logprob: -3.7732701301574707
    3. '           ' → logprob: -11.148269653320312
    4. ' c' → logprob: -12.273269653320312
    5. '                   ' → logprob: -13.023269653320312
    6. '```' → logprob: -14.148269653320312
    7. '       ' → logprob: -14.648269653320312
    8. '   ' → logprob: -14.898269653320312
    9. '              ' → logprob: -14.898269653320312
    10. '	c' → logprob: -15.148269653320312

Token 2863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005586316110566258
    2. 'c' → logprob: -8.375558853149414
    3. '=' → logprob: -8.875558853149414
    4. ' =' → logprob: -9.125558853149414
    5. 'parts' → logprob: -11.125558853149414
    6. '_' → logprob: -11.500558853149414
    7. '   ' → logprob: -11.750558853149414
    8. '_parts' → logprob: -11.875558853149414
    9. 's' → logprob: -12.125558853149414
    10. '=c' → logprob: -12.250558853149414

Token 2864: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194698572158813
    2. '=' → logprob: -1.5019469261169434
    3. 'c' → logprob: -12.376947402954102
    4. ',' → logprob: -12.626947402954102
    5. '   ' → logprob: -13.001947402954102
    6. ' ' → logprob: -13.501947402954102
    7. '=
' → logprob: -14.126947402954102
    8. '=c' → logprob: -14.251947402954102
    9. '1' → logprob: -14.501947402954102
    10. '_' → logprob: -14.626947402954102

Token 2865: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -6.704273118884885e-07
    2. '_coordinate' → logprob: -15.000000953674316
    3. 'Coordinates' → logprob: -16.0
    4. ' Coordinate' → logprob: -16.0
    5. 'coordinate' → logprob: -17.75
    6. 'Coordinator' → logprob: -18.75
    7. 'Coord' → logprob: -20.375
    8. 'C' → logprob: -20.875
    9. 'Coefficient' → logprob: -21.0
    10. '.coordinate' → logprob: -21.25

Token 2866: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.017357230186462402
    2. 'from' → logprob: -4.142357349395752
    3. '=' → logprob: -7.017357349395752
    4. ' =' → logprob: -7.892357349395752
    5. '.' → logprob: -10.392356872558594
    6. 'From' → logprob: -11.642356872558594
    7. '_from' → logprob: -12.017356872558594
    8. '#from' → logprob: -13.767356872558594
    9. '.=' → logprob: -13.892356872558594
    10. '.From' → logprob: -14.142356872558594

Token 2867: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.10685719549655914
    2. 'Str' → logprob: -2.6068572998046875
    3. 'str' → logprob: -3.6068572998046875
    4. 'user' → logprob: -7.9818572998046875
    5. '_Str' → logprob: -9.981857299804688
    6. 'from' → logprob: -11.856857299804688
    7. '(user' → logprob: -11.981857299804688
    8. '_STR' → logprob: -12.231857299804688
    9. 'Coordinate' → logprob: -12.356857299804688
    10. '
' → logprob: -13.106857299804688

Token 2868: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -3.547789674485102e-05
    2. 'parts' → logprob: -10.250035285949707
    3. ' parts' → logprob: -18.625036239624023
    4. '(' → logprob: -19.500036239624023
    5. '.parts' → logprob: -20.125036239624023
    6. '(part' → logprob: -21.000036239624023
    7. ' (' → logprob: -21.250036239624023
    8. '(points' → logprob: -21.625036239624023
    9. '(
' → logprob: -21.625036239624023
    10. '[' → logprob: -22.375036239624023

Token 2869: '[' (ID: 58)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0002346488763578236
    2. '[' → logprob: -8.500234603881836
    3. 'parts' → logprob: -10.625234603881836
    4. '(' → logprob: -12.125234603881836
    5. ' parts' → logprob: -14.500234603881836
    6. '.parts' → logprob: -15.000234603881836
    7. '([' → logprob: -15.250234603881836
    8. '0' → logprob: -16.625234603881836
    9. ')' → logprob: -17.000234603881836
    10. '(part' → logprob: -17.000234603881836

Token 2870: '0' (ID: 15)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.026694783940911293
    2. '0' → logprob: -3.7766947746276855
    3. '[' → logprob: -6.0266947746276855
    4. '(parts' → logprob: -7.0266947746276855
    5. ' parts' → logprob: -9.526695251464844
    6. '(' → logprob: -10.776695251464844
    7. ''' → logprob: -10.776695251464844
    8. '"' → logprob: -11.401695251464844
    9. '1' → logprob: -12.526695251464844
    10. '   ' → logprob: -12.901695251464844

Token 2871: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2551652491092682
    2. ')
' → logprob: -2.0051653385162354
    3. '               ' → logprob: -3.1301653385162354
    4. '),' → logprob: -3.5051653385162354
    5. ')c' → logprob: -4.755165100097656
    6. ',' → logprob: -5.130165100097656
    7. 'c' → logprob: -7.005165100097656
    8. '(parts' → logprob: -7.880165100097656
    9. '           ' → logprob: -8.380165100097656
    10. '(c' → logprob: -8.505165100097656

Token 2872: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01663341000676155
    2. 'c' → logprob: -4.6416335105896
    3. ' c' → logprob: -5.3916335105896
    4. '			' → logprob: -6.8916335105896
    5. '		       ' → logprob: -8.016633033752441
    6. '```' → logprob: -8.516633033752441
    7. '	c' → logprob: -8.891633033752441
    8. '           ' → logprob: -9.266633033752441
    9. '       ' → logprob: -9.516633033752441
    10. '              ' → logprob: -10.016633033752441

Token 2873: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0030409356113523245
    2. '               ' → logprob: -6.378040790557861
    3. ' c' → logprob: -6.628040790557861
    4. '	c' → logprob: -12.00304126739502
    5. '           ' → logprob: -12.62804126739502
    6. '              ' → logprob: -13.75304126739502
    7. '                   ' → logprob: -13.87804126739502
    8. '   ' → logprob: -13.87804126739502
    9. '			' → logprob: -14.00304126739502
    10. '             ' → logprob: -15.00304126739502

Token 2874: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.278864359250292e-05
    2. '1' → logprob: -9.750072479248047
    3. 'c' → logprob: -11.250072479248047
    4. ' c' → logprob: -14.375072479248047
    5. '_c' → logprob: -15.000072479248047
    6. '_' → logprob: -15.000072479248047
    7. '   ' → logprob: -15.875072479248047
    8. '```' → logprob: -16.625072479248047
    9. '.c' → logprob: -16.750072479248047
    10. '
' → logprob: -17.375072479248047

Token 2875: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11323317140340805
    2. '=' → logprob: -2.2382330894470215
    3. '               ' → logprob: -8.61323356628418
    4. '<|end|>' → logprob: -10.23823356628418
    5. ')' → logprob: -10.48823356628418
    6. '=c' → logprob: -10.73823356628418
    7. '(' → logprob: -10.86323356628418
    8. '           ' → logprob: -10.86323356628418
    9. ',' → logprob: -11.11323356628418
    10. '=
' → logprob: -11.36323356628418

Token 2876: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -2.339278580620885e-06
    2. '_coordinate' → logprob: -14.000001907348633
    3. 'Coordinates' → logprob: -14.125001907348633
    4. ' Coordinate' → logprob: -14.375001907348633
    5. 'Coord' → logprob: -16.625001907348633
    6. 'Coordinator' → logprob: -17.000001907348633
    7. 'coordinate' → logprob: -17.750001907348633
    8. 'Code' → logprob: -18.875001907348633
    9. 'C' → logprob: -19.750001907348633
    10. 'Coefficient' → logprob: -19.875001907348633

Token 2877: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.004061540123075247
    2. 'from' → logprob: -5.754061698913574
    3. '(c' → logprob: -8.379061698913574
    4. 'From' → logprob: -8.504061698913574
    5. '(parts' → logprob: -8.879061698913574
    6. '(from' → logprob: -9.754061698913574
    7. '=' → logprob: -9.754061698913574
    8. ' =' → logprob: -10.504061698913574
    9. '.From' → logprob: -10.629061698913574
    10. '=c' → logprob: -10.879061698913574

Token 2878: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.6384961009025574
    2. 'Str' → logprob: -1.1384961605072021
    3. 'str' → logprob: -1.8884961605072021
    4. '_Str' → logprob: -8.263496398925781
    5. 's' → logprob: -11.638496398925781
    6. '_STR' → logprob: -11.763496398925781
    7. 'sys' → logprob: -12.013496398925781
    8. 'user' → logprob: -12.138496398925781
    9. '_s' → logprob: -12.263496398925781
    10. 'c' → logprob: -12.888496398925781

Token 2879: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00868903286755085
    2. 'parts' → logprob: -4.758688926696777
    3. '.parts' → logprob: -9.758688926696777
    4. '[' → logprob: -11.383688926696777
    5. ' parts' → logprob: -12.508688926696777
    6. 'Parts' → logprob: -14.633688926696777
    7. 'from' → logprob: -15.008688926696777
    8. '_parts' → logprob: -15.883688926696777
    9. '```' → logprob: -16.508689880371094
    10. '(coords' → logprob: -16.633689880371094

Token 2880: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37984123826026917
    2. '[' → logprob: -1.3798412084579468
    3. '1' → logprob: -4.254841327667236
    4. '_str' → logprob: -4.379841327667236
    5. '.strptime' → logprob: -4.504841327667236
    6. 'from' → logprob: -4.629841327667236
    7. 'Str' → logprob: -5.004841327667236
    8. '_from' → logprob: -6.504841327667236
    9. 'From' → logprob: -6.504841327667236
    10. '{' → logprob: -7.129841327667236

Token 2881: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05934244394302368
    2. '1' → logprob: -2.934342384338379
    3. '2' → logprob: -5.434342384338379
    4. '[' → logprob: -9.559342384338379
    5. 'parts' → logprob: -12.309342384338379
    6. '(' → logprob: -12.559342384338379
    7. ' ' → logprob: -12.934342384338379
    8. '3' → logprob: -13.184342384338379
    9. 'Parts' → logprob: -14.059342384338379
    10. '{' → logprob: -14.309342384338379

Token 2882: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3022647798061371
    2. ')
' → logprob: -2.05226469039917
    3. ',' → logprob: -2.30226469039917
    4. '),' → logprob: -3.67726469039917
    5. '               ' → logprob: -5.05226469039917
    6. '<|end|>' → logprob: -8.802265167236328
    7. ')
' → logprob: -9.302265167236328
    8. '           ' → logprob: -9.552265167236328
    9. ');' → logprob: -9.927265167236328
    10. '):
' → logprob: -10.052265167236328

Token 2883: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022690063633490354
    2. 'delay' → logprob: -9.125226974487305
    3. '```' → logprob: -9.875226974487305
    4. '              ' → logprob: -11.125226974487305
    5. '                ' → logprob: -11.625226974487305
    6. '                   ' → logprob: -11.875226974487305
    7. '           ' → logprob: -11.875226974487305
    8. '       ' → logprob: -12.125226974487305
    9. ' delay' → logprob: -12.250226974487305
    10. ',' → logprob: -12.375226974487305

Token 2884: ' delay' (ID: 13155)
  Prédit: 'delay'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delay' (adapté à ' delay') → logprob: -0.011194946244359016
    2. '               ' → logprob: -4.511195182800293
    3. ' delay' → logprob: -9.386195182800293
    4. '	delay' → logprob: -10.136195182800293
    5. 'd' → logprob: -11.511195182800293
    6. '                   ' → logprob: -12.636195182800293
    7. '           ' → logprob: -12.636195182800293
    8. 'del' → logprob: -13.386195182800293
    9. '              ' → logprob: -13.886195182800293
    10. '_delay' → logprob: -14.011195182800293

Token 2885: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030298464000225067
    2. ' =' → logprob: -3.5302984714508057
    3. '=int' → logprob: -7.530298233032227
    4. 'int' → logprob: -13.405298233032227
    5. '               ' → logprob: -13.530298233032227
    6. '=
' → logprob: -13.655298233032227
    7. '                               ' → logprob: -13.780298233032227
    8. '                   ' → logprob: -14.155298233032227
    9. '+=' → logprob: -14.405298233032227
    10. '       ' → logprob: -14.530298233032227

Token 2886: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.088346359931165e-07
    2. ' int' → logprob: -14.000000953674316
    3. '[int' → logprob: -18.875
    4. '=int' → logprob: -19.875
    5. '(int' → logprob: -20.125
    6. '<int' → logprob: -20.5
    7. '	int' → logprob: -21.875
    8. ':int' → logprob: -22.625
    9. ']int' → logprob: -23.75
    10. 'ints' → logprob: -24.25

Token 2887: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -5.848420551046729e-05
    2. 'parts' → logprob: -9.7500581741333
    3. '(' → logprob: -16.625059127807617
    4. ' parts' → logprob: -17.125059127807617
    5. '(part' → logprob: -19.125059127807617
    6. '(
' → logprob: -19.500059127807617
    7. ' (' → logprob: -20.250059127807617
    8. '_parts' → logprob: -21.750059127807617
    9. 'Parts' → logprob: -21.875059127807617
    10. 'part' → logprob: -22.250059127807617

Token 2888: '[' (ID: 58)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.01710284873843193
    2. 'parts' → logprob: -4.1421027183532715
    3. '[' → logprob: -7.0171027183532715
    4. ' parts' → logprob: -9.51710319519043
    5. ')' → logprob: -10.51710319519043
    6. ']' → logprob: -10.64210319519043
    7. '_parts' → logprob: -10.64210319519043
    8. '(tokens' → logprob: -12.14210319519043
    9. '               ' → logprob: -12.51710319519043
    10. '           ' → logprob: -12.89210319519043

Token 2889: '2' (ID: 17)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.00020807012333534658
    2. '2' → logprob: -9.000207901000977
    3. '(parts' → logprob: -9.875207901000977
    4. '1' → logprob: -10.500207901000977
    5. ' parts' → logprob: -12.500207901000977
    6. '0' → logprob: -14.250207901000977
    7. '           ' → logprob: -14.750207901000977
    8. '   ' → logprob: -15.375207901000977
    9. '               ' → logprob: -15.625207901000977
    10. 'pieces' → logprob: -16.125207901000977

Token 2890: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007826411165297031
    2. ')' → logprob: -4.882826328277588
    3. '               ' → logprob: -9.007826805114746
    4. ')
' → logprob: -9.382826805114746
    5. '           ' → logprob: -12.007826805114746
    6. ' )
' → logprob: -13.507826805114746
    7. '())
' → logprob: -13.632826805114746
    8. '       ' → logprob: -13.757826805114746
    9. '                   ' → logprob: -14.007826805114746
    10. '])
' → logprob: -14.132826805114746

Token 2891: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002545697148889303
    2. '           ' → logprob: -6.0025458335876465
    3. 'city' → logprob: -10.002545356750488
    4. '```' → logprob: -11.377545356750488
    5. '                   ' → logprob: -12.002545356750488
    6. ' city' → logprob: -12.752545356750488
    7. '              ' → logprob: -13.502545356750488
    8. 'self' → logprob: -14.127545356750488
    9. '       ' → logprob: -14.627545356750488
    10. '                       ' → logprob: -15.002545356750488

Token 2892: ' city' (ID: 5030)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6601871252059937
    2. 'city' (adapté à ' city') → logprob: -0.9101871252059937
    3. '           ' → logprob: -2.535187244415283
    4. ' city' → logprob: -6.535187244415283
    5. 'self' → logprob: -9.785186767578125
    6. '```' → logprob: -11.410186767578125
    7. '              ' → logprob: -11.910186767578125
    8. '                   ' → logprob: -12.035186767578125
    9. '   ' → logprob: -12.535186767578125
    10. '             ' → logprob: -13.285186767578125

Token 2893: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.5776860184123507e-06
    2. '           ' → logprob: -13.75000286102295
    3. 'map' → logprob: -14.37500286102295
    4. '1' → logprob: -16.125001907348633
    5. '_MAP' → logprob: -16.250001907348633
    6. '_city' → logprob: -16.250001907348633
    7. '               ' → logprob: -16.250001907348633
    8. '_maps' → logprob: -16.750001907348633
    9. 'emap' → logprob: -16.750001907348633
    10. 'Map' → logprob: -16.875001907348633

Token 2894: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.00011999329581158236
    2. '.' → logprob: -9.125120162963867
    3. '.setdefault' → logprob: -12.125120162963867
    4. '           ' → logprob: -13.375120162963867
    5. '   ' → logprob: -13.500120162963867
    6. '       ' → logprob: -14.375120162963867
    7. ' .' → logprob: -14.750120162963867
    8. '               ' → logprob: -14.875120162963867
    9. ').' → logprob: -15.250120162963867
    10. '                   ' → logprob: -15.500120162963867

Token 2895: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.0024762547109276056
    2. 'con' → logprob: -6.002476215362549
    3. ' congest' → logprob: -15.127476692199707
    4. 'Cong' → logprob: -15.502476692199707
    5. '_' → logprob: -16.62747573852539
    6. '_c' → logprob: -16.75247573852539
    7. '	con' → logprob: -17.62747573852539
    8. '```' → logprob: -17.87747573852539
    9. '(con' → logprob: -18.00247573852539
    10. '   ' → logprob: -18.12747573852539

Token 2896: 'gest' (ID: 6488)
  Prédit: 'gest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gest' → logprob: -1.5094070477061905e-05
    2. 'g' → logprob: -11.625015258789062
    3. ' congest' → logprob: -12.750015258789062
    4. 'ged' → logprob: -13.625015258789062
    5. 'gestion' → logprob: -14.500015258789062
    6. 'gr' → logprob: -14.625015258789062
    7. 'ges' → logprob: -15.625015258789062
    8. 'Cong' → logprob: -15.875015258789062
    9. '_' → logprob: -16.000015258789062
    10. 'j' → logprob: -16.250015258789062

Token 2897: 'ed' (ID: 295)
  Prédit: 'ested'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ested' → logprob: -0.006901024375110865
    2. 'est' → logprob: -5.506900787353516
    3. 'ed' → logprob: -7.131900787353516
    4. 'ated' → logprob: -7.381900787353516
    5. 'sted' → logprob: -7.506900787353516
    6. 'usted' → logprob: -8.756900787353516
    7. '(' → logprob: -9.256900787353516
    8. 'estion' → logprob: -9.506900787353516
    9. '   ' → logprob: -9.881900787353516
    10. 'ted' → logprob: -10.006900787353516

Token 2898: '_delay' (ID: 56589)
  Prédit: '_delay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_delay' → logprob: -2.0100624169572257e-05
    2. 'delay' → logprob: -10.875020027160645
    3. '_del' → logprob: -14.625020027160645
    4. '_DELAY' → logprob: -15.375020027160645
    5. 'Delay' → logprob: -15.875020027160645
    6. '_d' → logprob: -16.87502098083496
    7. '_de' → logprob: -17.00002098083496
    8. 'd' → logprob: -17.12502098083496
    9. 't' → logprob: -17.50002098083496
    10. ' delay' → logprob: -18.00002098083496

Token 2899: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1472419600977446e-06
    2. 'c' → logprob: -15.125000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '(co' → logprob: -15.750000953674316
    5. '(' → logprob: -15.875000953674316
    6. '(
' → logprob: -16.375001907348633
    7. '               ' → logprob: -16.375001907348633
    8. '(parts' → logprob: -17.125001907348633
    9. '((' → logprob: -17.250001907348633
    10. ' c' → logprob: -18.000001907348633

Token 2900: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3873710334300995
    2. '(c' → logprob: -1.1373710632324219
    3. 'c' → logprob: -7.762371063232422
    4. ' c' → logprob: -10.137371063232422
    5. '(' → logprob: -10.762371063232422
    6. '((' → logprob: -12.887371063232422
    7. ')c' → logprob: -13.012371063232422
    8. '[c' → logprob: -13.137371063232422
    9. '=c' → logprob: -13.762371063232422
    10. '(
' → logprob: -13.887371063232422

Token 2901: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.125000953674316
    4. 'c' → logprob: -16.500001907348633
    5. '(
' → logprob: -16.500001907348633
    6. ',c' → logprob: -17.625001907348633
    7. ',' → logprob: -18.000001907348633
    8. '(C' → logprob: -18.750001907348633
    9. ')c' → logprob: -19.000001907348633
    10. ')' → logprob: -19.625001907348633

Token 2902: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.15310683415737e-05
    2. ' c' → logprob: -10.750021934509277
    3. '(c' → logprob: -19.25002098083496
    4. '	c' → logprob: -21.25002098083496
    5. ')c' → logprob: -21.62502098083496
    6. '   ' → logprob: -22.37502098083496
    7. '_c' → logprob: -22.62502098083496
    8. '.c' → logprob: -23.62502098083496
    9. '
' → logprob: -23.62502098083496
    10. '           ' → logprob: -24.25002098083496

Token 2903: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008617766201496124
    2. '2' → logprob: -4.758617877960205
    3. '(c' → logprob: -13.633617401123047
    4. 'c' → logprob: -14.133617401123047
    5. 'from' → logprob: -15.258617401123047
    6. ',c' → logprob: -16.133617401123047
    7. '[c' → logprob: -16.258617401123047
    8. 'ertain' → logprob: -16.571117401123047
    9. ')' → logprob: -16.571117401123047
    10. ' c' → logprob: -16.696117401123047

Token 2904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20661087334156036
    2. '(delay' → logprob: -1.706610918045044
    3. 'delay' → logprob: -5.331610679626465
    4. '               ' → logprob: -8.831610679626465
    5. ' delay' → logprob: -9.456610679626465
    6. ' ,' → logprob: -10.081610679626465
    7. ' (' → logprob: -10.456610679626465
    8. '(' → logprob: -10.956610679626465
    9. '                   ' → logprob: -10.956610679626465
    10. ',
' → logprob: -12.956610679626465

Token 2905: ' delay' (ID: 13155)
  Prédit: 'delay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delay' → logprob: -5.88418151892256e-05
    2. ' delay' → logprob: -9.750059127807617
    3. '	delay' → logprob: -15.500059127807617
    4. '(delay' → logprob: -15.750059127807617
    5. '                   ' → logprob: -17.000059127807617
    6. '
' → logprob: -17.125059127807617
    7. '           ' → logprob: -17.375059127807617
    8. '               ' → logprob: -17.500059127807617
    9. '   ' → logprob: -17.750059127807617
    10. '
' → logprob: -18.500059127807617

Token 2906: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2607001066207886
    2. '           ' → logprob: -2.260700225830078
    3. '<|end|>' → logprob: -2.260700225830078
    4. ')' → logprob: -4.385700225830078
    5. '<|end|>' → logprob: -5.635700225830078
    6. ')
' → logprob: -5.760700225830078
    7. '       ' → logprob: -6.760700225830078
    8. '
' → logprob: -9.135700225830078
    9. '

' → logprob: -9.385700225830078
    10. '            
' → logprob: -9.510700225830078

Token 2907: '           ' (ID: 352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4750823974609375
    2. '           ' → logprob: -0.9750823974609375
    3. 'origin' → logprob: -8.100082397460938
    4. '```' → logprob: -8.350082397460938
    5. 'from' → logprob: -8.475082397460938
    6. ' start' → logprob: -9.850082397460938
    7. '#' → logprob: -10.100082397460938
    8. '``' → logprob: -10.475082397460938
    9. 'line' → logprob: -10.975082397460938
    10. '(start' → logprob: -11.100082397460938

Token 2908: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.027261508628726006
    2. '           ' → logprob: -3.77726149559021
    3. 'parts' → logprob: -5.902261734008789
    4. 'origin' → logprob: -7.402261734008789
    5. 'from' → logprob: -7.902261734008789
    6. '#' (adapté à ' #') → logprob: -9.527261734008789
    7. 'source' → logprob: -9.902261734008789
    8. 'src' → logprob: -10.152261734008789
    9. 'line' → logprob: -10.402261734008789
    10. 'part' → logprob: -10.777261734008789

Token 2909: ' Start' (ID: 7972)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.007348447106778622
    2. '           ' → logprob: -5.382348537445068
    3. 'parts' → logprob: -6.632348537445068
    4. 'starts' → logprob: -7.507348537445068
    5. 'origin' → logprob: -8.38234806060791
    6. 'line' → logprob: -8.75734806060791
    7. 'src' → logprob: -9.38234806060791
    8. 'source' → logprob: -9.50734806060791
    9. '#' → logprob: -9.50734806060791
    10. ' start' → logprob: -10.13234806060791

Token 2910: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19647116959095
    2. 'parts' → logprob: -2.8214712142944336
    3. 'start' → logprob: -2.9464712142944336
    4. ',' → logprob: -3.6964712142944336
    5. 'line' → logprob: -3.6964712142944336
    6. '_line' → logprob: -5.571471214294434
    7. 'and' → logprob: -6.071471214294434
    8. 'coords' → logprob: -6.196471214294434
    9. ' parts' → logprob: -6.946471214294434
    10. '_start' → logprob: -6.946471214294434

Token 2911: ' destination' (ID: 13330)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.42355528473854065
    2. 'destination' → logprob: -1.1735552549362183
    3. 'dest' → logprob: -3.423555374145508
    4. ' destination' → logprob: -5.923555374145508
    5. ' end' → logprob: -7.423555374145508
    6. 'Destination' → logprob: -9.548555374145508
    7. '           ' → logprob: -10.048555374145508
    8. ' dest' → logprob: -10.548555374145508
    9. 'goal' → logprob: -12.423555374145508
    10. 'End' → logprob: -13.423555374145508

Token 2912: ' coordinates' (ID: 27933)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4712347388267517
    2. 'parts' → logprob: -1.4712347984313965
    3. 'start' → logprob: -1.9712347984313965
    4. 'line' → logprob: -5.4712347984313965
    5. ' parts' → logprob: -6.4712347984313965
    6. '       ' → logprob: -8.471234321594238
    7. '[start' → logprob: -8.846234321594238
    8. '(parts' → logprob: -8.846234321594238
    9. 'part' → logprob: -9.596234321594238
    10. ' line' → logprob: -9.596234321594238

Token 2913: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010090718045830727
    2. 'start' → logprob: -4.6350908279418945
    3. 'parts' → logprob: -8.260090827941895
    4. '[start' → logprob: -10.260090827941895
    5. '       ' → logprob: -11.260090827941895
    6. ' start' → logprob: -11.510090827941895
    7. ' parts' → logprob: -11.885090827941895
    8. '(start' → logprob: -13.260090827941895
    9. '
' → logprob: -13.760090827941895
    10. '          ' → logprob: -14.010090827941895

Token 2914: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2016327977180481
    2. 'start' → logprob: -1.7016327381134033
    3. 'line' → logprob: -9.576632499694824
    4. 'parts' → logprob: -9.951632499694824
    5. '[start' → logprob: -10.201632499694824
    6. ' start' → logprob: -10.326632499694824
    7. '(start' → logprob: -11.951632499694824
    8. '       ' → logprob: -12.326632499694824
    9. 'from' → logprob: -12.451632499694824
    10. '```' → logprob: -12.451632499694824

Token 2915: ' sd' (ID: 38119)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.11158697307109833
    2. 'parts' → logprob: -2.3615870475769043
    3. '           ' → logprob: -4.611587047576904
    4. 'line' → logprob: -6.736587047576904
    5. 'starts' → logprob: -9.861586570739746
    6. ' parts' → logprob: -10.111586570739746
    7. ' start' → logprob: -10.861586570739746
    8. 'part' → logprob: -10.861586570739746
    9. 'coords' → logprob: -11.611586570739746
    10. '[start' → logprob: -11.736586570739746

Token 2916: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.295388400554657
    2. ' =' → logprob: -1.4203884601593018
    3. '_parts' → logprob: -4.795388221740723
    4. '=' → logprob: -5.545388221740723
    5. 'line' → logprob: -7.295388221740723
    6. '_coords' → logprob: -7.670388221740723
    7. 's' → logprob: -8.170388221740723
    8. '=line' → logprob: -8.170388221740723
    9. 'parts' → logprob: -9.920388221740723
    10. '1' → logprob: -9.920388221740723

Token 2917: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048690926283597946
    2. ' input' → logprob: -3.0486910343170166
    3. 'Coordinate' → logprob: -9.298690795898438
    4. '           ' → logprob: -12.798690795898438
    5. ' Coordinate' → logprob: -13.048690795898438
    6. 'Input' → logprob: -13.173690795898438
    7. 'list' → logprob: -13.423690795898438
    8. '(input' → logprob: -13.673690795898438
    9. '[input' → logprob: -13.923690795898438
    10. '   ' → logprob: -14.923690795898438

Token 2918: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0960940346121788
    2. ' =' → logprob: -3.0960941314697266
    3. '_coords' → logprob: -3.9710941314697266
    4. '_parts' → logprob: -4.846094131469727
    5. '=' → logprob: -5.346094131469727
    6. '_start' → logprob: -5.471094131469727
    7. 'line' → logprob: -6.096094131469727
    8. '=line' → logprob: -6.596094131469727
    9. 's' → logprob: -7.096094131469727
    10. 'start' → logprob: -7.221094131469727

Token 2919: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.018207067623734474
    2. 'idx' → logprob: -4.01820707321167
    3. '_idx' → logprob: -11.143206596374512
    4. ' idx' → logprob: -11.268206596374512
    5. '(idx' → logprob: -12.018206596374512
    6. '=' → logprob: -12.268206596374512
    7. '	idx' → logprob: -12.393206596374512
    8. ' =' → logprob: -12.768206596374512
    9. '       ' → logprob: -12.768206596374512
    10. '   ' → logprob: -13.018206596374512

Token 2920: '].' (ID: 1651)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.02828529104590416
    2. ' =' → logprob: -4.153285503387451
    3. 'idx' → logprob: -5.778285503387451
    4. '=' → logprob: -5.903285503387451
    5. '[line' → logprob: -6.903285503387451
    6. '_parts' → logprob: -7.403285503387451
    7. '(idx' → logprob: -7.528285503387451
    8. 'parts' → logprob: -7.778285503387451
    9. '_idx' → logprob: -8.028285026550293
    10. '           ' → logprob: -8.153285026550293

Token 2921: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00010425841173855588
    2. 'split' → logprob: -9.375103950500488
    3. 'rstrip' → logprob: -11.125103950500488
    4. 'idx' → logprob: -12.750103950500488
    5. '_strip' → logprob: -15.000103950500488
    6. '=' → logprob: -15.000103950500488
    7. 'Strip' → logprob: -15.750103950500488
    8. ' strip' → logprob: -15.875103950500488
    9. '
' → logprob: -16.125104904174805
    10. 'skip' → logprob: -16.125104904174805

Token 2922: '().' (ID: 1454)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7321308851242065
    2. '           ' → logprob: -0.9821308851242065
    3. '=' → logprob: -3.482131004333496
    4. '.split' → logprob: -3.482131004333496
    5. '().' → logprob: -3.607131004333496
    6. '()
' → logprob: -3.732131004333496
    7. '_parts' → logprob: -4.857131004333496
    8. '=line' → logprob: -5.357131004333496
    9. '(parts' → logprob: -5.732131004333496
    10. '[idx' → logprob: -6.232131004333496

Token 2923: 'split' (ID: 13627)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3228698670864105
    2. 'idx' → logprob: -1.322869896888733
    3. 'parts' → logprob: -5.697869777679443
    4. 'if' → logprob: -5.822869777679443
    5. 's' → logprob: -6.822869777679443
    6. 'src' → logprob: -7.572869777679443
    7. 'from' → logprob: -7.572869777679443
    8. 'sd' → logprob: -7.697869777679443
    9. 'c' → logprob: -8.822870254516602
    10. 'split' → logprob: -8.947870254516602

Token 2924: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17681753635406494
    2. 'start' → logprob: -2.0518174171447754
    3. '[start' → logprob: -3.8018174171447754
    4. 's' → logprob: -5.051817417144775
    5. 'c' → logprob: -6.426817417144775
    6. '[' → logprob: -6.676817417144775
    7. '_start' → logprob: -7.426817417144775
    8. '(start' → logprob: -8.176817893981934
    9. ' start' → logprob: -8.301817893981934
    10. ',' → logprob: -9.176817893981934

Token 2925: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16791987419128418
    2. 'idx' → logprob: -1.9179198741912842
    3. 'start' → logprob: -4.917920112609863
    4. '```' → logprob: -8.417920112609863
    5. ' idx' → logprob: -9.917920112609863
    6. 'c' → logprob: -11.167920112609863
    7. '          ' → logprob: -11.292920112609863
    8. '[idx' → logprob: -11.667920112609863
    9. '[start' → logprob: -11.792920112609863
    10. '``' → logprob: -12.042920112609863

Token 2926: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.335298091173172
    2. 'start' → logprob: -1.3352980613708496
    3. '           ' → logprob: -3.8352980613708496
    4. 's' → logprob: -8.960298538208008
    5. 'c' → logprob: -10.335298538208008
    6. ' idx' → logprob: -11.085298538208008
    7. 'sd' → logprob: -11.710298538208008
    8. 'index' → logprob: -12.210298538208008
    9. '          ' → logprob: -12.960298538208008
    10. ' start' → logprob: -13.335298538208008

Token 2927: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0021363403648138046
    2. ' +=' → logprob: -6.25213623046875
    3. ']+=' → logprob: -9.12713623046875
    4. '           ' → logprob: -10.37713623046875
    5. '```' → logprob: -10.62713623046875
    6. '=' → logprob: -10.87713623046875
    7. '+' → logprob: -12.00213623046875
    8. '.append' → logprob: -12.25213623046875
    9. '   ' → logprob: -12.50213623046875
    10. '[idx' → logprob: -12.87713623046875

Token 2928: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01105159055441618
    2. '1' → logprob: -4.511051654815674
    3. ' ' → logprob: -13.636051177978516
    4. '[' → logprob: -13.761051177978516
    5. '   ' → logprob: -14.261051177978516
    6. '
' → logprob: -15.261051177978516
    7. '0' → logprob: -15.261051177978516
    8. '```' → logprob: -15.761051177978516
    9. '           ' → logprob: -16.761051177978516
    10. '       ' → logprob: -17.386051177978516

Token 2929: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.881560041918419e-05
    2. '1' → logprob: -10.250039100646973
    3. ' ' → logprob: -12.875039100646973
    4. '   ' → logprob: -15.000039100646973
    5. '[' → logprob: -15.625039100646973
    6. '```' → logprob: -15.750039100646973
    7. '
' → logprob: -16.625038146972656
    8. '3' → logprob: -17.375038146972656
    9. '0' → logprob: -17.875038146972656
    10. 's' → logprob: -18.250038146972656

Token 2930: '
' (ID: 198)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1269664317369461
    2. '           ' → logprob: -2.1269664764404297
    3. ' start' → logprob: -10.62696647644043
    4. 's' → logprob: -11.75196647644043
    5. 'self' → logprob: -13.00196647644043
    6. '[start' → logprob: -13.62696647644043
    7. '       ' → logprob: -13.87696647644043
    8. '```' → logprob: -14.12696647644043
    9. '(start' → logprob: -15.12696647644043
    10. '_start' → logprob: -15.37696647644043

Token 2931: '           ' (ID: 352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.005241702310740948
    2. '           ' → logprob: -5.255241870880127
    3. ' start' → logprob: -12.630241394042969
    4. 's' → logprob: -12.880241394042969
    5. '```' → logprob: -13.505241394042969
    6. '[start' → logprob: -15.255241394042969
    7. 'self' → logprob: -16.00524139404297
    8. '(start' → logprob: -16.13024139404297
    9. '       ' → logprob: -16.50524139404297
    10. '``' → logprob: -16.75524139404297

Token 2932: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -3.380904672667384e-05
    2. '           ' → logprob: -10.500033378601074
    3. 'self' → logprob: -12.125033378601074
    4. ' start' → logprob: -14.000033378601074
    5. 's' → logprob: -17.50003433227539
    6. '```' → logprob: -18.37503433227539
    7. '[start' → logprob: -19.00003433227539
    8. 'Start' → logprob: -19.25003433227539
    9. '(start' → logprob: -19.75003433227539
    10. '_start' → logprob: -19.87503433227539

Token 2933: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1306704580783844
    2. ' =' → logprob: -2.1306705474853516
    3. '_coord' → logprob: -5.880670547485352
    4. ',' → logprob: -7.130670547485352
    5. '_coordinate' → logprob: -9.130670547485352
    6. '_coords' → logprob: -11.255670547485352
    7. 'coord' → logprob: -12.005670547485352
    8. '_co' → logprob: -13.130670547485352
    9. 'Coordinate' → logprob: -13.255670547485352
    10. '_c' → logprob: -13.505670547485352

Token 2934: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -5.512236498361744e-07
    2. ' Coordinate' → logprob: -14.500000953674316
    3. 'Coordinates' → logprob: -18.25
    4. '_coordinate' → logprob: -18.375
    5. 'Coord' → logprob: -20.75
    6. 'Coordinator' → logprob: -20.875
    7. 'coordinate' → logprob: -21.0
    8. '   ' → logprob: -21.125
    9. '           ' → logprob: -22.25
    10. ' coordinate' → logprob: -23.0

Token 2935: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.201519176363945
    2. 'from' → logprob: -1.7015191316604614
    3. '.' → logprob: -9.451519012451172
    4. '(sd' → logprob: -12.076519012451172
    5. '#from' → logprob: -12.201519012451172
    6. '.sd' → logprob: -12.451519012451172
    7. 'From' → logprob: -12.451519012451172
    8. '.strptime' → logprob: -13.201519012451172
    9. ' =' → logprob: -13.451519012451172
    10. 'sd' → logprob: -13.576519012451172

Token 2936: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.008054904639720917
    2. 'str' → logprob: -4.883054733276367
    3. 'Str' → logprob: -7.758054733276367
    4. 's' → logprob: -11.008054733276367
    5. '_s' → logprob: -12.758054733276367
    6. 'st' → logprob: -14.508054733276367
    7. 'sd' → logprob: -14.758054733276367
    8. 'user' → logprob: -15.633054733276367
    9. '_STR' → logprob: -15.633054733276367
    10. '_st' → logprob: -16.633054733276367

Token 2937: '(sd' (ID: 127123)
  Prédit: '(sd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sd' → logprob: -2.7610454708337784e-05
    2. 'sd' → logprob: -10.500027656555176
    3. '(
' → logprob: -18.25002670288086
    4. '_sd' → logprob: -18.75002670288086
    5. ' sd' → logprob: -19.75002670288086
    6. '(' → logprob: -20.00002670288086
    7. '
' → logprob: -20.37502670288086
    8. '.sd' → logprob: -20.37502670288086
    9. 'SD' → logprob: -20.75002670288086
    10. '(sa' → logprob: -21.00002670288086

Token 2938: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015431294741574675
    2. '(' → logprob: -9.125154495239258
    3. 's' → logprob: -10.750154495239258
    4. 'sd' → logprob: -10.875154495239258
    5. '0' → logprob: -13.125154495239258
    6. '(sd' → logprob: -13.750154495239258
    7. '()[' → logprob: -14.250154495239258
    8. '[
' → logprob: -14.875154495239258
    9. '```' → logprob: -16.000154495239258
    10. '([' → logprob: -16.250154495239258

Token 2939: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001307142956648022
    2. '[' → logprob: -9.000130653381348
    3. 'sd' → logprob: -12.500130653381348
    4. '(' → logprob: -12.875130653381348
    5. ' ' → logprob: -14.750130653381348
    6. ')' → logprob: -15.375130653381348
    7. '1' → logprob: -15.875130653381348
    8. '
' → logprob: -16.750131607055664
    9. 's' → logprob: -16.750131607055664
    10. '(sd' → logprob: -17.250131607055664

Token 2940: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06198079511523247
    2. ')' → logprob: -2.811980724334717
    3. ')
' → logprob: -11.436981201171875
    4. '),' → logprob: -14.061981201171875
    5. '           ' → logprob: -14.561981201171875
    6. ' )
' → logprob: -15.061981201171875
    7. ')

' → logprob: -15.561981201171875
    8. '       ' → logprob: -15.686981201171875
    9. ');' → logprob: -15.686981201171875
    10. ')#' → logprob: -16.561981201171875

Token 2941: '           ' (ID: 352)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.0041393106803298
    2. 'dest' → logprob: -5.754139423370361
    3. 'end' → logprob: -7.004139423370361
    4. ' destination' → logprob: -10.004138946533203
    5. '       ' → logprob: -12.129138946533203
    6. '           ' → logprob: -14.004138946533203
    7. 'finish' → logprob: -14.629138946533203
    8. 'dst' → logprob: -14.629138946533203
    9. 'stop' → logprob: -15.129138946533203
    10. '```' → logprob: -15.254138946533203

Token 2942: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' (adapté à ' destination') → logprob: -2.2723104848410003e-05
    2. 'dest' → logprob: -10.750022888183594
    3. 'end' → logprob: -14.250022888183594
    4. ' destination' → logprob: -14.750022888183594
    5. '           ' → logprob: -15.750022888183594
    6. '       ' → logprob: -18.500022888183594
    7. 'dst' → logprob: -20.000022888183594
    8. 'finish' → logprob: -20.500022888183594
    9. 'stop' → logprob: -21.000022888183594
    10. '(destination' → logprob: -21.375022888183594

Token 2943: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '=
' → logprob: -17.313261032104492
    4. ' ' → logprob: -19.063261032104492
    5. ' =
' → logprob: -19.063261032104492
    6. ',' → logprob: -19.313261032104492
    7. ')' → logprob: -19.438261032104492
    8. '<|end|>' → logprob: -19.563261032104492
    9. '＝' → logprob: -20.313261032104492
    10. '```' → logprob: -21.313261032104492

Token 2944: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -1.0280383548888494e-06
    2. ' Coordinate' → logprob: -14.000000953674316
    3. '_coordinate' → logprob: -16.500001907348633
    4. 'Coordinates' → logprob: -17.250001907348633
    5. 'Coordinator' → logprob: -18.750001907348633
    6. 'coordinate' → logprob: -19.875001907348633
    7. 'Coord' → logprob: -20.000001907348633
    8. '           ' → logprob: -20.250001907348633
    9. '   ' → logprob: -21.125001907348633
    10. '(Co' → logprob: -21.750001907348633

Token 2945: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.0002655079588294029
    2. 'from' → logprob: -8.250265121459961
    3. '.' → logprob: -13.500265121459961
    4. 'Coordinate' → logprob: -13.625265121459961
    5. '#from' → logprob: -14.125265121459961
    6. '[from' → logprob: -15.000265121459961
    7. '.From' → logprob: -15.125265121459961
    8. 'From' → logprob: -15.750265121459961
    9. 'Coordinates' → logprob: -16.12526512145996
    10. 'FROM' → logprob: -17.75026512145996

Token 2946: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.10634273290634155
    2. 'Str' → logprob: -2.3563427925109863
    3. 'str' → logprob: -5.106342792510986
    4. 'Coordinate' → logprob: -9.856342315673828
    5. '_Str' → logprob: -12.231342315673828
    6. 'String' → logprob: -14.731342315673828
    7. '
' → logprob: -15.356342315673828
    8. '_STR' → logprob: -15.356342315673828
    9. 's' → logprob: -15.731342315673828
    10. 'Coordinates' → logprob: -16.356342315673828

Token 2947: '(sd' (ID: 127123)
  Prédit: '(sd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sd' → logprob: -0.16022686660289764
    2. 'sd' → logprob: -1.910226821899414
    3. ' sd' → logprob: -14.535226821899414
    4. 's' → logprob: -14.660226821899414
    5. '(
' → logprob: -15.160226821899414
    6. '
' → logprob: -15.410226821899414
    7. 'ssd' → logprob: -15.535226821899414
    8. '(' → logprob: -15.660226821899414
    9. '(sr' → logprob: -15.785226821899414
    10. '_sd' → logprob: -15.910226821899414

Token 2948: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008145377039909363
    2. 'sd' → logprob: -4.883145332336426
    3. '(sd' → logprob: -7.633145332336426
    4. '(' → logprob: -10.383145332336426
    5. 's' → logprob: -11.008145332336426
    6. '[-' → logprob: -13.383145332336426
    7. ' sd' → logprob: -13.883145332336426
    8. '([' → logprob: -14.008145332336426
    9. 'd' → logprob: -14.008145332336426
    10. 'str' → logprob: -14.258145332336426

Token 2949: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3886702358722687
    2. 'sd' → logprob: -1.1386702060699463
    3. '[' → logprob: -6.763670444488525
    4. '0' → logprob: -7.888670444488525
    5. '(sd' → logprob: -9.013669967651367
    6. ' sd' → logprob: -9.763669967651367
    7. '_sd' → logprob: -11.013669967651367
    8. 'SD' → logprob: -11.138669967651367
    9. '2' → logprob: -11.513669967651367
    10. 'Sd' → logprob: -11.638669967651367

Token 2950: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00976801197975874
    2. ')
' → logprob: -4.634768009185791
    3. ')

' → logprob: -12.13476848602295
    4. '           ' → logprob: -12.88476848602295
    5. '       ' → logprob: -13.00976848602295
    6. ')
' → logprob: -14.25976848602295
    7. '])' → logprob: -15.13476848602295
    8. ']' → logprob: -15.38476848602295
    9. '")' → logprob: -16.134767532348633
    10. ' )' → logprob: -16.384767532348633

Token 2951: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2530473470687866
    2. 'navigation' → logprob: -2.003047466278076
    3. 'car' → logprob: -3.378047466278076
    4. 'nav' → logprob: -3.628047466278076
    5. 'cn' → logprob: -4.503047466278076
    6. 'system' → logprob: -5.128047466278076
    7. '           ' → logprob: -5.503047466278076
    8. ' navigation' → logprob: -5.628047466278076
    9. 'c' → logprob: -6.503047466278076
    10. '```' → logprob: -7.628047466278076

Token 2952: ' nav' (ID: 10516)
  Prédit: 'navigation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'navigation' → logprob: -0.7554243803024292
    2. 'nav' (adapté à ' nav') → logprob: -1.0054243803024292
    3. 'car' → logprob: -2.3804244995117188
    4. 'c' → logprob: -2.8804244995117188
    5. '           ' → logprob: -4.505424499511719
    6. 'navigator' → logprob: -6.255424499511719
    7. 'system' → logprob: -6.755424499511719
    8. 'cn' → logprob: -7.130424499511719
    9. 'n' → logprob: -8.505424499511719
    10. ' navigation' → logprob: -8.630424499511719

Token 2953: ' =' (ID: 314)
  Prédit: '_system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -0.3443547487258911
    2. 'igation' → logprob: -1.3443547487258911
    3. ' =' → logprob: -3.5943546295166016
    4. 'system' → logprob: -6.344354629516602
    5. 'agation' → logprob: -7.094354629516602
    6. '=' → logprob: -8.344354629516602
    7. 'IGATION' → logprob: -8.719354629516602
    8. ' system' → logprob: -10.344354629516602
    9. '_sys' → logprob: -10.344354629516602
    10. 's' → logprob: -11.219354629516602

Token 2954: ' Car' (ID: 4004)
  Prédit: 'Car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Car' → logprob: -0.006715370807796717
    2. ' Car' → logprob: -5.006715297698975
    3. '<Car' → logprob: -17.631715774536133
    4. '(Car' → logprob: -18.256715774536133
    5. '   ' → logprob: -19.256715774536133
    6. '           ' → logprob: -19.756715774536133
    7. '_car' → logprob: -20.131715774536133
    8. '.Car' → logprob: -20.256715774536133
    9. 'car' → logprob: -20.756715774536133
    10. '-Car' → logprob: -21.131715774536133

Token 2955: 'Navigation' (ID: 20916)
  Prédit: 'Navigation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Navigation' → logprob: -7.822646693966817e-06
    2. '_navigation' → logprob: -12.375007629394531
    3. ' Navigation' → logprob: -13.000007629394531
    4. '.Navigation' → logprob: -14.250007629394531
    5. 'navigation' → logprob: -14.875007629394531
    6. 'avigation' → logprob: -15.500007629394531
    7. ' navigation' → logprob: -17.25000762939453
    8. '-navigation' → logprob: -18.12500762939453
    9. '
' → logprob: -18.37500762939453
    10. 'INavigation' → logprob: -18.62500762939453

Token 2956: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -6.704273118884885e-07
    2. 'system' → logprob: -15.000000953674316
    3. ' System' → logprob: -15.875000953674316
    4. 'ystem' → logprob: -16.0
    5. '_system' → logprob: -17.5
    6. '
' → logprob: -18.125
    7. '           ' → logprob: -18.375
    8. '       ' → logprob: -18.625
    9. 'Systems' → logprob: -19.0
    10. 'ssystem' → logprob: -19.125

Token 2957: '(city' (ID: 84604)
  Prédit: '(city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(city' → logprob: -9.031157969729975e-05
    2. '(self' → logprob: -10.125090599060059
    3. '           ' → logprob: -10.375090599060059
    4. 'city' → logprob: -11.750090599060059
    5. '(' → logprob: -12.250090599060059
    6. '(
' → logprob: -12.875090599060059
    7. '(C' → logprob: -13.625090599060059
    8. 'self' → logprob: -14.500090599060059
    9. '(car' → logprob: -14.625090599060059
    10. '       ' → logprob: -15.125090599060059

Token 2958: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.004932851064950228
    2. 'Map' → logprob: -5.379932880401611
    3. 'map' → logprob: -8.504932403564453
    4. 'city' → logprob: -10.254932403564453
    5. '       ' → logprob: -10.879932403564453
    6. '           ' → logprob: -10.879932403564453
    7. '(city' → logprob: -11.754932403564453
    8. '   ' → logprob: -11.879932403564453
    9. '.Map' → logprob: -12.129932403564453
    10. '_Map' → logprob: -12.254932403564453

Token 2959: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032116140937432647
    2. ',start' → logprob: -8.500321388244629
    3. '           ' → logprob: -9.250321388244629
    4. '(start' → logprob: -11.125321388244629
    5. ' ,' → logprob: -13.000321388244629
    6. ',
' → logprob: -13.125321388244629
    7. 'start' → logprob: -13.625321388244629
    8. '(' → logprob: -15.250321388244629
    9. '[start' → logprob: -15.500321388244629
    10. ')' → logprob: -15.500321388244629

Token 2960: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -5.848420551046729e-05
    2. ' start' → logprob: -9.7500581741333
    3. '           ' → logprob: -16.625059127807617
    4. '               ' → logprob: -20.750059127807617
    5. '[start' → logprob: -21.625059127807617
    6. '	start' → logprob: -21.875059127807617
    7. '(start' → logprob: -22.250059127807617
    8. 'end' → logprob: -22.375059127807617
    9. '
' → logprob: -22.500059127807617
    10. '   ' → logprob: -22.750059127807617

Token 2961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009168167016468942
    2. ',d' → logprob: -7.000916957855225
    3. ',
' → logprob: -12.625916481018066
    4. '           ' → logprob: -13.875916481018066
    5. ' ,' → logprob: -14.000916481018066
    6. 'destination' → logprob: -15.375916481018066
    7. '(destination' → logprob: -17.625917434692383
    8. '
' → logprob: -18.000917434692383
    9. '```' → logprob: -18.750917434692383
    10. ',

' → logprob: -19.000917434692383

Token 2962: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -1.0206720617134124e-05
    2. ' destination' → logprob: -11.50001049041748
    3. '(destination' → logprob: -19.125009536743164
    4. '
' → logprob: -19.750009536743164
    5. '   ' → logprob: -19.750009536743164
    6. '           ' → logprob: -20.250009536743164
    7. ' ' → logprob: -21.625009536743164
    8. '       ' → logprob: -21.875009536743164
    9. '                   ' → logprob: -22.500009536743164
    10. '.destination' → logprob: -22.500009536743164

Token 2963: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008188053965568542
    2. 'result' → logprob: -5.008188247680664
    3. '       ' → logprob: -7.633188247680664
    4. ')
' → logprob: -7.883188247680664
    5. '
' → logprob: -8.008188247680664
    6. ')' → logprob: -8.883188247680664
    7. 'print' → logprob: -11.008188247680664
    8. ' result' → logprob: -11.383188247680664
    9. ',' → logprob: -11.633188247680664
    10. 'time' → logprob: -11.758188247680664

Token 2964: '           ' (ID: 352)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6036496162414551
    2. '           ' → logprob: -0.8536496162414551
    3. '       ' → logprob: -4.353649616241455
    4. 'print' → logprob: -4.478649616241455
    5. 'output' → logprob: -6.978649616241455
    6. '```' → logprob: -7.353649616241455
    7. 'answer' → logprob: -7.478649616241455
    8. 'res' → logprob: -7.728649616241455
    9. 'time' → logprob: -8.978649139404297
    10. ' result' → logprob: -9.103649139404297

Token 2965: ' shortest' (ID: 70564)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3426937460899353
    2. 'self' → logprob: -1.59269380569458
    3. 'res' → logprob: -3.09269380569458
    4. 'time' → logprob: -3.34269380569458
    5. '           ' → logprob: -5.84269380569458
    6. 'answer' → logprob: -5.84269380569458
    7. 't' → logprob: -9.217693328857422
    8. 'output' → logprob: -10.217693328857422
    9. 'ans' → logprob: -10.467693328857422
    10. '```' → logprob: -10.592693328857422

Token 2966: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.7610454708337784e-05
    2. 'time' → logprob: -11.875027656555176
    3. '_path' → logprob: -12.000027656555176
    4. '_' → logprob: -12.125027656555176
    5. '=_' → logprob: -13.375027656555176
    6. '_distance' → logprob: -13.750027656555176
    7. 'Time' → logprob: -13.750027656555176
    8. '_result' → logprob: -13.875027656555176
    9. '_t' → logprob: -14.250027656555176
    10. '`' → logprob: -14.375027656555176

Token 2967: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4757844805717468
    2. ' =' → logprob: -0.9757844805717468
    3. '()' → logprob: -7.3507843017578125
    4. '       ' → logprob: -7.4757843017578125
    5. '   ' → logprob: -9.600784301757812
    6. '=_' → logprob: -9.600784301757812
    7. ')' → logprob: -9.725784301757812
    8. '           ' → logprob: -9.725784301757812
    9. '_' → logprob: -10.475784301757812
    10. '        ' → logprob: -10.725784301757812

Token 2968: ' nav' (ID: 10516)
  Prédit: 'nav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nav' → logprob: -0.014164448715746403
    2. ' nav' → logprob: -4.264164447784424
    3. '<nav' → logprob: -15.514164924621582
    4. 'short' → logprob: -15.889164924621582
    5. '(nav' → logprob: -15.889164924621582
    6. '           ' → logprob: -16.264163970947266
    7. '_nav' → logprob: -16.389163970947266
    8. 'Nav' → logprob: -16.639163970947266
    9. 'self' → logprob: -17.764163970947266
    10. 'n' → logprob: -18.139163970947266

Token 2969: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.0025357098784297705
    2. 'compute' → logprob: -6.002535820007324
    3. '.' → logprob: -10.752535820007324
    4. '   ' → logprob: -11.377535820007324
    5. '_compute' → logprob: -11.752535820007324
    6. '_.' → logprob: -12.377535820007324
    7. '_short' → logprob: -12.377535820007324
    8. '.calculate' → logprob: -12.752535820007324
    9. '       ' → logprob: -13.127535820007324
    10. '._' → logprob: -14.002535820007324

Token 2970: '_short' (ID: 40379)
  Prédit: '_short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -9.372294698550832e-06
    2. 'short' → logprob: -11.625009536743164
    3. 'Shortest' → logprob: -15.750009536743164
    4. '```' → logprob: -16.375009536743164
    5. 'Short' → logprob: -17.125009536743164
    6. '(short' → logprob: -17.750009536743164
    7. '_sh' → logprob: -18.375009536743164
    8. '_SHORT' → logprob: -18.500009536743164
    9. '_' → logprob: -18.500009536743164
    10. '\' → logprob: -18.625009536743164

Token 2971: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.005579386837780476
    2. 'st' → logprob: -5.755579471588135
    3. '_time' → logprob: -6.255579471588135
    4. 'gest' → logprob: -8.755578994750977
    5. '_short' → logprob: -9.005578994750977
    6. 'time' → logprob: -9.630578994750977
    7. 'test' → logprob: -10.505578994750977
    8. '_st' → logprob: -10.880578994750977
    9. 't' → logprob: -11.005578994750977
    10. 'ted' → logprob: -11.255578994750977

Token 2972: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5048530030981055e-06
    2. 'time' → logprob: -13.625001907348633
    3. 'ime' → logprob: -16.000001907348633
    4. 'Time' → logprob: -16.500001907348633
    5. '   ' → logprob: -19.500001907348633
    6. '
' → logprob: -19.875001907348633
    7. '```' → logprob: -20.375001907348633
    8. '"time' → logprob: -20.750001907348633
    9. '\' → logprob: -20.875001907348633
    10. 'int' → logprob: -20.875001907348633

Token 2973: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02122054621577263
    2. 'self' → logprob: -3.8962204456329346
    3. '
' → logprob: -7.396220684051514
    4. ' self' → logprob: -10.646220207214355
    5. '		' → logprob: -11.396220207214355
    6. '```' → logprob: -11.896220207214355
    7. 'print' → logprob: -12.021220207214355
    8. '   ' → logprob: -12.771220207214355
    9. '       ' → logprob: -12.771220207214355
    10. '(self' → logprob: -13.021220207214355

Token 2974: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0300761591643095
    2. 'self' → logprob: -3.530076265335083
    3. '       ' → logprob: -8.155076026916504
    4. ' self' → logprob: -10.655076026916504
    5. '```' → logprob: -11.780076026916504
    6. '   ' → logprob: -12.280076026916504
    7. '
' → logprob: -14.530076026916504
    8. '	self' → logprob: -14.530076026916504
    9. '		' → logprob: -14.905076026916504
    10. '               ' → logprob: -14.905076026916504

Token 2975: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002372319810092449
    2. '           ' → logprob: -6.1273722648620605
    3. ' self' → logprob: -8.627372741699219
    4. '	self' → logprob: -12.377372741699219
    5. 'print' → logprob: -13.752372741699219
    6. '```' → logprob: -13.877372741699219
    7. '       ' → logprob: -14.502372741699219
    8. 'Self' → logprob: -15.127372741699219
    9. '
' → logprob: -15.127372741699219
    10. '   ' → logprob: -15.627372741699219

Token 2976: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -5.6457742175552994e-05
    2. 'results' → logprob: -9.875056266784668
    3. '.' → logprob: -12.750056266784668
    4. ' .' → logprob: -13.625056266784668
    5. '.s' → logprob: -15.750056266784668
    6. '	results' → logprob: -16.000057220458984
    7. '
' → logprob: -16.250057220458984
    8. '.outputs' → logprob: -16.750057220458984
    9. 's' → logprob: -16.875057220458984
    10. '.
' → logprob: -16.875057220458984

Token 2977: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.895480277715251e-06
    2. '.' → logprob: -12.125008583068848
    3. '.app' → logprob: -13.500008583068848
    4. '.extend' → logprob: -13.750008583068848
    5. '           ' → logprob: -15.375008583068848
    6. 'append' → logprob: -15.625008583068848
    7. '.setdefault' → logprob: -15.750008583068848
    8. '.ap' → logprob: -16.000009536743164
    9. '_append' → logprob: -16.250009536743164
    10. ' .' → logprob: -17.625009536743164

Token 2978: '(str' (ID: 7946)
  Prédit: '(short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(short' → logprob: -0.01129361242055893
    2. '(str' → logprob: -4.511293411254883
    3. '(f' → logprob: -9.386293411254883
    4. 'short' → logprob: -9.511293411254883
    5. '(' → logprob: -9.511293411254883
    6. '((' → logprob: -11.386293411254883
    7. '(int' → logprob: -13.761293411254883
    8. 'str' → logprob: -14.761293411254883
    9. '(long' → logprob: -15.511293411254883
    10. '(
' → logprob: -15.636293411254883

Token 2979: '(short' (ID: 78511)
  Prédit: '(short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(short' → logprob: -0.0019286326132714748
    2. 'short' → logprob: -6.251928806304932
    3. ')' → logprob: -17.376928329467773
    4. '(long' → logprob: -17.501928329467773
    5. '	short' → logprob: -17.751928329467773
    6. '_short' → logprob: -18.751928329467773
    7. '(
' → logprob: -18.751928329467773
    8. '(' → logprob: -18.751928329467773
    9. ' shortest' → logprob: -18.876928329467773
    10. ' short' → logprob: -19.376928329467773

Token 2980: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.9361264946837764e-07
    2. 'test' → logprob: -15.875
    3. 'rest' → logprob: -20.125
    4. 'estin' → logprob: -21.25
    5. 'ест' → logprob: -21.375
    6. 'e' → logprob: -21.5
    7. '_est' → logprob: -21.625
    8. 'dest' → logprob: -21.75
    9. '(est' → logprob: -22.25
    10. '[-' → logprob: -22.875

Token 2981: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03017379529774189
    2. 'est' → logprob: -3.5301737785339355
    3. 'time' → logprob: -7.7801737785339355
    4. 'Time' → logprob: -13.530174255371094
    5. 't' → logprob: -14.030174255371094
    6. 'underscore' → logprob: -14.155174255371094
    7. 'ime' → logprob: -14.280174255371094
    8. 'int' → logprob: -15.030174255371094
    9. 'tim' → logprob: -15.655174255371094
    10. 'answer' → logprob: -15.655174255371094

Token 2982: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006945623317733407
    2. '())' → logprob: -7.625694751739502
    3. ')
' → logprob: -8.625694274902344
    4. '()' → logprob: -11.250694274902344
    5. '[' → logprob: -13.000694274902344
    6. '))' → logprob: -13.125694274902344
    7. '           ' → logprob: -13.375694274902344
    8. '       ' → logprob: -13.750694274902344
    9. '<|end|>' → logprob: -13.750694274902344
    10. ')return' → logprob: -14.250694274902344

Token 2983: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13317988812923431
    2. 'def' → logprob: -2.2581799030303955
    3. '```' → logprob: -4.258179664611816
    4. '<|end|>' → logprob: -5.508179664611816
    5. ' def' → logprob: -6.633179664611816
    6. '
' → logprob: -8.133179664611816
    7. '	def' → logprob: -8.633179664611816
    8. '       ' → logprob: -9.758179664611816
    9. '``' → logprob: -10.758179664611816
    10. '<|end|>' → logprob: -10.883179664611816

Token 2984: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5830725431442261
    2. 'def' → logprob: -0.8330725431442261
    3. ' def' → logprob: -5.458072662353516
    4. '
' → logprob: -7.083072662353516
    5. '```' → logprob: -7.083072662353516
    6. '	def' → logprob: -7.833072662353516
    7. 'for' → logprob: -8.458072662353516
    8. '       ' → logprob: -8.583072662353516
    9. '<|end|>' → logprob: -8.708072662353516
    10. ' ' → logprob: -9.583072662353516

Token 2985: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026958626694977283
    2. '       ' → logprob: -6.5026960372924805
    3. 'for' → logprob: -6.7526960372924805
    4. ' print' → logprob: -11.12769603729248
    5. 'return' → logprob: -12.62769603729248
    6. 'def' → logprob: -12.62769603729248
    7. '   ' → logprob: -13.12769603729248
    8. ' for' → logprob: -14.12769603729248
    9. 'if' → logprob: -14.62769603729248
    10. '
' → logprob: -15.00269603729248

Token 2986: ' results' (ID: 4376)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3495601415634155
    2. 'for' → logprob: -1.3495601415634155
    3. '       ' → logprob: -3.349560260772705
    4. '```' → logprob: -8.224559783935547
    5. '           ' → logprob: -9.224559783935547
    6. '
' → logprob: -9.724559783935547
    7. ' for' → logprob: -9.724559783935547
    8. '   ' → logprob: -10.599559783935547
    9. ' print' → logprob: -10.974559783935547
    10. '\n' → logprob: -12.099559783935547

Token 2987: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037659937515854836
    2. 'for' → logprob: -5.753766059875488
    3. ' for' → logprob: -8.378766059875488
    4. '   ' → logprob: -8.753766059875488
    5. '```' → logprob: -9.003766059875488
    6. '	' → logprob: -10.503766059875488
    7. 'print' → logprob: -10.753766059875488
    8. '
' → logprob: -11.003766059875488
    9. '	for' → logprob: -12.003766059875488
    10. '        
' → logprob: -13.753766059875488

Token 2988: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35833391547203064
    2. '       ' → logprob: -1.358333945274353
    3. 'print' → logprob: -3.2333338260650635
    4. '```' → logprob: -6.108334064483643
    5. ' for' → logprob: -6.233334064483643
    6. '   ' → logprob: -7.858334064483643
    7. '	' → logprob: -10.733333587646484
    8. '	for' → logprob: -10.858333587646484
    9. '``' → logprob: -11.608333587646484
    10. '
' → logprob: -11.983333587646484

Token 2989: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.39305150508880615
    2. 'for' → logprob: -1.1430515050888062
    3. '       ' → logprob: -5.143051624298096
    4. ' for' → logprob: -8.518051147460938
    5. '```' → logprob: -9.393051147460938
    6. '   ' → logprob: -11.268051147460938
    7. ' print' → logprob: -11.268051147460938
    8. '
' → logprob: -11.518051147460938
    9. '	' → logprob: -13.893051147460938
    10. '	for' → logprob: -14.143051147460938

Token 2990: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.04192008078098297
    2. ''\' → logprob: -3.5419201850891113
    3. '("\' → logprob: -4.541920185089111
    4. '"\' → logprob: -6.541920185089111
    5. '\n' → logprob: -14.416919708251953
    6. '
' → logprob: -15.041919708251953
    7. ' '\' → logprob: -15.916919708251953
    8. '\' → logprob: -16.791919708251953
    9. '`\' → logprob: -17.416919708251953
    10. '(' → logprob: -17.666919708251953

Token 2991: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. '\n' → logprob: -15.875
    3. '
' → logprob: -16.75
    4. ''\' → logprob: -19.375
    5. ' n' → logprob: -20.125
    6. 'join' → logprob: -21.0
    7. ''n' → logprob: -21.75
    8. '"\' → logprob: -21.875
    9. '``' → logprob: -22.125
    10. '```' → logprob: -22.375

Token 2992: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.00014811802248004824
    2. '".' → logprob: -9.375147819519043
    3. 'join' → logprob: -10.000147819519043
    4. '''.' → logprob: -12.000147819519043
    5. '.join' → logprob: -12.250147819519043
    6. '\n' → logprob: -13.375147819519043
    7. ''' → logprob: -13.500147819519043
    8. '
' → logprob: -13.750147819519043
    9. '`.' → logprob: -14.250147819519043
    10. ').' → logprob: -14.250147819519043

Token 2993: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -16.25
    3. ''.' → logprob: -16.375
    4. 'print' → logprob: -16.875
    5. '```' → logprob: -17.75
    6. 'jo' → logprob: -18.0
    7. 'j' → logprob: -18.125
    8. '.join' → logprob: -19.25
    9. '(join' → logprob: -21.125
    10. '".' → logprob: -21.25

Token 2994: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. 'self' → logprob: -14.75
    3. '(' → logprob: -19.375
    4. '[self' → logprob: -20.625
    5. '	self' → logprob: -21.5
    6. '=self' → logprob: -21.875
    7. ' self' → logprob: -22.25
    8. '   ' → logprob: -23.75
    9. '([' → logprob: -24.125
    10. '(
' → logprob: -24.125

Token 2995: '.results' (ID: 53203)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.1186566047836095e-05
    2. 'self' → logprob: -10.625031471252441
    3. '(results' → logprob: -12.125031471252441
    4. '(' → logprob: -14.125031471252441
    5. '[self' → logprob: -14.750031471252441
    6. 'results' → logprob: -16.000030517578125
    7. '(s' → logprob: -17.125030517578125
    8. ' self' → logprob: -17.500030517578125
    9. '=self' → logprob: -17.875030517578125
    10. '(
' → logprob: -18.000030517578125

Token 2996: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025033634155988693
    2. '())' → logprob: -6.002503395080566
    3. '()' → logprob: -10.877503395080566
    4. ')
' → logprob: -12.002503395080566
    5. '))' → logprob: -13.127503395080566
    6. ')`' → logprob: -15.752503395080566
    7. '   ' → logprob: -15.877503395080566
    8. ' )' → logprob: -16.12750244140625
    9. '       ' → logprob: -16.50250244140625
    10. '[])' → logprob: -16.62750244140625

Token 2997: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006432149093598127
    2. 'Solver' → logprob: -7.625643253326416
    3. 'def' → logprob: -9.375642776489258
    4. 'solver' → logprob: -10.250642776489258
    5. ' if' → logprob: -10.875642776489258
    6. '```' → logprob: -11.875642776489258
    7. '#' → logprob: -12.500642776489258
    8. '<|end|>' → logprob: -13.375642776489258
    9. '_solver' → logprob: -14.000642776489258
    10. 'If' → logprob: -14.125642776489258

Token 2998: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2519424259662628
    2. '__' → logprob: -1.5019423961639404
    3. 'name' → logprob: -12.00194263458252
    4. '_' → logprob: -12.37694263458252
    5. '___' → logprob: -13.50194263458252
    6. '_name' → logprob: -13.87694263458252
    7. ' ' → logprob: -15.25194263458252
    8. ' ' → logprob: -16.376941680908203
    9. '(__' → logprob: -16.751941680908203
    10. 'Name' → logprob: -16.876941680908203

Token 2999: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0012442785082384944
    2. 'if' → logprob: -7.876244068145752
    3. '```' → logprob: -8.25124454498291
    4. '==' → logprob: -8.87624454498291
    5. '__":
' → logprob: -9.00124454498291
    6. '__':
' → logprob: -9.37624454498291
    7. '__[' → logprob: -9.62624454498291
    8. 'name' → logprob: -9.75124454498291
    9. '__.__' → logprob: -10.37624454498291
    10. '[' → logprob: -10.75124454498291

Token 3000: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002383441897109151
    2. '__.__' → logprob: -8.375238418579102
    3. '__.' → logprob: -13.250238418579102
    4. '__":
' → logprob: -13.375238418579102
    5. '__["' → logprob: -13.500238418579102
    6. '__('' → logprob: -14.000238418579102
    7. '__
' → logprob: -14.375238418579102
    8. '____' → logprob: -14.625238418579102
    9. '__("' → logprob: -14.625238418579102
    10. '__':
' → logprob: -15.875238418579102

Token 3001: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0028174780309200287
    2. '==' → logprob: -6.127817630767822
    3. '=="' → logprob: -7.627817630767822
    4. ' ==' → logprob: -9.252817153930664
    5. '__.__' → logprob: -10.127817153930664
    6. '=='' → logprob: -12.627817153930664
    7. '__":
' → logprob: -12.752817153930664
    8. '__["' → logprob: -14.252817153930664
    9. '___' → logprob: -14.752817153930664
    10. '__("' → logprob: -14.877817153930664

Token 3002: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0040807779878377914
    2. ''' → logprob: -5.504080772399902
    3. ' "__' → logprob: -13.254080772399902
    4. '__' → logprob: -14.879080772399902
    5. ''"' → logprob: -16.12908172607422
    6. '"class' → logprob: -17.12908172607422
    7. '"name' → logprob: -17.50408172607422
    8. '"'' → logprob: -17.62908172607422
    9. ' '__' → logprob: -18.00408172607422
    10. '"user' → logprob: -18.37908172607422

Token 3003: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03882075101137161
    2. '__' → logprob: -3.288820743560791
    3. 'name' → logprob: -7.413820743560791
    4. '"' → logprob: -9.03882122039795
    5. ''' → logprob: -10.16382122039795
    6. 'built' → logprob: -12.66382122039795
    7. '___' → logprob: -12.91382122039795
    8. '_main' → logprob: -13.41382122039795
    9. ' "__' → logprob: -13.41382122039795
    10. '__":
' → logprob: -13.53882122039795

Token 3004: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20506291091442108
    2. '__' → logprob: -1.8300628662109375
    3. '__':
' → logprob: -3.7050628662109375
    4. '():
' → logprob: -8.455062866210938
    5. '__:' → logprob: -9.080062866210938
    6. ':' → logprob: -11.455062866210938
    7. '__.__' → logprob: -11.455062866210938
    8. '__);
' → logprob: -11.830062866210938
    9. '__.' → logprob: -11.830062866210938
    10. '__()
' → logprob: -12.080062866210938

Token 3005: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16430886089801788
    2. 'Solver' → logprob: -1.9143089056015015
    3. 'S' → logprob: -6.414309024810791
    4. 'solver' → logprob: -6.914309024810791
    5. 'Sol' → logprob: -8.164308547973633
    6. '_solver' → logprob: -8.289308547973633
    7. ' Solver' → logprob: -8.289308547973633
    8. ' solver' → logprob: -9.039308547973633
    9. '	S' → logprob: -9.164308547973633
    10. '    
' → logprob: -9.289308547973633

Token 3006: ' Solver' (ID: 141655)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.25350698828697205
    2. 'Solver' (adapté à ' Solver') → logprob: -1.5035070180892944
    3. 's' → logprob: -6.753507137298584
    4. '   ' → logprob: -8.253506660461426
    5. 'sol' → logprob: -9.128506660461426
    6. ' solver' → logprob: -11.628506660461426
    7. 'solve' → logprob: -12.253506660461426
    8. 'solution' → logprob: -12.253506660461426
    9. '_solver' → logprob: -12.378506660461426
    10. 'S' → logprob: -12.378506660461426

Token 3007: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.7292167184641585e-05
    2. '()' → logprob: -9.875057220458984
    3. '().__' → logprob: -12.125057220458984
    4. '().'' → logprob: -16.250057220458984
    5. '(' → logprob: -16.625057220458984
    6. '.solve' → logprob: -16.875057220458984
    7. '.run' → logprob: -17.000057220458984
    8. '()
' → logprob: -17.500057220458984
    9. '.' → logprob: -17.875057220458984
    10. '.main' → logprob: -18.125057220458984

Token 3008: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: 0.0
    2. 'resolve' → logprob: -20.75
    3. 'sol' → logprob: -21.125
    4. ' solve' → logprob: -22.375
    5. '.solve' → logprob: -22.875
    6. 'olve' → logprob: -25.0
    7. 'save' → logprob: -25.125
    8. 's' → logprob: -25.875
    9. 'serve' → logprob: -26.5
    10. 'run' → logprob: -26.75

Token 3009: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3007
Tokens correctement prédits (1ère position, stricte): 1172
Tokens correctement prédits (1ère position, avec adaptation): 1327
Tokens correctement prédits (top 10): 2505
Précision stricte (1ère position): 38.98%
Précision adaptée (1ère position): 44.13%
Précision (top 10): 83.31%
================================================================================
