================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:08:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    try:
        line = input()
        if line == "":
            break
        parts = line.split()
        a = int(parts[0])
        b = int(parts[1])
        print(a + b)
    except EOFError:
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3072056174278259
    2. '    ' → logprob: -1.6822056770324707
    3. '```' → logprob: -3.5572056770324707
    4. ' ' → logprob: -3.8072056770324707
    5. '       ' → logprob: -4.807205677032471
    6. '    
' → logprob: -5.932205677032471
    7. '  ' → logprob: -6.182205677032471
    8. '\' → logprob: -6.182205677032471
    9. '\n' → logprob: -6.557205677032471
    10. '\t' → logprob: -6.807205677032471

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002727793762460351
    2. ' :' → logprob: -8.500272750854492
    3. '   ' → logprob: -10.875272750854492
    4. '):' → logprob: -11.250272750854492
    5. '       ' → logprob: -11.375272750854492
    6. ':
' → logprob: -11.375272750854492
    7. '    ' → logprob: -12.500272750854492
    8. '':' → logprob: -13.125272750854492
    9. '():' → logprob: -13.750272750854492
    10. '```' → logprob: -13.875272750854492

Token 6: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010777069255709648
    2. '   ' → logprob: -7.001077651977539
    3. ':' → logprob: -9.251077651977539
    4. '    ' → logprob: -10.376077651977539
    5. ' :' → logprob: -11.501077651977539
    6. '```' → logprob: -12.001077651977539
    7. '     ' → logprob: -12.501077651977539
    8. ' ' → logprob: -12.751077651977539
    9. '      ' → logprob: -12.751077651977539
    10. '<|end|>' → logprob: -13.376077651977539

Token 7: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0531071312725544
    2. '   ' → logprob: -3.4281070232391357
    3. '       ' → logprob: -4.678107261657715
    4. 'print' → logprob: -5.428107261657715
    5. ' ' → logprob: -6.928107261657715
    6. 'input' → logprob: -7.053107261657715
    7. '            ' → logprob: -7.553107261657715
    8. '        ' → logprob: -7.928107261657715
    9. ':' → logprob: -8.053107261657715
    10. '          ' → logprob: -8.053107261657715

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6093949675559998
    2. '=' → logprob: -1.1093950271606445
    3. ':' → logprob: -3.1093950271606445
    4. '       ' → logprob: -3.6093950271606445
    5. '.' → logprob: -3.9843950271606445
    6. ')' → logprob: -4.2343950271606445
    7. '[:]' → logprob: -5.2343950271606445
    8. '.readline' → logprob: -5.3593950271606445
    9. '[' → logprob: -6.7343950271606445
    10. '   ' → logprob: -6.7343950271606445

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759847164154053
    2. 'input' → logprob: -0.8259847164154053
    3. 'file' → logprob: -11.325984954833984
    4. ' f' → logprob: -11.450984954833984
    5. ' file' → logprob: -11.700984954833984
    6. ' raw' → logprob: -13.450984954833984
    7. 'sys' → logprob: -13.575984954833984
    8. 'raw' → logprob: -13.950984954833984
    9. '=input' → logprob: -13.950984954833984
    10. 'f' → logprob: -13.950984954833984

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04997768625617027
    2. '()' → logprob: -3.0499777793884277
    3. '('' → logprob: -6.924977779388428
    4. ')' → logprob: -8.67497730255127
    5. '("("' → logprob: -9.67497730255127
    6. ''' → logprob: -10.54997730255127
    7. '())' → logprob: -10.67497730255127
    8. '("")' → logprob: -10.67497730255127
    9. '(
' → logprob: -10.92497730255127
    10. '```' → logprob: -11.17497730255127

Token 11: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5641428828239441
    2. ')' → logprob: -1.5641429424285889
    3. '<|end|>' → logprob: -2.564142942428589
    4. ' if' → logprob: -3.564142942428589
    5. ' ' → logprob: -3.814142942428589
    6. '    ' → logprob: -4.31414270401001
    7. '.strip' → logprob: -4.31414270401001
    8. '()' → logprob: -4.56414270401001
    9. '   ' → logprob: -4.68914270401001
    10. '.' → logprob: -5.06414270401001

Token 12: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06622733920812607
    2. ' if' → logprob: -2.941227436065674
    3. '.strip' → logprob: -5.566227436065674
    4. '   ' → logprob: -5.816227436065674
    5. 'if' (adapté à ' if') → logprob: -6.441227436065674
    6. '.' → logprob: -7.316227436065674
    7. '           ' → logprob: -7.316227436065674
    8. ' except' → logprob: -8.441226959228516
    9. '=' → logprob: -8.816226959228516
    10. ' ' → logprob: -8.816226959228516

Token 13: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4059676229953766
    2. ' not' → logprob: -1.5309675931930542
    3. ' ' → logprob: -2.1559677124023438
    4. ' len' → logprob: -6.905967712402344
    5. 'line' → logprob: -8.405967712402344
    6. ' lines' → logprob: -8.780967712402344
    7. ' ' → logprob: -9.780967712402344
    8. 'not' → logprob: -9.780967712402344
    9. ' isinstance' → logprob: -11.405967712402344
    10. '  ' → logprob: -11.530967712402344

Token 14: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2584044635295868
    2. '.startswith' → logprob: -1.7584044933319092
    3. ' .' → logprob: -4.00840425491333
    4. '.strip' → logprob: -4.13340425491333
    5. '.' → logprob: -4.25840425491333
    6. '==' → logprob: -6.13340425491333
    7. '.endswith' → logprob: -6.13340425491333
    8. ' ' → logprob: -7.00840425491333
    9. '<|end|>' → logprob: -7.50840425491333
    10. '<|end|>' → logprob: -7.75840425491333

Token 15: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.823610782623291
    2. '"' → logprob: -1.573610782623291
    3. '''' → logprob: -1.698610782623291
    4. ''' → logprob: -2.073610782623291
    5. ' ""' → logprob: -3.948610782623291
    6. '"":' → logprob: -4.198610782623291
    7. ' ''' → logprob: -5.448610782623291
    8. ' "' → logprob: -5.698610782623291
    9. ' '' → logprob: -6.198610782623291
    10. ' "":
' → logprob: -7.448610782623291

Token 16: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03889838606119156
    2. ' break' → logprob: -4.038898468017578
    3. ':' → logprob: -4.538898468017578
    4. '       ' → logprob: -4.788898468017578
    5. ':
' → logprob: -8.413898468017578
    6. '   ' → logprob: -8.538898468017578
    7. 'break' → logprob: -8.663898468017578
    8. ' ' → logprob: -8.663898468017578
    9. ' continue' → logprob: -8.788898468017578
    10. '<|end|>' → logprob: -9.163898468017578

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.01986744999885559
    2. 'break' (adapté à ' break') → logprob: -4.644867420196533
    3. '       ' → logprob: -4.894867420196533
    4. '           ' → logprob: -6.144867420196533
    5. '	break' → logprob: -8.519867897033691
    6. '   ' → logprob: -9.269867897033691
    7. '_break' → logprob: -9.394867897033691
    8. '               ' → logprob: -11.269867897033691
    9. ' ' → logprob: -11.769867897033691
    10. '<|end|>' → logprob: -12.019867897033691

Token 18: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47063377499580383
    2. '<|end|>' → logprob: -1.9706337451934814
    3. '
' → logprob: -2.0956337451934814
    4. '\n' → logprob: -2.8456337451934814
    5. '\' → logprob: -3.7206337451934814
    6. ')' → logprob: -4.7206339836120605
    7. '<|end|>' → logprob: -5.4706339836120605
    8. ':' → logprob: -5.8456339836120605
    9. '   ' → logprob: -5.8456339836120605
    10. '        
' → logprob: -6.0956339836120605

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1318826973438263
    2. '   ' → logprob: -3.631882667541504
    3. '\n' → logprob: -3.631882667541504
    4. '\' → logprob: -3.756882667541504
    5. '
' → logprob: -4.506882667541504
    6. '```' → logprob: -4.631882667541504
    7. '        
' → logprob: -5.131882667541504
    8. ':' → logprob: -5.756882667541504
    9. '    
' → logprob: -5.756882667541504
    10. '           ' → logprob: -6.006882667541504

Token 20: ' parts' (ID: 7881)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0639251098036766
    2. '           ' → logprob: -3.18892502784729
    3. 'print' → logprob: -4.813925266265869
    4. '   ' → logprob: -5.063925266265869
    5. ' except' → logprob: -6.438925266265869
    6. ' print' → logprob: -6.563925266265869
    7. 'except' → logprob: -7.188925266265869
    8. '\n' → logprob: -7.813925266265869
    9. '\' → logprob: -8.063924789428711
    10. '```' → logprob: -8.313924789428711

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08934389054775238
    2. '[' → logprob: -3.214343786239624
    3. '=' → logprob: -3.589343786239624
    4. '.' → logprob: -4.214344024658203
    5. ')' → logprob: -7.339344024658203
    6. '.split' → logprob: -7.589344024658203
    7. '.append' → logprob: -7.589344024658203
    8. ' .' → logprob: -8.089344024658203
    9. '   ' → logprob: -8.589344024658203
    10. '.setdefault' → logprob: -8.714344024658203

Token 22: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0076233032159507275
    2. 'line' → logprob: -4.882623195648193
    3. '	line' → logprob: -11.632623672485352
    4. '=line' → logprob: -12.382623672485352
    5. '[line' → logprob: -13.507623672485352
    6. '(line' → logprob: -14.257623672485352
    7. ' ' → logprob: -14.882623672485352
    8. ' lines' → logprob: -15.007623672485352
    9. '#line' → logprob: -15.132623672485352
    10. ' parts' → logprob: -15.257623672485352

Token 23: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.3160119950771332
    2. '.' → logprob: -1.3160120248794556
    3. '.strip' → logprob: -5.941011905670166
    4. ' .' → logprob: -9.316012382507324
    5. '.rstrip' → logprob: -11.066012382507324
    6. '.s' → logprob: -12.691012382507324
    7. '.Split' → logprob: -13.566012382507324
    8. '       ' → logprob: -13.566012382507324
    9. '   ' → logprob: -13.691012382507324
    10. '.replace' → logprob: -13.816012382507324

Token 24: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.13603803515434265
    2. '("("' → logprob: -2.136038064956665
    3. '(' → logprob: -4.761037826538086
    4. ''' → logprob: -8.011037826538086
    5. '('.')' → logprob: -8.886037826538086
    6. '("' → logprob: -10.636037826538086
    7. '"' → logprob: -12.136037826538086
    8. '()' → logprob: -12.261037826538086
    9. '(',' → logprob: -13.136037826538086
    10. '(`' → logprob: -14.511037826538086

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018319088965654373
    2. '[' → logprob: -4.518319129943848
    3. ' if' → logprob: -6.393319129943848
    4. '           ' → logprob: -6.518319129943848
    5. 'if' → logprob: -6.643319129943848
    6. ')' → logprob: -7.643319129943848
    7. '[]' → logprob: -8.018319129943848
    8. '   ' → logprob: -8.143319129943848
    9. '```' → logprob: -8.393319129943848
    10. '.' → logprob: -8.518319129943848

Token 26: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6537840366363525
    2. 'n' → logprob: -2.1537840366363525
    3. 'if' → logprob: -2.4037840366363525
    4. 'num' → logprob: -2.7787840366363525
    5. 'count' → logprob: -3.4037840366363525
    6. 'i' → logprob: -3.9037840366363525
    7. ' if' → logprob: -4.153783798217773
    8. 'print' → logprob: -4.278783798217773
    9. 'a' (adapté à ' a') → logprob: -4.403783798217773
    10. 'result' → logprob: -4.403783798217773

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01584360934793949
    2. ' =' → logprob: -5.390843391418457
    3. ' ' → logprob: -6.140843391418457
    4. '.append' → logprob: -6.390843391418457
    5. '.' → logprob: -6.765843391418457
    6. ',' → logprob: -6.890843391418457
    7. 'pp' → logprob: -7.140843391418457
    8. '=' → logprob: -7.390843391418457
    9. 's' → logprob: -7.765843391418457
    10. '[i' → logprob: -8.015843391418457

Token 28: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12714248895645142
    2. ' int' → logprob: -2.1271424293518066
    3. ' parts' → logprob: -9.502142906188965
    4. 'parts' → logprob: -9.502142906188965
    5. 'float' → logprob: -10.002142906188965
    6. ' float' → logprob: -11.002142906188965
    7. ' ' → logprob: -13.752142906188965
    8. '	int' → logprob: -14.502142906188965
    9. 'ints' → logprob: -14.877142906188965
    10. '(int' → logprob: -15.252142906188965

Token 29: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.029751643538475037
    2. '(' → logprob: -3.5297515392303467
    3. ' (' → logprob: -15.029751777648926
    4. '(part' → logprob: -15.154751777648926
    5. 'parts' → logprob: -15.279751777648926
    6. ' parts' → logprob: -15.904751777648926
    7. '(
' → logprob: -16.77975082397461
    8. '(

' → logprob: -16.77975082397461
    9. '('' → logprob: -17.15475082397461
    10. '("("' → logprob: -18.27975082397461

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '0' → logprob: -13.250003814697266
    3. ' [' → logprob: -13.750003814697266
    4. ')' → logprob: -14.750003814697266
    5. '1' → logprob: -15.375003814697266
    6. '(' → logprob: -15.625003814697266
    7. '   ' → logprob: -15.625003814697266
    8. ' ' → logprob: -16.000003814697266
    9. '[-' → logprob: -16.375003814697266
    10. '[
' → logprob: -17.125003814697266

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010604646377032623
    2. '1' → logprob: -9.250105857849121
    3. ' ' → logprob: -11.750105857849121
    4. '-' → logprob: -13.875105857849121
    5. '[' → logprob: -15.000105857849121
    6. '2' → logprob: -15.500105857849121
    7. ')' → logprob: -15.500105857849121
    8. '   ' → logprob: -16.562606811523438
    9. ']' → logprob: -16.750106811523438
    10. '```' → logprob: -17.000106811523438

Token 32: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2045965939760208
    2. '])' → logprob: -1.7045966386795044
    3. ']' → logprob: -5.954596519470215
    4. ')])' → logprob: -8.579596519470215
    5. ')]' → logprob: -8.954596519470215
    6. '))' → logprob: -9.454596519470215
    7. ' )' → logprob: -10.204596519470215
    8. ')
' → logprob: -10.704596519470215
    9. '),' → logprob: -10.704596519470215
    10. '[' → logprob: -10.704596519470215

Token 33: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' b' (ID: 287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3611724078655243
    2. 'b' (adapté à ' b') → logprob: -1.4861724376678467
    3. ' ' → logprob: -3.2361724376678467
    4. ')' → logprob: -4.486172199249268
    5. ' b' → logprob: -4.611172199249268
    6. ' +' → logprob: -5.486172199249268
    7. '<|end|>' → logprob: -6.111172199249268
    8. '=' → logprob: -6.361172199249268
    9. ',' → logprob: -6.361172199249268
    10. '   ' → logprob: -6.736172199249268

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006074436940252781
    2. '=' → logprob: -5.13107442855835
    3. ' ' → logprob: -8.881074905395508
    4. ')' → logprob: -13.256074905395508
    5. '<|end|>' → logprob: -14.006074905395508
    6. '.' → logprob: -14.131074905395508
    7. '  ' → logprob: -14.381074905395508
    8. '[' → logprob: -14.381074905395508
    9. 'space' → logprob: -15.131074905395508
    10. ',' → logprob: -15.131074905395508

Token 36: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47408074140548706
    2. 'int' → logprob: -0.9740807414054871
    3. '=int' → logprob: -13.849081039428711
    4. '<int' → logprob: -14.099081039428711
    5. ' ' → logprob: -14.349081039428711
    6. '(int' → logprob: -14.474081039428711
    7. '	int' → logprob: -14.974081039428711
    8. '[int' → logprob: -15.474081039428711
    9. '   ' → logprob: -16.47408103942871
    10. ' ' → logprob: -16.59908103942871

Token 37: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0005545823951251805
    2. '(' → logprob: -7.50055456161499
    3. '(part' → logprob: -13.750555038452148
    4. 'parts' → logprob: -15.375555038452148
    5. ' parts' → logprob: -15.500555038452148
    6. ' (' → logprob: -16.50055503845215
    7. '(par' → logprob: -18.12555503845215
    8. '(points' → logprob: -20.00055503845215
    9. '(posts' → logprob: -20.12555503845215
    10. '_parts' → logprob: -20.25055503845215

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.694766489090398e-05
    2. '[
' → logprob: -10.625066757202148
    3. '1' → logprob: -11.000066757202148
    4. ']' → logprob: -11.625066757202148
    5. ' [' → logprob: -12.250066757202148
    6. '][' → logprob: -12.625066757202148
    7. ' ' → logprob: -12.875066757202148
    8. 's' → logprob: -13.375066757202148
    9. '```' → logprob: -14.000066757202148
    10. '])' → logprob: -14.000066757202148

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004103096667677164
    2. '0' → logprob: -5.504103183746338
    3. ' ' → logprob: -11.37910270690918
    4. '])' → logprob: -11.50410270690918
    5. ')' → logprob: -13.75410270690918
    6. ']' → logprob: -13.75410270690918
    7. '   ' → logprob: -14.87910270690918
    8. '  ' → logprob: -15.62910270690918
    9. '```' → logprob: -15.62910270690918
    10. '2' → logprob: -16.37910270690918

Token 40: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.250006675720215
    3. ' )' → logprob: -14.625006675720215
    4. '))' → logprob: -14.750006675720215
    5. '）' → logprob: -15.625006675720215
    6. ']' → logprob: -15.750006675720215
    7. '}' → logprob: -16.2500057220459
    8. '`)' → logprob: -16.7500057220459
    9. '),' → logprob: -17.1250057220459
    10. '')' → logprob: -17.5000057220459

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.476470023393631
    2. ')' → logprob: -1.7264699935913086
    3. '<|end|>' → logprob: -1.8514699935913086
    4. '#' → logprob: -4.101469993591309
    5. '+' → logprob: -4.601469993591309
    6. '\' → logprob: -5.601469993591309
    7. '        
' → logprob: -6.226469993591309
    8. ' ' → logprob: -6.226469993591309
    9. '\n' → logprob: -6.476469993591309
    10. '=' → logprob: -7.101469993591309

Token 42: ' print' (ID: 2123)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11910898238420486
    2. ')' → logprob: -2.7441089153289795
    3. '       ' → logprob: -3.4941089153289795
    4. '+
' → logprob: -5.119109153747559
    5. ' ' → logprob: -5.994109153747559
    6. '#' → logprob: -6.869109153747559
    7. 'c' → logprob: -6.869109153747559
    8. '   ' → logprob: -7.369109153747559
    9. ' +' → logprob: -7.369109153747559
    10. '<|end|>' → logprob: -7.369109153747559

Token 43: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10049034655094147
    2. '(a' → logprob: -2.3504903316497803
    3. '('' → logprob: -8.97549057006836
    4. '("' → logprob: -9.47549057006836
    5. '()' → logprob: -11.22549057006836
    6. '((' → logprob: -11.47549057006836
    7. 'a' → logprob: -11.60049057006836
    8. '(abs' → logprob: -11.60049057006836
    9. '(max' → logprob: -11.60049057006836
    10. '(
' → logprob: -11.72549057006836

Token 44: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5819791555404663
    2. '+' → logprob: -0.8319791555404663
    3. ' ' → logprob: -5.331979274749756
    4. '+b' → logprob: -7.956979274749756
    5. ')' → logprob: -8.456978797912598
    6. '*' → logprob: -8.456978797912598
    7. ' *' → logprob: -8.581978797912598
    8. ' ,' → logprob: -9.081978797912598
    9. ' )' → logprob: -9.956978797912598
    10. ',' → logprob: -10.831978797912598

Token 45: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3132724165916443
    2. 'b' → logprob: -1.313272476196289
    3. ' ' → logprob: -11.688272476196289
    4. ')b' → logprob: -13.938272476196289
    5. ')' → logprob: -14.438272476196289
    6. '	b' → logprob: -15.063272476196289
    7. ' б' → logprob: -15.813272476196289
    8. '1' → logprob: -16.18827247619629
    9. ' )' → logprob: -16.56327247619629
    10. '<|end|>' → logprob: -16.81327247619629

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. ')
' → logprob: -11.625021934509277
    3. ' )' → logprob: -11.750021934509277
    4. '))' → logprob: -12.500021934509277
    5. ')`' → logprob: -14.625021934509277
    6. '`)' → logprob: -15.500021934509277
    7. '')' → logprob: -16.25002098083496
    8. '(' → logprob: -16.75002098083496
    9. '）' → logprob: -16.87502098083496
    10. '```' → logprob: -17.00002098083496

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7869865298271179
    2. ' except' → logprob: -1.7869865894317627
    3. '<|end|>' → logprob: -1.9119865894317627
    4. '\n' → logprob: -2.2869865894317627
    5. 'except' → logprob: -2.4119865894317627
    6. '```' → logprob: -4.286986351013184
    7. '	except' → logprob: -4.411986351013184
    8. '<|end|>' → logprob: -5.911986351013184
    9. ')' → logprob: -6.411986351013184
    10. '    
' → logprob: -6.661986351013184

Token 48: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.024846971035003662
    2. ' except' → logprob: -3.8998470306396484
    3. '   ' → logprob: -5.524847030639648
    4. '	except' → logprob: -8.774847030639648
    5. '```' → logprob: -9.774847030639648
    6. 'ex' → logprob: -9.774847030639648
    7. '\n' → logprob: -11.399847030639648
    8. '    
' → logprob: -11.649847030639648
    9. '
' → logprob: -11.649847030639648
    10. '       ' → logprob: -12.524847030639648

Token 49: ' EOF' (ID: 72412)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005444704554975033
    2. ' EOF' → logprob: -5.630444526672363
    3. ' Value' → logprob: -6.630444526672363
    4. '  ' → logprob: -8.380444526672363
    5. ' Exception' → logprob: -8.630444526672363
    6. '   ' → logprob: -10.755444526672363
    7. 'EOF' → logprob: -11.255444526672363
    8. ' Index' → logprob: -11.380444526672363
    9. '  ' → logprob: -11.505444526672363
    10. ' 
' → logprob: -11.505444526672363

Token 50: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.8908587662735954e-05
    2. 'E' → logprob: -11.500019073486328
    3. 'Er' → logprob: -11.875019073486328
    4. 'Erro' → logprob: -13.375019073486328
    5. 'Err' → logprob: -16.125019073486328
    6. ' Error' → logprob: -16.500019073486328
    7. 'rror' → logprob: -16.875019073486328
    8. 'error' → logprob: -18.625019073486328
    9. '	Error' → logprob: -18.625019073486328
    10. ':' → logprob: -18.625019073486328

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016325322212651372
    2. ':
' → logprob: -8.750163078308105
    3. '):' → logprob: -13.125163078308105
    4. ':**' → logprob: -14.250163078308105
    5. '   ' → logprob: -14.500163078308105
    6. ' :' → logprob: -14.750163078308105
    7. '       ' → logprob: -14.875163078308105
    8. ' as' → logprob: -15.750163078308105
    9. '():' → logprob: -15.875163078308105
    10. ':return' → logprob: -16.125164031982422

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015872348740231246
    2. '   ' → logprob: -8.875158309936523
    3. ' break' → logprob: -12.125158309936523
    4. '           ' → logprob: -12.750158309936523
    5. '      ' → logprob: -13.125158309936523
    6. 'break' → logprob: -13.250158309936523
    7. '    ' → logprob: -13.375158309936523
    8. '     ' → logprob: -13.750158309936523
    9. '	break' → logprob: -13.750158309936523
    10. '<|end|>' → logprob: -13.875158309936523

Token 53: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.38878870010375977
    2. ' break' → logprob: -1.1387887001037598
    3. '   ' → logprob: -6.51378870010376
    4. '       ' → logprob: -8.138788223266602
    5. '	break' → logprob: -9.013788223266602
    6. 'b' → logprob: -11.638788223266602
    7. 'br' → logprob: -12.888788223266602
    8. '           ' → logprob: -13.388788223266602
    9. '    
' → logprob: -13.388788223266602
    10. ' ' → logprob: -14.138788223266602


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 41
Précision stricte (1ère position): 52.94%
Précision adaptée (1ère position): 56.86%
Précision (top 10): 80.39%
================================================================================
