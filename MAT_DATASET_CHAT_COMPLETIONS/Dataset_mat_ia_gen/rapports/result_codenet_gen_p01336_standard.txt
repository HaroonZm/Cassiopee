================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

while True:
    line=input()
    if not line:
        break
    N,M=map(int,line.split())
    idols=[]
    for _ in range(N):
        name=input().rstrip('\n')
        C,V,D,L=map(int,input().split())
        idols.append((C,V,D,L))
    dp=[(0,0,0)]*(M+1)
    dp=[(0,0,0) for _ in range(M+1)]
    for C,V,D,L in idols:
        for cost in range(C,M+1):
            v_,d_,l_=dp[cost-C]
            nv,nl,nd=v_+V,l_+L,d_+D
            old=dp[cost]
            if max(nv,nd,nl)>max(old):
                dp[cost]=(nv,nd,nl)
    ans=max(max(v,d,l) for v,d,l in dp)
    print(ans) if ans>0 else print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004960254766047001
    2. '.' → logprob: -5.379960060119629
    3. ' (' → logprob: -9.379960060119629
    4. '(
' → logprob: -9.504960060119629
    5. ')' → logprob: -9.879960060119629
    6. '()' → logprob: -10.129960060119629
    7. '('' → logprob: -11.129960060119629
    8. '[' → logprob: -11.129960060119629
    9. ' ' → logprob: -11.754960060119629
    10. '=' → logprob: -11.879960060119629

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004472348664421588
    2. '.readline' → logprob: -8.375447273254395
    3. ' .' → logprob: -9.125447273254395
    4. '.
' → logprob: -10.375447273254395
    5. '[' → logprob: -10.625447273254395
    6. '.get' → logprob: -12.000447273254395
    7. '.setdefault' → logprob: -12.250447273254395
    8. '```' → logprob: -12.250447273254395
    9. '.

' → logprob: -12.625447273254395
    10. ''.' → logprob: -12.875447273254395

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2573619484901428
    2. '.readline' → logprob: -1.507361888885498
    3. '.read' → logprob: -5.257361888885498
    4. '.Read' → logprob: -9.757362365722656
    5. '```' → logprob: -10.632362365722656
    6. '.get' → logprob: -10.757362365722656
    7. '.
' → logprob: -11.132362365722656
    8. '[' → logprob: -11.257362365722656
    9. '.readlines' → logprob: -11.507362365722656
    10. '<|end|>' → logprob: -11.632362365722656

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6559683680534363
    2. '(' → logprob: -0.7809683680534363
    3. '(
' → logprob: -4.155968189239502
    4. '()
' → logprob: -5.530968189239502
    5. '().' → logprob: -6.655968189239502
    6. '(

' → logprob: -6.905968189239502
    7. '
' → logprob: -8.03096866607666
    8. ')' → logprob: -8.40596866607666
    9. '()

' → logprob: -8.78096866607666
    10. ' ()' → logprob: -9.28096866607666

Token 8: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4755316376686096
    2. '()' → logprob: -0.9755316376686096
    3. '().' → logprob: -7.100531578063965
    4. '()
' → logprob: -8.475531578063965
    5. '(
' → logprob: -8.475531578063965
    6. ')' → logprob: -10.600531578063965
    7. '#' → logprob: -10.725531578063965
    8. '()

' → logprob: -10.850531578063965
    9. 'a' → logprob: -11.100531578063965
    10. '()\' → logprob: -11.100531578063965

Token 9: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0034882856998592615
    2. ' True' → logprob: -5.878488063812256
    3. '  ' → logprob: -7.378488063812256
    4. ' (' → logprob: -11.628488540649414
    5. ' not' → logprob: -11.628488540649414
    6. ' )' → logprob: -12.003488540649414
    7. ''' → logprob: -12.253488540649414
    8. 'True' → logprob: -12.253488540649414
    9. '   ' → logprob: -13.003488540649414
    10. '    ' → logprob: -13.003488540649414

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003292021108791232
    2. '():' → logprob: -5.753292083740234
    3. '(:' → logprob: -10.128292083740234
    4. ':**' → logprob: -11.003292083740234
    5. ' :' → logprob: -11.128292083740234
    6. '   ' → logprob: -11.878292083740234
    7. '):' → logprob: -11.878292083740234
    8. ':
' → logprob: -12.253292083740234
    9. '```' → logprob: -12.628292083740234
    10. ':return' → logprob: -12.878292083740234

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012821347452700138
    2. '    
' → logprob: -4.887821197509766
    3. '    ' → logprob: -5.887821197509766
    4. ':' → logprob: -6.762821197509766
    5. '  
' → logprob: -8.387821197509766
    6. ' ' → logprob: -8.887821197509766
    7. '(' → logprob: -9.012821197509766
    8. ' 
' → logprob: -9.137821197509766
    9. ')' → logprob: -9.637821197509766
    10. '     
' → logprob: -9.637821197509766

Token 12: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10126650333404541
    2. ' line' → logprob: -3.226266384124756
    3. '    ' → logprob: -3.476266384124756
    4. '    
' → logprob: -4.476266384124756
    5. 'line' (adapté à ' line') → logprob: -4.851266384124756
    6. ' ' → logprob: -6.851266384124756
    7. 'user' → logprob: -7.101266384124756
    8. 'data' → logprob: -7.226266384124756
    9. '```' → logprob: -7.351266384124756
    10. 'try' → logprob: -7.851266384124756

Token 13: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5772011280059814
    2. ' =' → logprob: -0.8272011280059814
    3. '=line' → logprob: -7.327200889587402
    4. '.strip' → logprob: -8.202200889587402
    5. '.readline' → logprob: -10.202200889587402
    6. ' ==' → logprob: -10.327200889587402
    7. '.startswith' → logprob: -10.327200889587402
    8. '=input' → logprob: -10.452200889587402
    9. '.rstrip' → logprob: -10.577200889587402
    10. '==' → logprob: -10.702200889587402

Token 14: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003309361054562032
    2. '().' → logprob: -8.250330924987793
    3. '())' → logprob: -10.750330924987793
    4. '()
' → logprob: -11.125330924987793
    5. '(' → logprob: -11.250330924987793
    6. '()]' → logprob: -12.250330924987793
    7. '()

' → logprob: -12.625330924987793
    8. '()?>' → logprob: -13.000330924987793
    9. '`()' → logprob: -13.500330924987793
    10. ' ()' → logprob: -13.875330924987793

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7184577584266663
    2. '.strip' → logprob: -0.9684577584266663
    3. '.rstrip' → logprob: -3.0934576988220215
    4. ' if' → logprob: -3.0934576988220215
    5. '<|end|>' → logprob: -3.7184576988220215
    6. '    ' → logprob: -5.5934576988220215
    7. ' ' → logprob: -5.9684576988220215
    8. '    
' → logprob: -5.9684576988220215
    9. '```' → logprob: -6.4684576988220215
    10. '<|end|>' → logprob: -6.4684576988220215

Token 16: ' if' (ID: 538)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.11653809249401093
    2. ' if' → logprob: -2.9915380477905273
    3. '.rstrip' → logprob: -3.4915380477905273
    4. '   ' → logprob: -3.7415380477905273
    5. 'if' (adapté à ' if') → logprob: -6.491538047790527
    6. '    ' → logprob: -6.741538047790527
    7. 'rstrip' → logprob: -7.241538047790527
    8. ' ' → logprob: -7.491538047790527
    9. '<|end|>' → logprob: -7.616538047790527
    10. '.' → logprob: -8.366538047790527

Token 17: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00045677117304876447
    2. ' line' → logprob: -7.875456809997559
    3. 'not' → logprob: -9.625456809997559
    4. ' ' → logprob: -11.500456809997559
    5. 'line' → logprob: -14.750456809997559
    6. '  ' → logprob: -17.750455856323242
    7. '	not' → logprob: -17.875455856323242
    8. ' ' → logprob: -18.000455856323242
    9. '=line' → logprob: -18.000455856323242
    10. '[line' → logprob: -19.000455856323242

Token 18: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.006717743817716837
    2. 'line' → logprob: -5.006717681884766
    3. ' ' → logprob: -13.756717681884766
    4. '	line' → logprob: -13.756717681884766
    5. '(line' → logprob: -15.631717681884766
    6. '=line' → logprob: -17.381717681884766
    7. '#line' → logprob: -17.756717681884766
    8. '[line' → logprob: -18.256717681884766
    9. '   ' → logprob: -19.381717681884766
    10. '  ' → logprob: -20.006717681884766

Token 19: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.18817973136901855
    2. '.' → logprob: -2.0631797313690186
    3. ':' → logprob: -3.6881797313690186
    4. '.rstrip' → logprob: -4.063179969787598
    5. '.startswith' → logprob: -6.438179969787598
    6. '.readline' → logprob: -8.188179969787598
    7. ' .' → logprob: -9.063179969787598
    8. '.chomp' → logprob: -9.688179969787598
    9. ':
' → logprob: -10.188179969787598
    10. ' :' → logprob: -10.313179969787598

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017278953455388546
    2. '   ' → logprob: -6.501728057861328
    3. '    ' → logprob: -9.001728057861328
    4. ' ' → logprob: -9.626728057861328
    5. ' break' → logprob: -11.626728057861328
    6. '     ' → logprob: -11.876728057861328
    7. '      ' → logprob: -12.251728057861328
    8. '  ' → logprob: -12.751728057861328
    9. '           ' → logprob: -13.126728057861328
    10. ':' → logprob: -13.501728057861328

Token 21: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.416969358921051
    2. ' break' → logprob: -1.2919692993164062
    3. '   ' → logprob: -2.9169692993164062
    4. 'break' (adapté à ' break') → logprob: -4.541969299316406
    5. '	break' → logprob: -6.791969299316406
    6. ' ' → logprob: -8.916969299316406
    7. '    ' → logprob: -9.291969299316406
    8. '           ' → logprob: -10.041969299316406
    9. '     ' → logprob: -10.916969299316406
    10. '  ' → logprob: -11.041969299316406

Token 22: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010037845931947231
    2. '    
' → logprob: -4.635037899017334
    3. '  
' → logprob: -10.260037422180176
    4. '    ' → logprob: -10.260037422180176
    5. '\n' → logprob: -10.260037422180176
    6. '<|end|>' → logprob: -10.510037422180176
    7. '        
' → logprob: -10.760037422180176
    8. 'print' → logprob: -10.885037422180176
    9. '   
' → logprob: -11.260037422180176
    10. '
' → logprob: -11.260037422180176

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002546641044318676
    2. '    
' → logprob: -8.87525463104248
    3. 'print' → logprob: -9.25025463104248
    4. ' print' → logprob: -11.12525463104248
    5. '<|end|>' → logprob: -14.62525463104248
    6. '       ' → logprob: -14.75025463104248
    7. '```' → logprob: -14.75025463104248
    8. '        
' → logprob: -15.00025463104248
    9. '    ' → logprob: -15.00025463104248
    10. '  
' → logprob: -15.12525463104248

Token 24: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007629108149558306
    2. ' print' → logprob: -5.507628917694092
    3. 'print' → logprob: -6.507628917694092
    4. ' n' → logprob: -7.382628917694092
    5. 'data' → logprob: -8.00762939453125
    6. ' data' → logprob: -8.50762939453125
    7. 'a' → logprob: -8.75762939453125
    8. 'n' → logprob: -8.75762939453125
    9. ' a' → logprob: -8.75762939453125
    10. ' numbers' → logprob: -9.38262939453125

Token 25: ',M' (ID: 54127)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.216294065117836
    2. ' =' → logprob: -1.7162940502166748
    3. '=int' → logprob: -4.216294288635254
    4. ',' → logprob: -11.841294288635254
    5. ' ' → logprob: -12.841294288635254
    6. '=line' → logprob: -13.341294288635254
    7. '=len' → logprob: -13.466294288635254
    8. '=

' → logprob: -14.091294288635254
    9. '=N' → logprob: -14.341294288635254
    10. '=i' → logprob: -14.966294288635254

Token 26: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12747468054294586
    2. ' =' → logprob: -2.127474784851074
    3. '=line' → logprob: -7.627474784851074
    4. '=int' → logprob: -10.752474784851074
    5. '=input' → logprob: -10.877474784851074
    6. ',' → logprob: -11.502474784851074
    7. '=list' → logprob: -13.377474784851074
    8. '=len' → logprob: -14.127474784851074
    9. '=

' → logprob: -14.377474784851074
    10. '    ' → logprob: -14.377474784851074

Token 27: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5759671330451965
    2. ' map' → logprob: -0.8259671330451965
    3. 'line' → logprob: -11.575966835021973
    4. ' line' → logprob: -11.575966835021973
    5. 'list' → logprob: -12.825966835021973
    6. ' ' → logprob: -12.950966835021973
    7. '	map' → logprob: -13.450966835021973
    8. '   ' → logprob: -13.950966835021973
    9. ' list' → logprob: -14.700966835021973
    10. '(map' → logprob: -15.075966835021973

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022322947159409523
    2. '(str' → logprob: -4.022323131561279
    3. '(' → logprob: -5.522323131561279
    4. '(lambda' → logprob: -8.772322654724121
    5. '(list' → logprob: -12.272322654724121
    6. '[int' → logprob: -13.022322654724121
    7. '(in' → logprob: -13.397322654724121
    8. '(tuple' → logprob: -13.897322654724121
    9. '(len' → logprob: -14.022322654724121
    10. 'int' → logprob: -14.397322654724121

Token 29: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.4481518864631653
    2. ',line' → logprob: -1.4481518268585205
    3. ',' → logprob: -2.0731518268585205
    4. ' ,' → logprob: -9.823151588439941
    5. '#line' → logprob: -9.823151588439941
    6. '(' → logprob: -9.823151588439941
    7. 'line' → logprob: -9.948151588439941
    8. ')' → logprob: -10.198151588439941
    9. '[line' → logprob: -10.323151588439941
    10. '=line' → logprob: -10.323151588439941

Token 30: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4801129996776581
    2. '.' → logprob: -1.8551130294799805
    3. '().' → logprob: -1.9801130294799805
    4. '.strip' → logprob: -2.4801130294799805
    5. '.rstrip' → logprob: -6.6051130294799805
    6. ')' → logprob: -7.1051130294799805
    7. 'split' → logprob: -7.8551130294799805
    8. ' .' → logprob: -8.35511302947998
    9. '.readline' → logprob: -8.85511302947998
    10. 'strip' → logprob: -10.23011302947998

Token 31: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0029179230332374573
    2. '()' → logprob: -6.127917766571045
    3. '())
' → logprob: -8.252918243408203
    4. '('' → logprob: -8.252918243408203
    5. '()))' → logprob: -9.252918243408203
    6. ')' → logprob: -9.377918243408203
    7. '(' → logprob: -10.752918243408203
    8. '())

' → logprob: -12.502918243408203
    9. ' ())' → logprob: -13.127918243408203
    10. '())
' → logprob: -14.002918243408203

Token 32: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' idols' (ID: 175139)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2592650651931763
    2. 'data' → logprob: -2.2592649459838867
    3. ' numbers' → logprob: -2.5092649459838867
    4. ' data' → logprob: -3.1342649459838867
    5. '   ' → logprob: -3.1342649459838867
    6. ' lists' → logprob: -3.2592649459838867
    7. ' items' → logprob: -3.3842649459838867
    8. '    ' → logprob: -3.5092649459838867
    9. 'a' → logprob: -3.6342649459838867
    10. ' graph' → logprob: -3.8842649459838867

Token 34: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03211209550499916
    2. '=[]' → logprob: -3.9071121215820312
    3. '=[' → logprob: -5.282112121582031
    4. ' =' → logprob: -5.657112121582031
    5. '={}' → logprob: -7.032112121582031
    6. '_count' → logprob: -7.282112121582031
    7. '=set' → logprob: -7.782112121582031
    8. '_' → logprob: -8.532112121582031
    9. '_counts' → logprob: -8.782112121582031
    10. '_list' → logprob: -9.032112121582031

Token 35: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051505591720342636
    2. ' for' → logprob: -3.1765055656433105
    3. '   ' → logprob: -5.4265055656433105
    4. '<|end|>' → logprob: -5.5515055656433105
    5. '	for' → logprob: -8.926506042480469
    6. '<|end|>' → logprob: -10.176506042480469
    7. ' ' → logprob: -11.676506042480469
    8. '  ' → logprob: -12.801506042480469
    9. '    ' → logprob: -13.301506042480469
    10. '[' → logprob: -13.551506042480469

Token 36: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1011229008436203
    2. ' for' → logprob: -2.3511228561401367
    3. '<|end|>' → logprob: -7.351122856140137
    4. '	for' → logprob: -8.726122856140137
    5. '   ' → logprob: -9.351122856140137
    6. '[' → logprob: -11.851122856140137
    7. '<|end|>' → logprob: -12.101122856140137
    8. ' ' → logprob: -12.351122856140137
    9. '    ' → logprob: -12.601122856140137
    10. 'while' → logprob: -14.726122856140137

Token 37: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.014868793077766895
    2. '_' → logprob: -4.26486873626709
    3. ' i' → logprob: -7.51486873626709
    4. ' ' → logprob: -9.26486873626709
    5. ' range' → logprob: -9.76486873626709
    6. ' ‌' → logprob: -13.13986873626709
    7. ' ▁' → logprob: -13.38986873626709
    8. ' ' → logprob: -13.63986873626709
    9. '_i' → logprob: -13.76486873626709
    10. ' in' → logprob: -14.13986873626709

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002512285253033042
    2. 'in' → logprob: -6.002512454986572
    3. 'range' → logprob: -11.252511978149414
    4. ' ' → logprob: -11.502511978149414
    5. 'id' → logprob: -12.377511978149414
    6. '	in' → logprob: -12.627511978149414
    7. 'n' → logprob: -12.877511978149414
    8. '  ' → logprob: -13.627511978149414
    9. 'i' → logprob: -14.002511978149414
    10. '```' → logprob: -15.377511978149414

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00034058792516589165
    2. ' range' → logprob: -8.000340461730957
    3. 'ange' → logprob: -12.750340461730957
    4. 'id' → logprob: -13.375340461730957
    5. '	range' → logprob: -15.000340461730957
    6. 'rang' → logprob: -16.000341415405273
    7. '(range' → logprob: -16.250341415405273
    8. '```' → logprob: -17.000341415405273
    9. 'ids' → logprob: -17.625341415405273
    10. '_range' → logprob: -17.625341415405273

Token 40: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.5251239538192749
    2. ' M' → logprob: -1.025123953819275
    3. ' (' → logprob: -3.5251240730285645
    4. '(' → logprob: -4.9001240730285645
    5. '(N' → logprob: -5.5251240730285645
    6. ' range' → logprob: -5.7751240730285645
    7. 'M' → logprob: -5.7751240730285645
    8. ' N' → logprob: -6.1501240730285645
    9. ' ' → logprob: -7.9001240730285645
    10. 'range' → logprob: -10.025123596191406

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011370006250217557
    2. '):
' → logprob: -7.251136779785156
    3. ')' → logprob: -7.876136779785156
    4. ' ):' → logprob: -11.001136779785156
    5. ':' → logprob: -11.251136779785156
    6. '   ' → logprob: -11.376136779785156
    7. '):
' → logprob: -12.376136779785156
    8. '():' → logprob: -14.876136779785156
    9. ')：' → logprob: -15.376136779785156
    10. ']:' → logprob: -16.001136779785156

Token 42: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2821073830127716
    2. ' idols' → logprob: -2.032107353210449
    3. '    ' → logprob: -2.657107353210449
    4. '       ' → logprob: -3.532107353210449
    5. ' ' → logprob: -5.657107353210449
    6. 'id' → logprob: -5.782107353210449
    7. ' id' → logprob: -6.157107353210449
    8. '<|end|>' → logprob: -6.657107353210449
    9. '    
' → logprob: -7.282107353210449
    10. '	   ' → logprob: -7.282107353210449

Token 43: ' name' (ID: 1308)
  Prédit: ' idols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idols' → logprob: -0.04096738249063492
    2. ' ids' → logprob: -4.0409674644470215
    3. 'ids' → logprob: -5.4159674644470215
    4. ' id' → logprob: -5.5409674644470215
    5. ' idol' → logprob: -5.5409674644470215
    6. 'id' → logprob: -5.7909674644470215
    7. ' line' → logprob: -6.5409674644470215
    8. ' data' → logprob: -7.1659674644470215
    9. '   ' → logprob: -7.4159674644470215
    10. 'idol' → logprob: -7.9159674644470215

Token 44: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5865722298622131
    2. '=input' → logprob: -0.8365722298622131
    3. ' =' → logprob: -5.336572170257568
    4. ',' → logprob: -5.961572170257568
    5. ',input' → logprob: -6.211572170257568
    6. '=line' → logprob: -6.961572170257568
    7. '=sys' → logprob: -9.961572647094727
    8. '=list' → logprob: -10.086572647094727
    9. ',line' → logprob: -10.961572647094727
    10. '=name' → logprob: -10.961572647094727

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.029971245676279068
    2. '()' → logprob: -3.5299713611602783
    3. '())' → logprob: -8.5299711227417
    4. ')' → logprob: -11.0299711227417
    5. '()).' → logprob: -13.0299711227417
    6. '()
' → logprob: -13.9049711227417
    7. '(' → logprob: -14.4049711227417
    8. '()?>' → logprob: -14.5299711227417
    9. '()]' → logprob: -14.7799711227417
    10. ' ().' → logprob: -15.5299711227417

Token 46: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011047935113310814
    2. 'rstrip' → logprob: -4.511047840118408
    3. 'split' → logprob: -16.26104736328125
    4. ' strip' → logprob: -17.01104736328125
    5. 'str' → logprob: -18.88604736328125
    6. '```' → logprob: -19.63604736328125
    7. 'rst' → logprob: -19.63604736328125
    8. '_strip' → logprob: -19.76104736328125
    9. '.strip' → logprob: -19.88604736328125
    10. '(strip' → logprob: -20.26104736328125

Token 47: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00041625293670222163
    2. '()
' → logprob: -8.250415802001953
    3. '()\' → logprob: -9.125415802001953
    4. '(' → logprob: -10.500415802001953
    5. '('\' → logprob: -12.125415802001953
    6. '())' → logprob: -12.375415802001953
    7. ')' → logprob: -13.125415802001953
    8. '()
' → logprob: -13.250415802001953
    9. '()

' → logprob: -13.375415802001953
    10. '()`' → logprob: -14.375415802001953

Token 48: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16040243208408356
    2. '\n' → logprob: -1.9104024171829224
    3. ')' → logprob: -9.160402297973633
    4. 'newline' → logprob: -10.035402297973633
    5. ''\' → logprob: -11.660402297973633
    6. '\' → logprob: -12.035402297973633
    7. 'r' → logprob: -12.535402297973633
    8. 'rstrip' → logprob: -13.160402297973633
    9. ')\' → logprob: -13.285402297973633
    10. '"\' → logprob: -13.785402297973633

Token 49: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2559339702129364
    2. ')' → logprob: -1.5059340000152588
    3. '')
' → logprob: -5.63093376159668
    4. ')
' → logprob: -8.25593376159668
    5. '')
' → logprob: -9.38093376159668
    6. '")' → logprob: -10.63093376159668
    7. ''' → logprob: -10.88093376159668
    8. ')
' → logprob: -11.63093376159668
    9. ')\' → logprob: -12.63093376159668
    10. '()' → logprob: -12.75593376159668

Token 50: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6422975063323975
    2. '       ' → logprob: -1.2672975063323975
    3. '<|end|>' → logprob: -1.7672975063323975
    4. '<|end|>' → logprob: -4.892297744750977
    5. 'id' → logprob: -5.142297744750977
    6. ')' → logprob: -6.017297744750977
    7. '
' → logprob: -6.892297744750977
    8. ',' → logprob: -7.142297744750977
    9. '```' → logprob: -7.642297744750977
    10. '    ' → logprob: -7.767297744750977

Token 51: ' C' (ID: 363)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5008342862129211
    2. '   ' → logprob: -1.6258342266082764
    3. 'ids' → logprob: -2.6258342266082764
    4. 'genres' → logprob: -3.6258342266082764
    5. ' idols' → logprob: -4.1258344650268555
    6. 'members' → logprob: -4.2508344650268555
    7. 'answers' → logprob: -5.0008344650268555
    8. 'songs' → logprob: -5.3758344650268555
    9. 'categories' → logprob: -5.6258344650268555
    10. 'idol' → logprob: -5.7508344650268555

Token 52: ',V' (ID: 81155)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=int' → logprob: -1.17452871799469
    2. '=' → logprob: -1.29952871799469
    3. 'ount' → logprob: -1.42452871799469
    4. ' =' → logprob: -2.9245285987854004
    5. 'ont' → logprob: -3.6745285987854004
    6. 'ol' → logprob: -3.9245285987854004
    7. '=input' → logprob: -4.2995285987854
    8. 'ounter' → logprob: -4.9245285987854
    9. '.append' → logprob: -4.9245285987854
    10. 'olor' → logprob: -5.4245285987854

Token 53: ',D' (ID: 61507)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04540885612368584
    2. '=input' → logprob: -3.1704089641571045
    3. '=list' → logprob: -6.920408725738525
    4. '=line' → logprob: -7.420408725738525
    5. '=int' → logprob: -7.545408725738525
    6. ' =' → logprob: -9.045409202575684
    7. 'map' → logprob: -10.420409202575684
    8. '=[]' → logprob: -10.545409202575684
    9. ',map' → logprob: -10.545409202575684
    10. '=[' → logprob: -10.920409202575684

Token 54: ',L' (ID: 68006)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021811923943459988
    2. '=input' → logprob: -6.877181053161621
    3. '=list' → logprob: -7.002181053161621
    4. ' =' → logprob: -9.502181053161621
    5. '=line' → logprob: -9.752181053161621
    6. 'map' → logprob: -9.877181053161621
    7. ',map' → logprob: -10.627181053161621
    8. '=[' → logprob: -11.877181053161621
    9. '=int' → logprob: -12.752181053161621
    10. '=sys' → logprob: -13.127181053161621

Token 55: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0020834049209952354
    2. '=input' → logprob: -6.8770833015441895
    3. '=list' → logprob: -7.2520833015441895
    4. ' =' → logprob: -8.502083778381348
    5. '=[' → logprob: -9.877083778381348
    6. '=line' → logprob: -10.502083778381348
    7. 'map' → logprob: -11.252083778381348
    8. '=[],' → logprob: -11.877083778381348
    9. ',map' → logprob: -12.127083778381348
    10. '=[]' → logprob: -12.377083778381348

Token 56: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.023280655965209007
    2. ' map' → logprob: -3.773280620574951
    3. '	map' → logprob: -10.89828109741211
    4. 'input' → logprob: -11.52328109741211
    5. 'm' → logprob: -12.52328109741211
    6. 'ma' → logprob: -14.14828109741211
    7. 'list' → logprob: -14.39828109741211
    8. ' ' → logprob: -14.89828109741211
    9. ' input' → logprob: -14.89828109741211
    10. '(map' → logprob: -15.14828109741211

Token 57: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002666999935172498
    2. '(' → logprob: -8.375267028808594
    3. 'int' → logprob: -11.125267028808594
    4. '[int' → logprob: -11.875267028808594
    5. '(lambda' → logprob: -12.625267028808594
    6. '<int' → logprob: -12.625267028808594
    7. '=int' → logprob: -12.875267028808594
    8. ' (' → logprob: -13.000267028808594
    9. '(str' → logprob: -13.875267028808594
    10. ',int' → logprob: -14.375267028808594

Token 58: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.001805130043067038
    2. '(input' → logprob: -6.876805305480957
    3. ',' → logprob: -7.251805305480957
    4. ',line' → logprob: -10.751805305480957
    5. ',(' → logprob: -11.126805305480957
    6. 'input' → logprob: -11.126805305480957
    7. '(' → logprob: -11.751805305480957
    8. ')' → logprob: -13.126805305480957
    9. '(),' → logprob: -14.126805305480957
    10. ' input' → logprob: -14.751805305480957

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.292907877039397e-06
    2. '()' → logprob: -12.75000286102295
    3. ' ().' → logprob: -15.50000286102295
    4. '(' → logprob: -16.250003814697266
    5. '.' → logprob: -16.250003814697266
    6. ')' → logprob: -17.875003814697266
    7. '.readline' → logprob: -18.250003814697266
    8. '().'' → logprob: -18.625003814697266
    9. ').' → logprob: -18.750003814697266
    10. '.split' → logprob: -19.125003814697266

Token 60: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013619766104966402
    2. 'strip' → logprob: -9.500136375427246
    3. 'rstrip' → logprob: -9.750136375427246
    4. '(split' → logprob: -13.750136375427246
    5. ' split' → logprob: -14.125136375427246
    6. '().' → logprob: -14.250136375427246
    7. 'spl' → logprob: -14.875136375427246
    8. 's' → logprob: -15.250136375427246
    9. 'plit' → logprob: -17.25013542175293
    10. 'sp' → logprob: -18.00013542175293

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015586383640766144
    2. '()' → logprob: -4.2655863761901855
    3. ')' → logprob: -6.7655863761901855
    4. '())
' → logprob: -8.265586853027344
    5. '(' → logprob: -12.265586853027344
    6. '()
' → logprob: -13.265586853027344
    7. ' ())' → logprob: -13.390586853027344
    8. '()))' → logprob: -13.640586853027344
    9. '())
' → logprob: -14.265586853027344
    10. '())

' → logprob: -14.265586853027344

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03954119607806206
    2. '<|end|>' → logprob: -4.039541244506836
    3. '   ' → logprob: -4.289541244506836
    4. '
' → logprob: -5.664541244506836
    5. '        
' → logprob: -6.414541244506836
    6. ')' → logprob: -7.164541244506836
    7. ',' → logprob: -7.414541244506836
    8. '    
' → logprob: -8.289541244506836
    9. '<|end|>' → logprob: -8.414541244506836
    10. ')
' → logprob: -9.164541244506836

Token 63: ' idols' (ID: 175139)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5198066234588623
    2. '       ' → logprob: -1.1448066234588623
    3. ' idols' → logprob: -3.5198066234588623
    4. '<|end|>' → logprob: -3.7698066234588623
    5. 'id' → logprob: -4.519806861877441
    6. '        
' → logprob: -5.144806861877441
    7. '    
' → logprob: -5.144806861877441
    8. '
' → logprob: -5.644806861877441
    9. ' id' → logprob: -6.519806861877441
    10. ')' → logprob: -6.894806861877441

Token 64: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.2166411478538066e-05
    2. '.' → logprob: -10.000052452087402
    3. '.ap' → logprob: -12.625052452087402
    4. '.app' → logprob: -12.750052452087402
    5. ' .' → logprob: -15.000052452087402
    6. '.extend' → logprob: -16.000051498413086
    7. 'append' → logprob: -17.750051498413086
    8. '.add' → logprob: -18.000051498413086
    9. '.setdefault' → logprob: -18.375051498413086
    10. '.Append' → logprob: -18.750051498413086

Token 65: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0022260257974267006
    2. '(' → logprob: -6.502225875854492
    3. '(name' → logprob: -7.752225875854492
    4. '([' → logprob: -8.502225875854492
    5. '({'' → logprob: -9.502225875854492
    6. '(('' → logprob: -11.627225875854492
    7. '(([' → logprob: -12.877225875854492
    8. '({' → logprob: -13.377225875854492
    9. '({"' → logprob: -14.377225875854492
    10. '({
' → logprob: -14.502225875854492

Token 66: 'C' (ID: 34)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.000837384897749871
    2. ' name' → logprob: -7.375837326049805
    3. 'C' → logprob: -8.500837326049805
    4. '   ' → logprob: -12.625837326049805
    5. ' C' → logprob: -13.375837326049805
    6. ''name' → logprob: -13.625837326049805
    7. 'id' → logprob: -14.375837326049805
    8. '	name' → logprob: -15.250837326049805
    9. ' ' → logprob: -15.875837326049805
    10. '    ' → logprob: -16.250837326049805

Token 67: ',V' (ID: 81155)
  Prédit: ',V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',V' → logprob: -0.3137126863002777
    2. ',' → logprob: -1.3137127161026
    3. ' ,' → logprob: -7.8137125968933105
    4. ',M' → logprob: -11.188713073730469
    5. ',v' → logprob: -11.688713073730469
    6. ',name' → logprob: -12.563713073730469
    7. ',
' → logprob: -12.688713073730469
    8. 'V' → logprob: -12.938713073730469
    9. ',N' → logprob: -13.313713073730469
    10. ',I' → logprob: -13.688713073730469

Token 68: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.005770223215222359
    2. ',' → logprob: -5.255770206451416
    3. 'D' → logprob: -7.880770206451416
    4. ' ,' → logprob: -9.005770683288574
    5. ',d' → logprob: -10.630770683288574
    6. ' ' → logprob: -14.005770683288574
    7. ',,' → logprob: -14.005770683288574
    8. ',L' → logprob: -14.130770683288574
    9. '   ' → logprob: -14.255770683288574
    10. ' D' → logprob: -14.255770683288574

Token 69: ',L' (ID: 68006)
  Prédit: ',L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',L' → logprob: -0.010278459638357162
    2. ',' → logprob: -4.635278224945068
    3. 'L' → logprob: -8.135278701782227
    4. ' ,' → logprob: -8.510278701782227
    5. ' L' → logprob: -11.260278701782227
    6. ',l' → logprob: -11.885278701782227
    7. ',
' → logprob: -13.010278701782227
    8. ',D' → logprob: -15.010278701782227
    9. ',S' → logprob: -15.072778701782227
    10. ',I' → logprob: -15.072778701782227

Token 70: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005452293902635574
    2. ')' → logprob: -5.2554521560668945
    3. '))
' → logprob: -8.505452156066895
    4. ',' → logprob: -12.130452156066895
    5. '   ' → logprob: -12.755452156066895
    6. ')))' → logprob: -12.880452156066895
    7. ' ))' → logprob: -13.005452156066895
    8. ''))' → logprob: -13.630452156066895
    9. ')
' → logprob: -14.630452156066895
    10. '),' → logprob: -14.755452156066895

Token 71: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' dp' (ID: 21546)
  Prédit: 'questions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'questions' → logprob: -2.3654115200042725
    2. 'for' → logprob: -2.4904115200042725
    3. 'answer' → logprob: -2.4904115200042725
    4. '   ' → logprob: -2.6154115200042725
    5. 'answers' → logprob: -2.6154115200042725
    6. 'quiz' → logprob: -3.1154115200042725
    7. 'query' → logprob: -3.4904115200042725
    8. 'team' → logprob: -3.4904115200042725
    9. 'question' → logprob: -3.7404115200042725
    10. 'q' → logprob: -3.8654115200042725

Token 73: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7102178931236267
    2. '=' → logprob: -1.2102179527282715
    3. '=[' → logprob: -1.5852179527282715
    4. '=[]' → logprob: -5.9602179527282715
    5. '=[[' → logprob: -6.7102179527282715
    6. '[' → logprob: -6.8352179527282715
    7. ' =[' → logprob: -7.9602179527282715
    8. '={}' → logprob: -8.835217475891113
    9. '=[
' → logprob: -11.835217475891113
    10. '=np' → logprob: -11.960217475891113

Token 74: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5349108576774597
    2. '[' → logprob: -0.9099108576774597
    3. ' [' → logprob: -5.284910678863525
    4. '[[' → logprob: -5.909910678863525
    5. '[-' → logprob: -6.659910678863525
    6. '(' → logprob: -7.034910678863525
    7. '-' → logprob: -7.159910678863525
    8. 'False' → logprob: -7.909910678863525
    9. ' ' → logprob: -8.659911155700684
    10. '[(' → logprob: -8.784911155700684

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031501807272434235
    2. '-' → logprob: -3.5315017700195312
    3. '(' → logprob: -7.281501770019531
    4. 'float' → logprob: -7.781501770019531
    5. ' ' → logprob: -7.906501770019531
    6. '[' → logprob: -9.781501770019531
    7. ' -' → logprob: -10.281501770019531
    8. '-inf' → logprob: -10.281501770019531
    9. 'False' → logprob: -10.906501770019531
    10. '(-' → logprob: -10.906501770019531

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01457724254578352
    2. ')]' → logprob: -4.889577388763428
    3. ',)' → logprob: -5.139577388763428
    4. ' ,' → logprob: -8.01457691192627
    5. ')' → logprob: -8.13957691192627
    6. ']' → logprob: -9.26457691192627
    7. ' )' → logprob: -9.76457691192627
    8. ']*(' → logprob: -9.88957691192627
    9. '0' → logprob: -10.01457691192627
    10. ',None' → logprob: -10.13957691192627

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17653541266918182
    2. ' ' → logprob: -1.9265353679656982
    3. ')' → logprob: -4.801535606384277
    4. 'float' → logprob: -6.176535606384277
    5. ' float' → logprob: -6.301535606384277
    6. '-' → logprob: -7.051535606384277
    7. ' )' → logprob: -7.926535606384277
    8. '[' → logprob: -8.051535606384277
    9. ' -' → logprob: -8.176535606384277
    10. 'False' → logprob: -8.301535606384277

Token 78: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.052277494221925735
    2. ')' → logprob: -3.1772775650024414
    3. ',' → logprob: -4.802277565002441
    4. ' )' → logprob: -7.802277565002441
    5. ']' → logprob: -7.927277565002441
    6. '0' → logprob: -10.052277565002441
    7. '),(' → logprob: -10.177277565002441
    8. '),' → logprob: -10.427277565002441
    9. ')][' → logprob: -10.427277565002441
    10. ' ' → logprob: -11.052277565002441

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004301814828068018
    2. ' ' → logprob: -6.629302024841309
    3. 'False' → logprob: -7.004302024841309
    4. '-' → logprob: -7.379302024841309
    5. '[' → logprob: -8.004302024841309
    6. ')' → logprob: -8.379302024841309
    7. 'float' → logprob: -8.504302024841309
    8. '[]' → logprob: -8.504302024841309
    9. '[])' → logprob: -9.004302024841309
    10. ')]' → logprob: -10.004302024841309

Token 80: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.09647655487060547
    2. ')' → logprob: -2.7214765548706055
    3. ',' → logprob: -3.7214765548706055
    4. ' )' → logprob: -6.4714765548706055
    5. ']' → logprob: -8.721476554870605
    6. '0' → logprob: -9.471476554870605
    7. ' ,' → logprob: -10.221476554870605
    8. '),' → logprob: -10.471476554870605
    9. '),(' → logprob: -10.596476554870605
    10. ' ' → logprob: -10.846476554870605

Token 81: '*(' (ID: 14793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0029228029306977987
    2. '(M' → logprob: -7.002923011779785
    3. '101' → logprob: -7.252923011779785
    4. ' M' → logprob: -7.502923011779785
    5. '100' → logprob: -7.627923011779785
    6. '1' → logprob: -9.502923011779785
    7. '10' → logprob: -10.252923011779785
    8. '(' → logprob: -10.502923011779785
    9. '   ' → logprob: -10.877923011779785
    10. ' ' → logprob: -11.252923011779785

Token 83: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008186809136532247
    2. ' +' → logprob: -7.125818729400635
    3. '1' → logprob: -11.875818252563477
    4. '+
' → logprob: -12.125818252563477
    5. '+)' → logprob: -14.125818252563477
    6. ')+' → logprob: -15.250818252563477
    7. ')' → logprob: -15.500818252563477
    8. '+

' → logprob: -16.000818252563477
    9. ' +
' → logprob: -16.000818252563477
    10. '0' → logprob: -16.125818252563477

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.500022888183594
    4. '```' → logprob: -15.375022888183594
    5. ')' → logprob: -16.000022888183594
    6. '+' → logprob: -16.250022888183594
    7. '2' → logprob: -16.375022888183594
    8. '  ' → logprob: -16.875022888183594
    9. '    ' → logprob: -17.125022888183594
    10. '[' → logprob: -17.500022888183594

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018612483516335487
    2. ')
' → logprob: -4.018612384796143
    3. ')

' → logprob: -8.3936128616333
    4. ')
' → logprob: -8.5186128616333
    5. ' )' → logprob: -11.5186128616333
    6. ')

' → logprob: -12.6436128616333
    7. '
' → logprob: -12.8936128616333
    8. '```' → logprob: -12.8936128616333
    9. '<|end|>' → logprob: -13.0186128616333
    10. '' → logprob: -13.0186128616333

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04017914459109306
    2. '    
' → logprob: -4.665179252624512
    3. '   ' → logprob: -4.790179252624512
    4. '<|end|>' → logprob: -5.165179252624512
    5. '\n' → logprob: -5.290179252624512
    6. '  
' → logprob: -5.415179252624512
    7. '
' → logprob: -6.540179252624512
    8. ' for' → logprob: -6.790179252624512
    9. 'for' → logprob: -6.915179252624512
    10. ' 
' → logprob: -7.040179252624512

Token 87: ' dp' (ID: 21546)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08619321882724762
    2. '\n' → logprob: -2.836193323135376
    3. '
' → logprob: -5.211193084716797
    4. ' for' → logprob: -5.586193084716797
    5. '    
' → logprob: -5.711193084716797
    6. '  
' → logprob: -5.961193084716797
    7. '' → logprob: -6.086193084716797
    8. ' 
' → logprob: -6.461193084716797
    9. 'for' → logprob: -6.711193084716797
    10. '   ' → logprob: -6.836193084716797

Token 88: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46019303798675537
    2. '=' → logprob: -1.7101930379867554
    3. ' =' → logprob: -1.8351930379867554
    4. '=[' → logprob: -3.585193157196045
    5. ' =[' → logprob: -7.960193157196045
    6. '=[]' → logprob: -8.460192680358887
    7. '[:]' → logprob: -10.710192680358887
    8. '[i' → logprob: -11.710192680358887
    9. '0' → logprob: -11.835192680358887
    10. ',' → logprob: -11.960192680358887

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000421974720666185
    2. ' (' → logprob: -8.625421524047852
    3. '(-' → logprob: -9.000421524047852
    4. '[(' → logprob: -9.500421524047852
    5. '0' → logprob: -10.750421524047852
    6. '[' → logprob: -11.000421524047852
    7. '((' → logprob: -13.875421524047852
    8. '(None' → logprob: -14.000421524047852
    9. 'None' → logprob: -14.375421524047852
    10. ' ' → logprob: -14.500421524047852

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004200324881821871
    2. '(' → logprob: -5.629200458526611
    3. ' ' → logprob: -7.879200458526611
    4. '-' → logprob: -8.879199981689453
    5. ' (' → logprob: -10.504199981689453
    6. ')' → logprob: -11.129199981689453
    7. '   ' → logprob: -11.754199981689453
    8. '(-' → logprob: -12.004199981689453
    9. 'float' → logprob: -12.129199981689453
    10. '[' → logprob: -12.129199981689453

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017648482753429562
    2. ' ,' → logprob: -8.875176429748535
    3. ',)' → logprob: -11.375176429748535
    4. ',
' → logprob: -11.875176429748535
    5. ')' → logprob: -12.000176429748535
    6. '0' → logprob: -12.500176429748535
    7. ')]' → logprob: -13.875176429748535
    8. ' ' → logprob: -14.125176429748535
    9. ',int' → logprob: -14.250176429748535
    10. ',

' → logprob: -14.625176429748535

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003646633995231241
    2. ' ' → logprob: -8.000364303588867
    3. ',' → logprob: -10.875364303588867
    4. ')' → logprob: -12.125364303588867
    5. '1' → logprob: -14.125364303588867
    6. '   ' → logprob: -14.250364303588867
    7. '(' → logprob: -14.500364303588867
    8. '-' → logprob: -14.562864303588867
    9. '  ' → logprob: -14.562864303588867
    10. '    ' → logprob: -14.812864303588867

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002858489751815796
    2. ')]' → logprob: -6.502858638763428
    3. ')' → logprob: -6.877858638763428
    4. ' ,' → logprob: -8.62785816192627
    5. '0' → logprob: -9.87785816192627
    6. ',)' → logprob: -11.00285816192627
    7. ']' → logprob: -11.37785816192627
    8. '   ' → logprob: -11.62785816192627
    9. ' ' → logprob: -11.75285816192627
    10. ',
' → logprob: -12.25285816192627

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001600347168277949
    2. ' ' → logprob: -9.125160217285156
    3. '1' → logprob: -10.625160217285156
    4. ')' → logprob: -11.500160217285156
    5. 'M' → logprob: -12.625160217285156
    6. '-' → logprob: -13.625160217285156
    7. ',' → logprob: -13.875160217285156
    8. '   ' → logprob: -14.062660217285156
    9. '  ' → logprob: -14.062660217285156
    10. '
' → logprob: -14.187660217285156

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41238027811050415
    2. ')]' → logprob: -1.1623802185058594
    3. ']' → logprob: -4.287380218505859
    4. ',)' → logprob: -4.787380218505859
    5. ',' → logprob: -7.037380218505859
    6. '[:]' → logprob: -7.412380218505859
    7. ' if' → logprob: -8.16238021850586
    8. ' for' → logprob: -8.41238021850586
    9. ' )' → logprob: -8.41238021850586
    10. '.copy' → logprob: -8.66238021850586

Token 96: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15165109932422638
    2. 'for' → logprob: -2.52665114402771
    3. ']' → logprob: -3.15165114402771
    4. ')' → logprob: -4.651650905609131
    5. '.copy' → logprob: -6.151650905609131
    6. '[:]' → logprob: -6.276650905609131
    7. ')]' → logprob: -6.651650905609131
    8. ']+' → logprob: -6.776650905609131
    9. ',' → logprob: -7.776650905609131
    10. '
' → logprob: -8.401651382446289

Token 97: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0011755822924897075
    2. '_' → logprob: -6.751175403594971
    3. ' i' → logprob: -12.501175880432129
    4. ' ' → logprob: -13.501175880432129
    5. ' in' → logprob: -16.376174926757812
    6. '_i' → logprob: -16.751174926757812
    7. ' range' → logprob: -18.626174926757812
    8. ' ' → logprob: -19.001174926757812
    9. '_j' → logprob: -19.751174926757812
    10. ' _
' → logprob: -20.251174926757812

Token 98: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6330282092094421
    2. ' in' → logprob: -0.7580282092094421
    3. 'range' → logprob: -8.258028030395508
    4. '<|end|>' → logprob: -9.258028030395508
    5. ' ' → logprob: -10.258028030395508
    6. ' range' → logprob: -10.383028030395508
    7. '```' → logprob: -13.383028030395508
    8. ' xrange' → logprob: -13.633028030395508
    9. '  ' → logprob: -14.383028030395508
    10. '(' → logprob: -14.383028030395508

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12694206833839417
    2. ' range' → logprob: -2.1269421577453613
    3. '	range' → logprob: -11.376941680908203
    4. '(range' → logprob: -13.626941680908203
    5. ' xrange' → logprob: -14.626941680908203
    6. '<|end|>' → logprob: -15.126941680908203
    7. ' ' → logprob: -15.626941680908203
    8. 'rang' → logprob: -16.251941680908203
    9. '_range' → logprob: -16.376941680908203
    10. '[' → logprob: -16.501941680908203

Token 100: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0008947860915213823
    2. '(' → logprob: -7.250895023345947
    3. ' (' → logprob: -8.625894546508789
    4. '(
' → logprob: -12.875894546508789
    5. ' M' → logprob: -13.625894546508789
    6. '<|end|>' → logprob: -14.375894546508789
    7. '(m' → logprob: -15.000894546508789
    8. ')' → logprob: -15.125894546508789
    9. 'M' → logprob: -15.500894546508789
    10. '((' → logprob: -16.00089454650879

Token 101: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.927930654550437e-05
    2. ' +' → logprob: -10.875029563903809
    3. '+
' → logprob: -11.750029563903809
    4. ')]' → logprob: -13.500029563903809
    5. ')' → logprob: -15.000029563903809
    6. ')])' → logprob: -15.000029563903809
    7. '<|end|>' → logprob: -16.500028610229492
    8. '+

' → logprob: -16.625028610229492
    9. '1' → logprob: -16.750028610229492
    10. '＋' → logprob: -17.125028610229492

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '+' → logprob: -12.625009536743164
    3. ' ' → logprob: -12.625009536743164
    4. '```' → logprob: -13.625009536743164
    5. '   ' → logprob: -14.375009536743164
    6. ')' → logprob: -15.625009536743164
    7. '
' → logprob: -16.000009536743164
    8. '-' → logprob: -16.625009536743164
    9. '2' → logprob: -16.625009536743164
    10. '

' → logprob: -17.187509536743164

Token 103: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008633476682007313
    2. ']' → logprob: -5.008633613586426
    3. ')' → logprob: -6.258633613586426
    4. ')],' → logprob: -14.758633613586426
    5. ')])' → logprob: -15.008633613586426
    6. '}]' → logprob: -15.258633613586426
    7. ' ]' → logprob: -15.383633613586426
    8. '])' → logprob: -15.383633613586426
    9. '])]' → logprob: -15.633633613586426
    10. '`]' → logprob: -15.883633613586426

Token 104: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19464507699012756
    2. '   ' → logprob: -2.3196451663970947
    3. ' for' → logprob: -2.5696451663970947
    4. '    
' → logprob: -6.694644927978516
    5. '<|end|>' → logprob: -7.944644927978516
    6. '
' → logprob: -8.569644927978516
    7. ' 
' → logprob: -9.819644927978516
    8. '	for' → logprob: -10.194644927978516
    9. '  
' → logprob: -10.444644927978516
    10. ' ' → logprob: -10.694644927978516

Token 105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03684220463037491
    2. ' for' → logprob: -3.411842107772827
    3. '   ' → logprob: -5.911842346191406
    4. '    
' → logprob: -8.786842346191406
    5. '<|end|>' → logprob: -9.161842346191406
    6. '
' → logprob: -9.411842346191406
    7. '1' → logprob: -10.161842346191406
    8. ')' → logprob: -10.911842346191406
    9. '```' → logprob: -11.161842346191406
    10. ' 
' → logprob: -11.286842346191406

Token 106: ' C' (ID: 363)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08365778625011444
    2. ' C' → logprob: -2.583657741546631
    3. 'i' → logprob: -6.583657741546631
    4. ' c' → logprob: -6.583657741546631
    5. ' idol' → logprob: -7.333657741546631
    6. 'C' → logprob: -7.833657741546631
    7. ' _' → logprob: -7.833657741546631
    8. ' ' → logprob: -8.583658218383789
    9. ' idx' → logprob: -8.833658218383789
    10. ' id' → logprob: -10.208658218383789

Token 107: ',V' (ID: 81155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4327903687953949
    2. ' in' → logprob: -1.1827903985977173
    3. ',V' → logprob: -3.1827902793884277
    4. ',L' → logprob: -6.307790279388428
    5. ' ,' → logprob: -7.307790279388428
    6. ',M' → logprob: -8.432790756225586
    7. ',v' → logprob: -8.932790756225586
    8. ' V' → logprob: -9.432790756225586
    9. 'in' → logprob: -9.557790756225586
    10. ',i' → logprob: -9.807790756225586

Token 108: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.1322953999042511
    2. ',' → logprob: -2.2572953701019287
    3. ',L' → logprob: -4.007295608520508
    4. ',V' → logprob: -7.382295608520508
    5. ',d' → logprob: -8.632295608520508
    6. ' ,' → logprob: -8.757295608520508
    7. ' in' → logprob: -9.757295608520508
    8. ',_' → logprob: -10.382295608520508
    9. ',i' → logprob: -11.257295608520508
    10. 'D' → logprob: -12.007295608520508

Token 109: ',L' (ID: 68006)
  Prédit: ',L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',L' → logprob: -0.02160840854048729
    2. ',' → logprob: -3.896608352661133
    3. ' in' → logprob: -8.646608352661133
    4. 'L' → logprob: -8.646608352661133
    5. ',V' → logprob: -8.771608352661133
    6. ',i' → logprob: -9.021608352661133
    7. ' ,' → logprob: -9.021608352661133
    8. ',l' → logprob: -9.146608352661133
    9. ',D' → logprob: -10.021608352661133
    10. ',_' → logprob: -10.021608352661133

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015133601613342762
    2. 'in' → logprob: -4.265133380889893
    3. ',' → logprob: -7.015133380889893
    4. ',in' → logprob: -11.26513385772705
    5. ' ,' → logprob: -11.51513385772705
    6. ')' → logprob: -11.51513385772705
    7. '  ' → logprob: -12.01513385772705
    8. '   ' → logprob: -12.14013385772705
    9. ' ' → logprob: -12.39013385772705
    10. 'n' → logprob: -12.89013385772705

Token 111: ' idols' (ID: 175139)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00019209683523513377
    2. ' idols' → logprob: -9.000191688537598
    3. 'idol' → logprob: -10.125191688537598
    4. ' id' → logprob: -11.250191688537598
    5. '   ' → logprob: -12.000191688537598
    6. 'ids' → logprob: -12.125191688537598
    7. 'idl' → logprob: -13.875191688537598
    8. '(id' → logprob: -14.750191688537598
    9. '[id' → logprob: -14.750191688537598
    10. ' idol' → logprob: -15.250191688537598

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009287334396503866
    2. ':
' → logprob: -7.00092887878418
    3. ',' → logprob: -12.25092887878418
    4. '):' → logprob: -12.37592887878418
    5. ' :' → logprob: -12.50092887878418
    6. '   ' → logprob: -13.37592887878418
    7. ':

' → logprob: -14.00092887878418
    8. '<|end|>' → logprob: -14.25092887878418
    9. '       ' → logprob: -14.75092887878418
    10. '):
' → logprob: -15.37592887878418

Token 113: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37693148851394653
    2. '<|end|>' → logprob: -1.6269314289093018
    3. '       ' → logprob: -2.5019314289093018
    4. ' ' → logprob: -4.251931667327881
    5. '    ' → logprob: -5.126931667327881
    6. '   ' → logprob: -5.876931667327881
    7. ',' → logprob: -6.001931667327881
    8. ' :' → logprob: -6.251931667327881
    9. '<|end|>' → logprob: -6.251931667327881
    10. '        ' → logprob: -6.751931667327881

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04801648110151291
    2. 'for' (adapté à ' for') → logprob: -3.2980165481567383
    3. '    ' → logprob: -5.298016548156738
    4. '	for' → logprob: -6.423016548156738
    5. '   ' → logprob: -6.798016548156738
    6. '<|end|>' → logprob: -7.048016548156738
    7. '       ' → logprob: -7.548016548156738
    8. ' 
' → logprob: -9.048016548156738
    9. 'space' → logprob: -9.048016548156738
    10. '
' → logprob: -9.423016548156738

Token 115: ' cost' (ID: 3097)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6770710349082947
    2. ' j' → logprob: -1.1770710945129395
    3. ' w' → logprob: -2.4270710945129395
    4. 'w' → logprob: -2.8020710945129395
    5. 'm' → logprob: -3.8020710945129395
    6. ' m' → logprob: -5.4270710945129395
    7. 'i' → logprob: -6.3020710945129395
    8. 'c' → logprob: -6.5520710945129395
    9. ' c' → logprob: -6.8020710945129395
    10. ' i' → logprob: -7.1770710945129395

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005249648820608854
    2. 'in' → logprob: -5.255249500274658
    3. 's' → logprob: -12.255249977111816
    4. '	in' → logprob: -12.505249977111816
    5. ' ' → logprob: -12.880249977111816
    6. 'range' → logprob: -13.505249977111816
    7. '```' → logprob: -14.255249977111816
    8. '_in' → logprob: -14.505249977111816
    9. '  ' → logprob: -15.380249977111816
    10. '   ' → logprob: -15.380249977111816

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132619559764862
    2. ' range' → logprob: -1.3132619857788086
    3. '	range' → logprob: -16.063261032104492
    4. '(range' → logprob: -17.063261032104492
    5. ' ' → logprob: -17.188261032104492
    6. 're' → logprob: -17.688261032104492
    7. '   ' → logprob: -17.938261032104492
    8. 'rang' → logprob: -18.313261032104492
    9. ' reversed' → logprob: -18.938261032104492
    10. 'reverse' → logprob: -19.188261032104492

Token 118: '(C' (ID: 5559)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0010359067237004638
    2. 'C' → logprob: -6.876035690307617
    3. 'L' → logprob: -13.001035690307617
    4. ' M' → logprob: -14.001035690307617
    5. 'D' → logprob: -18.376035690307617
    6. '(M' → logprob: -18.501035690307617
    7. '   ' → logprob: -18.626035690307617
    8. '(C' → logprob: -18.876035690307617
    9. 'm' → logprob: -19.126035690307617
    10. '	M' → logprob: -19.126035690307617

Token 119: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20182611048221588
    2. ',M' → logprob: -1.7018260955810547
    3. ' ,' → logprob: -7.826826095581055
    4. ',
' → logprob: -12.326826095581055
    5. ',m' → logprob: -12.951826095581055
    6. 'M' → logprob: -13.326826095581055
    7. '，' → logprob: -13.451826095581055
    8. ' M' → logprob: -14.076826095581055
    9. '   ' → logprob: -14.701826095581055
    10. ',N' → logprob: -15.076826095581055

Token 120: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06424656510353088
    2. ' -' → logprob: -3.189246654510498
    3. '-C' → logprob: -4.314246654510498
    4. ' +' → logprob: -5.564246654510498
    5. '-' → logprob: -5.689246654510498
    6. '+C' → logprob: -8.93924617767334
    7. ',' → logprob: -9.31424617767334
    8. ' ' → logprob: -10.06424617767334
    9. '-V' → logprob: -10.31424617767334
    10. '
' → logprob: -10.43924617767334

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.62501049041748
    3. '-' → logprob: -14.12501049041748
    4. '
' → logprob: -15.75001049041748
    5. '   ' → logprob: -16.000009536743164
    6. ' -' → logprob: -16.500009536743164
    7. ')' → logprob: -17.500009536743164
    8. '```' → logprob: -17.750009536743164
    9. '

' → logprob: -18.250009536743164
    10. ',' → logprob: -18.375009536743164

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07070145756006241
    2. ',' → logprob: -2.8207013607025146
    3. '):
' → logprob: -5.195701599121094
    4. ' ):' → logprob: -6.070701599121094
    5. ')' → logprob: -8.070701599121094
    6. ':' → logprob: -8.320701599121094
    7. ' ,' → logprob: -8.820701599121094
    8. '):

' → logprob: -9.695701599121094
    9. '):(' → logprob: -11.070701599121094
    10. ' ):
' → logprob: -11.445701599121094

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12285222858190536
    2. '       ' → logprob: -2.872852325439453
    3. '<|end|>' → logprob: -3.247852325439453
    4. ',' → logprob: -5.247852325439453
    5. '            
' → logprob: -5.997852325439453
    6. '	       ' → logprob: -6.122852325439453
    7. '        
' → logprob: -6.247852325439453
    8. ':' → logprob: -6.247852325439453
    9. '<|end|>' → logprob: -6.622852325439453
    10. '   ' → logprob: -6.747852325439453

Token 124: ' v' (ID: 323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44833794236183167
    2. 'prev' → logprob: -1.4483379125595093
    3. 'a' → logprob: -3.448338031768799
    4. 'old' → logprob: -3.948338031768799
    5. 'dp' → logprob: -4.073338031768799
    6. 'v' (adapté à ' v') → logprob: -4.573338031768799
    7. 'cv' → logprob: -4.698338031768799
    8. 'new' → logprob: -5.073338031768799
    9. 'curr' → logprob: -5.323338031768799
    10. 'c' → logprob: -5.823338031768799

Token 125: '_,' (ID: 14152)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.1012303829193115
    2. ',' → logprob: -1.3512303829193115
    3. 'alue' → logprob: -1.6012303829193115
    4. '=' → logprob: -3.3512303829193115
    5. ',v' → logprob: -3.3512303829193115
    6. ',C' → logprob: -3.7262303829193115
    7. ',c' → logprob: -3.9762303829193115
    8. ',V' → logprob: -3.9762303829193115
    9. '   ' → logprob: -4.726230621337891
    10. 'dp' → logprob: -4.851230621337891

Token 126: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.022766901180148125
    2. 'dp' → logprob: -4.397767066955566
    3. 'v' → logprob: -5.147767066955566
    4. 'c' → logprob: -7.022767066955566
    5. 'vl' → logprob: -7.147767066955566
    6. 'p' → logprob: -7.397767066955566
    7. 'l' → logprob: -7.522767066955566
    8. ' d' → logprob: -8.272767066955566
    9. 'vd' → logprob: -8.397767066955566
    10. 'w' → logprob: -8.772767066955566

Token 127: '_,' (ID: 14152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5543862581253052
    2. ',v' → logprob: -1.4293862581253052
    3. ',l' → logprob: -1.8043862581253052
    4. ',d' → logprob: -4.054386138916016
    5. ',p' → logprob: -5.804386138916016
    6. ',c' → logprob: -7.929386138916016
    7. '_,' → logprob: -8.679386138916016
    8. ',w' → logprob: -8.804386138916016
    9. ',s' → logprob: -9.804386138916016
    10. ',val' → logprob: -9.804386138916016

Token 128: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000422570708906278
    2. ' l' → logprob: -7.875422477722168
    3. '_' → logprob: -11.375422477722168
    4. ' ' → logprob: -11.875422477722168
    5. '```' → logprob: -12.000422477722168
    6. 'c' → logprob: -12.125422477722168
    7. '   ' → logprob: -13.250422477722168
    8. '_l' → logprob: -13.500422477722168
    9. 'n' → logprob: -13.750422477722168
    10. 'v' → logprob: -13.875422477722168

Token 129: '_=' (ID: 115480)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015892064198851585
    2. ' =' → logprob: -4.265892028808594
    3. '=v' → logprob: -7.140892028808594
    4. ',' → logprob: -7.265892028808594
    5. ',v' → logprob: -8.890892028808594
    6. '=(' → logprob: -11.140892028808594
    7. '=d' → logprob: -11.140892028808594
    8. '=_' → logprob: -11.765892028808594
    9. '_=' → logprob: -12.015892028808594
    10. '=int' → logprob: -12.140892028808594

Token 130: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.64839569455944e-05
    2. ' dp' → logprob: -9.500076293945312
    3. 'max' → logprob: -13.625076293945312
    4. '   ' → logprob: -15.875076293945312
    5. '	dp' → logprob: -16.000076293945312
    6. '(dp' → logprob: -17.000076293945312
    7. '0' → logprob: -17.500076293945312
    8. 'd' → logprob: -17.750076293945312
    9. ' ' → logprob: -18.375076293945312
    10. '(' → logprob: -19.000076293945312

Token 131: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.7697225252486533e-06
    2. 'cost' → logprob: -12.625003814697266
    3. '[' → logprob: -16.000003814697266
    4. '[
' → logprob: -16.000003814697266
    5. '/c' → logprob: -16.500003814697266
    6. 'c' → logprob: -16.875003814697266
    7. '```' → logprob: -17.625003814697266
    8. '\[' → logprob: -17.875003814697266
    9. '(cost' → logprob: -18.000003814697266
    10. '[-' → logprob: -18.875003814697266

Token 132: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -1.9361264946837764e-07
    2. 'cost' → logprob: -16.625
    3. '```' → logprob: -18.5
    4. 'ост' → logprob: -18.75
    5. 'o' → logprob: -18.875
    6. '_cost' → logprob: -19.75
    7. '(cost' → logprob: -19.75
    8. '-' → logprob: -19.875
    9. ' ost' → logprob: -20.0
    10. 'os' → logprob: -20.875

Token 133: '-C' (ID: 10050)
  Prédit: '-C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.5652531385421753
    2. ' -' → logprob: -0.9402531385421753
    3. '-' → logprob: -3.190253257751465
    4. ')' → logprob: -9.815253257751465
    5. '-
' → logprob: -11.815253257751465
    6. ']' → logprob: -12.190253257751465
    7. ' ' → logprob: -12.190253257751465
    8. ' C' → logprob: -12.940253257751465
    9. 's' → logprob: -13.440253257751465
    10. 'C' → logprob: -13.440253257751465

Token 134: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016195891425013542
    2. ']
' → logprob: -4.141195774078369
    3. ')' → logprob: -9.141196250915527
    4. ']
' → logprob: -10.766196250915527
    5. '][' → logprob: -11.516196250915527
    6. ')]' → logprob: -12.266196250915527
    7. ']

' → logprob: -12.391196250915527
    8. '])' → logprob: -12.641196250915527
    9. '       ' → logprob: -12.641196250915527
    10. ')
' → logprob: -13.766196250915527

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5742419958114624
    2. '<|end|>' → logprob: -2.074242115020752
    3. 'if' → logprob: -2.449242115020752
    4. '
' → logprob: -2.574242115020752
    5. '            
' → logprob: -2.824242115020752
    6. '       ' → logprob: -3.199242115020752
    7. 'v' → logprob: -4.449242115020752
    8. '        
' → logprob: -5.074242115020752
    9. ' if' → logprob: -5.199242115020752
    10. ',' → logprob: -5.324242115020752

Token 136: ' nv' (ID: 68641)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.122068166732788
    2. '           ' → logprob: -1.247068166732788
    3. 'new' → logprob: -1.622068166732788
    4. 'v' → logprob: -1.872068166732788
    5. ' if' → logprob: -4.372068405151367
    6. 'candidate' → logprob: -4.997068405151367
    7. 'dp' → logprob: -5.872068405151367
    8. 'curr' → logprob: -5.872068405151367
    9. 'current' → logprob: -6.247068405151367
    10. 'nv' (adapté à ' nv') → logprob: -6.622068405151367

Token 137: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5185277462005615
    2. ',v' → logprob: -1.2685277462005615
    3. '=' → logprob: -2.3935277462005615
    4. ' =' → logprob: -4.268527984619141
    5. ',n' → logprob: -4.268527984619141
    6. ',d' → logprob: -6.268527984619141
    7. ',l' → logprob: -7.518527984619141
    8. '=v' → logprob: -7.643527984619141
    9. '=n' → logprob: -8.64352798461914
    10. ',
' → logprob: -9.01852798461914

Token 138: 'l' (ID: 75)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07167840749025345
    2. ',v' → logprob: -2.946678400039673
    3. ',' → logprob: -4.446678638458252
    4. '=' → logprob: -5.696678638458252
    5. '=v' → logprob: -7.196678638458252
    6. ',n' → logprob: -8.071678161621094
    7. ' =' → logprob: -8.446678161621094
    8. 'ew' → logprob: -10.446678161621094
    9. ',d' → logprob: -10.446678161621094
    10. 'd' → logprob: -10.571678161621094

Token 139: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2632954120635986
    2. ',v' → logprob: -1.3882954120635986
    3. ',' → logprob: -1.7632954120635986
    4. ' =' → logprob: -1.8882954120635986
    5. '=v' → logprob: -2.1382954120635986
    6. ',n' → logprob: -4.0132951736450195
    7. '=n' → logprob: -5.0132951736450195
    8. 'v' → logprob: -7.1382951736450195
    9. ',d' → logprob: -7.5132951736450195
    10. '=
' → logprob: -8.63829517364502

Token 140: 'nd' (ID: 301)
  Prédit: 'vd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vd' → logprob: -0.4827236831188202
    2. '=' → logprob: -1.7327237129211426
    3. 'vl' → logprob: -2.4827237129211426
    4. 'v' → logprob: -2.4827237129211426
    5. 'nd' → logprob: -4.357723712921143
    6. 'd' → logprob: -4.482723712921143
    7. ' =' → logprob: -4.607723712921143
    8. ' vd' → logprob: -6.232723712921143
    9. 'dl' → logprob: -7.857723712921143
    10. '=v' → logprob: -8.232723236083984

Token 141: '=v' (ID: 89140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021432342007756233
    2. ' =' → logprob: -4.271432399749756
    3. '=v' → logprob: -5.146432399749756
    4. '=
' → logprob: -7.146432399749756
    5. '=(' → logprob: -7.521432399749756
    6. '=n' → logprob: -10.646431922912598
    7. '=

' → logprob: -11.146431922912598
    8. '=int' → logprob: -11.521431922912598
    9. '=max' → logprob: -12.521431922912598
    10. '=np' → logprob: -12.521431922912598

Token 142: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3144044578075409
    2. '_,' → logprob: -1.4394044876098633
    3. '+' → logprob: -3.8144044876098633
    4. 'l' → logprob: -5.189404487609863
    5. '_[' → logprob: -6.439404487609863
    6. '[v' → logprob: -7.814404487609863
    7. '+,' → logprob: -7.814404487609863
    8. '[' → logprob: -8.814404487609863
    9. ' +' → logprob: -8.939404487609863
    10. ',v' → logprob: -8.939404487609863

Token 143: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007330321241170168
    2. ' +' → logprob: -7.875732898712158
    3. '+d' → logprob: -8.875733375549316
    4. '+D' → logprob: -9.500733375549316
    5. '+l' → logprob: -9.875733375549316
    6. '+
' → logprob: -10.125733375549316
    7. '+C' → logprob: -11.250733375549316
    8. '+,' → logprob: -11.625733375549316
    9. '<|end|>' → logprob: -11.625733375549316
    10. 'V' → logprob: -12.375733375549316

Token 144: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00032378386822529137
    2. ' V' → logprob: -8.625324249267578
    3. 'D' → logprob: -9.125324249267578
    4. '
' → logprob: -11.250324249267578
    5. 'L' → logprob: -12.125324249267578
    6. 'C' → logprob: -12.500324249267578
    7. '   ' → logprob: -12.875324249267578
    8. 'v' → logprob: -13.000324249267578
    9. '	V' → logprob: -13.000324249267578
    10. ' ' → logprob: -13.875324249267578

Token 145: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48252731561660767
    2. ',d' → logprob: -0.9825273156166077
    3. ',l' → logprob: -4.982527256011963
    4. ',v' → logprob: -7.107527256011963
    5. ',n' → logprob: -7.857527256011963
    6. ',D' → logprob: -8.482527732849121
    7. ' ,' → logprob: -9.982527732849121
    8. ',
' → logprob: -10.482527732849121
    9. ',max' → logprob: -11.482527732849121
    10. ',L' → logprob: -11.482527732849121

Token 146: '_' (ID: 62)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003748533083125949
    2. '+D' → logprob: -5.753748416900635
    3. ' +' → logprob: -7.628748416900635
    4. '<|end|>' → logprob: -9.878748893737793
    5. '+l' → logprob: -11.128748893737793
    6. '+C' → logprob: -11.753748893737793
    7. '+d' → logprob: -12.003748893737793
    8. '+
' → logprob: -13.378748893737793
    9. ',' → logprob: -14.628748893737793
    10. '+,' → logprob: -15.253748893737793

Token 147: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05493171140551567
    2. '+D' → logprob: -2.929931640625
    3. ' +' → logprob: -10.929931640625
    4. '+C' → logprob: -11.054931640625
    5. '+d' → logprob: -11.679931640625
    6. '<|end|>' → logprob: -13.054931640625
    7. '+l' → logprob: -13.429931640625
    8. '+
' → logprob: -13.929931640625
    9. '+n' → logprob: -14.554931640625
    10. 'D' → logprob: -14.554931640625

Token 148: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00022594700567424297
    2. 'D' → logprob: -8.750226020812988
    3. ' L' → logprob: -9.625226020812988
    4. '<|end|>' → logprob: -14.000226020812988
    5. '>L' → logprob: -15.875226020812988
    6. 'C' → logprob: -16.125225067138672
    7. '	L' → logprob: -16.500225067138672
    8. '
' → logprob: -16.875225067138672
    9. '1' → logprob: -17.000225067138672
    10. ' ' → logprob: -17.125225067138672

Token 149: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.009545461274683475
    2. ',' → logprob: -5.13454532623291
    3. 'd' → logprob: -5.88454532623291
    4. ',D' → logprob: -7.88454532623291
    5. ',v' → logprob: -8.13454532623291
    6. ' ,' → logprob: -10.00954532623291
    7. ',n' → logprob: -10.13454532623291
    8. ' d' → logprob: -10.63454532623291
    9. ',V' → logprob: -11.00954532623291
    10. 'D' → logprob: -11.88454532623291

Token 150: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22552944719791412
    2. '+' → logprob: -1.600529432296753
    3. '<|end|>' → logprob: -9.975529670715332
    4. '_^(' → logprob: -10.975529670715332
    5. ' +' → logprob: -11.350529670715332
    6. '+D' → logprob: -11.350529670715332
    7. '_'+' → logprob: -12.100529670715332
    8. '__' → logprob: -12.975529670715332
    9. '+
' → logprob: -13.350529670715332
    10. '_=' → logprob: -13.350529670715332

Token 151: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023389777168631554
    2. '+D' → logprob: -3.7733898162841797
    3. ' +' → logprob: -9.27338981628418
    4. '+d' → logprob: -10.89838981628418
    5. '+
' → logprob: -11.14838981628418
    6. '_' → logprob: -12.02338981628418
    7. '<|end|>' → logprob: -12.02338981628418
    8. '+C' → logprob: -13.89838981628418
    9. '+

' → logprob: -14.64838981628418
    10. '+=' → logprob: -14.77338981628418

Token 152: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -6.515961285913363e-05
    2. '<|end|>' → logprob: -10.250064849853516
    3. ' D' → logprob: -10.750064849853516
    4. '
' → logprob: -13.125064849853516
    5. 'C' → logprob: -13.250064849853516
    6. 'V' → logprob: -14.125064849853516
    7. ' ' → logprob: -14.125064849853516
    8. '>D' → logprob: -14.500064849853516
    9. 'd' → logprob: -14.875064849853516
    10. '+' → logprob: -15.125064849853516

Token 153: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7156816720962524
    2. ')' → logprob: -1.5906816720962524
    3. '<|end|>' → logprob: -1.7156816720962524
    4. '           ' → logprob: -2.715681552886963
    5. 'if' → logprob: -4.090681552886963
    6. '
' → logprob: -4.590681552886963
    7. ' 
' → logprob: -5.340681552886963
    8. ' ' → logprob: -5.465681552886963
    9. ',' → logprob: -5.590681552886963
    10. '   ' → logprob: -5.715681552886963

Token 154: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' old' (ID: 2890)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: '=' (ID: 28)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.08301901817321777
    2. '_val' → logprob: -3.7080190181732178
    3. '=' → logprob: -3.8330190181732178
    4. '_value' → logprob: -4.083019256591797
    5. '_' → logprob: -5.083019256591797
    6. 'v' → logprob: -5.208019256591797
    7. ' =' → logprob: -5.833019256591797
    8. '_=' → logprob: -7.583019256591797
    9. '_dp' → logprob: -8.208019256591797
    10. 'V' → logprob: -8.458019256591797

Token 157: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.1689596148207784e-05
    2. ' dp' → logprob: -9.875051498413086
    3. '	dp' → logprob: -16.500051498413086
    4. '   ' → logprob: -18.875051498413086
    5. '(dp' → logprob: -19.000051498413086
    6. '
' → logprob: -20.125051498413086
    7. 'd' → logprob: -20.750051498413086
    8. '           ' → logprob: -21.375051498413086
    9. '_dp' → logprob: -21.375051498413086
    10. 'df' → logprob: -21.375051498413086

Token 158: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00016063073417171836
    2. 'cost' → logprob: -8.750160217285156
    3. '(cost' → logprob: -14.375160217285156
    4. 'c' → logprob: -15.000160217285156
    5. '[
' → logprob: -15.000160217285156
    6. '[' → logprob: -15.250160217285156
    7. ' cost' → logprob: -15.375160217285156
    8. '```' → logprob: -15.625160217285156
    9. '/c' → logprob: -16.500160217285156
    10. '
' → logprob: -16.875160217285156

Token 159: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -3.106736039626412e-05
    2. 'cost' → logprob: -10.750031471252441
    3. ' ost' → logprob: -12.500031471252441
    4. 'o' → logprob: -12.750031471252441
    5. 'os' → logprob: -14.500031471252441
    6. 'st' → logprob: -14.625031471252441
    7. '```' → logprob: -15.000031471252441
    8. 'ост' → logprob: -15.750031471252441
    9. 'osti' → logprob: -15.875031471252441
    10. '[' → logprob: -15.875031471252441

Token 160: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07075709849596024
    2. ']
' → logprob: -2.6957571506500244
    3. ')' → logprob: -7.945756912231445
    4. ']

' → logprob: -8.320756912231445
    5. '<|end|>' → logprob: -9.070756912231445
    6. '](' → logprob: -10.445756912231445
    7. ')
' → logprob: -10.570756912231445
    8. '           ' → logprob: -11.070756912231445
    9. ']
' → logprob: -11.820756912231445
    10. '<|end|>' → logprob: -11.945756912231445

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10752876847982407
    2. '<|end|>' → logprob: -2.3575286865234375
    3. '<|end|>' → logprob: -5.9825286865234375
    4. ')' → logprob: -6.9825286865234375
    5. ' if' → logprob: -7.3575286865234375
    6. '       ' → logprob: -7.3575286865234375
    7. '            
' → logprob: -7.6075286865234375
    8. 'if' → logprob: -7.9825286865234375
    9. '          ' → logprob: -8.357528686523438
    10. '=' → logprob: -8.482528686523438

Token 162: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5291565656661987
    2. ' if' → logprob: -1.4041565656661987
    3. 'if' (adapté à ' if') → logprob: -2.0291566848754883
    4. '<|end|>' → logprob: -4.904156684875488
    5. '            
' → logprob: -4.904156684875488
    6. ')' → logprob: -5.529156684875488
    7. '
' → logprob: -5.529156684875488
    8. '=' → logprob: -6.029156684875488
    9. '[' → logprob: -6.404156684875488
    10. '<|end|>' → logprob: -6.779156684875488

Token 163: ' max' (ID: 2999)
  Prédit: ' nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nv' → logprob: -0.5549232363700867
    2. 'nv' → logprob: -1.3049232959747314
    3. '(n' → logprob: -2.0549232959747314
    4. ' (' → logprob: -4.179923057556152
    5. '(nd' → logprob: -5.179923057556152
    6. '(' → logprob: -6.554923057556152
    7. ' nd' → logprob: -6.679923057556152
    8. '(v' → logprob: -7.179923057556152
    9. 'nd' → logprob: -7.429923057556152
    10. '(old' → logprob: -7.804923057556152

Token 164: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06356395035982132
    2. '(old' → logprob: -3.0635640621185303
    3. '(nd' → logprob: -5.188563823699951
    4. '(' → logprob: -6.063563823699951
    5. '((' → logprob: -6.063563823699951
    6. 'old' → logprob: -6.188563823699951
    7. '([' → logprob: -6.938563823699951
    8. 'nv' → logprob: -8.06356430053711
    9. '[n' → logprob: -8.56356430053711
    10. '(dp' → logprob: -8.56356430053711

Token 165: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001325837685726583
    2. 'nv' → logprob: -7.751325607299805
    3. '_nv' → logprob: -8.126325607299805
    4. '(n' → logprob: -8.251325607299805
    5. 'old' → logprob: -9.626325607299805
    6. '[n' → logprob: -10.251325607299805
    7. '_v' → logprob: -10.501325607299805
    8. 'd' → logprob: -10.626325607299805
    9. 'av' → logprob: -10.876325607299805
    10. ' nv' → logprob: -11.001325607299805

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1802399903535843
    2. ',n' → logprob: -1.9302400350570679
    3. ',d' → logprob: -4.555240154266357
    4. ',v' → logprob: -5.305240154266357
    5. ',max' → logprob: -6.430240154266357
    6. ' ,' → logprob: -7.055240154266357
    7. ',l' → logprob: -7.805240154266357
    8. ',new' → logprob: -8.3052396774292
    9. ')' → logprob: -8.4302396774292
    10. '[' → logprob: -8.5552396774292

Token 167: 'nd' (ID: 301)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.03837572783231735
    2. ' old' → logprob: -4.0383758544921875
    3. 'nd' → logprob: -4.9133758544921875
    4. 'nl' → logprob: -5.0383758544921875
    5. 'nv' → logprob: -6.5383758544921875
    6. 'max' → logprob: -6.6633758544921875
    7. ' nv' → logprob: -6.9133758544921875
    8. ' nd' → logprob: -6.9133758544921875
    9. ' nl' → logprob: -7.5383758544921875
    10. ' max' → logprob: -8.038375854492188

Token 168: ',n' (ID: 18103)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043479930609464645
    2. ')>' → logprob: -3.2934799194335938
    3. ',' → logprob: -5.418479919433594
    4. ' )' → logprob: -7.293479919433594
    5. ',n' → logprob: -9.543479919433594
    6. ')==' → logprob: -9.793479919433594
    7. ' ,' → logprob: -10.293479919433594
    8. ',)' → logprob: -10.543479919433594
    9. ')+' → logprob: -11.418479919433594
    10. '),' → logprob: -11.418479919433594

Token 169: 'l' (ID: 75)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.017562221735715866
    2. 'l' → logprob: -4.642562389373779
    3. 'w' → logprob: -5.142562389373779
    4. 'd' → logprob: -6.892562389373779
    5. ')' → logprob: -8.392561912536621
    6. 'old' → logprob: -8.517561912536621
    7. 'vl' → logprob: -9.642561912536621
    8. '>' → logprob: -9.642561912536621
    9. '[v' → logprob: -9.892561912536621
    10. '_v' → logprob: -9.892561912536621

Token 170: ')>' (ID: 37292)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05635561794042587
    2. ')>' → logprob: -2.9313557147979736
    3. ' )' → logprob: -6.5563554763793945
    4. '>' → logprob: -10.556355476379395
    5. '>)' → logprob: -11.681355476379395
    6. ' >' → logprob: -12.431355476379395
    7. ')>
' → logprob: -13.181355476379395
    8. ')
' → logprob: -13.181355476379395
    9. ')>=' → logprob: -13.681355476379395
    10. ' ' → logprob: -13.931355476379395

Token 171: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0011705794604495168
    2. ' max' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.25117015838623
    4. '   ' → logprob: -17.001171112060547
    5. '  ' → logprob: -17.126171112060547
    6. '=max' → logprob: -17.126171112060547
    7. 'min' → logprob: -17.876171112060547
    8. '0' → logprob: -18.001171112060547
    9. '
' → logprob: -18.251171112060547
    10. '(max' → logprob: -18.876171112060547

Token 172: '(old' (ID: 38325)
  Prédit: '(old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(old' → logprob: -0.0420963317155838
    2. 'old' → logprob: -3.2920963764190674
    3. '(*' → logprob: -5.542096138000488
    4. '(max' → logprob: -9.542096138000488
    5. '(' → logprob: -10.542096138000488
    6. ' old' → logprob: -10.667096138000488
    7. '(o' → logprob: -12.667096138000488
    8. '*' → logprob: -14.042096138000488
    9. '_old' → logprob: -14.167096138000488
    10. 'max' → logprob: -14.667096138000488

Token 173: '):
' (ID: 1883)
  Prédit: '(old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(old' → logprob: -0.492958128452301
    2. ')' → logprob: -1.2429580688476562
    3. 'old' → logprob: -3.2429580688476562
    4. '(v' → logprob: -4.242958068847656
    5. '[' → logprob: -4.367958068847656
    6. '(n' → logprob: -4.617958068847656
    7. 'v' → logprob: -4.742958068847656
    8. '(' → logprob: -5.117958068847656
    9. 'nv' → logprob: -6.617958068847656
    10. '_nv' → logprob: -6.992958068847656

Token 174: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38366085290908813
    2. ' if' → logprob: -2.5086607933044434
    3. 'nv' → logprob: -3.0086607933044434
    4. '           ' → logprob: -3.0086607933044434
    5. '1' → logprob: -3.8836607933044434
    6. ' and' → logprob: -4.008660793304443
    7. ' (' → logprob: -4.258660793304443
    8. ':
' → logprob: -4.883660793304443
    9. 'dp' → logprob: -4.883660793304443
    10. '(n' → logprob: -5.008660793304443

Token 175: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5426990985870361
    2. 'dp' (adapté à ' dp') → logprob: -0.9176990985870361
    3. '(dp' → logprob: -4.667698860168457
    4. ' (' → logprob: -5.292698860168457
    5. '               ' → logprob: -6.667698860168457
    6. ')' → logprob: -6.667698860168457
    7. '(' → logprob: -7.917698860168457
    8. '                   ' → logprob: -8.042698860168457
    9. '           ' → logprob: -8.417698860168457
    10. '_dp' → logprob: -8.542698860168457

Token 176: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.097437315271236e-05
    2. '[' → logprob: -10.00005054473877
    3. '=' → logprob: -13.50005054473877
    4. '```' → logprob: -14.00005054473877
    5. ')[' → logprob: -14.50005054473877
    6. '[cnt' → logprob: -14.75005054473877
    7. '(cost' → logprob: -14.75005054473877
    8. '[count' → logprob: -15.12505054473877
    9. ' [' → logprob: -15.37505054473877
    10. ' =' → logprob: -15.50005054473877

Token 177: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0022812189999967813
    2. 'cost' → logprob: -6.127281188964844
    3. 'st' → logprob: -9.627281188964844
    4. '[' → logprob: -11.877281188964844
    5. '_cost' → logprob: -12.377281188964844
    6. ' cost' → logprob: -12.627281188964844
    7. 'ост' → logprob: -13.252281188964844
    8. '   ' → logprob: -13.502281188964844
    9. ' ost' → logprob: -13.627281188964844
    10. '```' → logprob: -13.877281188964844

Token 178: ']=(' (ID: 138510)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.44686368107795715
    2. ']' → logprob: -1.5718636512756348
    3. ']=(' → logprob: -1.9468636512756348
    4. '=' → logprob: -4.696863651275635
    5. ')=' → logprob: -7.571863651275635
    6. '=(' → logprob: -9.071864128112793
    7. ' =' → logprob: -9.196864128112793
    8. ')' → logprob: -9.571864128112793
    9. ']={' → logprob: -10.446864128112793
    10. ']==' → logprob: -11.446864128112793

Token 179: 'nv' (ID: 40002)
  Prédit: 'nv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.0001825642102630809
    2. ' nv' → logprob: -8.625182151794434
    3. '(n' → logprob: -13.375182151794434
    4. '_nv' → logprob: -13.750182151794434
    5. 'n' → logprob: -16.12518310546875
    6. '   ' → logprob: -16.50018310546875
    7. '
' → logprob: -17.00018310546875
    8. ',n' → logprob: -17.12518310546875
    9. '(' → logprob: -17.37518310546875
    10. ')' → logprob: -17.50018310546875

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16055332124233246
    2. ',n' → logprob: -1.9105533361434937
    3. ',d' → logprob: -8.285552978515625
    4. ',l' → logprob: -9.785552978515625
    5. ' ,' → logprob: -11.410552978515625
    6. ',ll' → logprob: -12.160552978515625
    7. ',v' → logprob: -13.660552978515625
    8. ',)' → logprob: -14.410552978515625
    9. ',
' → logprob: -14.410552978515625
    10. ',de' → logprob: -14.660552978515625

Token 181: 'nd' (ID: 301)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.10027103871107101
    2. 'nd' → logprob: -2.350270986557007
    3. 'ndl' → logprob: -10.100271224975586
    4. ' nd' → logprob: -11.725271224975586
    5. ' nl' → logprob: -12.475271224975586
    6. 'n' → logprob: -12.725271224975586
    7. '   ' → logprob: -12.725271224975586
    8. 'nh' → logprob: -14.350271224975586
    9. '  ' → logprob: -14.350271224975586
    10. '    ' → logprob: -14.475271224975586

Token 182: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.00037800322752445936
    2. ',' → logprob: -8.000377655029297
    3. ' ,' → logprob: -10.500377655029297
    4. ',l' → logprob: -12.500377655029297
    5. ',
' → logprob: -12.875377655029297
    6. 'nl' → logprob: -13.000377655029297
    7. ')' → logprob: -13.375377655029297
    8. '),' → logprob: -13.750377655029297
    9. '   ' → logprob: -14.000377655029297
    10. '```' → logprob: -14.000377655029297

Token 183: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008195152622647583
    2. ',l' → logprob: -7.500819683074951
    3. ',' → logprob: -8.875819206237793
    4. 'nl' → logprob: -9.375819206237793
    5. ',n' → logprob: -11.000819206237793
    6. '_l' → logprob: -12.125819206237793
    7. ' nl' → logprob: -12.875819206237793
    8. 'л' → logprob: -13.000819206237793
    9. 'v' → logprob: -13.125819206237793
    10. ' l' → logprob: -13.250819206237793

Token 184: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ')
' → logprob: -11.000018119812012
    3. ' )' → logprob: -14.625018119812012
    4. ')}' → logprob: -16.250017166137695
    5. ',' → logprob: -16.625017166137695
    6. '),' → logprob: -16.625017166137695
    7. '))' → logprob: -16.750017166137695
    8. '   ' → logprob: -16.875017166137695
    9. ')

' → logprob: -17.250017166137695
    10. ',)' → logprob: -17.250017166137695

Token 185: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' ans' (ID: 3345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2554599344730377
    2. '<|end|>' → logprob: -1.7554599046707153
    3. ')' → logprob: -3.880460023880005
    4. '_' → logprob: -4.505459785461426
    5. '   ' → logprob: -5.130459785461426
    6. '    ' → logprob: -5.630459785461426
    7. ' 
' → logprob: -6.130459785461426
    8. '```' → logprob: -6.505459785461426
    9. '  ' → logprob: -6.755459785461426
    10. '[' → logprob: -7.130459785461426

Token 187: '=max' (ID: 102952)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001679940614849329
    2. '=max' → logprob: -6.62667989730835
    3. '=[' → logprob: -8.626680374145508
    4. '=[]' → logprob: -9.501680374145508
    5. ' =' → logprob: -9.626680374145508
    6. '=sum' → logprob: -11.376680374145508
    7. '_=' → logprob: -12.501680374145508
    8. '=int' → logprob: -12.751680374145508
    9. '={}' → logprob: -13.376680374145508
    10. 'max' → logprob: -13.376680374145508

Token 188: '(max' (ID: 17178)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00016027313540689647
    2. '(' → logprob: -8.750160217285156
    3. 'dp' → logprob: -13.875160217285156
    4. '(
' → logprob: -14.750160217285156
    5. '((' → logprob: -16.000160217285156
    6. '([' → logprob: -16.125160217285156
    7. '(max' → logprob: -16.875160217285156
    8. '(d' → logprob: -16.875160217285156
    9. '	dp' → logprob: -17.500160217285156
    10. '(range' → logprob: -17.875160217285156

Token 189: '(v' (ID: 6932)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00011486753646750003
    2. 'dp' → logprob: -9.125114440917969
    3. '(' → logprob: -12.875114440917969
    4. ')' → logprob: -13.625114440917969
    5. '(ans' → logprob: -14.125114440917969
    6. ' dp' → logprob: -14.875114440917969
    7. '	dp' → logprob: -15.500114440917969
    8. '
' → logprob: -15.625114440917969
    9. '(
' → logprob: -15.625114440917969
    10. '((' → logprob: -16.25011444091797

Token 190: ',d' (ID: 26159)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.09863179177045822
    2. ',' → logprob: -3.4736318588256836
    3. '_,' → logprob: -3.7236318588256836
    4. 'dp' → logprob: -4.348631858825684
    5. '(d' → logprob: -4.723631858825684
    6. ',d' → logprob: -4.973631858825684
    7. '_' → logprob: -5.223631858825684
    8. ',_' → logprob: -6.848631858825684
    9. ')' → logprob: -7.348631858825684
    10. '(' → logprob: -8.348631858825684

Token 191: ',l' (ID: 45198)
  Prédit: ',l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.005476129241287708
    2. ',' → logprob: -5.630475997924805
    3. '_,' → logprob: -6.880475997924805
    4. 'l' → logprob: -8.505475997924805
    5. 'for' → logprob: -8.755475997924805
    6. ')' → logprob: -8.880475997924805
    7. ',_' → logprob: -9.255475997924805
    8. ',n' → logprob: -9.755475997924805
    9. ',i' → logprob: -10.130475997924805
    10. ' for' → logprob: -10.130475997924805

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005407234653830528
    2. 'for' → logprob: -5.380407333374023
    3. ' for' → logprob: -7.505407333374023
    4. ']' → logprob: -8.630407333374023
    5. ' )' → logprob: -10.755407333374023
    6. '```' → logprob: -11.630407333374023
    7. '])' → logprob: -11.880407333374023
    8. '))' → logprob: -12.755407333374023
    9. ',)' → logprob: -12.755407333374023
    10. '   ' → logprob: -12.755407333374023

Token 193: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.643192708492279
    2. ' for' → logprob: -0.768192708492279
    3. ')' → logprob: -4.768192768096924
    4. ',' → logprob: -6.643192768096924
    5. ' in' → logprob: -7.518192768096924
    6. ' ' → logprob: -10.143192291259766
    7. 'in' → logprob: -10.393192291259766
    8. '   ' → logprob: -10.643192291259766
    9. '(dp' → logprob: -10.893192291259766
    10. 'dp' → logprob: -11.143192291259766

Token 194: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07112988829612732
    2. '(v' → logprob: -3.32112979888916
    3. ' v' → logprob: -3.44612979888916
    4. ' (' → logprob: -7.94612979888916
    5. ',v' → logprob: -8.19612979888916
    6. '_,' → logprob: -11.07112979888916
    7. '	v' → logprob: -11.32112979888916
    8. ',' → logprob: -12.07112979888916
    9. '[v' → logprob: -12.57112979888916
    10. '(_,' → logprob: -13.07112979888916

Token 195: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0007185076246969402
    2. ',' → logprob: -7.250718593597412
    3. '_,' → logprob: -12.500718116760254
    4. 'd' → logprob: -12.750718116760254
    5. ',l' → logprob: -13.875718116760254
    6. ' ,' → logprob: -14.125718116760254
    7. ',n' → logprob: -17.12571907043457
    8. ',
' → logprob: -17.25071907043457
    9. '```' → logprob: -17.37571907043457
    10. ',v' → logprob: -18.12571907043457

Token 196: ',l' (ID: 45198)
  Prédit: ',l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -8.351697033504024e-05
    2. ',' → logprob: -9.750083923339844
    3. 'l' → logprob: -11.125083923339844
    4. ' ,' → logprob: -11.625083923339844
    5. ',_' → logprob: -14.750083923339844
    6. ',d' → logprob: -15.000083923339844
    7. ',v' → logprob: -15.625083923339844
    8. ',ll' → logprob: -16.125083923339844
    9. ',in' → logprob: -16.500083923339844
    10. '_,' → logprob: -16.625083923339844

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18071623146533966
    2. 'in' → logprob: -1.8057162761688232
    3. 'dp' → logprob: -7.430716037750244
    4. ')' → logprob: -8.680716514587402
    5. ',' → logprob: -8.805716514587402
    6. ' dp' → logprob: -9.930716514587402
    7. '
' → logprob: -12.680716514587402
    8. ']' → logprob: -13.805716514587402
    9. ' ,' → logprob: -14.305716514587402
    10. ' ' → logprob: -14.305716514587402

Token 198: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01815205067396164
    2. ' dp' → logprob: -4.018152236938477
    3. '(dp' → logprob: -13.143152236938477
    4. '	dp' → logprob: -15.643152236938477
    5. '_dp' → logprob: -17.768152236938477
    6. '
' → logprob: -18.018152236938477
    7. '.dp' → logprob: -19.393152236938477
    8. ')' → logprob: -20.143152236938477
    9. 'DP' → logprob: -20.768152236938477
    10. '```' → logprob: -20.768152236938477

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. '))' → logprob: -12.000008583068848
    3. ')
' → logprob: -13.875008583068848
    4. ' )' → logprob: -14.500008583068848
    5. '   ' → logprob: -15.000008583068848
    6. ')}' → logprob: -15.750008583068848
    7. ')))' → logprob: -16.125009536743164
    8. ')**' → logprob: -16.250009536743164
    9. ')>' → logprob: -17.375009536743164
    10. '])' → logprob: -17.500009536743164

Token 200: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.246537173457909e-06
    2. ' print' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.125003814697266
    4. '```' → logprob: -15.250003814697266
    5. 'for' → logprob: -15.375003814697266
    6. '
' → logprob: -16.125003814697266
    7. '<|end|>' → logprob: -16.750003814697266
    8. '#print' → logprob: -17.375003814697266
    9. 'sys' → logprob: -18.250003814697266
    10. '    
' → logprob: -19.375003814697266

Token 202: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00673218397423625
    2. '(' → logprob: -5.006731986999512
    3. '()' → logprob: -11.131731986999512
    4. 'ans' → logprob: -14.256731986999512
    5. '(answer' → logprob: -15.131731986999512
    6. '('' → logprob: -15.256731986999512
    7. '(max' → logprob: -15.381731986999512
    8. '(`' → logprob: -15.631731986999512
    9. '(an' → logprob: -15.756731986999512
    10. ' (' → logprob: -16.256732940673828

Token 203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.478889215737581e-05
    2. ' )' → logprob: -9.875054359436035
    3. '))' → logprob: -13.125054359436035
    4. ')`' → logprob: -14.500054359436035
    5. ')
' → logprob: -15.250054359436035
    6. '   ' → logprob: -16.12505531311035
    7. ')}' → logprob: -16.37505531311035
    8. '`)' → logprob: -16.37505531311035
    9. '()' → logprob: -17.12505531311035
    10. ' ' → logprob: -17.50005531311035

Token 204: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005731113720685244
    2. ':' → logprob: -5.755731105804443
    3. ' ' → logprob: -6.880731105804443
    4. '<|end|>' → logprob: -7.130731105804443
    5. '\n' → logprob: -8.880731582641602
    6. '
' → logprob: -9.130731582641602
    7. '\' → logprob: -9.380731582641602
    8. '   ' → logprob: -9.880731582641602
    9. '=' → logprob: -10.130731582641602
    10. '(' → logprob: -10.130731582641602

Token 205: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.592525064945221
    2. ' ans' → logprob: -1.0925250053405762
    3. '__' → logprob: -2.717525005340576
    4. ' __' → logprob: -3.092525005340576
    5. '(ans' → logprob: -8.967525482177734
    6. '_ans' → logprob: -9.592525482177734
    7. '	ans' → logprob: -10.217525482177734
    8. ' ' → logprob: -11.217525482177734
    9. ' not' → logprob: -11.842525482177734
    10. '_' → logprob: -12.217525482177734

Token 206: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11585577577352524
    2. ' >' → logprob: -2.3658556938171387
    3. ' else' → logprob: -5.365855693817139
    4. '!=' → logprob: -5.615855693817139
    5. 'else' → logprob: -5.615855693817139
    6. ' !=' → logprob: -6.865855693817139
    7. '==' → logprob: -7.115855693817139
    8. '<|end|>' → logprob: -7.365855693817139
    9. '>=' → logprob: -7.490855693817139
    10. ' >=' → logprob: -9.115856170654297

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016187099739909172
    2. ' ' → logprob: -4.1411871910095215
    3. '1' → logprob: -9.391186714172363
    4. '=' → logprob: -10.391186714172363
    5. '3' → logprob: -12.391186714172363
    6. '100' → logprob: -12.391186714172363
    7. '2' → logprob: -12.641186714172363
    8. '10' → logprob: -12.953686714172363
    9. '9' → logprob: -13.141186714172363
    10. '5' → logprob: -13.453686714172363

Token 208: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1602286994457245
    2. 'else' → logprob: -1.9102287292480469
    3. '   ' → logprob: -13.535228729248047
    4. '	else' → logprob: -13.785228729248047
    5. ' ' → logprob: -14.535228729248047
    6. ' and' → logprob: -15.285228729248047
    7. '.' → logprob: -15.285228729248047
    8. '    ' → logprob: -15.535228729248047
    9. '_else' → logprob: -15.535228729248047
    10. '>' → logprob: -16.035228729248047

Token 209: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023739786818623543
    2. ' print' → logprob: -3.773739814758301
    3. '   ' → logprob: -7.773739814758301
    4. '0' → logprob: -10.5237398147583
    5. '    ' → logprob: -11.5237398147583
    6. '```' → logprob: -12.0237398147583
    7. '	print' → logprob: -12.2737398147583
    8. ' ' → logprob: -12.2737398147583
    9. '(print' → logprob: -12.3987398147583
    10. '    
' → logprob: -12.7737398147583

Token 210: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2992532551288605
    2. '(-' → logprob: -1.549253225326538
    3. '("' → logprob: -3.549253225326538
    4. '('' → logprob: -4.549253463745117
    5. '()' → logprob: -5.174253463745117
    6. '("-' → logprob: -7.674253463745117
    7. '0' → logprob: -8.299253463745117
    8. '("")' → logprob: -8.424253463745117
    9. '(":' → logprob: -9.549253463745117
    10. '(None' → logprob: -9.674253463745117

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020148126408457756
    2. '-' → logprob: -4.270148277282715
    3. '"' → logprob: -5.520148277282715
    4. '(' → logprob: -6.645148277282715
    5. ''' → logprob: -8.270148277282715
    6. ')' → logprob: -9.270148277282715
    7. '(-' → logprob: -9.270148277282715
    8. '("' → logprob: -9.520148277282715
    9. '"-' → logprob: -10.645148277282715
    10. '")' → logprob: -10.770148277282715

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')
' → logprob: -16.000001907348633
    5. '())' → logprob: -16.375001907348633
    6. '()' → logprob: -17.375001907348633
    7. ')`' → logprob: -17.375001907348633
    8. ')}' → logprob: -18.125001907348633
    9. '`)' → logprob: -18.125001907348633
    10. '```' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 210
Tokens correctement prédits (1ère position, stricte): 99
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 176
Précision stricte (1ère position): 47.14%
Précision adaptée (1ère position): 48.57%
Précision (top 10): 83.81%
================================================================================
