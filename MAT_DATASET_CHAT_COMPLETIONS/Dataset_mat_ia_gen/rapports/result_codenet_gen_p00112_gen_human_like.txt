================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:01:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    times = [int(input()) for _ in range(n)]
    times.sort()
    total_wait = 0
    current_sum = 0
    for t in times[:-1]:
        current_sum += t
        total_wait += current_sum
    print(total_wait)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. ' ' → logprob: -4.241925239562988
    4. '    ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '  ' → logprob: -6.386067867279053
    7. '       ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8705378770828247
    2. '=' → logprob: -1.4955378770828247
    3. 'u' → logprob: -1.9955378770828247
    4. '   ' → logprob: -2.745537757873535
    5. 'o' → logprob: -3.245537757873535
    6. '+' → logprob: -3.745537757873535
    7. '_' → logprob: -4.245537757873535
    8. '>' → logprob: -4.245537757873535
    9. ' =' → logprob: -4.370537757873535
    10. '  ' → logprob: -4.620537757873535

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2752552926540375
    2. ' input' → logprob: -1.5252553224563599
    3. 'input' → logprob: -4.27525520324707
    4. 'int' → logprob: -4.77525520324707
    5. ' n' → logprob: -7.90025520324707
    6. ' ' → logprob: -9.02525520324707
    7. 'n' → logprob: -10.15025520324707
    8. ' eval' → logprob: -10.65025520324707
    9. '```' → logprob: -10.65025520324707
    10. ' randint' → logprob: -10.90025520324707

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006758829578757286
    2. '(input' → logprob: -5.006758689880371
    3. '()' → logprob: -11.131758689880371
    4. 'input' → logprob: -11.756758689880371
    5. '(n' → logprob: -12.256758689880371
    6. '(
' → logprob: -12.381758689880371
    7. ' (' → logprob: -12.506758689880371
    8. '('' → logprob: -12.631758689880371
    9. '(int' → logprob: -14.756758689880371
    10. ''' → logprob: -14.756758689880371

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12421323359012604
    2. ')' → logprob: -2.499213218688965
    3. '()' → logprob: -3.624213218688965
    4. '())' → logprob: -5.124213218688965
    5. '))' → logprob: -6.999213218688965
    6. '(
' → logprob: -8.249213218688965
    7. '()))' → logprob: -8.749213218688965
    8. '('' → logprob: -8.749213218688965
    9. ' ' → logprob: -9.249213218688965
    10. '```' → logprob: -9.749213218688965

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39164337515830994
    2. ' if' → logprob: -2.0166432857513428
    3. '   ' → logprob: -2.6416432857513428
    4. ')' → logprob: -3.6416432857513428
    5. ':' → logprob: -3.6416432857513428
    6. '  ' → logprob: -3.8916432857513428
    7. '<|end|>' → logprob: -4.266643524169922
    8. 'if' → logprob: -4.641643524169922
    9. '    ' → logprob: -5.391643524169922
    10. ',' → logprob: -5.641643524169922

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0018967483192682266
    2. ' ' → logprob: -6.751896858215332
    3. 'n' → logprob: -7.626896858215332
    4. ' not' → logprob: -8.376896858215332
    5. ' ' → logprob: -12.001896858215332
    6. '  ' → logprob: -13.626896858215332
    7. 'not' → logprob: -14.001896858215332
    8. ' (' → logprob: -15.876896858215332
    9. '	n' → logprob: -15.876896858215332
    10. '(n' → logprob: -15.876896858215332

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.36640051007270813
    2. ' >' → logprob: -1.8664004802703857
    3. ' <=' → logprob: -2.3664004802703857
    4. ' <' → logprob: -3.6164004802703857
    5. '==' → logprob: -3.9914004802703857
    6. '>' → logprob: -5.116400718688965
    7. ' ' → logprob: -5.491400718688965
    8. '<=' → logprob: -7.116400718688965
    9. ' >=' → logprob: -7.491400718688965
    10. '<' → logprob: -7.616400718688965

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.126935675740242
    2. '0' → logprob: -2.1269357204437256
    3. ' ' → logprob: -13.001935958862305
    4. '1' → logprob: -13.626935958862305
    5. ' -' → logprob: -14.314435958862305
    6. '100' → logprob: -15.126935958862305
    7. '10' → logprob: -15.126935958862305
    8. '  ' → logprob: -15.189435958862305
    9. ')' → logprob: -15.501935958862305
    10. '=' → logprob: -15.626935958862305

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022028323728591204
    2. ' ' → logprob: -6.127202987670898
    3. '-' → logprob: -11.252202987670898
    4. '1' → logprob: -13.502202987670898
    5. ' -' → logprob: -13.627202987670898
    6. '42' → logprob: -14.252202987670898
    7. '   ' → logprob: -14.377202987670898
    8. '  ' → logprob: -15.502202987670898
    9. '```' → logprob: -15.877202987670898
    10. '    ' → logprob: -16.0022029876709

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ':
' → logprob: -9.875077247619629
    3. ' :' → logprob: -11.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. ':return' → logprob: -12.500077247619629
    6. '       ' → logprob: -13.000077247619629
    7. ':\' → logprob: -13.125077247619629
    8. '):' → logprob: -13.375077247619629
    9. '    ' → logprob: -14.375077247619629
    10. ':**' → logprob: -15.250077247619629

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003570343542378396
    2. '   ' → logprob: -8.750356674194336
    3. ' break' → logprob: -9.500356674194336
    4. '    ' → logprob: -10.000356674194336
    5. '\n' → logprob: -10.625356674194336
    6. '      ' → logprob: -11.500356674194336
    7. '        ' → logprob: -11.750356674194336
    8. '	break' → logprob: -12.250356674194336
    9. '<|end|>' → logprob: -12.375356674194336
    10. '     ' → logprob: -12.500356674194336

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014878070913255215
    2. '       ' → logprob: -4.514878273010254
    3. 'break' (adapté à ' break') → logprob: -5.889878273010254
    4. '   ' → logprob: -7.264878273010254
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. '_break' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15489940345287323
    2. '\n' → logprob: -3.0298993587493896
    3. '```' → logprob: -3.4048993587493896
    4. '    
' → logprob: -3.5298993587493896
    5. '\' → logprob: -4.029899597167969
    6. ':' → logprob: -5.529899597167969
    7. '
' → logprob: -6.279899597167969
    8. '\r' → logprob: -6.654899597167969
    9. 'n' → logprob: -6.779899597167969
    10. '  
' → logprob: -7.029899597167969

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17229793965816498
    2. '    
' → logprob: -3.297297954559326
    3. '<|end|>' → logprob: -3.297297954559326
    4. '\n' → logprob: -3.547297954559326
    5. '
' → logprob: -3.797297954559326
    6. '```' → logprob: -4.297297954559326
    7. 'n' → logprob: -5.547297954559326
    8. '\' → logprob: -5.547297954559326
    9. '#' → logprob: -5.797297954559326
    10. ')' → logprob: -6.422297954559326

Token 20: ' times' (ID: 4238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27328136563301086
    2. '\n' → logprob: -2.1482813358306885
    3. ' ' → logprob: -3.5232813358306885
    4. '<|end|>' → logprob: -3.6482813358306885
    5. '\' → logprob: -3.7732813358306885
    6. '    ' → logprob: -4.523281574249268
    7. '    
' → logprob: -5.023281574249268
    8. '```' → logprob: -5.398281574249268
    9. ')' → logprob: -5.773281574249268
    10. '\r' → logprob: -5.773281574249268

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39200523495674133
    2. '=' → logprob: -1.892005205154419
    3. '[' → logprob: -1.892005205154419
    4. ' ' → logprob: -4.392005443572998
    5. '_' → logprob: -6.142005443572998
    6. ',' → logprob: -6.267005443572998
    7. ')' → logprob: -6.392005443572998
    8. ' +=' → logprob: -6.642005443572998
    9. '   ' → logprob: -7.017005443572998
    10. '    ' → logprob: -7.767005443572998

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4654635488986969
    2. ' n' → logprob: -1.9654635190963745
    3. ' [' → logprob: -2.340463638305664
    4. '[]' → logprob: -2.715463638305664
    5. 'n' → logprob: -3.340463638305664
    6. ' ' → logprob: -4.590463638305664
    7. '[' → logprob: -5.090463638305664
    8. ' times' → logprob: -5.340463638305664
    9. '[n' → logprob: -5.340463638305664
    10. ' input' → logprob: -6.340463638305664

Token 23: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3611578643321991
    2. '0' → logprob: -1.7361578941345215
    3. ' int' → logprob: -2.1111578941345215
    4. ']int' → logprob: -6.6111578941345215
    5. ' ]' → logprob: -6.7361578941345215
    6. ']' → logprob: -6.8611578941345215
    7. '(int' → logprob: -7.3611578941345215
    8. '   ' → logprob: -7.4861578941345215
    9. ' n' → logprob: -8.111157417297363
    10. 'n' → logprob: -8.611157417297363

Token 24: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3144007921218872
    2. '(input' → logprob: -1.3144007921218872
    3. '(x' → logprob: -7.314400672912598
    4. '(i' → logprob: -8.314400672912598
    5. '()' → logprob: -8.564400672912598
    6. 'input' → logprob: -11.689400672912598
    7. '()]' → logprob: -12.314400672912598
    8. ')' → logprob: -12.439400672912598
    9. '(
' → logprob: -12.564400672912598
    10. '(a' → logprob: -12.939400672912598

Token 25: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011935600778087974
    2. '()' → logprob: -6.751193523406982
    3. '()]' → logprob: -11.62619400024414
    4. '()),' → logprob: -12.12619400024414
    5. '())
' → logprob: -13.12619400024414
    6. '()))' → logprob: -13.12619400024414
    7. ' ())' → logprob: -13.12619400024414
    8. '().' → logprob: -13.87619400024414
    9. '()
' → logprob: -14.50119400024414
    10. '());' → logprob: -14.87619400024414

Token 26: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2613530457019806
    2. '()' → logprob: -2.761353015899658
    3. ')]' → logprob: -3.011353015899658
    4. '()]' → logprob: -3.136353015899658
    5. '   ' → logprob: -3.386353015899658
    6. ']' → logprob: -3.511353015899658
    7. ' )' → logprob: -6.011353015899658
    8. '())' → logprob: -6.261353015899658
    9. '(' → logprob: -6.261353015899658
    10. ' ]' → logprob: -7.136353015899658

Token 27: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.010951373726129532
    2. ' _' → logprob: -4.885951519012451
    3. '_' → logprob: -6.385951519012451
    4. ' ' → logprob: -6.635951519012451
    5. ' i' → logprob: -8.510951042175293
    6. ' in' → logprob: -9.385951042175293
    7. 'range' → logprob: -10.885951042175293
    8. '_range' → logprob: -11.385951042175293
    9. '	range' → logprob: -11.760951042175293
    10. ' xrange' → logprob: -12.135951042175293

Token 28: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2270229011774063
    2. ' range' → logprob: -1.8520228862762451
    3. ' in' → logprob: -3.102022886276245
    4. ' ' → logprob: -7.227023124694824
    5. 'in' → logprob: -7.727023124694824
    6. ' xrange' → logprob: -11.102023124694824
    7. '	range' → logprob: -11.727023124694824
    8. '(range' → logprob: -11.852023124694824
    9. ' ran' → logprob: -12.227023124694824
    10. '  ' → logprob: -12.602023124694824

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.523248553276062
    2. 'range' → logprob: -0.898248553276062
    3. ' ' → logprob: -9.773248672485352
    4. 'rang' → logprob: -11.148248672485352
    5. ' ran' → logprob: -11.648248672485352
    6. '[' → logprob: -11.898248672485352
    7. '  ' → logprob: -12.023248672485352
    8. 'r' → logprob: -12.273248672485352
    9. ' rang' → logprob: -12.398248672485352
    10. 'ran' → logprob: -12.648248672485352

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006757998839020729
    2. '(' → logprob: -5.006758213043213
    3. ' (' → logprob: -10.131757736206055
    4. ' n' → logprob: -13.131757736206055
    5. 'n' → logprob: -15.131757736206055
    6. ')' → logprob: -15.631757736206055
    7. ')n' → logprob: -15.881757736206055
    8. '(
' → logprob: -16.006757736206055
    9. ' )' → logprob: -17.006757736206055
    10. '()' → logprob: -17.131757736206055

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.288163083605468e-05
    2. ')' → logprob: -10.750052452087402
    3. ']' → logprob: -11.500052452087402
    4. '   ' → logprob: -11.875052452087402
    5. ' )' → logprob: -12.125052452087402
    6. ')]
' → logprob: -12.500052452087402
    7. ')])' → logprob: -13.250052452087402
    8. '')]' → logprob: -14.125052452087402
    9. '))' → logprob: -14.500052452087402
    10. '])]' → logprob: -14.625052452087402

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20283189415931702
    2. '
' → logprob: -2.577831983566284
    3. '<|end|>' → logprob: -3.327831983566284
    4. '\n' → logprob: -3.577831983566284
    5. ' ' → logprob: -4.327831745147705
    6. '    
' → logprob: -4.702831745147705
    7. '[' → logprob: -5.202831745147705
    8. ' 
' → logprob: -5.952831745147705
    9. '\' → logprob: -6.077831745147705
    10. ' times' → logprob: -6.327831745147705

Token 33: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' (adapté à ' times') → logprob: -0.6358907222747803
    2. ' times' → logprob: -1.1358907222747803
    3. 'sum' → logprob: -3.5108907222747803
    4. 'total' → logprob: -3.7608907222747803
    5. 'max' → logprob: -3.7608907222747803
    6. 'average' → logprob: -4.510890960693359
    7. ' max' → logprob: -5.010890960693359
    8. 'min' → logprob: -5.135890960693359
    9. ' total' → logprob: -5.385890960693359
    10. 's' → logprob: -5.510890960693359

Token 34: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.3256414532661438
    2. '.' → logprob: -1.325641393661499
    3. '[' → logprob: -4.700641632080078
    4. '<|end|>' → logprob: -6.700641632080078
    5. '.append' → logprob: -7.700641632080078
    6. '.pop' → logprob: -8.075641632080078
    7. 'sort' → logprob: -8.075641632080078
    8. ')' → logprob: -8.575641632080078
    9. '_sorted' → logprob: -9.200641632080078
    10. '[::-' → logprob: -9.700641632080078

Token 35: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0125620411708951
    2. '(' → logprob: -4.387562274932861
    3. '(()' → logprob: -10.887561798095703
    4. '()`' → logprob: -11.512561798095703
    5. '()
' → logprob: -12.387561798095703
    6. '().' → logprob: -12.762561798095703
    7. ' ()' → logprob: -13.012561798095703
    8. '(reverse' → logprob: -13.137561798095703
    9. '((' → logprob: -13.512561798095703
    10. '();' → logprob: -13.637561798095703

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12423007935285568
    2. '
' → logprob: -2.999230146408081
    3. '    
' → logprob: -3.999230146408081
    4. '\n' → logprob: -4.249229907989502
    5. '\' → logprob: -4.624229907989502
    6. 'print' → logprob: -5.374229907989502
    7. '```' → logprob: -5.999229907989502
    8. '[' → logprob: -6.374229907989502
    9. '<|end|>' → logprob: -6.499229907989502
    10. 'n' → logprob: -6.624229907989502

Token 37: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -1.4287340641021729
    2. 'print' → logprob: -1.6787340641021729
    3. 'max' → logprob: -1.6787340641021729
    4. 'sum' → logprob: -2.678734064102173
    5. '   ' → logprob: -2.928734064102173
    6. 'for' → logprob: -3.178734064102173
    7. 's' → logprob: -3.928734064102173
    8. 'if' → logprob: -3.928734064102173
    9. 'i' → logprob: -4.178733825683594
    10. 'p' → logprob: -4.303733825683594

Token 38: '_wait' (ID: 44250)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.13826271891593933
    2. '_' → logprob: -2.3882627487182617
    3. ' =' → logprob: -3.5132627487182617
    4. ' +=' → logprob: -6.013262748718262
    5. '_sum' → logprob: -6.388262748718262
    6. '=' → logprob: -6.638262748718262
    7. '_times' → logprob: -6.888262748718262
    8. ' _' → logprob: -7.763262748718262
    9. ' ' → logprob: -8.763262748718262
    10. 'Time' → logprob: -9.138262748718262

Token 39: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5354700088500977
    2. ' =' → logprob: -1.2854700088500977
    3. '=' → logprob: -2.0354700088500977
    4. '_time' → logprob: -5.160470008850098
    5. ' +=' → logprob: -7.160470008850098
    6. 'time' → logprob: -8.035470008850098
    7. '_' → logprob: -8.535470008850098
    8. '+=' → logprob: -8.535470008850098
    9. 'ed' → logprob: -9.535470008850098
    10. '   ' → logprob: -10.660470008850098

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11777245998382568
    2. ' ' → logprob: -2.2427725791931152
    3. ' times' → logprob: -5.742772579193115
    4. 'times' → logprob: -6.867772579193115
    5. 'sum' → logprob: -7.992772579193115
    6. ' sum' → logprob: -8.242772102355957
    7. '   ' → logprob: -10.242772102355957
    8. ' ' → logprob: -10.742772102355957
    9. '1' → logprob: -12.430272102355957
    10. 'time' → logprob: -12.867772102355957

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05574144795536995
    2. 'times' → logprob: -3.555741548538208
    3. 'sum' → logprob: -3.680741548538208
    4. 'total' → logprob: -9.055741310119629
    5. 'time' → logprob: -9.305741310119629
    6. ' times' → logprob: -9.430741310119629
    7. ' ' → logprob: -9.680741310119629
    8. ' sum' → logprob: -10.430741310119629
    9. 'wait' → logprob: -10.805741310119629
    10. 't' → logprob: -12.243241310119629

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01901128888130188
    2. '<|end|>' → logprob: -4.894011497497559
    3. '
' → logprob: -5.894011497497559
    4. ' for' → logprob: -6.644011497497559
    5. '+' → logprob: -6.644011497497559
    6. '    
' → logprob: -6.894011497497559
    7. 'for' → logprob: -7.019011497497559
    8. ' ' → logprob: -7.519011497497559
    9. 't' → logprob: -7.519011497497559
    10. '  ' → logprob: -7.894011497497559

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09474711120128632
    2. '
' → logprob: -2.9697470664978027
    3. 'total' → logprob: -4.094747066497803
    4. 'for' → logprob: -4.844747066497803
    5. '    
' → logprob: -5.719747066497803
    6. ' for' → logprob: -5.969747066497803
    7. 'time' → logprob: -6.344747066497803
    8. 't' → logprob: -6.844747066497803
    9. '\' → logprob: -7.219747066497803
    10. ' total' → logprob: -7.344747066497803

Token 44: ' current' (ID: 2208)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.4100814163684845
    2. 'waiting' → logprob: -2.035081386566162
    3. 'current' (adapté à ' current') → logprob: -2.535081386566162
    4. 'for' → logprob: -2.535081386566162
    5. 'acc' → logprob: -3.785081386566162
    6. 'c' → logprob: -4.660081386566162
    7. '   ' → logprob: -5.160081386566162
    8. 'curr' → logprob: -6.285081386566162
    9. 'total' → logprob: -6.285081386566162
    10. 'sum' → logprob: -6.910081386566162

Token 45: '_sum' (ID: 29859)
  Prédit: '_wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -0.13088633120059967
    2. '_time' → logprob: -2.2558863162994385
    3. '_' → logprob: -4.380886554718018
    4. '=' → logprob: -6.005886554718018
    5. '_sum' → logprob: -6.630886554718018
    6. ' =' → logprob: -6.630886554718018
    7. '_total' → logprob: -10.00588607788086
    8. '_finish' → logprob: -10.00588607788086
    9. '_w' → logprob: -10.25588607788086
    10. '_end' → logprob: -10.38088607788086

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18566954135894775
    2. ' +=' → logprob: -1.8106695413589478
    3. '=' → logprob: -5.185669422149658
    4. '+=' → logprob: -8.435669898986816
    5. ' ' → logprob: -9.935669898986816
    6. ' +' → logprob: -11.435669898986816
    7. '<|end|>' → logprob: -11.560669898986816
    8. '+' → logprob: -11.935669898986816
    9. '_' → logprob: -12.310669898986816
    10. '  ' → logprob: -12.810669898986816

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22552868723869324
    2. ' ' → logprob: -1.6005287170410156
    3. ' times' → logprob: -9.600528717041016
    4. 'times' → logprob: -10.100528717041016
    5. ' ' → logprob: -12.725528717041016
    6. '   ' → logprob: -13.225528717041016
    7. '  ' → logprob: -13.350528717041016
    8. '​' → logprob: -15.725528717041016
    9. '+' → logprob: -16.350528717041016
    10. '    ' → logprob: -16.475528717041016

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004485461104195565
    2. ' ' → logprob: -7.750448703765869
    3. 'times' → logprob: -11.000448226928711
    4. ' times' → logprob: -14.125448226928711
    5. '   ' → logprob: -15.250448226928711
    6. '  ' → logprob: -16.75044822692871
    7. ' ' → logprob: -16.87544822692871
    8. '+' → logprob: -17.50044822692871
    9. '00' → logprob: -18.12544822692871
    10. 't' → logprob: -18.37544822692871

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005040794610977173
    2. 'for' → logprob: -6.505040645599365
    3. '    
' → logprob: -6.630040645599365
    4. '
' → logprob: -6.755040645599365
    5. ' for' → logprob: -7.005040645599365
    6. '<|end|>' → logprob: -10.255041122436523
    7. '\n' → logprob: -10.755041122436523
    8. '	for' → logprob: -10.880041122436523
    9. ' 
' → logprob: -11.130041122436523
    10. '  
' → logprob: -11.130041122436523

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010674840770661831
    2. 'for' → logprob: -4.635674953460693
    3. ' for' → logprob: -7.135674953460693
    4. '    
' → logprob: -9.260674476623535
    5. '	for' → logprob: -11.635674476623535
    6. '
' → logprob: -12.010674476623535
    7. '```' → logprob: -12.510674476623535
    8. '<|end|>' → logprob: -13.135674476623535
    9. '\n' → logprob: -13.260674476623535
    10. '' → logprob: -13.760674476623535

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008903734385967255
    2. '   ' → logprob: -5.008903503417969
    3. ' for' → logprob: -6.133903503417969
    4. '	for' → logprob: -11.883903503417969
    5. '
' → logprob: -12.383903503417969
    6. '    
' → logprob: -12.633903503417969
    7. '  ' → logprob: -13.758903503417969
    8. ' ' → logprob: -14.133903503417969
    9. '```' → logprob: -14.258903503417969
    10. '\n' → logprob: -15.008903503417969

Token 52: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6538375616073608
    2. ' time' → logprob: -0.7788375616073608
    3. 't' → logprob: -4.52883768081665
    4. 'time' → logprob: -4.90383768081665
    5. ' i' → logprob: -6.02883768081665
    6. ' ' → logprob: -8.903837203979492
    7. ' x' → logprob: -9.528837203979492
    8. 'i' → logprob: -10.403837203979492
    9. ' ti' → logprob: -10.716337203979492
    10. '   ' → logprob: -10.778837203979492

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014345310628414154
    2. 'in' → logprob: -4.264345169067383
    3. ' ' → logprob: -9.264345169067383
    4. 'i' → logprob: -10.014345169067383
    5. 'n' → logprob: -11.264345169067383
    6. ' i' → logprob: -12.014345169067383
    7. '  ' → logprob: -12.514345169067383
    8. 's' → logprob: -12.639345169067383
    9. '   ' → logprob: -12.639345169067383
    10. 'e' → logprob: -12.889345169067383

Token 54: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.014223800040781498
    2. 'times' → logprob: -4.264223575592041
    3. 'imes' → logprob: -9.7642240524292
    4. ' ' → logprob: -13.5142240524292
    5. '(times' → logprob: -14.1392240524292
    6. '_times' → logprob: -14.7642240524292
    7. ' time' → logprob: -16.014223098754883
    8. 't' → logprob: -16.139223098754883
    9. '.times' → logprob: -16.764223098754883
    10. '   ' → logprob: -16.889223098754883

Token 55: '[:-' (ID: 63556)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021765506826341152
    2. ':
' → logprob: -6.252176761627197
    3. '   ' → logprob: -8.877176284790039
    4. '       ' → logprob: -9.752176284790039
    5. '+' → logprob: -10.877176284790039
    6. '<|end|>' → logprob: -11.752176284790039
    7. '):' → logprob: -12.252176284790039
    8. '=' → logprob: -12.502176284790039
    9. ' :' → logprob: -12.752176284790039
    10. '+:' → logprob: -13.252176284790039

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.25000286102295
    3. '-' → logprob: -14.25000286102295
    4. ']' → logprob: -15.37500286102295
    5. '   ' → logprob: -15.37500286102295
    6. '```' → logprob: -15.81250286102295
    7. '１' → logprob: -16.250003814697266
    8. ' -' → logprob: -17.437503814697266
    9. '  ' → logprob: -17.875003814697266
    10. '2' → logprob: -18.375003814697266

Token 57: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.053840864449739456
    2. ']:
' → logprob: -3.1788408756256104
    3. ':' → logprob: -4.928840637207031
    4. ']' → logprob: -6.428840637207031
    5. '   ' → logprob: -6.928840637207031
    6. ']:
' → logprob: -7.428840637207031
    7. '       ' → logprob: -9.053840637207031
    8. '):' → logprob: -9.178840637207031
    9. ':
' → logprob: -10.178840637207031
    10. '):
' → logprob: -10.678840637207031

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009864812716841698
    2. '
' → logprob: -5.509864807128906
    3. '   ' → logprob: -5.759864807128906
    4. ' current' → logprob: -6.884864807128906
    5. 'current' → logprob: -7.134864807128906
    6. '<|end|>' → logprob: -8.134864807128906
    7. '    
' → logprob: -9.009864807128906
    8. '+' → logprob: -9.134864807128906
    9. '        
' → logprob: -10.134864807128906
    10. '' → logprob: -10.509864807128906

Token 59: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5534635782241821
    2. '   ' → logprob: -1.1784635782241821
    3. '       ' → logprob: -2.8034634590148926
    4. 'current' (adapté à ' current') → logprob: -2.9284634590148926
    5. '
' → logprob: -6.178463459014893
    6. '	current' → logprob: -7.053463459014893
    7. '```' → logprob: -9.30346393585205
    8. '
' → logprob: -10.67846393585205
    9. 'Current' → logprob: -10.67846393585205
    10. '_current' → logprob: -10.80346393585205

Token 60: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.07292129099369049
    2. '_' → logprob: -2.6979212760925293
    3. '+=' → logprob: -6.572921276092529
    4. ' +=' → logprob: -6.572921276092529
    5. '+' → logprob: -9.322921752929688
    6. '=' → logprob: -10.822921752929688
    7. '_s' → logprob: -10.947921752929688
    8. 'sum' → logprob: -11.072921752929688
    9. ' _' → logprob: -11.572921752929688
    10. '_add' → logprob: -12.322921752929688

Token 61: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47417569160461426
    2. ' +=' → logprob: -0.9741756916046143
    3. '+' → logprob: -9.599175453186035
    4. '   ' → logprob: -11.224175453186035
    5. '=' → logprob: -11.724175453186035
    6. ']+=' → logprob: -12.474175453186035
    7. '    ' → logprob: -12.974175453186035
    8. ' +' → logprob: -13.599175453186035
    9. '+='' → logprob: -14.849175453186035
    10. ' =' → logprob: -14.974175453186035

Token 62: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10020699352025986
    2. ' t' → logprob: -2.3502070903778076
    3. '	t' → logprob: -16.10020637512207
    4. '   ' → logprob: -16.47520637512207
    5. ' ' → logprob: -16.60020637512207
    6. '`t' → logprob: -18.22520637512207
    7. '_t' → logprob: -19.60020637512207
    8. '    ' → logprob: -19.85020637512207
    9. ' ' → logprob: -20.35020637512207
    10. '  ' → logprob: -20.47520637512207

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2669428288936615
    2. '       ' → logprob: -2.0169427394866943
    3. '   ' → logprob: -2.8919427394866943
    4. '    
' → logprob: -3.8919427394866943
    5. '+' → logprob: -4.766942977905273
    6. '
' → logprob: -5.516942977905273
    7. ' 
' → logprob: -5.641942977905273
    8. '        
' → logprob: -6.141942977905273
    9. '  
' → logprob: -6.891942977905273
    10. '\n' → logprob: -7.016942977905273

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13122627139091492
    2. '   ' → logprob: -2.3812263011932373
    3. '
' → logprob: -3.7562263011932373
    4. '        
' → logprob: -6.131226062774658
    5. '    
' → logprob: -6.131226062774658
    6. ' 
' → logprob: -7.506226062774658
    7. '  
' → logprob: -7.631226062774658
    8. ' ' → logprob: -7.881226062774658
    9. '\n' → logprob: -8.381226539611816
    10. '   
' → logprob: -8.631226539611816

Token 65: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.00523719098418951
    2. ' total' → logprob: -5.255237102508545
    3. '   ' → logprob: -13.130237579345703
    4. '	total' → logprob: -14.755237579345703
    5. '       ' → logprob: -15.255237579345703
    6. '
' → logprob: -15.255237579345703
    7. 'Total' → logprob: -15.380237579345703
    8. ' ' → logprob: -15.505237579345703
    9. '(total' → logprob: -16.755237579345703
    10. '$total' → logprob: -17.505237579345703

Token 66: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -6.396757089532912e-05
    2. '_' → logprob: -10.6250638961792
    3. '_write' → logprob: -10.7500638961792
    4. ' _' → logprob: -11.6250638961792
    5. '_w' → logprob: -12.6250638961792
    6. '_continue' → logprob: -13.2500638961792
    7. '_walk' → logprob: -14.3750638961792
    8. '_sum' → logprob: -15.0000638961792
    9. '_save' → logprob: -15.1250638961792
    10. '_wrap' → logprob: -15.2500638961792

Token 67: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029811467975378036
    2. '+=' → logprob: -3.529811382293701
    3. '+' → logprob: -9.90481185913086
    4. ' +' → logprob: -12.15481185913086
    5. ' ' → logprob: -12.90481185913086
    6. '    ' → logprob: -13.40481185913086
    7. '=' → logprob: -14.52981185913086
    8. ']+=' → logprob: -14.90481185913086
    9. '+='' → logprob: -15.40481185913086
    10. ' =' → logprob: -15.52981185913086

Token 68: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.02975083328783512
    2. 'current' → logprob: -3.5297508239746094
    3. '(current' → logprob: -16.40475082397461
    4. '$current' → logprob: -16.52975082397461
    5. '	current' → logprob: -17.02975082397461
    6. ' ' → logprob: -17.27975082397461
    7. '[current' → logprob: -17.77975082397461
    8. 'urrent' → logprob: -18.02975082397461
    9. '=current' → logprob: -18.02975082397461
    10. '.current' → logprob: -18.52975082397461

Token 69: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.727905979962088e-05
    2. '_' → logprob: -10.37504768371582
    3. '_s' → logprob: -11.12504768371582
    4. ' _' → logprob: -14.25004768371582
    5. 'sum' → logprob: -15.62504768371582
    6. 's' → logprob: -16.50004768371582
    7. '_split' → logprob: -16.62504768371582
    8. '_sym' → logprob: -17.50004768371582
    9. '_total' → logprob: -17.62504768371582
    10. '_ss' → logprob: -17.75004768371582

Token 70: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2107677161693573
    2. '   ' → logprob: -1.7107677459716797
    3. '
' → logprob: -4.96076774597168
    4. ' print' → logprob: -6.46076774597168
    5. '\n' → logprob: -8.08576774597168
    6. '    
' → logprob: -8.21076774597168
    7. '<|end|>' → logprob: -9.46076774597168
    8. '	print' → logprob: -10.58576774597168
    9. '```' → logprob: -11.46076774597168
    10. ')' → logprob: -11.96076774597168

Token 71: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3014441728591919
    2. '   ' → logprob: -1.426444172859192
    3. '<|end|>' → logprob: -4.301444053649902
    4. '\n' → logprob: -5.801444053649902
    5. ' print' → logprob: -6.801444053649902
    6. '
' → logprob: -6.801444053649902
    7. '```' → logprob: -7.551444053649902
    8. '    
' → logprob: -8.426444053649902
    9. '#' → logprob: -9.176444053649902
    10. '  ' → logprob: -9.551444053649902

Token 72: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017440813826397061
    2. '   ' → logprob: -6.751744270324707
    3. ' print' → logprob: -7.751744270324707
    4. '<|end|>' → logprob: -9.251744270324707
    5. '\n' → logprob: -11.251744270324707
    6. '```' → logprob: -11.376744270324707
    7. '
' → logprob: -11.501744270324707
    8. '(print' → logprob: -13.126744270324707
    9. '#print' → logprob: -13.126744270324707
    10. ')' → logprob: -13.251744270324707

Token 73: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004379448015242815
    2. '(total' → logprob: -5.5043792724609375
    3. '('' → logprob: -9.129379272460938
    4. '()' → logprob: -9.754379272460938
    5. '(sum' → logprob: -10.254379272460938
    6. '("("' → logprob: -10.254379272460938
    7. '(times' → logprob: -10.504379272460938
    8. '(t' → logprob: -11.379379272460938
    9. ' (' → logprob: -11.754379272460938
    10. '("' → logprob: -12.129379272460938

Token 74: '_wait' (ID: 44250)
  Prédit: '_wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -1.0280383548888494e-06
    2. 'wait' → logprob: -15.625000953674316
    3. 'Wait' → logprob: -15.750000953674316
    4. '_WAIT' → logprob: -15.750000953674316
    5. '_w' → logprob: -16.250001907348633
    6. ')' → logprob: -16.500001907348633
    7. '_' → logprob: -16.625001907348633
    8. '_walk' → logprob: -16.750001907348633
    9. '(wait' → logprob: -16.750001907348633
    10. '_write' → logprob: -16.875001907348633

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.125001907348633
    4. ')`' → logprob: -16.250001907348633
    5. '))' → logprob: -17.125001907348633
    6. '`)' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.375001907348633
    8. ')

' → logprob: -19.500001907348633
    9. ')}' → logprob: -19.750001907348633
    10. '(' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 73
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 50.68%
Précision adaptée (1ère position): 57.53%
Précision (top 10): 91.78%
================================================================================
