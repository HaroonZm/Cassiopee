================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
for _ in range(n):
    bases = [False, False, False]  # first, second, third base
    score = 0
    outs = 0
    while outs < 3:
        try:
            event = input().strip()
        except EOFError:
            break
        if event == '':
            break
        if event == "HIT":
            # advance runners
            if bases[2]:
                score += 1
            bases[2] = bases[1]
            bases[1] = bases[0]
            bases[0] = True
        elif event == "HOMERUN":
            # score all runners + 1
            score += sum(bases) + 1
            bases = [False, False, False]
        elif event == "OUT":
            outs += 1
        if outs == 3:
            # inning ends
            # break only if no more input or next line empty?
            pass
    print(score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191706776618958
    2. 'i' → logprob: -1.169170618057251
    3. 'for' → logprob: -1.669170618057251
    4. 's' → logprob: -3.169170618057251
    5. '*' → logprob: -4.66917085647583
    6. ')' → logprob: -4.91917085647583
    7. 'x' → logprob: -5.04417085647583
    8. '#' → logprob: -5.16917085647583
    9. '`' → logprob: -5.16917085647583
    10. 'a' → logprob: -5.54417085647583

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04206651449203491
    2. ' i' → logprob: -3.6670665740966797
    3. '  ' → logprob: -4.41706657409668
    4. ' n' → logprob: -5.66706657409668
    5. 'i' → logprob: -10.04206657409668
    6. ' ‌' → logprob: -11.91706657409668
    7. ' ' → logprob: -12.04206657409668
    8. '_' → logprob: -12.04206657409668
    9. ' )' → logprob: -12.16706657409668
    10. ' ,' → logprob: -12.54206657409668

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006319800857454538
    2. 'in' → logprob: -5.131319999694824
    3. ' ' → logprob: -7.881319999694824
    4. ' i' → logprob: -12.381319999694824
    5. ' n' → logprob: -12.756319999694824
    6. 'n' → logprob: -13.131319999694824
    7. '_' → logprob: -13.756319999694824
    8. '  ' → logprob: -14.381319999694824
    9. ',' → logprob: -15.006319999694824
    10. 'range' → logprob: -15.256319999694824

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868841528892517
    2. ' range' → logprob: -1.1368842124938965
    3. '	range' → logprob: -12.636883735656738
    4. '_range' → logprob: -13.136883735656738
    5. ' ' → logprob: -13.136883735656738
    6. 'n' → logprob: -13.261883735656738
    7. 'in' → logprob: -13.886883735656738
    8. '(range' → logprob: -14.011883735656738
    9. '_' → logprob: -14.511883735656738
    10. ' n' → logprob: -14.761883735656738

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10326388478279114
    2. '(n' → logprob: -2.6032638549804688
    3. ' (' → logprob: -3.7282638549804688
    4. '(len' → logprob: -10.853263854980469
    5. '(range' → logprob: -10.978263854980469
    6. ' n' → logprob: -12.478263854980469
    7. 'n' → logprob: -14.103263854980469
    8. ' ' → logprob: -14.353263854980469
    9. '(
' → logprob: -14.478263854980469
    10. '((' → logprob: -14.728263854980469

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31820428371429443
    2. ')' → logprob: -1.3182042837142944
    3. ':' → logprob: -5.318204402923584
    4. ':)' → logprob: -11.943203926086426
    5. '+' → logprob: -12.443203926086426
    6. '):
' → logprob: -12.818203926086426
    7. '')' → logprob: -13.318203926086426
    8. ''):' → logprob: -13.318203926086426
    9. ' ):' → logprob: -13.443203926086426
    10. ' )' → logprob: -13.818203926086426

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006165308877825737
    2. '    
' → logprob: -5.381165504455566
    3. ' print' → logprob: -7.256165504455566
    4. ' input' → logprob: -8.131165504455566
    5. '    ' → logprob: -8.756165504455566
    6. 'print' → logprob: -9.256165504455566
    7. '```' → logprob: -9.256165504455566
    8. ' 
' → logprob: -10.006165504455566
    9. ' ' → logprob: -10.381165504455566
    10. 'input' → logprob: -10.631165504455566

Token 12: ' bases' (ID: 31148)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05809302628040314
    2. 'x' → logprob: -4.308093070983887
    3. 'a' → logprob: -4.433093070983887
    4. 'print' → logprob: -4.558093070983887
    5. 'i' → logprob: -5.683093070983887
    6. 'name' → logprob: -5.933093070983887
    7. 'text' → logprob: -5.933093070983887
    8. 'input' → logprob: -6.558093070983887
    9. 'data' → logprob: -6.683093070983887
    10. ' ' → logprob: -6.683093070983887

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5003879070281982
    2. '[' → logprob: -1.1253879070281982
    3. '=' → logprob: -3.3753879070281982
    4. '_' → logprob: -4.000388145446777
    5. ',' → logprob: -5.000388145446777
    6. '.' → logprob: -6.125388145446777
    7. ')' → logprob: -6.500388145446777
    8. '[]' → logprob: -6.625388145446777
    9. 's' → logprob: -6.625388145446777
    10. '   ' → logprob: -7.375388145446777

Token 14: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06473776698112488
    2. 'list' → logprob: -3.0647377967834473
    3. ' input' → logprob: -4.439737796783447
    4. 'input' → logprob: -6.314737796783447
    5. ' map' → logprob: -7.064737796783447
    6. ' [' → logprob: -7.439737796783447
    7. '[' → logprob: -7.564737796783447
    8. ' []' → logprob: -8.814737319946289
    9. '[]' → logprob: -9.189737319946289
    10. 'map' → logprob: -9.314737319946289

Token 15: 'False' (ID: 8168)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3213684856891632
    2. '0' → logprob: -1.6963684558868408
    3. '(int' → logprob: -3.571368455886841
    4. ']' → logprob: -4.32136869430542
    5. 'list' → logprob: -4.32136869430542
    6. '1' → logprob: -4.82136869430542
    7. '[int' → logprob: -4.82136869430542
    8. '[]' → logprob: -5.32136869430542
    9. '()]' → logprob: -5.69636869430542
    10. 'map' → logprob: -6.07136869430542

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18724104762077332
    2. ']' → logprob: -1.9372410774230957
    3. ' for' → logprob: -3.6872410774230957
    4. '   ' → logprob: -7.812241077423096
    5. 'for' → logprob: -8.187240600585938
    6. ']*' → logprob: -8.562240600585938
    7. ')' → logprob: -8.812240600585938
    8. '[' → logprob: -8.812240600585938
    9. ' ,' → logprob: -8.937240600585938
    10. ' ]' → logprob: -9.062240600585938

Token 17: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.38873326778411865
    2. ' False' → logprob: -1.1387332677841187
    3. ' True' → logprob: -6.638733386993408
    4. 'True' → logprob: -7.513733386993408
    5. '(False' → logprob: -12.38873291015625
    6. '=False' → logprob: -14.13873291015625
    7. ' ' → logprob: -14.63873291015625
    8. ']' → logprob: -15.01373291015625
    9. '    ' → logprob: -15.51373291015625
    10. '   ' → logprob: -15.76373291015625

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010189944878220558
    2. ']' → logprob: -7.12601900100708
    3. ' ,' → logprob: -9.126018524169922
    4. 'False' → logprob: -10.001018524169922
    5. '   ' → logprob: -11.251018524169922
    6. 'True' → logprob: -11.626018524169922
    7. ',
' → logprob: -11.751018524169922
    8. ')' → logprob: -12.251018524169922
    9. ' ]' → logprob: -12.876018524169922
    10. '<|end|>' → logprob: -12.876018524169922

Token 19: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4289703667163849
    2. ' False' → logprob: -1.0539703369140625
    3. ' True' → logprob: -9.053970336914062
    4. 'True' → logprob: -9.428970336914062
    5. '(False' → logprob: -10.303970336914062
    6. '    ' → logprob: -10.803970336914062
    7. '...' → logprob: -12.303970336914062
    8. ']' → logprob: -12.303970336914062
    9. '   ' → logprob: -12.553970336914062
    10. ' ' → logprob: -13.553970336914062

Token 20: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.576952338218689
    2. ']' → logprob: -0.826952338218689
    3. ' ]' → logprob: -7.7019524574279785
    4. '   ' → logprob: -8.07695198059082
    5. ')' → logprob: -9.57695198059082
    6. ' ,' → logprob: -9.95195198059082
    7. ')]' → logprob: -10.70195198059082
    8. ',
' → logprob: -10.95195198059082
    9. '<|end|>' → logprob: -11.07695198059082
    10. '```' → logprob: -11.70195198059082

Token 21: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1290372610092163
    2. '[' → logprob: -1.5040372610092163
    3. ',' → logprob: -1.7540372610092163
    4. '```' → logprob: -2.629037380218506
    5. ' for' → logprob: -3.004037380218506
    6. 'for' → logprob: -3.004037380218506
    7. ' ' → logprob: -4.129037380218506
    8. '  ' → logprob: -4.254037380218506
    9. '<|end|>' → logprob: -4.254037380218506
    10. '[]' → logprob: -4.504037380218506

Token 22: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9679209589958191
    2. '<|end|>' → logprob: -0.9679209589958191
    3. ',' → logprob: -2.717921018600464
    4. ' for' → logprob: -2.717921018600464
    5. 'for' → logprob: -2.967921018600464
    6. ' if' → logprob: -4.092920780181885
    7. ' ' → logprob: -4.717920780181885
    8. 'if' → logprob: -5.092920780181885
    9. '    
' → logprob: -5.467920780181885
    10. '[' → logprob: -5.592920780181885

Token 23: ' first' (ID: 1577)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9293416142463684
    2. ' ' → logprob: -1.0543415546417236
    3. '[' → logprob: -2.4293415546417236
    4. ' bases' → logprob: -2.8043415546417236
    5. ' ]' → logprob: -4.054341793060303
    6. ' False' → logprob: -4.179341793060303
    7. 'True' → logprob: -4.304341793060303
    8. ' b' → logprob: -4.929341793060303
    9. ' [' → logprob: -5.054341793060303
    10. '  ' → logprob: -5.179341793060303

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.519338071346283
    2. ' ' → logprob: -1.8943381309509277
    3. ' ,' → logprob: -2.2693381309509277
    4. '[' → logprob: -3.5193381309509277
    5. 'space' → logprob: -3.7693381309509277
    6. ' ]' → logprob: -4.019338130950928
    7. '_' → logprob: -4.519338130950928
    8. ']' → logprob: -4.894338130950928
    9. ' bases' → logprob: -4.894338130950928
    10. ')' → logprob: -5.144338130950928

Token 25: ' second' (ID: 3099)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10282880812883377
    2. ' ,' → logprob: -4.1028289794921875
    3. '  ' → logprob: -4.2278289794921875
    4. ',' → logprob: -4.7278289794921875
    5. ' second' → logprob: -4.7278289794921875
    6. ' space' → logprob: -4.9778289794921875
    7. ' True' → logprob: -5.3528289794921875
    8. '    ' → logprob: -5.8528289794921875
    9. 'space' → logprob: -5.8528289794921875
    10. ' bases' → logprob: -5.9778289794921875

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32146045565605164
    2. ' ,' → logprob: -1.446460485458374
    3. ' ' → logprob: -4.571460247039795
    4. ' ]' → logprob: -4.696460247039795
    5. ']' → logprob: -4.821460247039795
    6. '[' → logprob: -4.946460247039795
    7. ')' → logprob: -6.571460247039795
    8. '<|end|>' → logprob: -6.821460247039795
    9. '   ' → logprob: -7.946460247039795
    10. ' )' → logprob: -8.071460723876953

Token 27: ' third' (ID: 6914)
  Prédit: ' third'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' third' → logprob: -0.48093822598457336
    2. 'third' → logprob: -0.980938196182251
    3. ' and' → logprob: -5.10593843460083
    4. 'and' → logprob: -7.60593843460083
    5. ',' → logprob: -10.230937957763672
    6. 'Third' → logprob: -10.230937957763672
    7. ' ' → logprob: -11.105937957763672
    8. ' thr' → logprob: -11.105937957763672
    9. '...' → logprob: -11.230937957763672
    10. '#' → logprob: -11.355937957763672

Token 28: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015764284878969193
    2. ' for' → logprob: -6.265764236450195
    3. '```' → logprob: -6.265764236450195
    4. '[' → logprob: -6.515764236450195
    5. 'for' → logprob: -6.515764236450195
    6. ' ' → logprob: -6.515764236450195
    7. '    
' → logprob: -6.765764236450195
    8. '
' → logprob: -7.140764236450195
    9. ',' → logprob: -7.140764236450195
    10. '   
' → logprob: -7.390764236450195

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032330483198165894
    2. '    
' → logprob: -5.157330513000488
    3. 'if' → logprob: -5.407330513000488
    4. '```' → logprob: -5.657330513000488
    5. 's' → logprob: -5.782330513000488
    6. ',' → logprob: -6.282330513000488
    7. ' ' → logprob: -6.282330513000488
    8. ' if' → logprob: -6.282330513000488
    9. '[' → logprob: -6.657330513000488
    10. '   
' → logprob: -6.782330513000488

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02474033273756504
    2. 'if' → logprob: -4.774740219116211
    3. ' if' → logprob: -5.024740219116211
    4. '```' → logprob: -5.149740219116211
    5. 'for' → logprob: -6.774740219116211
    6. ' for' → logprob: -6.899740219116211
    7. '    
' → logprob: -8.399740219116211
    8. 's' → logprob: -8.649740219116211
    9. '       ' → logprob: -8.899740219116211
    10. '``' → logprob: -9.024740219116211

Token 31: ' score' (ID: 8429)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5128809213638306
    2. 'b' → logprob: -2.137880802154541
    3. 'i' → logprob: -2.262880802154541
    4. ')' → logprob: -2.887880802154541
    5. 's' → logprob: -3.012880802154541
    6. '<|end|>' → logprob: -3.012880802154541
    7. 'while' → logprob: -3.137880802154541
    8. 'run' → logprob: -3.387880802154541
    9. 'space' → logprob: -3.762880802154541
    10. 'bases' → logprob: -4.012880802154541

Token 32: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6396145224571228
    2. ' +=' → logprob: -0.7646145224571228
    3. 's' → logprob: -5.139614582061768
    4. '=' → logprob: -7.764614582061768
    5. '+' → logprob: -7.889614582061768
    6. '++' → logprob: -8.76461410522461
    7. ' =' → logprob: -9.01461410522461
    8. '```' → logprob: -10.88961410522461
    9. ']+=' → logprob: -11.51461410522461
    10. 'd' → logprob: -12.63961410522461

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859304800629616
    2. ' ' → logprob: -3.048593044281006
    3. ' ' → logprob: -12.423593521118164
    4. '1' → logprob: -14.048593521118164
    5. 'space' → logprob: -15.798593521118164
    6. ' 
' → logprob: -16.423593521118164
    7. ' space' → logprob: -16.611093521118164
    8. '32' → logprob: -16.736093521118164
    9. '3' → logprob: -17.048593521118164
    10. '`' → logprob: -17.111093521118164

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. ' ' → logprob: -17.87523078918457
    4. '   ' → logprob: -18.06273078918457
    5. 'int' → logprob: -18.06273078918457
    6. '<|end|>' → logprob: -18.25023078918457
    7. '000' → logprob: -18.31273078918457
    8. '۰' → logprob: -18.37523078918457
    9. '1' → logprob: -18.62523078918457
    10. 's' → logprob: -18.68773078918457

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02838159166276455
    2. '
' → logprob: -5.028381824493408
    3. '<|end|>' → logprob: -5.153381824493408
    4. 'for' → logprob: -5.528381824493408
    5. '    
' → logprob: -5.903381824493408
    6. ' for' → logprob: -6.153381824493408
    7. '```' → logprob: -6.153381824493408
    8. '\n' → logprob: -6.653381824493408
    9. 'while' → logprob: -6.903381824493408
    10. ' while' → logprob: -7.403381824493408

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' outs' (ID: 34373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6461885571479797
    2. 'while' → logprob: -1.271188497543335
    3. 'b' → logprob: -3.146188497543335
    4. 'for' → logprob: -3.521188497543335
    5. 'i' → logprob: -4.146188735961914
    6. ' while' → logprob: -4.146188735961914
    7. 'line' → logprob: -4.271188735961914
    8. 's' → logprob: -4.271188735961914
    9. '```' → logprob: -4.396188735961914
    10. 'run' → logprob: -4.646188735961914

Token 38: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0018047726480290294
    2. ' =' → logprob: -6.376804828643799
    3. ' ' → logprob: -10.62680435180664
    4. '+=' → logprob: -10.75180435180664
    5. ' ==' → logprob: -10.87680435180664
    6. ' >' → logprob: -11.00180435180664
    7. ' -=' → logprob: -12.12680435180664
    8. ' |=' → logprob: -12.37680435180664
    9. ' <' → logprob: -13.25180435180664
    10. '  ' → logprob: -13.75180435180664

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.523780107498169
    2. ' ' → logprob: -0.898780107498169
    3. '1' → logprob: -7.39877986907959
    4. '3' → logprob: -10.27377986907959
    5. ''' → logprob: -12.52377986907959
    6. '2' → logprob: -12.52377986907959
    7. 'space' → logprob: -13.52377986907959
    8. ' ' → logprob: -15.02377986907959
    9. '`' → logprob: -15.33627986907959
    10. '4' → logprob: -15.83627986907959

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -11.000020980834961
    3. '3' → logprob: -12.875020980834961
    4. '1' → logprob: -14.500020980834961
    5. '   ' → logprob: -15.125020980834961
    6. '2' → logprob: -15.625020980834961
    7. 'out' → logprob: -15.750020980834961
    8. '```' → logprob: -17.25002098083496
    9. 'outs' → logprob: -17.75002098083496
    10. '[]' → logprob: -18.75002098083496

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09998643398284912
    2. 'while' → logprob: -2.8499865531921387
    3. ' while' → logprob: -4.349986553192139
    4. '    
' → logprob: -4.724986553192139
    5. '<|end|>' → logprob: -5.099986553192139
    6. '
' → logprob: -5.724986553192139
    7. '	while' → logprob: -6.724986553192139
    8. '\n' → logprob: -6.724986553192139
    9. '```' → logprob: -6.724986553192139
    10. ' 
' → logprob: -7.724986553192139

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5329157114028931
    2. '<|end|>' → logprob: -1.157915711402893
    3. ' while' → logprob: -3.1579155921936035
    4. 'while' → logprob: -3.1579155921936035
    5. '    
' → logprob: -5.9079155921936035
    6. '
' → logprob: -5.9079155921936035
    7. ' 
' → logprob: -6.0329155921936035
    8. ' ' → logprob: -6.4079155921936035
    9. '<|end|>' → logprob: -6.7829155921936035
    10. '\n' → logprob: -7.4079155921936035

Token 43: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3266371488571167
    2. ' while' → logprob: -1.4516371488571167
    3. '   ' → logprob: -3.7016372680664062
    4. ' ' → logprob: -5.326637268066406
    5. '<|end|>' → logprob: -5.326637268066406
    6. '	while' → logprob: -6.076637268066406
    7. ' 
' → logprob: -6.451637268066406
    8. '\n' → logprob: -6.826637268066406
    9. 's' → logprob: -6.951637268066406
    10. 'w' → logprob: -6.951637268066406

Token 44: ' outs' (ID: 34373)
  Prédit: ' outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outs' → logprob: -0.002479104558005929
    2. 'outs' → logprob: -6.002479076385498
    3. ' True' → logprob: -14.002479553222656
    4. ' ' → logprob: -14.377479553222656
    5. ' ' → logprob: -14.502479553222656
    6. ' outr' → logprob: -14.627479553222656
    7. ' not' → logprob: -14.752479553222656
    8. ' out' → logprob: -14.877479553222656
    9. 'True' → logprob: -16.627479553222656
    10. ' os' → logprob: -17.377479553222656

Token 45: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.002807725453749299
    2. '<' → logprob: -5.8778076171875
    3. ' ' → logprob: -13.6278076171875
    4. '<int' → logprob: -14.2528076171875
    5. '<class' → logprob: -15.3778076171875
    6. '[' → logprob: -16.0028076171875
    7. '<size' → logprob: -16.0028076171875
    8. '<|end|>' → logprob: -16.2528076171875
    9. '<num' → logprob: -16.7528076171875
    10. ' <",' → logprob: -17.0028076171875

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2254139631986618
    2. '3' → logprob: -1.6004139184951782
    3. '4' → logprob: -14.725414276123047
    4. ' three' → logprob: -14.725414276123047
    5. ' ' → logprob: -15.725414276123047
    6. '```' → logprob: -16.100414276123047
    7. '1' → logprob: -16.725414276123047
    8. 'out' → logprob: -17.350414276123047
    9. ')' → logprob: -17.412914276123047
    10. ' out' → logprob: -17.600414276123047

Token 47: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.625011444091797
    4. 'out' → logprob: -19.125011444091797
    5. '３' → logprob: -19.625011444091797
    6. ' three' → logprob: -19.750011444091797
    7. '`' → logprob: -19.750011444091797
    8. '۳' → logprob: -20.250011444091797
    9. '' → logprob: -20.500011444091797
    10. '   ' → logprob: -20.875011444091797

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.7133641196996905e-05
    2. ':
' → logprob: -11.00002670288086
    3. '):' → logprob: -12.50002670288086
    4. ':**' → logprob: -12.75002670288086
    5. '   ' → logprob: -12.87502670288086
    6. '>:' → logprob: -16.00002670288086
    7. ' :' → logprob: -16.12502670288086
    8. '():' → logprob: -16.37502670288086
    9. '>' → logprob: -16.62502670288086
    10. ':

' → logprob: -16.62502670288086

Token 49: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35656723380088806
    2. '       ' → logprob: -1.2315672636032104
    3. '    
' → logprob: -5.4815673828125
    4. '    ' → logprob: -6.4815673828125
    5. ' ' → logprob: -7.3565673828125
    6. '        
' → logprob: -7.6065673828125
    7. '<|end|>' → logprob: -8.4815673828125
    8. 'n' → logprob: -8.8565673828125
    9. ' 
' → logprob: -8.8565673828125
    10. '  ' → logprob: -8.9815673828125

Token 50: ' try' (ID: 2075)
  Prédit: ' play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' play' → logprob: -1.840397596359253
    2. ' hit' → logprob: -1.840397596359253
    3. '   ' → logprob: -2.090397596359253
    4. ' run' → logprob: -2.215397596359253
    5. ' pitch' → logprob: -2.215397596359253
    6. ' c' → logprob: -2.340397596359253
    7. 'play' → logprob: -3.465397596359253
    8. ' at' → logprob: -3.715397596359253
    9. 'pitch' → logprob: -3.965397596359253
    10. ' event' → logprob: -4.090397834777832

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033677080646157265
    2. ':
' → logprob: -5.878367900848389
    3. ' :' → logprob: -7.628367900848389
    4. '   ' → logprob: -9.62836742401123
    5. ':

' → logprob: -13.25336742401123
    6. ':
' → logprob: -13.37836742401123
    7. ' :
' → logprob: -13.75336742401123
    8. ' ' → logprob: -14.25336742401123
    9. ' except' → logprob: -14.37836742401123
    10. '<|end|>' → logprob: -14.62836742401123

Token 52: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2243669331073761
    2. '   ' → logprob: -1.8493669033050537
    3. ' line' → logprob: -3.4743669033050537
    4. ' input' → logprob: -5.224367141723633
    5. ' batter' → logprob: -6.349367141723633
    6. ' code' → logprob: -6.724367141723633
    7. ' play' → logprob: -7.349367141723633
    8. 'input' → logprob: -7.474367141723633
    9. ' run' → logprob: -7.849367141723633
    10. 'line' → logprob: -8.099367141723633

Token 53: ' event' (ID: 2104)
  Prédit: ' play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' play' → logprob: -0.49960440397262573
    2. '           ' → logprob: -1.7496044635772705
    3. 'play' → logprob: -2.8746044635772705
    4. ' pitch' → logprob: -2.9996044635772705
    5. ' line' → logprob: -3.6246044635772705
    6. ' action' → logprob: -3.9996044635772705
    7. '   ' → logprob: -4.374604225158691
    8. ' input' → logprob: -4.374604225158691
    9. ' at' → logprob: -4.999604225158691
    10. ' event' → logprob: -5.124604225158691

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017368246335536242
    2. '=' → logprob: -6.376736640930176
    3. ' ' → logprob: -11.126736640930176
    4. ')' → logprob: -11.126736640930176
    5. ',' → logprob: -13.626736640930176
    6. ' )' → logprob: -13.751736640930176
    7. '[' → logprob: -14.126736640930176
    8. 's' → logprob: -14.126736640930176
    9. ']' → logprob: -14.751736640930176
    10. '_' → logprob: -15.251736640930176

Token 55: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06020796298980713
    2. ' int' → logprob: -3.3102078437805176
    3. 'input' → logprob: -3.9352078437805176
    4. 'int' → logprob: -6.060207843780518
    5. ' list' → logprob: -11.560208320617676
    6. ' ' → logprob: -11.685208320617676
    7. '   ' → logprob: -11.685208320617676
    8. ' str' → logprob: -12.560208320617676
    9. '	input' → logprob: -12.810208320617676
    10. ' ' → logprob: -13.185208320617676

Token 56: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007096902118064463
    2. '().' → logprob: -7.625709533691406
    3. '())' → logprob: -10.000709533691406
    4. '(' → logprob: -10.250709533691406
    5. '`()' → logprob: -10.375709533691406
    6. '()
' → logprob: -10.750709533691406
    7. '()`' → logprob: -11.000709533691406
    8. '>()' → logprob: -11.250709533691406
    9. '("' → logprob: -11.500709533691406
    10. ')' → logprob: -11.875709533691406

Token 57: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0002458430244587362
    2. 'rstrip' → logprob: -8.500246047973633
    3. 'lower' → logprob: -10.500246047973633
    4. 'split' → logprob: -11.125246047973633
    5. 'upper' → logprob: -17.875246047973633
    6. ' strip' → logprob: -18.125246047973633
    7. 'str' → logprob: -18.500246047973633
    8. 'read' → logprob: -19.000246047973633
    9. 'startswith' → logprob: -19.375246047973633
    10. '.strip' → logprob: -19.500246047973633

Token 58: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006056951242499053
    2. '())' → logprob: -7.875605583190918
    3. ')' → logprob: -9.000605583190918
    4. '(' → logprob: -9.750605583190918
    5. '('' → logprob: -10.875605583190918
    6. '()
' → logprob: -12.000605583190918
    7. '().' → logprob: -12.125605583190918
    8. '()`' → logprob: -12.875605583190918
    9. '()>' → logprob: -13.750605583190918
    10. '()</' → logprob: -13.750605583190918

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7007925510406494
    2. '<|end|>' → logprob: -0.7007925510406494
    3. '<|end|>' → logprob: -5.45079231262207
    4. ' if' → logprob: -6.57579231262207
    5. ' ' → logprob: -6.95079231262207
    6. ')' → logprob: -8.57579231262207
    7. '
' → logprob: -8.82579231262207
    8. '           ' → logprob: -8.95079231262207
    9. '   ' → logprob: -9.07579231262207
    10. 'if' → logprob: -9.32579231262207

Token 61: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.6931482553482056
    2. ' EOF' → logprob: -0.6931482553482056
    3. '(' → logprob: -13.943148612976074
    4. ' (' → logprob: -17.068147659301758
    5. 'Exception' → logprob: -17.443147659301758
    6. 'EO' → logprob: -17.568147659301758
    7. '(Exception' → logprob: -17.693147659301758
    8. 'E' → logprob: -17.943147659301758
    9. 'Stop' → logprob: -18.193147659301758
    10. ' ' → logprob: -18.193147659301758

Token 62: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -18.25
    3. 'error' → logprob: -18.375
    4. ' Error' → logprob: -18.75
    5. 'E' → logprob: -19.875
    6. 'Er' → logprob: -19.875
    7. 'Erro' → logprob: -19.875
    8. '	Error' → logprob: -19.875
    9. ':' → logprob: -20.25
    10. 'EOF' → logprob: -20.375

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017870404990389943
    2. ':
' → logprob: -6.376787185668945
    3. '           ' → logprob: -10.001787185668945
    4. ' :' → logprob: -10.751787185668945
    5. '   ' → logprob: -11.876787185668945
    6. '       ' → logprob: -12.251787185668945
    7. '=' → logprob: -13.751787185668945
    8. ' ' → logprob: -14.001787185668945
    9. '):' → logprob: -14.126787185668945
    10. '<|end|>' → logprob: -14.376787185668945

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26907601952552795
    2. ' break' → logprob: -1.5190759897232056
    3. 'break' → logprob: -4.644075870513916
    4. '       ' → logprob: -5.269075870513916
    5. '   ' → logprob: -6.519075870513916
    6. '	break' → logprob: -7.769075870513916
    7. '               ' → logprob: -8.894076347351074
    8. ' ' → logprob: -9.144076347351074
    9. '```' → logprob: -10.644076347351074
    10. ' ' → logprob: -10.894076347351074

Token 65: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5776183605194092
    2. 'break' (adapté à ' break') → logprob: -0.8276183605194092
    3. '           ' → logprob: -6.827618598937988
    4. '       ' → logprob: -7.702618598937988
    5. '	break' → logprob: -9.077618598937988
    6. '   ' → logprob: -11.452618598937988
    7. '```' → logprob: -12.077618598937988
    8. '               ' → logprob: -12.702618598937988
    9. '_break' → logprob: -12.952618598937988
    10. 'b' → logprob: -13.952618598937988

Token 66: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14706748723983765
    2. '<|end|>' → logprob: -2.2720675468444824
    3. '       ' → logprob: -3.6470675468444824
    4. '        
' → logprob: -5.272067546844482
    5. '<|end|>' → logprob: -7.272067546844482
    6. '\n' → logprob: -7.772067546844482
    7. '```' → logprob: -8.022067070007324
    8. '    
' → logprob: -8.522067070007324
    9. ' 
' → logprob: -8.772067070007324
    10. '  
' → logprob: -8.772067070007324

Token 68: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6002056002616882
    2. ' if' → logprob: -1.850205659866333
    3. '<|end|>' → logprob: -1.850205659866333
    4. 'if' (adapté à ' if') → logprob: -2.225205659866333
    5. '<|end|>' → logprob: -5.100205421447754
    6. ' 
' → logprob: -5.225205421447754
    7. '
' → logprob: -5.350205421447754
    8. '        
' → logprob: -5.725205421447754
    9. ' ' → logprob: -6.475205421447754
    10. '   ' → logprob: -6.475205421447754

Token 69: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.006611041724681854
    2. 'event' → logprob: -5.131610870361328
    3. ' ' → logprob: -7.506610870361328
    4. ' not' → logprob: -9.256610870361328
    5. ' '' → logprob: -11.131610870361328
    6. ' ' → logprob: -11.881610870361328
    7. ' events' → logprob: -11.881610870361328
    8. ' len' → logprob: -13.256610870361328
    9. '	event' → logprob: -13.256610870361328
    10. ''' → logprob: -13.506610870361328

Token 70: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00686952518299222
    2. '==' → logprob: -5.006869316101074
    3. ' ' → logprob: -9.256869316101074
    4. ' in' → logprob: -10.381869316101074
    5. '.startswith' → logprob: -11.631869316101074
    6. ' ' → logprob: -12.381869316101074
    7. '[' → logprob: -12.631869316101074
    8. ' =='' → logprob: -12.631869316101074
    9. ' =="' → logprob: -12.756869316101074
    10. '=="' → logprob: -13.381869316101074

Token 71: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6379311084747314
    2. ''' → logprob: -1.0129311084747314
    3. ' "' → logprob: -2.7629311084747314
    4. ' '' → logprob: -3.1379311084747314
    5. '''' → logprob: -7.762930870056152
    6. ' ''' → logprob: -8.012930870056152
    7. '""' → logprob: -8.012930870056152
    8. ' ""' → logprob: -8.137930870056152
    9. ''s' → logprob: -9.012930870056152
    10. ''a' → logprob: -9.512930870056152

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029230579733848572
    2. ' continue' → logprob: -4.52923059463501
    3. ':' → logprob: -5.27923059463501
    4. ' or' → logprob: -5.40423059463501
    5. '   ' → logprob: -5.65423059463501
    6. '       ' → logprob: -5.65423059463501
    7. ':
' → logprob: -7.52923059463501
    8. 'continue' → logprob: -8.529230117797852
    9. '               ' → logprob: -9.029230117797852
    10. '	continue' → logprob: -9.154230117797852

Token 73: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06454645097255707
    2. 'break' (adapté à ' break') → logprob: -3.3145463466644287
    3. ' continue' → logprob: -4.064546585083008
    4. '           ' → logprob: -5.064546585083008
    5. 'continue' → logprob: -6.439546585083008
    6. '       ' → logprob: -7.189546585083008
    7. '   ' → logprob: -9.064546585083008
    8. '	break' → logprob: -9.314546585083008
    9. '```' → logprob: -10.439546585083008
    10. ' ' → logprob: -10.689546585083008

Token 74: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06036867946386337
    2. '
' → logprob: -3.435368776321411
    3. '<|end|>' → logprob: -3.810368776321411
    4. '        
' → logprob: -5.810368537902832
    5. '\n' → logprob: -8.185368537902832
    6. '<|end|>' → logprob: -8.935368537902832
    7. 'elif' → logprob: -9.185368537902832
    8. '    
' → logprob: -9.310368537902832
    9. '```' → logprob: -9.310368537902832
    10. ' 
' → logprob: -9.560368537902832

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03592214360833168
    2. '
' → logprob: -3.535922050476074
    3. '<|end|>' → logprob: -6.160922050476074
    4. '        
' → logprob: -6.410922050476074
    5. '```' → logprob: -7.785922050476074
    6. '    
' → logprob: -7.910922050476074
    7. ' 
' → logprob: -8.160922050476074
    8. '   ' → logprob: -8.285922050476074
    9. 'elif' → logprob: -8.285922050476074
    10. ' elif' → logprob: -8.785922050476074

Token 76: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2002202272415161
    2. '       ' → logprob: -1.2002202272415161
    3. ' if' → logprob: -2.0752201080322266
    4. ' 
' → logprob: -2.2002201080322266
    5. ' elif' → logprob: -3.0752201080322266
    6. '   ' → logprob: -3.4502201080322266
    7. 'if' (adapté à ' if') → logprob: -4.075220108032227
    8. '<|end|>' → logprob: -4.450220108032227
    9. '        
' → logprob: -5.075220108032227
    10. '    
' → logprob: -5.075220108032227

Token 77: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.055555399507284164
    2. ' ' → logprob: -3.1805553436279297
    3. 'event' → logprob: -4.68055534362793
    4. ' ' → logprob: -6.55555534362793
    5. ' '' → logprob: -7.18055534362793
    6. ''' → logprob: -7.43055534362793
    7. ' not' → logprob: -9.18055534362793
    8. ' events' → logprob: -9.55555534362793
    9. '	event' → logprob: -10.05555534362793
    10. ' a' → logprob: -10.30555534362793

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0007995037594810128
    2. '==' → logprob: -7.750799655914307
    3. ' =='' → logprob: -9.000799179077148
    4. ' ' → logprob: -9.250799179077148
    5. ' in' → logprob: -9.875799179077148
    6. '[' → logprob: -10.125799179077148
    7. ' =="' → logprob: -10.500799179077148
    8. '.startswith' → logprob: -11.125799179077148
    9. ' ' → logprob: -12.125799179077148
    10. '	' → logprob: -13.000799179077148

Token 79: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.058801498264074326
    2. ' '' → logprob: -3.3088014125823975
    3. '"' → logprob: -3.9338014125823975
    4. ' "' → logprob: -7.558801651000977
    5. ''s' → logprob: -8.558801651000977
    6. ''S' → logprob: -9.683801651000977
    7. ''H' → logprob: -9.808801651000977
    8. ' ' → logprob: -10.558801651000977
    9. '`' → logprob: -10.933801651000977
    10. ''a' → logprob: -11.183801651000977

Token 80: 'H' (ID: 39)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.7041007280349731
    2. 'walk' → logprob: -2.0791006088256836
    3. 'strike' → logprob: -2.0791006088256836
    4. 'H' → logprob: -2.4541006088256836
    5. 'single' → logprob: -2.8291006088256836
    6. 'O' → logprob: -2.8291006088256836
    7. 'Out' → logprob: -4.954100608825684
    8. 'h' → logprob: -5.079100608825684
    9. '1' → logprob: -5.329100608825684
    10. 'OUT' → logprob: -5.454100608825684

Token 81: 'IT' (ID: 1468)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.027423785999417305
    2. '1' → logprob: -4.402423858642578
    3. '"' → logprob: -5.652423858642578
    4. 'B' → logprob: -5.777423858642578
    5. 'it' → logprob: -6.152423858642578
    6. '")' → logprob: -6.652423858642578
    7. 'IT' → logprob: -6.902423858642578
    8. 'omer' → logprob: -7.652423858642578
    9. 'P' → logprob: -8.152423858642578
    10. ' "' → logprob: -8.152423858642578

Token 82: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.12593063712120056
    2. '1' → logprob: -3.1259305477142334
    3. ' "' → logprob: -3.1259305477142334
    4. ' ":' → logprob: -4.3759307861328125
    5. '":
' → logprob: -4.7509307861328125
    6. '"' → logprob: -5.1259307861328125
    7. '":
' → logprob: -6.6259307861328125
    8. 'A' → logprob: -7.5009307861328125
    9. ' ' → logprob: -8.375930786132812
    10. ':' → logprob: -8.750930786132812

Token 83: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12420733273029327
    2. ':' → logprob: -3.4992072582244873
    3. '   ' → logprob: -3.6242072582244873
    4. ' if' → logprob: -3.6242072582244873
    5. ' bases' → logprob: -5.249207496643066
    6. ',' → logprob: -5.499207496643066
    7. ' for' → logprob: -5.499207496643066
    8. ':
' → logprob: -5.499207496643066
    9. '        
' → logprob: -5.624207496643066
    10. '#' → logprob: -5.999207496643066

Token 84: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1445803940296173
    2. ' for' → logprob: -2.519580364227295
    3. ' i' → logprob: -4.644580364227295
    4. ' bases' → logprob: -4.644580364227295
    5. '    ' → logprob: -4.769580364227295
    6. 'if' → logprob: -4.769580364227295
    7. ' #' → logprob: -5.519580364227295
    8. '        ' → logprob: -5.769580364227295
    9. '   ' → logprob: -6.394580364227295
    10. ' score' → logprob: -6.519580364227295

Token 85: ' advance' (ID: 14805)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06995599716901779
    2. 'if' → logprob: -3.569956064224243
    3. ' for' → logprob: -4.194955825805664
    4. ' #' → logprob: -4.319955825805664
    5. '        ' → logprob: -5.694955825805664
    6. '    ' → logprob: -6.194955825805664
    7. '#' → logprob: -6.569955825805664
    8. 'for' → logprob: -6.694955825805664
    9. '       ' → logprob: -7.319955825805664
    10. '   ' → logprob: -7.694955825805664

Token 86: ' runners' (ID: 61876)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1042343378067017
    2. ' for' → logprob: -1.6042343378067017
    3. '   ' → logprob: -2.104234218597412
    4. '<|end|>' → logprob: -2.229234218597412
    5. ' bases' → logprob: -2.854234218597412
    6. '    ' → logprob: -2.854234218597412
    7. 's' → logprob: -3.479234218597412
    8. 'for' → logprob: -3.479234218597412
    9. 'bases' → logprob: -4.479234218597412
    10. '       ' → logprob: -4.729234218597412

Token 87: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7652750611305237
    2. '   ' → logprob: -2.015275001525879
    3. ' ' → logprob: -2.140275001525879
    4. '    ' → logprob: -2.390275001525879
    5. '<|end|>' → logprob: -2.765275001525879
    6. '       ' → logprob: -3.515275001525879
    7. '[' → logprob: -3.765275001525879
    8. ' if' → logprob: -3.890275001525879
    9. 'for' → logprob: -4.515275001525879
    10. '        ' → logprob: -4.765275001525879

Token 89: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3191235363483429
    2. '    ' → logprob: -2.1941235065460205
    3. 'for' → logprob: -2.3191235065460205
    4. ' bases' → logprob: -3.5691235065460205
    5. ' ' → logprob: -3.9441235065460205
    6. 'bases' → logprob: -5.3191237449646
    7. '   ' → logprob: -5.4441237449646
    8. '        ' → logprob: -6.6941237449646
    9. ' if' → logprob: -6.8191237449646
    10. '       ' → logprob: -7.0691237449646

Token 90: ' bases' (ID: 31148)
  Prédit: ' bases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bases' → logprob: -0.02092604897916317
    2. 'bases' → logprob: -3.895925998687744
    3. ' not' → logprob: -8.520926475524902
    4. ' ' → logprob: -9.145926475524902
    5. '   ' → logprob: -11.020926475524902
    6. 'b' → logprob: -11.520926475524902
    7. '```' → logprob: -11.645926475524902
    8. 'not' → logprob: -12.145926475524902
    9. '    ' → logprob: -12.145926475524902
    10. ' ' → logprob: -12.270926475524902

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.153795766294934e-06
    2. ' [' → logprob: -12.250005722045898
    3. '[
' → logprob: -15.000005722045898
    4. '```' → logprob: -15.625005722045898
    5. ' ' → logprob: -15.937505722045898
    6. '==' → logprob: -16.5000057220459
    7. '=' → logprob: -16.6250057220459
    8. '0' → logprob: -16.8750057220459
    9. '][' → logprob: -17.0625057220459
    10. '#' → logprob: -17.4375057220459

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006404805462807417
    2. '0' → logprob: -7.375640392303467
    3. '

' → logprob: -12.750640869140625
    4. '1' → logprob: -13.125640869140625
    5. '[' → logprob: -13.250640869140625
    6. ' ' → logprob: -13.250640869140625
    7. '```' → logprob: -13.250640869140625
    8. '
' → logprob: -13.375640869140625
    9. '   ' → logprob: -14.813140869140625
    10. '２' → logprob: -15.438140869140625

Token 93: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06729172170162201
    2. ']' → logprob: -3.192291736602783
    3. ']:
' → logprob: -3.942291736602783
    4. ']==' → logprob: -6.192291736602783
    5. ' ]' → logprob: -6.442291736602783
    6. ':' → logprob: -7.567291736602783
    7. ']=' → logprob: -8.567291259765625
    8. ']:

' → logprob: -9.442291259765625
    9. ']:
' → logprob: -9.692291259765625
    10. ']>' → logprob: -10.942291259765625

Token 94: '               ' (ID: 506)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.19794227182865143
    2. 'score' → logprob: -2.3229422569274902
    3. '               ' → logprob: -2.5729422569274902
    4. ' ' → logprob: -6.69794225692749
    5. '	score' → logprob: -6.94794225692749
    6. '       ' → logprob: -7.94794225692749
    7. ')' → logprob: -8.072942733764648
    8. '=True' → logprob: -8.197942733764648
    9. '   ' → logprob: -8.322942733764648
    10. '=' → logprob: -8.322942733764648

Token 95: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.4742128849029541
    2. 'score' (adapté à ' score') → logprob: -0.9742128849029541
    3. '           ' → logprob: -10.474212646484375
    4. '	score' → logprob: -10.474212646484375
    5. 'bases' → logprob: -10.724212646484375
    6. '               ' → logprob: -10.849212646484375
    7. '```' → logprob: -11.599212646484375
    8. ' bases' → logprob: -11.849212646484375
    9. ' ' → logprob: -12.099212646484375
    10. '
' → logprob: -12.224212646484375

Token 96: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06197698414325714
    2. '+=' → logprob: -2.811976909637451
    3. '+' → logprob: -11.81197738647461
    4. '=' → logprob: -14.18697738647461
    5. ' =' → logprob: -14.81197738647461
    6. ']+=' → logprob: -14.93697738647461
    7. ' +' → logprob: -16.06197738647461
    8. ' ' → logprob: -16.31197738647461
    9. ' ' → logprob: -16.43697738647461
    10. '<|end|>' → logprob: -16.68697738647461

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14267565310001373
    2. ' ' → logprob: -2.0176756381988525
    3. ' ' → logprob: -15.142675399780273
    4. '   ' → logprob: -16.767675399780273
    5. '2' → logprob: -17.392675399780273
    6. '  ' → logprob: -17.392675399780273
    7. '```' → logprob: -17.580175399780273
    8. '+' → logprob: -18.017675399780273
    9. '3' → logprob: -18.080175399780273
    10. '4' → logprob: -18.580175399780273

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.18751335144043
    4. '１' → logprob: -18.18751335144043
    5. '2' → logprob: -18.43751335144043
    6. 'run' → logprob: -18.43751335144043
    7. '10' → logprob: -19.12501335144043
    8. '۱' → logprob: -19.31251335144043
    9. '100' → logprob: -19.62501335144043
    10. '```' → logprob: -19.62501335144043

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13030458986759186
    2. '           ' → logprob: -2.2553045749664307
    3. ' 
' → logprob: -5.00530481338501
    4. '               ' → logprob: -5.50530481338501
    5. '
' → logprob: -6.75530481338501
    6. '  
' → logprob: -7.00530481338501
    7. '       ' → logprob: -7.25530481338501
    8. '    
' → logprob: -7.25530481338501
    9. '            
' → logprob: -7.50530481338501
    10. '\n' → logprob: -7.50530481338501

Token 100: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5269371867179871
    2. '           ' → logprob: -1.1519372463226318
    3. ' 
' → logprob: -3.651937246322632
    4. '    
' → logprob: -3.651937246322632
    5. '       ' → logprob: -4.526937007904053
    6. '   
' → logprob: -5.151937007904053
    7. '               ' → logprob: -5.401937007904053
    8. '   ' → logprob: -5.526937007904053
    9. '  
' → logprob: -5.526937007904053
    10. ' bases' → logprob: -5.651937007904053

Token 101: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' (adapté à ' bases') → logprob: -0.12360934168100357
    2. ' bases' → logprob: -2.6236093044281006
    3. '   ' → logprob: -4.24860954284668
    4. '       ' → logprob: -4.37360954284668
    5. '           ' → logprob: -5.12360954284668
    6. 'for' → logprob: -5.49860954284668
    7. 'if' → logprob: -6.37360954284668
    8. ' for' → logprob: -6.37360954284668
    9. 'b' → logprob: -6.87360954284668
    10. '[' → logprob: -7.24860954284668

Token 102: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0023687512148171663
    2. '=' → logprob: -6.627368927001953
    3. ' =' → logprob: -6.877368927001953
    4. '=[' → logprob: -12.252368927001953
    5. '[:' → logprob: -13.002368927001953
    6. ' [' → logprob: -13.752368927001953
    7. '[:]' → logprob: -13.877368927001953
    8. '	' → logprob: -14.252368927001953
    9. '```' → logprob: -15.127368927001953
    10. '[-' → logprob: -15.252368927001953

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42584428191185
    2. '0' → logprob: -1.1758443117141724
    3. '1' → logprob: -3.300844192504883
    4. ' ' → logprob: -6.800844192504883
    5. ':' → logprob: -9.300844192504883
    6. '[' → logprob: -10.550844192504883
    7. '-' → logprob: -10.675844192504883
    8. '::-' → logprob: -10.675844192504883
    9. '   ' → logprob: -10.988344192504883
    10. ':]' → logprob: -11.550844192504883

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01550163235515356
    2. ' =' → logprob: -4.640501499176025
    3. '=' → logprob: -5.765501499176025
    4. ']=' → logprob: -6.140501499176025
    5. ' ]' → logprob: -8.140501976013184
    6. ')' → logprob: -8.890501976013184
    7. ',' → logprob: -13.015501976013184
    8. '<|end|>' → logprob: -13.015501976013184
    9. '[' → logprob: -14.015501976013184
    10. ' ' → logprob: -14.015501976013184

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38690000772476196
    2. '=' → logprob: -1.1368999481201172
    3. '=True' → logprob: -11.011899948120117
    4. '=False' → logprob: -11.761899948120117
    5. ',' → logprob: -12.511899948120117
    6. ' ' → logprob: -15.011899948120117
    7. ' =
' → logprob: -15.761899948120117
    8. 'False' → logprob: -15.761899948120117
    9. ' True' → logprob: -16.011899948120117
    10. 'True' → logprob: -16.261899948120117

Token 106: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' → logprob: -0.17913280427455902
    2. 'True' → logprob: -2.0541326999664307
    3. ' bases' → logprob: -3.5541326999664307
    4. ' True' → logprob: -5.05413293838501
    5. 'b' → logprob: -8.304132461547852
    6. '   ' → logprob: -9.179132461547852
    7. 'base' → logprob: -9.304132461547852
    8. 'False' → logprob: -9.304132461547852
    9. '1' → logprob: -9.554132461547852
    10. 'Bases' → logprob: -10.179132461547852

Token 107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.625866030342877e-05
    2. '1' → logprob: -9.375085830688477
    3. ' [' → logprob: -14.875085830688477
    4. '```' → logprob: -14.875085830688477
    5. 'True' → logprob: -15.500085830688477
    6. '	' → logprob: -16.250085830688477
    7. '()[' → logprob: -16.875085830688477
    8. 's' → logprob: -17.000085830688477
    9. '0' → logprob: -17.250085830688477
    10. '   ' → logprob: -17.250085830688477

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.375
    3. '
' → logprob: -18.125
    4. '   ' → logprob: -18.125
    5. ' ' → logprob: -18.375
    6. '１' → logprob: -18.375
    7. '```' → logprob: -18.5
    8. '

' → logprob: -18.75
    9. '۱' → logprob: -19.4375
    10. '`' → logprob: -19.5

Token 109: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023310817778110504
    2. ']
' → logprob: -3.773310899734497
    3. ' ]' → logprob: -10.023310661315918
    4. '[' → logprob: -11.773310661315918
    5. ']

' → logprob: -12.898310661315918
    6. '2' → logprob: -13.398310661315918
    7. 'True' → logprob: -13.648310661315918
    8. '1' → logprob: -13.773310661315918
    9. ']+' → logprob: -13.773310661315918
    10. '3' → logprob: -14.273310661315918

Token 110: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' (adapté à ' bases') → logprob: -0.5761579275131226
    2. ' bases' → logprob: -0.8261579275131226
    3. 'True' → logprob: -9.326157569885254
    4. ' True' → logprob: -9.951157569885254
    5. '[' → logprob: -10.701157569885254
    6. 'b' → logprob: -10.701157569885254
    7. 'False' → logprob: -10.951157569885254
    8. '   ' → logprob: -12.201157569885254
    9. '       ' → logprob: -12.701157569885254
    10. '<|end|>' → logprob: -12.951157569885254

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. ' [' → logprob: -15.625000953674316
    4. '1' → logprob: -17.0
    5. '\[' → logprob: -17.125
    6. '=' → logprob: -17.375
    7. '2' → logprob: -17.5
    8. 's' → logprob: -17.75
    9. '][' → logprob: -18.0
    10. ']' → logprob: -18.25

Token 113: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '2' → logprob: -17.5
    4. '   ' → logprob: -17.875
    5. '۰' → logprob: -19.0
    6. '1' → logprob: -19.25
    7. '[' → logprob: -19.375
    8. 'False' → logprob: -20.0
    9. '```' → logprob: -20.125
    10. ']' → logprob: -20.125

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12226102501153946
    2. '=' → logprob: -2.4972610473632812
    3. ' =' → logprob: -3.6222610473632812
    4. ']=' → logprob: -5.622261047363281
    5. ' ]' → logprob: -6.122261047363281
    6. '[' → logprob: -8.497261047363281
    7. ')' → logprob: -11.122261047363281
    8. '<|end|>' → logprob: -11.747261047363281
    9. ',' → logprob: -12.247261047363281
    10. ' ' → logprob: -13.872261047363281

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022484004497528
    2. ' =' → logprob: -1.9102247953414917
    3. '[' → logprob: -15.285224914550781
    4. ')' → logprob: -15.785224914550781
    5. ' ' → logprob: -16.03522491455078
    6. '=True' → logprob: -16.53522491455078
    7. ' bases' → logprob: -16.91022491455078
    8. ']' → logprob: -17.16022491455078
    9. ',' → logprob: -17.53522491455078
    10. '=b' → logprob: -17.91022491455078

Token 116: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' → logprob: -0.2427782267332077
    2. 'True' → logprob: -1.7427781820297241
    3. ' bases' → logprob: -3.3677783012390137
    4. ' True' → logprob: -5.117778301239014
    5. '1' → logprob: -11.117777824401855
    6. 'b' → logprob: -11.242777824401855
    7. 'base' → logprob: -11.492777824401855
    8. '   ' → logprob: -12.242777824401855
    9. 'Bases' → logprob: -12.242777824401855
    10. 'bas' → logprob: -12.367777824401855

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. 'True' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.875000953674316
    4. '```' → logprob: -17.0
    5. '0' → logprob: -17.75
    6. '	' → logprob: -18.5
    7. '   ' → logprob: -18.5
    8. '2' → logprob: -19.125
    9. '\[' → logprob: -19.75
    10. ' True' → logprob: -19.875

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1041145626222715e-05
    2. 'True' → logprob: -11.625011444091797
    3. '2' → logprob: -13.250011444091797
    4. 'False' → logprob: -16.000011444091797
    5. ' ' → logprob: -16.125011444091797
    6. ' True' → logprob: -17.250011444091797
    7. 'bases' → logprob: -17.750011444091797
    8. '[' → logprob: -17.875011444091797
    9. '1' → logprob: -19.000011444091797
    10. 'base' → logprob: -19.375011444091797

Token 119: ']
' (ID: 1592)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.1306419372558594
    2. 'True' → logprob: -1.2556419372558594
    3. '<|end|>' → logprob: -1.8806419372558594
    4. ']' → logprob: -2.0056419372558594
    5. '(True' → logprob: -3.6306419372558594
    6. ')' → logprob: -3.8806419372558594
    7. '=True' → logprob: -4.130641937255859
    8. '           ' → logprob: -4.255641937255859
    9. '[' → logprob: -4.380641937255859
    10. '       ' → logprob: -5.505641937255859

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5285826921463013
    2. '   ' → logprob: -1.4035826921463013
    3. '       ' → logprob: -2.0285825729370117
    4. 'bases' → logprob: -3.7785825729370117
    5. ' bases' → logprob: -4.778582572937012
    6. '    ' → logprob: -7.653582572937012
    7. '<|end|>' → logprob: -8.028582572937012
    8. '     ' → logprob: -8.653582572937012
    9. '  ' → logprob: -9.028582572937012
    10. ' ' → logprob: -9.028582572937012

Token 121: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' (adapté à ' bases') → logprob: -0.020721493288874626
    2. ' bases' → logprob: -3.895721435546875
    3. 'True' → logprob: -9.645721435546875
    4. ' True' → logprob: -9.770721435546875
    5. '           ' → logprob: -9.895721435546875
    6. '```' → logprob: -12.895721435546875
    7. '       ' → logprob: -13.770721435546875
    8. 'spaces' → logprob: -14.270721435546875
    9. '            
' → logprob: -14.520721435546875
    10. 'b' → logprob: -14.645721435546875

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006134323193691671
    2. '=' → logprob: -7.500613212585449
    3. ' =' → logprob: -9.75061321258545
    4. '=True' → logprob: -14.12561321258545
    5. ']' → logprob: -14.25061321258545
    6. '[
' → logprob: -15.75061321258545
    7. 's' → logprob: -16.125614166259766
    8. 'True' → logprob: -16.125614166259766
    9. '[]' → logprob: -16.625614166259766
    10. ')' → logprob: -17.250614166259766

Token 123: '0' (ID: 15)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3154412806034088
    2. '0' → logprob: -1.3154412508010864
    3. 'False' → logprob: -6.690441131591797
    4. ' True' → logprob: -7.190441131591797
    5. '1' → logprob: -8.940441131591797
    6. '(True' → logprob: -10.440441131591797
    7. '=True' → logprob: -11.315441131591797
    8. ']' → logprob: -13.065441131591797
    9. 'true' → logprob: -13.315441131591797
    10. '   ' → logprob: -13.940441131591797

Token 124: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2759281396865845
    2. ']' → logprob: -1.7759281396865845
    3. ' =' → logprob: -2.650928020477295
    4. ']=' → logprob: -6.775928020477295
    5. ')' → logprob: -10.150928497314453
    6. '=True' → logprob: -10.400928497314453
    7. 'True' → logprob: -11.900928497314453
    8. ' ]' → logprob: -13.400928497314453
    9. ')=' → logprob: -14.150928497314453
    10. '[' → logprob: -14.650928497314453

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693145871162415
    2. ' =' → logprob: -2.1269314289093018
    3. '=True' → logprob: -12.626931190490723
    4. 'True' → logprob: -16.25193214416504
    5. ')' → logprob: -17.75193214416504
    6. ' True' → logprob: -17.87693214416504
    7. 's' → logprob: -18.25193214416504
    8. ' ' → logprob: -18.62693214416504
    9. '＝' → logprob: -18.75193214416504
    10. '[' → logprob: -20.00193214416504

Token 126: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005233882926404476
    2. ' True' → logprob: -5.2552337646484375
    3. '(True' → logprob: -16.630233764648438
    4. '1' → logprob: -16.880233764648438
    5. 'true' → logprob: -18.630233764648438
    6. '   ' → logprob: -18.755233764648438
    7. '=True' → logprob: -19.380233764648438
    8. 'False' → logprob: -19.880233764648438
    9. 'Tr' → logprob: -20.130233764648438
    10. '.True' → logprob: -20.630233764648438

Token 127: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4432084858417511
    2. '       ' → logprob: -1.4432084560394287
    3. '<|end|>' → logprob: -2.1932084560394287
    4. 'elif' → logprob: -4.943208694458008
    5. '\n' → logprob: -6.568208694458008
    6. '           ' → logprob: -7.443208694458008
    7. ' elif' → logprob: -7.568208694458008
    8. '<|end|>' → logprob: -8.568208694458008
    9. '        
' → logprob: -9.943208694458008
    10. '    
' → logprob: -10.068208694458008

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01610521785914898
    2. 'elif' → logprob: -4.3911051750183105
    3. '<|end|>' → logprob: -6.0161051750183105
    4. ' elif' → logprob: -7.3911051750183105
    5. '
' → logprob: -7.8911051750183105
    6. '           ' → logprob: -10.141105651855469
    7. '	elif' → logprob: -10.641105651855469
    8. '\n' → logprob: -11.016105651855469
    9. ')' → logprob: -11.391105651855469
    10. 'else' → logprob: -11.391105651855469

Token 129: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.7226622104644775
    2. ' elif' → logprob: -0.8476622104644775
    3. '       ' → logprob: -2.4726622104644775
    4. '	elif' → logprob: -6.972661972045898
    5. '   ' → logprob: -7.597661972045898
    6. ' else' → logprob: -8.597661972045898
    7. 'else' → logprob: -10.222661972045898
    8. '           ' → logprob: -10.597661972045898
    9. ')' → logprob: -11.097661972045898
    10. '
' → logprob: -11.097661972045898

Token 130: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.007642713375389576
    2. 'event' → logprob: -4.88264274597168
    3. '"' → logprob: -10.63264274597168
    4. ' "' → logprob: -12.50764274597168
    5. ' ' → logprob: -12.88264274597168
    6. '	event' → logprob: -12.88264274597168
    7. '(event' → logprob: -13.63264274597168
    8. ' events' → logprob: -14.63264274597168
    9. ' ' → logprob: -14.63264274597168
    10. '[event' → logprob: -14.75764274597168

Token 131: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0789937749505043
    2. '==' → logprob: -2.578993797302246
    3. '[' → logprob: -9.953993797302246
    4. '=' → logprob: -11.578993797302246
    5. ' =' → logprob: -11.578993797302246
    6. ' ' → logprob: -11.953993797302246
    7. '=="' → logprob: -11.953993797302246
    8. ' ' → logprob: -12.078993797302246
    9. ' =="' → logprob: -12.203993797302246
    10. ')' → logprob: -13.078993797302246

Token 132: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02659914270043373
    2. ' "' → logprob: -3.651599168777466
    3. ''' → logprob: -8.526598930358887
    4. '"H' → logprob: -9.526598930358887
    5. ' ' → logprob: -11.651598930358887
    6. ' '' → logprob: -11.776598930358887
    7. ' ' → logprob: -13.526598930358887
    8. '	' → logprob: -13.526598930358887
    9. 'space' → logprob: -13.651598930358887
    10. '("' → logprob: -13.651598930358887

Token 133: 'H' (ID: 39)
  Prédit: 'OUT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUT' → logprob: -0.04933246225118637
    2. 'W' → logprob: -3.4243323802948
    3. 'S' → logprob: -5.424332618713379
    4. 'STR' → logprob: -5.549332618713379
    5. 'H' → logprob: -6.299332618713379
    6. ' OUT' → logprob: -6.799332618713379
    7. ' WALK' → logprob: -7.174332618713379
    8. '"' → logprob: -7.674332618713379
    9. 'K' → logprob: -7.799332618713379
    10. 'FO' → logprob: -7.924332618713379

Token 134: 'OM' (ID: 2760)
  Prédit: 'IT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IT' → logprob: -0.00353367836214602
    2. 'OME' → logprob: -6.253533840179443
    3. 'OM' → logprob: -7.503533840179443
    4. 'R' → logprob: -8.378533363342285
    5. 'it' → logprob: -8.378533363342285
    6. 'ITT' → logprob: -8.628533363342285
    7. 'It' → logprob: -9.253533363342285
    8. 'I' → logprob: -9.378533363342285
    9. 'ITLE' → logprob: -9.628533363342285
    10. 'O' → logprob: -9.878533363342285

Token 135: 'ER' (ID: 866)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6328307390213013
    2. 'ER' → logprob: -0.7578307390213013
    3. 'ERA' → logprob: -9.757830619812012
    4. 'EB' → logprob: -10.007830619812012
    5. 'Е' → logprob: -10.632830619812012
    6. 'EOF' → logprob: -11.007830619812012
    7. 'RUN' → logprob: -11.007830619812012
    8. 'ERO' → logprob: -11.382830619812012
    9. 'EP' → logprob: -11.507830619812012
    10. 'ET' → logprob: -11.882830619812012

Token 136: 'UN' (ID: 2926)
  Prédit: 'UN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UN' → logprob: -0.4262167811393738
    2. '":' → logprob: -1.4262168407440186
    3. 'un' → logprob: -2.3012168407440186
    4. '":
' → logprob: -5.3012166023254395
    5. '":
' → logprob: -7.0512166023254395
    6. '"' → logprob: -8.426217079162598
    7. '```' → logprob: -8.551217079162598
    8. '"):
' → logprob: -9.426217079162598
    9. '   ' → logprob: -9.926217079162598
    10. '           ' → logprob: -10.051217079162598

Token 137: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.41111084818840027
    2. '":' → logprob: -1.1611108779907227
    3. ':' → logprob: -3.9111108779907227
    4. ':
' → logprob: -6.161110877990723
    5. '"' → logprob: -6.911110877990723
    6. '           ' → logprob: -8.536110877990723
    7. '":
' → logprob: -9.036110877990723
    8. '       ' → logprob: -9.161110877990723
    9. ':"' → logprob: -9.536110877990723
    10. '```' → logprob: -9.661110877990723

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7153074741363525
    2. '       ' → logprob: -0.8403074741363525
    3. 'score' → logprob: -3.3403074741363525
    4. ' score' → logprob: -3.8403074741363525
    5. '   ' → logprob: -4.715307235717773
    6. ' for' → logprob: -5.340307235717773
    7. '
' → logprob: -5.465307235717773
    8. '```' → logprob: -6.465307235717773
    9. '	score' → logprob: -6.965307235717773
    10. 'for' → logprob: -8.090307235717773

Token 139: ' #' (ID: 1069)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.20630155503749847
    2. ' score' → logprob: -1.7063015699386597
    3. '           ' → logprob: -5.456301689147949
    4. 'runs' → logprob: -8.70630168914795
    5. '	score' → logprob: -9.08130168914795
    6. '   ' → logprob: -9.45630168914795
    7. '
' → logprob: -10.20630168914795
    8. 'hits' → logprob: -10.33130168914795
    9. 'num' → logprob: -10.58130168914795
    10. '```' → logprob: -10.83130168914795

Token 140: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.47710999846458435
    2. ' score' → logprob: -0.9771100282669067
    3. ' for' → logprob: -6.852109909057617
    4. 'for' → logprob: -6.852109909057617
    5. 'runs' → logprob: -8.477109909057617
    6. '#' → logprob: -9.227109909057617
    7. 'sc' → logprob: -9.227109909057617
    8. '	score' → logprob: -9.352109909057617
    9. '   ' → logprob: -9.477109909057617
    10. ' run' → logprob: -9.727109909057617

Token 141: ' all' (ID: 722)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3203763961791992
    2. '+=' → logprob: -1.3203763961791992
    3. 'score' → logprob: -5.195376396179199
    4. ' score' → logprob: -6.945376396179199
    5. '=' → logprob: -8.3203763961792
    6. '+' → logprob: -8.8203763961792
    7. '           ' → logprob: -9.3203763961792
    8. '
' → logprob: -10.5703763961792
    9. '```' → logprob: -11.3203763961792
    10. '++' → logprob: -11.4453763961792

Token 142: ' runners' (ID: 61876)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.24534505605697632
    2. ' +=' → logprob: -2.745345115661621
    3. ' score' → logprob: -2.995345115661621
    4. ' =' → logprob: -3.995345115661621
    5. '+' → logprob: -4.370345115661621
    6. ' for' → logprob: -4.370345115661621
    7. '=' → logprob: -4.495345115661621
    8. 'for' → logprob: -4.495345115661621
    9. '+=' → logprob: -4.620345115661621
    10. 'bases' → logprob: -5.245345115661621

Token 143: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7126337885856628
    2. ' +=' → logprob: -1.5876338481903076
    3. '
' → logprob: -1.9626338481903076
    4. '+=' → logprob: -2.3376338481903076
    5. '+' → logprob: -2.9626338481903076
    6. 'score' → logprob: -4.5876336097717285
    7. ' +' → logprob: -6.0876336097717285
    8. '               ' → logprob: -7.0876336097717285
    9. '            
' → logprob: -7.8376336097717285
    10. '+
' → logprob: -7.9626336097717285

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02872440032660961
    2. ' ' → logprob: -3.653724431991577
    3. 'score' → logprob: -6.778724193572998
    4. ' score' → logprob: -7.028724193572998
    5. '           ' → logprob: -7.903724193572998
    6. '       ' → logprob: -12.278724670410156
    7. '   ' → logprob: -12.403724670410156
    8. '
' → logprob: -12.528724670410156
    9. '```' → logprob: -12.903724670410156
    10. 'sum' → logprob: -13.153724670410156

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.290784560609609e-05
    2. 'score' → logprob: -9.625072479248047
    3. ' ' → logprob: -12.000072479248047
    4. '4' → logprob: -15.750072479248047
    5. '+' → logprob: -16.375072479248047
    6. '```' → logprob: -16.750072479248047
    7. 'sum' → logprob: -16.875072479248047
    8. 'count' → logprob: -17.000072479248047
    9. ' score' → logprob: -17.250072479248047
    10. '100' → logprob: -17.625072479248047

Token 146: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29940658807754517
    2. 'score' → logprob: -1.5494065284729004
    3. '
' → logprob: -3.5494065284729004
    4. ' score' → logprob: -4.4244065284729
    5. '       ' → logprob: -6.4244065284729
    6. ' for' → logprob: -7.2994065284729
    7. '	score' → logprob: -7.4244065284729
    8. '               ' → logprob: -7.5494065284729
    9. ',' → logprob: -8.049407005310059
    10. '=' → logprob: -8.174407005310059

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05637656897306442
    2. 'score' → logprob: -3.0563764572143555
    3. ' score' → logprob: -5.3063764572143555
    4. '       ' → logprob: -7.3063764572143555
    5. ' for' → logprob: -7.4313764572143555
    6. '
' → logprob: -7.6813764572143555
    7. '               ' → logprob: -8.681376457214355
    8. '	score' → logprob: -8.806376457214355
    9. '<|end|>' → logprob: -9.181376457214355
    10. '```' → logprob: -9.431376457214355

Token 148: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.080359548330307
    2. ' score' → logprob: -2.58035945892334
    3. '           ' → logprob: -6.58035945892334
    4. '	score' → logprob: -10.58035945892334
    5. 'runs' → logprob: -11.33035945892334
    6. 'scores' → logprob: -11.70535945892334
    7. 'for' → logprob: -11.95535945892334
    8. '   ' → logprob: -12.45535945892334
    9. ' for' → logprob: -12.45535945892334
    10. 'num' → logprob: -12.58035945892334

Token 149: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05501125380396843
    2. '+=' → logprob: -2.93001127243042
    3. '+' → logprob: -9.055010795593262
    4. ' +' → logprob: -11.930010795593262
    5. '=' → logprob: -13.055010795593262
    6. ' =' → logprob: -14.055010795593262
    7. ')' → logprob: -14.305010795593262
    8. ']+=' → logprob: -14.430010795593262
    9. '```' → logprob: -14.930010795593262
    10. '+++' → logprob: -15.305010795593262

Token 150: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4385492503643036
    2. ' sum' → logprob: -1.313549280166626
    3. '1' → logprob: -2.813549280166626
    4. 'bases' → logprob: -4.063549041748047
    5. ' bases' → logprob: -5.313549041748047
    6. ' ' → logprob: -5.688549041748047
    7. 'b' → logprob: -8.063549041748047
    8. 'len' → logprob: -9.188549041748047
    9. 'base' → logprob: -10.313549041748047
    10. '3' → logprob: -10.563549041748047

Token 151: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.159660890465602e-05
    2. '(' → logprob: -10.25007152557373
    3. '([' → logprob: -10.62507152557373
    4. 'b' → logprob: -11.75007152557373
    5. 'bases' → logprob: -12.87507152557373
    6. '(base' → logprob: -14.37507152557373
    7. '[b' → logprob: -15.50007152557373
    8. '((' → logprob: -15.87507152557373
    9. '(i' → logprob: -16.000072479248047
    10. '	b' → logprob: -16.250072479248047

Token 152: 'ases' (ID: 4324)
  Prédit: 'ases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ases' → logprob: -3.4285862057004124e-05
    2. '[' → logprob: -11.25003433227539
    3. 'ase' → logprob: -11.50003433227539
    4. 'bases' → logprob: -11.50003433227539
    5. '```' → logprob: -14.87503433227539
    6. 'as' → logprob: -15.75003433227539
    7. '[b' → logprob: -16.37503433227539
    8. 'ased' → logprob: -17.25003433227539
    9. '(' → logprob: -17.50003433227539
    10. 'a' → logprob: -17.50003433227539

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018220659694634378
    2. ')+' → logprob: -8.875182151794434
    3. ' )' → logprob: -10.125182151794434
    4. ')
' → logprob: -14.375182151794434
    5. '[' → logprob: -14.875182151794434
    6. '）' → logprob: -15.125182151794434
    7. ']' → logprob: -15.125182151794434
    8. '`)' → logprob: -15.875182151794434
    9. '())' → logprob: -16.25018310546875
    10. '3' → logprob: -17.12518310546875

Token 154: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.038048841059207916
    2. '+' → logprob: -3.28804874420166
    3. ' plus' → logprob: -12.16304874420166
    4. '           ' → logprob: -14.03804874420166
    5. '
' → logprob: -15.16304874420166
    6. '+
' → logprob: -15.41304874420166
    7. ' +
' → logprob: -15.66304874420166
    8. '1' → logprob: -15.78804874420166
    9. ')' → logprob: -16.038049697875977
    10. '+n' → logprob: -16.288049697875977

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.626502990722656
    4. ' ' → logprob: -19.751502990722656
    5. '```' → logprob: -19.876502990722656
    6. '  ' → logprob: -20.626502990722656
    7. '
' → logprob: -21.501502990722656
    8. '2' → logprob: -21.626502990722656
    9. '+' → logprob: -21.876502990722656
    10. '۱' → logprob: -21.876502990722656

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.875001907348633
    5. '
' → logprob: -21.500001907348633
    6. '`' → logprob: -22.750001907348633
    7. '۱' → logprob: -22.750001907348633
    8. '2' → logprob: -22.875001907348633
    9. '           ' → logprob: -22.875001907348633
    10. '１' → logprob: -23.000001907348633

Token 157: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2248164266347885
    2. '       ' → logprob: -2.22481632232666
    3. '
' → logprob: -3.09981632232666
    4. 'bases' → logprob: -3.47481632232666
    5. ' bases' → logprob: -4.47481632232666
    6. '   ' → logprob: -5.22481632232666
    7. '
' → logprob: -9.59981632232666
    8. '               ' → logprob: -9.72481632232666
    9. '    
' → logprob: -10.09981632232666
    10. '```' → logprob: -10.22481632232666

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1323380023241043
    2. 'bases' → logprob: -2.132338047027588
    3. '       ' → logprob: -5.507338047027588
    4. '   ' → logprob: -7.007338047027588
    5. ' bases' → logprob: -8.13233757019043
    6. 'for' → logprob: -9.63233757019043
    7. '               ' → logprob: -10.63233757019043
    8. '```' → logprob: -10.63233757019043
    9. 'b' → logprob: -11.25733757019043
    10. ' for' → logprob: -13.00733757019043

Token 159: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' (adapté à ' bases') → logprob: -0.00019293125660624355
    2. ' bases' → logprob: -8.750192642211914
    3. '           ' → logprob: -10.375192642211914
    4. '```' → logprob: -13.375192642211914
    5. '   ' → logprob: -14.000192642211914
    6. '       ' → logprob: -14.500192642211914
    7. 'for' → logprob: -15.125192642211914
    8. 'b' → logprob: -17.000192642211914
    9. 'Bases' → logprob: -17.250192642211914
    10. '            
' → logprob: -18.375192642211914

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00012487331696320325
    2. ' =' → logprob: -9.00012493133545
    3. '[:]' → logprob: -14.00012493133545
    4. '[' → logprob: -14.62512493133545
    5. ']=' → logprob: -18.000123977661133
    6. '=[' → logprob: -18.000123977661133
    7. '＝' → logprob: -18.250123977661133
    8. '[:' → logprob: -19.250123977661133
    9. ']' → logprob: -19.625123977661133
    10. '```' → logprob: -19.625123977661133

Token 161: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.0
    3. ' ' → logprob: -17.375
    4. '   ' → logprob: -19.5
    5. '  ' → logprob: -21.375
    6. ' ' → logprob: -21.375
    7. 'a' → logprob: -22.0
    8. '([' → logprob: -22.125
    9. '#' → logprob: -22.5
    10. '0' → logprob: -22.5

Token 162: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.908022285439074e-05
    2. ' False' → logprob: -9.750059127807617
    3. '(False' → logprob: -14.625059127807617
    4. '[' → logprob: -15.625059127807617
    5. '   ' → logprob: -16.500059127807617
    6. '.False' → logprob: -17.500059127807617
    7. '0' → logprob: -19.500059127807617
    8. '=False' → logprob: -19.500059127807617
    9. '```' → logprob: -19.625059127807617
    10. '  ' → logprob: -20.250059127807617

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002502055838704109
    2. 'False' → logprob: -6.002501964569092
    3. ' False' → logprob: -11.62750244140625
    4. '(False' → logprob: -11.62750244140625
    5. ' ,' → logprob: -12.00250244140625
    6. '=False' → logprob: -13.87750244140625
    7. ']' → logprob: -14.25250244140625
    8. '[' → logprob: -15.75250244140625
    9. ')' → logprob: -15.75250244140625
    10. ',
' → logprob: -15.87750244140625

Token 164: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019288709154352546
    2. ' False' → logprob: -6.251928806304932
    3. '(False' → logprob: -15.50192928314209
    4. '=False' → logprob: -16.876928329467773
    5. '.False' → logprob: -18.626928329467773
    6. '   ' → logprob: -19.126928329467773
    7. ' ' → logprob: -20.126928329467773
    8. ',' → logprob: -20.251928329467773
    9. 'True' → logprob: -20.501928329467773
    10. '```' → logprob: -20.751928329467773

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023456385359168053
    2. 'False' → logprob: -3.773456335067749
    3. ' False' → logprob: -8.898456573486328
    4. ' ,' → logprob: -10.398456573486328
    5. '(False' → logprob: -10.398456573486328
    6. '=False' → logprob: -11.398456573486328
    7. '.False' → logprob: -14.398456573486328
    8. '[' → logprob: -14.523456573486328
    9. ',false' → logprob: -14.898456573486328
    10. ',
' → logprob: -15.523456573486328

Token 166: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.493430894101039e-05
    2. ' False' → logprob: -9.500075340270996
    3. '(False' → logprob: -16.75007438659668
    4. '   ' → logprob: -19.12507438659668
    5. '=False' → logprob: -19.12507438659668
    6. '.False' → logprob: -19.75007438659668
    7. ' ' → logprob: -21.50007438659668
    8. '    ' → logprob: -21.75007438659668
    9. 'True' → logprob: -21.75007438659668
    10. '  ' → logprob: -21.87507438659668

Token 167: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0233379527926445
    2. ']
' → logprob: -3.7733378410339355
    3. '       ' → logprob: -10.523338317871094
    4. ')' → logprob: -10.898338317871094
    5. '<|end|>' → logprob: -11.023338317871094
    6. ' ]' → logprob: -11.273338317871094
    7. ']

' → logprob: -11.898338317871094
    8. ']
' → logprob: -12.773338317871094
    9. '   ' → logprob: -13.023338317871094
    10. '
' → logprob: -13.648338317871094

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001530693843960762
    2. 'elif' → logprob: -6.501530647277832
    3. ' elif' → logprob: -11.251530647277832
    4. 'else' → logprob: -11.501530647277832
    5. '   ' → logprob: -12.876530647277832
    6. '```' → logprob: -14.001530647277832
    7. ' else' → logprob: -14.626530647277832
    8. ')' → logprob: -15.251530647277832
    9. '	elif' → logprob: -15.251530647277832
    10. '<|end|>' → logprob: -15.251530647277832

Token 169: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.2998318076133728
    2. '       ' → logprob: -1.4248318672180176
    3. ' elif' → logprob: -4.174831867218018
    4. 'else' → logprob: -5.924831867218018
    5. ' else' → logprob: -8.42483139038086
    6. '	elif' → logprob: -8.92483139038086
    7. '   ' → logprob: -9.42483139038086
    8. ')' → logprob: -11.29983139038086
    9. '```' → logprob: -12.54983139038086
    10. 'elseif' → logprob: -13.79983139038086

Token 170: ' event' (ID: 2104)
  Prédit: ' event'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.029782429337501526
    2. 'event' → logprob: -3.52978253364563
    3. ' ' → logprob: -11.52978229522705
    4. '	event' → logprob: -11.77978229522705
    5. '"' → logprob: -12.40478229522705
    6. '(event' → logprob: -12.52978229522705
    7. '[event' → logprob: -13.77978229522705
    8. '   ' → logprob: -14.34228229522705
    9. ' "' → logprob: -14.34228229522705
    10. ' ' → logprob: -14.84228229522705

Token 171: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17977389693260193
    2. '==' → logprob: -1.8047739267349243
    3. '[' → logprob: -11.304774284362793
    4. '=="' → logprob: -12.054774284362793
    5. '===' → logprob: -12.679774284362793
    6. '=' → logprob: -13.179774284362793
    7. ' ' → logprob: -13.304774284362793
    8. ']==' → logprob: -13.804774284362793
    9. ' =="' → logprob: -14.304774284362793
    10. ')' → logprob: -14.929774284362793

Token 172: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06249795854091644
    2. ' "' → logprob: -3.062497854232788
    3. '"H' → logprob: -4.312498092651367
    4. ''' → logprob: -8.312498092651367
    5. '"I' → logprob: -10.062498092651367
    6. ' ' → logprob: -10.437498092651367
    7. '"D' → logprob: -11.437498092651367
    8. '"B' → logprob: -11.437498092651367
    9. '"A' → logprob: -11.687498092651367
    10. '"C' → logprob: -11.812498092651367

Token 173: 'OUT' (ID: 5858)
  Prédit: 'OUT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUT' → logprob: -0.003412035293877125
    2. 'STR' → logprob: -6.378412246704102
    3. 'W' → logprob: -6.753412246704102
    4. '"' → logprob: -8.628412246704102
    5. 'S' → logprob: -9.378412246704102
    6. 'out' → logprob: -9.753412246704102
    7. 'O' → logprob: -10.378412246704102
    8. ''' → logprob: -10.753412246704102
    9. 'FO' → logprob: -10.878412246704102
    10. '"W' → logprob: -10.878412246704102

Token 174: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.006119571626186371
    2. '":' → logprob: -5.256119728088379
    3. '"' → logprob: -7.756119728088379
    4. '":
' → logprob: -8.131119728088379
    5. ':
' → logprob: -9.256119728088379
    6. ':' → logprob: -10.506119728088379
    7. '```' → logprob: -11.881119728088379
    8. '":

' → logprob: -12.006119728088379
    9. '   ' → logprob: -12.256119728088379
    10. '           ' → logprob: -12.256119728088379

Token 175: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3404254615306854
    2. 'outs' → logprob: -1.8404254913330078
    3. '           ' → logprob: -2.090425491333008
    4. '   ' → logprob: -5.840425491333008
    5. '
' → logprob: -6.090425491333008
    6. ' outs' → logprob: -7.465425491333008
    7. '```' → logprob: -8.965425491333008
    8. '        
' → logprob: -9.090425491333008
    9. '               ' → logprob: -9.965425491333008
    10. '	   ' → logprob: -10.965425491333008

Token 176: ' outs' (ID: 34373)
  Prédit: 'outs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outs' (adapté à ' outs') → logprob: -0.054840195924043655
    2. '       ' → logprob: -3.554840087890625
    3. '           ' → logprob: -4.054840087890625
    4. ' outs' → logprob: -5.054840087890625
    5. '   ' → logprob: -7.554840087890625
    6. '
' → logprob: -7.679840087890625
    7. '```' → logprob: -10.804840087890625
    8. '               ' → logprob: -10.929840087890625
    9. 'out' → logprob: -11.804840087890625
    10. '        
' → logprob: -11.804840087890625

Token 177: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931512355804443
    2. '+=' → logprob: -0.6931512355804443
    3. '=' → logprob: -13.193151473999023
    4. '+' → logprob: -13.443151473999023
    5. ']+=' → logprob: -14.443151473999023
    6. ' ' → logprob: -16.693151473999023
    7. '   ' → logprob: -17.443151473999023
    8. '	' → logprob: -17.693151473999023
    9. ' =' → logprob: -18.443151473999023
    10. '```' → logprob: -18.443151473999023

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -18.375625610351562
    4. '```' → logprob: -19.750625610351562
    5. ' ' → logprob: -20.375625610351562
    6. '１' → logprob: -21.250625610351562
    7. '  ' → logprob: -21.875625610351562
    8. '`' → logprob: -22.313125610351562
    9. '۱' → logprob: -22.500625610351562
    10. '
' → logprob: -22.500625610351562

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -21.25
    5. '１' → logprob: -21.75
    6. '۱' → logprob: -21.75
    7. '<|end|>' → logprob: -22.125
    8. '१' → logprob: -22.3125
    9. '`' → logprob: -22.375
    10. '১' → logprob: -22.8125

Token 180: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.18414980173110962
    2. ' elif' → logprob: -2.309149742126465
    3. 'else' → logprob: -3.309149742126465
    4. 'print' → logprob: -4.184149742126465
    5. ' else' → logprob: -4.934149742126465
    6. '   ' → logprob: -5.559149742126465
    7. '<|end|>' → logprob: -6.184149742126465
    8. '	elif' → logprob: -6.434149742126465
    9. '#' → logprob: -7.559149742126465
    10. '```' → logprob: -7.559149742126465

Token 183: ' outs' (ID: 34373)
  Prédit: ' outs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outs' → logprob: -1.1942253112792969
    2. ' score' → logprob: -1.4442253112792969
    3. ' event' → logprob: -1.8192253112792969
    4. 'score' → logprob: -1.9442253112792969
    5. 'outs' → logprob: -2.569225311279297
    6. 'event' → logprob: -3.444225311279297
    7. ' bases' → logprob: -3.444225311279297
    8. ' not' → logprob: -5.069225311279297
    9. 'bases' → logprob: -5.194225311279297
    10. 'not' → logprob: -7.444225311279297

Token 184: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23427017033100128
    2. '==' → logprob: -2.1092700958251953
    3. ' >=' → logprob: -2.6092700958251953
    4. '>=' → logprob: -4.734270095825195
    5. ' <' → logprob: -5.484270095825195
    6. '<' → logprob: -7.109270095825195
    7. ' ' → logprob: -8.984270095825195
    8. ' ' → logprob: -11.109270095825195
    9. '>' → logprob: -11.359270095825195
    10. ')' → logprob: -12.359270095825195

Token 185: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.12693314254283905
    2. ' ' → logprob: -2.1269330978393555
    3. '0' → logprob: -12.626933097839355
    4. '   ' → logprob: -13.876933097839355
    5. '  ' → logprob: -15.439433097839355
    6. ' ' → logprob: -16.189434051513672
    7. '```' → logprob: -16.314434051513672
    8. '    ' → logprob: -17.064434051513672
    9. '
' → logprob: -17.126934051513672
    10. '	' → logprob: -17.251934051513672

Token 186: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '0' → logprob: -14.50015926361084
    4. '   ' → logprob: -15.75015926361084
    5. '```' → logprob: -16.687658309936523
    6. '  ' → logprob: -18.562658309936523
    7. '
' → logprob: -18.625158309936523
    8. '۳' → logprob: -18.625158309936523
    9. '' → logprob: -18.750158309936523
    10. '1' → logprob: -19.062658309936523

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10022328048944473
    2. ':
' → logprob: -2.3502233028411865
    3. '   ' → logprob: -11.975223541259766
    4. ':
' → logprob: -12.475223541259766
    5. '       ' → logprob: -13.100223541259766
    6. ' :' → logprob: -13.350223541259766
    7. ' :
' → logprob: -14.100223541259766
    8. ':

' → logprob: -14.475223541259766
    9. '           ' → logprob: -14.725223541259766
    10. ' break' → logprob: -15.100223541259766

Token 188: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08409012109041214
    2. '   ' → logprob: -3.084090232849121
    3. '           ' → logprob: -3.584090232849121
    4. 'print' → logprob: -5.459090232849121
    5. ' print' → logprob: -6.209090232849121
    6. ' break' → logprob: -7.584090232849121
    7. 'break' → logprob: -8.709090232849121
    8. '```' → logprob: -9.459090232849121
    9. '	break' → logprob: -10.959090232849121
    10. '	print' → logprob: -11.084090232849121

Token 189: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05003200098872185
    2. 'break' → logprob: -3.300031900405884
    3. ' print' → logprob: -5.425032138824463
    4. '   ' → logprob: -5.800032138824463
    5. ' break' → logprob: -6.050032138824463
    6. '           ' → logprob: -6.675032138824463
    7. '       ' → logprob: -7.175032138824463
    8. '```' → logprob: -9.550031661987305
    9. '	print' → logprob: -11.925031661987305
    10. '	break' → logprob: -11.925031661987305

Token 190: ' inning' (ID: 70835)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.238834410905838
    2. ' break' → logprob: -1.9888343811035156
    3. 'print' → logprob: -2.6138343811035156
    4. ' print' → logprob: -6.238834381103516
    5. '   ' → logprob: -8.613834381103516
    6. '           ' → logprob: -9.488834381103516
    7. '       ' → logprob: -9.738834381103516
    8. '	break' → logprob: -10.738834381103516
    9. ' ' → logprob: -11.363834381103516
    10. '
' → logprob: -11.738834381103516

Token 191: ' ends' (ID: 17095)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6047907471656799
    2. '           ' → logprob: -1.1047906875610352
    3. '       ' → logprob: -2.354790687561035
    4. 'break' → logprob: -4.479790687561035
    5. '   ' → logprob: -4.729790687561035
    6. '	break' → logprob: -5.729790687561035
    7. '<|end|>' → logprob: -6.354790687561035
    8. ' print' → logprob: -7.729790687561035
    9. 'print' → logprob: -8.104790687561035
    10. ' ' → logprob: -8.354790687561035

Token 192: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19991403818130493
    2. '       ' → logprob: -2.07491397857666
    3. ' break' → logprob: -3.82491397857666
    4. '   ' → logprob: -4.19991397857666
    5. 'print' → logprob: -4.69991397857666
    6. ' print' → logprob: -4.82491397857666
    7. 'break' → logprob: -6.57491397857666
    8. '               ' → logprob: -9.07491397857666
    9. '	break' → logprob: -9.57491397857666
    10. '```' → logprob: -10.44991397857666

Token 193: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2973432540893555
    2. 'print' → logprob: -1.2973432540893555
    3. '           ' → logprob: -1.9223432540893555
    4. '   ' → logprob: -2.0473432540893555
    5. ' break' → logprob: -2.4223432540893555
    6. ' print' → logprob: -2.6723432540893555
    7. 'break' → logprob: -3.9223432540893555
    8. '               ' → logprob: -8.797343254089355
    9. '	break' → logprob: -8.797343254089355
    10. '```' → logprob: -9.172343254089355

Token 194: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.25802096724510193
    2. 'print' → logprob: -1.5080209970474243
    3. ' break' → logprob: -5.258020877838135
    4. '   ' → logprob: -7.758020877838135
    5. ' print' → logprob: -8.258021354675293
    6. '           ' → logprob: -9.383021354675293
    7. '       ' → logprob: -9.758021354675293
    8. '	break' → logprob: -11.133021354675293
    9. '```' → logprob: -11.633021354675293
    10. 'pass' → logprob: -12.758021354675293

Token 195: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.02108970656991005
    2. ' break' → logprob: -4.396089553833008
    3. 'print' → logprob: -4.771089553833008
    4. '   ' → logprob: -10.521089553833008
    5. ' print' → logprob: -10.521089553833008
    6. 'continue' → logprob: -12.021089553833008
    7. ' ' → logprob: -12.521089553833008
    8. '```' → logprob: -12.896089553833008
    9. '	break' → logprob: -13.521089553833008
    10. '           ' → logprob: -13.521089553833008

Token 196: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6859516501426697
    2. '       ' → logprob: -1.5609517097473145
    3. '	break' → logprob: -2.1859517097473145
    4. '<|end|>' → logprob: -2.4359517097473145
    5. '   ' → logprob: -3.5609517097473145
    6. '
' → logprob: -3.6859517097473145
    7. 'break' → logprob: -4.5609517097473145
    8. '               ' → logprob: -4.9359517097473145
    9. ' break' → logprob: -5.1859517097473145
    10. '		' → logprob: -5.8109517097473145

Token 197: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' no' (ID: 860)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.42891719937324524
    2. ' True' → logprob: -1.3039171695709229
    3. 'outs' → logprob: -3.678917169570923
    4. '_' → logprob: -4.428917407989502
    5. ' outs' → logprob: -4.678917407989502
    6. 'False' → logprob: -5.053917407989502
    7. 'event' → logprob: -5.303917407989502
    8. 'inside' → logprob: -5.803917407989502
    9. 'the' → logprob: -6.178917407989502
    10. ' the' → logprob: -6.428917407989502

Token 199: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.522270679473877
    2. ' event' → logprob: -1.897270679473877
    3. 'event' → logprob: -2.647270679473877
    4. 'input' → logprob: -3.272270679473877
    5. 'more' → logprob: -3.272270679473877
    6. 'n' → logprob: -3.522270679473877
    7. ' input' → logprob: -3.647270679473877
    8. ' events' → logprob: -4.147270679473877
    9. 'events' → logprob: -5.022270679473877
    10. ' bases' → logprob: -5.272270679473877

Token 200: ' input' (ID: 3422)
  Prédit: ' event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' event' → logprob: -0.9261707663536072
    2. ' events' → logprob: -1.801170825958252
    3. ' input' → logprob: -2.176170825958252
    4. 'event' → logprob: -2.301170825958252
    5. 'input' → logprob: -2.426170825958252
    6. 'events' → logprob: -2.801170825958252
    7. ' inputs' → logprob: -3.426170825958252
    8. 'inputs' → logprob: -3.926170825958252
    9. ' lines' → logprob: -4.426170825958252
    10. ' True' → logprob: -5.801170825958252

Token 201: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014611887745559216
    2. '       ' → logprob: -7.126461029052734
    3. ' break' → logprob: -7.876461029052734
    4. '               ' → logprob: -9.126461029052734
    5. '   ' → logprob: -9.751461029052734
    6. 'break' → logprob: -10.376461029052734
    7. '	break' → logprob: -10.751461029052734
    8. '<|end|>' → logprob: -11.251461029052734
    9. '
' → logprob: -11.626461029052734
    10. '		' → logprob: -11.626461029052734

Token 202: ' next' (ID: 2613)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2977747917175293
    2. ' True' → logprob: -1.4227747917175293
    3. 'False' → logprob: -2.1727747917175293
    4. 'break' → logprob: -2.4227747917175293
    5. 'event' → logprob: -2.6727747917175293
    6. 'outs' → logprob: -2.6727747917175293
    7. ' False' → logprob: -3.4227747917175293
    8. ' event' → logprob: -3.9227747917175293
    9. ' outs' → logprob: -3.9227747917175293
    10. ' break' → logprob: -4.547774791717529

Token 203: ' line' (ID: 2543)
  Prédit: 'event'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'event' → logprob: -0.5936709046363831
    2. ' event' → logprob: -1.5936708450317383
    3. 'token' → logprob: -2.3436708450317383
    4. 'line' → logprob: -2.4686708450317383
    5. ' line' → logprob: -3.9686708450317383
    6. '_event' → logprob: -4.468670845031738
    7. '_token' → logprob: -4.593670845031738
    8. ' token' → logprob: -5.343670845031738
    9. ' =' → logprob: -5.843670845031738
    10. 'input' → logprob: -5.968670845031738

Token 204: ' empty' (ID: 8213)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01311434619128704
    2. '       ' → logprob: -4.8881144523620605
    3. '<|end|>' → logprob: -5.8881144523620605
    4. '   ' → logprob: -6.6381144523620605
    5. '               ' → logprob: -8.263113975524902
    6. '          ' → logprob: -8.888113975524902
    7. '		' → logprob: -8.888113975524902
    8. '
' → logprob: -9.388113975524902
    9. '            ' → logprob: -9.388113975524902
    10. '<|end|>' → logprob: -9.513113975524902

Token 205: '?
' (ID: 3901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026227962225675583
    2. '<|end|>' → logprob: -4.651227951049805
    3. '       ' → logprob: -4.776227951049805
    4. '
' → logprob: -5.526227951049805
    5. ' continue' → logprob: -6.526227951049805
    6. 'continue' → logprob: -7.526227951049805
    7. '   ' → logprob: -7.651227951049805
    8. ' try' → logprob: -8.276227951049805
    9. '<|end|>' → logprob: -8.776227951049805
    10. '            
' → logprob: -9.026227951049805

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004705664701759815
    2. '       ' → logprob: -6.254705429077148
    3. ' break' → logprob: -6.254705429077148
    4. 'break' → logprob: -7.629705429077148
    5. '   ' → logprob: -8.379705429077148
    6. '               ' → logprob: -9.379705429077148
    7. '	break' → logprob: -11.004705429077148
    8. '		' → logprob: -12.004705429077148
    9. '```' → logprob: -12.254705429077148
    10. '          ' → logprob: -12.754705429077148

Token 207: ' pass' (ID: 1853)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.42234301567077637
    2. ' break' → logprob: -1.1723430156707764
    3. '           ' → logprob: -3.5473430156707764
    4. '       ' → logprob: -5.2973432540893555
    5. '   ' → logprob: -7.5473432540893555
    6. 'continue' → logprob: -8.422343254089355
    7. '	break' → logprob: -8.797343254089355
    8. ' continue' → logprob: -9.422343254089355
    9. '               ' → logprob: -10.797343254089355
    10. 'pass' (adapté à ' pass') → logprob: -11.297343254089355

Token 208: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008593653328716755
    2. '       ' → logprob: -5.133593559265137
    3. 'break' → logprob: -6.508593559265137
    4. ' break' → logprob: -7.258593559265137
    5. '   ' → logprob: -8.133593559265137
    6. '               ' → logprob: -10.008593559265137
    7. '	break' → logprob: -10.008593559265137
    8. '		' → logprob: -11.383593559265137
    9. '          ' → logprob: -11.508593559265137
    10. '<|end|>' → logprob: -11.508593559265137

Token 209: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11516258865594864
    2. '       ' → logprob: -2.7401626110076904
    3. '   ' → logprob: -3.8651626110076904
    4. '<|end|>' → logprob: -3.9901626110076904
    5. 'continue' → logprob: -6.490162372589111
    6. ' continue' → logprob: -6.740162372589111
    7. 'break' → logprob: -7.615162372589111
    8. ' break' → logprob: -8.36516284942627
    9. '	continue' → logprob: -8.74016284942627
    10. '               ' → logprob: -8.86516284942627

Token 210: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.00010127831774298102
    2. '(' → logprob: -9.250101089477539
    3. '()' → logprob: -12.500101089477539
    4. 'score' → logprob: -14.000101089477539
    5. ' (' → logprob: -14.500101089477539
    6. '(f' → logprob: -17.00010108947754
    7. '('' → logprob: -17.12510108947754
    8. ' score' → logprob: -17.75010108947754
    9. '(scores' → logprob: -18.00010108947754
    10. '(sc' → logprob: -19.62510108947754

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.500000953674316
    3. ')`' → logprob: -16.25
    4. '))' → logprob: -17.0
    5. '()' → logprob: -17.5
    6. '`)' → logprob: -17.75
    7. ')
' → logprob: -18.375
    8. '())' → logprob: -18.375
    9. ')}' → logprob: -18.75
    10. '')' → logprob: -19.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 210
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 166
Précision stricte (1ère position): 39.05%
Précision adaptée (1ère position): 43.33%
Précision (top 10): 79.05%
================================================================================
