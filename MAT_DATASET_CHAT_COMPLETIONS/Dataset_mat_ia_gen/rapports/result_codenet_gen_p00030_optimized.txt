================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from math import comb

def count_combinations(n, s):
    if s > 45 or s < 0 or n > 10 or n < 1:
        return 0
    result = 0
    # Inclusion-exclusion principle
    for k in range((s // 10) + 1):
        sign = -1 if k % 2 else 1
        c1 = comb(10, n - k)
        c2 = comb(n - k, k) if k <= n else 0  # This is actually k choose k which is 1, but safer to keep
        c3 = comb(s - 10 * k + n - 1, n - 1) if s - 10 * k >= 0 else 0
        if n - k < 0 or s - 10 * k < 0:
            continue
        result += sign * comb(10, k) * comb(10 - k, n - k) * comb(s - 10*k + n -1, n -1) if s - 10*k >= 0 else 0

    # But above is complicated, the problem is classic combination "subset of digits n summing to s"
    # The best optimized solution is bitmask dp or precalc with DP

def main():
    input = sys.stdin.readline
    max_n, max_s = 9, 100
    # dp[n][s]: number of ways to choose n distinct digits 0..9 sum s
    dp = [[0]*(max_s+1) for _ in range(max_n+1)]
    dp[0][0] = 1
    for digit in range(10):
        for n in range(max_n-1, -1, -1):
            for s in range(max_s-digit+1):
                dp[n+1][s+digit] += dp[n][s]

    for line in sys.stdin:
        if line.strip() == '':
            continue
        n,s = map(int,line.split())
        if n == 0 and s == 0:
            break
        if n > 9 or s > 45:
            print(0)
            continue
        print(dp[n][s])

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4339222013950348
    2. '.' → logprob: -1.1839221715927124
    3. 'import' → logprob: -4.183922290802002
    4. '\' → logprob: -4.433922290802002
    5. 'newline' → logprob: -5.183922290802002
    6. '<|end|>' → logprob: -5.558922290802002
    7. '
' → logprob: -5.933922290802002
    8. '```' → logprob: -6.558922290802002
    9. '' → logprob: -7.058922290802002
    10. '<|end|>' → logprob: -7.183922290802002

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.010339342057704926
    2. 'import' → logprob: -4.760339260101318
    3. ' ' → logprob: -6.385339260101318
    4. '.' → logprob: -11.635339736938477
    5. '<|end|>' → logprob: -11.635339736938477
    6. '	import' → logprob: -12.010339736938477
    7. '_import' → logprob: -12.635339736938477
    8. ' ' → logprob: -13.635339736938477
    9. ' imports' → logprob: -13.635339736938477
    10. ' importar' → logprob: -14.010339736938477

Token 6: ' comb' (ID: 4134)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.05482484772801399
    2. 'sqrt' → logprob: -3.4298248291015625
    3. ' pi' → logprob: -4.8048248291015625
    4. ' ceil' → logprob: -5.3048248291015625
    5. ' sin' → logprob: -6.1798248291015625
    6. ' import' → logprob: -6.4298248291015625
    7. ' ' → logprob: -7.0548248291015625
    8. ' pow' → logprob: -7.0548248291015625
    9. ' log' → logprob: -7.6798248291015625
    10. 'pow' → logprob: -7.9298248291015625

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01958903856575489
    2. '(
' → logprob: -4.394588947296143
    3. '\n' → logprob: -6.019588947296143
    4. ',' → logprob: -6.644588947296143
    5. ' (' → logprob: -6.894588947296143
    6. '\' → logprob: -7.269588947296143
    7. '\(' → logprob: -7.769588947296143
    8. '(

' → logprob: -8.3945894241333
    9. '```' → logprob: -8.5195894241333
    10. 'import' → logprob: -8.5195894241333

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13082505762577057
    2. '(
' → logprob: -2.5058250427246094
    3. 'def' → logprob: -4.005825042724609
    4. ',' → logprob: -5.255825042724609
    5. '\' → logprob: -5.255825042724609
    6. 'import' → logprob: -5.630825042724609
    7. '\n' → logprob: -6.505825042724609
    8. '(

' → logprob: -6.755825042724609
    9. '```' → logprob: -6.880825042724609
    10. '.' → logprob: -7.255825042724609

Token 9: ' count' (ID: 3605)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.1272329092025757
    2. ' ' → logprob: -1.2522329092025757
    3. ' factor' → logprob: -2.2522330284118652
    4. ' calculate' → logprob: -2.3772330284118652
    5. ' count' → logprob: -2.5022330284118652
    6. ' bin' → logprob: -2.8772330284118652
    7. ' choose' → logprob: -4.752233028411865
    8. ' combine' → logprob: -5.377233028411865
    9. ' combination' → logprob: -5.627233028411865
    10. ' combinations' → logprob: -5.877233028411865

Token 10: '_com' (ID: 10828)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15525558590888977
    2. '_s' → logprob: -3.7802555561065674
    3. '_pairs' → logprob: -3.9052555561065674
    4. '_occ' → logprob: -4.0302557945251465
    5. '_sub' → logprob: -4.4052557945251465
    6. '_f' → logprob: -4.4052557945251465
    7. '_words' → logprob: -4.6552557945251465
    8. '_numbers' → logprob: -4.7802557945251465
    9. '_part' → logprob: -5.2802557945251465
    10. '_elements' → logprob: -5.7802557945251465

Token 11: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.005497341509908438
    2. 'b' → logprob: -5.505497455596924
    3. 'plet' → logprob: -7.130497455596924
    4. 'positions' → logprob: -8.255496978759766
    5. 'bin' → logprob: -9.255496978759766
    6. 'bination' → logprob: -9.880496978759766
    7. 'p' → logprob: -10.005496978759766
    8. '```' → logprob: -10.130496978759766
    9. '_' → logprob: -10.380496978759766
    10. '_b' → logprob: -10.505496978759766

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017290872347075492
    2. '_' → logprob: -10.62517261505127
    3. '(user' → logprob: -10.62517261505127
    4. '():' → logprob: -10.62517261505127
    5. ' (' → logprob: -10.87517261505127
    6. '(
' → logprob: -12.25017261505127
    7. '('' → logprob: -12.37517261505127
    8. ':' → logprob: -12.37517261505127
    9. '```' → logprob: -12.37517261505127
    10. '(`' → logprob: -12.50017261505127

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028970264247618616
    2. ')' → logprob: -8.875289916992188
    3. '):' → logprob: -9.250289916992188
    4. ' ,' → logprob: -10.625289916992188
    5. ',n' → logprob: -11.375289916992188
    6. ',k' → logprob: -11.500289916992188
    7. ':' → logprob: -13.500289916992188
    8. ',a' → logprob: -14.000289916992188
    9. 's' → logprob: -14.000289916992188
    10. ',b' → logprob: -14.500289916992188

Token 14: ' s' (ID: 265)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1770295798778534
    2. ' k' → logprob: -2.177029609680176
    3. 'r' → logprob: -3.302029609680176
    4. ' r' → logprob: -4.427029609680176
    5. ')' → logprob: -10.677029609680176
    6. 'm' → logprob: -10.677029609680176
    7. ' ' → logprob: -11.489529609680176
    8. '```' → logprob: -11.739529609680176
    9. '   ' → logprob: -11.864529609680176
    10. ' m' → logprob: -12.489529609680176

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019986184313893318
    2. ',' → logprob: -4.019986152648926
    3. ')' → logprob: -6.394986152648926
    4. '):
' → logprob: -10.019986152648926
    5. ' ):' → logprob: -10.144986152648926
    6. ':' → logprob: -10.519986152648926
    7. '=' → logprob: -10.894986152648926
    8. '):
' → logprob: -12.019986152648926
    9. '**' → logprob: -12.519986152648926
    10. ')):' → logprob: -12.644986152648926

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6506514549255371
    2. ':' → logprob: -0.7756514549255371
    3. '    ' → logprob: -4.900651454925537
    4. ':
' → logprob: -5.525651454925537
    5. ' :' → logprob: -6.275651454925537
    6. '    
' → logprob: -6.525651454925537
    7. '```' → logprob: -7.150651454925537
    8. '\' → logprob: -8.150651931762695
    9. '):' → logprob: -8.400651931762695
    10. '():' → logprob: -8.400651931762695

Token 17: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6843681335449219
    2. '    ' → logprob: -1.8093681335449219
    3. '```' → logprob: -1.9343681335449219
    4. '       ' → logprob: -3.059368133544922
    5. ' return' → logprob: -3.184368133544922
    6. '     
' → logprob: -3.934368133544922
    7. 'return' → logprob: -4.184368133544922
    8. ' total' → logprob: -4.309368133544922
    9. ' if' → logprob: -4.934368133544922
    10. '`' → logprob: -5.059368133544922

Token 18: ' s' (ID: 265)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5906907320022583
    2. ' s' → logprob: -0.8406907320022583
    3. 'n' → logprob: -4.840690612792969
    4. 's' → logprob: -5.090690612792969
    5. ' not' → logprob: -7.465690612792969
    6. ' ' → logprob: -11.965690612792969
    7. 'not' → logprob: -12.965690612792969
    8. ' isinstance' → logprob: -13.340690612792969
    9. ' ' → logprob: -13.965690612792969
    10. '(n' → logprob: -13.965690612792969

Token 19: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05934053286910057
    2. ' ==' → logprob: -3.559340476989746
    3. '>' → logprob: -4.434340476989746
    4. ' <' → logprob: -4.434340476989746
    5. ' <=' → logprob: -5.809340476989746
    6. '==' → logprob: -6.559340476989746
    7. ' ' → logprob: -7.809340476989746
    8. ' >=' → logprob: -8.059340476989746
    9. '<' → logprob: -8.684340476989746
    10. '=' → logprob: -10.059340476989746

Token 20: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4742972254753113
    2. 'n' → logprob: -0.9742972254753113
    3. ' ' → logprob: -8.974297523498535
    4. '0' → logprob: -10.099297523498535
    5. '2' → logprob: -11.849297523498535
    6. '1' → logprob: -11.849297523498535
    7. '9' → logprob: -12.349297523498535
    8. '	n' → logprob: -12.724297523498535
    9. ' comb' → logprob: -12.849297523498535
    10. 'comb' → logprob: -12.974297523498535

Token 21: '45' (ID: 2548)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010531729785725474
    2. ' n' → logprob: -6.876053333282471
    3. '2' → logprob: -11.626052856445312
    4. '0' → logprob: -12.501052856445312
    5. '1' → logprob: -13.876052856445312
    6. ' ' → logprob: -13.876052856445312
    7. '9' → logprob: -14.001052856445312
    8. '(n' → logprob: -14.126052856445312
    9. '	n' → logprob: -14.751052856445312
    10. '```' → logprob: -14.876052856445312

Token 22: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.14608067274093628
    2. ':' → logprob: -2.021080732345581
    3. ' ' → logprob: -6.896080493927002
    4. '    ' → logprob: -7.271080493927002
    5. ':return' → logprob: -7.646080493927002
    6. '   ' → logprob: -8.02108097076416
    7. 'or' → logprob: -8.14608097076416
    8. ':
' → logprob: -8.64608097076416
    9. ' :' → logprob: -8.64608097076416
    10. '       ' → logprob: -10.02108097076416

Token 23: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08732721954584122
    2. ' n' → logprob: -2.587327241897583
    3. 's' → logprob: -4.962327003479004
    4. 'n' → logprob: -6.587327003479004
    5. ' not' → logprob: -11.212327003479004
    6. ' ' → logprob: -12.462327003479004
    7. '   ' → logprob: -12.587327003479004
    8. '```' → logprob: -13.524827003479004
    9. ' ' → logprob: -13.899827003479004
    10. '(n' → logprob: -14.399827003479004

Token 24: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4394600987434387
    2. ' >' → logprob: -1.314460039138794
    3. '<' → logprob: -2.939460039138794
    4. '>' → logprob: -4.189460277557373
    5. ' <=' → logprob: -4.314460277557373
    6. ' ==' → logprob: -5.689460277557373
    7. '==' → logprob: -7.064460277557373
    8. '<=' → logprob: -7.439460277557373
    9. ' ' → logprob: -7.689460277557373
    10. ' >=' → logprob: -9.189459800720215

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3649522364139557
    2. '1' → logprob: -1.6149522066116333
    3. '0' → logprob: -2.239952325820923
    4. ' n' → logprob: -8.239952087402344
    5. 'n' → logprob: -9.864952087402344
    6. '6' → logprob: -10.364952087402344
    7. '3' → logprob: -11.802452087402344
    8. '5' → logprob: -11.989952087402344
    9. '2' → logprob: -11.989952087402344
    10. '9' → logprob: -12.239952087402344

Token 26: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10484997183084488
    2. '0' → logprob: -2.3548500537872314
    3. '10' → logprob: -5.854849815368652
    4. ' ' → logprob: -6.729849815368652
    5. '6' → logprob: -8.354849815368652
    6. '5' → logprob: -9.104849815368652
    7. '9' → logprob: -9.854849815368652
    8. '3' → logprob: -10.229849815368652
    9. 'n' → logprob: -10.229849815368652
    10. '15' → logprob: -10.979849815368652

Token 27: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003629169659689069
    2. ' :' → logprob: -6.628629207611084
    3. ' or' → logprob: -6.753629207611084
    4. ':return' → logprob: -7.128629207611084
    5. '   ' → logprob: -8.753628730773926
    6. ':
' → logprob: -8.878628730773926
    7. '       ' → logprob: -11.128628730773926
    8. '    ' → logprob: -11.378628730773926
    9. ' :
' → logprob: -12.753628730773926
    10. ',' → logprob: -13.878628730773926

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4260477125644684
    2. ' s' → logprob: -1.176047682762146
    3. 'n' → logprob: -3.5510478019714355
    4. 's' → logprob: -4.6760478019714355
    5. '   ' → logprob: -8.051047325134277
    6. ' ' → logprob: -10.426047325134277
    7. ' or' → logprob: -11.176047325134277
    8. '    ' → logprob: -11.176047325134277
    9. ' not' → logprob: -11.301047325134277
    10. '	n' → logprob: -12.488547325134277

Token 29: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.003868712577968836
    2. '>' → logprob: -5.628868579864502
    3. ' ==' → logprob: -8.62886905670166
    4. ' ' → logprob: -10.50386905670166
    5. ' <' → logprob: -10.50386905670166
    6. '==' → logprob: -10.62886905670166
    7. ' <=' → logprob: -12.00386905670166
    8. '  ' → logprob: -14.12886905670166
    9. '<' → logprob: -14.12886905670166
    10. '   ' → logprob: -14.75386905670166

Token 30: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.45451390743255615
    2. '10' → logprob: -1.7045139074325562
    3. '45' → logprob: -1.7045139074325562
    4. ' ' → logprob: -6.704514026641846
    5. '36' → logprob: -9.329513549804688
    6. '46' → logprob: -9.829513549804688
    7. '20' → logprob: -10.954513549804688
    8. 'min' → logprob: -11.079513549804688
    9. '1' → logprob: -11.329513549804688
    10. '11' → logprob: -11.454513549804688

Token 31: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7876647114753723
    2. '9' → logprob: -1.0376646518707275
    3. '45' → logprob: -1.6626646518707275
    4. '36' → logprob: -7.787664890289307
    5. '20' → logprob: -9.037664413452148
    6. '15' → logprob: -9.037664413452148
    7. '18' → logprob: -9.662664413452148
    8. '11' → logprob: -9.787664413452148
    9. '46' → logprob: -9.787664413452148
    10. '50' → logprob: -9.912664413452148

Token 32: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07102973014116287
    2. ':' → logprob: -2.6960296630859375
    3. '   ' → logprob: -7.6960296630859375
    4. ' :' → logprob: -8.446029663085938
    5. ':return' → logprob: -8.571029663085938
    6. 'or' → logprob: -9.196029663085938
    7. ' ' → logprob: -9.946029663085938
    8. ':
' → logprob: -10.071029663085938
    9. '):' → logprob: -11.571029663085938
    10. '    ' → logprob: -11.821029663085938

Token 33: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0054653361439704895
    2. 'n' → logprob: -5.380465507507324
    3. ' s' → logprob: -7.130465507507324
    4. 's' → logprob: -10.880465507507324
    5. ' not' → logprob: -11.130465507507324
    6. '(n' → logprob: -12.630465507507324
    7. ' ' → logprob: -12.755465507507324
    8. '10' → logprob: -13.255465507507324
    9. ' ' → logprob: -14.255465507507324
    10. ' (' → logprob: -14.755465507507324

Token 34: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0070153833366930485
    2. '>' → logprob: -5.382015228271484
    3. ' ' → logprob: -6.882015228271484
    4. ' ==' → logprob: -7.132015228271484
    5. ' <' → logprob: -8.507015228271484
    6. '==' → logprob: -8.632015228271484
    7. ' or' → logprob: -9.882015228271484
    8. '=' → logprob: -10.132015228271484
    9. '<|end|>' → logprob: -10.257015228271484
    10. ' <=' → logprob: -10.507015228271484

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20847412943840027
    2. ' ' → logprob: -1.7084741592407227
    3. '0' → logprob: -4.958474159240723
    4. '=' → logprob: -11.958474159240723
    5. '```' → logprob: -13.333474159240723
    6. '   ' → logprob: -14.270974159240723
    7. '2' → logprob: -14.520974159240723
    8. '>' → logprob: -14.958474159240723
    9. '  ' → logprob: -14.958474159240723
    10. '<|end|>' → logprob: -15.208474159240723

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004672560840845108
    2. '0' → logprob: -5.379672527313232
    3. ' ' → logprob: -9.87967300415039
    4. '```' → logprob: -14.37967300415039
    5. '   ' → logprob: -16.37967300415039
    6. '=' → logprob: -16.44217300415039
    7. '۱' → logprob: -16.81717300415039
    8. '2' → logprob: -16.87967300415039
    9. '１' → logprob: -17.56717300415039
    10. '``' → logprob: -17.75467300415039

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005295606097206473
    2. ':return' → logprob: -8.125529289245605
    3. ' or' → logprob: -8.875529289245605
    4. ':
' → logprob: -9.750529289245605
    5. '   ' → logprob: -11.125529289245605
    6. ' :' → logprob: -11.375529289245605
    7. '):' → logprob: -11.750529289245605
    8. ' and' → logprob: -15.000529289245605
    9. ',' → logprob: -15.500529289245605
    10. '       ' → logprob: -15.750529289245605

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008771508000791073
    2. ':' → logprob: -4.8837714195251465
    3. ':return' → logprob: -7.6337714195251465
    4. ':
' → logprob: -8.383771896362305
    5. '   ' → logprob: -9.008771896362305
    6. ' return' → logprob: -9.633771896362305
    7. ' :' → logprob: -9.633771896362305
    8. '):' → logprob: -9.883771896362305
    9. '):
' → logprob: -10.633771896362305
    10. '<|end|>' → logprob: -10.883771896362305

Token 39: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0694037452340126
    2. 'return' (adapté à ' return') → logprob: -3.069403648376465
    3. '       ' → logprob: -4.069403648376465
    4. '   ' → logprob: -5.819403648376465
    5. '    ' → logprob: -7.819403648376465
    6. ' raise' → logprob: -9.319403648376465
    7. ' ' → logprob: -10.444403648376465
    8. 'raise' → logprob: -11.569403648376465
    9. '	return' → logprob: -12.319403648376465
    10. '```' → logprob: -12.819403648376465

Token 40: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20899957418441772
    2. '0' → logprob: -1.7089996337890625
    3. ' None' → logprob: -4.9589996337890625
    4. 'None' → logprob: -7.5839996337890625
    5. ' 
' → logprob: -10.833999633789062
    6. ' 

' → logprob: -13.458999633789062
    7. '```' → logprob: -13.833999633789062
    8. ' ' → logprob: -13.958999633789062
    9. '1' → logprob: -13.958999633789062
    10. '  ' → logprob: -14.208999633789062

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004938178462907672
    2. ' ' → logprob: -7.625494003295898
    3. '[]' → logprob: -12.375494003295898
    4. '   ' → logprob: -14.625494003295898
    5. 'None' → logprob: -14.750494003295898
    6. '  ' → logprob: -15.500494003295898
    7. '{}' → logprob: -15.750494003295898
    8. '[]
' → logprob: -15.875494003295898
    9. '-' → logprob: -16.2504940032959
    10. '```' → logprob: -16.3754940032959

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32908785343170166
    2. '
' → logprob: -1.4540878534317017
    3. '    
' → logprob: -3.204087734222412
    4. '\n' → logprob: -6.204087734222412
    5. '  
' → logprob: -6.454087734222412
    6. '```' → logprob: -6.829087734222412
    7. '   
' → logprob: -7.079087734222412
    8. '<|end|>' → logprob: -8.32908821105957
    9. ' 
' → logprob: -8.57908821105957
    10. '  ' → logprob: -9.82908821105957

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0319209098815918
    2. '<|end|>' → logprob: -4.031920909881592
    3. '    
' → logprob: -4.656920909881592
    4. '
' → logprob: -5.781920909881592
    5. '<|end|>' → logprob: -8.03192138671875
    6. '```' → logprob: -8.15692138671875
    7. '  
' → logprob: -8.78192138671875
    8. '   
' → logprob: -9.40692138671875
    9. ')' → logprob: -10.03192138671875
    10. '\n' → logprob: -10.40692138671875

Token 44: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01745796948671341
    2. '    
' → logprob: -5.267457962036133
    3. 'n' → logprob: -6.017457962036133
    4. '
' → logprob: -6.267457962036133
    5. ' 
' → logprob: -6.642457962036133
    6. '\n' → logprob: -6.642457962036133
    7. ' if' → logprob: -7.017457962036133
    8. '    ' → logprob: -7.142457962036133
    9. '```' → logprob: -7.142457962036133
    10. '   
' → logprob: -7.892457962036133

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004291845951229334
    2. '=' → logprob: -5.504292011260986
    3. ' ' → logprob: -8.504291534423828
    4. ' +=' → logprob: -11.879291534423828
    5. '  ' → logprob: -14.254291534423828
    6. '   ' → logprob: -14.504291534423828
    7. ' =)' → logprob: -14.754291534423828
    8. '    ' → logprob: -15.129291534423828
    9. '_' → logprob: -15.504291534423828
    10. 's' → logprob: -15.504291534423828

Token 46: ' ' (ID: 220)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.1426527202129364
    2. 'comb' → logprob: -2.267652750015259
    3. '0' → logprob: -3.642652750015259
    4. ' ' → logprob: -6.14265251159668
    5. '1' → logprob: -7.64265251159668
    6. 'com' → logprob: -8.26765251159668
    7. ' sum' → logprob: -8.64265251159668
    8. 'sum' → logprob: -9.89265251159668
    9. '   ' → logprob: -10.76765251159668
    10. '```' → logprob: -11.39265251159668

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016256680246442556
    2. '1' → logprob: -7.1266255378723145
    3. ' ' → logprob: -8.126626014709473
    4. 'sum' → logprob: -8.126626014709473
    5. 'comb' → logprob: -8.501626014709473
    6. ' comb' → logprob: -12.001626014709473
    7. 'com' → logprob: -12.126626014709473
    8. '[' → logprob: -12.251626014709473
    9. '   ' → logprob: -13.126626014709473
    10. ' sum' → logprob: -13.189126014709473

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2792727053165436
    2. '<|end|>' → logprob: -2.1542727947235107
    3. '   ' → logprob: -2.4042727947235107
    4. ' for' → logprob: -4.154272556304932
    5. '    
' → logprob: -4.779272556304932
    6. '\n' → logprob: -5.529272556304932
    7. ' 
' → logprob: -5.654272556304932
    8. '<|end|>' → logprob: -6.029272556304932
    9. '  
' → logprob: -7.154272556304932
    10. 'for' → logprob: -7.529272556304932

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0182197168469429
    2. ' for' → logprob: -4.643219947814941
    3. '\n' → logprob: -6.018219947814941
    4. '
' → logprob: -6.143219947814941
    5. '    
' → logprob: -6.518219947814941
    6. 'for' → logprob: -7.143219947814941
    7. '<|end|>' → logprob: -7.768219947814941
    8. ' 
' → logprob: -8.143219947814941
    9. ' ' → logprob: -8.893219947814941
    10. '\' → logprob: -9.018219947814941

Token 50: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3869091868400574
    2. 'for' → logprob: -1.1369092464447021
    3. '   ' → logprob: -10.386909484863281
    4. '```' → logprob: -12.511909484863281
    5. '	for' → logprob: -14.511909484863281
    6. ' if' → logprob: -14.511909484863281
    7. 'f' → logprob: -14.636909484863281
    8. ' f' → logprob: -15.011909484863281
    9. 'from' → logprob: -15.386909484863281
    10. ' ' → logprob: -15.386909484863281

Token 51: ' Inclusion' (ID: 151943)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16063708066940308
    2. 'for' → logprob: -1.9106371402740479
    3. ' range' → logprob: -8.660636901855469
    4. ' if' → logprob: -10.035636901855469
    5. '   ' → logprob: -10.785636901855469
    6. ' f' → logprob: -10.785636901855469
    7. 'range' → logprob: -10.910636901855469
    8. '```' → logprob: -10.910636901855469
    9. ' ' → logprob: -11.035636901855469
    10. 'f' → logprob: -11.035636901855469

Token 52: '-ex' (ID: 15801)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01108201127499342
    2. '-ex' → logprob: -4.511082172393799
    3. ' -' → logprob: -10.88608169555664
    4. '–' → logprob: -11.51108169555664
    5. '_' → logprob: -13.76108169555664
    6. '−' → logprob: -13.76108169555664
    7. 'ex' → logprob: -14.26108169555664
    8. '=' → logprob: -14.51108169555664
    9. '-​' → logprob: -14.88608169555664
    10. '_ex' → logprob: -15.26108169555664

Token 53: 'clusion' (ID: 15482)
  Prédit: 'clusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusion' → logprob: -0.007117541041225195
    2. 'c' → logprob: -5.882117748260498
    3. 'cl' → logprob: -6.132117748260498
    4. 'clude' → logprob: -6.382117748260498
    5. 'clus' → logprob: -8.88211727142334
    6. '-' → logprob: -9.63211727142334
    7. 'def' → logprob: -10.13211727142334
    8. 'l' → logprob: -10.13211727142334
    9. 'p' → logprob: -10.25711727142334
    10. '```' → logprob: -10.38211727142334

Token 54: ' principle' (ID: 30540)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06039604917168617
    2. 'for' → logprob: -3.0603959560394287
    3. ' ' → logprob: -4.810396194458008
    4. '   ' → logprob: -6.435396194458008
    5. '    ' → logprob: -7.810396194458008
    6. '_' → logprob: -7.935396194458008
    7. ')' → logprob: -8.685396194458008
    8. ':' → logprob: -9.185396194458008
    9. '0' → logprob: -9.310396194458008
    10. '	for' → logprob: -9.435396194458008

Token 55: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6641777753829956
    2. '   ' → logprob: -0.7891777753829956
    3. 'for' → logprob: -4.289177894592285
    4. '
' → logprob: -5.289177894592285
    5. '<|end|>' → logprob: -5.914177894592285
    6. '	for' → logprob: -6.039177894592285
    7. '    
' → logprob: -6.664177894592285
    8. ' ' → logprob: -7.164177894592285
    9. '  ' → logprob: -7.164177894592285
    10. '    ' → logprob: -7.414177894592285

Token 56: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5280474424362183
    2. '   ' → logprob: -0.9030474424362183
    3. 'for' → logprob: -5.903047561645508
    4. '	for' → logprob: -6.403047561645508
    5. ' ' → logprob: -9.153047561645508
    6. '    
' → logprob: -9.278047561645508
    7. '
' → logprob: -9.903047561645508
    8. '  
' → logprob: -9.903047561645508
    9. '  ' → logprob: -10.153047561645508
    10. ':' → logprob: -10.778047561645508

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35242772102355957
    2. 'for' (adapté à ' for') → logprob: -1.6024277210235596
    3. '   ' → logprob: -2.3524277210235596
    4. ' ' → logprob: -8.72742748260498
    5. ' 
' → logprob: -9.47742748260498
    6. 'n' → logprob: -9.47742748260498
    7. ' ' → logprob: -10.10242748260498
    8. '	for' → logprob: -10.60242748260498
    9. '  ' → logprob: -11.35242748260498
    10. '    
' → logprob: -11.47742748260498

Token 58: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06874234229326248
    2. ' i' → logprob: -3.318742275238037
    3. 'k' → logprob: -3.568742275238037
    4. ' r' → logprob: -7.193742275238037
    5. 'i' → logprob: -7.318742275238037
    6. ' ' → logprob: -8.193742752075195
    7. ' x' → logprob: -9.068742752075195
    8. ' j' → logprob: -9.068742752075195
    9. '```' → logprob: -10.193742752075195
    10. 'r' → logprob: -10.818742752075195

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00016790216614026576
    2. 'in' → logprob: -8.750167846679688
    3. ' ' → logprob: -11.625167846679688
    4. '	in' → logprob: -15.000167846679688
    5. ' i' → logprob: -17.000167846679688
    6. '   ' → logprob: -17.000167846679688
    7. '```' → logprob: -17.125167846679688
    8. '  ' → logprob: -17.250167846679688
    9. ',' → logprob: -17.625167846679688
    10. '    ' → logprob: -17.875167846679688

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0024763736873865128
    2. 'range' → logprob: -6.002476215362549
    3. '	range' → logprob: -14.502476692199707
    4. ' ' → logprob: -16.37747573852539
    5. ' xrange' → logprob: -17.25247573852539
    6. '(range' → logprob: -17.50247573852539
    7. ' rango' → logprob: -19.12747573852539
    8. ' rang' → logprob: -19.25247573852539
    9. '.range' → logprob: -19.87747573852539
    10. 'rang' → logprob: -19.87747573852539

Token 61: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14467984437942505
    2. '(n' → logprob: -2.0196797847747803
    3. '(k' → logprob: -6.394680023193359
    4. ' (' → logprob: -8.89468002319336
    5. '(s' → logprob: -9.14468002319336
    6. '((' → logprob: -9.76968002319336
    7. '<|end|>' → logprob: -11.76968002319336
    8. '(len' → logprob: -12.39468002319336
    9. '(int' → logprob: -12.51968002319336
    10. '(
' → logprob: -12.64468002319336

Token 62: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.27592134475708
    2. 'n' → logprob: -1.40092134475708
    3. ' s' → logprob: -1.65092134475708
    4. ' n' → logprob: -1.65092134475708
    5. '(n' → logprob: -3.40092134475708
    6. ' (' → logprob: -3.65092134475708
    7. '(s' → logprob: -3.65092134475708
    8. '0' → logprob: -5.77592134475708
    9. ' ' → logprob: -7.02592134475708
    10. '(' → logprob: -7.02592134475708

Token 63: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.09466838091611862
    2. '//' → logprob: -2.469668388366699
    3. ' -' → logprob: -5.844668388366699
    4. ' ' → logprob: -6.469668388366699
    5. '-' → logprob: -6.969668388366699
    6. ')' → logprob: -9.7196683883667
    7. ')//' → logprob: -9.8446683883667
    8. '+' → logprob: -9.9696683883667
    9. '   ' → logprob: -11.0321683883667
    10. '0' → logprob: -11.0946683883667

Token 64: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06892894953489304
    2. '10' → logprob: -3.0689289569854736
    3. ' ' → logprob: -3.9439289569854736
    4. '1' → logprob: -8.193928718566895
    5. 'n' → logprob: -8.693928718566895
    6. '5' → logprob: -9.443928718566895
    7. ' n' → logprob: -10.068928718566895
    8. '(' → logprob: -10.631428718566895
    9. '```' → logprob: -10.693928718566895
    10. 'k' → logprob: -11.068928718566895

Token 65: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6460475325584412
    2. '10' → logprob: -0.7710475325584412
    3. '1' → logprob: -4.521047592163086
    4. '5' → logprob: -6.771047592163086
    5. '6' → logprob: -6.896047592163086
    6. '3' → logprob: -10.021047592163086
    7. '4' → logprob: -10.021047592163086
    8. '{' → logprob: -10.146047592163086
    9. ' ' → logprob: -10.146047592163086
    10. '```' → logprob: -10.521047592163086

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009373998269438744
    2. ' )' → logprob: -5.259374141693115
    3. ')+' → logprob: -5.509374141693115
    4. '0' → logprob: -10.384373664855957
    5. ' +' → logprob: -11.009373664855957
    6. '+' → logprob: -11.384373664855957
    7. ' ' → logprob: -11.884373664855957
    8. ')+(' → logprob: -12.884373664855957
    9. '+)' → logprob: -13.134373664855957
    10. '   ' → logprob: -13.134373664855957

Token 67: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13457876443862915
    2. '+' → logprob: -2.2595787048339844
    3. ')+' → logprob: -4.509578704833984
    4. ')' → logprob: -4.634578704833984
    5. ' ' → logprob: -8.009578704833984
    6. ' )' → logprob: -8.384578704833984
    7. '   ' → logprob: -9.259578704833984
    8. '+)' → logprob: -10.134578704833984
    9. ' plus' → logprob: -10.759578704833984
    10. '0' → logprob: -11.259578704833984

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006122298073023558
    2. '2' → logprob: -5.38112211227417
    3. ' ' → logprob: -6.50612211227417
    4. ')' → logprob: -12.381122589111328
    5. '```' → logprob: -14.256122589111328
    6. '3' → logprob: -14.818622589111328
    7. '  ' → logprob: -15.193622589111328
    8. '   ' → logprob: -15.693622589111328
    9. '(' → logprob: -16.193622589111328
    10. '}' → logprob: -16.756122589111328

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010640407708706334
    2. '2' → logprob: -9.500106811523438
    3. ' ' → logprob: -10.375106811523438
    4. '```' → logprob: -17.250106811523438
    5. ')' → logprob: -17.500106811523438
    6. '

' → logprob: -17.625106811523438
    7. '3' → logprob: -17.812606811523438
    8. '0' → logprob: -17.937606811523438
    9. '１' → logprob: -18.000106811523438
    10. 'k' → logprob: -18.250106811523438

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001951961312443018
    2. ' ):' → logprob: -9.000195503234863
    3. ':' → logprob: -10.500195503234863
    4. ')' → logprob: -10.625195503234863
    5. '):
' → logprob: -11.000195503234863
    6. '   ' → logprob: -14.250195503234863
    7. '():' → logprob: -14.500195503234863
    8. ' ' → logprob: -14.875195503234863
    9. ',' → logprob: -15.000195503234863
    10. '```' → logprob: -15.250195503234863

Token 71: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05889512971043587
    2. '       ' → logprob: -2.9338951110839844
    3. ' :' → logprob: -5.808895111083984
    4. '   ' → logprob: -7.683895111083984
    5. '):' → logprob: -8.058895111083984
    6. ',' → logprob: -9.808895111083984
    7. ':
' → logprob: -10.183895111083984
    8. '<|end|>' → logprob: -10.183895111083984
    9. '():' → logprob: -10.558895111083984
    10. '    ' → logprob: -10.933895111083984

Token 72: ' sign' (ID: 2232)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045212458819150925
    2. '        ' → logprob: -3.295212507247925
    3. ' ' → logprob: -6.170212268829346
    4. '    ' → logprob: -6.670212268829346
    5. '   ' → logprob: -7.045212268829346
    6. '           ' → logprob: -7.295212268829346
    7. '      ' → logprob: -7.420212268829346
    8. ' result' → logprob: -7.545212268829346
    9. '     ' → logprob: -8.545212745666504
    10. '<|end|>' → logprob: -8.795212745666504

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012516834773123264
    2. '=' → logprob: -4.387516975402832
    3. ' ' → logprob: -12.637516975402832
    4. ')' → logprob: -13.762516975402832
    5. '<|end|>' → logprob: -13.762516975402832
    6. 's' → logprob: -14.012516975402832
    7. ' =)' → logprob: -15.637516975402832
    8. '   ' → logprob: -16.012516021728516
    9. '  ' → logprob: -16.512516021728516
    10. ' =
' → logprob: -16.637516021728516

Token 74: ' -' (ID: 533)
  Prédit: ' (-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.20182660222053528
    2. '(-' → logprob: -1.701826572418213
    3. ' -' → logprob: -8.326827049255371
    4. '-' → logprob: -9.326827049255371
    5. ' (' → logprob: -10.201827049255371
    6. '(' → logprob: -10.201827049255371
    7. ' ' → logprob: -12.451827049255371
    8. '1' → logprob: -12.701827049255371
    9. '((-' → logprob: -14.826827049255371
    10. '   ' → logprob: -15.451827049255371

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004835345782339573
    2. '(' → logprob: -5.37983512878418
    3. ' (' → logprob: -9.12983512878418
    4. ' ' → logprob: -9.87983512878418
    5. '(-' → logprob: -9.87983512878418
    6. ' (-' → logprob: -12.87983512878418
    7. '((-' → logprob: -13.75483512878418
    8. '((' → logprob: -14.87983512878418
    9. '   ' → logprob: -16.00483512878418
    10. '(+' → logprob: -16.87983512878418

Token 76: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.053539752960205
    2. ' **' → logprob: -1.428539752960205
    3. '<|end|>' → logprob: -1.678539752960205
    4. ' ' → logprob: -2.553539752960205
    5. ' *' → logprob: -2.553539752960205
    6. '**' → logprob: -4.053539752960205
    7. '       ' → logprob: -4.053539752960205
    8. ')' → logprob: -4.178539752960205
    9. '<|end|>' → logprob: -5.303539752960205
    10. '   ' → logprob: -5.803539752960205

Token 77: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.005947998259216547
    2. 'k' → logprob: -5.130948066711426
    3. ' (' → logprob: -11.380948066711426
    4. '<|end|>' → logprob: -12.630948066711426
    5. '	k' → logprob: -13.255948066711426
    6. ' ' → logprob: -13.755948066711426
    7. '(k' → logprob: -13.755948066711426
    8. ' ' → logprob: -14.505948066711426
    9. ' kth' → logprob: -15.380948066711426
    10. '(' → logprob: -16.75594711303711

Token 78: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4740891754627228
    2. ' %' → logprob: -0.9740891456604004
    3. ' ' → logprob: -11.724089622497559
    4. ' ' → logprob: -12.974089622497559
    5. '<|end|>' → logprob: -13.974089622497559
    6. '```' → logprob: -15.724089622497559
    7. '％' → logprob: -16.474088668823242
    8. '%s' → logprob: -16.474088668823242
    9. '٪' → logprob: -16.599088668823242
    10. ' %#' → logprob: -16.724088668823242

Token 79: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34847894310951233
    2. ' ' → logprob: -1.22347891330719
    3. '<|end|>' → logprob: -11.598479270935059
    4. ' ' → logprob: -11.910979270935059
    5. '  ' → logprob: -12.223479270935059
    6. '```' → logprob: -12.348479270935059
    7. '۲' → logprob: -13.660979270935059
    8. '   ' → logprob: -14.348479270935059
    9. '
' → logprob: -14.473479270935059
    10. '

' → logprob: -14.910979270935059

Token 80: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.23917081207037e-05
    2. ' ' → logprob: -10.125041961669922
    3. '۲' → logprob: -14.500041961669922
    4. '```' → logprob: -15.000041961669922
    5. '٢' → logprob: -15.250041961669922
    6. '२' → logprob: -15.812541961669922
    7. '20' → logprob: -16.125041961669922
    8. '26' → logprob: -16.375041961669922
    9. '২' → logprob: -16.500041961669922
    10. '22' → logprob: -16.687541961669922

Token 81: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3605905771255493
    2. '==' → logprob: -1.3605905771255493
    3. 'else' → logprob: -3.2355904579162598
    4. ' ==' → logprob: -4.98559045791626
    5. ' ' → logprob: -10.985590934753418
    6. '	else' → logprob: -11.235590934753418
    7. '=' → logprob: -11.235590934753418
    8. '!=' → logprob: -12.860590934753418
    9. '<|end|>' → logprob: -13.360590934753418
    10. '0' → logprob: -13.485590934753418

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06999535113573074
    2. '1' → logprob: -2.694995403289795
    3. '+' → logprob: -10.194994926452637
    4. ' +' → logprob: -10.819994926452637
    5. '<|end|>' → logprob: -13.944994926452637
    6. '  ' → logprob: -14.819994926452637
    7. ' ' → logprob: -15.819994926452637
    8. '    ' → logprob: -16.319995880126953
    9. ' '' → logprob: -16.569995880126953
    10. '   ' → logprob: -17.319995880126953

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008616226725280285
    2. ' ' → logprob: -4.7586164474487305
    3. '+' → logprob: -13.50861644744873
    4. ' +' → logprob: -16.758615493774414
    5. '  ' → logprob: -17.508615493774414
    6. '<|end|>' → logprob: -17.758615493774414
    7. '```' → logprob: -18.258615493774414
    8. '   ' → logprob: -18.508615493774414
    9. '۱' → logprob: -19.508615493774414
    10. ' ' → logprob: -19.571115493774414

Token 84: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034977926407009363
    2. '<|end|>' → logprob: -5.75349760055542
    3. ',' → logprob: -8.628498077392578
    4. '<|end|>' → logprob: -10.503498077392578
    5. '
' → logprob: -10.628498077392578
    6. '        
' → logprob: -10.628498077392578
    7. '   ' → logprob: -10.753498077392578
    8. ')' → logprob: -11.003498077392578
    9. '      ' → logprob: -12.003498077392578
    10. '        ' → logprob: -12.628498077392578

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011835903860628605
    2. '<|end|>' → logprob: -4.511836051940918
    3. ',' → logprob: -7.886836051940918
    4. '   ' → logprob: -8.886836051940918
    5. ')' → logprob: -9.386836051940918
    6. '<|end|>' → logprob: -9.886836051940918
    7. ':' → logprob: -10.636836051940918
    8. '      ' → logprob: -10.636836051940918
    9. '        
' → logprob: -10.886836051940918
    10. '     ' → logprob: -11.511836051940918

Token 86: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08554722368717194
    2. ' result' → logprob: -2.8355472087860107
    3. 'result' → logprob: -3.9605472087860107
    4. ' combinations' → logprob: -7.08554744720459
    5. ' count' → logprob: -7.21054744720459
    6. ' ways' → logprob: -7.46054744720459
    7. 'count' → logprob: -7.58554744720459
    8. ' comb' → logprob: -7.71054744720459
    9. ' term' → logprob: -8.58554744720459
    10. '        ' → logprob: -8.96054744720459

Token 87: '1' (ID: 16)
  Prédit: 'omb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.2685752809047699
    2. '=' → logprob: -2.1435751914978027
    3. ' =' → logprob: -2.3935751914978027
    4. 'ount' → logprob: -4.768575191497803
    5. 'om' → logprob: -5.018575191497803
    6. '_' → logprob: -5.768575191497803
    7. 'ont' → logprob: -6.393575191497803
    8. 'k' → logprob: -6.518575191497803
    9. 'nt' → logprob: -7.018575191497803
    10. '1' → logprob: -7.393575191497803

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519437372684479
    2. '=' → logprob: -1.5019437074661255
    3. '1' → logprob: -12.501943588256836
    4. ' ' → logprob: -12.751943588256836
    5. 'k' → logprob: -13.001943588256836
    6. 'om' → logprob: -13.126943588256836
    7. 'omb' → logprob: -13.751943588256836
    8. 'ount' → logprob: -13.751943588256836
    9. 'alculate' → logprob: -15.001943588256836
    10. '  ' → logprob: -16.251943588256836

Token 89: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.5759525895118713
    2. ' comb' → logprob: -0.8259525895118713
    3. 'com' → logprob: -11.950952529907227
    4. 'import' → logprob: -12.700952529907227
    5. ' ' → logprob: -14.325952529907227
    6. '   ' → logprob: -14.325952529907227
    7. ' komb' → logprob: -14.950952529907227
    8. 'combo' → logprob: -15.200952529907227
    9. '    ' → logprob: -15.575952529907227
    10. 'Comb' → logprob: -15.700952529907227

Token 90: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005282019264996052
    2. '(' → logprob: -5.255281925201416
    3. '(s' → logprob: -10.630282402038574
    4. 'n' → logprob: -10.755282402038574
    5. '10' → logprob: -14.630282402038574
    6. ' (' → logprob: -14.755282402038574
    7. '<|end|>' → logprob: -15.005282402038574
    8. ' n' → logprob: -15.130282402038574
    9. '(
' → logprob: -15.130282402038574
    10. '9' → logprob: -15.630282402038574

Token 91: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009975525550544262
    2. ' n' → logprob: -5.134975433349609
    3. '10' → logprob: -6.009975433349609
    4. '(n' → logprob: -6.634975433349609
    5. '9' → logprob: -9.63497543334961
    6. ')n' → logprob: -9.88497543334961
    7. '	n' → logprob: -10.00997543334961
    8. ' ' → logprob: -10.25997543334961
    9. '_n' → logprob: -10.38497543334961
    10. '(' → logprob: -11.25997543334961

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2115190029144287
    2. ',k' → logprob: -1.8365190029144287
    3. 'k' → logprob: -3.7115190029144287
    4. ' k' → logprob: -5.461519241333008
    5. ',n' → logprob: -6.336519241333008
    6. ' ,' → logprob: -7.586519241333008
    7. 'n' → logprob: -9.086519241333008
    8. '-k' → logprob: -9.086519241333008
    9. ' n' → logprob: -9.836519241333008
    10. '-' → logprob: -11.586519241333008

Token 93: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004632215015590191
    2. ' k' → logprob: -5.379631996154785
    3. '<|end|>' → logprob: -12.129631996154785
    4. '	k' → logprob: -12.504631996154785
    5. '   ' → logprob: -13.379631996154785
    6. ' ' → logprob: -14.754631996154785
    7. ')' → logprob: -14.879631996154785
    8. '<|end|>' → logprob: -15.129631996154785
    9. '{k' → logprob: -17.0046329498291
    10. ' ' → logprob: -17.1296329498291

Token 94: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.6201393604278564
    2. ' -' → logprob: -1.3701393604278564
    3. '-' → logprob: -1.6201393604278564
    4. ')' → logprob: -5.370139122009277
    5. '-n' → logprob: -5.870139122009277
    6. 'k' → logprob: -6.745139122009277
    7. ' k' → logprob: -7.620139122009277
    8. '<|end|>' → logprob: -8.245139122009277
    9. '-)' → logprob: -8.870139122009277
    10. ' ' → logprob: -8.870139122009277

Token 95: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1810087114572525
    2. ' k' → logprob: -1.8060086965560913
    3. '<|end|>' → logprob: -6.931008815765381
    4. '1' → logprob: -8.931008338928223
    5. '<|end|>' → logprob: -9.431008338928223
    6. ' ' → logprob: -10.056008338928223
    7. '2' → logprob: -12.056008338928223
    8. ' (' → logprob: -12.431008338928223
    9. '	k' → logprob: -12.556008338928223
    10. '-k' → logprob: -12.681008338928223

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036775172338820994
    2. ')*' → logprob: -9.625368118286133
    3. ' )' → logprob: -9.875368118286133
    4. '*' → logprob: -9.875368118286133
    5. ')
' → logprob: -10.625368118286133
    6. ')c' → logprob: -10.875368118286133
    7. '+' → logprob: -11.000368118286133
    8. 'if' → logprob: -11.125368118286133
    9. ')

' → logprob: -11.250368118286133
    10. '-' → logprob: -11.375368118286133

Token 97: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6949161291122437
    2. 'c' (adapté à ' c') → logprob: -1.3199161291122437
    3. '<|end|>' → logprob: -2.194916248321533
    4. '       ' → logprob: -2.319916248321533
    5. ' ' → logprob: -5.069916248321533
    6. ' comb' → logprob: -5.194916248321533
    7. ' *' → logprob: -5.944916248321533
    8. '<|end|>' → logprob: -6.569916248321533
    9. '   ' → logprob: -6.819916248321533
    10. '(' → logprob: -6.819916248321533

Token 99: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000633566698525101
    2. '0' → logprob: -7.875633716583252
    3. '1' → logprob: -8.375633239746094
    4. ' ' → logprob: -11.000633239746094
    5. 's' → logprob: -13.375633239746094
    6. '=' → logprob: -13.750633239746094
    7. '<|end|>' → logprob: -13.750633239746094
    8. ' =' → logprob: -13.875633239746094
    9. '3' → logprob: -15.563133239746094
    10. '```' → logprob: -16.125633239746094

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896487951278687
    2. '=' → logprob: -2.4639649391174316
    3. '=com' → logprob: -12.088964462280273
    4. '(' → logprob: -12.338964462280273
    5. '(com' → logprob: -12.588964462280273
    6. '<|end|>' → logprob: -12.713964462280273
    7. '   ' → logprob: -12.963964462280273
    8. ' ' → logprob: -13.213964462280273
    9. ')' → logprob: -13.713964462280273
    10. '=
' → logprob: -14.588964462280273

Token 101: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.018452271819114685
    2. 'comb' → logprob: -4.018452167510986
    3. 'com' → logprob: -9.143452644348145
    4. ' ' → logprob: -9.893452644348145
    5. '  ' → logprob: -9.893452644348145
    6. '(com' → logprob: -10.393452644348145
    7. '   ' → logprob: -10.893452644348145
    8. '<|end|>' → logprob: -11.643452644348145
    9. '```' → logprob: -11.893452644348145
    10. '    ' → logprob: -12.393452644348145

Token 102: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005638889968395233
    2. '(n' → logprob: -5.38063907623291
    3. '9' → logprob: -7.75563907623291
    4. '(s' → logprob: -8.25563907623291
    5. '10' → logprob: -8.38063907623291
    6. 's' → logprob: -10.13063907623291
    7. '<|end|>' → logprob: -10.63063907623291
    8. '((' → logprob: -11.75563907623291
    9. '45' → logprob: -12.00563907623291
    10. '(
' → logprob: -12.75563907623291

Token 103: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5152255296707153
    2. ' s' → logprob: -1.7652255296707153
    3. 's' → logprob: -1.8902255296707153
    4. ' ,' → logprob: -4.015225410461426
    5. '-' → logprob: -4.390225410461426
    6. ' -' → logprob: -4.515225410461426
    7. ',s' → logprob: -4.515225410461426
    8. '<|end|>' → logprob: -4.765225410461426
    9. ',k' → logprob: -5.265225410461426
    10. ' k' → logprob: -5.390225410461426

Token 104: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.354385644197464
    2. '1' → logprob: -1.2293856143951416
    3. ' k' → logprob: -5.479385852813721
    4. 's' → logprob: -6.854385852813721
    5. ' ' → logprob: -7.854385852813721
    6. '<|end|>' → logprob: -9.479385375976562
    7. ')' → logprob: -9.979385375976562
    8. ' s' → logprob: -10.229385375976562
    9. '10' → logprob: -10.854385375976562
    10. 'n' → logprob: -10.979385375976562

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42273014783859253
    2. ' ,' → logprob: -2.0477302074432373
    3. 's' → logprob: -2.2977302074432373
    4. ' s' → logprob: -2.6727302074432373
    5. ',s' → logprob: -3.2977302074432373
    6. ' ' → logprob: -5.547729969024658
    7. '<|end|>' → logprob: -6.797729969024658
    8. ')' → logprob: -6.922729969024658
    9. '(s' → logprob: -7.672729969024658
    10. ' -' → logprob: -7.797729969024658

Token 106: ' k' (ID: 372)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02211412973701954
    2. ' s' → logprob: -4.022114276885986
    3. '(s' → logprob: -5.897114276885986
    4. 'n' → logprob: -7.147114276885986
    5. '   ' → logprob: -9.272113800048828
    6. 'k' → logprob: -9.397113800048828
    7. ' (' → logprob: -9.772113800048828
    8. ' n' → logprob: -10.022113800048828
    9. '(n' → logprob: -10.022113800048828
    10. ' ' → logprob: -11.022113800048828

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012323728296905756
    2. ')
' → logprob: -7.001232147216797
    3. ' )' → logprob: -8.376232147216797
    4. '       ' → logprob: -10.376232147216797
    5. '<|end|>' → logprob: -11.251232147216797
    6. '   ' → logprob: -11.501232147216797
    7. '<|end|>' → logprob: -12.126232147216797
    8. ')return' → logprob: -12.501232147216797
    9. ')s' → logprob: -12.876232147216797
    10. '):' → logprob: -12.876232147216797

Token 108: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' k' (ID: 372)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2545088827610016
    2. 'n' → logprob: -1.8795088529586792
    3. ' False' → logprob: -3.6295089721679688
    4. '0' → logprob: -4.004508972167969
    5. 'False' → logprob: -4.129508972167969
    6. ' k' → logprob: -5.879508972167969
    7. ' ' → logprob: -6.129508972167969
    8. ' s' → logprob: -6.129508972167969
    9. 'k' → logprob: -6.254508972167969
    10. '(n' → logprob: -7.004508972167969

Token 110: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5904293656349182
    2. ' ==' → logprob: -1.0904293060302734
    3. '==' → logprob: -2.8404293060302734
    4. ' ' → logprob: -4.340429306030273
    5. '<=' → logprob: -4.590429306030273
    6. ' >' → logprob: -4.965429306030273
    7. '<|end|>' → logprob: -5.215429306030273
    8. ' else' → logprob: -5.340429306030273
    9. ' !=' → logprob: -5.465429306030273
    10. ' <' → logprob: -6.340429306030273

Token 111: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6333257555961609
    2. ' n' → logprob: -0.7583257555961609
    3. '(n' → logprob: -7.883325576782227
    4. ' s' → logprob: -9.008325576782227
    5. ' (' → logprob: -9.008325576782227
    6. 's' → logprob: -10.008325576782227
    7. ' ' → logprob: -10.508325576782227
    8. ' min' → logprob: -11.633325576782227
    9. '(' → logprob: -12.008325576782227
    10. 'min' → logprob: -12.133325576782227

Token 112: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02393091470003128
    2. 'else' → logprob: -3.7739310264587402
    3. '-' → logprob: -8.273930549621582
    4. '<|end|>' → logprob: -9.023930549621582
    5. ' and' → logprob: -9.148930549621582
    6. '	else' → logprob: -10.273930549621582
    7. ' -' → logprob: -10.273930549621582
    8. '        ' → logprob: -10.398930549621582
    9. '       ' → logprob: -10.398930549621582
    10. ' ' → logprob: -10.648930549621582

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020708298310637474
    2. ' ' → logprob: -3.8957083225250244
    3. '       ' → logprob: -9.020708084106445
    4. '   ' → logprob: -11.020708084106445
    5. '           ' → logprob: -11.270708084106445
    6. '1' → logprob: -12.395708084106445
    7. '  ' → logprob: -13.145708084106445
    8. '    ' → logprob: -13.145708084106445
    9. '        ' → logprob: -13.395708084106445
    10. ' comb' → logprob: -13.770708084106445

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012522541219368577
    2. ' ' → logprob: -6.751252174377441
    3. '1' → logprob: -10.376252174377441
    4. 'comb' → logprob: -11.001252174377441
    5. 'None' → logprob: -11.501252174377441
    6. ' comb' → logprob: -11.501252174377441
    7. '       ' → logprob: -13.001252174377441
    8. '   ' → logprob: -13.126252174377441
    9. '...' → logprob: -13.376252174377441
    10. '           ' → logprob: -13.626252174377441

Token 115: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13450436294078827
    2. '<|end|>' → logprob: -2.1345043182373047
    3. ')' → logprob: -5.384504318237305
    4. '
' → logprob: -6.884504318237305
    5. '<|end|>' → logprob: -7.384504318237305
    6. ',' → logprob: -7.884504318237305
    7. ' ' → logprob: -8.759504318237305
    8. '   ' → logprob: -8.884504318237305
    9. '        
' → logprob: -8.884504318237305
    10. ')
' → logprob: -9.259504318237305

Token 116: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0209991242736578
    2. '<|end|>' → logprob: -4.270998954772949
    3. ')' → logprob: -5.520998954772949
    4. '
' → logprob: -7.395998954772949
    5. ' if' → logprob: -7.645998954772949
    6. '   ' → logprob: -7.770998954772949
    7. ' ' → logprob: -7.895998954772949
    8. '        
' → logprob: -9.02099895477295
    9. ',' → logprob: -9.27099895477295
    10. '<|end|>' → logprob: -9.39599895477295

Token 117: ' This' (ID: 1328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' actually' (ID: 4771)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20483605563640594
    2. ' not' → logprob: -2.329836130142212
    3. ' incorrect' → logprob: -2.954836130142212
    4. '    ' → logprob: -5.079835891723633
    5. '0' → logprob: -5.454835891723633
    6. '<|end|>' → logprob: -5.454835891723633
    7. ' comb' → logprob: -5.579835891723633
    8. 'n' → logprob: -5.954835891723633
    9. ' None' → logprob: -6.454835891723633
    10. 'incorrect' → logprob: -6.579835891723633

Token 120: ' k' (ID: 372)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.41014713048934937
    2. ')' → logprob: -2.535147190093994
    3. ' ' → logprob: -3.035147190093994
    4. '0' → logprob: -3.035147190093994
    5. '<|end|>' → logprob: -3.285147190093994
    6. 'n' → logprob: -3.410147190093994
    7. 'comb' → logprob: -3.785147190093994
    8. ' not' → logprob: -4.410147190093994
    9. ' n' → logprob: -4.660147190093994
    10. ' )' → logprob: -5.160147190093994

Token 121: ' choose' (ID: 5655)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.575099766254425
    2. 'k' → logprob: -1.0750997066497803
    3. '<|end|>' → logprob: -3.4500997066497803
    4. 's' → logprob: -3.7000997066497803
    5. ' n' → logprob: -4.075099945068359
    6. '(n' → logprob: -4.825099945068359
    7. ' k' → logprob: -5.325099945068359
    8. '0' → logprob: -5.825099945068359
    9. ' s' → logprob: -6.575099945068359
    10. '<|end|>' → logprob: -6.700099945068359

Token 123: ' which' (ID: 1118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6913569569587708
    2. '<|end|>' → logprob: -1.316356897354126
    3. ')' → logprob: -2.316356897354126
    4. '):' → logprob: -2.566356897354126
    5. '       ' → logprob: -4.316357135772705
    6. '   ' → logprob: -4.566357135772705
    7. ' :' → logprob: -4.691357135772705
    8. ' ' → logprob: -4.816357135772705
    9. '(n' → logprob: -5.941357135772705
    10. '<|end|>' → logprob: -6.316357135772705

Token 124: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26058095693588257
    2. '0' → logprob: -1.7605810165405273
    3. ' ' → logprob: -2.8855810165405273
    4. ' comb' → logprob: -8.010581016540527
    5. ' incorrect' → logprob: -8.635581016540527
    6. ' not' → logprob: -8.635581016540527
    7. '```' → logprob: -8.760581016540527
    8. 'incorrect' → logprob: -9.010581016540527
    9. 'sign' → logprob: -9.760581016540527
    10. 'Incorrect' → logprob: -10.010581016540527

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1669110357761383
    2. '0' → logprob: -1.916911005973816
    3. ' ' → logprob: -5.6669111251831055
    4. ' comb' → logprob: -6.0419111251831055
    5. 'comb' → logprob: -7.2919111251831055
    6. 'incorrect' → logprob: -10.791911125183105
    7. '```' → logprob: -10.916911125183105
    8. 'not' → logprob: -10.916911125183105
    9. 'invalid' → logprob: -11.041911125183105
    10. 'n' → logprob: -11.666911125183105

Token 127: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' but' (ID: 889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' safer' (ID: 46763)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.0732479095458984
    2. '<|end|>' → logprob: -1.6982479095458984
    3. ' not' → logprob: -2.1982479095458984
    4. '       ' → logprob: -2.1982479095458984
    5. ' continue' → logprob: -3.0732479095458984
    6. ')' → logprob: -3.6982479095458984
    7. 'n' → logprob: -3.8232479095458984
    8. 'continue' → logprob: -4.073247909545898
    9. ' continues' → logprob: -4.448247909545898
    10. ' the' → logprob: -4.573247909545898

Token 130: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' keep' (ID: 3357)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.43392449617385864
    2. ')' → logprob: -1.5589244365692139
    3. ' continue' → logprob: -2.808924436569214
    4. 'n' → logprob: -3.308924436569214
    5. '<|end|>' → logprob: -3.808924436569214
    6. 'range' → logprob: -5.183924674987793
    7. '0' → logprob: -5.933924674987793
    8. 'com' → logprob: -6.308924674987793
    9. ' comb' → logprob: -6.433924674987793
    10. 'k' → logprob: -6.433924674987793

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14945809543132782
    2. '<|end|>' → logprob: -2.399458169937134
    3. '        ' → logprob: -4.649457931518555
    4. ')' → logprob: -4.774457931518555
    5. ' comb' → logprob: -4.899457931518555
    6. ' ' → logprob: -5.524457931518555
    7. '    ' → logprob: -5.899457931518555
    8. '+' → logprob: -6.149457931518555
    9. '   ' → logprob: -6.649457931518555
    10. ':' → logprob: -6.774457931518555

Token 134: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2089454084634781
    2. 'count' → logprob: -3.0839455127716064
    3. 'result' → logprob: -3.2089455127716064
    4. 'total' → logprob: -3.8339455127716064
    5. 'term' → logprob: -4.583945274353027
    6. 'sum' → logprob: -4.708945274353027
    7. ' total' → logprob: -4.833945274353027
    8. ' count' → logprob: -4.958945274353027
    9. ' result' → logprob: -4.958945274353027
    10. ' term' → logprob: -5.083945274353027

Token 135: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07432961463928223
    2. '3' → logprob: -3.3243296146392822
    3. ' =' → logprob: -4.699329376220703
    4. 'result' → logprob: -4.949329376220703
    5. '2' → logprob: -5.574329376220703
    6. ' +=' → logprob: -5.574329376220703
    7. '=' → logprob: -5.699329376220703
    8. ' ' → logprob: -6.324329376220703
    9. 'comb' → logprob: -7.074329376220703
    10. ')' → logprob: -7.324329376220703

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282432079315186
    2. '=' → logprob: -2.2378244400024414
    3. '   ' → logprob: -13.987824440002441
    4. ' ' → logprob: -14.612824440002441
    5. '    ' → logprob: -15.612824440002441
    6. ')' → logprob: -15.737824440002441
    7. ' ' → logprob: -16.237823486328125
    8. '  ' → logprob: -16.362823486328125
    9. '=com' → logprob: -16.737823486328125
    10. '	' → logprob: -16.987823486328125

Token 137: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.42902255058288574
    2. ' comb' → logprob: -1.0540225505828857
    3. '   ' → logprob: -8.804022789001465
    4. ' ' → logprob: -10.054022789001465
    5. '  ' → logprob: -10.179022789001465
    6. 'com' → logprob: -10.179022789001465
    7. '    ' → logprob: -10.429022789001465
    8. '       ' → logprob: -12.554022789001465
    9. '(com' → logprob: -12.679022789001465
    10. '     ' → logprob: -12.804022789001465

Token 138: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22740338742733002
    2. '(n' → logprob: -1.7274034023284912
    3. '(s' → logprob: -3.727403402328491
    4. '10' → logprob: -7.352403163909912
    5. 's' → logprob: -7.852403163909912
    6. '((' → logprob: -8.47740364074707
    7. '45' → logprob: -9.10240364074707
    8. 'n' → logprob: -9.97740364074707
    9. '9' → logprob: -9.97740364074707
    10. '<|end|>' → logprob: -10.35240364074707

Token 139: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3233363926410675
    2. '-' → logprob: -1.3233363628387451
    3. '-n' → logprob: -4.698336601257324
    4. 'n' → logprob: -7.948336601257324
    5. ' n' → logprob: -8.448336601257324
    6. '<|end|>' → logprob: -9.323336601257324
    7. ',' → logprob: -9.698336601257324
    8. ' ' → logprob: -9.823336601257324
    9. '-k' → logprob: -10.073336601257324
    10. ')' → logprob: -11.073336601257324

Token 140: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6448779702186584
    2. '10' → logprob: -1.5198779106140137
    3. '1' → logprob: -1.7698779106140137
    4. '(' → logprob: -2.8948779106140137
    5. '9' → logprob: -3.7698779106140137
    6. ' k' → logprob: -5.644877910614014
    7. ' ' → logprob: -6.144877910614014
    8. ' (' → logprob: -7.269877910614014
    9. '(k' → logprob: -7.519877910614014
    10. 'n' → logprob: -7.894877910614014

Token 141: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6254360675811768
    2. '10' → logprob: -1.0004360675811768
    3. 'k' → logprob: -2.3754360675811768
    4. ' ' → logprob: -6.250435829162598
    5. '1' → logprob: -7.125435829162598
    6. '(' → logprob: -7.500435829162598
    7. ' k' → logprob: -8.125435829162598
    8. '90' → logprob: -8.375435829162598
    9. '<|end|>' → logprob: -8.375435829162598
    10. '0' → logprob: -9.625435829162598

Token 142: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9760742783546448
    2. '*k' → logprob: -1.10107421875
    3. 'k' → logprob: -1.47607421875
    4. '<|end|>' → logprob: -3.60107421875
    5. ',' → logprob: -3.97607421875
    6. ' k' → logprob: -4.85107421875
    7. '*' → logprob: -5.22607421875
    8. ')' → logprob: -6.60107421875
    9. ' ,' → logprob: -7.35107421875
    10. ',k' → logprob: -8.47607421875

Token 143: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017151589272543788
    2. ' k' → logprob: -6.376715183258057
    3. '<|end|>' → logprob: -11.376714706420898
    4. ')' → logprob: -15.251714706420898
    5. '*k' → logprob: -15.501714706420898
    6. '<|end|>' → logprob: -15.501714706420898
    7. ' ' → logprob: -15.626714706420898
    8. '0' → logprob: -15.751714706420898
    9. '{k' → logprob: -16.2517147064209
    10. '_k' → logprob: -16.7517147064209

Token 144: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07552863657474518
    2. ',n' → logprob: -3.575528621673584
    3. ' +' → logprob: -4.200528621673584
    4. ' ,' → logprob: -4.325528621673584
    5. ' -' → logprob: -4.950528621673584
    6. '+n' → logprob: -5.575528621673584
    7. 'n' → logprob: -6.200528621673584
    8. '+' → logprob: -6.825528621673584
    9. '-' → logprob: -7.075528621673584
    10. ' ' → logprob: -7.575528621673584

Token 145: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008941899868659675
    2. '(n' → logprob: -7.625894069671631
    3. ' n' → logprob: -8.250894546508789
    4. '10' → logprob: -9.625894546508789
    5. '9' → logprob: -10.125894546508789
    6. '(' → logprob: -10.375894546508789
    7. '	n' → logprob: -12.375894546508789
    8. ' ' → logprob: -13.750894546508789
    9. '[n' → logprob: -14.250894546508789
    10. '_n' → logprob: -14.500894546508789

Token 146: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02056162618100643
    2. ' -' → logprob: -3.895561695098877
    3. ' ' → logprob: -12.395561218261719
    4. 'n' → logprob: -12.520561218261719
    5. ',' → logprob: -12.645561218261719
    6. '<|end|>' → logprob: -12.895561218261719
    7. '
' → logprob: -13.145561218261719
    8. '1' → logprob: -14.020561218261719
    9. ')' → logprob: -14.145561218261719
    10. '<|end|>' → logprob: -15.145561218261719

Token 147: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -11.500020027160645
    3. '-' → logprob: -12.000020027160645
    4. 'n' → logprob: -12.625020027160645
    5. ' -' → logprob: -15.250020027160645
    6. '   ' → logprob: -15.750020027160645
    7. 'k' → logprob: -16.00002098083496
    8. '
' → logprob: -16.37502098083496
    9. '  ' → logprob: -16.81252098083496
    10. 's' → logprob: -16.93752098083496

Token 148: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05909673124551773
    2. '1' → logprob: -2.9340968132019043
    3. ' -' → logprob: -5.809096813201904
    4. 'n' → logprob: -6.809096813201904
    5. '
' → logprob: -9.934096336364746
    6. ' ' → logprob: -11.184096336364746
    7. 's' → logprob: -11.559096336364746
    8. '–' → logprob: -12.559096336364746
    9. '```' → logprob: -12.684096336364746
    10. '<|end|>' → logprob: -12.934096336364746

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00529008824378252
    2. ',n' → logprob: -5.6302900314331055
    3. ' ,' → logprob: -6.6302900314331055
    4. 'n' → logprob: -8.755290031433105
    5. ' -' → logprob: -9.630290031433105
    6. ')' → logprob: -9.630290031433105
    7. ' ' → logprob: -10.505290031433105
    8. ' n' → logprob: -10.755290031433105
    9. '   ' → logprob: -11.380290031433105
    10. '  ' → logprob: -12.630290031433105

Token 150: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014166327193379402
    2. ' n' → logprob: -4.264166355133057
    3. '	n' → logprob: -14.139165878295898
    4. ' ' → logprob: -14.389165878295898
    5. '<|end|>' → logprob: -15.014165878295898
    6. '   ' → logprob: -15.389165878295898
    7. '
' → logprob: -15.514165878295898
    8. '(n' → logprob: -15.514165878295898
    9. '<|end|>' → logprob: -15.639165878295898
    10. 's' → logprob: -16.1391658782959

Token 151: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22562800347805023
    2. ' -' → logprob: -1.6006280183792114
    3. ')' → logprob: -8.600627899169922
    4. '   ' → logprob: -11.100627899169922
    5. 's' → logprob: -12.600627899169922
    6. ')-' → logprob: -12.850627899169922
    7. '1' → logprob: -13.100627899169922
    8. ' ' → logprob: -13.975627899169922
    9. '<|end|>' → logprob: -13.975627899169922
    10. 'def' → logprob: -14.100627899169922

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.37501335144043
    4. '-' → logprob: -15.00001335144043
    5. ')' → logprob: -15.62501335144043
    6. '<|end|>' → logprob: -15.62501335144043
    7. '<|end|>' → logprob: -16.37501335144043
    8. '2' → logprob: -17.18751335144043
    9. '```' → logprob: -17.37501335144043
    10. 'def' → logprob: -17.62501335144043

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.250005722045898
    3. '-' → logprob: -14.250005722045898
    4. '<|end|>' → logprob: -15.375005722045898
    5. ')' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.0000057220459
    7. '```' → logprob: -16.6875057220459
    8. '2' → logprob: -17.5000057220459
    9. '<|end|>' → logprob: -17.7500057220459
    10. '۱' → logprob: -17.8750057220459

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11415001004934311
    2. ')
' → logprob: -2.239150047302246
    3. '       ' → logprob: -6.739150047302246
    4. '   ' → logprob: -9.864150047302246
    5. ' )' → logprob: -9.989150047302246
    6. ' )
' → logprob: -11.114150047302246
    7. ')
' → logprob: -11.114150047302246
    8. ')

' → logprob: -11.739150047302246
    9. ')**' → logprob: -13.864150047302246
    10. ')return' → logprob: -13.864150047302246

Token 155: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0735718235373497
    2. '<|end|>' → logprob: -2.6985719203948975
    3. ')' → logprob: -6.073571681976318
    4. '<|end|>' → logprob: -6.948571681976318
    5. '
' → logprob: -9.573572158813477
    6. ',' → logprob: -9.948572158813477
    7. '        
' → logprob: -9.948572158813477
    8. '   ' → logprob: -10.448572158813477
    9. '```' → logprob: -10.448572158813477
    10. '[' → logprob: -10.573572158813477

Token 156: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.45600977540016174
    2. 's' → logprob: -1.2060097455978394
    3. '(s' → logprob: -2.831009864807129
    4. ' (' → logprob: -5.831009864807129
    5. ' n' → logprob: -6.081009864807129
    6. '(n' → logprob: -6.706009864807129
    7. 'n' → logprob: -6.831009864807129
    8. '0' → logprob: -9.081009864807129
    9. ' ' → logprob: -9.081009864807129
    10. '(' → logprob: -10.206009864807129

Token 157: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17103423178195953
    2. '-' → logprob: -2.046034336090088
    3. ' >=' → logprob: -3.921034336090088
    4. '>=' → logprob: -4.921034336090088
    5. '<|end|>' → logprob: -7.296034336090088
    6. ' ' → logprob: -9.42103385925293
    7. '<|end|>' → logprob: -10.42103385925293
    8. ')>=' → logprob: -10.92103385925293
    9. '   ' → logprob: -11.29603385925293
    10. '  ' → logprob: -12.54603385925293

Token 158: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.805981972021982e-05
    2. ' ' → logprob: -9.25009822845459
    3. '(' → logprob: -13.37509822845459
    4. '<|end|>' → logprob: -15.62509822845459
    5. 'k' → logprob: -16.750097274780273
    6. '[' → logprob: -17.500097274780273
    7. '۱۰' → logprob: -17.500097274780273
    8. ' (' → logprob: -17.750097274780273
    9. '```' → logprob: -18.375097274780273
    10. '   ' → logprob: -18.562597274780273

Token 159: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.874882430769503e-05
    2. ' ' → logprob: -9.500079154968262
    3. 'k' → logprob: -13.375079154968262
    4. '<|end|>' → logprob: -13.625079154968262
    5. '(' → logprob: -15.375079154968262
    6. ' k' → logprob: -15.875079154968262
    7. '۱۰' → logprob: -16.250078201293945
    8. '```' → logprob: -16.250078201293945
    9. 's' → logprob: -16.750078201293945
    10. '
' → logprob: -17.062578201293945

Token 160: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5432316064834595
    2. '*k' → logprob: -0.9182316064834595
    3. '*' → logprob: -3.91823148727417
    4. 'k' → logprob: -12.293231964111328
    5. '*n' → logprob: -13.168231964111328
    6. '*p' → logprob: -13.168231964111328
    7. '*x' → logprob: -13.168231964111328
    8. '*u' → logprob: -13.168231964111328
    9. '*c' → logprob: -13.293231964111328
    10. '*t' → logprob: -13.293231964111328

Token 161: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.517272024415433e-05
    2. ' k' → logprob: -9.500075340270996
    3. '*k' → logprob: -16.12507438659668
    4. '<|end|>' → logprob: -16.87507438659668
    5. '(k' → logprob: -17.12507438659668
    6. '	k' → logprob: -17.75007438659668
    7. '(' → logprob: -18.37507438659668
    8. '{k' → logprob: -18.75007438659668
    9. ' ' → logprob: -18.87507438659668
    10. '<|end|>' → logprob: -19.12507438659668

Token 162: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.08983879536390305
    2. '+' → logprob: -2.589838743209839
    3. ' >=' → logprob: -4.964838981628418
    4. ')>=' → logprob: -6.464838981628418
    5. ' +' → logprob: -6.964838981628418
    6. ']>=' → logprob: -7.589838981628418
    7. '-' → logprob: -7.964838981628418
    8. '<|end|>' → logprob: -8.464838981628418
    9. ' ' → logprob: -9.089838981628418
    10. '+k' → logprob: -9.089838981628418

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002986392646562308
    2. ' ' → logprob: -8.625298500061035
    3. 'k' → logprob: -9.750298500061035
    4. 'n' → logprob: -9.750298500061035
    5. ' n' → logprob: -13.250298500061035
    6. ' k' → logprob: -14.250298500061035
    7. '(n' → logprob: -17.25029945373535
    8. '1' → logprob: -18.06279945373535
    9. '  ' → logprob: -18.18779945373535
    10. '   ' → logprob: -18.25029945373535

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027001395355910063
    2. 'k' → logprob: -6.002700328826904
    3. 'n' → logprob: -8.627699851989746
    4. ' ' → logprob: -10.127699851989746
    5. ' k' → logprob: -12.502699851989746
    6. ' n' → logprob: -13.877699851989746
    7. '(n' → logprob: -16.440200805664062
    8. '(' → logprob: -16.565200805664062
    9. '   ' → logprob: -16.690200805664062
    10. '-n' → logprob: -16.815200805664062

Token 165: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06160851567983627
    2. 'else' → logprob: -3.0616085529327393
    3. '       ' → logprob: -4.56160831451416
    4. '   ' → logprob: -7.31160831451416
    5. ')' → logprob: -7.43660831451416
    6. '        ' → logprob: -8.43660831451416
    7. ' ' → logprob: -8.43660831451416
    8. '<|end|>' → logprob: -8.43660831451416
    9. ' and' → logprob: -9.06160831451416
    10. '    ' → logprob: -9.18660831451416

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025804166216403246
    2. ' ' → logprob: -6.002580642700195
    3. '       ' → logprob: -9.252580642700195
    4. '           ' → logprob: -12.252580642700195
    5. '   ' → logprob: -12.752580642700195
    6. '  ' → logprob: -15.502580642700195
    7. '        ' → logprob: -15.502580642700195
    8. '               ' → logprob: -15.877580642700195
    9. '     ' → logprob: -15.877580642700195
    10. '      ' → logprob: -16.127580642700195

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001705175032839179
    2. ' ' → logprob: -6.376705169677734
    3. '           ' → logprob: -13.751705169677734
    4. '       ' → logprob: -14.001705169677734
    5. '   ' → logprob: -14.251705169677734
    6. '  ' → logprob: -16.376705169677734
    7. '               ' → logprob: -16.876705169677734
    8. '         ' → logprob: -17.314205169677734
    9. '     ' → logprob: -17.376705169677734
    10. '                   ' → logprob: -17.501705169677734

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28968286514282227
    2. '<|end|>' → logprob: -1.4146828651428223
    3. '<|end|>' → logprob: -5.664682865142822
    4. ')' → logprob: -5.789682865142822
    5. '
' → logprob: -6.914682865142822
    6. ':' → logprob: -8.289682388305664
    7. '   ' → logprob: -8.414682388305664
    8. ',' → logprob: -9.664682388305664
    9. '```' → logprob: -10.164682388305664
    10. '+' → logprob: -10.164682388305664

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03204479068517685
    2. '<|end|>' → logprob: -3.5320448875427246
    3. '+' → logprob: -6.907044887542725
    4. ')' → logprob: -8.032044410705566
    5. '<|end|>' → logprob: -8.282044410705566
    6. '   ' → logprob: -8.907044410705566
    7. ' +' → logprob: -9.407044410705566
    8. ' ' → logprob: -9.657044410705566
    9. '	' → logprob: -10.032044410705566
    10. ',' → logprob: -10.032044410705566

Token 170: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.37161821126937866
    2. '       ' → logprob: -1.7466182708740234
    3. ' result' → logprob: -1.9966182708740234
    4. '   ' → logprob: -8.996618270874023
    5. '	result' → logprob: -10.371618270874023
    6. '           ' → logprob: -11.496618270874023
    7. 'if' (adapté à ' if') → logprob: -11.496618270874023
    8. '      ' → logprob: -11.871618270874023
    9. ' ' → logprob: -12.246618270874023
    10. ' if' → logprob: -12.246618270874023

Token 171: ' n' (ID: 297)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9734847545623779
    2. ' sign' → logprob: -0.9734847545623779
    3. 'sign' → logprob: -2.223484754562378
    4. ' s' → logprob: -2.973484754562378
    5. ' n' → logprob: -3.348484754562378
    6. 'c' → logprob: -3.473484754562378
    7. ' k' → logprob: -4.973484992980957
    8. 'n' → logprob: -5.473484992980957
    9. ' result' → logprob: -6.598484992980957
    10. 's' → logprob: -6.723484992980957

Token 172: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011258602142333984
    2. '-' → logprob: -4.886258602142334
    3. ' ==' → logprob: -6.261258602142334
    4. '-k' → logprob: -7.261258602142334
    5. '==' → logprob: -7.386258602142334
    6. '<|end|>' → logprob: -8.886259078979492
    7. '-n' → logprob: -9.886259078979492
    8. '   ' → logprob: -9.886259078979492
    9. ' ' → logprob: -10.011259078979492
    10. ')' → logprob: -10.386259078979492

Token 173: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00864282064139843
    2. ' k' → logprob: -4.758642673492432
    3. '1' → logprob: -10.50864315032959
    4. ' ' → logprob: -14.13364315032959
    5. '	k' → logprob: -15.88364315032959
    6. '<|end|>' → logprob: -16.383642196655273
    7. '0' → logprob: -17.008642196655273
    8. ' к' → logprob: -18.196142196655273
    9. '(k' → logprob: -18.446142196655273
    10. '_k' → logprob: -19.133642196655273

Token 174: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9015958309173584
    2. '>=' → logprob: -1.1515958309173584
    3. ' >' → logprob: -1.7765958309173584
    4. '>' → logprob: -2.4015958309173584
    5. ' <=' → logprob: -5.1515960693359375
    6. ' ==' → logprob: -5.4015960693359375
    7. '<=' → logprob: -5.9015960693359375
    8. '==' → logprob: -6.0265960693359375
    9. '<|end|>' → logprob: -6.9015960693359375
    10. ')' → logprob: -7.9015960693359375

Token 175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003550297114998102
    2. ' ' → logprob: -5.7535505294799805
    3. '=' → logprob: -8.00355052947998
    4. '1' → logprob: -10.25355052947998
    5. ' =' → logprob: -14.00355052947998
    6. 'k' → logprob: -14.12855052947998
    7. 'n' → logprob: -14.75355052947998
    8. '۰' → logprob: -15.37855052947998
    9. '   ' → logprob: -16.378549575805664
    10. '  ' → logprob: -16.628549575805664

Token 176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002270198310725391
    2. '=' → logprob: -9.125226974487305
    3. ' ' → logprob: -9.375226974487305
    4. '1' → logprob: -10.375226974487305
    5. '۰' → logprob: -14.500226974487305
    6. ' =' → logprob: -14.625226974487305
    7. 'k' → logprob: -14.625226974487305
    8. 'n' → logprob: -15.812726974487305
    9. '2' → logprob: -16.562726974487305
    10. '   ' → logprob: -16.750226974487305

Token 177: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43638864159584045
    2. ' or' → logprob: -1.186388611793518
    3. '       ' → logprob: -3.5613887310028076
    4. '           ' → logprob: -4.6863884925842285
    5. ':
' → logprob: -4.8113884925842285
    6. ':return' → logprob: -6.8113884925842285
    7. '   ' → logprob: -7.9363884925842285
    8. '<|end|>' → logprob: -8.061388969421387
    9. '):' → logprob: -8.936388969421387
    10. ' and' → logprob: -8.936388969421387

Token 178: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0115317106246948
    2. ' c' → logprob: -1.3865317106246948
    3. ' n' → logprob: -2.3865318298339844
    4. 'c' → logprob: -2.8865318298339844
    5. ' not' → logprob: -3.1365318298339844
    6. 's' → logprob: -3.2615318298339844
    7. ' comb' → logprob: -3.5115318298339844
    8. ' k' → logprob: -3.5115318298339844
    9. 'n' → logprob: -3.6365318298339844
    10. '           ' → logprob: -3.7615318298339844

Token 179: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005799740087240934
    2. '-' → logprob: -5.255799770355225
    3. ' <' → logprob: -8.255799293518066
    4. ' ' → logprob: -9.005799293518066
    5. '<|end|>' → logprob: -9.255799293518066
    6. '   ' → logprob: -10.630799293518066
    7. '<|end|>' → logprob: -11.130799293518066
    8. '  ' → logprob: -11.755799293518066
    9. '<' → logprob: -11.880799293518066
    10. '```' → logprob: -12.005799293518066

Token 180: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007432799902744591
    2. ' ' → logprob: -7.250743389129639
    3. '<|end|>' → logprob: -11.50074291229248
    4. 'k' → logprob: -11.87574291229248
    5. '```' → logprob: -12.37574291229248
    6. '   ' → logprob: -12.62574291229248
    7. ' k' → logprob: -13.00074291229248
    8. 'def' → logprob: -14.12574291229248
    9. '    ' → logprob: -14.50074291229248
    10. '1' → logprob: -14.50074291229248

Token 181: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012332366895861924
    2. ' ' → logprob: -9.125123023986816
    3. 'k' → logprob: -12.625123023986816
    4. '```' → logprob: -12.625123023986816
    5. '<|end|>' → logprob: -12.750123023986816
    6. '(' → logprob: -13.375123023986816
    7. '1' → logprob: -14.375123023986816
    8. '   ' → logprob: -14.875123023986816
    9. '[' → logprob: -15.125123023986816
    10. '{' → logprob: -15.375123023986816

Token 182: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02775103785097599
    2. '*k' → logprob: -4.0277509689331055
    3. '*' → logprob: -4.6527509689331055
    4. '```' → logprob: -12.777750968933105
    5. ' ' → logprob: -12.902750968933105
    6. ' ' → logprob: -13.027750968933105
    7. '*c' → logprob: -13.277750968933105
    8. 'k' → logprob: -13.277750968933105
    9. '   ' → logprob: -13.527750968933105
    10. '*s' → logprob: -13.777750968933105

Token 183: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.026304593309760094
    2. ' k' → logprob: -3.6513044834136963
    3. ' ' → logprob: -13.276304244995117
    4. '10' → logprob: -13.401304244995117
    5. '1' → logprob: -14.901304244995117
    6. '(k' → logprob: -15.776304244995117
    7. '	k' → logprob: -16.026304244995117
    8. '   ' → logprob: -16.276304244995117
    9. '```' → logprob: -16.526304244995117
    10. '(' → logprob: -17.026304244995117

Token 184: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5764922499656677
    2. ' <' → logprob: -0.8264922499656677
    3. ' ' → logprob: -8.826492309570312
    4. '<n' → logprob: -8.951492309570312
    5. '   ' → logprob: -9.826492309570312
    6. '+' → logprob: -9.951492309570312
    7. '>=' → logprob: -10.451492309570312
    8. '*' → logprob: -10.451492309570312
    9. ' *' → logprob: -10.451492309570312
    10. ' >=' → logprob: -10.826492309570312

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011276054196059704
    2. ' ' → logprob: -5.0112762451171875
    3. 'n' → logprob: -5.7612762451171875
    4. ' n' → logprob: -6.8862762451171875
    5. '(n' → logprob: -8.011276245117188
    6. ' (' → logprob: -11.261276245117188
    7. '(' → logprob: -11.636276245117188
    8. '1' → logprob: -11.886276245117188
    9. '   ' → logprob: -11.886276245117188
    10. '[n' → logprob: -13.073776245117188

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012737659562844783
    2. 'n' → logprob: -9.750127792358398
    3. ' ' → logprob: -9.750127792358398
    4. '(n' → logprob: -12.250127792358398
    5. 'k' → logprob: -13.375127792358398
    6. '1' → logprob: -13.500127792358398
    7. ' n' → logprob: -13.875127792358398
    8. '(' → logprob: -14.000127792358398
    9. '   ' → logprob: -14.500127792358398
    10. '```' → logprob: -16.5001277923584

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24662356078624725
    2. ':
' → logprob: -2.1216235160827637
    3. '       ' → logprob: -2.9966235160827637
    4. ' or' → logprob: -3.7466235160827637
    5. '           ' → logprob: -3.7466235160827637
    6. ':return' → logprob: -6.996623516082764
    7. '   ' → logprob: -8.246623992919922
    8. '):
' → logprob: -8.996623992919922
    9. '):' → logprob: -9.871623992919922
    10. ':
' → logprob: -10.246623992919922

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7480599284172058
    2. '       ' → logprob: -1.4980599880218506
    3. ' continue' → logprob: -1.4980599880218506
    4. ':' → logprob: -3.2480599880218506
    5. 'continue' → logprob: -3.8730599880218506
    6. ':
' → logprob: -4.6230597496032715
    7. ' :' → logprob: -5.7480597496032715
    8. ':return' → logprob: -5.9980597496032715
    9. ' continues' → logprob: -6.4980597496032715
    10. ' :
' → logprob: -7.8730597496032715

Token 189: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3597413897514343
    2. ' continue' → logprob: -1.859741449356079
    3. 'continue' (adapté à ' continue') → logprob: -1.984741449356079
    4. '       ' → logprob: -4.7347412109375
    5. '	continue' → logprob: -9.1097412109375
    6. '   ' → logprob: -10.2347412109375
    7. '_continue' → logprob: -10.8597412109375
    8. 'break' → logprob: -11.2347412109375
    9. '               ' → logprob: -11.4847412109375
    10. ' break' → logprob: -11.6097412109375

Token 190: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12913525104522705
    2. '<|end|>' → logprob: -2.1291351318359375
    3. '+' → logprob: -7.5041351318359375
    4. ')' → logprob: -7.6291351318359375
    5. '<|end|>' → logprob: -7.8791351318359375
    6. '
' → logprob: -8.004135131835938
    7. '   ' → logprob: -9.004135131835938
    8. '        
' → logprob: -9.879135131835938
    9. ' +' → logprob: -9.879135131835938
    10. ',' → logprob: -10.129135131835938

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058153651654720306
    2. '<|end|>' → logprob: -2.9331536293029785
    3. '+' → logprob: -6.3081536293029785
    4. 'result' → logprob: -7.6831536293029785
    5. ')' → logprob: -7.9331536293029785
    6. '   ' → logprob: -8.808154106140137
    7. '<|end|>' → logprob: -9.058154106140137
    8. '```' → logprob: -9.933154106140137
    9. ' +' → logprob: -10.308154106140137
    10. ' ' → logprob: -10.558154106140137

Token 192: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011576817370951176
    2. 'result' (adapté à ' result') → logprob: -5.1365766525268555
    3. ' result' → logprob: -5.5115766525268555
    4. '<|end|>' → logprob: -6.8865766525268555
    5. '   ' → logprob: -8.636576652526855
    6. '
' → logprob: -9.761576652526855
    7. '	' → logprob: -10.136576652526855
    8. '+' → logprob: -10.136576652526855
    9. '```' → logprob: -10.386576652526855
    10. '        
' → logprob: -10.386576652526855

Token 193: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06201283633708954
    2. '+=' → logprob: -2.8120129108428955
    3. '=' → logprob: -10.562012672424316
    4. '   ' → logprob: -11.687012672424316
    5. ']+=' → logprob: -12.687012672424316
    6. ' ' → logprob: -13.187012672424316
    7. '+' → logprob: -13.812012672424316
    8. '    ' → logprob: -13.937012672424316
    9. ' ' → logprob: -14.062012672424316
    10. ' =' → logprob: -14.562012672424316

Token 194: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.4740805923938751
    2. ' sign' → logprob: -0.9740805625915527
    3. '(sign' → logprob: -13.724081039428711
    4. '   ' → logprob: -13.849081039428711
    5. '       ' → logprob: -13.849081039428711
    6. '	sign' → logprob: -14.849081039428711
    7. ' signo' → logprob: -16.97408103942871
    8. '           ' → logprob: -16.97408103942871
    9. ' ' → logprob: -17.34908103942871
    10. '```' → logprob: -18.22408103942871

Token 195: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004102623555809259
    2. '*' → logprob: -5.50410270690918
    3. '*c' → logprob: -11.00410270690918
    4. '```' → logprob: -12.87910270690918
    5. ' ' → logprob: -13.87910270690918
    6. '   ' → logprob: -14.12910270690918
    7. ' comb' → logprob: -14.12910270690918
    8. ' c' → logprob: -14.25410270690918
    9. 'c' → logprob: -14.62910270690918
    10. ' ' → logprob: -15.00410270690918

Token 196: ' comb' (ID: 4134)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6332069635391235
    2. 'comb' → logprob: -0.7582069635391235
    3. ' c' → logprob: -8.383207321166992
    4. 'com' → logprob: -9.258207321166992
    5. ' comb' → logprob: -9.258207321166992
    6. '   ' → logprob: -9.633207321166992
    7. '(' → logprob: -10.133207321166992
    8. '(com' → logprob: -10.883207321166992
    9. '(c' → logprob: -10.883207321166992
    10. 'combo' → logprob: -11.758207321166992

Token 197: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009124171338044107
    2. '(n' → logprob: -7.250912189483643
    3. '10' → logprob: -8.6259126663208
    4. '(s' → logprob: -11.2509126663208
    5. ' (' → logprob: -12.8759126663208
    6. '```' → logprob: -13.2509126663208
    7. '((' → logprob: -13.6259126663208
    8. '(
' → logprob: -13.7509126663208
    9. '<|end|>' → logprob: -14.1259126663208
    10. 'n' → logprob: -14.1259126663208

Token 198: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1274636685848236
    2. 'n' → logprob: -2.1274635791778564
    3. '45' → logprob: -8.627463340759277
    4. 's' → logprob: -8.752463340759277
    5. '(' → logprob: -9.752463340759277
    6. '(n' → logprob: -10.127463340759277
    7. '9' → logprob: -10.127463340759277
    8. ' ' → logprob: -10.877463340759277
    9. '
' → logprob: -11.502463340759277
    10. ' n' → logprob: -12.127463340759277

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4810200333595276
    2. ',n' → logprob: -0.9810200333595276
    3. 'n' → logprob: -5.231019973754883
    4. ',k' → logprob: -7.231019973754883
    5. ' n' → logprob: -7.481019973754883
    6. ' ,' → logprob: -8.481019973754883
    7. ')' → logprob: -10.356019973754883
    8. '(n' → logprob: -11.356019973754883
    9. ')n' → logprob: -11.481019973754883
    10. 'k' → logprob: -12.106019973754883

Token 200: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.2762428822461516e-05
    2. 'n' → logprob: -10.250052452087402
    3. ' k' → logprob: -11.125052452087402
    4. '   ' → logprob: -13.000052452087402
    5. ' ' → logprob: -15.125052452087402
    6. '	k' → logprob: -16.75005340576172
    7. ' n' → logprob: -17.37505340576172
    8. '```' → logprob: -18.37505340576172
    9. '  ' → logprob: -18.50005340576172
    10. ')' → logprob: -18.62505340576172

Token 201: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.539801688631997e-05
    2. ')
' → logprob: -10.125065803527832
    3. ')*' → logprob: -11.375065803527832
    4. ' )' → logprob: -11.875065803527832
    5. '   ' → logprob: -13.250065803527832
    6. ')

' → logprob: -13.750065803527832
    7. '<|end|>' → logprob: -14.375065803527832
    8. '),' → logprob: -14.875065803527832
    9. ')`' → logprob: -15.000065803527832
    10. '[' → logprob: -15.125065803527832

Token 202: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.31641915440559387
    2. 'c' → logprob: -1.3164191246032715
    3. ' comb' → logprob: -6.1914191246032715
    4. ' c' → logprob: -7.3164191246032715
    5. 'com' → logprob: -8.06641960144043
    6. '   ' → logprob: -9.81641960144043
    7. 'combo' → logprob: -10.44141960144043
    8. '  ' → logprob: -12.12891960144043
    9. 'cmb' → logprob: -12.50391960144043
    10. '    ' → logprob: -12.75391960144043

Token 204: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14419707655906677
    2. '(s' → logprob: -2.0191969871520996
    3. '(' → logprob: -7.2691969871521
    4. 'n' → logprob: -7.3941969871521
    5. 's' → logprob: -8.519197463989258
    6. '((' → logprob: -12.144197463989258
    7. '(
' → logprob: -13.394197463989258
    8. '45' → logprob: -14.519197463989258
    9. ' (' → logprob: -15.269197463989258
    10. '9' → logprob: -15.269197463989258

Token 205: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04323360696434975
    2. 's' → logprob: -3.168233633041382
    3. '(n' → logprob: -9.418233871459961
    4. ' n' → logprob: -9.918233871459961
    5. '   ' → logprob: -10.293233871459961
    6. '9' → logprob: -10.418233871459961
    7. '(s' → logprob: -11.043233871459961
    8. '  ' → logprob: -12.543233871459961
    9. '45' → logprob: -12.543233871459961
    10. ' s' → logprob: -12.793233871459961

Token 206: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2793249785900116
    2. ',n' → logprob: -1.904325008392334
    3. '-n' → logprob: -3.154325008392334
    4. 'n' → logprob: -3.904325008392334
    5. '-' → logprob: -4.029325008392334
    6. ')' → logprob: -5.779325008392334
    7. ' ,' → logprob: -6.279325008392334
    8. ',
' → logprob: -6.529325008392334
    9. ' -' → logprob: -6.529325008392334
    10. ',k' → logprob: -6.779325008392334

Token 207: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04552196338772774
    2. 'k' → logprob: -3.2955219745635986
    3. 'n' → logprob: -4.9205217361450195
    4. ' n' → logprob: -9.79552173614502
    5. ' k' → logprob: -9.92052173614502
    6. ' ' → logprob: -10.67052173614502
    7. '(n' → logprob: -11.67052173614502
    8. 's' → logprob: -11.79552173614502
    9. '(' → logprob: -12.17052173614502
    10. '(k' → logprob: -13.29552173614502

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07460247725248337
    2. ',n' → logprob: -3.0746023654937744
    3. ' ,' → logprob: -4.3246026039123535
    4. 'n' → logprob: -4.5746026039123535
    5. ' n' → logprob: -7.0746026039123535
    6. ')' → logprob: -7.4496026039123535
    7. 's' → logprob: -8.949602127075195
    8. ',
' → logprob: -9.074602127075195
    9. '),' → logprob: -9.449602127075195
    10. ',k' → logprob: -9.574602127075195

Token 209: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040915776044130325
    2. ' n' → logprob: -5.504091739654541
    3. '1' → logprob: -11.629091262817383
    4. '   ' → logprob: -13.379091262817383
    5. 's' → logprob: -14.004091262817383
    6. ' ' → logprob: -14.379091262817383
    7. '	n' → logprob: -14.504091262817383
    8. 'k' → logprob: -15.754091262817383
    9. '(n' → logprob: -15.754091262817383
    10. ')n' → logprob: -15.879091262817383

Token 210: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07653874903917313
    2. '-k' → logprob: -2.9515388011932373
    3. '-' → logprob: -4.451538562774658
    4. ' -' → logprob: -4.701538562774658
    5. '-n' → logprob: -7.826538562774658
    6. ' )' → logprob: -9.701539039611816
    7. 'k' → logprob: -9.951539039611816
    8. '-)' → logprob: -9.951539039611816
    9. ')*' → logprob: -10.201539039611816
    10. ')n' → logprob: -11.326539039611816

Token 211: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00026765360962599516
    2. ' k' → logprob: -8.75026798248291
    3. '1' → logprob: -9.12526798248291
    4. 'n' → logprob: -16.750267028808594
    5. ' ' → logprob: -16.875267028808594
    6. ')' → logprob: -17.000267028808594
    7. '10' → logprob: -17.125267028808594
    8. '(' → logprob: -17.750267028808594
    9. '	k' → logprob: -18.625267028808594
    10. '0' → logprob: -18.875267028808594

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.147740689106286e-05
    2. ')*' → logprob: -10.50007152557373
    3. '   ' → logprob: -11.00007152557373
    4. ' )' → logprob: -11.25007152557373
    5. ')
' → logprob: -11.62507152557373
    6. '       ' → logprob: -13.12507152557373
    7. ')

' → logprob: -14.50007152557373
    8. ')`' → logprob: -14.62507152557373
    9. ')...' → logprob: -15.25007152557373
    10. ')c' → logprob: -15.25007152557373

Token 213: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0020774556323885918
    2. 'c' → logprob: -6.252077579498291
    3. ' comb' → logprob: -9.377077102661133
    4. 'com' → logprob: -10.127077102661133
    5. 'combo' → logprob: -11.752077102661133
    6. '   ' → logprob: -12.002077102661133
    7. '(' → logprob: -13.502077102661133
    8. '(com' → logprob: -13.752077102661133
    9. '  ' → logprob: -14.002077102661133
    10. 'Comb' → logprob: -14.252077102661133

Token 215: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0014610696816816926
    2. '(' → logprob: -6.751461029052734
    3. '(n' → logprob: -8.251461029052734
    4. 's' → logprob: -10.751461029052734
    5. '(
' → logprob: -12.126461029052734
    6. '((' → logprob: -13.126461029052734
    7. ' (' → logprob: -15.001461029052734
    8. '(S' → logprob: -15.501461029052734
    9. ')' → logprob: -15.876461029052734
    10. 'n' → logprob: -16.626461029052734

Token 216: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07000945508480072
    2. '-' → logprob: -2.695009469985962
    3. ' ' → logprob: -10.195009231567383
    4. '<|end|>' → logprob: -11.570009231567383
    5. ',' → logprob: -11.695009231567383
    6. ')' → logprob: -11.945009231567383
    7. '<|end|>' → logprob: -12.195009231567383
    8. '   ' → logprob: -14.070009231567383
    9. ' ' → logprob: -14.195009231567383
    10. 's' → logprob: -14.320009231567383

Token 217: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.68022444692906e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.375046730041504
    4. '
' → logprob: -14.625046730041504
    5. 'k' → logprob: -16.50004768371582
    6. '1' → logprob: -16.62504768371582
    7. '  ' → logprob: -17.00004768371582
    8. '(' → logprob: -17.50004768371582
    9. '```' → logprob: -17.50004768371582
    10. '

' → logprob: -17.75004768371582

Token 218: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. 'k' → logprob: -14.875000953674316
    4. '```' → logprob: -16.875001907348633
    5. '
' → logprob: -17.250001907348633
    6. '1' → logprob: -17.875001907348633
    7. '۱۰' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.875001907348633
    9. ')' → logprob: -18.875001907348633
    10. '

' → logprob: -20.125001907348633

Token 219: '*k' (ID: 81061)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5402012467384338
    2. '*k' → logprob: -1.040201187133789
    3. '*' → logprob: -2.790201187133789
    4. 'k' → logprob: -6.165201187133789
    5. ' k' → logprob: -8.040201187133789
    6. ' ' → logprob: -9.665201187133789
    7. ',' → logprob: -10.790201187133789
    8. ' ' → logprob: -11.040201187133789
    9. '    ' → logprob: -11.790201187133789
    10. ')' → logprob: -11.915201187133789

Token 220: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1106266975402832
    2. ' +' → logprob: -1.1106266975402832
    3. '+n' → logprob: -1.2356266975402832
    4. ',' → logprob: -3.110626697540283
    5. ',n' → logprob: -5.735626697540283
    6. 'n' → logprob: -6.360626697540283
    7. '-' → logprob: -8.610626220703125
    8. ' ,' → logprob: -8.610626220703125
    9. ')' → logprob: -8.735626220703125
    10. '```' → logprob: -8.860626220703125

Token 221: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.107425062713446e-06
    2. ' n' → logprob: -11.875006675720215
    3. '(n' → logprob: -17.12500762939453
    4. '
' → logprob: -17.25000762939453
    5. '	n' → logprob: -17.75000762939453
    6. '[n' → logprob: -18.00000762939453
    7. '_n' → logprob: -18.62500762939453
    8. '```' → logprob: -19.75000762939453
    9. '<|end|>' → logprob: -19.87500762939453
    10. ')n' → logprob: -20.25000762939453

Token 222: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22543279826641083
    2. ' -' → logprob: -1.6004327535629272
    3. ' ' → logprob: -11.475432395935059
    4. '
' → logprob: -12.600432395935059
    5. '   ' → logprob: -12.975432395935059
    6. ')' → logprob: -13.850432395935059
    7. '```' → logprob: -14.600432395935059
    8. '`' → logprob: -15.100432395935059
    9. ''-' → logprob: -15.350432395935059
    10. '  ' → logprob: -15.350432395935059

Token 223: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01793861947953701
    2. '1' → logprob: -4.142938613891602
    3. ' -' → logprob: -6.267938613891602
    4. ' ' → logprob: -13.017938613891602
    5. '
' → logprob: -14.142938613891602
    6. '−' → logprob: -14.142938613891602
    7. '   ' → logprob: -14.267938613891602
    8. '```' → logprob: -14.267938613891602
    9. ''-' → logprob: -15.267938613891602
    10. '  ' → logprob: -16.1429386138916

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011159272398799658
    2. ',n' → logprob: -6.876115798950195
    3. ' ,' → logprob: -9.626115798950195
    4. ')' → logprob: -11.376115798950195
    5. '),' → logprob: -13.001115798950195
    6. '   ' → logprob: -13.876115798950195
    7. ',
' → logprob: -14.126115798950195
    8. ',k' → logprob: -14.751115798950195
    9. '```' → logprob: -15.251115798950195
    10. ',s' → logprob: -15.376115798950195

Token 225: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519300878047943
    2. ' n' → logprob: -1.5019301176071167
    3. '   ' → logprob: -14.626930236816406
    4. '	n' → logprob: -14.751930236816406
    5. '(n' → logprob: -16.126930236816406
    6. '    ' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.376930236816406
    8. '```' → logprob: -17.751930236816406
    9. '  ' → logprob: -17.876930236816406
    10. ')n' → logprob: -17.876930236816406

Token 226: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014216629788279533
    2. ' -' → logprob: -4.264216423034668
    3. '   ' → logprob: -9.889216423034668
    4. ')' → logprob: -14.389216423034668
    5. '       ' → logprob: -14.639216423034668
    6. ' ' → logprob: -14.889216423034668
    7. '```' → logprob: -15.139216423034668
    8. '  ' → logprob: -15.514216423034668
    9. '-
' → logprob: -15.889216423034668
    10. '    ' → logprob: -16.639217376708984

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.875
    4. '   ' → logprob: -17.5
    5. '۱' → logprob: -19.0
    6. '１' → logprob: -19.25
    7. '<|end|>' → logprob: -19.8125
    8. ')' → logprob: -19.875
    9. '﻿' → logprob: -20.4375
    10. '१' → logprob: -20.625

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008415495976805687
    2. ')
' → logprob: -7.1258416175842285
    3. '   ' → logprob: -10.37584114074707
    4. '       ' → logprob: -13.12584114074707
    5. ' )' → logprob: -13.50084114074707
    6. '))' → logprob: -13.87584114074707
    7. ')return' → logprob: -14.87584114074707
    8. ')

' → logprob: -15.12584114074707
    9. ')\' → logprob: -15.62584114074707
    10. ')
' → logprob: -16.00084114074707

Token 229: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5337165594100952
    2. '
' → logprob: -1.2837165594100952
    3. '   ' → logprob: -2.1587166786193848
    4. '    
' → logprob: -4.908716678619385
    5. '  
' → logprob: -5.658716678619385
    6. 'return' → logprob: -6.033716678619385
    7. ' return' → logprob: -6.533716678619385
    8. '<|end|>' → logprob: -6.658716678619385
    9. ' 
' → logprob: -6.908716678619385
    10. '\' → logprob: -7.283716678619385

Token 230: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5323749780654907
    2. 's' → logprob: -1.0323749780654907
    3. 'n' → logprob: -3.907374858856201
    4. ' n' → logprob: -4.157374858856201
    5. 'k' → logprob: -4.907374858856201
    6. '(s' → logprob: -5.407374858856201
    7. ' k' → logprob: -5.907374858856201
    8. 'True' → logprob: -6.282374858856201
    9. '(n' → logprob: -6.907374858856201
    10. ' True' → logprob: -6.907374858856201

Token 231: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029747597873210907
    2. '-' → logprob: -3.904747486114502
    3. ' >=' → logprob: -4.779747486114502
    4. '>=' → logprob: -7.654747486114502
    5. ' ' → logprob: -9.40474796295166
    6. ' >' → logprob: -9.77974796295166
    7. ' <=' → logprob: -10.27974796295166
    8. ' <' → logprob: -10.40474796295166
    9. '>' → logprob: -10.77974796295166
    10. '   ' → logprob: -11.40474796295166

Token 232: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008051026379689574
    2. ' ' → logprob: -7.125804901123047
    3. '```' → logprob: -15.375804901123047
    4. '<|end|>' → logprob: -15.875804901123047
    5. '   ' → logprob: -16.375804901123047
    6. '0' → logprob: -17.000804901123047
    7. 'k' → logprob: -17.000804901123047
    8. '[' → logprob: -17.375804901123047
    9. '(' → logprob: -17.625804901123047
    10. '۱۰' → logprob: -17.625804901123047

Token 233: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '```' → logprob: -15.500007629394531
    4. '   ' → logprob: -17.12500762939453
    5. '
' → logprob: -17.12500762939453
    6. '0' → logprob: -17.50000762939453
    7. '۱۰' → logprob: -18.25000762939453
    8. '(' → logprob: -18.37500762939453
    9. '1' → logprob: -18.62500762939453
    10. '<|end|>' → logprob: -18.93750762939453

Token 234: '*k' (ID: 81061)
  Prédit: '*k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.29494479298591614
    2. ' *' → logprob: -1.4199447631835938
    3. '*' → logprob: -4.294944763183594
    4. ' ' → logprob: -10.794944763183594
    5. ' >=' → logprob: -11.919944763183594
    6. ' ' → logprob: -12.169944763183594
    7. '*K' → logprob: -12.169944763183594
    8. '```' → logprob: -12.669944763183594
    9. 'k' → logprob: -12.794944763183594
    10. '>=' → logprob: -12.919944763183594

Token 235: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.11285765469074249
    2. ' >=' → logprob: -2.2378575801849365
    3. ' ' → logprob: -11.112857818603516
    4. '   ' → logprob: -11.862857818603516
    5. '>' → logprob: -12.737857818603516
    6. ')>=' → logprob: -12.862857818603516
    7. '+' → logprob: -13.112857818603516
    8. ']>=' → logprob: -13.362857818603516
    9. '<=' → logprob: -14.112857818603516
    10. '  ' → logprob: -14.237857818603516

Token 236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.000045776367188
    3. 'n' → logprob: -14.750045776367188
    4. '(n' → logprob: -15.125045776367188
    5. ' n' → logprob: -17.250045776367188
    6. '   ' → logprob: -18.875045776367188
    7. 'k' → logprob: -19.125045776367188
    8. '
' → logprob: -19.250045776367188
    9. '[n' → logprob: -19.375045776367188
    10. '```' → logprob: -19.625045776367188

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'n' → logprob: -14.75001049041748
    4. '(n' → logprob: -15.75001049041748
    5. ' n' → logprob: -18.375011444091797
    6. '   ' → logprob: -19.500011444091797
    7. 'k' → logprob: -19.500011444091797
    8. '```' → logprob: -19.500011444091797
    9. '۰' → logprob: -19.500011444091797
    10. '(' → logprob: -19.750011444091797

Token 238: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.11460104584693909
    2. 'else' → logprob: -2.6146011352539062
    3. ':' → logprob: -4.364601135253906
    4. '       ' → logprob: -4.614601135253906
    5. '   ' → logprob: -5.864601135253906
    6. '+' → logprob: -6.114601135253906
    7. '<|end|>' → logprob: -6.239601135253906
    8. ':
' → logprob: -6.739601135253906
    9. ')' → logprob: -6.864601135253906
    10. ' :' → logprob: -7.239601135253906

Token 239: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929274018853903
    2. ' ' → logprob: -5.130929470062256
    3. '       ' → logprob: -15.630928993225098
    4. '   ' → logprob: -16.005929946899414
    5. '           ' → logprob: -16.130929946899414
    6. ' ' → logprob: -16.630929946899414
    7. '        ' → logprob: -18.380929946899414
    8. '  ' → logprob: -18.505929946899414
    9. '               ' → logprob: -19.255929946899414
    10. '	' → logprob: -19.505929946899414

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.37502098083496
    4. '           ' → logprob: -19.87502098083496
    5. '       ' → logprob: -20.00002098083496
    6. '
' → logprob: -21.25002098083496
    7. '  ' → logprob: -21.25002098083496
    8. '۰' → logprob: -21.25002098083496
    9. '```' → logprob: -21.87502098083496
    10. ' ' → logprob: -21.87502098083496

Token 241: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.443072646856308
    2. '
' → logprob: -1.1930726766586304
    3. '   ' → logprob: -3.568072557449341
    4. '<|end|>' → logprob: -3.943072557449341
    5. '    
' → logprob: -6.56807279586792
    6. ')' → logprob: -7.31807279586792
    7. 'newline' → logprob: -7.31807279586792
    8. '  
' → logprob: -7.44307279586792
    9. '```' → logprob: -7.56807279586792
    10. ':return' → logprob: -7.94307279586792

Token 242: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1737085580825806
    2. '\n' → logprob: -1.2987085580825806
    3. '<|end|>' → logprob: -1.5487085580825806
    4. ')' → logprob: -2.673708438873291
    5. ':' → logprob: -3.423708438873291
    6. '   ' → logprob: -3.423708438873291
    7. '```' → logprob: -4.048708438873291
    8. 'return' → logprob: -4.423708438873291
    9. '\' → logprob: -4.548708438873291
    10. ':return' → logprob: -4.673708438873291

Token 243: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003951236605644226
    2. 'return' → logprob: -6.378951072692871
    3. '\n' → logprob: -7.503951072692871
    4. ' return' → logprob: -7.628951072692871
    5. '    
' → logprob: -7.878951072692871
    6. '
' → logprob: -8.878951072692871
    7. ' ' → logprob: -9.003951072692871
    8. ':return' → logprob: -9.253951072692871
    9. '	return' → logprob: -9.378951072692871
    10. '       ' → logprob: -9.503951072692871

Token 244: ' But' (ID: 3072)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024746155366301537
    2. '   ' → logprob: -4.024745941162109
    3. ' return' → logprob: -5.024745941162109
    4. '	return' → logprob: -14.77474594116211
    5. ' ' → logprob: -15.14974594116211
    6. '  ' → logprob: -15.52474594116211
    7. '```' → logprob: -16.14974594116211
    8. ':return' → logprob: -16.52474594116211
    9. 'eturn' → logprob: -17.27474594116211
    10. '    
' → logprob: -17.89974594116211

Token 245: ' above' (ID: 5151)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16947032511234283
    2. 'return' → logprob: -1.9194703102111816
    3. '   ' → logprob: -4.794470310211182
    4. ' ' → logprob: -8.04447078704834
    5. 'n' → logprob: -8.66947078704834
    6. ' n' → logprob: -9.41947078704834
    7. ' the' → logprob: -9.54447078704834
    8. 'def' → logprob: -9.54447078704834
    9. '  ' → logprob: -10.16947078704834
    10. '    ' → logprob: -10.66947078704834

Token 246: ' is' (ID: 382)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4288279116153717
    2. ' return' → logprob: -1.9288278818130493
    3. '   ' → logprob: -2.303828001022339
    4. '
' → logprob: -2.553828001022339
    5. '    
' → logprob: -4.80382776260376
    6. '<|end|>' → logprob: -5.05382776260376
    7. ':return' → logprob: -5.67882776260376
    8. '\n' → logprob: -6.80382776260376
    9. '<|end|>' → logprob: -6.80382776260376
    10. ' ' → logprob: -6.92882776260376

Token 247: ' complicated' (ID: 25334)
  Prédit: 'incorrect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'incorrect' → logprob: -0.1396464705467224
    2. 'in' → logprob: -2.764646530151367
    3. 'not' → logprob: -3.764646530151367
    4. ' incorrect' → logprob: -4.014646530151367
    5. 'wrong' → logprob: -4.014646530151367
    6. 'correct' → logprob: -6.014646530151367
    7. ' not' → logprob: -6.639646530151367
    8. ' incomplete' → logprob: -6.889646530151367
    9. 'unfinished' → logprob: -7.264646530151367
    10. 'probably' → logprob: -8.264646530151367

Token 248: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12372837960720062
    2. '<|end|>' → logprob: -3.2487282752990723
    3. 'return' → logprob: -4.123728275299072
    4. '    
' → logprob: -4.248728275299072
    5. ' return' → logprob: -4.373728275299072
    6. ':' → logprob: -5.123728275299072
    7. ':return' → logprob: -5.123728275299072
    8. ')' → logprob: -5.373728275299072
    9. ' ' → logprob: -5.623728275299072
    10. ',' → logprob: -6.248728275299072

Token 249: ' the' (ID: 290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40284037590026855
    2. '   ' → logprob: -1.1528403759002686
    3. ' return' → logprob: -4.152840614318848
    4. '#' → logprob: -9.652840614318848
    5. '  ' → logprob: -11.027840614318848
    6. '```' → logprob: -11.527840614318848
    7. ' ' → logprob: -11.777840614318848
    8. '	return' → logprob: -12.152840614318848
    9. '    
' → logprob: -12.402840614318848
    10. '
' → logprob: -12.652840614318848

Token 250: ' problem' (ID: 4792)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39999309182167053
    2. ' return' → logprob: -2.1499931812286377
    3. '#' → logprob: -2.3999931812286377
    4. '   ' → logprob: -3.8999931812286377
    5. 'def' → logprob: -3.8999931812286377
    6. ' correct' → logprob: -4.399992942810059
    7. ' rest' → logprob: -4.524992942810059
    8. 'correct' → logprob: -4.649992942810059
    9. ' code' → logprob: -4.774992942810059
    10. 'result' → logprob: -5.149992942810059

Token 251: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.820244550704956
    2. '<|end|>' → logprob: -1.570244550704956
    3. ' ends' → logprob: -2.320244550704956
    4. '.' → logprob: -2.570244550704956
    5. '<|end|>' → logprob: -3.070244550704956
    6. 'is' → logprob: -3.820244550704956
    7. ')' → logprob: -4.320244789123535
    8. ':' → logprob: -4.695244789123535
    9. '#' → logprob: -4.820244789123535
    10. ',' → logprob: -4.820244789123535

Token 252: ' classic' (ID: 13686)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.8741533756256104
    2. ' that' → logprob: -1.1241533756256104
    3. 'to' → logprob: -2.6241533756256104
    4. ' to' → logprob: -3.3741533756256104
    5. ' incomplete' → logprob: -3.6241533756256104
    6. 'sol' → logprob: -4.124153137207031
    7. 'simpl' → logprob: -4.249153137207031
    8. ' solved' → logprob: -4.624153137207031
    9. 'in' → logprob: -4.999153137207031
    10. 'count' → logprob: -4.999153137207031

Token 253: ' combination' (ID: 14083)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014859511516988277
    2. 'return' → logprob: -4.764859676361084
    3. ' return' → logprob: -5.264859676361084
    4. '
' → logprob: -7.639859676361084
    5. '    
' → logprob: -9.139859199523926
    6. ':return' → logprob: -9.139859199523926
    7. ',' → logprob: -9.514859199523926
    8. '<|end|>' → logprob: -9.639859199523926
    9. '	return' → logprob: -10.389859199523926
    10. ' ' → logprob: -10.514859199523926

Token 254: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37935081124305725
    2. '<|end|>' → logprob: -1.3793507814407349
    3. '\n' → logprob: -3.8793509006500244
    4. '<|end|>' → logprob: -4.629350662231445
    5. ' return' → logprob: -4.879350662231445
    6. ':' → logprob: -5.379350662231445
    7. 'return' → logprob: -5.629350662231445
    8. '```' → logprob: -5.629350662231445
    9. '
' → logprob: -6.004350662231445
    10. '    
' → logprob: -6.254350662231445

Token 255: 'subset' (ID: 163297)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.600482165813446
    2. ' with' → logprob: -0.850482165813446
    3. ' sum' → logprob: -4.475481986999512
    4. ' of' → logprob: -5.475481986999512
    5. 'sum' → logprob: -6.100481986999512
    6. ' without' → logprob: -6.600481986999512
    7. 's' → logprob: -6.975481986999512
    8. 'of' → logprob: -6.975481986999512
    9. 'without' → logprob: -7.225481986999512
    10. ' counting' → logprob: -7.475481986999512

Token 256: ' of' (ID: 328)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.07920767366886139
    2. '_sum' → logprob: -2.9542076587677
    3. 'sum' → logprob: -4.704207897186279
    4. ' of' → logprob: -4.829207897186279
    5. 's' → logprob: -5.329207897186279
    6. ' with' → logprob: -7.079207897186279
    7. ' sums' → logprob: -8.079207420349121
    8. '<|end|>' → logprob: -8.079207420349121
    9. ' selection' → logprob: -8.579207420349121
    10. ' without' → logprob: -9.579207420349121

Token 257: ' digits' (ID: 37806)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.465882807970047
    2. 'digits' → logprob: -1.2158827781677246
    3. 'numbers' → logprob: -4.090882778167725
    4. 'range' → logprob: -4.090882778167725
    5. '[' → logprob: -4.215882778167725
    6. ' digits' → logprob: -4.340882778167725
    7. ' {' → logprob: -4.965882778167725
    8. 'n' → logprob: -5.840882778167725
    9. ' range' → logprob: -6.340882778167725
    10. '10' → logprob: -6.965882778167725

Token 258: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9550549387931824
    2. '<|end|>' → logprob: -1.5800549983978271
    3. ')' → logprob: -1.8300549983978271
    4. '"' → logprob: -2.580054998397827
    5. ' with' → logprob: -3.205054998397827
    6. ',' → logprob: -3.580054998397827
    7. '}' → logprob: -4.455054759979248
    8. '_' → logprob: -4.580054759979248
    9. 'with' → logprob: -4.830054759979248
    10. '(s' → logprob: -4.955054759979248

Token 259: ' summ' (ID: 16552)
  Prédit: ' chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chosen' → logprob: -1.7977114915847778
    2. ')' → logprob: -2.1727113723754883
    3. ' from' → logprob: -2.2977113723754883
    4. ' selected' → logprob: -2.4227113723754883
    5. '"' → logprob: -2.5477113723754883
    6. 's' → logprob: -2.7977113723754883
    7. ' with' → logprob: -3.0477113723754883
    8. ' in' → logprob: -3.2977113723754883
    9. ' choose' → logprob: -3.6727113723754883
    10. 'from' → logprob: -3.6727113723754883

Token 260: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.1517159342765808
    2. 'ation' → logprob: -2.0267159938812256
    3. 'ations' → logprob: -5.1517157554626465
    4. 'ed' → logprob: -5.7767157554626465
    5. 'ating' → logprob: -9.776716232299805
    6. 'ary' → logprob: -10.401716232299805
    7. 'ate' → logprob: -12.276716232299805
    8. '   ' → logprob: -12.276716232299805
    9. 'ated' → logprob: -13.151716232299805
    10. 'able' → logprob: -13.401716232299805

Token 261: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03678211569786072
    2. 'to' → logprob: -3.4117820262908936
    3. ' up' → logprob: -5.786782264709473
    4. 'up' → logprob: -10.036782264709473
    5. ' ' → logprob: -12.036782264709473
    6. '_to' → logprob: -12.161782264709473
    7. '_' → logprob: -12.786782264709473
    8. '0' → logprob: -13.661782264709473
    9. '1' → logprob: -13.661782264709473
    10. '<|end|>' → logprob: -14.661782264709473

Token 262: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06218435615301132
    2. ' s' → logprob: -2.8121843338012695
    3. 'k' → logprob: -10.06218433380127
    4. 'S' → logprob: -10.18718433380127
    5. 'sum' → logprob: -10.31218433380127
    6. 'm' → logprob: -10.68718433380127
    7. 'target' → logprob: -10.68718433380127
    8. ' ' → logprob: -11.06218433380127
    9. '```' → logprob: -12.56218433380127
    10. 'd' → logprob: -12.81218433380127

Token 263: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6899742484092712
    2. '<|end|>' → logprob: -1.314974308013916
    3. ')' → logprob: -1.689974308013916
    4. '\n' → logprob: -4.189974308013916
    5. '<|end|>' → logprob: -5.064974308013916
    6. 'return' → logprob: -5.314974308013916
    7. '```' → logprob: -5.564974308013916
    8. ':' → logprob: -5.689974308013916
    9. ' return' → logprob: -5.814974308013916
    10. ' ' → logprob: -6.314974308013916

Token 264: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038830842822790146
    2. '<|end|>' → logprob: -4.788830757141113
    3. ' return' → logprob: -5.038830757141113
    4. '\n' → logprob: -5.288830757141113
    5. ' 
' → logprob: -5.663830757141113
    6. 'return' → logprob: -5.788830757141113
    7. ' ' → logprob: -5.788830757141113
    8. '    
' → logprob: -6.163830757141113
    9. '
' → logprob: -6.413830757141113
    10. ':return' → logprob: -6.538830757141113

Token 266: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01793721131980419
    2. 'return' → logprob: -4.142937183380127
    3. ' return' → logprob: -6.267937183380127
    4. '	return' → logprob: -14.017937660217285
    5. '    
' → logprob: -14.392937660217285
    6. '  ' → logprob: -14.392937660217285
    7. '```' → logprob: -14.392937660217285
    8. 'import' → logprob: -14.642937660217285
    9. 'def' → logprob: -14.642937660217285
    10. '
' → logprob: -15.017937660217285

Token 267: ' best' (ID: 1636)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.64634108543396
    2. ' return' → logprob: -0.77134108543396
    3. '   ' → logprob: -5.396341323852539
    4. 'def' → logprob: -5.896341323852539
    5. ' rest' → logprob: -6.271341323852539
    6. ' code' → logprob: -7.021341323852539
    7. ' for' → logprob: -7.271341323852539
    8. '#' → logprob: -7.521341323852539
    9. 'for' → logprob: -7.646341323852539
    10. ' result' → logprob: -8.021341323852539

Token 268: ' optimized' (ID: 50239)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.155418261885643
    2. 'appro' → logprob: -2.2804181575775146
    3. ' approach' → logprob: -3.5304181575775146
    4. ' return' → logprob: -5.155418395996094
    5. ' way' → logprob: -5.905418395996094
    6. 'next' → logprob: -6.280418395996094
    7. 'way' → logprob: -6.905418395996094
    8. ' next' → logprob: -8.655418395996094
    9. 'ex' → logprob: -8.905418395996094
    10. 'def' → logprob: -9.155418395996094

Token 269: ' solution' (ID: 7578)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -1.0039340257644653
    2. 'return' → logprob: -1.2539340257644653
    3. ' way' → logprob: -1.6289340257644653
    4. ' return' → logprob: -2.503933906555176
    5. 'appro' → logprob: -3.378933906555176
    6. ' code' → logprob: -4.378933906555176
    7. 'def' → logprob: -5.253933906555176
    8. ' method' → logprob: -5.753933906555176
    9. ' solution' → logprob: -6.378933906555176
    10. ' version' → logprob: -6.378933906555176

Token 270: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07590769976377487
    2. ':' → logprob: -3.2009077072143555
    3. ' is' → logprob: -3.7009077072143555
    4. 'def' → logprob: -6.5759077072143555
    5. ' return' → logprob: -6.7009077072143555
    6. '    
' → logprob: -7.2009077072143555
    7. ',' → logprob: -7.3259077072143555
    8. 'import' → logprob: -7.3259077072143555
    9. ' would' → logprob: -7.3259077072143555
    10. 'return' → logprob: -7.8259077072143555

Token 271: ' bit' (ID: 3546)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.028127331286668777
    2. 'comb' → logprob: -3.778127431869507
    3. ' lambda' → logprob: -6.528127193450928
    4. '   ' → logprob: -6.903127193450928
    5. ' def' → logprob: -7.153127193450928
    6. 'def' → logprob: -7.153127193450928
    7. ' return' → logprob: -8.403127670288086
    8. ' sum' → logprob: -8.778127670288086
    9. 'return' → logprob: -8.903127670288086
    10. '0' → logprob: -9.028127670288086

Token 272: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.12888169288635254
    2. 'shift' → logprob: -3.0038816928863525
    3. 'set' → logprob: -3.2538816928863525
    4. 'm' → logprob: -5.003881454467773
    5. 'array' → logprob: -5.128881454467773
    6. 'man' → logprob: -5.378881454467773
    7. '   ' → logprob: -5.878881454467773
    8. 'vector' → logprob: -5.878881454467773
    9. 'count' → logprob: -6.253881454467773
    10. 'wise' → logprob: -6.253881454467773

Token 273: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006105474196374416
    2. '
' → logprob: -5.631105422973633
    3. '<|end|>' → logprob: -6.381105422973633
    4. 'return' → logprob: -8.006105422973633
    5. ' return' → logprob: -8.506105422973633
    6. '    
' → logprob: -8.756105422973633
    7. '<|end|>' → logprob: -10.506105422973633
    8. '\n' → logprob: -11.006105422973633
    9. '	return' → logprob: -11.131105422973633
    10. ')' → logprob: -11.756105422973633

Token 274: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2373885065317154
    2. '<|end|>' → logprob: -1.8623884916305542
    3. '
' → logprob: -4.362388610839844
    4. ' ' → logprob: -4.737388610839844
    5. ':' → logprob: -4.862388610839844
    6. 'return' → logprob: -5.112388610839844
    7. ' return' → logprob: -5.237388610839844
    8. '\n' → logprob: -5.362388610839844
    9. ')' → logprob: -5.737388610839844
    10. '```' → logprob: -6.487388610839844

Token 275: ' prec' (ID: 5074)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -1.2257616519927979
    2. 'memo' → logprob: -1.7257616519927979
    3. ' recursion' → logprob: -1.9757616519927979
    4. 'com' → logprob: -2.600761651992798
    5. 'recursive' → logprob: -2.975761651992798
    6. ' recursive' → logprob: -3.100761651992798
    7. ' math' → logprob: -3.350761651992798
    8. ' mathematical' → logprob: -3.600761651992798
    9. ' simple' → logprob: -3.850761651992798
    10. ' combin' → logprob: -3.850761651992798

Token 276: 'alc' (ID: 27187)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.00250918953679502
    2. 'alc' → logprob: -6.502509117126465
    3. 'om' → logprob: -7.127509117126465
    4. 'alculate' → logprob: -8.877509117126465
    5. 'ounted' → logprob: -10.627509117126465
    6. 'aching' → logprob: -10.752509117126465
    7. 'ount' → logprob: -12.002509117126465
    8. 'alu' → logprob: -13.252509117126465
    9. 'computed' → logprob: -13.627509117126465
    10. 'ached' → logprob: -13.752509117126465

Token 277: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003034074034076184
    2. 'return' → logprob: -8.500303268432617
    3. '
' → logprob: -10.375303268432617
    4. '    
' → logprob: -10.625303268432617
    5. ' return' → logprob: -10.750303268432617
    6. '<|end|>' → logprob: -10.875303268432617
    7. '	return' → logprob: -12.875303268432617
    8. '<|end|>' → logprob: -15.375303268432617
    9. '       ' → logprob: -15.750303268432617
    10. '  ' → logprob: -15.750303268432617

Token 278: ' DP' (ID: 51992)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -1.1456323862075806
    2. 'memo' → logprob: -1.1456323862075806
    3. ' comb' → logprob: -2.395632266998291
    4. 'comb' → logprob: -3.020632266998291
    5. ' math' → logprob: -3.645632266998291
    6. 'com' → logprob: -3.645632266998291
    7. ' combinations' → logprob: -3.770632266998291
    8. ' combin' → logprob: -3.895632266998291
    9. ' dynamic' → logprob: -4.020632266998291
    10. ' inclusion' → logprob: -4.270632266998291

Token 279: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033687774557620287
    2. '<|end|>' → logprob: -5.753368854522705
    3. 'return' → logprob: -9.253368377685547
    4. '```' → logprob: -10.253368377685547
    5. ' return' → logprob: -10.378368377685547
    6. '<|end|>' → logprob: -11.878368377685547
    7. '    
' → logprob: -12.378368377685547
    8. ')' → logprob: -12.503368377685547
    9. '	return' → logprob: -12.628368377685547
    10. '
' → logprob: -13.128368377685547

Token 281: ' main' (ID: 2758)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5791000723838806
    2. 'count' → logprob: -0.8291000723838806
    3. ' main' → logprob: -6.454100131988525
    4. '_count' → logprob: -7.079100131988525
    5. 'main' → logprob: -7.704100131988525
    6. 'n' → logprob: -9.579099655151367
    7. ' ' → logprob: -9.829099655151367
    8. '_' → logprob: -9.829099655151367
    9. '__' → logprob: -10.954099655151367
    10. ' sum' → logprob: -11.454099655151367

Token 282: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005224120686762035
    2. '():
' → logprob: -7.625522613525391
    3. '()' → logprob: -10.87552261352539
    4. ' ():' → logprob: -11.50052261352539
    5. '(' → logprob: -12.87552261352539
    6. ':' → logprob: -13.25052261352539
    7. '():
' → logprob: -14.12552261352539
    8. '():

' → logprob: -16.50052261352539
    9. '()>' → logprob: -16.62552261352539
    10. 'def' → logprob: -17.25052261352539

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001818489981815219
    2. 'n' → logprob: -9.625182151794434
    3. 'def' → logprob: -10.375182151794434
    4. '    ' → logprob: -10.750182151794434
    5. 'import' → logprob: -10.875182151794434
    6. ' for' → logprob: -11.375182151794434
    7. ' n' → logprob: -11.625182151794434
    8. ' import' → logprob: -12.250182151794434
    9. '    
' → logprob: -12.250182151794434
    10. '```' → logprob: -12.500182151794434

Token 284: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.514085590839386
    2. 'n' → logprob: -1.6390855312347412
    3. ' n' → logprob: -1.6390855312347412
    4. 'import' → logprob: -5.63908576965332
    5. ' pass' → logprob: -5.88908576965332
    6. ' for' → logprob: -6.01408576965332
    7. 'for' → logprob: -6.63908576965332
    8. 'print' → logprob: -6.76408576965332
    9. 'pass' → logprob: -7.13908576965332
    10. ' import' → logprob: -7.26408576965332

Token 285: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1129089891910553
    2. '_data' → logprob: -2.4879090785980225
    3. '_line' → logprob: -3.9879090785980225
    4. '_' → logprob: -5.862908840179443
    5. '_str' → logprob: -6.987908840179443
    6. '_text' → logprob: -7.987908840179443
    7. '_lines' → logprob: -8.362909317016602
    8. 'data' → logprob: -8.737909317016602
    9. ' =' → logprob: -8.987909317016602
    10. '().' → logprob: -9.362909317016602

Token 286: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1005253940820694
    2. ' sys' → logprob: -2.350525379180908
    3. 'input' → logprob: -8.100525856018066
    4. ' input' → logprob: -11.350525856018066
    5. 'lambda' → logprob: -13.350525856018066
    6. '	sys' → logprob: -14.225525856018066
    7. '(sys' → logprob: -14.475525856018066
    8. '=sys' → logprob: -14.725525856018066
    9. 'int' → logprob: -15.475525856018066
    10. 'stdin' → logprob: -16.60052490234375

Token 287: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43069520592689514
    2. '.stdin' → logprob: -1.0556951761245728
    3. '.readline' → logprob: -6.805695056915283
    4. '.stdout' → logprob: -7.180695056915283
    5. '.argv' → logprob: -10.430695533752441
    6. '.std' → logprob: -10.555695533752441
    7. 'stdin' → logprob: -10.555695533752441
    8. '.exit' → logprob: -11.930695533752441
    9. ' .' → logprob: -12.180695533752441
    10. '.input' → logprob: -12.305695533752441

Token 288: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.010423465631902218
    2. 'read' → logprob: -4.76042366027832
    3. '.stdin' → logprob: -7.13542366027832
    4. '.' → logprob: -7.88542366027832
    5. 'stdin' → logprob: -8.01042366027832
    6. '.read' → logprob: -8.76042366027832
    7. '.readlines' → logprob: -10.51042366027832
    8. '_read' → logprob: -10.63542366027832
    9. 'buffer' → logprob: -10.88542366027832
    10. 'input' → logprob: -11.01042366027832

Token 289: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6613806486129761
    2. '()
' → logprob: -1.286380648612976
    3. '   ' → logprob: -2.1613807678222656
    4. '().' → logprob: -2.5363807678222656
    5. '
' → logprob: -4.411380767822266
    6. 'def' → logprob: -7.786380767822266
    7. '    
' → logprob: -8.911380767822266
    8. '()\' → logprob: -8.911380767822266
    9. '()

' → logprob: -9.161380767822266
    10. '  
' → logprob: -9.786380767822266

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005045656580477953
    2. '    
' → logprob: -5.5050458908081055
    3. '(n' → logprob: -7.8800458908081055
    4. 'n' → logprob: -9.130045890808105
    5. 'def' → logprob: -9.255045890808105
    6. '()' → logprob: -9.380045890808105
    7. 'for' → logprob: -9.630045890808105
    8. '(' → logprob: -10.130045890808105
    9. '<|end|>' → logprob: -10.130045890808105
    10. '
' → logprob: -10.380045890808105

Token 291: ' max' (ID: 2999)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11963614821434021
    2. ' t' → logprob: -2.869636058807373
    3. '   ' → logprob: -3.119636058807373
    4. 'T' → logprob: -5.244636058807373
    5. 'n' → logprob: -5.244636058807373
    6. ' T' → logprob: -7.369636058807373
    7. ' n' → logprob: -8.119636535644531
    8. 'q' → logprob: -8.619636535644531
    9. 'for' → logprob: -9.244636535644531
    10. 'tc' → logprob: -10.369636535644531

Token 292: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.06661340594291687
    2. '_sum' → logprob: -3.1916134357452393
    3. '_num' → logprob: -5.19161319732666
    4. '_com' → logprob: -5.56661319732666
    5. '_len' → logprob: -5.69161319732666
    6. '_length' → logprob: -6.19161319732666
    7. '_digits' → logprob: -6.31661319732666
    8. '_val' → logprob: -6.69161319732666
    9. '_comb' → logprob: -6.69161319732666
    10. '_count' → logprob: -6.94161319732666

Token 293: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28152310848236084
    2. '=' → logprob: -1.4065231084823608
    3. '   ' → logprob: -8.281522750854492
    4. ',' → logprob: -9.156522750854492
    5. ' ' → logprob: -12.031522750854492
    6. '  ' → logprob: -13.156522750854492
    7. ')' → logprob: -14.156522750854492
    8. ' ,' → logprob: -14.156522750854492
    9. '    ' → logprob: -14.281522750854492
    10. 'def' → logprob: -14.406522750854492

Token 294: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6331297755241394
    2. ' max' → logprob: -0.7581297755241394
    3. 's' → logprob: -8.508130073547363
    4. ' s' → logprob: -8.633130073547363
    5. ' ' → logprob: -10.258130073547363
    6. ' =' → logprob: -10.758130073547363
    7. '_max' → logprob: -11.133130073547363
    8. ' input' → logprob: -11.633130073547363
    9. '   ' → logprob: -11.633130073547363
    10. '_' → logprob: -11.883130073547363

Token 295: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004918262362480164
    2. 's' → logprob: -5.379918098449707
    3. '_sum' → logprob: -9.254918098449707
    4. '=' → logprob: -9.629918098449707
    5. '   ' → logprob: -10.004918098449707
    6. '_n' → logprob: -10.629918098449707
    7. ' =' → logprob: -11.129918098449707
    8. 'sum' → logprob: -11.504918098449707
    9. '```' → logprob: -12.004918098449707
    10. '_value' → logprob: -12.254918098449707

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694701552391052
    2. '=' → logprob: -2.1269469261169434
    3. ' ' → logprob: -11.001947402954102
    4. '   ' → logprob: -14.001947402954102
    5. '  ' → logprob: -14.376947402954102
    6. ',' → logprob: -15.001947402954102
    7. '=input' → logprob: -16.0019474029541
    8. '=int' → logprob: -16.2519474029541
    9. ' ' → logprob: -16.3769474029541
    10. '=line' → logprob: -17.3769474029541

Token 297: ' ' (ID: 220)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.19610843062400818
    2. 'map' → logprob: -1.8211084604263306
    3. ' ' → logprob: -4.571108341217041
    4. '5' → logprob: -5.946108341217041
    5. '10' → logprob: -5.946108341217041
    6. '   ' → logprob: -8.5711088180542
    7. '2' → logprob: -9.4461088180542
    8. '  ' → logprob: -9.5711088180542
    9. '20' → logprob: -9.8211088180542
    10. '100' → logprob: -9.9461088180542

Token 298: '9' (ID: 24)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.14105916023254395
    2. '10' → logprob: -2.766059160232544
    3. ' map' → logprob: -2.891059160232544
    4. '100' → logprob: -5.391058921813965
    5. ' ' → logprob: -5.766058921813965
    6. '5' → logprob: -5.891058921813965
    7. '20' → logprob: -6.891058921813965
    8. 'list' → logprob: -7.891058921813965
    9. '9' → logprob: -8.141058921813965
    10. '50' → logprob: -8.391058921813965

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33065247535705566
    2. ' ,' → logprob: -1.3306524753570557
    3. '
' → logprob: -4.830652236938477
    4. ' =' → logprob: -6.205652236938477
    5. ' 
' → logprob: -6.205652236938477
    6. '0' → logprob: -7.080652236938477
    7. ' ' → logprob: -7.080652236938477
    8. '9' → logprob: -7.455652236938477
    9. '=' → logprob: -7.580652236938477
    10. '   ' → logprob: -8.080652236938477

Token 300: ' ' (ID: 220)
  Prédit: '81'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '81' → logprob: -0.005937328562140465
    2. ' ' → logprob: -5.880937099456787
    3. '45' → logprob: -6.005937099456787
    4. '9' → logprob: -8.380937576293945
    5. '85' → logprob: -8.755937576293945
    6. '8' → logprob: -8.880937576293945
    7. '82' → logprob: -9.755937576293945
    8. '84' → logprob: -10.630937576293945
    9. '90' → logprob: -10.880937576293945
    10. '80' → logprob: -11.005937576293945

Token 301: '100' (ID: 1353)
  Prédit: '81'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '81' → logprob: -0.001892222324386239
    2. '45' → logprob: -6.37689208984375
    3. '82' → logprob: -9.87689208984375
    4. '85' → logprob: -9.87689208984375
    5. '9' → logprob: -10.25189208984375
    6. '90' → logprob: -10.50189208984375
    7. ' ' → logprob: -11.62689208984375
    8. '810' → logprob: -12.12689208984375
    9. '84' → logprob: -12.37689208984375
    10. '80' → logprob: -13.62689208984375

Token 302: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14319336414337158
    2. '   ' → logprob: -2.393193244934082
    3. '    
' → logprob: -3.393193244934082
    4. '<|end|>' → logprob: -5.018193244934082
    5. '  
' → logprob: -6.893193244934082
    6. ' 
' → logprob: -8.768193244934082
    7. '```' → logprob: -8.893193244934082
    8. '   
' → logprob: -9.018193244934082
    9. '<|end|>' → logprob: -9.268193244934082
    10. '	
' → logprob: -9.393193244934082

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1068042740225792
    2. '<|end|>' → logprob: -3.106804370880127
    3. '
' → logprob: -3.231804370880127
    4. '    
' → logprob: -4.481804370880127
    5. '```' → logprob: -6.106804370880127
    6. '  
' → logprob: -6.356804370880127
    7. 'def' → logprob: -8.106803894042969
    8. '<|end|>' → logprob: -8.231803894042969
    9. ' 
' → logprob: -8.731803894042969
    10. ' for' → logprob: -8.981803894042969

Token 304: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03423234075307846
    2. ' dp' → logprob: -4.409232139587402
    3. 'counts' → logprob: -5.159232139587402
    4. '   ' → logprob: -5.284232139587402
    5. 'count' → logprob: -6.034232139587402
    6. 'cache' → logprob: -6.284232139587402
    7. 'print' → logprob: -6.909232139587402
    8. 'for' → logprob: -6.909232139587402
    9. ' counts' → logprob: -7.034232139587402
    10. 'return' → logprob: -7.409232139587402

Token 305: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.027712656185030937
    2. 'return' → logprob: -5.402712821960449
    3. '   ' → logprob: -5.652712821960449
    4. '#' → logprob: -5.652712821960449
    5. ' dp' → logprob: -6.027712821960449
    6. 'print' → logprob: -6.027712821960449
    7. 'for' → logprob: -6.402712821960449
    8. 'memo' → logprob: -6.402712821960449
    9. 'count' → logprob: -6.777712821960449
    10. 'cache' → logprob: -6.777712821960449

Token 306: '[n' (ID: 15433)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016130205243825912
    2. '=' → logprob: -4.141129970550537
    3. '=[' → logprob: -10.141130447387695
    4. ' ' → logprob: -11.266130447387695
    5. 'dp' → logprob: -11.266130447387695
    6. '=[]' → logprob: -12.391130447387695
    7. '   ' → logprob: -12.391130447387695
    8. '[' → logprob: -12.641130447387695
    9. '_size' → logprob: -12.641130447387695
    10. '_dp' → logprob: -12.641130447387695

Token 307: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6319147348403931
    2. ']' → logprob: -1.256914734840393
    3. '+' → logprob: -1.756914734840393
    4. ' +' → logprob: -5.1319146156311035
    5. ' =' → logprob: -6.0069146156311035
    6. 's' → logprob: -7.3819146156311035
    7. '=' → logprob: -7.5069146156311035
    8. '_s' → logprob: -7.8819146156311035
    9. ']=' → logprob: -8.256915092468262
    10. ' ][' → logprob: -8.256915092468262

Token 308: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.988221684878226e-06
    2. ' s' → logprob: -12.375006675720215
    3. 'sum' → logprob: -13.625006675720215
    4. '][' → logprob: -14.875006675720215
    5. '   ' → logprob: -15.375006675720215
    6. '_s' → logprob: -15.875006675720215
    7. ']' → logprob: -16.00000762939453
    8. 'S' → logprob: -16.12500762939453
    9. 'n' → logprob: -16.25000762939453
    10. '
' → logprob: -16.37500762939453

Token 309: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004098108503967524
    2. ']=' → logprob: -6.629097938537598
    3. ' =' → logprob: -6.754097938537598
    4. ' ]' → logprob: -7.129097938537598
    5. '=' → logprob: -7.754097938537598
    6. '][' → logprob: -8.379097938537598
    7. '   ' → logprob: -9.129097938537598
    8. 'def' → logprob: -11.129097938537598
    9. ']
' → logprob: -12.879097938537598
    10. '[' → logprob: -13.379097938537598

Token 310: ' number' (ID: 2086)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48961663246154785
    2. ' [' → logprob: -1.2396166324615479
    3. '0' → logprob: -2.614616632461548
    4. ' number' → logprob: -4.989616394042969
    5. ' ' → logprob: -5.364616394042969
    6. '   ' → logprob: -5.739616394042969
    7. ' =' → logprob: -6.114616394042969
    8. '[[' → logprob: -6.614616394042969
    9. 'dp' → logprob: -6.739616394042969
    10. 'number' → logprob: -6.864616394042969

Token 311: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.27590858936309814
    2. ' of' → logprob: -1.5259085893630981
    3. '   ' → logprob: -4.650908470153809
    4. '_of' → logprob: -5.150908470153809
    5. ' =' → logprob: -5.400908470153809
    6. '=' → logprob: -5.650908470153809
    7. '
' → logprob: -9.900908470153809
    8. ' ' → logprob: -10.025908470153809
    9. 'ofd' → logprob: -10.275908470153809
    10. 'ofs' → logprob: -10.400908470153809

Token 312: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.46238064765930176
    2. 'ways' → logprob: -1.0873806476593018
    3. 'com' → logprob: -3.5873806476593018
    4. 'digits' → logprob: -6.462380409240723
    5. 'n' → logprob: -6.837380409240723
    6. 'numbers' → logprob: -7.087380409240723
    7. 'sub' → logprob: -7.712380409240723
    8. 'se' → logprob: -8.337380409240723
    9. ' subsets' → logprob: -8.462380409240723
    10. ' combinations' → logprob: -8.587380409240723

Token 313: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40469205379486084
    2. ' to' → logprob: -1.5296920537948608
    3. ' =' → logprob: -2.6546921730041504
    4. 'to' → logprob: -4.27969217300415
    5. '=' → logprob: -4.65469217300415
    6. 'def' → logprob: -4.65469217300415
    7. '<|end|>' → logprob: -4.65469217300415
    8. ',' → logprob: -7.27969217300415
    9. ')' → logprob: -7.77969217300415
    10. ' ' → logprob: -7.90469217300415

Token 314: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.6035007238388062
    2. 'have' → logprob: -1.8535007238388062
    3. 'write' → logprob: -1.9785007238388062
    4. 'form' → logprob: -2.8535008430480957
    5. 'make' → logprob: -3.6035008430480957
    6. 'select' → logprob: -3.8535008430480957
    7. ' have' → logprob: -4.228500843048096
    8. 'get' → logprob: -4.728500843048096
    9. ' choose' → logprob: -5.228500843048096
    10. ' form' → logprob: -5.353500843048096

Token 315: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2526797354221344
    2. ' n' → logprob: -1.752679705619812
    3. 'digits' → logprob: -3.1276798248291016
    4. ' digits' → logprob: -5.502679824829102
    5. '[n' → logprob: -7.752679824829102
    6. '   ' → logprob: -8.252679824829102
    7. '(n' → logprob: -9.127679824829102
    8. 'dp' → logprob: -9.127679824829102
    9. 'from' → logprob: -9.252679824829102
    10. ']' → logprob: -9.252679824829102

Token 316: ' distinct' (ID: 16913)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.9187451004981995
    2. 'digits' → logprob: -1.1687450408935547
    3. '_digits' → logprob: -1.2937450408935547
    4. '_' → logprob: -5.668745040893555
    5. ' _' → logprob: -6.043745040893555
    6. ',' → logprob: -6.293745040893555
    7. '_d' → logprob: -6.418745040893555
    8. '_numbers' → logprob: -6.668745040893555
    9. ' =' → logprob: -7.293745040893555
    10. 'numbers' → logprob: -7.543745040893555

Token 317: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.20177806913852692
    2. ' digits' → logprob: -1.7017780542373657
    3. '_digits' → logprob: -8.701778411865234
    4. 'numbers' → logprob: -9.076778411865234
    5. ' numbers' → logprob: -10.951778411865234
    6. '```' → logprob: -10.951778411865234
    7. 'digit' → logprob: -11.326778411865234
    8. ')' → logprob: -11.451778411865234
    9. ' integers' → logprob: -12.451778411865234
    10. ']' → logprob: -12.826778411865234

Token 318: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10764865577220917
    2. '<|end|>' → logprob: -2.9826486110687256
    3. ' =' → logprob: -3.9826486110687256
    4. 'def' → logprob: -3.9826486110687256
    5. '
' → logprob: -4.982648849487305
    6. '<|end|>' → logprob: -6.232648849487305
    7. ' ' → logprob: -6.982648849487305
    8. ',' → logprob: -7.232648849487305
    9. '[' → logprob: -7.357648849487305
    10. ']' → logprob: -7.732648849487305

Token 319: '0' (ID: 15)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.276079922914505
    2. '   ' → logprob: -1.6510798931121826
    3. '=' → logprob: -3.4010798931121826
    4. ' from' → logprob: -5.651080131530762
    5. ',' → logprob: -6.151080131530762
    6. ')' → logprob: -6.151080131530762
    7. '#' → logprob: -6.526080131530762
    8. 'for' → logprob: -6.651080131530762
    9. 'with' → logprob: -6.901080131530762
    10. ']' → logprob: -7.026080131530762

Token 320: '..' (ID: 485)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.0578973293304443
    2. '..' → logprob: -1.8078973293304443
    3. 'to' → logprob: -2.3078973293304443
    4. ' to' → logprob: -2.3078973293304443
    5. '<=' → logprob: -2.8078973293304443
    6. ',' → logprob: -3.1828973293304443
    7. '   ' → logprob: -3.1828973293304443
    8. ' through' → logprob: -3.3078973293304443
    9. '...' → logprob: -3.5578973293304443
    10. '
' → logprob: -4.182897567749023

Token 321: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.001711709308438003
    2. '10' → logprob: -6.376711845397949
    3. '```' → logprob: -12.37671184539795
    4. ' ' → logprob: -13.12671184539795
    5. '
' → logprob: -14.12671184539795
    6. 'max' → logprob: -14.25171184539795
    7. 's' → logprob: -14.87671184539795
    8. '=' → logprob: -14.87671184539795
    9. '1' → logprob: -15.12671184539795
    10. '{' → logprob: -15.37671184539795

Token 322: ' sum' (ID: 4215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008403460495173931
    2. ' =' → logprob: -5.133403301239014
    3. '<|end|>' → logprob: -7.758403301239014
    4. '=' → logprob: -8.008403778076172
    5. '
' → logprob: -8.258403778076172
    6. ' ' → logprob: -8.258403778076172
    7. ',' → logprob: -8.258403778076172
    8. 'dp' → logprob: -8.508403778076172
    9. '    
' → logprob: -8.758403778076172
    10. 'def' → logprob: -9.008403778076172

Token 323: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5294759273529053
    2. '=' → logprob: -1.4044759273529053
    3. ' =' → logprob: -2.5294759273529053
    4. ']' → logprob: -3.0294759273529053
    5. ']=' → logprob: -3.9044759273529053
    6. 's' → logprob: -6.154476165771484
    7. 'of' → logprob: -6.529476165771484
    8. ' to' → logprob: -6.654476165771484
    9. ')' → logprob: -6.779476165771484
    10. '_' → logprob: -6.779476165771484

Token 324: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013133997097611427
    2. '
' → logprob: -4.513134002685547
    3. '<|end|>' → logprob: -7.388134002685547
    4. '    
' → logprob: -7.638134002685547
    5. 'def' → logprob: -7.638134002685547
    6. ' =' → logprob: -8.763134002685547
    7. '```' → logprob: -9.888134002685547
    8. ' ' → logprob: -9.888134002685547
    9. '<|end|>' → logprob: -10.263134002685547
    10. '#' → logprob: -10.888134002685547

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038498362991958857
    2. '<|end|>' → logprob: -6.628849983215332
    3. '```' → logprob: -6.878849983215332
    4. '
' → logprob: -7.253849983215332
    5. 'dp' → logprob: -8.503849983215332
    6. '    
' → logprob: -8.753849983215332
    7. 'def' → logprob: -8.878849983215332
    8. '<|end|>' → logprob: -10.003849983215332
    9. ' =' → logprob: -10.128849983215332
    10. '[' → logprob: -10.253849983215332

Token 326: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.12402643263339996
    2. ' dp' → logprob: -2.6240265369415283
    3. '   ' → logprob: -3.1240265369415283
    4. '```' → logprob: -9.24902629852295
    5. '	dp' → logprob: -10.62402629852295
    6. '
' → logprob: -10.74902629852295
    7. '_dp' → logprob: -12.49902629852295
    8. '(dp' → logprob: -12.87402629852295
    9. '``' → logprob: -13.62402629852295
    10. '    
' → logprob: -13.62402629852295

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20147424936294556
    2. '=' → logprob: -1.7014741897583008
    3. '=[' → logprob: -10.2014741897583
    4. '=[[' → logprob: -11.7014741897583
    5. '[' → logprob: -12.0764741897583
    6. '=[]' → logprob: -12.4514741897583
    7. '   ' → logprob: -13.4514741897583
    8. ' =[' → logprob: -13.4514741897583
    9. ' ' → logprob: -13.8264741897583
    10. ']' → logprob: -14.4514741897583

Token 328: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0019353042589500546
    2. ' [[' → logprob: -6.2519354820251465
    3. '[' → logprob: -12.001935005187988
    4. ' [[[' → logprob: -15.126935005187988
    5. ' [' → logprob: -15.376935005187988
    6. '([[' → logprob: -18.251935958862305
    7. '   ' → logprob: -19.751935958862305
    8. '[['' → logprob: -19.876935958862305
    9. '[(' → logprob: -20.501935958862305
    10. ' ' → logprob: -21.126935958862305

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.375004768371582
    3. ' ' → logprob: -14.125004768371582
    4. 'False' → logprob: -17.2500057220459
    5. '[[' → logprob: -17.7500057220459
    6. ' [' → logprob: -17.8750057220459
    7. '-' → logprob: -18.3750057220459
    8. '(' → logprob: -18.7500057220459
    9. '   ' → logprob: -19.2500057220459
    10. ']' → logprob: -19.7500057220459

Token 330: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2304002046585083
    2. 'for' → logprob: -2.2304000854492188
    3. ']' → logprob: -2.6054000854492188
    4. ']*(' → logprob: -3.7304000854492188
    5. ']*' → logprob: -7.980400085449219
    6. '   ' → logprob: -9.855400085449219
    7. '	for' → logprob: -11.355400085449219
    8. ')' → logprob: -11.730400085449219
    9. ']+' → logprob: -12.230400085449219
    10. ' ' → logprob: -12.355400085449219

Token 331: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004980424419045448
    2. '(max' → logprob: -5.379980564117432
    3. '101' → logprob: -8.504980087280273
    4. ' max' → logprob: -8.879980087280273
    5. '91' → logprob: -12.629980087280273
    6. '[max' → logprob: -12.754980087280273
    7. '46' → logprob: -12.879980087280273
    8. '=max' → logprob: -13.004980087280273
    9. '100' → logprob: -13.129980087280273
    10. '105' → logprob: -13.754980087280273

Token 332: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00013262155698612332
    2. '_' → logprob: -9.62513256072998
    3. '+' → logprob: -10.75013256072998
    4. 's' → logprob: -11.00013256072998
    5. '100' → logprob: -11.87513256072998
    6. '_n' → logprob: -12.37513256072998
    7. '_S' → logprob: -12.37513256072998
    8. '101' → logprob: -13.12513256072998
    9. ' _' → logprob: -13.25013256072998
    10. '\' → logprob: -13.62513256072998

Token 333: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008059371029958129
    2. ' +' → logprob: -7.125805854797363
    3. '+
' → logprob: -14.000805854797363
    4. '1' → logprob: -15.250805854797363
    5. '```' → logprob: -15.750805854797363
    6. '
' → logprob: -16.00080680847168
    7. ')' → logprob: -17.50080680847168
    8. ')+' → logprob: -17.50080680847168
    9. '+[' → logprob: -17.50080680847168
    10. '0' → logprob: -17.75080680847168

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.843177233240567e-05
    2. '101' → logprob: -11.875018119812012
    3. ' ' → logprob: -12.000018119812012
    4. '   ' → logprob: -13.375018119812012
    5. 'max' → logprob: -13.500018119812012
    6. '```' → logprob: -15.125018119812012
    7. '11' → logprob: -15.500018119812012
    8. '01' → logprob: -15.687518119812012
    9. '100' → logprob: -15.875018119812012
    10. '
' → logprob: -15.875018119812012

Token 335: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006221112795174122
    2. ' for' → logprob: -5.131221294403076
    3. 'for' → logprob: -8.256220817565918
    4. ' )' → logprob: -10.631220817565918
    5. '   ' → logprob: -12.506220817565918
    6. ']' → logprob: -13.006220817565918
    7. ')]' → logprob: -13.256220817565918
    8. ' ' → logprob: -14.381220817565918
    9. ' ' → logprob: -16.256221771240234
    10. ')
' → logprob: -16.381221771240234

Token 336: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014186889864504337
    2. 'for' → logprob: -4.264186859130859
    3. '   ' → logprob: -10.76418685913086
    4. ' ' → logprob: -14.01418685913086
    5. '	for' → logprob: -14.26418685913086
    6. ']' → logprob: -14.63918685913086
    7. '       ' → logprob: -16.76418685913086
    8. '    ' → logprob: -16.88918685913086
    9. ')' → logprob: -17.01418685913086
    10. '  ' → logprob: -17.13918685913086

Token 337: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25305891036987305
    2. ' _' → logprob: -1.503058910369873
    3. ' range' → logprob: -7.253058910369873
    4. ' i' → logprob: -9.003059387207031
    5. ' n' → logprob: -9.128059387207031
    6. ' in' → logprob: -9.503059387207031
    7. '_n' → logprob: -9.878059387207031
    8. 'n' → logprob: -11.503059387207031
    9. ' ' → logprob: -11.628059387207031
    10. '_s' → logprob: -12.003059387207031

Token 338: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6304940581321716
    2. ' range' → logprob: -0.8804940581321716
    3. ' in' → logprob: -3.1304941177368164
    4. 'in' → logprob: -5.255494117736816
    5. '(range' → logprob: -6.380494117736816
    6. '_' → logprob: -6.505494117736816
    7. '_range' → logprob: -7.380494117736816
    8. 'lambda' → logprob: -9.255494117736816
    9. '0' → logprob: -9.380494117736816
    10. '	range' → logprob: -10.505494117736816

Token 339: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079708829522133
    2. ' range' → logprob: -5.504079818725586
    3. '(range' → logprob: -14.004079818725586
    4. '   ' → logprob: -16.254079818725586
    5. '	range' → logprob: -16.254079818725586
    6. ')' → logprob: -16.379079818725586
    7. '0' → logprob: -17.004079818725586
    8. '_' → logprob: -17.504079818725586
    9. '_range' → logprob: -17.754079818725586
    10. ']' → logprob: -18.004079818725586

Token 340: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25389769673347473
    2. '(max' → logprob: -1.5038976669311523
    3. '(range' → logprob: -6.503897666931152
    4. '((' → logprob: -8.378897666931152
    5. 'range' → logprob: -9.378897666931152
    6. '11' → logprob: -9.878897666931152
    7. ' (' → logprob: -9.878897666931152
    8. '10' → logprob: -10.378897666931152
    9. '(n' → logprob: -11.253897666931152
    10. 'max' → logprob: -12.878897666931152

Token 341: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0016932693542912602
    2. 'n' → logprob: -7.126693248748779
    3. '_s' → logprob: -7.251693248748779
    4. '_' → logprob: -9.376693725585938
    5. '9' → logprob: -9.751693725585938
    6. '2' → logprob: -11.376693725585938
    7. '3' → logprob: -12.001693725585938
    8. 's' → logprob: -12.376693725585938
    9. '1' → logprob: -12.376693725585938
    10. '4' → logprob: -13.376693725585938

Token 342: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00033796546631492674
    2. ' +' → logprob: -8.000337600708008
    3. '1' → logprob: -14.375337600708008
    4. ')]' → logprob: -14.375337600708008
    5. '+
' → logprob: -15.000337600708008
    6. '[' → logprob: -15.125337600708008
    7. ')][' → logprob: -16.000337600708008
    8. '()+' → logprob: -16.125337600708008
    9. '+[' → logprob: -16.375337600708008
    10. ')' → logprob: -16.500337600708008

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '2' → logprob: -12.250006675720215
    3. ' ' → logprob: -14.250006675720215
    4. '10' → logprob: -14.500006675720215
    5. '   ' → logprob: -14.750006675720215
    6. '
' → logprob: -16.37500762939453
    7. '11' → logprob: -16.75000762939453
    8. '0' → logprob: -16.75000762939453
    9. '+' → logprob: -17.75000762939453
    10. '```' → logprob: -17.93750762939453

Token 344: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00030817187507636845
    2. ')]
' → logprob: -8.1253080368042
    3. ']' → logprob: -12.0003080368042
    4. '   ' → logprob: -12.8753080368042
    5. ')]

' → logprob: -13.8753080368042
    6. ')]
' → logprob: -13.8753080368042
    7. ')' → logprob: -14.0003080368042
    8. '+' → logprob: -15.3753080368042
    9. ' )' → logprob: -15.7503080368042
    10. '')]' → logprob: -16.625308990478516

Token 345: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20185163617134094
    2. '   ' → logprob: -1.9518516063690186
    3. ' for' → logprob: -4.076851844787598
    4. 'for' → logprob: -4.076851844787598
    5. ' dp' → logprob: -5.451851844787598
    6. '```' → logprob: -6.076851844787598
    7. '	dp' → logprob: -8.826851844787598
    8. '<|end|>' → logprob: -9.326851844787598
    9. '_dp' → logprob: -11.701851844787598
    10. '(dp' → logprob: -12.076851844787598

Token 346: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0007364890188910067
    2. 'for' → logprob: -7.250736713409424
    3. '   ' → logprob: -11.250736236572266
    4. ' dp' → logprob: -11.750736236572266
    5. '```' → logprob: -12.625736236572266
    6. ' for' → logprob: -13.125736236572266
    7. '	dp' → logprob: -15.375736236572266
    8. '_dp' → logprob: -18.500736236572266
    9. '
' → logprob: -18.625736236572266
    10. 'from' → logprob: -18.750736236572266

Token 347: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -15.125000953674316
    3. '```' → logprob: -16.0
    4. '
' → logprob: -16.125
    5. '[][' → logprob: -16.125
    6. '][' → logprob: -16.5
    7. '\[' → logprob: -17.25
    8. '<|end|>' → logprob: -17.375
    9. '[
' → logprob: -17.625
    10. '=' → logprob: -17.75

Token 348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007136239437386394
    2. '[' → logprob: -7.25071382522583
    3. '][' → logprob: -12.750713348388672
    4. ' ' → logprob: -14.875713348388672
    5. ' [' → logprob: -15.750713348388672
    6. '
' → logprob: -16.125713348388672
    7. '00' → logprob: -16.375713348388672
    8. '000' → logprob: -17.125713348388672
    9. ']' → logprob: -17.500713348388672
    10. '=' → logprob: -17.750713348388672

Token 349: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.8126592193730175e-05
    2. '[' → logprob: -10.1250581741333
    3. ']' → logprob: -11.0000581741333
    4. ' ][' → logprob: -13.7500581741333
    5. '0' → logprob: -15.2500581741333
    6. '"][' → logprob: -17.625057220458984
    7. ')][' → logprob: -18.125057220458984
    8. ''][' → logprob: -18.250057220458984
    9. ']=' → logprob: -18.500057220458984
    10. ']][' → logprob: -18.625057220458984

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '۰' → logprob: -20.125
    4. '[' → logprob: -21.75
    5. '000' → logprob: -21.75
    6. '   ' → logprob: -22.25
    7. '00' → logprob: -22.5
    8. '{' → logprob: -22.625
    9. '০' → logprob: -23.0
    10. ']' → logprob: -23.5

Token 351: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003373694489710033
    2. ']=' → logprob: -8.000337600708008
    3. '=' → logprob: -13.375337600708008
    4. ' ]' → logprob: -15.500337600708008
    5. ']+=' → logprob: -15.875337600708008
    6. ' =' → logprob: -18.000337600708008
    7. ']
' → logprob: -18.250337600708008
    8. '1' → logprob: -18.625337600708008
    9. '`]' → logprob: -19.125337600708008
    10. '']' → logprob: -19.625337600708008

Token 352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. ']' → logprob: -15.37692928314209
    4. ']=' → logprob: -16.751930236816406
    5. '+=' → logprob: -17.126930236816406
    6. ' +=' → logprob: -17.251930236816406
    7. '[' → logprob: -17.876930236816406
    8. '＝' → logprob: -18.126930236816406
    9. '=True' → logprob: -18.501930236816406
    10. ' ' → logprob: -20.001930236816406

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -22.0
    5. '۱' → logprob: -22.375
    6. '১' → logprob: -22.75
    7. '' → logprob: -23.125
    8. '`' → logprob: -23.375
    9. '<|end|>' → logprob: -23.625
    10. '0' → logprob: -23.625

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '```' → logprob: -22.25
    4. '۱' → logprob: -22.875
    5. '' → logprob: -23.25
    6. '{' → logprob: -23.25
    7. '0' → logprob: -23.875
    8. '১' → logprob: -24.125
    9. '`' → logprob: -24.5
    10. '१' → logprob: -24.625

Token 355: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007791517302393913
    2. ' for' → logprob: -4.882791519165039
    3. 'for' → logprob: -9.632791519165039
    4. '
' → logprob: -10.132791519165039
    5. '```' → logprob: -10.382791519165039
    6. '<|end|>' → logprob: -10.382791519165039
    7. '    
' → logprob: -11.632791519165039
    8. '	for' → logprob: -11.882791519165039
    9. ' ' → logprob: -14.507791519165039
    10. '  ' → logprob: -14.632791519165039

Token 356: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4414481222629547
    2. '   ' → logprob: -1.1914480924606323
    3. 'for' → logprob: -2.941448211669922
    4. '	for' → logprob: -8.816448211669922
    5. '<|end|>' → logprob: -8.941448211669922
    6. '```' → logprob: -10.441448211669922
    7. 'import' → logprob: -12.816448211669922
    8. '   ' → logprob: -12.941448211669922
    9. ' ' → logprob: -13.066448211669922
    10. '
' → logprob: -13.066448211669922

Token 357: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37865307927131653
    2. '   ' → logprob: -1.6286530494689941
    3. 'for' (adapté à ' for') → logprob: -2.128653049468994
    4. '```' → logprob: -11.503653526306152
    5. '	for' → logprob: -12.128653526306152
    6. ' digits' → logprob: -12.503653526306152
    7. ' ' → logprob: -12.878653526306152
    8. 'digits' → logprob: -13.003653526306152
    9. '  ' → logprob: -14.378653526306152
    10. '   ' → logprob: -15.628653526306152

Token 358: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.9925257563591003
    2. 'd' → logprob: -1.2425258159637451
    3. 'digit' → logprob: -1.2425258159637451
    4. ' d' → logprob: -3.117525815963745
    5. 'i' → logprob: -5.367525577545166
    6. ' i' → logprob: -5.992525577545166
    7. 'num' → logprob: -8.492526054382324
    8. ' num' → logprob: -8.617526054382324
    9. 'n' → logprob: -8.867526054382324
    10. 'dig' → logprob: -10.117526054382324

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008272562408819795
    2. 'in' → logprob: -7.125827312469482
    3. 's' → logprob: -12.000826835632324
    4. 'd' → logprob: -12.250826835632324
    5. 'range' → logprob: -12.500826835632324
    6. ' ' → logprob: -12.750826835632324
    7. '	in' → logprob: -13.125826835632324
    8. '0' → logprob: -13.625826835632324
    9. '1' → logprob: -14.375826835632324
    10. '```' → logprob: -15.750826835632324

Token 360: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740813970565796
    2. 'range' → logprob: -0.9740813970565796
    3. '0' → logprob: -12.724081039428711
    4. '(range' → logprob: -14.099081039428711
    5. '10' → logprob: -14.974081039428711
    6. '	range' → logprob: -15.724081039428711
    7. ' ' → logprob: -15.974081039428711
    8. '1' → logprob: -16.47408103942871
    9. '   ' → logprob: -17.09908103942871
    10. ')' → logprob: -17.47408103942871

Token 361: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00673360750079155
    2. '0' → logprob: -5.006733417510986
    3. '(' → logprob: -11.006733894348145
    4. '1' → logprob: -13.631733894348145
    5. ' ' → logprob: -14.881733894348145
    6. '   ' → logprob: -16.631732940673828
    7. ',' → logprob: -18.756732940673828
    8. '=' → logprob: -19.131732940673828
    9. ')' → logprob: -20.131732940673828
    10. ':' → logprob: -20.131732940673828

Token 362: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003196154139004648
    2. '0' → logprob: -8.250319480895996
    3. '1' → logprob: -9.750319480895996
    4. '11' → logprob: -19.125320434570312
    5. '(' → logprob: -19.875320434570312
    6. ' ' → logprob: -21.375320434570312
    7. '```' → logprob: -22.000320434570312
    8. '=' → logprob: -22.250320434570312
    9. ')' → logprob: -22.250320434570312
    10. '   ' → logprob: -23.125320434570312

Token 363: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3995537757873535
    2. '):' → logprob: -1.6495537757873535
    3. ':' → logprob: -2.0245537757873535
    4. ':
' → logprob: -5.3995537757873535
    5. '   ' → logprob: -7.3995537757873535
    6. '+' → logprob: -10.899553298950195
    7. ',' → logprob: -11.149553298950195
    8. '):
' → logprob: -12.024553298950195
    9. '}:' → logprob: -12.274553298950195
    10. ' :' → logprob: -12.774553298950195

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002755174064077437
    2. ' for' → logprob: -8.500275611877441
    3. '   ' → logprob: -10.000275611877441
    4. '<|end|>' → logprob: -11.500275611877441
    5. '        
' → logprob: -12.625275611877441
    6. '    ' → logprob: -12.750275611877441
    7. ',' → logprob: -13.000275611877441
    8. '	   ' → logprob: -13.500275611877441
    9. ' ' → logprob: -13.625275611877441
    10. '    ' → logprob: -13.875275611877441

Token 365: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05106708034873009
    2. '   ' → logprob: -3.8010671138763428
    3. '       ' → logprob: -3.8010671138763428
    4. 'for' (adapté à ' for') → logprob: -5.301066875457764
    5. '	for' → logprob: -9.551067352294922
    6. '    ' → logprob: -11.051067352294922
    7. '	   ' → logprob: -11.301067352294922
    8. ' ' → logprob: -12.426067352294922
    9. '     ' → logprob: -15.176067352294922
    10. '	' → logprob: -15.301067352294922

Token 366: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005234121344983578
    2. ' n' → logprob: -5.255234241485596
    3. 'num' → logprob: -16.005233764648438
    4. '	n' → logprob: -16.380233764648438
    5. '_n' → logprob: -16.505233764648438
    6. 'i' → logprob: -17.630233764648438
    7. 'nd' → logprob: -19.005233764648438
    8. 'nt' → logprob: -19.255233764648438
    9. '   ' → logprob: -19.380233764648438
    10. 'nn' → logprob: -20.255233764648438

Token 367: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036050593480467796
    2. 'in' → logprob: -5.628604888916016
    3. ' ' → logprob: -13.128604888916016
    4. 'd' → logprob: -14.253604888916016
    5. '
' → logprob: -14.253604888916016
    6. 'range' → logprob: -15.003604888916016
    7. '1' → logprob: -15.128604888916016
    8. '   ' → logprob: -15.128604888916016
    9. '	in' → logprob: -15.378604888916016
    10. '  ' → logprob: -16.378604888916016

Token 368: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1472419600977446e-06
    2. ' range' → logprob: -13.750000953674316
    3. 're' → logprob: -17.250001907348633
    4. 'reverse' → logprob: -17.500001907348633
    5. '(range' → logprob: -21.750001907348633
    6. '
' → logprob: -22.750001907348633
    7. '   ' → logprob: -23.125001907348633
    8. ' reversed' → logprob: -23.875001907348633
    9. '	range' → logprob: -24.125001907348633
    10. 'r' → logprob: -24.375001907348633

Token 369: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.0722858102526516e-05
    2. '(max' → logprob: -10.250041007995605
    3. ' max' → logprob: -12.500041007995605
    4. '1' → logprob: -13.625041007995605
    5. '9' → logprob: -14.875041007995605
    6. '[max' → logprob: -17.12504005432129
    7. ',max' → logprob: -18.75004005432129
    8. '	max' → logprob: -19.37504005432129
    9. '(' → logprob: -19.37504005432129
    10. '=max' → logprob: -19.37504005432129

Token 370: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.002265517134219408
    2. '9' → logprob: -6.127265453338623
    3. '-' → logprob: -10.377265930175781
    4. '1' → logprob: -10.752265930175781
    5. '0' → logprob: -11.377265930175781
    6. '+' → logprob: -12.377265930175781
    7. 'n' → logprob: -12.627265930175781
    8. '
' → logprob: -13.627265930175781
    9. '10' → logprob: -13.627265930175781
    10. '_s' → logprob: -14.002265930175781

Token 371: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6308491826057434
    2. '-' → logprob: -0.8808491826057434
    3. '1' → logprob: -3.0058491230010986
    4. '+' → logprob: -6.380849361419678
    5. '0' → logprob: -6.380849361419678
    6. ' -' → logprob: -8.13084888458252
    7. ',-' → logprob: -9.25584888458252
    8. ' ,' → logprob: -9.75584888458252
    9. ' ' → logprob: -10.13084888458252
    10. '10' → logprob: -10.88084888458252

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '0' → logprob: -15.750000953674316
    4. '2' → logprob: -17.75
    5. '-' → logprob: -17.875
    6. '```' → logprob: -18.25
    7. '   ' → logprob: -19.125
    8. '
' → logprob: -19.25
    9. ' -' → logprob: -19.375
    10. '  ' → logprob: -21.0625

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022227687761187553
    2. ',-' → logprob: -3.8972277641296387
    3. ' ,' → logprob: -6.397227764129639
    4. ' ,-' → logprob: -11.64722728729248
    5. ',
' → logprob: -12.77222728729248
    6. '+' → logprob: -13.39722728729248
    7. '-' → logprob: -13.64722728729248
    8. '   ' → logprob: -14.02222728729248
    9. ' -' → logprob: -14.14722728729248
    10. '1' → logprob: -14.77222728729248

Token 374: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.5491004129871726e-05
    2. ' -' → logprob: -10.000045776367188
    3. '0' → logprob: -17.375045776367188
    4. '   ' → logprob: -19.000045776367188
    5. '  ' → logprob: -21.125045776367188
    6. '-
' → logprob: -21.125045776367188
    7. '	' → logprob: -21.500045776367188
    8. '
' → logprob: -21.625045776367188
    9. '    ' → logprob: -21.750045776367188
    10. '```' → logprob: -21.750045776367188

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '-' → logprob: -17.875
    4. '   ' → logprob: -18.25
    5. '
' → logprob: -18.5
    6. '```' → logprob: -18.5
    7. '2' → logprob: -19.75
    8. '=' → logprob: -20.0625
    9. '``' → logprob: -20.0625
    10. ' -' → logprob: -20.5

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08797620981931686
    2. ',-' → logprob: -2.5879762172698975
    3. '-' → logprob: -5.087975978851318
    4. ' ,' → logprob: -5.962975978851318
    5. ' -' → logprob: -8.712976455688477
    6. ' ,-' → logprob: -9.587976455688477
    7. '1' → logprob: -10.212976455688477
    8. ',
' → logprob: -11.212976455688477
    9. '       ' → logprob: -11.962976455688477
    10. '```' → logprob: -12.087976455688477

Token 377: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00441350182518363
    2. ' -' → logprob: -5.504413604736328
    3. '1' → logprob: -8.004413604736328
    4. '   ' → logprob: -15.254413604736328
    5. '```' → logprob: -15.504413604736328
    6. ',-' → logprob: -15.879413604736328
    7. ',' → logprob: -16.129413604736328
    8. ')' → logprob: -16.129413604736328
    9. '  ' → logprob: -17.254413604736328
    10. ' ' → logprob: -17.254413604736328

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -17.625
    4. '
' → logprob: -19.375
    5. '   ' → logprob: -19.75
    6. '0' → logprob: -20.125
    7. '-' → logprob: -20.25
    8. ')' → logprob: -20.875
    9. ' -' → logprob: -21.0
    10. ',' → logprob: -21.375

Token 379: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6535535454750061
    2. ',' → logprob: -1.1535534858703613
    3. '):
' → logprob: -2.1535534858703613
    4. ' -' → logprob: -3.5285534858703613
    5. ',-' → logprob: -4.528553485870361
    6. '):' → logprob: -5.778553485870361
    7. '   ' → logprob: -6.528553485870361
    8. ' ,' → logprob: -6.528553485870361
    9. ':' → logprob: -7.153553485870361
    10. '       ' → logprob: -7.653553485870361

Token 380: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007671340834349394
    2. '           ' → logprob: -6.007671356201172
    3. '<|end|>' → logprob: -6.132671356201172
    4. ' for' → logprob: -6.257671356201172
    5. ',' → logprob: -7.257671356201172
    6. '   ' → logprob: -8.382671356201172
    7. '	       ' → logprob: -10.007671356201172
    8. '<|end|>' → logprob: -10.382671356201172
    9. ' ' → logprob: -11.007671356201172
    10. '               ' → logprob: -11.632671356201172

Token 381: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4837122857570648
    2. '               ' → logprob: -1.1087123155593872
    3. 'for' (adapté à ' for') → logprob: -3.1087121963500977
    4. '       ' → logprob: -4.983712196350098
    5. '   ' → logprob: -6.608712196350098
    6. ' ' → logprob: -7.733712196350098
    7. '           ' → logprob: -9.358712196350098
    8. ' ' → logprob: -9.608712196350098
    9. '	for' → logprob: -10.233712196350098
    10. '             ' → logprob: -11.858712196350098

Token 382: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01815076172351837
    2. ' s' → logprob: -4.018150806427002
    3. 'sum' → logprob: -14.143150329589844
    4. '	s' → logprob: -16.143150329589844
    5. '   ' → logprob: -17.143150329589844
    6. 'total' → logprob: -18.143150329589844
    7. '_s' → logprob: -18.143150329589844
    8. ')s' → logprob: -18.518150329589844
    9. ' sum' → logprob: -19.143150329589844
    10. 'ss' → logprob: -19.143150329589844

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024876687675714493
    2. 'in' → logprob: -6.002487659454346
    3. 'range' → logprob: -11.752488136291504
    4. '0' → logprob: -13.377488136291504
    5. ' ' → logprob: -14.252488136291504
    6. '1' → logprob: -14.752488136291504
    7. 's' → logprob: -14.877488136291504
    8. '   ' → logprob: -15.002488136291504
    9. '    ' → logprob: -15.752488136291504
    10. ' range' → logprob: -16.002487182617188

Token 384: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015024791937321424
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -16.251502990722656
    4. 're' → logprob: -18.626502990722656
    5. '   ' → logprob: -18.626502990722656
    6. '	range' → logprob: -19.126502990722656
    7. 'in' → logprob: -19.501502990722656
    8. ' ' → logprob: -19.626502990722656
    9. 'reverse' → logprob: -20.376502990722656
    10. '  ' → logprob: -20.751502990722656

Token 385: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.3135978579521179
    2. 'max' → logprob: -1.3135979175567627
    3. '(d' → logprob: -8.938597679138184
    4. '(' → logprob: -9.438597679138184
    5. '0' → logprob: -9.813597679138184
    6. 'digit' → logprob: -10.188597679138184
    7. ' max' → logprob: -11.063597679138184
    8. '[max' → logprob: -11.938597679138184
    9. '(s' → logprob: -12.313597679138184
    10. '	max' → logprob: -13.813597679138184

Token 386: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -8.895480277715251e-06
    2. 's' → logprob: -12.125008583068848
    3. 'max' → logprob: -12.625008583068848
    4. 'S' → logprob: -16.875009536743164
    5. ')' → logprob: -18.250009536743164
    6. '=' → logprob: -18.500009536743164
    7. '   ' → logprob: -18.562509536743164
    8. '(max' → logprob: -19.062509536743164
    9. 'n' → logprob: -19.125009536743164
    10. '+' → logprob: -19.187509536743164

Token 387: '-digit' (ID: 88590)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10100049525499344
    2. ' -' → logprob: -2.9760005474090576
    3. '-n' → logprob: -3.8510005474090576
    4. '-' → logprob: -3.8510005474090576
    5. '-d' → logprob: -6.6010003089904785
    6. ' +' → logprob: -6.9760003089904785
    7. ',' → logprob: -8.726000785827637
    8. '-digit' → logprob: -10.726000785827637
    9. '
' → logprob: -11.101000785827637
    10. 'n' → logprob: -11.601000785827637

Token 388: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23601117730140686
    2. '-' → logprob: -1.8610111474990845
    3. ',' → logprob: -2.986011266708374
    4. '10' → logprob: -6.236011028289795
    5. ' -' → logprob: -6.861011028289795
    6. ' +' → logprob: -6.986011028289795
    7. ',-' → logprob: -8.986011505126953
    8. ' ,' → logprob: -9.486011505126953
    9. '+,' → logprob: -10.861011505126953
    10. ' ' → logprob: -11.236011505126953

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '0' → logprob: -15.125001907348633
    4. '```' → logprob: -16.000001907348633
    5. '
' → logprob: -17.500001907348633
    6. ')' → logprob: -17.875001907348633
    7. '2' → logprob: -17.875001907348633
    8. '           ' → logprob: -18.125001907348633
    9. ',' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.500001907348633

Token 390: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013875988312065601
    2. '):' → logprob: -4.513875961303711
    3. '               ' → logprob: -6.388875961303711
    4. ':' → logprob: -8.013875961303711
    5. ',' → logprob: -8.138875961303711
    6. ':
' → logprob: -8.763875961303711
    7. '                   ' → logprob: -9.388875961303711
    8. '           ' → logprob: -9.638875961303711
    9. '                       ' → logprob: -9.888875961303711
    10. '):
' → logprob: -10.013875961303711

Token 391: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.227250610711053e-05
    2. '```' → logprob: -11.000041961669922
    3. 'dp' → logprob: -11.750041961669922
    4. ' dp' → logprob: -11.750041961669922
    5. '                   ' → logprob: -13.250041961669922
    6. '   ' → logprob: -13.750041961669922
    7. '                       ' → logprob: -13.875041961669922
    8. '           ' → logprob: -14.125041961669922
    9. '<|end|>' → logprob: -14.250041961669922
    10. '       ' → logprob: -14.500041961669922

Token 392: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4005587697029114
    2. '                   ' → logprob: -1.2755587100982666
    3. 'dp' (adapté à ' dp') → logprob: -3.4005587100982666
    4. '               ' → logprob: -4.150558948516846
    5. '                       ' → logprob: -6.900558948516846
    6. '	dp' → logprob: -8.150558471679688
    7. '(dp' → logprob: -8.900558471679688
    8. '   ' → logprob: -8.900558471679688
    9. '```' → logprob: -10.400558471679688
    10. '                ' → logprob: -11.400558471679688

Token 393: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -14.250000953674316
    3. 'n' → logprob: -15.250000953674316
    4. '[' → logprob: -16.000001907348633
    5. '               ' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '][' → logprob: -17.125001907348633
    8. '                   ' → logprob: -17.125001907348633
    9. '```' → logprob: -17.125001907348633
    10. '           ' → logprob: -17.375001907348633

Token 394: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013563097454607487
    2. '][' → logprob: -7.00135612487793
    3. '[' → logprob: -8.25135612487793
    4. ' +' → logprob: -8.87635612487793
    5. '[n' → logprob: -10.75135612487793
    6. '1' → logprob: -12.25135612487793
    7. '[next' → logprob: -12.25135612487793
    8. '[s' → logprob: -12.87635612487793
    9. '+[' → logprob: -13.37635612487793
    10. 's' → logprob: -13.62635612487793

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.250007629394531
    3. '```' → logprob: -13.750007629394531
    4. '][' → logprob: -13.875007629394531
    5. 's' → logprob: -14.375007629394531
    6. '   ' → logprob: -15.750007629394531
    7. '[' → logprob: -16.50000762939453
    8. ']' → logprob: -17.43750762939453
    9. '           ' → logprob: -17.87500762939453
    10. '
' → logprob: -17.87500762939453

Token 396: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02638389728963375
    2. '[s' → logprob: -3.651383876800537
    3. '[' → logprob: -10.526384353637695
    4. ']' → logprob: -11.026384353637695
    5. '[n' → logprob: -12.401384353637695
    6. ' ][' → logprob: -12.401384353637695
    7. ')[' → logprob: -12.651384353637695
    8. '"][' → logprob: -12.651384353637695
    9. '               ' → logprob: -12.776384353637695
    10. 's' → logprob: -12.901384353637695

Token 397: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. ' s' → logprob: -16.125
    3. '[s' → logprob: -18.125
    4. '   ' → logprob: -19.0
    5. '{s' → logprob: -19.125
    6. '(s' → logprob: -19.75
    7. ']' → logprob: -19.875
    8. '`s' → logprob: -20.0
    9. '```' → logprob: -21.0
    10. '<s' → logprob: -21.5

Token 398: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28389060497283936
    2. ']+=' → logprob: -1.9088906049728394
    3. ']' → logprob: -2.408890724182129
    4. '+d' → logprob: -5.283890724182129
    5. '+=' → logprob: -5.783890724182129
    6. '[d' → logprob: -7.408890724182129
    7. '[' → logprob: -9.533890724182129
    8. ' +' → logprob: -9.533890724182129
    9. '+]' → logprob: -10.783890724182129
    10. 'digit' → logprob: -10.908890724182129

Token 399: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -4.36574100604048e-06
    2. ' digit' → logprob: -12.375004768371582
    3. 'd' → logprob: -17.000003814697266
    4. '_digit' → logprob: -17.625003814697266
    5. 'digits' → logprob: -18.250003814697266
    6. 'dig' → logprob: -18.500003814697266
    7. '-digit' → logprob: -18.750003814697266
    8. 'digital' → logprob: -19.000003814697266
    9. '   ' → logprob: -20.000003814697266
    10. 'Digit' → logprob: -20.500003814697266

Token 400: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011049231514334679
    2. ']+=' → logprob: -4.511049270629883
    3. '+]' → logprob: -14.011049270629883
    4. '+=' → logprob: -14.636049270629883
    5. ' ]' → logprob: -15.761049270629883
    6. '`]' → logprob: -17.386049270629883
    7. '```' → logprob: -17.636049270629883
    8. '   ' → logprob: -17.886049270629883
    9. ']+' → logprob: -18.136049270629883
    10. '"]' → logprob: -18.886049270629883

Token 401: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03551194444298744
    2. ' +=' → logprob: -3.5355119705200195
    3. ']+=' → logprob: -5.1605119705200195
    4. ']' → logprob: -13.53551197052002
    5. '=' → logprob: -13.78551197052002
    6. '+' → logprob: -14.03551197052002
    7. '   ' → logprob: -14.28551197052002
    8. '    ' → logprob: -14.41051197052002
    9. '```' → logprob: -14.41051197052002
    10. '	' → logprob: -14.66051197052002

Token 402: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002613358374219388
    2. ' dp' → logprob: -8.250261306762695
    3. '	dp' → logprob: -20.125261306762695
    4. '               ' → logprob: -21.000261306762695
    5. '(dp' → logprob: -21.375261306762695
    6. '                   ' → logprob: -22.250261306762695
    7. '_dp' → logprob: -23.250261306762695
    8. 'dc' → logprob: -23.500261306762695
    9. 'db' → logprob: -23.500261306762695
    10. 'df' → logprob: -23.750261306762695

Token 403: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00012368128227535635
    2. 'n' → logprob: -9.000123977661133
    3. '(n' → logprob: -16.000123977661133
    4. '```' → logprob: -17.000123977661133
    5. ' n' → logprob: -17.125123977661133
    6. ' [' → logprob: -17.750123977661133
    7. '[' → logprob: -18.250123977661133
    8. '	n' → logprob: -18.500123977661133
    9. '[
' → logprob: -18.625123977661133
    10. '<n' → logprob: -19.375123977661133

Token 404: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6189956665039062
    2. '[n' → logprob: -0.8689956665039062
    3. '[s' → logprob: -3.8689956665039062
    4. '[' → logprob: -4.118995666503906
    5. ']' → logprob: -5.618995666503906
    6. 'n' → logprob: -7.743995666503906
    7. '```' → logprob: -7.868995666503906
    8. '[
' → logprob: -9.493995666503906
    9. 's' → logprob: -9.493995666503906
    10. '[start' → logprob: -10.243995666503906

Token 405: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. ' s' → logprob: -15.5
    3. ' ' → logprob: -21.0
    4. '(s' → logprob: -21.0
    5. '[s' → logprob: -21.25
    6. '{s' → logprob: -21.375
    7. '	s' → logprob: -21.875
    8. '_s' → logprob: -21.875
    9. '   ' → logprob: -22.125
    10. '```' → logprob: -22.375

Token 406: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3180943727493286
    2. 'for' (adapté à ' for') → logprob: -1.6930943727493286
    3. 'n' → logprob: -2.068094253540039
    4. '   ' → logprob: -2.193094253540039
    5. '#' → logprob: -2.318094253540039
    6. 'if' → logprob: -2.318094253540039
    7. 'import' → logprob: -3.068094253540039
    8. ' for' → logprob: -4.068094253540039
    9. 'num' → logprob: -4.193094253540039
    10. '```' → logprob: -4.568094253540039

Token 409: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22567938268184662
    2. ' n' → logprob: -1.6006793975830078
    3. '_n' → logprob: -8.350679397583008
    4. 'num' → logprob: -11.850679397583008
    5. 's' → logprob: -12.225679397583008
    6. '_' → logprob: -12.725679397583008
    7. '	n' → logprob: -12.725679397583008
    8. 'i' → logprob: -12.850679397583008
    9. ' s' → logprob: -13.100679397583008
    10. '```' → logprob: -13.850679397583008

Token 410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026318415999412537
    2. 'in' → logprob: -3.651318311691284
    3. '()' → logprob: -12.151318550109863
    4. 's' → logprob: -12.401318550109863
    5. ' =' → logprob: -13.276318550109863
    6. ' ' → logprob: -13.401318550109863
    7. '(' → logprob: -14.151318550109863
    8. 'import' → logprob: -14.276318550109863
    9. '=' → logprob: -14.401318550109863
    10. '	in' → logprob: -14.651318550109863

Token 411: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00861528143286705
    2. ' sys' → logprob: -4.758615493774414
    3. 'input' → logprob: -14.883615493774414
    4. '(sys' → logprob: -15.633615493774414
    5. '=sys' → logprob: -16.383615493774414
    6. '	sys' → logprob: -17.258615493774414
    7. 'iter' → logprob: -17.383615493774414
    8. 'import' → logprob: -18.758615493774414
    9. '```' → logprob: -18.883615493774414
    10. 'stdin' → logprob: -19.133615493774414

Token 412: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07991734147071838
    2. 'in' → logprob: -2.7049174308776855
    3. 'stdin' → logprob: -4.8299174308776855
    4. 'import' → logprob: -7.4549174308776855
    5. '(stdin' → logprob: -7.4549174308776855
    6. ' in' → logprob: -8.579916954040527
    7. '   ' → logprob: -9.329916954040527
    8. '.stdout' → logprob: -9.329916954040527
    9. '.readline' → logprob: -9.454916954040527
    10. '=sys' → logprob: -10.454916954040527

Token 413: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5943856835365295
    2. '():' → logprob: -0.8443856835365295
    3. ':' → logprob: -4.219385623931885
    4. ':
' → logprob: -6.469385623931885
    5. '()' → logprob: -7.469385623931885
    6. '().' → logprob: -7.719385623931885
    7. ' in' → logprob: -7.969385623931885
    8. '.readline' → logprob: -8.594386100769043
    9. '():
' → logprob: -9.719386100769043
    10. ' =' → logprob: -9.969386100769043

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5822981595993042
    2. '   ' → logprob: -1.4572981595993042
    3. ':' → logprob: -2.4572982788085938
    4. '<|end|>' → logprob: -3.3322982788085938
    5. '```' → logprob: -4.207298278808594
    6. '    
' → logprob: -4.207298278808594
    7. '<|end|>' → logprob: -4.457298278808594
    8. ',' → logprob: -4.707298278808594
    9. '        
' → logprob: -4.832298278808594
    10. 'tokens' → logprob: -5.332298278808594

Token 415: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.818682074546814
    2. '       ' → logprob: -1.193682074546814
    3. ' n' → logprob: -1.568682074546814
    4. ' if' → logprob: -4.4436821937561035
    5. 'line' → logprob: -4.6936821937561035
    6. ' parts' → logprob: -5.0686821937561035
    7. 'tokens' → logprob: -5.0686821937561035
    8. ' line' → logprob: -5.3186821937561035
    9. 'parts' → logprob: -6.1936821937561035
    10. 'if' (adapté à ' if') → logprob: -6.3186821937561035

Token 416: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04175202175974846
    2. 'not' → logprob: -3.5417520999908447
    3. ' line' → logprob: -4.541751861572266
    4. 'line' → logprob: -6.666751861572266
    5. ' ' → logprob: -13.291751861572266
    6. '=line' → logprob: -15.041751861572266
    7. '#line' → logprob: -15.666751861572266
    8. '	not' → logprob: -16.166751861572266
    9. '	line' → logprob: -16.541751861572266
    10. ' ' → logprob: -16.541751861572266

Token 417: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.16262951493263245
    2. ' ==' → logprob: -2.6626296043395996
    3. '==' → logprob: -3.4126296043395996
    4. '.' → logprob: -3.4126296043395996
    5. '.startswith' → logprob: -4.2876296043396
    6. '.rstrip' → logprob: -7.6626296043396
    7. '()==' → logprob: -9.662629127502441
    8. 'startswith' → logprob: -9.912629127502441
    9. 'strip' → logprob: -10.162629127502441
    10. '   ' → logprob: -10.912629127502441

Token 418: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20182590186595917
    2. '()==' → logprob: -1.7018258571624756
    3. '==' → logprob: -8.076826095581055
    4. ' ==' → logprob: -9.451826095581055
    5. '():
' → logprob: -11.451826095581055
    6. '():' → logprob: -11.951826095581055
    7. ' ()' → logprob: -12.576826095581055
    8. '()=="' → logprob: -13.326826095581055
    9. '```' → logprob: -14.326826095581055
    10. '()<' → logprob: -16.451826095581055

Token 419: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932758092880249
    2. ' ==' → logprob: -0.6932758092880249
    3. '()==' → logprob: -9.443275451660156
    4. '=='' → logprob: -10.818275451660156
    5. '=="' → logprob: -11.443275451660156
    6. '==
' → logprob: -12.568275451660156
    7. '===' → logprob: -12.693275451660156
    8. '.startswith' → logprob: -12.818275451660156
    9. '=' → logprob: -13.318275451660156
    10. ')==' → logprob: -13.443275451660156

Token 420: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9725669026374817
    2. '"":' → logprob: -1.222566843032837
    3. '''' → logprob: -1.597566843032837
    4. '""' → logprob: -2.472566843032837
    5. ''' → logprob: -3.222566843032837
    6. ''ex' → logprob: -7.347567081451416
    7. ''end' → logprob: -9.972566604614258
    8. ' "":
' → logprob: -10.722566604614258
    9. '":' → logprob: -11.222566604614258
    10. ' '':
' → logprob: -11.972566604614258

Token 421: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2258688509464264
    2. '           ' → logprob: -1.600868821144104
    3. ':' → logprob: -8.850869178771973
    4. '   ' → logprob: -8.975869178771973
    5. '<|end|>' → logprob: -10.475869178771973
    6. '	       ' → logprob: -10.600869178771973
    7. ',' → logprob: -10.850869178771973
    8. ':
' → logprob: -11.100869178771973
    9. ' break' → logprob: -11.225869178771973
    10. 'break' → logprob: -11.475869178771973

Token 422: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.22414317727088928
    2. ' break' → logprob: -2.2241432666778564
    3. '           ' → logprob: -2.4741432666778564
    4. '       ' → logprob: -4.849143028259277
    5. '               ' → logprob: -8.099143028259277
    6. 'return' → logprob: -8.974143028259277
    7. '	break' → logprob: -9.099143028259277
    8. '   ' → logprob: -11.349143028259277
    9. '_break' → logprob: -12.349143028259277
    10. ' return' → logprob: -12.724143028259277

Token 423: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015973414992913604
    2. '<|end|>' → logprob: -7.1265974044799805
    3. '   ' → logprob: -7.7515974044799805
    4. '```' → logprob: -8.87659740447998
    5. ',' → logprob: -9.50159740447998
    6. '        
' → logprob: -10.00159740447998
    7. '<|end|>' → logprob: -10.75159740447998
    8. 'tokens' → logprob: -11.00159740447998
    9. 'token' → logprob: -11.12659740447998
    10. '
' → logprob: -11.75159740447998

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003908735525328666
    2. '<|end|>' → logprob: -8.375391006469727
    3. '```' → logprob: -9.250391006469727
    4. '   ' → logprob: -10.250391006469727
    5. 'tokens' → logprob: -12.000391006469727
    6. '<|end|>' → logprob: -12.000391006469727
    7. 'token' → logprob: -12.250391006469727
    8. ',' → logprob: -12.500391006469727
    9. ' tokens' → logprob: -13.250391006469727
    10. '        
' → logprob: -13.875391006469727

Token 425: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0035210796631872654
    2. '       ' → logprob: -6.128520965576172
    3. 'parts' → logprob: -7.253520965576172
    4. ' n' → logprob: -7.503520965576172
    5. ' parts' → logprob: -10.878520965576172
    6. 'tokens' → logprob: -10.878520965576172
    7. 'nums' → logprob: -11.503520965576172
    8. ',n' → logprob: -11.753520965576172
    9. 'num' → logprob: -11.878520965576172
    10. 'a' → logprob: -12.753520965576172

Token 426: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001824288978241384
    2. 's' → logprob: -7.001824378967285
    3. ',s' → logprob: -7.001824378967285
    4. ' ,' → logprob: -13.251824378967285
    5. ' s' → logprob: -15.001824378967285
    6. '_s' → logprob: -16.62682342529297
    7. 'str' → logprob: -18.00182342529297
    8. '_,' → logprob: -18.75182342529297
    9. 'int' → logprob: -18.87682342529297
    10. ',int' → logprob: -18.87682342529297

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38708630204200745
    2. '=' → logprob: -1.137086272239685
    3. '=int' → logprob: -8.512085914611816
    4. ',' → logprob: -12.637085914611816
    5. '=line' → logprob: -12.762085914611816
    6. ' ' → logprob: -13.387085914611816
    7. '   ' → logprob: -13.637085914611816
    8. '=input' → logprob: -13.762085914611816
    9. '=n' → logprob: -13.887085914611816
    10. '    ' → logprob: -14.637085914611816

Token 428: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740772247314453
    2. ' map' → logprob: -0.9740772247314453
    3. '   ' → logprob: -16.724077224731445
    4. '	map' → logprob: -16.849077224731445
    5. '(map' → logprob: -17.474077224731445
    6. 'list' → logprob: -17.724077224731445
    7. 'line' → logprob: -18.724077224731445
    8. ' ' → logprob: -18.849077224731445
    9. '  ' → logprob: -19.224077224731445
    10. '.map' → logprob: -19.849077224731445

Token 429: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.037835580878891e-05
    2. 'int' → logprob: -10.25005054473877
    3. '(str' → logprob: -11.37505054473877
    4. '(' → logprob: -13.62505054473877
    5. '(lambda' → logprob: -13.87505054473877
    6. '[int' → logprob: -14.00005054473877
    7. '=int' → logprob: -15.25005054473877
    8. '<int' → logprob: -15.75005054473877
    9. ',int' → logprob: -16.750049591064453
    10. ' int' → logprob: -17.000049591064453

Token 430: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0047865803353488445
    2. ',line' → logprob: -5.504786491394043
    3. ',' → logprob: -7.379786491394043
    4. '(' → logprob: -10.504786491394043
    5. ' line' → logprob: -10.754786491394043
    6. 'line' → logprob: -11.254786491394043
    7. '=line' → logprob: -11.254786491394043
    8. ')' → logprob: -12.629786491394043
    9. '#line' → logprob: -12.754786491394043
    10. '[line' → logprob: -13.254786491394043

Token 431: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6941441893577576
    2. '.strip' → logprob: -0.6941441893577576
    3. '.split' → logprob: -6.944144248962402
    4. 'strip' → logprob: -11.069144248962402
    5. '(strip' → logprob: -11.444144248962402
    6. '.' → logprob: -12.819144248962402
    7. '.readline' → logprob: -13.319144248962402
    8. '()' → logprob: -14.444144248962402
    9. ' .' → logprob: -14.944144248962402
    10. 'split' → logprob: -15.694144248962402

Token 432: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020756404846906662
    2. ')' → logprob: -4.645756244659424
    3. '()' → logprob: -4.645756244659424
    4. '())
' → logprob: -6.895756244659424
    5. '(' → logprob: -8.520756721496582
    6. '('' → logprob: -9.145756721496582
    7. '(','' → logprob: -12.145756721496582
    8. ' ())' → logprob: -12.895756721496582
    9. '()
' → logprob: -13.020756721496582
    10. '())
' → logprob: -13.020756721496582

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001121880137361586
    2. '<|end|>' → logprob: -7.251121997833252
    3. '```' → logprob: -7.876121997833252
    4. '   ' → logprob: -11.376121520996094
    5. '<|end|>' → logprob: -11.376121520996094
    6. '        
' → logprob: -12.376121520996094
    7. '
' → logprob: -13.751121520996094
    8. ',' → logprob: -13.751121520996094
    9. '``' → logprob: -13.876121520996094
    10. '           ' → logprob: -15.126121520996094

Token 434: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15115609765052795
    2. '       ' → logprob: -2.151156187057495
    3. 'if' (adapté à ' if') → logprob: -3.776156187057495
    4. ' print' → logprob: -7.401155948638916
    5. '   ' → logprob: -8.526156425476074
    6. ' if' → logprob: -8.651156425476074
    7. '```' → logprob: -10.276156425476074
    8. '           ' → logprob: -13.151156425476074
    9. 'answer' → logprob: -13.776156425476074
    10. '``' → logprob: -13.776156425476074

Token 435: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4541826844215393
    2. 'n' → logprob: -1.0791826248168945
    3. ' not' → logprob: -4.4541826248168945
    4. '0' → logprob: -4.8291826248168945
    5. ' ' → logprob: -5.9541826248168945
    6. '1' → logprob: -6.5791826248168945
    7. ' s' → logprob: -7.3291826248168945
    8. 'not' → logprob: -7.4541826248168945
    9. 's' → logprob: -8.329182624816895
    10. '   ' → logprob: -9.829182624816895

Token 436: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21298415958881378
    2. ' ==' → logprob: -1.8379842042922974
    3. '==' → logprob: -3.962984085083008
    4. '>' → logprob: -4.337984085083008
    5. ' <=' → logprob: -7.587984085083008
    6. '   ' → logprob: -10.462984085083008
    7. ' ' → logprob: -10.587984085083008
    8. ' <' → logprob: -11.337984085083008
    9. '<=' → logprob: -11.337984085083008
    10. ' >=' → logprob: -11.837984085083008

Token 437: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018113377154804766
    2. ' ' → logprob: -8.625181198120117
    3. 's' → logprob: -13.625181198120117
    4. '-' → logprob: -15.750181198120117
    5. 'and' → logprob: -17.625181198120117
    6. '```' → logprob: -17.750181198120117
    7. ' -' → logprob: -18.437681198120117
    8. '1' → logprob: -18.687681198120117
    9. 'n' → logprob: -18.687681198120117
    10. '  ' → logprob: -18.812681198120117

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.03521392197581e-05
    2. ' ' → logprob: -11.000030517578125
    3. 's' → logprob: -12.000030517578125
    4. '-' → logprob: -12.125030517578125
    5. '```' → logprob: -14.812530517578125
    6. 'and' → logprob: -14.875030517578125
    7. 'n' → logprob: -15.375030517578125
    8. ''s' → logprob: -15.500030517578125
    9. 'EOF' → logprob: -16.312530517578125
    10. '9' → logprob: -16.437530517578125

Token 439: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02637055143713951
    2. 'and' → logprob: -3.6513705253601074
    3. '   ' → logprob: -10.401371002197266
    4. ':' → logprob: -10.526371002197266
    5. ' ' → logprob: -12.026371002197266
    6. ':
' → logprob: -12.651371002197266
    7. '	and' → logprob: -13.026371002197266
    8. '       ' → logprob: -14.401371002197266
    9. '  ' → logprob: -15.026371002197266
    10. '           ' → logprob: -15.151371002197266

Token 440: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031777136027812958
    2. ' s' → logprob: -5.753177642822266
    3. '   ' → logprob: -21.628177642822266
    4. ' ' → logprob: -22.753177642822266
    5. '  ' → logprob: -23.128177642822266
    6. '_s' → logprob: -23.128177642822266
    7. '	s' → logprob: -23.253177642822266
    8. '    ' → logprob: -25.128177642822266
    9. ' ' → logprob: -25.628177642822266
    10. '       ' → logprob: -25.753177642822266

Token 441: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03365849331021309
    2. ' ==' → logprob: -3.408658504486084
    3. '=' → logprob: -11.783658027648926
    4. '0' → logprob: -13.283658027648926
    5. '<|end|>' → logprob: -14.158658027648926
    6. '==
' → logprob: -14.408658027648926
    7. ')==' → logprob: -14.533658027648926
    8. '===' → logprob: -14.908658027648926
    9. ' ' → logprob: -15.033658027648926
    10. '()==' → logprob: -15.408658027648926

Token 442: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -20.500001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '00' → logprob: -21.687501907348633
    6. '```' → logprob: -22.437501907348633
    7. '  ' → logprob: -22.750001907348633
    8. '০' → logprob: -22.937501907348633
    9. '०' → logprob: -23.375001907348633
    10. '000' → logprob: -23.500001907348633

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -19.500003814697266
    4. '00' → logprob: -20.000003814697266
    5. '   ' → logprob: -20.812503814697266
    6. '০' → logprob: -21.187503814697266
    7. '```' → logprob: -21.250003814697266
    8. '०' → logprob: -21.500003814697266
    9. '  ' → logprob: -21.562503814697266
    10. '-' → logprob: -22.000003814697266

Token 444: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7122164368629456
    2. ':
' → logprob: -0.8372164368629456
    3. '           ' → logprob: -2.587216377258301
    4. '       ' → logprob: -6.837216377258301
    5. ':return' → logprob: -8.7122163772583
    6. '   ' → logprob: -11.0872163772583
    7. '():
' → logprob: -11.3372163772583
    8. ':
' → logprob: -11.7122163772583
    9. '):
' → logprob: -11.8372163772583
    10. '               ' → logprob: -11.9622163772583

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.014684110297821e-06
    2. '       ' → logprob: -12.375008583068848
    3. '               ' → logprob: -13.500008583068848
    4. ':' → logprob: -13.625008583068848
    5. '          ' → logprob: -13.875008583068848
    6. '		' → logprob: -15.000008583068848
    7. '         ' → logprob: -15.250008583068848
    8. ':
' → logprob: -15.625008583068848
    9. '	       ' → logprob: -15.625008583068848
    10. '                   ' → logprob: -16.250009536743164

Token 446: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2563501000404358
    2. 'break' (adapté à ' break') → logprob: -1.506350040435791
    3. ' break' → logprob: -5.506350040435791
    4. 'return' → logprob: -8.50635051727295
    5. '               ' → logprob: -8.88135051727295
    6. '       ' → logprob: -12.13135051727295
    7. '	break' → logprob: -13.00635051727295
    8. '		' → logprob: -14.38135051727295
    9. ' return' → logprob: -14.63135051727295
    10. '   ' → logprob: -14.75635051727295

Token 447: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012999906903132796
    2. '<|end|>' → logprob: -9.250129699707031
    3. '```' → logprob: -10.625129699707031
    4. '        
' → logprob: -12.250129699707031
    5. '   ' → logprob: -13.375129699707031
    6. '
' → logprob: -13.500129699707031
    7. '<|end|>' → logprob: -14.125129699707031
    8. 'print' → logprob: -14.625129699707031
    9. '           ' → logprob: -15.750129699707031
    10. '  
' → logprob: -16.12512969970703

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010664248111424968
    2. '```' → logprob: -9.375106811523438
    3. '<|end|>' → logprob: -11.375106811523438
    4. 'print' → logprob: -12.125106811523438
    5. '   ' → logprob: -13.125106811523438
    6. '        
' → logprob: -13.875106811523438
    7. '
' → logprob: -14.250106811523438
    8. '``' → logprob: -15.125106811523438
    9. '<|end|>' → logprob: -15.500106811523438
    10. '           ' → logprob: -15.500106811523438

Token 449: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06337320804595947
    2. 'print' → logprob: -2.81337308883667
    3. ' print' → logprob: -6.68837308883667
    4. '```' → logprob: -8.813373565673828
    5. '   ' → logprob: -11.938373565673828
    6. '``' → logprob: -13.938373565673828
    7. '        
' → logprob: -14.188373565673828
    8. '
' → logprob: -14.188373565673828
    9. '<|end|>' → logprob: -14.188373565673828
    10. '#print' → logprob: -15.688373565673828

Token 450: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0880545899271965
    2. 'n' → logprob: -2.963054656982422
    3. ' ' → logprob: -3.963054656982422
    4. '0' → logprob: -4.463054656982422
    5. '1' → logprob: -6.713054656982422
    6. ' s' → logprob: -7.338054656982422
    7. ' not' → logprob: -9.338054656982422
    8. '   ' → logprob: -9.713054656982422
    9. 's' → logprob: -10.088054656982422
    10. '    ' → logprob: -11.213054656982422

Token 451: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.019450508058071136
    2. '>' → logprob: -4.019450664520264
    3. ' <=' → logprob: -6.769450664520264
    4. ' ==' → logprob: -9.519450187683105
    5. '<=' → logprob: -10.269450187683105
    6. '==' → logprob: -10.894450187683105
    7. ' >=' → logprob: -12.144450187683105
    8. ' ' → logprob: -12.644450187683105
    9. ' <' → logprob: -12.644450187683105
    10. ' >
' → logprob: -12.769450187683105

Token 452: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04856511577963829
    2. 'max' → logprob: -3.298565149307251
    3. '9' → logprob: -4.798564910888672
    4. ' ' → logprob: -6.173564910888672
    5. ' max' → logprob: -8.923564910888672
    6. 'len' → logprob: -12.798564910888672
    7. 'min' → logprob: -12.923564910888672
    8. '0' → logprob: -13.923564910888672
    9. 'n' → logprob: -14.423564910888672
    10. '(max' → logprob: -14.673564910888672

Token 453: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004061779007315636
    2. '9' → logprob: -5.629061698913574
    3. 'max' → logprob: -7.754061698913574
    4. ' ' → logprob: -10.379061698913574
    5. '0' → logprob: -14.754061698913574
    6. 'len' → logprob: -15.004061698913574
    7. ' max' → logprob: -15.379061698913574
    8. '```' → logprob: -16.12906265258789
    9. '45' → logprob: -16.25406265258789
    10. 'min' → logprob: -16.50406265258789

Token 454: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0022632593754678965
    2. 'or' → logprob: -6.127263069152832
    3. '       ' → logprob: -10.252263069152832
    4. ':' → logprob: -11.002263069152832
    5. ':
' → logprob: -11.377263069152832
    6. '   ' → logprob: -11.752263069152832
    7. '           ' → logprob: -13.252263069152832
    8. ' ' → logprob: -13.502263069152832
    9. '	or' → logprob: -13.752263069152832
    10. '        ' → logprob: -14.127263069152832

Token 455: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.38696885108947754
    2. 's' → logprob: -1.1369688510894775
    3. ' n' → logprob: -10.011968612670898
    4. 'n' → logprob: -10.136968612670898
    5. '   ' → logprob: -12.136968612670898
    6. ' ' → logprob: -13.261968612670898
    7. '           ' → logprob: -13.636968612670898
    8. ' not' → logprob: -13.636968612670898
    9. '(s' → logprob: -14.011968612670898
    10. '       ' → logprob: -14.136968612670898

Token 456: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3142605423927307
    2. '>' → logprob: -1.314260482788086
    3. ' >=' → logprob: -7.314260482788086
    4. '>=' → logprob: -8.064260482788086
    5. ' <' → logprob: -11.564260482788086
    6. '<' → logprob: -12.189260482788086
    7. '   ' → logprob: -14.064260482788086
    8. '>s' → logprob: -14.564260482788086
    9. '<|end|>' → logprob: -15.314260482788086
    10. ' ' → logprob: -15.314260482788086

Token 457: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03305525332689285
    2. ' ' → logprob: -4.158055305480957
    3. 'max' → logprob: -4.408055305480957
    4. '45' → logprob: -5.783055305480957
    5. '90' → logprob: -7.658055305480957
    6. '81' → logprob: -7.908055305480957
    7. '85' → logprob: -8.033055305480957
    8. '9' → logprob: -8.783055305480957
    9. ' max' → logprob: -8.908055305480957
    10. '84' → logprob: -10.033055305480957

Token 458: '45' (ID: 2548)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.13717348873615265
    2. '45' → logprob: -2.6371734142303467
    3. ' ' → logprob: -3.7621734142303467
    4. 'max' → logprob: -3.7621734142303467
    5. '81' → logprob: -5.387173652648926
    6. '90' → logprob: -6.137173652648926
    7. '85' → logprob: -6.637173652648926
    8. '9' → logprob: -6.762173652648926
    9. 'sum' → logprob: -8.137173652648926
    10. '84' → logprob: -8.762173652648926

Token 459: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10184666514396667
    2. ':
' → logprob: -2.851846694946289
    3. ':' → logprob: -3.351846694946289
    4. '       ' → logprob: -5.851846694946289
    5. 'or' → logprob: -7.226846694946289
    6. '           ' → logprob: -7.851846694946289
    7. '   ' → logprob: -9.976846694946289
    8. '	or' → logprob: -11.476846694946289
    9. '):
' → logprob: -11.601846694946289
    10. '=' → logprob: -12.851846694946289

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001968649885384366
    2. 'print' → logprob: -9.12519645690918
    3. '```' → logprob: -9.87519645690918
    4. '       ' → logprob: -11.12519645690918
    5. ' print' → logprob: -11.75019645690918
    6. '
' → logprob: -12.62519645690918
    7. ',' → logprob: -13.25019645690918
    8. '               ' → logprob: -13.37519645690918
    9. '	       ' → logprob: -13.50019645690918
    10. '<|end|>' → logprob: -13.75019645690918

Token 461: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1909123808145523
    2. '       ' → logprob: -1.9409123659133911
    3. ' print' → logprob: -3.8159124851226807
    4. '           ' → logprob: -4.815912246704102
    5. '   ' → logprob: -9.815912246704102
    6. '               ' → logprob: -10.315912246704102
    7. '```' → logprob: -11.190912246704102
    8. '	print' → logprob: -13.690912246704102
    9. ' ' → logprob: -13.940912246704102
    10. '        
' → logprob: -15.190912246704102

Token 462: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.828512363834307e-05
    2. '(' → logprob: -9.375088691711426
    3. ' ' → logprob: -12.625088691711426
    4. '   ' → logprob: -18.50008773803711
    5. '00' → logprob: -18.87508773803711
    6. '`' → logprob: -19.12508773803711
    7. '000' → logprob: -19.12508773803711
    8. '```' → logprob: -20.00008773803711
    9. '(
' → logprob: -20.25008773803711
    10. '
' → logprob: -20.50008773803711

Token 463: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.375
    4. ')' → logprob: -17.75
    5. '"' → logprob: -18.875
    6. '`' → logprob: -19.125
    7. '(' → logprob: -19.875
    8. '00' → logprob: -20.375
    9. '       ' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7294458746910095
    2. ')
' → logprob: -0.7294458746910095
    3. '       ' → logprob: -3.3544459342956543
    4. '           ' → logprob: -7.604445934295654
    5. ')
' → logprob: -8.604445457458496
    6. ')`
' → logprob: -11.229445457458496
    7. '   ' → logprob: -11.479445457458496
    8. ')return' → logprob: -12.729445457458496
    9. '```' → logprob: -13.229445457458496
    10. '               ' → logprob: -13.229445457458496

Token 465: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31340375542640686
    2. '           ' → logprob: -1.3134037256240845
    3. '<|end|>' → logprob: -9.438404083251953
    4. 'else' → logprob: -10.563404083251953
    5. '               ' → logprob: -11.563404083251953
    6. '```' → logprob: -11.813404083251953
    7. '   ' → logprob: -12.063404083251953
    8. '<|end|>' → logprob: -12.563404083251953
    9. ' else' → logprob: -12.688404083251953
    10. '	       ' → logprob: -13.438404083251953

Token 466: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0380852073431015
    2. '       ' → logprob: -3.2880852222442627
    3. 'continue' (adapté à ' continue') → logprob: -10.538084983825684
    4. ' continue' → logprob: -11.538084983825684
    5. '               ' → logprob: -12.913084983825684
    6. '   ' → logprob: -13.788084983825684
    7. 'else' → logprob: -13.913084983825684
    8. '		' → logprob: -14.163084983825684
    9. '
' → logprob: -14.788084983825684
    10. '```' → logprob: -14.788084983825684

Token 467: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.416665640543215e-05
    2. '```' → logprob: -10.87503433227539
    3. '<|end|>' → logprob: -11.75003433227539
    4. '
' → logprob: -12.37503433227539
    5. '        
' → logprob: -13.00003433227539
    6. '           ' → logprob: -15.37503433227539
    7. '<|end|>' → logprob: -16.00003433227539
    8. '   ' → logprob: -16.25003433227539
    9. '``' → logprob: -16.62503433227539
    10. 'print' → logprob: -16.62503433227539

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001887591351987794
    2. '```' → logprob: -8.625188827514648
    3. '<|end|>' → logprob: -12.000188827514648
    4. '           ' → logprob: -14.000188827514648
    5. '   ' → logprob: -14.250188827514648
    6. '``' → logprob: -14.250188827514648
    7. '        
' → logprob: -14.750188827514648
    8. '<|end|>' → logprob: -15.625188827514648
    9. '	' → logprob: -16.62518882751465
    10. '               ' → logprob: -16.87518882751465

Token 469: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0232771597802639
    2. 'print' (adapté à ' print') → logprob: -3.7732770442962646
    3. ' print' → logprob: -10.523277282714844
    4. '   ' → logprob: -12.648277282714844
    5. '```' → logprob: -13.773277282714844
    6. '           ' → logprob: -15.523277282714844
    7. '        
' → logprob: -15.898277282714844
    8. '<|end|>' → logprob: -17.648277282714844
    9. '               ' → logprob: -18.148277282714844
    10. '	print' → logprob: -18.273277282714844

Token 470: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0011780819622799754
    2. 'dp' → logprob: -6.75117826461792
    3. ' dp' → logprob: -12.001177787780762
    4. '(' → logprob: -13.376177787780762
    5. '	dp' → logprob: -16.751178741455078
    6. ' (' → logprob: -17.001178741455078
    7. '_dp' → logprob: -19.626178741455078
    8. '   ' → logprob: -20.001178741455078
    9. '(df' → logprob: -20.501178741455078
    10. '(
' → logprob: -20.626178741455078

Token 471: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.45848218582978e-06
    2. 'n' → logprob: -13.00000286102295
    3. '[s' → logprob: -16.000001907348633
    4. ')n' → logprob: -16.875001907348633
    5. ')[' → logprob: -18.000001907348633
    6. '[int' → logprob: -18.625001907348633
    7. ')' → logprob: -19.000001907348633
    8. '[' → logprob: -19.625001907348633
    9. '[N' → logprob: -21.375001907348633
    10. '(n' → logprob: -21.375001907348633

Token 472: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000923965300898999
    2. '[s' → logprob: -7.000924110412598
    3. 's' → logprob: -11.625924110412598
    4. ']' → logprob: -13.375924110412598
    5. '[' → logprob: -13.750924110412598
    6. ' ][' → logprob: -14.250924110412598
    7. '   ' → logprob: -16.75092315673828
    8. '"][' → logprob: -17.12592315673828
    9. ',s' → logprob: -18.12592315673828
    10. '(s' → logprob: -18.12592315673828

Token 473: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. ' s' → logprob: -17.875
    3. '[s' → logprob: -20.75
    4. '{s' → logprob: -24.0
    5. '<s' → logprob: -25.0
    6. '(s' → logprob: -25.625
    7. '`s' → logprob: -25.75
    8. '	s' → logprob: -26.375
    9. ')s' → logprob: -26.75
    10. '_s' → logprob: -26.75

Token 474: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859509319067001
    2. '])' → logprob: -3.0485951900482178
    3. '})' → logprob: -12.673595428466797
    4. ']' → logprob: -12.798595428466797
    5. '）' → logprob: -14.798595428466797
    6. ')]' → logprob: -14.798595428466797
    7. ')
' → logprob: -15.298595428466797
    8. ')])' → logprob: -15.298595428466797
    9. '))' → logprob: -15.423595428466797
    10. ' )' → logprob: -15.548595428466797

Token 475: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6932855844497681
    2. ' __' → logprob: -0.6932855844497681
    3. '_name' → logprob: -9.818285942077637
    4. '_' → logprob: -9.818285942077637
    5. 'name' → logprob: -11.443285942077637
    6. ' ' → logprob: -11.943285942077637
    7. '___' → logprob: -12.068285942077637
    8. ' ' → logprob: -12.693285942077637
    9. '```' → logprob: -13.943285942077637
    10. '/__' → logprob: -14.693285942077637

Token 477: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02768414281308651
    2. '==' → logprob: -3.777684211730957
    3. ' ==' → logprob: -5.527684211730957
    4. '=="' → logprob: -9.277684211730957
    5. '__.__' → logprob: -9.402684211730957
    6. '```' → logprob: -10.027684211730957
    7. '[' → logprob: -10.277684211730957
    8. '.__' → logprob: -10.402684211730957
    9. ' __' → logprob: -10.652684211730957
    10. 'if' → logprob: -11.027684211730957

Token 478: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00031580092036165297
    2. '__.__' → logprob: -8.37531566619873
    3. '==' → logprob: -9.50031566619873
    4. '__.' → logprob: -11.75031566619873
    5. ' ==' → logprob: -13.62531566619873
    6. '=="' → logprob: -15.12531566619873
    7. '__["' → logprob: -15.62531566619873
    8. '___' → logprob: -15.75031566619873
    9. '```' → logprob: -16.000316619873047
    10. '____' → logprob: -16.125316619873047

Token 479: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.40999770164489746
    2. ' ==' → logprob: -1.7849977016448975
    3. '__' → logprob: -1.9099977016448975
    4. '=="' → logprob: -4.034997940063477
    5. '=='' → logprob: -5.909997940063477
    6. '__.__' → logprob: -10.659997940063477
    7. '.__' → logprob: -11.534997940063477
    8. '===' → logprob: -11.659997940063477
    9. '[' → logprob: -12.534997940063477
    10. '['' → logprob: -12.659997940063477

Token 480: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3132706880569458
    2. ''' → logprob: -1.3132706880569458
    3. '__' → logprob: -11.938270568847656
    4. ' "__' → logprob: -13.188270568847656
    5. ''"' → logprob: -14.938270568847656
    6. ' '__' → logprob: -16.063270568847656
    7. '"'' → logprob: -16.563270568847656
    8. '"user' → logprob: -17.688270568847656
    9. '"name' → logprob: -18.188270568847656
    10. '('__' → logprob: -18.438270568847656

Token 481: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00013285996101330966
    2. 'name' → logprob: -9.37513256072998
    3. '__' → logprob: -10.62513256072998
    4. '_main' → logprob: -10.75013256072998
    5. '__':
' → logprob: -13.75013256072998
    6. 'built' → logprob: -15.12513256072998
    7. 'if' → logprob: -15.37513256072998
    8. 'm' → logprob: -16.000133514404297
    9. 'py' → logprob: -16.375133514404297
    10. '__.' → logprob: -16.875133514404297

Token 482: '__':
' (ID: 39314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7968360185623169
    2. '__':
' → logprob: -0.7968360185623169
    3. '':' → logprob: -2.6718358993530273
    4. '__' → logprob: -4.046835899353027
    5. '__:' → logprob: -5.421835899353027
    6. '():' → logprob: -5.796835899353027
    7. '():
' → logprob: -5.921835899353027
    8. '__":
' → logprob: -7.796835899353027
    9. ''>' → logprob: -8.046835899353027
    10. '('__' → logprob: -9.046835899353027

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06430424004793167
    2. 'main' → logprob: -2.8143043518066406
    3. ' main' → logprob: -6.189304351806641
    4. '	main' → logprob: -8.18930435180664
    5. '   ' → logprob: -12.68930435180664
    6. ' ' → logprob: -14.43930435180664
    7. '_main' → logprob: -14.68930435180664
    8. '  ' → logprob: -15.18930435180664
    9. '```' → logprob: -15.18930435180664
    10. '(main' → logprob: -15.56430435180664

Token 484: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '   ' → logprob: -24.25
    4. '	main' → logprob: -24.25
    5. '.main' → logprob: -28.0
    6. 'import' → logprob: -28.375
    7. '_main' → logprob: -29.125
    8. '(main' → logprob: -29.75
    9. 'Main' → logprob: -30.5
    10. 'sys' → logprob: -31.0

Token 485: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 483
Tokens correctement prédits (1ère position, stricte): 200
Tokens correctement prédits (1ère position, avec adaptation): 205
Tokens correctement prédits (top 10): 398
Précision stricte (1ère position): 41.41%
Précision adaptée (1ère position): 42.44%
Précision (top 10): 82.40%
================================================================================
