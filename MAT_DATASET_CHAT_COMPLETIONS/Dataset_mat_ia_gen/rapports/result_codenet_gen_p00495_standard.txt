================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A,B=map(int,input().split())
A_cards=list(map(int,input().split()))
B_cards=list(map(int,input().split()))
dp=[[0]*(B+1) for _ in range(A+1)]
max_score=0
for i in range(1,A+1):
    for j in range(1,B+1):
        if A_cards[i-1]==B_cards[j-1]:
            dp[i][j]=dp[i-1][j-1]+1
            if dp[i][j]>max_score:
                max_score=dp[i][j]
print(max_score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1431007981300354
    2. '1' → logprob: -2.7681007385253906
    3. ' ' → logprob: -2.8931007385253906
    4. '[]' → logprob: -4.518100738525391
    5. '[' → logprob: -6.643100738525391
    6. '(' → logprob: -7.393100738525391
    7. '10' → logprob: -7.393100738525391
    8. ' []' → logprob: -7.393100738525391
    9. 'map' → logprob: -8.76810073852539
    10. 'input' → logprob: -9.14310073852539

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004089796915650368
    2. '(lambda' → logprob: -6.504089832305908
    3. '```' → logprob: -7.004089832305908
    4. '(int' → logprob: -7.379089832305908
    5. '<|end|>' → logprob: -8.50408935546875
    6. '(user' → logprob: -9.00408935546875
    7. '(input' → logprob: -9.12908935546875
    8. '(str' → logprob: -9.50408935546875
    9. ')' → logprob: -9.62908935546875
    10. '(
' → logprob: -10.37908935546875

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6869962811470032
    2. ')' → logprob: -0.9369962811470032
    3. ',' → logprob: -3.1869962215423584
    4. ',input' → logprob: -3.6869962215423584
    5. '(' → logprob: -3.8119962215423584
    6. '<|end|>' → logprob: -5.8119964599609375
    7. 'input' → logprob: -6.6869964599609375
    8. '(user' → logprob: -6.8119964599609375
    9. ')(' → logprob: -6.8119964599609375
    10. '`)' → logprob: -6.9369964599609375

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31570079922676086
    2. '()' → logprob: -1.4407007694244385
    3. ')' → logprob: -4.690701007843018
    4. '(' → logprob: -4.815701007843018
    5. '().' → logprob: -4.815701007843018
    6. '();)' → logprob: -6.190701007843018
    7. '`()' → logprob: -7.065701007843018
    8. '());' → logprob: -7.315701007843018
    9. '()>' → logprob: -7.440701007843018
    10. '(()' → logprob: -7.690701007843018

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009446957265026867
    2. 'strip' → logprob: -7.5009446144104
    3. ')' → logprob: -8.000945091247559
    4. 'rstrip' → logprob: -10.875945091247559
    5. 'read' → logprob: -11.000945091247559
    6. ' split' → logprob: -11.250945091247559
    7. '(split' → logprob: -12.375945091247559
    8. 'replace' → logprob: -13.250945091247559
    9. '_split' → logprob: -14.875945091247559
    10. 'plit' → logprob: -15.375945091247559

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004185840487480164
    2. '))' → logprob: -6.254185676574707
    3. '())' → logprob: -6.254185676574707
    4. '`)' → logprob: -8.754185676574707
    5. '()' → logprob: -9.129185676574707
    6. '(' → logprob: -10.254185676574707
    7. ')`' → logprob: -11.379185676574707
    8. '')' → logprob: -12.754185676574707
    9. ' )' → logprob: -12.754185676574707
    10. ')**' → logprob: -13.629185676574707

Token 9: 'A' (ID: 32)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38172581791877747
    2. '*' → logprob: -2.256725788116455
    3. '#' → logprob: -2.881725788116455
    4. '
' → logprob: -3.131725788116455
    5. '\n' → logprob: -3.381725788116455
    6. '+
' → logprob: -3.381725788116455
    7. 'c' → logprob: -5.006725788116455
    8. 'if' → logprob: -5.131725788116455
    9. 'x' → logprob: -5.506725788116455
    10. 'a' → logprob: -5.506725788116455

Token 10: '_cards' (ID: 101651)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005107102915644646
    2. '%' → logprob: -5.3801069259643555
    3. '*' → logprob: -8.255106925964355
    4. ' +' → logprob: -9.380106925964355
    5. ' ' → logprob: -10.255106925964355
    6. '+A' → logprob: -10.755106925964355
    7. '#' → logprob: -11.255106925964355
    8. '**' → logprob: -11.255106925964355
    9. '+B' → logprob: -11.255106925964355
    10. '>' → logprob: -11.380106925964355

Token 11: '=list' (ID: 93413)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09791238605976105
    2. '[' → logprob: -2.597912311553955
    3. '_' → logprob: -4.972912311553955
    4. '=' → logprob: -5.722912311553955
    5. '[:]' → logprob: -5.847912311553955
    6. '.count' → logprob: -6.597912311553955
    7. '.setdefault' → logprob: -7.472912311553955
    8. ' =' → logprob: -7.597912311553955
    9. '```' → logprob: -7.722912311553955
    10. '[:' → logprob: -8.097912788391113

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001322742085903883
    2. '(int' → logprob: -7.1263227462768555
    3. '()' → logprob: -8.251322746276855
    4. '(A' → logprob: -9.376322746276855
    5. '(input' → logprob: -10.126322746276855
    6. '(range' → logprob: -10.501322746276855
    7. '(`' → logprob: -11.126322746276855
    8. '(

' → logprob: -11.376322746276855
    9. '(
' → logprob: -11.501322746276855
    10. '(map' → logprob: -11.626322746276855

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00024822709383443
    2. '<int' → logprob: -9.375247955322266
    3. '(' → logprob: -9.500247955322266
    4. 'int' → logprob: -9.750247955322266
    5. '=int' → logprob: -11.125247955322266
    6. '[int' → logprob: -11.250247955322266
    7. ',int' → logprob: -14.125247955322266
    8. ' (' → logprob: -14.875247955322266
    9. ']int' → logprob: -15.375247955322266
    10. ':int' → logprob: -15.500247955322266

Token 14: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4823963940143585
    2. ',input' → logprob: -0.9823963642120361
    3. ',' → logprob: -5.732396602630615
    4. '(' → logprob: -6.232396602630615
    5. '(int' → logprob: -6.357396602630615
    6. ',int' → logprob: -6.857396602630615
    7. '=input' → logprob: -9.107396125793457
    8. 'input' → logprob: -9.857396125793457
    9. ' (' → logprob: -9.982396125793457
    10. ')' → logprob: -10.357396125793457

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.953082341467962e-05
    2. '(.' → logprob: -11.250039100646973
    3. '()' → logprob: -11.375039100646973
    4. ' ().' → logprob: -11.750039100646973
    5. '(' → logprob: -12.500039100646973
    6. '.' → logprob: -14.000039100646973
    7. '())' → logprob: -14.375039100646973
    8. '()))' → logprob: -14.625039100646973
    9. '()).' → logprob: -15.125039100646973
    10. '()));' → logprob: -15.625039100646973

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.531315314830863e-06
    2. 'strip' → logprob: -12.750003814697266
    3. ' split' → logprob: -14.750003814697266
    4. '(split' → logprob: -15.750003814697266
    5. 'spl' → logprob: -17.500003814697266
    6. 'rstrip' → logprob: -17.500003814697266
    7. 's' → logprob: -20.250003814697266
    8. 'plit' → logprob: -20.875003814697266
    9. 'startswith' → logprob: -21.625003814697266
    10. '.split' → logprob: -21.750003814697266

Token 17: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3124128580093384
    2. '(' → logprob: -1.8124128580093384
    3. '())' → logprob: -2.687412738800049
    4. '()' → logprob: -4.062412738800049
    5. '))' → logprob: -4.562412738800049
    6. ')' → logprob: -4.937412738800049
    7. '(','' → logprob: -7.562412738800049
    8. '('' → logprob: -7.812412738800049
    9. '())))' → logprob: -8.437413215637207
    10. '(),' → logprob: -8.437413215637207

Token 18: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4313558042049408
    2. 'C' → logprob: -1.0563558340072632
    3. 'A' → logprob: -6.931355953216553
    4. 'for' → logprob: -8.056355476379395
    5. 'b' → logprob: -8.306355476379395
    6. 'count' → logprob: -8.556355476379395
    7. 'c' → logprob: -8.806355476379395
    8. 'print' → logprob: -8.931355476379395
    9. 'result' → logprob: -8.931355476379395
    10. 's' → logprob: -8.931355476379395

Token 19: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -3.2378600735682994e-05
    2. '_' → logprob: -11.000032424926758
    3. '_codes' → logprob: -12.875032424926758
    4. ')_' → logprob: -13.250032424926758
    5. '_tokens' → logprob: -13.375032424926758
    6. '```' → logprob: -13.750032424926758
    7. ''_' → logprob: -14.000032424926758
    8. '_car' → logprob: -14.000032424926758
    9. '_chars' → logprob: -14.125032424926758
    10. ' _' → logprob: -14.250032424926758

Token 20: '=list' (ID: 93413)
  Prédit: '=list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=list' → logprob: -0.4778786897659302
    2. '=' → logprob: -0.9778786897659302
    3. '.' → logprob: -5.977878570556641
    4. '.=' → logprob: -8.35287857055664
    5. ' =' → logprob: -8.47787857055664
    6. '=.' → logprob: -8.47787857055664
    7. '=int' → logprob: -8.85287857055664
    8. '=[]' → logprob: -9.22787857055664
    9. '=input' → logprob: -9.72787857055664
    10. ')=' → logprob: -9.85287857055664

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020724674686789513
    2. '((' → logprob: -7.127072334289551
    3. '(range' → logprob: -8.75207233428955
    4. '(list' → logprob: -9.00207233428955
    5. '(

' → logprob: -9.00207233428955
    6. '(map' → logprob: -9.00207233428955
    7. '(int' → logprob: -9.50207233428955
    8. '("("' → logprob: -9.50207233428955
    9. '(paren' → logprob: -10.12707233428955
    10. '(+' → logprob: -10.12707233428955

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.337155355140567e-05
    2. 'int' → logprob: -10.625062942504883
    3. '<int' → logprob: -10.750062942504883
    4. '=int' → logprob: -12.000062942504883
    5. ' (' → logprob: -12.250062942504883
    6. '(' → logprob: -12.250062942504883
    7. '[int' → logprob: -14.000062942504883
    8. ',int' → logprob: -14.500062942504883
    9. ']int' → logprob: -15.750062942504883
    10. ' int' → logprob: -16.000062942504883

Token 23: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02710755169391632
    2. ',int' → logprob: -4.4021077156066895
    3. '<int' → logprob: -5.0271077156066895
    4. '=int' → logprob: -6.0271077156066895
    5. 'int' → logprob: -6.5271077156066895
    6. '.int' → logprob: -6.9021077156066895
    7. '().' → logprob: -6.9021077156066895
    8. '[int' → logprob: -6.9021077156066895
    9. ').' → logprob: -8.402107238769531
    10. '.' → logprob: -8.402107238769531

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011561851017177105
    2. '.' → logprob: -5.261561870574951
    3. '(int' → logprob: -6.011561870574951
    4. '(.' → logprob: -6.511561870574951
    5. ' .' → logprob: -7.261561870574951
    6. '.int' → logprob: -7.261561870574951
    7. ').' → logprob: -8.136561393737793
    8. '<int' → logprob: -8.511561393737793
    9. 'int' → logprob: -8.636561393737793
    10. '[int' → logprob: -9.636561393737793

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -14.000001907348633
    3. ' split' → logprob: -14.750001907348633
    4. ')' → logprob: -16.000001907348633
    5. '```' → logprob: -16.875001907348633
    6. '(split' → logprob: -17.125001907348633
    7. 'spl' → logprob: -18.000001907348633
    8. '.split' → logprob: -18.125001907348633
    9. 'plit' → logprob: -18.375001907348633
    10. 'rstrip' → logprob: -18.500001907348633

Token 26: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.277686208486557
    2. '))' → logprob: -1.6526862382888794
    3. '())' → logprob: -3.65268611907959
    4. ')' → logprob: -4.27768611907959
    5. '()' → logprob: -4.52768611907959
    6. '()))
' → logprob: -9.02768611907959
    7. '(' → logprob: -9.15268611907959
    8. '()>' → logprob: -11.02768611907959
    9. '()));' → logprob: -11.02768611907959
    10. '()))

' → logprob: -11.65268611907959

Token 27: 'dp' (ID: 19037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.555432677268982
    2. 'score' → logprob: -1.680432677268982
    3. 'A' → logprob: -2.1804327964782715
    4. 'result' → logprob: -2.3054327964782715
    5. 'count' → logprob: -2.4304327964782715
    6. 's' → logprob: -2.9304327964782715
    7. 'c' → logprob: -2.9304327964782715
    8. 'sum' → logprob: -3.0554327964782715
    9. 'C' → logprob: -3.1804327964782715
    10. 'a' → logprob: -3.5554327964782715

Token 28: '=[[' (ID: 112637)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05241132900118828
    2. '=' → logprob: -3.6774113178253174
    3. ' =' → logprob: -3.8024113178253174
    4. '=[' → logprob: -6.0524115562438965
    5. '_' → logprob: -7.6774115562438965
    6. '\[' → logprob: -9.052411079406738
    7. ' =[' → logprob: -9.177411079406738
    8. '[i' → logprob: -9.802411079406738
    9. '=[]' → logprob: -9.927411079406738
    10. '=[[' → logprob: -10.052411079406738

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03309400752186775
    2. 'False' → logprob: -4.0330939292907715
    3. '-' → logprob: -4.2830939292907715
    4. '-f' → logprob: -7.6580939292907715
    5. '[' → logprob: -7.9080939292907715
    6. 'float' → logprob: -9.28309440612793
    7. '[[' → logprob: -10.15809440612793
    8. '[-' → logprob: -11.03309440612793
    9. 'None' → logprob: -11.65809440612793
    10. '[]' → logprob: -12.40809440612793

Token 30: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.629753053188324
    2. ']*(' → logprob: -1.0047531127929688
    3. ']*' → logprob: -2.8797531127929688
    4. ' for' → logprob: -3.6297531127929688
    5. 'for' → logprob: -4.004753112792969
    6. ' ]' → logprob: -9.379753112792969
    7. ']+' → logprob: -9.504753112792969
    8. ')' → logprob: -10.504753112792969
    9. ']]' → logprob: -11.129753112792969
    10. ',' → logprob: -11.754753112792969

Token 31: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.17179156839847565
    2. 'A' → logprob: -3.0467915534973145
    3. '101' → logprob: -3.0467915534973145
    4. '100' → logprob: -4.1717915534973145
    5. '(B' → logprob: -4.2967915534973145
    6. '102' → logprob: -5.5467915534973145
    7. '2' → logprob: -5.6717915534973145
    8. '201' → logprob: -5.7967915534973145
    9. '51' → logprob: -6.0467915534973145
    10. '(' → logprob: -6.2967915534973145

Token 32: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.632542913896032e-05
    2. ' +' → logprob: -10.000046730041504
    3. '[' → logprob: -14.250046730041504
    4. '+[' → logprob: -16.125045776367188
    5. '＋' → logprob: -17.000045776367188
    6. ')' → logprob: -17.750045776367188
    7. ')+' → logprob: -18.000045776367188
    8. '+
' → logprob: -18.000045776367188
    9. '+B' → logprob: -18.125045776367188
    10. '```' → logprob: -18.250045776367188

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34885409474372864
    2. '+' → logprob: -1.2238540649414062
    3. ' +' → logprob: -8.598854064941406
    4. '+B' → logprob: -9.348854064941406
    5. ' ' → logprob: -9.723854064941406
    6. 'A' → logprob: -10.223854064941406
    7. 'B' → logprob: -11.473854064941406
    8. '+A' → logprob: -11.598854064941406
    9. '2' → logprob: -11.848854064941406
    10. '```' → logprob: -13.098854064941406

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019042797794099897
    2. ')]' → logprob: -8.750190734863281
    3. ' )' → logprob: -11.625190734863281
    4. ']' → logprob: -11.625190734863281
    5. 'for' → logprob: -11.875190734863281
    6. ' for' → logprob: -12.375190734863281
    7. '+' → logprob: -13.125190734863281
    8. '```' → logprob: -15.750190734863281
    9. ' ' → logprob: -15.875190734863281
    10. ')
' → logprob: -16.37519073486328

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3135250508785248
    2. 'for' → logprob: -1.3135250806808472
    3. ']' → logprob: -8.438525199890137
    4. '[' → logprob: -10.938525199890137
    5. ')' → logprob: -11.563525199890137
    6. '	for' → logprob: -11.563525199890137
    7. '+[' → logprob: -12.813525199890137
    8. '+' → logprob: -13.188525199890137
    9. ']+' → logprob: -13.688525199890137
    10. ']*(' → logprob: -13.938525199890137

Token 36: ' _' (ID: 1175)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20170831680297852
    2. 'in' → logprob: -1.7017083168029785
    3. 'range' → logprob: -8.82670783996582
    4. '_' → logprob: -9.45170783996582
    5. ' i' → logprob: -10.57670783996582
    6. 'i' → logprob: -10.82670783996582
    7. ' range' → logprob: -11.20170783996582
    8. ' ' → logprob: -11.82670783996582
    9. '(' → logprob: -13.32670783996582
    10. '(range' → logprob: -14.45170783996582

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019299437990412116
    2. ' range' → logprob: -6.251929759979248
    3. '(range' → logprob: -13.751930236816406
    4. '	range' → logprob: -15.501930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '  ' → logprob: -18.376930236816406
    7. '   ' → logprob: -18.376930236816406
    8. '[' → logprob: -18.626930236816406
    9. 'r' → logprob: -19.376930236816406
    10. 'rang' → logprob: -19.501930236816406

Token 39: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00011510594777064398
    2. '(' → logprob: -9.250115394592285
    3. 'A' → logprob: -11.625115394592285
    4. ' (' → logprob: -12.625115394592285
    5. '(a' → logprob: -12.750115394592285
    6. '((' → logprob: -12.750115394592285
    7. '(B' → logprob: -14.875115394592285
    8. ')(' → logprob: -16.00011444091797
    9. ' A' → logprob: -16.37511444091797
    10. '```' → logprob: -16.37511444091797

Token 40: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.2729995988775045e-06
    2. ')]' → logprob: -12.375006675720215
    3. ' +' → logprob: -13.625006675720215
    4. ')' → logprob: -15.625006675720215
    5. '+
' → logprob: -15.625006675720215
    6. '+)' → logprob: -16.7500057220459
    7. '＋' → logprob: -17.1250057220459
    8. '1' → logprob: -17.1250057220459
    9. ')])' → logprob: -17.3750057220459
    10. '+"]' → logprob: -17.3750057220459

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -16.375009536743164
    4. '2' → logprob: -16.500009536743164
    5. '   ' → logprob: -17.250009536743164
    6. '+' → logprob: -17.625009536743164
    7. '```' → logprob: -18.000009536743164
    8. '(' → logprob: -18.125009536743164
    9. '１' → logprob: -18.125009536743164
    10. 'A' → logprob: -18.250009536743164

Token 42: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00031508569372817874
    2. ')' → logprob: -8.125314712524414
    3. ']' → logprob: -11.000314712524414
    4. ')])' → logprob: -14.000314712524414
    5. ')],' → logprob: -14.625314712524414
    6. '])]' → logprob: -15.250314712524414
    7. ')][' → logprob: -15.500314712524414
    8. '))' → logprob: -16.375314712524414
    9. '])' → logprob: -16.375314712524414
    10. ')].' → logprob: -16.500314712524414

Token 43: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003183420980349183
    2. ' for' → logprob: -6.003183364868164
    3. 'dp' → logprob: -8.003183364868164
    4. '
' → logprob: -8.878183364868164
    5. '```' → logprob: -9.628183364868164
    6. '<|end|>' → logprob: -9.878183364868164
    7. '\' → logprob: -10.503183364868164
    8. '\n' → logprob: -11.253183364868164
    9. '' → logprob: -11.253183364868164
    10. '[' → logprob: -11.378183364868164

Token 44: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20583492517471313
    2. '_score' → logprob: -2.5808348655700684
    3. '_val' → logprob: -2.9558348655700684
    4. '_dp' → logprob: -3.4558348655700684
    5. '_value' → logprob: -4.580834865570068
    6. '_len' → logprob: -4.705834865570068
    7. '_length' → logprob: -6.330834865570068
    8. '_scores' → logprob: -6.580834865570068
    9. 'dp' → logprob: -7.080834865570068
    10. '_count' → logprob: -7.580834865570068

Token 45: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12723560631275177
    2. ' =' → logprob: -2.1272356510162354
    3. '=[' → logprob: -9.127235412597656
    4. '=max' → logprob: -9.252235412597656
    5. '[' → logprob: -10.627235412597656
    6. '=[]' → logprob: -11.002235412597656
    7. '=[[' → logprob: -11.002235412597656
    8. ' =[' → logprob: -11.377235412597656
    9. '_=' → logprob: -11.502235412597656
    10. '=int' → logprob: -11.627235412597656

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003111519617959857
    2. ' ' → logprob: -8.125310897827148
    3. '-' → logprob: -12.000310897827148
    4. '[' → logprob: -12.250310897827148
    5. 'float' → logprob: -13.250310897827148
    6. 'max' → logprob: -13.875310897827148
    7. ' -' → logprob: -15.562810897827148
    8. '[[' → logprob: -15.562810897827148
    9. 'dp' → logprob: -15.937810897827148
    10. ' [' → logprob: -16.00031089782715

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01864488422870636
    2. ' for' → logprob: -4.6436448097229
    3. '
' → logprob: -4.7686448097229
    4. '\n' → logprob: -8.768645286560059
    5. '' → logprob: -9.518645286560059
    6. '<|end|>' → logprob: -9.768645286560059
    7. '```' → logprob: -10.268645286560059
    8. ' 
' → logprob: -11.268645286560059
    9. '
' → logprob: -11.768645286560059
    10. '  
' → logprob: -12.393645286560059

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003289096348453313
    2. ' for' → logprob: -8.12532901763916
    3. '```' → logprob: -10.37532901763916
    4. '<|end|>' → logprob: -14.50032901763916
    5. '	for' → logprob: -14.75032901763916
    6. '
' → logprob: -15.25032901763916
    7. 'i' → logprob: -15.62532901763916
    8. '``' → logprob: -16.125328063964844
    9. '\n' → logprob: -16.375328063964844
    10. '\' → logprob: -16.500328063964844

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008232106338255107
    2. 'i' → logprob: -7.125823020935059
    3. '_i' → logprob: -12.375823020935059
    4. ' ' → logprob: -12.750823020935059
    5. '	i' → logprob: -12.750823020935059
    6. ' _' → logprob: -13.125823020935059
    7. ' ' → logprob: -13.500823020935059
    8. ' A' → logprob: -13.625823020935059
    9. '_' → logprob: -13.625823020935059
    10. ' range' → logprob: -13.875823020935059

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10033068060874939
    2. 'in' → logprob: -2.3503305912017822
    3. '+' → logprob: -9.350330352783203
    4. ' ' → logprob: -10.600330352783203
    5. '1' → logprob: -12.600330352783203
    6. '	in' → logprob: -12.600330352783203
    7. '```' → logprob: -12.975330352783203
    8. '0' → logprob: -13.850330352783203
    9. 'range' → logprob: -14.350330352783203
    10. '   ' → logprob: -15.600330352783203

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519293427467346
    2. ' range' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.501930236816406
    4. '(range' → logprob: -16.626930236816406
    5. '	range' → logprob: -16.626930236816406
    6. '```' → logprob: -18.126930236816406
    7. ')' → logprob: -18.751930236816406
    8. '   ' → logprob: -19.001930236816406
    9. ' xrange' → logprob: -19.001930236816406
    10. '1' → logprob: -19.126930236816406

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011049231514334679
    2. '(A' → logprob: -4.511049270629883
    3. ' (' → logprob: -14.636049270629883
    4. '1' → logprob: -15.386049270629883
    5. '(i' → logprob: -15.636049270629883
    6. '(len' → logprob: -15.636049270629883
    7. '(
' → logprob: -16.011049270629883
    8. ' ' → logprob: -16.511049270629883
    9. '(a' → logprob: -16.636049270629883
    10. '((' → logprob: -16.886049270629883

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31336045265197754
    2. 'A' → logprob: -1.3133604526519775
    3. '0' → logprob: -9.688360214233398
    4. ' A' → logprob: -10.438360214233398
    5. ' ' → logprob: -12.313360214233398
    6. '(A' → logprob: -13.938360214233398
    7. 'B' → logprob: -14.563360214233398
    8. '   ' → logprob: -14.938360214233398
    9. '(' → logprob: -15.188360214233398
    10. ')' → logprob: -15.688360214233398

Token 54: ',A' (ID: 59196)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0343569815158844
    2. ',A' → logprob: -3.5343570709228516
    3. ' ,' → logprob: -5.534357070922852
    4. ',i' → logprob: -8.659357070922852
    5. ',len' → logprob: -8.659357070922852
    6. ')' → logprob: -9.159357070922852
    7. ',B' → logprob: -9.909357070922852
    8. ' ' → logprob: -10.409357070922852
    9. '(A' → logprob: -11.159357070922852
    10. ',
' → logprob: -11.409357070922852

Token 55: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2200749754119897e-06
    2. ' +' → logprob: -13.125001907348633
    3. '+
' → logprob: -16.750001907348633
    4. '+B' → logprob: -17.375001907348633
    5. '+)' → logprob: -17.875001907348633
    6. '1' → logprob: -18.250001907348633
    7. '+i' → logprob: -18.375001907348633
    8. ')+' → logprob: -18.375001907348633
    9. '+A' → logprob: -18.875001907348633
    10. '＋' → logprob: -19.625001907348633

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.68022444692906e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.750046730041504
    4. '```' → logprob: -15.125046730041504
    5. ')' → logprob: -15.750046730041504
    6. 'i' → logprob: -16.62504768371582
    7. '+' → logprob: -16.68754768371582
    8. '2' → logprob: -16.87504768371582
    9. '):
' → logprob: -17.18754768371582
    10. '-' → logprob: -17.25004768371582

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027057272382080555
    2. ':' → logprob: -6.0027055740356445
    3. '):
' → logprob: -8.877705574035645
    4. ')' → logprob: -9.377705574035645
    5. '+' → logprob: -13.127705574035645
    6. ',' → logprob: -13.627705574035645
    7. ']:' → logprob: -13.752705574035645
    8. '}:' → logprob: -14.752705574035645
    9. '):
' → logprob: -14.877705574035645
    10. ' ):' → logprob: -15.252705574035645

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23853656649589539
    2. ' for' → logprob: -1.9885365962982178
    3. '<|end|>' → logprob: -3.2385365962982178
    4. ' ' → logprob: -3.8635365962982178
    5. 'for' → logprob: -4.988536357879639
    6. ' 
' → logprob: -6.488536357879639
    7. '    
' → logprob: -6.488536357879639
    8. ':' → logprob: -6.988536357879639
    9. '```' → logprob: -6.988536357879639
    10. '
' → logprob: -7.113536357879639

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11443158239126205
    2. 'for' (adapté à ' for') → logprob: -2.239431619644165
    3. '   ' → logprob: -7.239431381225586
    4. ' ' → logprob: -7.364431381225586
    5. '    ' → logprob: -8.864431381225586
    6. '	for' → logprob: -9.739431381225586
    7. '<|end|>' → logprob: -11.364431381225586
    8. '       ' → logprob: -11.489431381225586
    9. '  ' → logprob: -11.739431381225586
    10. '```' → logprob: -11.989431381225586

Token 60: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2781918942928314
    2. 'j' → logprob: -1.5281919240951538
    3. ' range' → logprob: -4.028192043304443
    4. 'range' → logprob: -5.028192043304443
    5. '   ' → logprob: -6.778192043304443
    6. ' ' → logprob: -8.028191566467285
    7. ' in' → logprob: -9.903191566467285
    8. '1' → logprob: -11.403191566467285
    9. '    ' → logprob: -11.403191566467285
    10. '  ' → logprob: -12.028191566467285

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007638447917997837
    2. 'in' → logprob: -4.882638454437256
    3. 'range' → logprob: -11.257637977600098
    4. '   ' → logprob: -11.882637977600098
    5. ' ' → logprob: -12.132637977600098
    6. ' range' → logprob: -13.382637977600098
    7. '1' → logprob: -13.882637977600098
    8. '<|end|>' → logprob: -14.007637977600098
    9. '(' → logprob: -14.132637977600098
    10. '    ' → logprob: -14.257637977600098

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06270824372768402
    2. ' range' → logprob: -2.8127081394195557
    3. '(' → logprob: -7.812708377838135
    4. '1' → logprob: -8.062707901000977
    5. '(range' → logprob: -10.937707901000977
    6. ' ' → logprob: -13.062707901000977
    7. '   ' → logprob: -15.187707901000977
    8. 'for' → logprob: -15.187707901000977
    9. '	range' → logprob: -16.562707901000977
    10. '0' → logprob: -16.937707901000977

Token 63: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015250948490574956
    2. '1' → logprob: -6.501524925231934
    3. '   ' → logprob: -11.001524925231934
    4. ' (' → logprob: -12.876524925231934
    5. 'range' → logprob: -13.376524925231934
    6. ' range' → logprob: -14.001524925231934
    7. ' ' → logprob: -14.626524925231934
    8. ')' → logprob: -15.126524925231934
    9. ',' → logprob: -15.251524925231934
    10. 'for' → logprob: -16.00152587890625

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -11.125020027160645
    3. 'B' → logprob: -13.500020027160645
    4. '   ' → logprob: -13.625020027160645
    5. 'j' → logprob: -13.750020027160645
    6. '0' → logprob: -13.875020027160645
    7. '(' → logprob: -15.250020027160645
    8. 'range' → logprob: -15.250020027160645
    9. 'i' → logprob: -16.87502098083496
    10. 'max' → logprob: -17.50002098083496

Token 65: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.026843227446079254
    2. ',' → logprob: -3.651843309402466
    3. ',A' → logprob: -7.776843070983887
    4. ' ,' → logprob: -9.526843070983887
    5. ',j' → logprob: -10.401843070983887
    6. ' ' → logprob: -12.026843070983887
    7. ',b' → logprob: -12.651843070983887
    8. 'B' → logprob: -12.901843070983887
    9. '   ' → logprob: -13.776843070983887
    10. '，' → logprob: -13.776843070983887

Token 66: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.7491250875755213e-05
    2. '1' → logprob: -10.625027656555176
    3. ' +' → logprob: -13.000027656555176
    4. '+j' → logprob: -14.625027656555176
    5. '```' → logprob: -15.750027656555176
    6. '+i' → logprob: -16.87502670288086
    7. ')+' → logprob: -16.87502670288086
    8. 'j' → logprob: -17.00002670288086
    9. '+
' → logprob: -17.62502670288086
    10. ')' → logprob: -17.75002670288086

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. 'j' → logprob: -13.12500286102295
    3. '+' → logprob: -14.25000286102295
    4. '   ' → logprob: -15.25000286102295
    5. '```' → logprob: -15.50000286102295
    6. ' ' → logprob: -15.62500286102295
    7. ')' → logprob: -17.000003814697266
    8. '-' → logprob: -18.625003814697266
    9. '2' → logprob: -19.000003814697266
    10. '>' → logprob: -19.125003814697266

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005360990762710571
    2. ':' → logprob: -5.630361080169678
    3. ')' → logprob: -6.505361080169678
    4. '):
' → logprob: -8.25536060333252
    5. ']:' → logprob: -14.13036060333252
    6. ',' → logprob: -14.38036060333252
    7. '):
' → logprob: -14.63036060333252
    8. ' ):' → logprob: -14.88036060333252
    9. '):

' → logprob: -15.13036060333252
    10. '}:' → logprob: -15.25536060333252

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4562530517578125
    2. ':' → logprob: -1.2062530517578125
    3. '   ' → logprob: -3.2062530517578125
    4. ' ' → logprob: -4.4562530517578125
    5. ' if' → logprob: -5.5812530517578125
    6. '    ' → logprob: -5.7062530517578125
    7. 'if' → logprob: -5.9562530517578125
    8. '):' → logprob: -7.4562530517578125
    9. ' :' → logprob: -7.4562530517578125
    10. '<|end|>' → logprob: -7.5812530517578125

Token 70: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4532739222049713
    2. ' if' → logprob: -1.203273892402649
    3. '       ' → logprob: -3.5782740116119385
    4. ' ' → logprob: -4.203273773193359
    5. '        ' → logprob: -4.453273773193359
    6. '           ' → logprob: -5.578273773193359
    7. '<|end|>' → logprob: -6.078273773193359
    8. '{' → logprob: -6.828273773193359
    9. '   ' → logprob: -7.578273773193359
    10. '            ' → logprob: -7.703273773193359

Token 71: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.018179677426815033
    2. 'A' → logprob: -4.018179893493652
    3. ' ' → logprob: -10.643179893493652
    4. '	A' → logprob: -13.018179893493652
    5. '(A' → logprob: -13.893179893493652
    6. '   ' → logprob: -14.393179893493652
    7. ' (' → logprob: -14.768179893493652
    8. ' B' → logprob: -15.018179893493652
    9. '(' → logprob: -15.393179893493652
    10. ' ' → logprob: -15.643179893493652

Token 72: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -5.621933451038785e-05
    2. '[i' → logprob: -10.125056266784668
    3. '_tokens' → logprob: -12.500056266784668
    4. '```' → logprob: -12.625056266784668
    5. '[' → logprob: -13.125056266784668
    6. '>' → logprob: -13.125056266784668
    7. '_' → logprob: -13.250056266784668
    8. '[_' → logprob: -14.250056266784668
    9. 'Cards' → logprob: -15.125056266784668
    10. '[j' → logprob: -15.250056266784668

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023797055706381798
    2. '[j' → logprob: -3.773797035217285
    3. '[' → logprob: -7.523797035217285
    4. '[
' → logprob: -12.398797035217285
    5. '```' → logprob: -12.523797035217285
    6. 'i' → logprob: -13.398797035217285
    7. '[I' → logprob: -14.398797035217285
    8. '\[' → logprob: -15.398797035217285
    9. ' [' → logprob: -15.648797035217285
    10. '[A' → logprob: -15.773797035217285

Token 74: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009905342012643814
    2. ' -' → logprob: -8.000990867614746
    3. ']==' → logprob: -8.000990867614746
    4. ']' → logprob: -8.125990867614746
    5. ']>' → logprob: -11.375990867614746
    6. '==' → logprob: -12.500990867614746
    7. '>' → logprob: -13.000990867614746
    8. '1' → logprob: -13.125990867614746
    9. ' ]' → logprob: -13.875990867614746
    10. '```' → logprob: -14.125990867614746

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -12.37501049041748
    3. ']' → logprob: -12.37501049041748
    4. '```' → logprob: -14.00001049041748
    5. '   ' → logprob: -15.25001049041748
    6. ']==' → logprob: -15.75001049041748
    7. '-' → logprob: -15.87501049041748
    8. ')' → logprob: -16.125009536743164
    9. '])' → logprob: -16.562509536743164
    10. ']>' → logprob: -17.625009536743164

Token 76: ']==' (ID: 34128)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6940366625785828
    2. '==' → logprob: -0.6940366625785828
    3. ' ==' → logprob: -7.319036483764648
    4. ' >' → logprob: -9.069036483764648
    5. '>=' → logprob: -10.069036483764648
    6. '=' → logprob: -10.444036483764648
    7. '<' → logprob: -11.069036483764648
    8. '!=' → logprob: -11.319036483764648
    9. '```' → logprob: -12.694036483764648
    10. '">' → logprob: -13.569036483764648

Token 77: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00020449401927180588
    2. ' B' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.750204086303711
    4. ' ' → logprob: -15.375204086303711
    5. '       ' → logprob: -16.50020408630371
    6. '  ' → logprob: -16.62520408630371
    7. '>B' → logprob: -16.75020408630371
    8. '	B' → logprob: -17.12520408630371
    9. '           ' → logprob: -17.12520408630371
    10. '    ' → logprob: -17.37520408630371

Token 78: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -13.500004768371582
    3. 'cards' → logprob: -13.500004768371582
    4. '-' → logprob: -14.375004768371582
    5. '[' → logprob: -15.500004768371582
    6. '_tokens' → logprob: -15.625004768371582
    7. '```' → logprob: -16.125003814697266
    8. ' cards' → logprob: -16.250003814697266
    9. 'Cards' → logprob: -16.625003814697266
    10. '_card' → logprob: -16.875003814697266

Token 79: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.2200749754119897e-06
    2. 'j' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '[' → logprob: -15.000001907348633
    5. '[i' → logprob: -15.375001907348633
    6. '```' → logprob: -16.250001907348633
    7. ' [' → logprob: -16.375001907348633
    8. '	j' → logprob: -16.625001907348633
    9. '[
' → logprob: -16.625001907348633
    10. '       ' → logprob: -17.500001907348633

Token 80: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3782830137643032e-05
    2. ' -' → logprob: -11.37501335144043
    3. '1' → logprob: -13.50001335144043
    4. ']-' → logprob: -15.37501335144043
    5. '[' → logprob: -15.50001335144043
    6. ']' → logprob: -15.87501335144043
    7. '])' → logprob: -16.37501335144043
    8. '0' → logprob: -16.50001335144043
    9. '[-' → logprob: -16.62501335144043
    10. '   ' → logprob: -17.25001335144043

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. ']' → logprob: -12.875011444091797
    3. '<|end|>' → logprob: -13.000011444091797
    4. ' ' → logprob: -13.125011444091797
    5. '-' → logprob: -13.125011444091797
    6. '])' → logprob: -14.500011444091797
    7. '<|end|>' → logprob: -14.500011444091797
    8. '   ' → logprob: -15.375011444091797
    9. '2' → logprob: -15.875011444091797
    10. '```' → logprob: -16.125011444091797

Token 82: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014365989714860916
    2. ':' → logprob: -4.514366149902344
    3. ')' → logprob: -6.014366149902344
    4. ']:' → logprob: -7.639366149902344
    5. '):
' → logprob: -8.139366149902344
    6. ']):' → logprob: -10.139366149902344
    7. ' ):' → logprob: -11.139366149902344
    8. '):
' → logprob: -11.889366149902344
    9. ')]' → logprob: -12.514366149902344
    10. ' and' → logprob: -12.514366149902344

Token 83: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006448676809668541
    2. 'dp' → logprob: -5.131448745727539
    3. ':
' → logprob: -7.631448745727539
    4. ' dp' → logprob: -10.756448745727539
    5. '	dp' → logprob: -12.131448745727539
    6. '):' → logprob: -13.006448745727539
    7. '_dp' → logprob: -13.756448745727539
    8. '(dp' → logprob: -13.756448745727539
    9. ' :' → logprob: -13.881448745727539
    10. '.dp' → logprob: -14.381448745727539

Token 84: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -7.636475493200123e-05
    2. ' dp' → logprob: -9.625076293945312
    3. '	dp' → logprob: -11.625076293945312
    4. '           ' → logprob: -14.625076293945312
    5. '
' → logprob: -15.500076293945312
    6. '               ' → logprob: -15.875076293945312
    7. '_dp' → logprob: -15.875076293945312
    8. '```' → logprob: -16.125076293945312
    9. '.dp' → logprob: -16.250076293945312
    10. '(dp' → logprob: -17.000076293945312

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[I' → logprob: -13.750001907348633
    3. 'i' → logprob: -14.750001907348633
    4. '[' → logprob: -16.750001907348633
    5. '```' → logprob: -18.000001907348633
    6. '[j' → logprob: -18.000001907348633
    7. '][' → logprob: -18.625001907348633
    8. '	i' → logprob: -18.875001907348633
    9. '[
' → logprob: -19.000001907348633
    10. '\[' → logprob: -19.000001907348633

Token 86: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0032316597644239664
    2. '-' → logprob: -5.878231525421143
    3. '[i' → logprob: -8.1282320022583
    4. ']' → logprob: -9.7532320022583
    5. ' ][' → logprob: -10.3782320022583
    6. '"][' → logprob: -10.7532320022583
    7. '[j' → logprob: -12.1282320022583
    8. 'i' → logprob: -12.8782320022583
    9. ''][' → logprob: -13.2532320022583
    10. '[' → logprob: -13.2532320022583

Token 87: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.723352049040841e-06
    2. '   ' → logprob: -13.125004768371582
    3. ' j' → logprob: -14.375004768371582
    4. '[j' → logprob: -14.500004768371582
    5. '-' → logprob: -14.625004768371582
    6. '	j' → logprob: -14.875004768371582
    7. '1' → logprob: -15.250004768371582
    8. ']' → logprob: -15.500004768371582
    9. ' ' → logprob: -16.000003814697266
    10. '    ' → logprob: -17.000003814697266

Token 88: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.03086492046713829
    2. ']' → logprob: -3.530864953994751
    3. '=' → logprob: -7.155864715576172
    4. ']+=' → logprob: -8.280864715576172
    5. ']=(' → logprob: -9.530864715576172
    6. ']==' → logprob: -13.280864715576172
    7. ']={' → logprob: -13.405864715576172
    8. ']="' → logprob: -14.155864715576172
    9. '"]=' → logprob: -14.155864715576172
    10. ']='' → logprob: -14.405864715576172

Token 89: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.153795766294934e-06
    2. ' dp' → logprob: -12.125005722045898
    3. '1' → logprob: -15.000005722045898
    4. '	dp' → logprob: -15.750005722045898
    5. 'd' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.3750057220459
    7. 'dpi' → logprob: -17.5000057220459
    8. '(dp' → logprob: -17.5000057220459
    9. '0' → logprob: -18.0000057220459
    10. '```' → logprob: -18.7500057220459

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.542423165636137e-05
    2. 'i' → logprob: -9.375085830688477
    3. '```' → logprob: -15.375085830688477
    4. '[I' → logprob: -15.500085830688477
    5. '[' → logprob: -16.625085830688477
    6. '	i' → logprob: -17.625085830688477
    7. '(i' → logprob: -18.500085830688477
    8. '[
' → logprob: -19.125085830688477
    9. '{i' → logprob: -19.500085830688477
    10. ',i' → logprob: -19.625085830688477

Token 91: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8670179997570813e-05
    2. '1' → logprob: -11.000019073486328
    3. ' -' → logprob: -13.500019073486328
    4. 'i' → logprob: -15.250019073486328
    5. '```' → logprob: -15.750019073486328
    6. '[i' → logprob: -16.250019073486328
    7. '[' → logprob: -16.625019073486328
    8. '][' → logprob: -17.750019073486328
    9. '   ' → logprob: -17.875019073486328
    10. '−' → logprob: -18.250019073486328

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -16.375001907348633
    4. '```' → logprob: -16.875001907348633
    5. '-' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '0' → logprob: -18.437501907348633
    8. '१' → logprob: -18.750001907348633
    9. '۱' → logprob: -18.812501907348633
    10. '১' → logprob: -18.937501907348633

Token 93: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0027460309211164713
    2. '-' → logprob: -6.002746105194092
    3. '[j' → logprob: -8.377745628356934
    4. '1' → logprob: -11.127745628356934
    5. '[' → logprob: -12.002745628356934
    6. ']' → logprob: -12.127745628356934
    7. ' -' → logprob: -12.252745628356934
    8. ' ][' → logprob: -12.627745628356934
    9. '   ' → logprob: -13.502745628356934
    10. '"][' → logprob: -13.877745628356934

Token 94: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.512236498361744e-07
    2. ' j' → logprob: -14.750000953674316
    3. '1' → logprob: -16.875
    4. '   ' → logprob: -17.375
    5. '	j' → logprob: -17.75
    6. '```' → logprob: -19.0
    7. 'jj' → logprob: -19.125
    8. '[j' → logprob: -19.25
    9. ']' → logprob: -19.5
    10. 'jp' → logprob: -20.375

Token 95: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00016587569552939385
    2. '1' → logprob: -8.750165939331055
    3. ' -' → logprob: -12.250165939331055
    4. '−' → logprob: -13.750165939331055
    5. '```' → logprob: -14.000165939331055
    6. '-
' → logprob: -14.500165939331055
    7. '–' → logprob: -16.125165939331055
    8. '   ' → logprob: -16.250165939331055
    9. '--' → logprob: -18.000165939331055
    10. '‑' → logprob: -18.125165939331055

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. '-' → logprob: -15.625000953674316
    4. '```' → logprob: -16.875001907348633
    5. '<|end|>' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '۱' → logprob: -17.312501907348633
    8. '१' → logprob: -18.125001907348633
    9. '১' → logprob: -18.375001907348633
    10. '<|end|>' → logprob: -18.875001907348633

Token 97: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.0008301171474158764
    2. ']' → logprob: -7.375830173492432
    3. '+' → logprob: -8.500829696655273
    4. ']+=' → logprob: -16.250829696655273
    5. '}+' → logprob: -16.875829696655273
    6. ')+' → logprob: -17.000829696655273
    7. '```' → logprob: -17.625829696655273
    8. ' +' → logprob: -18.250829696655273
    9. '1' → logprob: -18.500829696655273
    10. ']+\' → logprob: -19.000829696655273

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016718693950679153
    2. 'A' → logprob: -8.750166893005371
    3. ' ' → logprob: -12.500166893005371
    4. '2' → logprob: -13.125166893005371
    5. '100' → logprob: -13.750166893005371
    6. '10' → logprob: -14.750166893005371
    7. '3' → logprob: -14.875166893005371
    8. 'dp' → logprob: -15.125166893005371
    9. ' A' → logprob: -15.625166893005371
    10. '   ' → logprob: -16.125167846679688

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2355627566576004
    2. '       ' → logprob: -1.735562801361084
    3. 'else' → logprob: -3.735562801361084
    4. '           ' → logprob: -5.360562801361084
    5. ' else' → logprob: -7.110562801361084
    6. '\n' → logprob: -7.235562801361084
    7. '
' → logprob: -7.235562801361084
    8. '        
' → logprob: -7.735562801361084
    9. '            
' → logprob: -7.735562801361084
    10. '    
' → logprob: -7.860562801361084

Token 100: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06714916229248047
    2. '           ' → logprob: -3.1921491622924805
    3. 'else' → logprob: -4.1921491622924805
    4. '
' → logprob: -5.1921491622924805
    5. '	' → logprob: -7.5671491622924805
    6. '   ' → logprob: -7.6921491622924805
    7. ' else' → logprob: -8.19214916229248
    8. '               ' → logprob: -8.19214916229248
    9. '        
' → logprob: -8.44214916229248
    10. '<|end|>' → logprob: -8.44214916229248

Token 101: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1297135055065155
    2. 'if' (adapté à ' if') → logprob: -2.129713535308838
    3. '           ' → logprob: -6.129713535308838
    4. ' if' → logprob: -7.754713535308838
    5. ' max' → logprob: -8.75471305847168
    6. '               ' → logprob: -11.37971305847168
    7. '       ' → logprob: -13.62971305847168
    8. '   ' → logprob: -13.87971305847168
    9. '```' → logprob: -14.12971305847168
    10. '
' → logprob: -14.25471305847168

Token 102: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04869807884097099
    2. ' dp' → logprob: -3.0486981868743896
    3. 'max' → logprob: -9.298698425292969
    4. ' max' → logprob: -11.548698425292969
    5. '(dp' → logprob: -11.923698425292969
    6. '	dp' → logprob: -13.173698425292969
    7. '```' → logprob: -15.048698425292969
    8. '_dp' → logprob: -15.423698425292969
    9. 'd' → logprob: -16.04869842529297
    10. ' ' → logprob: -16.17369842529297

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -11.500020027160645
    3. 'i' → logprob: -11.625020027160645
    4. '[I' → logprob: -14.125020027160645
    5. '<|end|>' → logprob: -16.12502098083496
    6. '[max' → logprob: -16.37502098083496
    7. '```' → logprob: -17.00002098083496
    8. '   ' → logprob: -17.25002098083496
    9. '[int' → logprob: -17.37502098083496
    10. '	i' → logprob: -17.87502098083496

Token 104: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023428205400705338
    2. '][' → logprob: -3.898428201675415
    3. 'i' → logprob: -5.898428440093994
    4. '[' → logprob: -9.648427963256836
    5. '[I' → logprob: -10.523427963256836
    6. ']' → logprob: -11.273427963256836
    7. '<|end|>' → logprob: -11.898427963256836
    8. '"][' → logprob: -12.273427963256836
    9. ' i' → logprob: -12.523427963256836
    10. '	i' → logprob: -12.898427963256836

Token 105: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.704273118884885e-07
    2. '<|end|>' → logprob: -14.375000953674316
    3. ' j' → logprob: -16.5
    4. '[j' → logprob: -18.0
    5. '	j' → logprob: -18.0
    6. '<|end|>' → logprob: -19.125
    7. '```' → logprob: -19.5
    8. '   ' → logprob: -20.0
    9. ',j' → logprob: -20.875
    10. ' ' → logprob: -20.875

Token 106: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0005794849130325019
    2. ' >' → logprob: -7.500579357147217
    3. '">' → logprob: -11.000579833984375
    4. ' ' → logprob: -11.875579833984375
    5. ')>' → logprob: -14.125579833984375
    6. ']>' → logprob: -14.250579833984375
    7. '>
' → logprob: -15.250579833984375
    8. '>

' → logprob: -15.500579833984375
    9. ''>' → logprob: -15.750579833984375
    10. '&gt' → logprob: -15.875579833984375

Token 107: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.339278580620885e-06
    2. ' max' → logprob: -13.000001907348633
    3. '
' → logprob: -20.000001907348633
    4. '	max' → logprob: -21.500001907348633
    5. '_max' → logprob: -21.625001907348633
    6. '=max' → logprob: -22.375001907348633
    7. '0' → logprob: -23.000001907348633
    8. '(max' → logprob: -23.125001907348633
    9. 'maxlength' → logprob: -23.375001907348633
    10. '```' → logprob: -23.500001907348633

Token 108: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -9.088346359931165e-07
    2. 'score' → logprob: -14.875000953674316
    3. '_max' → logprob: -15.750000953674316
    4. '_scores' → logprob: -16.25
    5. '_s' → logprob: -16.75
    6. '_code' → logprob: -17.5
    7. '_' → logprob: -17.5
    8. '_sc' → logprob: -17.875
    9. '_SCORE' → logprob: -18.0
    10. 'max' → logprob: -18.375

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14977587759494781
    2. '=' → logprob: -2.024775981903076
    3. '=max' → logprob: -5.024775981903076
    4. 'max' → logprob: -8.774775505065918
    5. ' =' → logprob: -9.024775505065918
    6. '<|end|>' → logprob: -9.524775505065918
    7. ':max' → logprob: -9.899775505065918
    8. ':
' → logprob: -10.149775505065918
    9. ':=' → logprob: -10.649775505065918
    10. '):' → logprob: -11.024775505065918

Token 110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19830094277858734
    2. ' max' → logprob: -2.698300838470459
    3. '<|end|>' → logprob: -2.948300838470459
    4. '           ' → logprob: -3.573300838470459
    5. 'max' → logprob: -3.698300838470459
    6. ' ' → logprob: -6.448300838470459
    7. '(max' → logprob: -6.698300838470459
    8. '                ' → logprob: -7.448300838470459
    9. '=max' → logprob: -7.698300838470459
    10. '                   ' → logprob: -7.698300838470459

Token 111: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.24795235693454742
    2. ' max' → logprob: -1.6229523420333862
    3. '                   ' → logprob: -4.122952461242676
    4. '               ' → logprob: -5.372952461242676
    5. '                ' → logprob: -6.997952461242676
    6. '                       ' → logprob: -9.122952461242676
    7. '_max' → logprob: -9.372952461242676
    8. '```' → logprob: -9.997952461242676
    9. '                    
' → logprob: -9.997952461242676
    10. ' ' → logprob: -10.247952461242676

Token 112: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.1756367712223437e-05
    2. 'score' → logprob: -11.625011444091797
    3. '_' → logprob: -13.250011444091797
    4. '_s' → logprob: -14.750011444091797
    5. '_scores' → logprob: -15.125011444091797
    6. '_code' → logprob: -16.125011444091797
    7. '_SCORE' → logprob: -16.375011444091797
    8. '<|end|>' → logprob: -17.250011444091797
    9. '_sc' → logprob: -17.875011444091797
    10. ' score' → logprob: -18.000011444091797

Token 113: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004082554951310158
    2. ' =' → logprob: -5.504082679748535
    3. '=max' → logprob: -13.254082679748535
    4. '=df' → logprob: -14.129082679748535
    5. '=

' → logprob: -14.254082679748535
    6. '=int' → logprob: -14.754082679748535
    7. '=d' → logprob: -15.129082679748535
    8. '=
' → logprob: -16.50408172607422
    9. '＝' → logprob: -16.75408172607422
    10. 'dp' → logprob: -17.12908172607422

Token 114: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002614550176076591
    2. ' dp' → logprob: -8.250261306762695
    3. '               ' → logprob: -16.750261306762695
    4. '	dp' → logprob: -16.875261306762695
    5. '           ' → logprob: -17.625261306762695
    6. 'd' → logprob: -19.375261306762695
    7. '(dp' → logprob: -19.375261306762695
    8. '                   ' → logprob: -20.125261306762695
    9. '_dp' → logprob: -20.250261306762695
    10. '```' → logprob: -20.500261306762695

Token 115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -13.875001907348633
    3. '[' → logprob: -14.000001907348633
    4. '[j' → logprob: -16.500001907348633
    5. '```' → logprob: -17.250001907348633
    6. '[int' → logprob: -17.625001907348633
    7. '<|end|>' → logprob: -18.000001907348633
    8. '[I' → logprob: -18.250001907348633
    9. 'ij' → logprob: -19.000001907348633
    10. '[max' → logprob: -19.250001907348633

Token 116: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003123439964838326
    2. '[j' → logprob: -8.250312805175781
    3. '[i' → logprob: -11.125312805175781
    4. ']' → logprob: -11.375312805175781
    5. ' ][' → logprob: -11.750312805175781
    6. ']][' → logprob: -11.875312805175781
    7. '[' → logprob: -13.000312805175781
    8. ''][' → logprob: -13.875312805175781
    9. '   ' → logprob: -14.000312805175781
    10. '           ' → logprob: -14.125312805175781

Token 117: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9361264946837764e-07
    2. ' j' → logprob: -16.875
    3. '	j' → logprob: -17.875
    4. '<|end|>' → logprob: -17.875
    5. '[j' → logprob: -18.125
    6. '$j' → logprob: -19.0
    7. '```' → logprob: -19.875
    8. 'ji' → logprob: -20.25
    9. 'i' → logprob: -20.625
    10. '_j' → logprob: -21.125

Token 118: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.434613436460495
    2. '<|end|>' → logprob: -1.0596134662628174
    3. ']' → logprob: -5.684613227844238
    4. '
' → logprob: -6.809613227844238
    5. '<|end|>' → logprob: -7.184613227844238
    6. '```' → logprob: -8.309613227844238
    7. '}' → logprob: -8.809613227844238
    8. ')]' → logprob: -10.559613227844238
    9. ')return' → logprob: -10.559613227844238
    10. '               ' → logprob: -10.684613227844238

Token 119: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03023752197623253
    2. 'else' → logprob: -4.280237674713135
    3. '        ' → logprob: -5.655237674713135
    4. '       ' → logprob: -6.030237674713135
    5. '```' → logprob: -6.030237674713135
    6. '#' → logprob: -6.655237674713135
    7. '    ' → logprob: -7.030237674713135
    8. '\n' → logprob: -7.030237674713135
    9. '<|end|>' → logprob: -7.030237674713135
    10. ' else' → logprob: -7.280237674713135

Token 120: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0024827925954014063
    2. '(' → logprob: -6.002482891082764
    3. 'max' → logprob: -11.877482414245605
    4. '(min' → logprob: -16.877483367919922
    5. ' (' → logprob: -17.752483367919922
    6. '(m' → logprob: -18.377483367919922
    7. ' max' → logprob: -18.627483367919922
    8. '(
' → logprob: -18.752483367919922
    9. '(ma' → logprob: -18.877483367919922
    10. '(mx' → logprob: -19.252483367919922

Token 121: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.2603901015827432e-05
    2. 'score' → logprob: -10.750022888183594
    3. '_' → logprob: -14.125022888183594
    4. '_scores' → logprob: -15.375022888183594
    5. '_sc' → logprob: -16.375022888183594
    6. 'max' → logprob: -17.875022888183594
    7. 'Score' → logprob: -18.000022888183594
    8. '_SCORE' → logprob: -18.125022888183594
    9. '_s' → logprob: -18.250022888183594
    10. '_code' → logprob: -18.875022888183594

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.5
    3. '))' → logprob: -16.75
    4. ')
' → logprob: -16.875
    5. ')`' → logprob: -17.5
    6. '`)' → logprob: -18.125
    7. '}' → logprob: -18.5
    8. ')}' → logprob: -19.125
    9. '```' → logprob: -19.125
    10. '+' → logprob: -19.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 106
Précision stricte (1ère position): 65.83%
Précision adaptée (1ère position): 68.33%
Précision (top 10): 88.33%
================================================================================
