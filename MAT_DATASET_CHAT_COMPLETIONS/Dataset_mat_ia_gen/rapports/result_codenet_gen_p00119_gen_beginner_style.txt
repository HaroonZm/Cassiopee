================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
m = int(input())
n = int(input())
testimonies = []
for _ in range(n):
    x, y = map(int, input().split())
    testimonies.append((x, y))

# Tama is one suspect who can't testify but is seen entering last.
# Find Tama by noting that he is always after others.
# So, Tama must be the one who appears only on the right side of testimonies or not on left side.
# But problem states Tama is fixed to one suspect (not given in input), so we just know Tama does not testify.

# Build a graph of constraints: x must come before y
 # edges from x to y: x->y means x before y
graph = {i: [] for i in range(1, m+1)}
in_degrees = {i:0 for i in range(1, m+1)}

for x, y in testimonies:
    graph[x].append(y)
    in_degrees[y] += 1

# We know Tama is last, so the last one in order is Tama.
# Tama does not testify, so Tama does not appear as x in testimonies.
 # So find someone who never appears as x.
appears_as_x = set(x for x, y in testimonies)
tama_candidates = [i for i in range(1, m+1) if i not in appears_as_x]
# According to problem, Tama is exactly one person.
# Tama must be last, so put Tama last in order.
tama = tama_candidates[0]

# Topological sort to find one order that satisfies constraints
# To ensure Tama last, remove Tama from graph except for last step.

# Remove Tama from graph nodes to sort
nodes = [i for i in range(1, m+1) if i != tama]

# Build new in_degrees and graph without Tama
new_graph = {i: [] for i in nodes}
new_in_degrees = {i:0 for i in nodes}
for u in nodes:
    for v in graph[u]:
        if v != tama:
            new_graph[u].append(v)
            new_in_degrees[v] += 1

# Topological sort
order = []
queue = []
for node in nodes:
    if new_in_degrees[node] == 0:
        queue.append(node)

while queue:
    current = queue.pop(0)
    order.append(current)
    for nxt in new_graph[current]:
        new_in_degrees[nxt] -= 1
        if new_in_degrees[nxt] == 0:
            queue.append(nxt)

# Append Tama at last
order.append(tama)

for o in order:
    print(o)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'm' (ID: 76)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006756199873052537
    2. '(m' → logprob: -8.250675201416016
    3. ''' → logprob: -9.125675201416016
    4. '('' → logprob: -9.625675201416016
    5. ')' → logprob: -9.750675201416016
    6. '[' → logprob: -10.125675201416016
    7. '```' → logprob: -10.250675201416016
    8. 'm' → logprob: -10.625675201416016
    9. '(
' → logprob: -11.250675201416016
    10. '()' → logprob: -11.250675201416016

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16718672215938568
    2. ')' → logprob: -1.9171867370605469
    3. '()' → logprob: -5.167186737060547
    4. '())' → logprob: -7.542186737060547
    5. '(
' → logprob: -8.417186737060547
    6. '))' → logprob: -9.542186737060547
    7. '[' → logprob: -9.792186737060547
    8. '```' → logprob: -9.792186737060547
    9. '")' → logprob: -10.042186737060547
    10. ''' → logprob: -10.542186737060547

Token 5: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.37360861897468567
    2. 'for' → logprob: -2.1236085891723633
    3. 'n' → logprob: -3.1236085891723633
    4. 'if' → logprob: -3.2486085891723633
    5. '`' → logprob: -3.8736085891723633
    6. 's' → logprob: -3.9986085891723633
    7. '+' → logprob: -4.123608589172363
    8. '\' → logprob: -4.623608589172363
    9. '```' → logprob: -5.123608589172363
    10. 'i' → logprob: -5.123608589172363

Token 6: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0035878419876099
    2. ' =' → logprob: -1.0035878419876099
    3. '=' → logprob: -1.5035878419876099
    4. ')' → logprob: -4.25358772277832
    5. '+' → logprob: -4.37858772277832
    6. '*' → logprob: -5.00358772277832
    7. '**' → logprob: -5.62858772277832
    8. '[' → logprob: -6.62858772277832
    9. ' **' → logprob: -7.00358772277832
    10. ' *' → logprob: -7.12858772277832

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12715771794319153
    2. 'int' → logprob: -2.127157688140869
    3. ' input' → logprob: -9.377158164978027
    4. 'input' → logprob: -9.627158164978027
    5. ' m' → logprob: -9.877158164978027
    6. 'm' → logprob: -11.127158164978027
    7. ' ' → logprob: -12.127158164978027
    8. '=int' → logprob: -13.127158164978027
    9. '0' → logprob: -13.377158164978027
    10. '<int' → logprob: -13.502158164978027

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022364973556250334
    2. ''' → logprob: -7.627236366271973
    3. '(input' → logprob: -7.627236366271973
    4. ')' → logprob: -7.752236366271973
    5. '()' → logprob: -8.252236366271973
    6. '('' → logprob: -8.627236366271973
    7. '```' → logprob: -9.252236366271973
    8. '`' → logprob: -9.752236366271973
    9. '(
' → logprob: -10.002236366271973
    10. ' (' → logprob: -10.127236366271973

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20439554750919342
    2. '()' → logprob: -1.7043955326080322
    3. ')' → logprob: -5.829395771026611
    4. ' ())' → logprob: -11.204395294189453
    5. '()>' → logprob: -12.079395294189453
    6. '();)' → logprob: -12.579395294189453
    7. '()))' → logprob: -12.704395294189453
    8. '(' → logprob: -13.079395294189453
    9. '`)' → logprob: -13.079395294189453
    10. '()`' → logprob: -13.329395294189453

Token 10: 'test' (ID: 3190)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33010315895080566
    2. 's' → logprob: -2.2051031589508057
    3. 'result' → logprob: -3.0801031589508057
    4. 'matrix' → logprob: -3.3301031589508057
    5. 'r' → logprob: -3.5801031589508057
    6. 'sum' → logprob: -3.8301031589508057
    7. 'if' → logprob: -4.080102920532227
    8. 'f' → logprob: -4.830102920532227
    9. 'a' → logprob: -5.080102920532227
    10. 'print' → logprob: -6.705102920532227

Token 11: 'imon' (ID: 15235)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7136031985282898
    2. 's' → logprob: -1.5886032581329346
    3. '(' → logprob: -1.9636032581329346
    4. '.' → logprob: -2.9636032581329346
    5. '[' → logprob: -3.2136032581329346
    6. ')' → logprob: -3.8386032581329346
    7. '=' → logprob: -4.7136030197143555
    8. ' ' → logprob: -4.8386030197143555
    9. ' =' → logprob: -5.0886030197143555
    10. '()' → logprob: -5.2136030197143555

Token 12: 'ies' (ID: 566)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08268773555755615
    2. 'ials' → logprob: -2.7076878547668457
    3. 'ies' → logprob: -5.332687854766846
    4. 'ial' → logprob: -5.332687854766846
    5. 'i' → logprob: -5.957687854766846
    6. 's' → logprob: -8.457687377929688
    7. 'ialize' → logprob: -9.457687377929688
    8. '```' → logprob: -10.207687377929688
    9. 'als' → logprob: -10.832687377929688
    10. 'y's' → logprob: -11.207687377929688

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09561789780855179
    2. ' =' → logprob: -2.8456180095672607
    3. 's' → logprob: -4.095617771148682
    4. '=' → logprob: -4.720617771148682
    5. ')' → logprob: -6.095617771148682
    6. '_' → logprob: -6.595617771148682
    7. '.' → logprob: -7.220617771148682
    8. '```' → logprob: -7.220617771148682
    9. '[]' → logprob: -7.845617771148682
    10. '[s' → logprob: -7.970617771148682

Token 14: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03209789842367172
    2. ' []' → logprob: -4.032097816467285
    3. '[' → logprob: -4.282097816467285
    4. ' [' → logprob: -10.782097816467285
    5. '[][]' → logprob: -11.657097816467285
    6. '{}' → logprob: -13.032097816467285
    7. '[]
' → logprob: -13.657097816467285
    8. '[]}' → logprob: -13.782097816467285
    9. '[int' → logprob: -14.157097816467285
    10. '[
' → logprob: -15.032097816467285

Token 15: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0035601616837084293
    2. ' for' → logprob: -5.7535600662231445
    3. '```' → logprob: -8.878560066223145
    4. '[' → logprob: -9.253560066223145
    5. '\n' → logprob: -9.253560066223145
    6. '\' → logprob: -10.253560066223145
    7. '	for' → logprob: -12.378560066223145
    8. '
' → logprob: -13.128560066223145
    9. '' → logprob: -13.503560066223145
    10. '`' → logprob: -13.503560066223145

Token 16: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47696053981781006
    2. ' ' → logprob: -0.9769605398178101
    3. 'i' → logprob: -6.7269606590271
    4. ' _' → logprob: -7.1019606590271
    5. '_' → logprob: -7.6019606590271
    6. ' ‌' → logprob: -8.601960182189941
    7. '  ' → logprob: -9.351960182189941
    8. ' ' → logprob: -10.476960182189941
    9. ' ▁' → logprob: -11.226960182189941
    10. ' range' → logprob: -11.351960182189941

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04630254581570625
    2. ' ' → logprob: -3.296302556991577
    3. 'in' → logprob: -5.546302318572998
    4. ' i' → logprob: -6.421302318572998
    5. '  ' → logprob: -6.671302318572998
    6. ' n' → logprob: -8.421302795410156
    7. '_' → logprob: -8.671302795410156
    8. ' m' → logprob: -8.796302795410156
    9. 'i' → logprob: -8.921302795410156
    10. '<|end|>' → logprob: -8.921302795410156

Token 18: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859315976500511
    2. ' range' → logprob: -3.048593044281006
    3. '	range' → logprob: -13.673593521118164
    4. 'ran' → logprob: -13.923593521118164
    5. '(range' → logprob: -14.048593521118164
    6. 'rang' → logprob: -14.298593521118164
    7. ' ' → logprob: -14.673593521118164
    8. '```' → logprob: -15.048593521118164
    9. 'm' → logprob: -15.298593521118164
    10. 'n' → logprob: -15.673593521118164

Token 19: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054081451147794724
    2. ' (' → logprob: -3.054081439971924
    3. '(m' → logprob: -5.304081439971924
    4. '(range' → logprob: -8.304081916809082
    5. '(n' → logprob: -9.054081916809082
    6. '(
' → logprob: -9.429081916809082
    7. ')' → logprob: -11.554081916809082
    8. ' range' → logprob: -11.554081916809082
    9. '(int' → logprob: -11.929081916809082
    10. ' ' → logprob: -12.054081916809082

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030213110148906708
    2. ')' → logprob: -3.5302131175994873
    3. ' ):' → logprob: -8.280213356018066
    4. '):
' → logprob: -9.155213356018066
    5. ':' → logprob: -9.655213356018066
    6. ' )' → logprob: -10.780213356018066
    7. '+' → logprob: -12.280213356018066
    8. ' ' → logprob: -13.280213356018066
    9. ')：' → logprob: -13.405213356018066
    10. '):
' → logprob: -13.780213356018066

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024564944207668304
    2. '    ' → logprob: -5.024564743041992
    3. '   ' → logprob: -5.149564743041992
    4. ' test' → logprob: -5.899564743041992
    5. ' testimon' → logprob: -5.899564743041992
    6. '```' → logprob: -6.774564743041992
    7. '  ' → logprob: -6.899564743041992
    8. '   ' → logprob: -7.149564743041992
    9. ' ' → logprob: -7.899564743041992
    10. ' ```' → logprob: -8.024564743041992

Token 22: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1043288707733154
    2. ' k' → logprob: -1.2293288707733154
    3. ' x' → logprob: -2.2293288707733154
    4. 'x' (adapté à ' x') → logprob: -2.2293288707733154
    5. ' a' → logprob: -2.9793288707733154
    6. 'a' → logprob: -3.1043288707733154
    7. ' ' → logprob: -4.7293291091918945
    8. ' person' → logprob: -4.7293291091918945
    9. '   ' → logprob: -4.7293291091918945
    10. ' t' → logprob: -4.9793291091918945

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01718721352517605
    2. ' ,' → logprob: -4.892187118530273
    3. '.' → logprob: -6.017187118530273
    4. ' =' → logprob: -6.017187118530273
    5. '_' → logprob: -6.267187118530273
    6. ')' → logprob: -7.892187118530273
    7. ',y' → logprob: -7.892187118530273
    8. ' ' → logprob: -8.017187118530273
    9. '=' → logprob: -8.267187118530273
    10. '.append' → logprob: -8.267187118530273

Token 24: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01510495226830244
    2. ' y' → logprob: -4.2651047706604
    3. 'a' → logprob: -7.3901047706604
    4. 't' → logprob: -9.015105247497559
    5. ' ' → logprob: -10.140105247497559
    6. '  ' → logprob: -10.390105247497559
    7. 's' → logprob: -11.140105247497559
    8. 'k' → logprob: -11.265105247497559
    9. 'space' → logprob: -11.390105247497559
    10. ' t' → logprob: -11.640105247497559

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.567160964012146
    2. ',' → logprob: -0.942160964012146
    3. '=' → logprob: -3.1921610832214355
    4. ' ,' → logprob: -6.5671610832214355
    5. ' ' → logprob: -8.067160606384277
    6. ')' → logprob: -9.567160606384277
    7. '  ' → logprob: -9.567160606384277
    8. '   ' → logprob: -9.692160606384277
    9. '    ' → logprob: -10.317160606384277
    10. '<|end|>' → logprob: -11.442160606384277

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008222936652600765
    2. 'map' → logprob: -4.883223056793213
    3. ' input' → logprob: -8.008222579956055
    4. ' ' → logprob: -9.508222579956055
    5. '  ' → logprob: -9.758222579956055
    6. ' int' → logprob: -10.133222579956055
    7. '   ' → logprob: -10.258222579956055
    8. 'int' → logprob: -10.258222579956055
    9. 'input' → logprob: -11.383222579956055
    10. '	map' → logprob: -11.633222579956055

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010016091400757432
    2. '(' → logprob: -7.001001834869385
    3. '(str' → logprob: -9.876001358032227
    4. '(lambda' → logprob: -10.876001358032227
    5. '(input' → logprob: -11.376001358032227
    6. 'int' → logprob: -13.001001358032227
    7. '(list' → logprob: -13.501001358032227
    8. '<int' → logprob: -13.626001358032227
    9. '[int' → logprob: -13.751001358032227
    10. '```' → logprob: -14.376001358032227

Token 28: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04422779381275177
    2. ',input' → logprob: -3.2942278385162354
    3. ',' → logprob: -5.544227600097656
    4. ')' → logprob: -6.669227600097656
    5. 'input' → logprob: -7.294227600097656
    6. '(' → logprob: -8.294227600097656
    7. ' input' → logprob: -10.419227600097656
    8. '=input' → logprob: -11.669227600097656
    9. ' (' → logprob: -12.169227600097656
    10. '<input' → logprob: -13.044227600097656

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06197306513786316
    2. 'input' → logprob: -2.8119730949401855
    3. ')' → logprob: -12.686972618103027
    4. '(input' → logprob: -14.061972618103027
    5. ' ' → logprob: -14.936972618103027
    6. ',input' → logprob: -14.936972618103027
    7. ' )' → logprob: -15.061972618103027
    8. '	input' → logprob: -15.686972618103027
    9. '=input' → logprob: -15.811972618103027
    10. '[input' → logprob: -16.686973571777344

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023119196703191847
    2. '()' → logprob: -8.75023078918457
    3. '())' → logprob: -9.62523078918457
    4. ')' → logprob: -12.50023078918457
    5. '(' → logprob: -13.25023078918457
    6. ' ().' → logprob: -14.62523078918457
    7. '()))' → logprob: -15.12523078918457
    8. '()
' → logprob: -15.25023078918457
    9. '()

' → logprob: -17.25023078918457
    10. '());' → logprob: -17.37523078918457

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.574251918005757e-05
    2. 'strip' → logprob: -9.875055313110352
    3. ' split' → logprob: -12.750055313110352
    4. 'rstrip' → logprob: -14.375055313110352
    5. '(split' → logprob: -14.375055313110352
    6. ')' → logprob: -16.62505531311035
    7. 'spl' → logprob: -17.00005531311035
    8. '.split' → logprob: -17.62505531311035
    9. 's' → logprob: -17.75005531311035
    10. ' ' → logprob: -18.00005531311035

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.15616580843925476
    2. ')' → logprob: -2.031165838241577
    3. '()' → logprob: -5.156165599822998
    4. '))' → logprob: -5.281165599822998
    5. '()))' → logprob: -6.031165599822998
    6. '(' → logprob: -9.906166076660156
    7. '())
' → logprob: -10.531166076660156
    8. '('' → logprob: -10.656166076660156
    9. '')' → logprob: -11.031166076660156
    10. ')")' → logprob: -12.156166076660156

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052513595670461655
    2. '<|end|>' → logprob: -3.427513599395752
    3. '    
' → logprob: -5.552513599395752
    4. '    ' → logprob: -5.802513599395752
    5. ')' → logprob: -5.802513599395752
    6. '       ' → logprob: -6.052513599395752
    7. '<|end|>' → logprob: -6.302513599395752
    8. '\t' → logprob: -7.177513599395752
    9. '```' → logprob: -7.177513599395752
    10. ' ' → logprob: -7.302513599395752

Token 34: ' testimon' (ID: 109591)
  Prédit: ' testimon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' testimon' → logprob: -0.3521592617034912
    2. 'test' → logprob: -1.3521592617034912
    3. '   ' → logprob: -3.727159261703491
    4. ' test' → logprob: -4.97715950012207
    5. ' testimony' → logprob: -6.22715950012207
    6. '    ' → logprob: -6.85215950012207
    7. '_' → logprob: -6.97715950012207
    8. ' testimonials' → logprob: -6.97715950012207
    9. ' ' → logprob: -8.22715950012207
    10. 't' → logprob: -8.35215950012207

Token 35: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.00012511172099038959
    2. 'es' → logprob: -9.25012493133545
    3. 'y' → logprob: -10.87512493133545
    4. '   ' → logprob: -13.00012493133545
    5. 'i' → logprob: -13.12512493133545
    6. 'o' → logprob: -13.50012493133545
    7. 'iesa' → logprob: -14.62512493133545
    8. ' ies' → logprob: -15.00012493133545
    9. 'onies' → logprob: -15.00012493133545
    10. 'e' → logprob: -15.12512493133545

Token 36: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.2378600735682994e-05
    2. '.' → logprob: -10.375032424926758
    3. '.app' → logprob: -15.000032424926758
    4. '.extend' → logprob: -15.375032424926758
    5. 'append' → logprob: -15.875032424926758
    6. '.add' → logprob: -15.875032424926758
    7. '.ap' → logprob: -16.000032424926758
    8. '.setdefault' → logprob: -16.500032424926758
    9. '.Append' → logprob: -17.125032424926758
    10. ').' → logprob: -17.250032424926758

Token 37: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.001967412419617176
    2. '(' → logprob: -6.626967430114746
    3. '(x' → logprob: -7.376967430114746
    4. '(y' → logprob: -11.376967430114746
    5. '([' → logprob: -12.751967430114746
    6. ' ((' → logprob: -15.751967430114746
    7. '(([' → logprob: -15.751967430114746
    8. '((_' → logprob: -15.751967430114746
    9. '(('' → logprob: -15.876967430114746
    10. '(
' → logprob: -15.876967430114746

Token 38: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031844829209148884
    2. ' x' → logprob: -5.7531843185424805
    3. ' ' → logprob: -12.62818431854248
    4. '   ' → logprob: -13.50318431854248
    5. '(x' → logprob: -14.12818431854248
    6. ')' → logprob: -15.25318431854248
    7. '  ' → logprob: -15.25318431854248
    8. '_x' → logprob: -15.62818431854248
    9. '	x' → logprob: -15.75318431854248
    10. ')x' → logprob: -15.87818431854248

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022711048368364573
    2. ',y' → logprob: -6.7522711753845215
    3. ' ,' → logprob: -6.8772711753845215
    4. '-' → logprob: -9.877270698547363
    5. ' ' → logprob: -12.002270698547363
    6. 'y' → logprob: -12.877270698547363
    7. ')' → logprob: -13.127270698547363
    8. ' -' → logprob: -13.502270698547363
    9. ',)' → logprob: -13.627270698547363
    10. '1' → logprob: -14.627270698547363

Token 40: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3868798017501831
    2. 'y' → logprob: -1.136879801750183
    3. ' ' → logprob: -12.386879920959473
    4. '    ' → logprob: -13.636879920959473
    5. '	y' → logprob: -14.136879920959473
    6. ',y' → logprob: -14.636879920959473
    7. '1' → logprob: -14.636879920959473
    8. ' ' → logprob: -14.886879920959473
    9. ',' → logprob: -15.261879920959473
    10. ''y' → logprob: -15.949379920959473

Token 41: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029774906113743782
    2. ')' → logprob: -3.5297749042510986
    3. '))
' → logprob: -11.15477466583252
    4. ')))' → logprob: -12.15477466583252
    5. '),' → logprob: -13.40477466583252
    6. ' ))' → logprob: -13.77977466583252
    7. ')
' → logprob: -14.02977466583252
    8. ',' → logprob: -14.15477466583252
    9. '   ' → logprob: -15.52977466583252
    10. ''))' → logprob: -15.65477466583252

Token 42: '#' (ID: 2)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0754454135894775
    2. 't' → logprob: -2.4504454135894775
    3. '#' → logprob: -2.9504454135894775
    4. 'hon' → logprob: -3.0754454135894775
    5. 'm' → logprob: -3.2004454135894775
    6. 's' → logprob: -3.3254454135894775
    7. '```' → logprob: -3.5754454135894775
    8. 'for' → logprob: -3.7004454135894775
    9. 'f' → logprob: -3.8254454135894775
    10. 'p' → logprob: -3.8254454135894775

Token 43: ' Tama' (ID: 108269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6188240051269531
    2. ' #' → logprob: -1.3688240051269531
    3. '#' → logprob: -1.7438240051269531
    4. 'T' → logprob: -6.118824005126953
    5. ' for' → logprob: -6.306324005126953
    6. ' T' → logprob: -6.368824005126953
    7. 'for' → logprob: -6.431324005126953
    8. 'def' → logprob: -6.431324005126953
    9. 'H' → logprob: -6.743824005126953
    10. ' H' → logprob: -6.931324005126953

Token 44: ' is' (ID: 382)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.35349559783935547
    2. 'mi' → logprob: -2.3534955978393555
    3. 'k' → logprob: -3.2284955978393555
    4. 'n' → logprob: -3.4784955978393555
    5. 's' → logprob: -3.7284955978393555
    6. 'y' → logprob: -4.2284955978393555
    7. 'ri' → logprob: -4.2284955978393555
    8. 'shi' → logprob: -4.2284955978393555
    9. 'm' → logprob: -4.4784955978393555
    10. '#' → logprob: -4.8534955978393555

Token 45: ' one' (ID: 1001)
  Prédit: ' honest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' honest' → logprob: -0.3143117427825928
    2. ' ' → logprob: -2.4393117427825928
    3. ' a' → logprob: -3.0643117427825928
    4. 'hon' → logprob: -3.3143117427825928
    5. ' an' → logprob: -3.8143117427825928
    6. ' Honest' → logprob: -3.8143117427825928
    7. ' True' → logprob: -5.064311981201172
    8. 'Hon' → logprob: -5.189311981201172
    9. '_truth' → logprob: -5.439311981201172
    10. ' truthful' → logprob: -5.439311981201172

Token 46: ' suspect' (ID: 29645)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6724227666854858
    2. ' ' → logprob: -1.6724227666854858
    3. '_' → logprob: -2.0474228858947754
    4. ''s' → logprob: -2.1724228858947754
    5. '   ' → logprob: -3.5474228858947754
    6. '#' → logprob: -3.5474228858947754
    7. ' of' → logprob: -3.7974228858947754
    8. ')' → logprob: -3.8599228858947754
    9. ''' → logprob: -3.8599228858947754
    10. '-' → logprob: -3.9224228858947754

Token 47: ' who' (ID: 1218)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2054808139801025
    2. ',' → logprob: -1.7054808139801025
    3. '#' → logprob: -2.2054808139801025
    4. 'for' → logprob: -2.3304808139801025
    5. ' for' → logprob: -2.7054808139801025
    6. ' ' → logprob: -3.0804808139801025
    7. ':' → logprob: -3.7054808139801025
    8. 'possible' → logprob: -3.7054808139801025
    9. '<|end|>' → logprob: -4.080480575561523
    10. ')' → logprob: -4.080480575561523

Token 48: ' can't' (ID: 8535)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09278035908937454
    2. '#' → logprob: -4.092780590057373
    3. 'is' → logprob: -4.092780590057373
    4. ' might' → logprob: -5.342780590057373
    5. ''s' → logprob: -5.342780590057373
    6. '<|end|>' → logprob: -5.342780590057373
    7. ' was' → logprob: -5.467780590057373
    8. ' may' → logprob: -5.592780590057373
    9. ' could' → logprob: -5.592780590057373
    10. ' the' → logprob: -5.842780590057373

Token 49: ' testify' (ID: 124793)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5770147442817688
    2. 'be' → logprob: -0.9520147442817688
    3. ' lie' → logprob: -4.327014923095703
    4. 'tell' → logprob: -5.327014923095703
    5. 'claim' → logprob: -5.452014923095703
    6. 'lie' → logprob: -5.702014923095703
    7. 'have' → logprob: -6.202014923095703
    8. ' tell' → logprob: -6.577014923095703
    9. 'ex' → logprob: -6.702014923095703
    10. ' speak' → logprob: -6.764514923095703

Token 50: ' but' (ID: 889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7862840294837952
    2. ' can' → logprob: -1.5362839698791504
    3. '#' → logprob: -1.7862839698791504
    4. 'is' → logprob: -2.9112839698791504
    5. 'can' → logprob: -3.2862839698791504
    6. 'we' → logprob: -4.41128396987915
    7. ' the' → logprob: -4.53628396987915
    8. ' we' → logprob: -5.03628396987915
    9. '<|end|>' → logprob: -5.66128396987915
    10. '   ' → logprob: -5.78628396987915

Token 52: ' seen' (ID: 6177)
  Prédit: 'excluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'excluded' → logprob: -1.320978045463562
    2. ' a' → logprob: -1.820978045463562
    3. ' excluded' → logprob: -2.5709781646728516
    4. 'a' → logprob: -2.6959781646728516
    5. ')' → logprob: -2.9459781646728516
    6. ' innocent' → logprob: -3.0709781646728516
    7. ' the' → logprob: -3.3209781646728516
    8. 'the' → logprob: -3.3209781646728516
    9. ' considered' → logprob: -3.3209781646728516
    10. ' himself' → logprob: -3.3209781646728516

Token 53: ' entering' (ID: 25605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07490402460098267
    2. '<|end|>' → logprob: -2.824903964996338
    3. '_' → logprob: -5.449903964996338
    4. ' as' → logprob: -6.449903964996338
    5. ' ,' → logprob: -6.824903964996338
    6. ',' → logprob: -6.824903964996338
    7. ' in' → logprob: -7.324903964996338
    8. '<|end|>' → logprob: -7.574903964996338
    9. ' =' → logprob: -7.699903964996338
    10. '.' → logprob: -7.699903964996338

Token 54: ' last' (ID: 2174)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8768824338912964
    2. ' ' → logprob: -1.2518824338912964
    3. '<|end|>' → logprob: -2.251882553100586
    4. 'the' → logprob: -2.626882553100586
    5. ',' → logprob: -2.876882553100586
    6. '.' → logprob: -4.251882553100586
    7. '_' → logprob: -5.001882553100586
    8. ' a' → logprob: -5.001882553100586
    9. ' and' → logprob: -5.251882553100586
    10. 'm' → logprob: -5.251882553100586

Token 55: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' Find' (ID: 9764)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' Tama' (ID: 108269)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3150908946990967
    2. 's' → logprob: -1.6900908946990967
    3. ' a' → logprob: -2.3150908946990967
    4. ' out' → logprob: -2.3150908946990967
    5. 'all' → logprob: -2.4400908946990967
    6. 'a' → logprob: -2.4400908946990967
    7. 'the' → logprob: -2.8150908946990967
    8. ' all' → logprob: -3.0650908946990967
    9. '_' → logprob: -4.190091133117676
    10. 'out' → logprob: -4.940091133117676

Token 59: ' by' (ID: 656)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8761374950408936
    2. ':' → logprob: -1.7511374950408936
    3. '```' → logprob: -1.8761374950408936
    4. 's' → logprob: -2.8761374950408936
    5. '<|end|>' → logprob: -2.8761374950408936
    6. 'def' → logprob: -3.7511374950408936
    7. '
' → logprob: -3.8761374950408936
    8. 'possible' → logprob: -4.001137733459473
    9. 't' → logprob: -4.126137733459473
    10. 'for' → logprob: -4.501137733459473

Token 60: ' noting' (ID: 60394)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.6607040166854858
    2. ' identifying' → logprob: -2.0357041358947754
    3. ' checking' → logprob: -2.5357041358947754
    4. ' sim' → logprob: -2.9107041358947754
    5. ' determining' → logprob: -3.5357041358947754
    6. 'process' → logprob: -3.7857041358947754
    7. ' iter' → logprob: -3.7857041358947754
    8. 'ident' → logprob: -4.160704135894775
    9. ' searching' → logprob: -4.285704135894775
    10. ' finding' → logprob: -4.410704135894775

Token 61: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.1578062772750854
    2. ' the' → logprob: -1.2828062772750854
    3. ' which' → logprob: -1.2828062772750854
    4. ' all' → logprob: -3.407806396484375
    5. '<|end|>' → logprob: -3.907806396484375
    6. 'which' → logprob: -4.032806396484375
    7. ' ' → logprob: -4.532806396484375
    8. 'the' → logprob: -4.657806396484375
    9. ' if' → logprob: -5.032806396484375
    10. ' a' → logprob: -5.157806396484375

Token 62: ' he' (ID: 501)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4319661557674408
    2. ' the' → logprob: -2.3069660663604736
    3. ' any' → logprob: -2.3069660663604736
    4. ' for' → logprob: -3.5569660663604736
    5. 'all' → logprob: -3.5569660663604736
    6. 'the' → logprob: -4.056966304779053
    7. ' everyone' → logprob: -4.931966304779053
    8. ' a' → logprob: -5.056966304779053
    9. ' every' → logprob: -5.306966304779053
    10. 'everyone' → logprob: -5.306966304779053

Token 63: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.49106860160827637
    2. ' was' → logprob: -2.7410686016082764
    3. ' does' → logprob: -2.8660686016082764
    4. ' has' → logprob: -2.9910686016082764
    5. ''s' → logprob: -3.1160686016082764
    6. 'is' → logprob: -3.7410686016082764
    7. ' did' → logprob: -3.7410686016082764
    8. ' doesn't' → logprob: -3.7410686016082764
    9. 'does' → logprob: -4.3660688400268555
    10. 'did' → logprob: -4.4910688400268555

Token 64: ' always' (ID: 3324)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6369841694831848
    2. ' the' → logprob: -0.8869841694831848
    3. 'not' → logprob: -3.51198410987854
    4. 'the' → logprob: -3.76198410987854
    5. ' a' → logprob: -6.261984348297119
    6. ' someone' → logprob: -7.761984348297119
    7. ' neither' → logprob: -7.886984348297119
    8. 'n't' → logprob: -8.011983871459961
    9. ' seen' → logprob: -8.136983871459961
    10. '<|end|>' → logprob: -8.136983871459961

Token 65: ' after' (ID: 1934)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9792337417602539
    2. 'the' → logprob: -1.729233741760254
    3. 'not' → logprob: -2.479233741760254
    4. ' innocent' → logprob: -2.729233741760254
    5. ' not' → logprob: -3.104233741760254
    6. ' absent' → logprob: -3.229233741760254
    7. 'excluded' → logprob: -3.229233741760254
    8. ' accused' → logprob: -3.479233741760254
    9. ' excluded' → logprob: -3.729233741760254
    10. 'seen' → logprob: -4.229233741760254

Token 66: ' others' (ID: 5036)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.16355584561824799
    2. 'all' → logprob: -2.538555860519409
    3. 'everyone' → logprob: -4.03855562210083
    4. '<|end|>' → logprob: -4.41355562210083
    5. ' the' → logprob: -4.53855562210083
    6. ' everyone' → logprob: -4.66355562210083
    7. ' every' → logprob: -5.16355562210083
    8. 'the' → logprob: -5.28855562210083
    9. ' any' → logprob: -5.78855562210083
    10. 'every' → logprob: -6.16355562210083

Token 67: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0945475101470947
    2. '.' → logprob: -2.0945475101470947
    3. ' ' → logprob: -2.3445475101470947
    4. '<|end|>' → logprob: -2.7195475101470947
    5. 's' → logprob: -2.8445475101470947
    6. 'm' → logprob: -3.0945475101470947
    7. 't' → logprob: -3.0945475101470947
    8. '
' → logprob: -3.2195475101470947
    9. '```' → logprob: -3.3445475101470947
    10. ')' → logprob: -3.4695475101470947

Token 68: '#' (ID: 2)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.4843074679374695
    2. 'sus' → logprob: -1.8593075275421143
    3. 'visited' → logprob: -3.8593075275421143
    4. 't' → logprob: -3.9843075275421143
    5. '```' → logprob: -3.9843075275421143
    6. '#' → logprob: -4.234307289123535
    7. 's' → logprob: -4.359307289123535
    8. 'used' → logprob: -4.609307289123535
    9. 'for' → logprob: -4.859307289123535
    10. 'counts' → logprob: -4.859307289123535

Token 69: ' So' (ID: 2632)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.4498584568500519
    2. 'sus' → logprob: -2.0748584270477295
    3. 'visited' → logprob: -3.5748584270477295
    4. 'for' → logprob: -3.9498584270477295
    5. 'truth' → logprob: -4.199858665466309
    6. 'count' → logprob: -4.449858665466309
    7. 'candidate' → logprob: -4.574858665466309
    8. ' possible' → logprob: -4.699858665466309
    9. 'hon' → logprob: -4.699858665466309
    10. 'dp' → logprob: -4.824858665466309

Token 70: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.438963770866394
    2. ',' → logprob: -1.563963770866394
    3. ' suspects' → logprob: -2.0639638900756836
    4. 't' → logprob: -2.3139638900756836
    5. ' we' → logprob: -2.5639638900756836
    6. 'for' → logprob: -2.8139638900756836
    7. '#' → logprob: -2.9389638900756836
    8. ' the' → logprob: -3.6889638900756836
    9. ' you' → logprob: -4.313963890075684
    10. 'we' → logprob: -4.563963890075684

Token 71: ' Tama' (ID: 108269)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9847181439399719
    2. 'for' → logprob: -1.2347180843353271
    3. ' suspects' → logprob: -2.484718084335327
    4. 't' → logprob: -2.984718084335327
    5. 'possible' → logprob: -3.234718084335327
    6. 'we' → logprob: -3.734718084335327
    7. ' we' → logprob: -3.984718084335327
    8. '#' → logprob: -4.109718322753906
    9. 'sus' → logprob: -4.484718322753906
    10. '```' → logprob: -4.609718322753906

Token 72: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7058135271072388
    2. 'is' → logprob: -1.5808135271072388
    3. ' =' → logprob: -1.8308135271072388
    4. '=' → logprob: -2.080813407897949
    5. 'must' → logprob: -5.955813407897949
    6. ' must' → logprob: -6.205813407897949
    7. 'cannot' → logprob: -6.580813407897949
    8. ' can' → logprob: -6.705813407897949
    9. 's' → logprob: -6.705813407897949
    10. 'could' → logprob: -7.080813407897949

Token 73: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.28936779499053955
    2. ' not' → logprob: -2.41436767578125
    3. 'not' → logprob: -2.66436767578125
    4. 'be' → logprob: -3.28936767578125
    5. ' always' → logprob: -3.53936767578125
    6. 'always' → logprob: -4.53936767578125
    7. ' have' → logprob: -4.91436767578125
    8. 'have' → logprob: -6.03936767578125
    9. 'n't' → logprob: -6.28936767578125
    10. ' appear' → logprob: -7.03936767578125

Token 74: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3326094448566437
    2. ' a' → logprob: -2.8326094150543213
    3. 'm' → logprob: -3.0826094150543213
    4. 'the' → logprob: -3.0826094150543213
    5. ' m' → logprob: -3.4576094150543213
    6. ' n' → logprob: -3.5826094150543213
    7. 'n' → logprob: -3.9576094150543213
    8. ' an' → logprob: -4.0826096534729
    9. 'a' → logprob: -5.4576096534729
    10. ' someone' → logprob: -5.5826096534729

Token 75: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.1930844485759735
    2. 'one' → logprob: -3.068084478378296
    3. ' last' → logprob: -3.068084478378296
    4. ' person' → logprob: -3.818084478378296
    5. ' suspect' → logprob: -4.693084239959717
    6. 'last' → logprob: -4.818084239959717
    7. ' only' → logprob: -4.943084239959717
    8. ' smallest' → logprob: -5.068084239959717
    9. 'sus' → logprob: -5.068084239959717
    10. ' largest' → logprob: -5.943084239959717

Token 76: ' who' (ID: 1218)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5197334289550781
    2. ' who' → logprob: -1.1447334289550781
    3. 'not' → logprob: -2.644733428955078
    4. ' whose' → logprob: -5.019733428955078
    5. ' with' → logprob: -5.519733428955078
    6. 'who' → logprob: -5.769733428955078
    7. ' who's' → logprob: -7.144733428955078
    8. ' that' → logprob: -8.019733428955078
    9. ' in' → logprob: -8.269733428955078
    10. ' for' → logprob: -8.644733428955078

Token 77: ' appears' (ID: 14518)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8195486068725586
    2. ' does' → logprob: -1.8195486068725586
    3. 'does' → logprob: -2.3195486068725586
    4. ' never' → logprob: -2.5695486068725586
    5. ' doesn't' → logprob: -2.5695486068725586
    6. 'is' → logprob: -2.9445486068725586
    7. ' has' → logprob: -3.6945486068725586
    8. ' isn't' → logprob: -4.069548606872559
    9. 'never' → logprob: -4.069548606872559
    10. ''s' → logprob: -5.194548606872559

Token 78: ' only' (ID: 1606)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7045935392379761
    2. ' only' → logprob: -1.329593539237976
    3. ' at' → logprob: -2.8295936584472656
    4. ' as' → logprob: -3.3295936584472656
    5. ' last' → logprob: -3.3295936584472656
    6. 'in' → logprob: -3.5795936584472656
    7. 'only' → logprob: -4.329593658447266
    8. ' m' → logprob: -4.704593658447266
    9. ' not' → logprob: -4.954593658447266
    10. ' first' → logprob: -5.079593658447266

Token 79: ' on' (ID: 402)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.28295645117759705
    2. ' once' → logprob: -2.28295636177063
    3. 'as' → logprob: -2.90795636177063
    4. ' in' → logprob: -2.90795636177063
    5. 'once' → logprob: -4.282956600189209
    6. 'in' → logprob: -4.782956600189209
    7. '<|end|>' → logprob: -4.782956600189209
    8. ' ' → logprob: -6.407956600189209
    9. ' on' → logprob: -6.657956600189209
    10. '<|end|>' → logprob: -8.40795612335205

Token 80: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.035273075103759766
    2. ' y' → logprob: -3.6602730751037598
    3. 'the' → logprob: -5.91027307510376
    4. 'y' → logprob: -6.03527307510376
    5. '<|end|>' → logprob: -6.66027307510376
    6. ' ' → logprob: -6.78527307510376
    7. ''s' → logprob: -8.160272598266602
    8. ' x' → logprob: -8.410272598266602
    9. ' right' → logprob: -8.410272598266602
    10. ' a' → logprob: -9.035272598266602

Token 81: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -1.0643976926803589
    2. 'right' → logprob: -1.1893976926803589
    3. 'y' → logprob: -1.3143976926803589
    4. ' y' → logprob: -3.5643978118896484
    5. 'left' → logprob: -4.064397811889648
    6. ' left' → logprob: -4.189397811889648
    7. ''s' → logprob: -5.439397811889648
    8. 'second' → logprob: -5.689397811889648
    9. 'y's' → logprob: -5.689397811889648
    10. 'test' → logprob: -6.064397811889648

Token 82: ' side' (ID: 4307)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1516972929239273
    2. '_' → logprob: -2.0266973972320557
    3. '(' → logprob: -5.526697158813477
    4. 's' → logprob: -6.276697158813477
    5. '[' → logprob: -7.651697158813477
    6. ' )' → logprob: -7.651697158813477
    7. ' ' → logprob: -8.026697158813477
    8. ',' → logprob: -8.151697158813477
    9. 'for' → logprob: -8.776697158813477
    10. ''s' → logprob: -9.026697158813477

Token 83: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3840886950492859
    2. ')' → logprob: -2.1340887546539307
    3. '#' → logprob: -3.1340887546539307
    4. 's' → logprob: -3.5090887546539307
    5. 'r' → logprob: -3.6340887546539307
    6. 'm' → logprob: -3.7590887546539307
    7. 'c' → logprob: -4.509088516235352
    8. 'x' → logprob: -4.634088516235352
    9. 'possible' → logprob: -4.634088516235352
    10. '```' → logprob: -4.884088516235352

Token 84: ' testimon' (ID: 109591)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.34144899249076843
    2. 'the' → logprob: -1.7164490222930908
    3. ' ' → logprob: -3.591449022293091
    4. ' test' → logprob: -3.716449022293091
    5. '<|end|>' → logprob: -4.341448783874512
    6. 'test' → logprob: -4.466448783874512
    7. ')' → logprob: -4.966448783874512
    8. ' y' → logprob: -5.341448783874512
    9. ' a' → logprob: -5.466448783874512
    10. ' '' → logprob: -6.341448783874512

Token 85: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.00506048696115613
    2. 'es' → logprob: -6.00506067276001
    3. 'y' → logprob: -6.38006067276001
    4. 'i' → logprob: -7.38006067276001
    5. '   ' → logprob: -9.005060195922852
    6. 'o' → logprob: -10.380060195922852
    7. '```' → logprob: -10.880060195922852
    8. 's' → logprob: -11.255060195922852
    9. 'e' → logprob: -11.255060195922852
    10. 'a' → logprob: -11.255060195922852

Token 86: ' or' (ID: 503)
  Prédit: 'sus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sus' → logprob: -1.7056307792663574
    2. 'from' → logprob: -1.9556307792663574
    3. '#' → logprob: -2.0806307792663574
    4. 'counts' → logprob: -2.3306307792663574
    5. 'c' → logprob: -2.4556307792663574
    6. 'right' → logprob: -2.5806307792663574
    7. ' suspects' → logprob: -2.9556307792663574
    8. 'possible' → logprob: -3.0806307792663574
    9. 's' → logprob: -3.5806307792663574
    10. 'm' → logprob: -3.8306307792663574

Token 87: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.504120945930481
    2. ' never' → logprob: -1.504120945930481
    3. 'not' → logprob: -2.1291208267211914
    4. 'never' → logprob: -3.0041208267211914
    5. ' is' → logprob: -6.379120826721191
    6. 'none' → logprob: -7.379120826721191
    7. ' none' → logprob: -7.629120826721191
    8. 'n' → logprob: -7.879120826721191
    9. ' on' → logprob: -8.004120826721191
    10. ' does' → logprob: -8.129120826721191

Token 88: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.36223310232162476
    2. 'on' → logprob: -1.8622331619262695
    3. ' in' → logprob: -2.6122331619262695
    4. 'in' → logprob: -3.6122331619262695
    5. ' present' → logprob: -4.6122331619262695
    6. ')' → logprob: -4.7372331619262695
    7. 'found' → logprob: -4.9872331619262695
    8. ' found' → logprob: -5.1122331619262695
    9. ' appearing' → logprob: -5.4872331619262695
    10. 'present' → logprob: -5.4872331619262695

Token 89: ' left' (ID: 3561)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.20379474759101868
    2. 'the' → logprob: -1.7037947177886963
    3. ' ' → logprob: -7.828794956207275
    4. ' any' → logprob: -7.953794956207275
    5. ' all' → logprob: -8.078794479370117
    6. ' a' → logprob: -8.328794479370117
    7. 'all' → logprob: -8.828794479370117
    8. 'any' → logprob: -9.078794479370117
    9. 'a' → logprob: -9.203794479370117
    10. 'left' → logprob: -9.203794479370117

Token 90: ' side' (ID: 4307)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4149731993675232
    2. '#' → logprob: -2.164973258972168
    3. 'sus' → logprob: -2.289973258972168
    4. 'from' → logprob: -3.289973258972168
    5. 'all' → logprob: -4.164973258972168
    6. 'l' → logprob: -4.164973258972168
    7. 's' → logprob: -4.789973258972168
    8. 'possible' → logprob: -4.789973258972168
    9. ' suspects' → logprob: -4.789973258972168
    10. 'used' → logprob: -5.039973258972168

Token 91: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.651033878326416
    2. 'l' → logprob: -2.151033878326416
    3. 't' → logprob: -2.651033878326416
    4. '_' → logprob: -2.776033878326416
    5. 's' → logprob: -3.151033878326416
    6. 'x' → logprob: -3.651033878326416
    7. 'possible' → logprob: -3.651033878326416
    8. '```' → logprob: -3.651033878326416
    9. 'left' → logprob: -3.901033878326416
    10. 'm' → logprob: -3.901033878326416

Token 92: '#' (ID: 2)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4901087284088135
    2. 'l' → logprob: -1.7401087284088135
    3. '#' → logprob: -2.1151087284088135
    4. 'x' → logprob: -3.6151087284088135
    5. 'all' → logprob: -3.8651087284088135
    6. 'sus' → logprob: -4.490108489990234
    7. '_' → logprob: -4.990108489990234
    8. 's' → logprob: -4.990108489990234
    9. 'used' → logprob: -5.115108489990234
    10. 'from' → logprob: -5.615108489990234

Token 93: ' But' (ID: 3072)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6850914359092712
    2. 'l' → logprob: -1.310091495513916
    3. 'all' → logprob: -2.935091495513916
    4. '#' → logprob: -3.185091495513916
    5. 'sus' → logprob: -3.185091495513916
    6. 'x' → logprob: -3.685091495513916
    7. 's' → logprob: -4.060091495513916
    8. '_' → logprob: -4.560091495513916
    9. 'possible' → logprob: -4.685091495513916
    10. 'from' → logprob: -4.935091495513916

Token 94: ' problem' (ID: 4792)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.4731155633926392
    2. ' the' → logprob: -1.8481155633926392
    3. 'T' → logprob: -2.3481154441833496
    4. 'we' → logprob: -2.4731154441833496
    5. 'the' → logprob: -2.8481154441833496
    6. ' to' → logprob: -3.3481154441833496
    7. ' there' → logprob: -3.8481154441833496
    8. 'since' → logprob: -3.8481154441833496
    9. ' all' → logprob: -3.9731154441833496
    10. 'there' → logprob: -3.9731154441833496

Token 95: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8937320113182068
    2. '<|end|>' → logprob: -1.8937320709228516
    3. ':' → logprob: -2.1437320709228516
    4. '.' → logprob: -2.2687320709228516
    5. ' continues' → logprob: -2.5187320709228516
    6. '<|end|>' → logprob: -3.3937320709228516
    7. 'is' → logprob: -3.7687320709228516
    8. 'atic' → logprob: -3.8937320709228516
    9. '=' → logprob: -4.393732070922852
    10. '#' → logprob: -5.143732070922852

Token 96: ' Tama' (ID: 108269)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.7335332036018372
    2. 'that' → logprob: -0.9835332036018372
    3. 'T' → logprob: -2.4835331439971924
    4. 'the' → logprob: -4.3585333824157715
    5. '"' → logprob: -4.6085333824157715
    6. 'm' → logprob: -5.8585333824157715
    7. ' the' → logprob: -5.8585333824157715
    8. 'to' → logprob: -5.9835333824157715
    9. 'he' → logprob: -5.9835333824157715
    10. ' no' → logprob: -6.2335333824157715

Token 97: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.39021357893943787
    2. 'is' → logprob: -2.5152134895324707
    3. ' appears' → logprob: -2.6402134895324707
    4. ' was' → logprob: -3.5152134895324707
    5. ' can' → logprob: -3.7652134895324707
    6. 'must' → logprob: -4.390213489532471
    7. 'appe' → logprob: -4.515213489532471
    8. ' must' → logprob: -4.515213489532471
    9. ''s' → logprob: -4.640213489532471
    10. 'は' → logprob: -4.765213489532471

Token 98: ' fixed' (ID: 13213)
  Prédit: ' always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' always' → logprob: -1.386985421180725
    2. ' the' → logprob: -2.0119853019714355
    3. ' unique' → logprob: -2.2619853019714355
    4. 'always' → logprob: -2.5119853019714355
    5. ' not' → logprob: -2.6369853019714355
    6. ' exactly' → logprob: -2.7619853019714355
    7. 'the' → logprob: -3.0119853019714355
    8. 'not' → logprob: -3.1369853019714355
    9. ' one' → logprob: -3.6369853019714355
    10. ' among' → logprob: -3.7619853019714355

Token 99: ' to' (ID: 316)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0454471111297607
    2. '<|end|>' → logprob: -1.7954471111297607
    3. '
' → logprob: -1.9204471111297607
    4. '#' → logprob: -2.1704471111297607
    5. ':' → logprob: -2.6704471111297607
    6. 'n' → logprob: -3.1704471111297607
    7. 't' → logprob: -3.2954471111297607
    8. '_' → logprob: -4.17044734954834
    9. '```' → logprob: -4.17044734954834
    10. '\' → logprob: -4.79544734954834

Token 100: ' one' (ID: 1001)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6799667477607727
    2. ' be' → logprob: -1.054966688156128
    3. ' m' → logprob: -3.054966688156128
    4. 'n' → logprob: -4.054966926574707
    5. 'the' → logprob: -4.054966926574707
    6. 'be' → logprob: -4.179966926574707
    7. ' n' → logprob: -4.554966926574707
    8. '0' → logprob: -4.804966926574707
    9. ' the' → logprob: -4.804966926574707
    10. '1' → logprob: -5.054966926574707

Token 101: ' suspect' (ID: 29645)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4313504993915558
    2. 'sus' → logprob: -2.5563504695892334
    3. '#' → logprob: -2.9313504695892334
    4. 'l' → logprob: -2.9313504695892334
    5. 'possible' → logprob: -2.9313504695892334
    6. 'from' → logprob: -3.3063504695892334
    7. ' suspects' → logprob: -3.5563504695892334
    8. 's' → logprob: -4.5563507080078125
    9. 'all' → logprob: -4.8063507080078125
    10. ' left' → logprob: -5.0563507080078125

Token 102: ' (' (ID: 350)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5146287083625793
    2. 'sus' → logprob: -1.8896286487579346
    3. '#' → logprob: -2.1396286487579346
    4. 'possible' → logprob: -2.8896286487579346
    5. 'used' → logprob: -4.389628887176514
    6. 'counts' → logprob: -4.389628887176514
    7. 'from' → logprob: -4.514628887176514
    8. 'all' → logprob: -5.014628887176514
    9. ' suspects' → logprob: -5.139628887176514
    10. 'count' → logprob: -5.514628887176514

Token 103: 'not' (ID: 2878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008603655151091516
    2. ' )' → logprob: -8.000860214233398
    3. 'm' → logprob: -8.875860214233398
    4. '#' → logprob: -9.625860214233398
    5. ')n' → logprob: -10.000860214233398
    6. ',' → logprob: -10.125860214233398
    7. 'n' → logprob: -10.125860214233398
    8. ' m' → logprob: -10.125860214233398
    9. ')m' → logprob: -10.375860214233398
    10. '0' → logprob: -11.250860214233398

Token 104: ' given' (ID: 4335)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.2561489343643188
    2. 'among' → logprob: -1.6311489343643188
    3. 'one' → logprob: -2.5061488151550293
    4. 'necessarily' → logprob: -2.7561488151550293
    5. 'a' → logprob: -2.8811488151550293
    6. 'm' → logprob: -3.3811488151550293
    7. 'from' → logprob: -3.7561488151550293
    8. 'mentioned' → logprob: -3.7561488151550293
    9. ' among' → logprob: -3.7561488151550293
    10. 'just' → logprob: -3.8811488151550293

Token 105: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002993751084432006
    2. ' )' → logprob: -6.377993583679199
    3. 'm' → logprob: -8.3779935836792
    4. ',' → logprob: -8.5029935836792
    5. '),' → logprob: -9.3779935836792
    6. '<|end|>' → logprob: -9.6279935836792
    7. ' to' → logprob: -10.1279935836792
    8. ').' → logprob: -10.1279935836792
    9. ' in' → logprob: -10.2529935836792
    10. ''s' → logprob: -10.3779935836792

Token 106: ' input' (ID: 3422)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.44834601879119873
    2. 'problem' → logprob: -1.9483460187911987
    3. 'test' → logprob: -2.5733461380004883
    4. 'code' → logprob: -2.6983461380004883
    5. ' the' → logprob: -3.3233461380004883
    6. ' problem' → logprob: -4.448346138000488
    7. ' code' → logprob: -4.448346138000488
    8. 'input' → logprob: -4.948346138000488
    9. ' test' → logprob: -5.823346138000488
    10. 'advance' → logprob: -7.323346138000488

Token 107: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03417785465717316
    2. 'm' → logprob: -4.784177780151367
    3. 's' → logprob: -4.909177780151367
    4. '_' → logprob: -5.034177780151367
    5. ' )' → logprob: -6.034177780151367
    6. 'x' → logprob: -6.909177780151367
    7. '<|end|>' → logprob: -6.909177780151367
    8. ' ' → logprob: -7.034177780151367
    9. '```' → logprob: -7.284177780151367
    10. ',' → logprob: -7.284177780151367

Token 108: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5749127864837646
    2. 'sus' → logprob: -2.0749127864837646
    3. 'for' → logprob: -2.6999127864837646
    4. 'm' → logprob: -3.1999127864837646
    5. ' suspects' → logprob: -3.1999127864837646
    6. 't' → logprob: -3.4499127864837646
    7. 'possible' → logprob: -3.4499127864837646
    8. 'left' → logprob: -3.6999127864837646
    9. 's' → logprob: -4.449913024902344
    10. ' for' → logprob: -4.699913024902344

Token 109: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1623554229736328
    2. ' the' → logprob: -1.9123554229736328
    3. ' we' → logprob: -1.9123554229736328
    4. 'm' → logprob: -2.537355422973633
    5. ' m' → logprob: -2.537355422973633
    6. ' next' → logprob: -3.287355422973633
    7. 'for' → logprob: -3.412355422973633
    8. 'the' → logprob: -3.912355422973633
    9. 'T' → logprob: -4.037355422973633
    10. ' all' → logprob: -4.287355422973633

Token 110: ' just' (ID: 1327)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6153626441955566
    2. ' can' → logprob: -1.9903626441955566
    3. ' should' → logprob: -2.2403626441955566
    4. 'need' → logprob: -2.7403626441955566
    5. ' want' → logprob: -3.4903626441955566
    6. ''ll' → logprob: -3.8653626441955566
    7. 'can' → logprob: -3.8653626441955566
    8. ' must' → logprob: -4.365362644195557
    9. ' continue' → logprob: -4.490362644195557
    10. 'should' → logprob: -4.615362644195557

Token 111: ' know' (ID: 1761)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.9467861652374268
    2. 'ass' → logprob: -2.1967861652374268
    3. 'check' → logprob: -2.1967861652374268
    4. ' check' → logprob: -2.3217861652374268
    5. 'print' → logprob: -2.5717861652374268
    6. 'identify' → logprob: -2.5717861652374268
    7. ' find' → logprob: -2.6967861652374268
    8. 'consider' → logprob: -2.9467861652374268
    9. 'continue' → logprob: -3.3217861652374268
    10. ' assume' → logprob: -3.3217861652374268

Token 112: ' Tama' (ID: 108269)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' does' (ID: 2226)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2655225098133087
    2. 'possible' → logprob: -3.1405224800109863
    3. 'sus' → logprob: -3.3905224800109863
    4. 'm' → logprob: -3.8905224800109863
    5. 't' → logprob: -4.015522480010986
    6. '<|end|>' → logprob: -4.015522480010986
    7. ' suspects' → logprob: -4.390522480010986
    8. '_' → logprob: -4.515522480010986
    9. 'left' → logprob: -4.640522480010986
    10. 's' → logprob: -4.765522480010986

Token 114: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.038197100162506104
    2. ' not' → logprob: -3.2881970405578613
    3. 'n't' → logprob: -8.78819751739502
    4. 'n' → logprob: -12.91319751739502
    5. 'nt' → logprob: -15.91319751739502
    6. 't' → logprob: -15.91319751739502
    7. '	not' → logprob: -15.91319751739502
    8. '_not' → logprob: -16.288196563720703
    9. '```' → logprob: -16.913196563720703
    10. 'm' → logprob: -17.288196563720703

Token 115: ' testify' (ID: 124793)
  Prédit: ' appear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' appear' → logprob: -0.2829129695892334
    2. 'appear' → logprob: -1.4079129695892334
    3. 'appe' → logprob: -8.220413208007812
    4. ' ' → logprob: -9.032913208007812
    5. 'exist' → logprob: -9.220413208007812
    6. ' have' → logprob: -9.720413208007812
    7. '```' → logprob: -9.970413208007812
    8. 'ever' → logprob: -10.032913208007812
    9. ')' → logprob: -10.157913208007812
    10. 'n' → logprob: -10.220413208007812

Token 116: '.

' (ID: 364)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5604445338249207
    2. 'sus' → logprob: -2.1854445934295654
    3. 'counts' → logprob: -2.5604445934295654
    4. 'possible' → logprob: -2.8104445934295654
    5. 'count' → logprob: -3.4354445934295654
    6. 'appe' → logprob: -3.6854445934295654
    7. 'all' → logprob: -3.6854445934295654
    8. '#' → logprob: -3.6854445934295654
    9. 'from' → logprob: -4.185444355010986
    10. 'c' → logprob: -4.560444355010986

Token 117: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7526371479034424
    2. 'sus' → logprob: -1.6276371479034424
    3. 'left' → logprob: -1.7526371479034424
    4. 'used' → logprob: -3.3776371479034424
    5. 'possible' → logprob: -3.6276371479034424
    6. 'all' → logprob: -4.002636909484863
    7. 'answers' → logprob: -4.127636909484863
    8. 'for' → logprob: -4.752636909484863
    9. 'counts' → logprob: -4.877636909484863
    10. 't' → logprob: -5.627636909484863

Token 118: ' Build' (ID: 10885)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.618313729763031
    2. 'sus' → logprob: -1.7433137893676758
    3. '#' → logprob: -1.9933137893676758
    4. 'possible' → logprob: -2.493313789367676
    5. 'all' → logprob: -3.993313789367676
    6. 'from' → logprob: -5.118313789367676
    7. 'right' → logprob: -5.368313789367676
    8. 'count' → logprob: -5.368313789367676
    9. 'counter' → logprob: -5.743313789367676
    10. 'counts' → logprob: -5.743313789367676

Token 119: ' a' (ID: 261)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3579024076461792
    2. ' left' → logprob: -2.1079025268554688
    3. 'from' → logprob: -2.2329025268554688
    4. 'adj' → logprob: -3.9829025268554688
    5. ' from' → logprob: -4.732902526855469
    6. ' a' → logprob: -4.857902526855469
    7. 'a' → logprob: -5.107902526855469
    8. 'graph' → logprob: -5.107902526855469
    9. ' suspects' → logprob: -5.107902526855469
    10. 'sus' → logprob: -5.357902526855469

Token 120: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7384370565414429
    2. ' graph' → logprob: -1.1134370565414429
    3. 'set' → logprob: -1.9884370565414429
    4. ' set' → logprob: -3.7384371757507324
    5. 'from' → logprob: -4.113437175750732
    6. 'left' → logprob: -4.613437175750732
    7. ' left' → logprob: -6.238437175750732
    8. ' from' → logprob: -7.238437175750732
    9. 'dict' → logprob: -7.863437175750732
    10. ' adjacency' → logprob: -7.863437175750732

Token 121: ' of' (ID: 328)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09089237451553345
    2. ' graph' → logprob: -2.4658923149108887
    3. 'adj' → logprob: -7.465892314910889
    4. 'from' → logprob: -7.840892314910889
    5. ' =' → logprob: -8.340892791748047
    6. '_graph' → logprob: -8.590892791748047
    7. '=' → logprob: -8.715892791748047
    8. ' adjacency' → logprob: -9.465892791748047
    9. 'g' → logprob: -9.840892791748047
    10. ' from' → logprob: -9.965892791748047

Token 122: ' constraints' (ID: 31060)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2033497095108032
    2. ' suspects' → logprob: -1.7033497095108032
    3. ' m' → logprob: -2.2033495903015137
    4. ' edges' → logprob: -2.3283495903015137
    5. 'edges' → logprob: -2.8283495903015137
    6. 'test' → logprob: -2.8283495903015137
    7. ' test' → logprob: -3.5783495903015137
    8. 'from' → logprob: -4.328349590301514
    9. ' testimon' → logprob: -4.328349590301514
    10. 'sus' → logprob: -4.328349590301514

Token 123: ':' (ID: 25)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.006022180430591106
    2. ' graph' → logprob: -5.506021976470947
    3. 'from' → logprob: -6.381021976470947
    4. 'adj' → logprob: -8.756022453308105
    5. ' from' → logprob: -10.506022453308105
    6. 'g' → logprob: -11.131022453308105
    7. 'edges' → logprob: -11.631022453308105
    8. '_graph' → logprob: -11.756022453308105
    9. 'constraints' → logprob: -11.756022453308105
    10. 'import' → logprob: -12.381022453308105

Token 124: ' x' (ID: 1215)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.39873987436294556
    2. 'graph' → logprob: -1.1487398147583008
    3. ' from' → logprob: -5.898739814758301
    4. 'from' → logprob: -6.023739814758301
    5. ' adjacency' → logprob: -6.523739814758301
    6. 'adj' → logprob: -6.773739814758301
    7. ' adj' → logprob: -6.898739814758301
    8. ' suspects' → logprob: -7.398739814758301
    9. '```' → logprob: -8.0237398147583
    10. ' g' → logprob: -8.0237398147583

Token 125: ' must' (ID: 2804)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7495112419128418
    2. ' ->' → logprob: -0.9995112419128418
    3. ' ,' → logprob: -2.874511241912842
    4. ' =' → logprob: -3.749511241912842
    5. ' -->' → logprob: -4.249511241912842
    6. ' ' → logprob: -5.124511241912842
    7. '->' → logprob: -5.124511241912842
    8. ' to' → logprob: -5.624511241912842
    9. ' and' → logprob: -5.749511241912842
    10. ' -' → logprob: -5.749511241912842

Token 126: ' come' (ID: 3063)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7572184205055237
    2. ' come' → logprob: -1.007218360900879
    3. ' appear' → logprob: -2.757218360900879
    4. ' not' → logprob: -3.632218360900879
    5. 'come' → logprob: -3.632218360900879
    6. 'not' → logprob: -3.882218360900879
    7. 'appear' → logprob: -4.132218360900879
    8. 'be' → logprob: -4.757218360900879
    9. ' before' → logprob: -7.632218360900879
    10. 'before' → logprob: -7.757218360900879

Token 127: ' before' (ID: 2254)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.3136430084705353
    2. ' before' → logprob: -1.313642978668213
    3. '_before' → logprob: -7.938642978668213
    4. 'after' → logprob: -11.188643455505371
    5. '	before' → logprob: -12.563643455505371
    6. '-before' → logprob: -13.438643455505371
    7. '<|end|>' → logprob: -13.813643455505371
    8. 'first' → logprob: -13.938643455505371
    9. ' ' → logprob: -14.063643455505371
    10. ' after' → logprob: -14.188643455505371

Token 128: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04858816787600517
    2. ' y' → logprob: -3.048588275909424
    3. '	y' → logprob: -15.173587799072266
    4. ' ' → logprob: -15.798587799072266
    5. ',y' → logprob: -16.173587799072266
    6. ',' → logprob: -16.673587799072266
    7. '_y' → logprob: -16.798587799072266
    8. '    ' → logprob: -16.923587799072266
    9. '<|end|>' → logprob: -16.923587799072266
    10. '   ' → logprob: -17.298587799072266

Token 129: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.002857297658920288
    2. ' graph' → logprob: -6.252857208251953
    3. 'from' → logprob: -7.377857208251953
    4. 'g' → logprob: -9.502857208251953
    5. 'adj' → logprob: -9.627857208251953
    6. '_graph' → logprob: -10.252857208251953
    7. '
' → logprob: -10.252857208251953
    8. 'edges' → logprob: -10.377857208251953
    9. 'import' → logprob: -11.252857208251953
    10. 'G' → logprob: -11.752857208251953

Token 130: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.016158943995833397
    2. ' graph' → logprob: -4.3911590576171875
    3. 'from' → logprob: -5.8911590576171875
    4. 'edges' → logprob: -7.7661590576171875
    5. '
' → logprob: -8.766159057617188
    6. 'adj' → logprob: -9.141159057617188
    7. 'g' → logprob: -10.016159057617188
    8. ' from' → logprob: -10.141159057617188
    9. '_graph' → logprob: -10.391159057617188
    10. ' edges' → logprob: -10.766159057617188

Token 131: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06356395035982132
    2. ' graph' → logprob: -3.4385640621185303
    3. 'g' → logprob: -3.8135640621185303
    4. '
' → logprob: -5.438563823699951
    5. 'G' → logprob: -7.313563823699951
    6. '```' → logprob: -7.813563823699951
    7. 'edges' → logprob: -7.938563823699951
    8. 'from' → logprob: -8.81356430053711
    9. ' g' → logprob: -9.06356430053711
    10. 'for' → logprob: -9.06356430053711

Token 132: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7733840346336365
    2. '=' → logprob: -1.2733840942382812
    3. 'edges' → logprob: -2.8983840942382812
    4. 'graph' → logprob: -3.0233840942382812
    5. 'm' → logprob: -3.2733840942382812
    6. ' edges' → logprob: -3.3983840942382812
    7. '[]' → logprob: -3.6483840942382812
    8. ' ' → logprob: -4.648384094238281
    9. ' graph' → logprob: -4.773384094238281
    10. 's' → logprob: -4.898384094238281

Token 133: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04863380640745163
    2. 'x' → logprob: -3.0486338138580322
    3. ' test' → logprob: -11.673633575439453
    4. ' y' → logprob: -11.798633575439453
    5. ' ' → logprob: -11.798633575439453
    6. '(x' → logprob: -12.798633575439453
    7. '	x' → logprob: -12.798633575439453
    8. '   ' → logprob: -13.048633575439453
    9. ' edges' → logprob: -13.298633575439453
    10. ' (' → logprob: -13.298633575439453

Token 134: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.022154472768306732
    2. 'to' → logprob: -3.8971545696258545
    3. ',' → logprob: -7.397154331207275
    4. ')' → logprob: -7.897154331207275
    5. ' ' → logprob: -8.772154808044434
    6. '_to' → logprob: -9.022154808044434
    7. '<|end|>' → logprob: -9.522154808044434
    8. ' ,' → logprob: -9.522154808044434
    9. ' for' → logprob: -10.022154808044434
    10. '```' → logprob: -10.772154808044434

Token 135: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.008615872822701931
    2. 'y' → logprob: -4.758615970611572
    3. ' ' → logprob: -13.883615493774414
    4. '	y' → logprob: -16.008615493774414
    5. ' ' → logprob: -16.258615493774414
    6. '<|end|>' → logprob: -16.508615493774414
    7. ',y' → logprob: -17.883615493774414
    8. ''y' → logprob: -18.258615493774414
    9. ',' → logprob: -18.383615493774414
    10. '```' → logprob: -18.633615493774414

Token 136: ':' (ID: 25)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7802799940109253
    2. '
' → logprob: -1.0302799940109253
    3. 'for' → logprob: -2.280280113220215
    4. ' graph' → logprob: -3.405280113220215
    5. 'edges' → logprob: -3.780280113220215
    6. ' for' → logprob: -4.405280113220215
    7. ' edges' → logprob: -5.280280113220215
    8. '\n' → logprob: -6.155280113220215
    9. 'm' → logprob: -6.280280113220215
    10. 'g' → logprob: -6.905280113220215

Token 137: ' x' (ID: 1215)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.41340702772140503
    2. ' graph' → logprob: -1.1634070873260498
    3. 'edges' → logprob: -5.038406848907471
    4. 'for' → logprob: -5.413406848907471
    5. '
' → logprob: -5.663406848907471
    6. ' for' → logprob: -5.663406848907471
    7. ' edges' → logprob: -5.663406848907471
    8. ' 
' → logprob: -5.913406848907471
    9. '```' → logprob: -7.913406848907471
    10. '	graph' → logprob: -8.288407325744629

Token 138: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29942435026168823
    2. ')' → logprob: -2.299424409866333
    3. ' ,' → logprob: -2.299424409866333
    4. '<|end|>' → logprob: -4.799424171447754
    5. ' ' → logprob: -5.049424171447754
    6. ' ->' → logprob: -5.174424171447754
    7. 'for' → logprob: -5.299424171447754
    8. ' in' → logprob: -5.424424171447754
    9. ' to' → logprob: -5.549424171447754
    10. '<|end|>' → logprob: -5.924424171447754

Token 139: 'y' (ID: 88)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.22542841732501984
    2. 'y' → logprob: -1.6004284620285034
    3. ' ' → logprob: -11.350428581237793
    4. ' ' → logprob: -14.225428581237793
    5. '<|end|>' → logprob: -14.475428581237793
    6. ' `' → logprob: -14.725428581237793
    7. 'n' → logprob: -14.975428581237793
    8. '	y' → logprob: -14.975428581237793
    9. ' n' → logprob: -15.100428581237793
    10. ' space' → logprob: -15.600428581237793

Token 140: ' means' (ID: 4748)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.22198714315891266
    2. '
' → logprob: -2.096987247467041
    3. ' graph' → logprob: -3.096987247467041
    4. 'edges' → logprob: -3.971987247467041
    5. 'for' → logprob: -5.346987247467041
    6. ' edges' → logprob: -5.346987247467041
    7. ' for' → logprob: -6.596987247467041
    8. 'g' → logprob: -7.721987247467041
    9. '
' → logprob: -8.721986770629883
    10. 'adj' → logprob: -8.971986770629883

Token 141: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18651214241981506
    2. ' x' → logprob: -2.8115122318267822
    3. '"' → logprob: -3.4365122318267822
    4. 'y' → logprob: -3.9365122318267822
    5. 'test' → logprob: -4.311511993408203
    6. ' that' → logprob: -4.811511993408203
    7. ' y' → logprob: -4.936511993408203
    8. ' test' → logprob: -5.061511993408203
    9. 'the' → logprob: -5.811511993408203
    10. 'm' → logprob: -5.811511993408203

Token 142: ' before' (ID: 2254)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.11837707459926605
    2. 'must' → logprob: -2.6183769702911377
    3. ' comes' → logprob: -4.368377208709717
    4. ' is' → logprob: -4.868377208709717
    5. ' should' → logprob: -5.243377208709717
    6. ' ' → logprob: -5.743377208709717
    7. '<|end|>' → logprob: -5.743377208709717
    8. ' before' → logprob: -6.993377208709717
    9. ' appears' → logprob: -7.118377208709717
    10. ' has' → logprob: -7.368377208709717

Token 143: ' y' (ID: 342)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9008171558380127
    2. 'edges' → logprob: -1.9008171558380127
    3. ')' → logprob: -2.0258171558380127
    4. 'n' → logprob: -2.0258171558380127
    5. ' ' → logprob: -2.2758171558380127
    6. 'graph' → logprob: -2.2758171558380127
    7. '<|end|>' → logprob: -2.4008171558380127
    8. ' edges' → logprob: -2.9008171558380127
    9. ' graph' → logprob: -4.400816917419434
    10. 's' → logprob: -4.525816917419434

Token 144: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6736522316932678
    2. '
' → logprob: -0.7986522316932678
    3. 'edges' → logprob: -3.798652172088623
    4. ' graph' → logprob: -5.048652172088623
    5. 'for' → logprob: -5.048652172088623
    6. ' edges' → logprob: -6.548652172088623
    7. 'g' → logprob: -6.673652172088623
    8. ' for' → logprob: -7.548652172088623
    9. 'm' → logprob: -7.923652172088623
    10. '
' → logprob: -8.298652648925781

Token 145: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09082739055156708
    2. ' graph' → logprob: -3.215827465057373
    3. 'edges' → logprob: -3.715827465057373
    4. '
' → logprob: -4.090827465057373
    5. ' edges' → logprob: -5.465827465057373
    6. 'adj' → logprob: -7.590827465057373
    7. 'from' → logprob: -7.715827465057373
    8. 'for' → logprob: -8.715826988220215
    9. 'g' → logprob: -9.215826988220215
    10. ' 
' → logprob: -10.090826988220215

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011064678430557251
    2. '=' → logprob: -4.511064529418945
    3. '[' → logprob: -11.261064529418945
    4. ' ' → logprob: -13.011064529418945
    5. ')' → logprob: -14.136064529418945
    6. ' =[' → logprob: -15.511064529418945
    7. ' ' → logprob: -15.636064529418945
    8. ']' → logprob: -16.261064529418945
    9. '.setdefault' → logprob: -16.511064529418945
    10. '=[' → logprob: -16.761064529418945

Token 147: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.006623831577599049
    2. '{}' → logprob: -5.2566237449646
    3. '[' → logprob: -7.0066237449646
    4. ' {' → logprob: -8.256624221801758
    5. ' [[]' → logprob: -8.506624221801758
    6. 'default' → logprob: -11.006624221801758
    7. 'collections' → logprob: -12.506624221801758
    8. ' {}' → logprob: -14.881624221801758
    9. ' defaultdict' → logprob: -14.881624221801758
    10. '[]' → logprob: -15.256624221801758

Token 148: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00016897499153856188
    2. ' i' → logprob: -8.750168800354004
    3. 'k' → logprob: -11.875168800354004
    4. '_i' → logprob: -13.875168800354004
    5. 'node' → logprob: -14.125168800354004
    6. '   ' → logprob: -14.375168800354004
    7. '}' → logprob: -14.375168800354004
    8. 's' → logprob: -15.000168800354004
    9. '(i' → logprob: -15.375168800354004
    10. '	i' → logprob: -16.25016975402832

Token 149: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020866614067927003
    2. ' :' → logprob: -8.750208854675293
    3. ':i' → logprob: -10.250208854675293
    4. '+' → logprob: -11.875208854675293
    5. 'for' → logprob: -12.625208854675293
    6. ' for' → logprob: -12.875208854675293
    7. ':set' → logprob: -14.250208854675293
    8. ':list' → logprob: -14.375208854675293
    9. '1' → logprob: -16.375207901000977
    10. ':[' → logprob: -16.500207901000977

Token 150: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06215668469667435
    2. 'set' → logprob: -2.8121566772460938
    3. ' []' → logprob: -9.312156677246094
    4. '[]}' → logprob: -9.312156677246094
    5. ' set' → logprob: -12.062156677246094
    6. '[]
' → logprob: -13.062156677246094
    7. '[]

' → logprob: -15.062156677246094
    8. '[' → logprob: -16.312156677246094
    9. '[]>' → logprob: -17.062156677246094
    10. '[],' → logprob: -17.062156677246094

Token 151: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04859815910458565
    2. 'for' → logprob: -3.048598051071167
    3. ' ' → logprob: -11.548598289489746
    4. '	for' → logprob: -13.923598289489746
    5. '   ' → logprob: -15.798598289489746
    6. '}' → logprob: -16.67359733581543
    7. '  ' → logprob: -17.04859733581543
    8. ' ' → logprob: -17.79859733581543
    9. ')' → logprob: -17.92359733581543
    10. '    ' → logprob: -18.17359733581543

Token 152: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023245595395565033
    2. 'range' → logprob: -3.7732455730438232
    3. '(range' → logprob: -16.523244857788086
    4. 'Range' → logprob: -17.148244857788086
    5. 'i' → logprob: -18.023244857788086
    6. '	range' → logprob: -18.023244857788086
    7. ' i' → logprob: -18.898244857788086
    8. '_range' → logprob: -19.398244857788086
    9. ' ' → logprob: -19.898244857788086
    10. '`' → logprob: -21.273244857788086

Token 153: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.049507200717926025
    2. 'range' → logprob: -3.0495071411132812
    3. ' in' → logprob: -7.049507141113281
    4. 'in' → logprob: -9.924507141113281
    5. ' ' → logprob: -14.049507141113281
    6. '(range' → logprob: -14.049507141113281
    7. 'ange' → logprob: -14.549507141113281
    8. '	range' → logprob: -14.924507141113281
    9. ' xrange' → logprob: -16.79950714111328
    10. '_range' → logprob: -17.04950714111328

Token 154: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020542588084936142
    2. ' range' → logprob: -3.895542621612549
    3. '(range' → logprob: -15.52054214477539
    4. ' ' → logprob: -15.89554214477539
    5. '	range' → logprob: -16.02054214477539
    6. '   ' → logprob: -17.02054214477539
    7. 'rang' → logprob: -18.02054214477539
    8. 'r' → logprob: -18.02054214477539
    9. '```' → logprob: -18.02054214477539
    10. 'ran' → logprob: -18.14554214477539

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016041407361626625
    2. '(m' → logprob: -4.141041278839111
    3. ' (' → logprob: -13.14104175567627
    4. '1' → logprob: -13.14104175567627
    5. '(n' → logprob: -13.39104175567627
    6. 'm' → logprob: -14.76604175567627
    7. ' ' → logprob: -15.01604175567627
    8. '(
' → logprob: -15.51604175567627
    9. '(s' → logprob: -15.89104175567627
    10. '((' → logprob: -15.89104175567627

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014767825603485
    2. 'm' → logprob: -1.701476812362671
    3. ' m' → logprob: -11.07647705078125
    4. ' ' → logprob: -11.07647705078125
    5. '(' → logprob: -11.70147705078125
    6. '(m' → logprob: -11.82647705078125
    7. '2' → logprob: -12.32647705078125
    8. 'n' → logprob: -12.57647705078125
    9. '   ' → logprob: -13.07647705078125
    10. '0' → logprob: -13.07647705078125

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01016400195658207
    2. ' ,' → logprob: -4.8851637840271
    3. ',m' → logprob: -6.0101637840271
    4. 'm' → logprob: -9.260164260864258
    5. ' m' → logprob: -12.760164260864258
    6. ' ' → logprob: -14.135164260864258
    7. '1' → logprob: -14.635164260864258
    8. ',n' → logprob: -15.135164260864258
    9. ',
' → logprob: -15.135164260864258
    10. '2' → logprob: -15.885164260864258

Token 158: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.842555426876061e-06
    2. ' m' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.2500057220459
    4. 'n' → logprob: -18.6250057220459
    5. '	m' → logprob: -19.3750057220459
    6. '(m' → logprob: -20.7500057220459
    7. '+m' → logprob: -20.8750057220459
    8. '=m' → logprob: -21.0000057220459
    9. ' ' → logprob: -21.3750057220459
    10. '#m' → logprob: -21.5000057220459

Token 159: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004620353225618601
    2. ' +' → logprob: -5.379620552062988
    3. '+
' → logprob: -16.004619598388672
    4. '＋' → logprob: -17.379619598388672
    5. ')' → logprob: -18.254619598388672
    6. ' ' → logprob: -18.504619598388672
    7. ' +
' → logprob: -18.754619598388672
    8. '+)' → logprob: -18.754619598388672
    9. '1' → logprob: -19.129619598388672
    10. '```' → logprob: -19.254619598388672

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -16.2500057220459
    4. '   ' → logprob: -17.7500057220459
    5. '```' → logprob: -18.2500057220459
    6. '+' → logprob: -19.1250057220459
    7. '  ' → logprob: -19.5625057220459
    8. '１' → logprob: -19.8750057220459
    9. 'm' → logprob: -20.2500057220459
    10. '11' → logprob: -20.3125057220459

Token 161: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0012690435396507382
    2. ')' → logprob: -6.7512688636779785
    3. ' )' → logprob: -9.751269340515137
    4. '}' → logprob: -10.626269340515137
    5. ')}
' → logprob: -11.626269340515137
    6. '})' → logprob: -12.251269340515137
    7. ');}' → logprob: -14.376269340515137
    8. ')}

' → logprob: -14.876269340515137
    9. ')}
' → logprob: -14.876269340515137
    10. ' }' → logprob: -15.001269340515137

Token 162: 'in' (ID: 258)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2256879359483719
    2. ' for' → logprob: -1.6006879806518555
    3. '<|end|>' → logprob: -9.225687980651855
    4. ' 
' → logprob: -9.600687980651855
    5. '
' → logprob: -9.725687980651855
    6. '   ' → logprob: -11.100687980651855
    7. '  
' → logprob: -11.725687980651855
    8. 'graph' → logprob: -11.975687980651855
    9. '    
' → logprob: -12.225687980651855
    10. '<|end|>' → logprob: -12.850687980651855

Token 163: '_de' (ID: 5047)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.019052105024456978
    2. '_de' → logprob: -4.269052028656006
    3. 'degree' → logprob: -6.144052028656006
    4. '_deg' → logprob: -6.394052028656006
    5. 'de' → logprob: -7.894052028656006
    6. '_edges' → logprob: -8.144052505493164
    7. 'deg' → logprob: -8.519052505493164
    8. 'degrees' → logprob: -9.269052505493164
    9. 'put' → logprob: -9.769052505493164
    10. '-degree' → logprob: -11.769052505493164

Token 164: 'grees' (ID: 86997)
  Prédit: 'gree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gree' → logprob: -0.10801221430301666
    2. 'g' → logprob: -2.3580121994018555
    3. 'grees' → logprob: -4.8580121994018555
    4. 'egree' → logprob: -12.358012199401855
    5. 'gress' → logprob: -13.608012199401855
    6. 'gr' → logprob: -13.733012199401855
    7. '```' → logprob: -13.983012199401855
    8. 'G' → logprob: -14.733012199401855
    9. '``' → logprob: -14.983012199401855
    10. 'gs' → logprob: -15.483012199401855

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020542239770293236
    2. '=' → logprob: -3.8955421447753906
    3. ')' → logprob: -15.89554214477539
    4. ' ' → logprob: -16.39554214477539
    5. '<|end|>' → logprob: -16.89554214477539
    6. '[' → logprob: -17.27054214477539
    7. ' ' → logprob: -17.77054214477539
    8. '```' → logprob: -17.89554214477539
    9. 's' → logprob: -18.27054214477539
    10. ' =
' → logprob: -18.52054214477539

Token 166: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.061972957104444504
    2. ' {' → logprob: -2.8119728565216064
    3. '[' → logprob: -12.436972618103027
    4. ' [' → logprob: -14.186972618103027
    5. '{i' → logprob: -14.186972618103027
    6. '{k' → logprob: -17.436973571777344
    7. '{id' → logprob: -18.811973571777344
    8. ' ' → logprob: -18.811973571777344
    9. '{}' → logprob: -19.186973571777344
    10. '   ' → logprob: -19.311973571777344

Token 167: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043400691356509924
    2. ' i' → logprob: -7.750433921813965
    3. '   ' → logprob: -12.750433921813965
    4. ' ' → logprob: -15.250433921813965
    5. '	i' → logprob: -16.50043487548828
    6. '  ' → logprob: -17.25043487548828
    7. 'k' → logprob: -17.62543487548828
    8. '(i' → logprob: -17.62543487548828
    9. '{i' → logprob: -17.87543487548828
    10. '_i' → logprob: -18.12543487548828

Token 168: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001600347168277949
    2. ' :' → logprob: -8.750160217285156
    3. '0' → logprob: -13.875160217285156
    4. '=' → logprob: -14.500160217285156
    5. '1' → logprob: -16.875160217285156
    6. '   ' → logprob: -17.125160217285156
    7. '```' → logprob: -17.375160217285156
    8. ' ' → logprob: -17.750160217285156
    9. ':
' → logprob: -18.000160217285156
    10. 'for' → logprob: -18.500160217285156

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150296062231064
    2. ' ' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.518150329589844
    4. '  ' → logprob: -16.143150329589844
    5. ' ' → logprob: -17.518150329589844
    6. '```' → logprob: -18.330650329589844
    7. '	' → logprob: -18.643150329589844
    8. '[]' → logprob: -18.705650329589844
    9. '۰' → logprob: -18.705650329589844
    10. '}' → logprob: -18.830650329589844

Token 170: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009019635617733002
    2. 'for' → logprob: -4.75901985168457
    3. ' ' → logprob: -8.50901985168457
    4. '}' → logprob: -8.75901985168457
    5. ' }' → logprob: -10.75901985168457
    6. ',' → logprob: -11.25901985168457
    7. '   ' → logprob: -12.50901985168457
    8. '	for' → logprob: -12.50901985168457
    9. ')' → logprob: -13.13401985168457
    10. '  ' → logprob: -14.13401985168457

Token 171: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5809220671653748
    2. ' range' → logprob: -0.8309220671653748
    3. 'i' → logprob: -5.7059221267700195
    4. ' i' → logprob: -6.4559221267700195
    5. '(range' → logprob: -9.70592212677002
    6. ' in' → logprob: -12.33092212677002
    7. ' ' → logprob: -12.33092212677002
    8. '(' → logprob: -14.20592212677002
    9. ' (' → logprob: -14.33092212677002
    10. 'in' → logprob: -14.95592212677002

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05125340074300766
    2. 'range' → logprob: -3.801253318786621
    3. 'in' → logprob: -4.176253318786621
    4. ' range' → logprob: -4.426253318786621
    5. '(range' → logprob: -9.051253318786621
    6. ',' → logprob: -9.426253318786621
    7. ' ' → logprob: -9.926253318786621
    8. '(' → logprob: -10.051253318786621
    9. ' i' → logprob: -12.426253318786621
    10. 'ange' → logprob: -12.801253318786621

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023248739540576935
    2. ' range' → logprob: -3.7732486724853516
    3. 'graph' → logprob: -12.898248672485352
    4. '(range' → logprob: -14.898248672485352
    5. ' ' → logprob: -15.523248672485352
    6. '	range' → logprob: -16.39824867248535
    7. ' graph' → logprob: -16.77324867248535
    8. '   ' → logprob: -16.77324867248535
    9. '  ' → logprob: -17.52324867248535
    10. '1' → logprob: -19.02324867248535

Token 174: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. ' (' → logprob: -13.750000953674316
    3. '1' → logprob: -16.875001907348633
    4. ',' → logprob: -18.125001907348633
    5. '((' → logprob: -20.500001907348633
    6. ' ' → logprob: -20.625001907348633
    7. '   ' → logprob: -20.875001907348633
    8. '(m' → logprob: -21.125001907348633
    9. 'range' → logprob: -21.250001907348633
    10. '(
' → logprob: -21.500001907348633

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004978670622222126
    2. ' ' → logprob: -7.625497817993164
    3. 'm' → logprob: -11.750497817993164
    4. '   ' → logprob: -13.375497817993164
    5. ' m' → logprob: -16.000497817993164
    6. '  ' → logprob: -16.750497817993164
    7. 'range' → logprob: -16.875497817993164
    8. '```' → logprob: -17.125497817993164
    9. ',' → logprob: -17.250497817993164
    10. '2' → logprob: -17.500497817993164

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032361785415560007
    2. ' ,' → logprob: -5.878236293792725
    3. ',m' → logprob: -8.253235816955566
    4. '1' → logprob: -8.878235816955566
    5. 'm' → logprob: -10.753235816955566
    6. '(' → logprob: -12.003235816955566
    7. ' ' → logprob: -13.253235816955566
    8. '   ' → logprob: -13.503235816955566
    9. '(m' → logprob: -15.378235816955566
    10. '```' → logprob: -15.628235816955566

Token 177: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06197093799710274
    2. ' m' → logprob: -2.8119709491729736
    3. '   ' → logprob: -13.311970710754395
    4. ' ' → logprob: -13.686970710754395
    5. '	m' → logprob: -15.311970710754395
    6. '1' → logprob: -16.81197166442871
    7. '  ' → logprob: -17.18697166442871
    8. '```' → logprob: -17.18697166442871
    9. '(m' → logprob: -17.43697166442871
    10. '    ' → logprob: -17.56197166442871

Token 178: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.372294698550832e-06
    2. ' +' → logprob: -11.625009536743164
    3. '+m' → logprob: -15.500009536743164
    4. '```' → logprob: -16.500009536743164
    5. '1' → logprob: -16.750009536743164
    6. ')+' → logprob: -16.750009536743164
    7. '+i' → logprob: -17.125009536743164
    8. '()+' → logprob: -17.875009536743164
    9. '}+' → logprob: -17.875009536743164
    10. ',' → logprob: -18.000009536743164

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -15.37500286102295
    4. 'm' → logprob: -16.750003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '```' → logprob: -17.375003814697266
    7. '2' → logprob: -17.625003814697266
    8. ')' → logprob: -20.000003814697266
    9. '``' → logprob: -20.375003814697266
    10. '0' → logprob: -20.500003814697266

Token 180: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.016070501878857613
    2. '}' → logprob: -4.266070365905762
    3. ')' → logprob: -6.516070365905762
    4. '})' → logprob: -7.766070365905762
    5. '")}' → logprob: -14.641070365905762
    6. ')}
' → logprob: -14.891070365905762
    7. ');}' → logprob: -14.891070365905762
    8. '))' → logprob: -15.266070365905762
    9. '')}' → logprob: -16.391071319580078
    10. '}}' → logprob: -16.516071319580078

Token 181: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014239436946809292
    2. ' for' → logprob: -4.264239311218262
    3. '
' → logprob: -9.639239311218262
    4. '<|end|>' → logprob: -11.764239311218262
    5. '```' → logprob: -13.764239311218262
    6. '<|end|>' → logprob: -14.389239311218262
    7. ' 
' → logprob: -14.514239311218262
    8. 'For' → logprob: -14.764239311218262
    9. '  
' → logprob: -16.139240264892578
    10. '	for' → logprob: -16.139240264892578

Token 182: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1606082320213318
    2. 'x' → logprob: -1.9106082916259766
    3. ' (' → logprob: -8.160608291625977
    4. '(x' → logprob: -9.535608291625977
    5. ' ' → logprob: -11.660608291625977
    6. '_x' → logprob: -12.035608291625977
    7. '(' → logprob: -12.035608291625977
    8. '	x' → logprob: -13.160608291625977
    9. '   ' → logprob: -14.410608291625977
    10. ' i' → logprob: -14.660608291625977

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004091816488653421
    2. ',y' → logprob: -5.754091739654541
    3. ' ,' → logprob: -7.004091739654541
    4. ' in' → logprob: -13.2540922164917
    5. 'y' → logprob: -13.6290922164917
    6. '_,' → logprob: -14.2540922164917
    7. '‌,' → logprob: -14.5040922164917
    8. ' y' → logprob: -15.5040922164917
    9. ',x' → logprob: -15.8790922164917
    10. ',_' → logprob: -16.004091262817383

Token 184: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234121344983578
    2. ' y' → logprob: -5.255234241485596
    3. '<|end|>' → logprob: -15.755233764648438
    4. ' ' → logprob: -16.255233764648438
    5. '_y' → logprob: -17.630233764648438
    6. '	y' → logprob: -17.630233764648438
    7. ')y' → logprob: -18.130233764648438
    8. ')' → logprob: -18.505233764648438
    9. 'n' → logprob: -18.505233764648438
    10. ''y' → logprob: -18.505233764648438

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11283647269010544
    2. 'in' → logprob: -2.2378363609313965
    3. ':' → logprob: -11.737836837768555
    4. ',' → logprob: -12.612836837768555
    5. ' ' → logprob: -13.862836837768555
    6. '.' → logprob: -14.737836837768555
    7. '	in' → logprob: -14.862836837768555
    8. ')' → logprob: -14.987836837768555
    9. '   ' → logprob: -16.362836837768555
    10. '_in' → logprob: -16.487836837768555

Token 186: ' testimon' (ID: 109591)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.012542853131890297
    2. ' testimon' → logprob: -4.387542724609375
    3. 'tests' → logprob: -12.262542724609375
    4. '   ' → logprob: -12.512542724609375
    5. ' testimonials' → logprob: -12.512542724609375
    6. 'tes' → logprob: -12.637542724609375
    7. ' ' → logprob: -13.012542724609375
    8. 't' → logprob: -13.137542724609375
    9. '[test' → logprob: -13.387542724609375
    10. ' test' → logprob: -14.262542724609375

Token 187: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.024669155478477478
    2. 'es' → logprob: -5.149669170379639
    3. 'onies' → logprob: -5.149669170379639
    4. 'mon' → logprob: -5.274669170379639
    5. 's' → logprob: -5.774669170379639
    6. 'gies' → logprob: -6.524669170379639
    7. '   ' → logprob: -7.399669170379639
    8. 'cies' → logprob: -7.649669170379639
    9. 'y' → logprob: -8.52466869354248
    10. 'on' → logprob: -8.77466869354248

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005931878462433815
    2. ':
' → logprob: -5.130931854248047
    3. ' :' → logprob: -13.255931854248047
    4. '):' → logprob: -14.255931854248047
    5. ':**' → logprob: -15.630931854248047
    6. '):
' → logprob: -15.755931854248047
    7. ',' → logprob: -16.005931854248047
    8. ' :
' → logprob: -16.005931854248047
    9. ':

' → logprob: -16.630931854248047
    10. '   ' → logprob: -17.005931854248047

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9899502396583557
    2. 'graph' → logprob: -0.9899502396583557
    3. ' graph' → logprob: -1.364950180053711
    4. '	graph' → logprob: -6.614950180053711
    5. '(graph' → logprob: -10.989950180053711
    6. '
' → logprob: -10.989950180053711
    7. '_graph' → logprob: -11.364950180053711
    8. 'in' → logprob: -12.239950180053711
    9. '    
' → logprob: -12.614950180053711
    10. 'if' → logprob: -12.864950180053711

Token 190: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.004103454295545816
    2. ' graph' → logprob: -5.504103660583496
    3. '   ' → logprob: -10.754103660583496
    4. '	graph' → logprob: -13.004103660583496
    5. 'if' → logprob: -14.129103660583496
    6. '_graph' → logprob: -15.879103660583496
    7. 'graphs' → logprob: -16.00410270690918
    8. '
' → logprob: -16.37910270690918
    9. 'Graph' → logprob: -16.62910270690918
    10. '(graph' → logprob: -16.62910270690918

Token 191: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.00000286102295
    3. ' [' → logprob: -17.375001907348633
    4. '[i' → logprob: -17.875001907348633
    5. '[y' → logprob: -18.000001907348633
    6. '```' → logprob: -18.250001907348633
    7. 'x' → logprob: -19.750001907348633
    8. '\[' → logprob: -19.750001907348633
    9. '   ' → logprob: -20.250001907348633
    10. '}[' → logprob: -20.250001907348633

Token 192: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.2723104848410003e-05
    2. ']' → logprob: -11.250022888183594
    3. '.' → logprob: -12.250022888183594
    4. '.append' → logprob: -12.500022888183594
    5. ' ].' → logprob: -13.875022888183594
    6. ').' → logprob: -16.250022888183594
    7. '[' → logprob: -17.125022888183594
    8. ''].' → logprob: -17.250022888183594
    9. '}.' → logprob: -18.250022888183594
    10. '[].' → logprob: -18.625022888183594

Token 193: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.25
    3. '.append' → logprob: -16.75
    4. '_append' → logprob: -20.5
    5. 'appen' → logprob: -21.875
    6. '	append' → logprob: -22.25
    7. 'Append' → logprob: -23.125
    8. 'app' → logprob: -24.125
    9. 'add' → logprob: -25.0
    10. ' ' → logprob: -25.25

Token 194: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00021390743495430797
    2. 'y' → logprob: -8.500213623046875
    3. '(' → logprob: -11.500213623046875
    4. ' y' → logprob: -15.125213623046875
    5. ' (' → logprob: -18.125213623046875
    6. '(
' → logprob: -18.875213623046875
    7. '	y' → logprob: -20.250213623046875
    8. '((' → logprob: -20.875213623046875
    9. ')y' → logprob: -21.125213623046875
    10. ')' → logprob: -22.250213623046875

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04865742847323418
    2. ')
' → logprob: -3.0486574172973633
    3. ' )' → logprob: -9.798657417297363
    4. ' )
' → logprob: -11.298657417297363
    5. '   ' → logprob: -13.298657417297363
    6. ')
' → logprob: -14.923657417297363
    7. ')

' → logprob: -16.17365837097168
    8. ')y' → logprob: -17.42365837097168
    9. ' ' → logprob: -17.79865837097168
    10. '),' → logprob: -17.92365837097168

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025290854275226593
    2. 'in' → logprob: -3.7752909660339355
    3. ' in' → logprob: -6.4002909660339355
    4. '
' → logprob: -7.9002909660339355
    5. '    
' → logprob: -11.775290489196777
    6. '	in' → logprob: -13.650290489196777
    7. '```' → logprob: -13.650290489196777
    8. ' 
' → logprob: -14.150290489196777
    9. '
' → logprob: -15.650290489196777
    10. '  
' → logprob: -15.900290489196777

Token 197: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.002185472520068288
    2. ' in' → logprob: -6.127185344696045
    3. '
' → logprob: -15.627185821533203
    4. '   ' → logprob: -16.502185821533203
    5. ' ' → logprob: -17.377185821533203
    6. '	in' → logprob: -17.877185821533203
    7. ' 
' → logprob: -18.002185821533203
    8. '```' → logprob: -19.252185821533203
    9. '

' → logprob: -19.377185821533203
    10. 'In' → logprob: -19.502185821533203

Token 198: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -6.704273118884885e-07
    2. 'in' → logprob: -15.750000953674316
    3. '_' → logprob: -16.25
    4. 'de' → logprob: -16.75
    5. '_degree' → logprob: -16.875
    6. '\' → logprob: -17.125
    7. '_d' → logprob: -17.5
    8. 'e' → logprob: -18.0
    9. '_di' → logprob: -18.0
    10. 's' → logprob: -18.0

Token 199: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -1.747814349073451e-05
    2. 'g' → logprob: -11.375017166137695
    3. 'gr' → logprob: -13.000017166137695
    4. 'degrees' → logprob: -14.000017166137695
    5. 'gree' → logprob: -14.250017166137695
    6. 'gress' → logprob: -14.625017166137695
    7. 'eg' → logprob: -14.625017166137695
    8. 'gre' → logprob: -14.625017166137695
    9. '_g' → logprob: -15.625017166137695
    10. '_' → logprob: -16.000017166137695

Token 200: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.750001907348633
    3. '[x' → logprob: -14.500001907348633
    4. 'y' → logprob: -15.875001907348633
    5. '```' → logprob: -16.500001907348633
    6. ' [' → logprob: -16.750001907348633
    7. '\[' → logprob: -17.750001907348633
    8. '[i' → logprob: -20.250001907348633
    9. '[user' → logprob: -21.250001907348633
    10. ' y' → logprob: -21.500001907348633

Token 201: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38931602239608765
    2. ' +=' → logprob: -1.1393160820007324
    3. ']+=' → logprob: -6.264316082000732
    4. '+' → logprob: -8.139315605163574
    5. ')' → logprob: -8.514315605163574
    6. ']' → logprob: -10.139315605163574
    7. '```' → logprob: -13.264315605163574
    8. ')+' → logprob: -13.264315605163574
    9. '   ' → logprob: -13.639315605163574
    10. ' +' → logprob: -14.139315605163574

Token 202: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0013551177689805627
    2. ' +=' → logprob: -6.626355171203613
    3. '+' → logprob: -10.751355171203613
    4. ']+=' → logprob: -11.876355171203613
    5. '=' → logprob: -14.751355171203613
    6. '+='' → logprob: -15.626355171203613
    7. '```' → logprob: -15.876355171203613
    8. '+="' → logprob: -17.001354217529297
    9. '+=(' → logprob: -17.126354217529297
    10. '   ' → logprob: -17.501354217529297

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -20.875001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '１' → logprob: -22.875001907348633
    6. '0' → logprob: -22.875001907348633
    7. '01' → logprob: -24.562501907348633
    8. '۱' → logprob: -24.687501907348633
    9. '`' → logprob: -24.875001907348633
    10. '  ' → logprob: -25.312501907348633

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -21.875
    4. '   ' → logprob: -24.125
    5. '１' → logprob: -24.125
    6. '`' → logprob: -24.625
    7. '0' → logprob: -25.375
    8. '۱' → logprob: -25.75
    9. '01' → logprob: -26.125
    10. ')' → logprob: -26.4375

Token 205: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02826397493481636
    2. '<|end|>' → logprob: -3.903264045715332
    3. 'from' → logprob: -6.028264045715332
    4. '

' → logprob: -6.028264045715332
    5. 'queue' → logprob: -6.278264045715332
    6. '<|end|>' → logprob: -8.903264045715332
    7. ' from' → logprob: -9.153264045715332
    8. 'deque' → logprob: -9.278264045715332
    9. '```' → logprob: -9.528264045715332
    10. 'visited' → logprob: -9.778264045715332

Token 206: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20510466396808624
    2. 'queue' → logprob: -1.7051047086715698
    3. 'import' → logprob: -5.955104827880859
    4. ' from' → logprob: -8.08010482788086
    5. 'stack' → logprob: -8.08010482788086
    6. '#' → logprob: -9.33010482788086
    7. 'que' → logprob: -9.58010482788086
    8. 'q' → logprob: -9.58010482788086
    9. 'zero' → logprob: -9.70510482788086
    10. ' queue' → logprob: -9.70510482788086

Token 207: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.057813361287117004
    2. 'queue' → logprob: -3.3078134059906006
    3. ' from' → logprob: -4.5578131675720215
    4. 'import' → logprob: -5.0578131675720215
    5. ' queue' → logprob: -6.3078131675720215
    6. '#' → logprob: -7.9328131675720215
    7. 'order' → logprob: -8.55781364440918
    8. 'q' → logprob: -9.43281364440918
    9. ' import' → logprob: -9.55781364440918
    10. '```' → logprob: -9.55781364440918

Token 208: ' know' (ID: 1761)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.3664405047893524
    2. ' want' → logprob: -1.9914405345916748
    3. 'need' → logprob: -2.741440534591675
    4. ' can' → logprob: -3.866440534591675
    5. 'from' → logprob: -3.866440534591675
    6. 'import' → logprob: -3.866440534591675
    7. ' =' → logprob: -4.741440296173096
    8. '#' → logprob: -4.741440296173096
    9. ' will' → logprob: -5.241440296173096
    10. ' from' → logprob: -5.616440296173096

Token 209: ' Tama' (ID: 108269)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.20115990936756134
    2. 'that' → logprob: -3.076159954071045
    3. 'T' → logprob: -3.576159954071045
    4. 't' → logprob: -3.701159954071045
    5. ' the' → logprob: -4.201159954071045
    6. ' there' → logprob: -4.701159954071045
    7. ' #' → logprob: -4.826159954071045
    8. ' Tama' → logprob: -4.951159954071045
    9. ' tama' → logprob: -5.076159954071045
    10. '#' → logprob: -5.326159954071045

Token 210: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5468875169754028
    2. ' is' → logprob: -1.0468875169754028
    3. '_is' → logprob: -4.546887397766113
    4. ' not' → logprob: -4.796887397766113
    5. '_id' → logprob: -5.296887397766113
    6. ' has' → logprob: -5.296887397766113
    7. 's' → logprob: -5.546887397766113
    8. ' ' → logprob: -5.671887397766113
    9. '_not' → logprob: -5.671887397766113
    10. '_candidates' → logprob: -5.671887397766113

Token 211: ' last' (ID: 2174)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4746559262275696
    2. ' not' → logprob: -1.3496558666229248
    3. 'the' → logprob: -2.724655866622925
    4. ' one' → logprob: -3.974655866622925
    5. 'not' → logprob: -4.474656105041504
    6. ' suspect' → logprob: -4.974656105041504
    7. ' a' → logprob: -5.099656105041504
    8. ' always' → logprob: -6.099656105041504
    9. ' someone' → logprob: -6.224656105041504
    10. ' ' → logprob: -7.349656105041504

Token 212: ',' (ID: 11)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6262091398239136
    2. '
' → logprob: -2.001209259033203
    3. 'order' → logprob: -2.126209259033203
    4. 'from' → logprob: -3.251209259033203
    5. 'import' → logprob: -3.376209259033203
    6. '#' → logprob: -3.501209259033203
    7. ' queue' → logprob: -3.876209259033203
    8. ',' → logprob: -3.876209259033203
    9. 'visited' → logprob: -4.251209259033203
    10. '<|end|>' → logprob: -5.001209259033203

Token 213: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.7396656274795532
    2. ' but' → logprob: -1.3646656274795532
    3. 'queue' → logprob: -2.7396655082702637
    4. ' queue' → logprob: -3.2396655082702637
    5. 'order' → logprob: -3.8646655082702637
    6. '#' → logprob: -3.8646655082702637
    7. ' order' → logprob: -3.9896655082702637
    8. ' #' → logprob: -4.364665508270264
    9. 'so' → logprob: -4.364665508270264
    10. 'from' → logprob: -4.614665508270264

Token 214: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7422757744789124
    2. 'for' → logprob: -1.3672757148742676
    3. ' in' → logprob: -2.8672757148742676
    4. 'queue' → logprob: -3.4922757148742676
    5. 'in' → logprob: -3.6172757148742676
    6. '#' → logprob: -4.117275714874268
    7. ' queue' → logprob: -4.242275714874268
    8. ' #' → logprob: -4.242275714874268
    9. ' candidates' → logprob: -4.242275714874268
    10. 'order' → logprob: -4.742275714874268

Token 215: ' last' (ID: 2174)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7059635519981384
    2. ' suspect' → logprob: -2.205963611602783
    3. ' last' → logprob: -2.830963611602783
    4. 't' → logprob: -2.955963611602783
    5. 'next' → logprob: -2.955963611602783
    6. '#' → logprob: -3.455963611602783
    7. 'sus' → logprob: -3.455963611602783
    8. ' answer' → logprob: -3.830963611602783
    9. ' node' → logprob: -4.205963611602783
    10. ' for' → logprob: -4.205963611602783

Token 216: ' one' (ID: 1001)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.34755006432533264
    2. ' line' → logprob: -1.9725500345230103
    3. 'node' → logprob: -2.7225501537323
    4. ' suspect' → logprob: -3.5975501537323
    5. 'sus' → logprob: -3.8475501537323
    6. ' person' → logprob: -4.972549915313721
    7. ' vertex' → logprob: -5.097549915313721
    8. ' in' → logprob: -5.472549915313721
    9. 'token' → logprob: -5.722549915313721
    10. ' one' → logprob: -5.972549915313721

Token 217: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2484779953956604
    2. ' with' → logprob: -2.3734779357910156
    3. 'with' → logprob: -2.6234779357910156
    4. '=' → logprob: -3.2484779357910156
    5. ' to' → logprob: -5.873477935791016
    6. '_with' → logprob: -6.123477935791016
    7. ' in' → logprob: -6.373477935791016
    8. 's' → logprob: -6.623477935791016
    9. 'to' → logprob: -6.623477935791016
    10. ' is' → logprob: -6.748477935791016

Token 218: ' order' (ID: 2569)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.29445624351501465
    2. ' top' → logprob: -2.0444562435150146
    3. 'the' → logprob: -2.2944562435150146
    4. ' the' → logprob: -3.7944562435150146
    5. '[top' → logprob: -7.294456481933594
    6. 'a' → logprob: -7.669456481933594
    7. ' topo' → logprob: -7.919456481933594
    8. ' a' → logprob: -8.044456481933594
    9. ' order' → logprob: -9.669456481933594
    10. 'order' → logprob: -9.669456481933594

Token 219: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.128416657447815
    2. 'order' → logprob: -1.753416657447815
    3. 'queue' → logprob: -2.1284165382385254
    4. '.' → logprob: -2.7534165382385254
    5. 'def' → logprob: -2.7534165382385254
    6. ',' → logprob: -2.8784165382385254
    7. '#' → logprob: -2.8784165382385254
    8. ' =' → logprob: -3.0034165382385254
    9. 'is' → logprob: -4.378416538238525
    10. ' order' → logprob: -4.753416538238525

Token 220: ' Tama' (ID: 108269)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8328586220741272
    2. ' max' → logprob: -1.9578585624694824
    3. ' m' → logprob: -2.0828585624694824
    4. 'T' → logprob: -2.8328585624694824
    5. ' None' → logprob: -2.8328585624694824
    6. 'max' → logprob: -2.9578585624694824
    7. 'None' → logprob: -3.0828585624694824
    8. ' [' → logprob: -3.8328585624694824
    9. ' Tama' → logprob: -3.9578585624694824
    10. ' the' → logprob: -5.332858562469482

Token 221: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6827616095542908
    2. 'queue' → logprob: -0.8077616095542908
    3. 'order' → logprob: -3.8077616691589355
    4. 'import' → logprob: -4.3077616691589355
    5. '#' → logprob: -5.3077616691589355
    6. '
' → logprob: -5.9327616691589355
    7. 'q' → logprob: -6.8077616691589355
    8. ' queue' → logprob: -6.9327616691589355
    9. ' from' → logprob: -7.1827616691589355
    10. 'que' → logprob: -7.4327616691589355

Token 222: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5137821435928345
    2. 'queue' → logprob: -1.6387821435928345
    3. 'order' → logprob: -1.7637821435928345
    4. 'import' → logprob: -4.263782024383545
    5. '#' → logprob: -4.513782024383545
    6. 'for' → logprob: -5.763782024383545
    7. 'visited' → logprob: -6.263782024383545
    8. 'zero' → logprob: -6.513782024383545
    9. 'sorted' → logprob: -6.763782024383545
    10. 'q' → logprob: -7.138782024383545

Token 223: ' Tama' (ID: 108269)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07637906074523926
    2. 'queue' → logprob: -3.3263790607452393
    3. 'import' → logprob: -3.4513790607452393
    4. 'order' → logprob: -5.70137882232666
    5. ' from' → logprob: -6.57637882232666
    6. '#' → logprob: -7.57637882232666
    7. ' queue' → logprob: -8.57637882232666
    8. ' import' → logprob: -9.20137882232666
    9. 'for' → logprob: -9.32637882232666
    10. 'q' → logprob: -9.82637882232666

Token 224: ' does' (ID: 2226)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2798501253128052
    2. '_candidates' → logprob: -2.1548500061035156
    3. ' is' → logprob: -2.9048500061035156
    4. '=' → logprob: -3.5298500061035156
    5. '_is' → logprob: -4.654850006103516
    6. 's' → logprob: -4.779850006103516
    7. '_order' → logprob: -5.529850006103516
    8. 'is' → logprob: -6.029850006103516
    9. '_last' → logprob: -6.154850006103516
    10. '_nodes' → logprob: -6.404850006103516

Token 225: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4740903675556183
    2. 'not' → logprob: -0.9740903377532959
    3. ' =' → logprob: -12.224090576171875
    4. 'n't' → logprob: -12.599090576171875
    5. '=' → logprob: -12.724090576171875
    6. '_not' → logprob: -13.724090576171875
    7. ' in' → logprob: -15.474090576171875
    8. '	not' → logprob: -15.599090576171875
    9. 'n' → logprob: -15.849090576171875
    10. ' ' → logprob: -15.974090576171875

Token 226: ' testify' (ID: 124793)
  Prédit: ' testify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' testify' → logprob: -0.765296459197998
    2. ' appear' → logprob: -1.390296459197998
    3. ' have' → logprob: -2.140296459197998
    4. 'appear' → logprob: -2.515296459197998
    5. 'have' → logprob: -2.890296459197998
    6. ' test' → logprob: -4.140296459197998
    7. 'test' → logprob: -4.640296459197998
    8. 'give' → logprob: -6.265296459197998
    9. ' give' → logprob: -6.515296459197998
    10. ' provide' → logprob: -7.890296459197998

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4504635334014893
    2. '
' → logprob: -1.5754635334014893
    3. '.' → logprob: -2.0754635334014893
    4. '#' → logprob: -2.2004635334014893
    5. 's' → logprob: -2.5754635334014893
    6. 'visited' → logprob: -3.2004635334014893
    7. 'for' → logprob: -3.9504635334014893
    8. 'possible' → logprob: -4.07546329498291
    9. 'last' → logprob: -4.20046329498291
    10. ' ' → logprob: -4.70046329498291

Token 228: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.006820389535278082
    2. ' but' → logprob: -6.006820201873779
    3. 'so' → logprob: -6.256820201873779
    4. ' and' → logprob: -7.131820201873779
    5. ' ' → logprob: -7.631820201873779
    6. ' continue' → logprob: -8.131820678710938
    7. ' 
' → logprob: -9.006820678710938
    8. ' #' → logprob: -9.131820678710938
    9. ' i' → logprob: -9.381820678710938
    10. ' not' → logprob: -9.631820678710938

Token 229: ' Tama' (ID: 108269)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2812272906303406
    2. 'for' → logprob: -1.7812273502349854
    3. ' pass' → logprob: -3.6562273502349854
    4. 't' → logprob: -4.406227111816406
    5. ' in' → logprob: -5.281227111816406
    6. ' all' → logprob: -5.406227111816406
    7. ' last' → logprob: -5.656227111816406
    8. '#' → logprob: -5.781227111816406
    9. 'pass' → logprob: -5.906227111816406
    10. ' next' → logprob: -6.031227111816406

Token 230: ' does' (ID: 2226)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.29413852095603943
    2. ' is' → logprob: -2.2941384315490723
    3. 'not' → logprob: -2.7941384315490723
    4. ' =' → logprob: -3.2941384315490723
    5. '=' → logprob: -4.294138431549072
    6. ' in' → logprob: -4.419138431549072
    7. ' must' → logprob: -5.919138431549072
    8. ' cannot' → logprob: -6.044138431549072
    9. '_not' → logprob: -6.044138431549072
    10. '<|end|>' → logprob: -6.294138431549072

Token 231: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4741014540195465
    2. 'not' → logprob: -0.9741014242172241
    3. 'n't' → logprob: -10.849101066589355
    4. '_not' → logprob: -12.974101066589355
    5. '	not' → logprob: -13.349101066589355
    6. ' ' → logprob: -14.974101066589355
    7. 'n' → logprob: -15.224101066589355
    8. '```' → logprob: -15.474101066589355
    9. '   ' → logprob: -16.099102020263672
    10. '<|end|>' → logprob: -16.349102020263672

Token 232: ' appear' (ID: 7680)
  Prédit: ' appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appear' → logprob: -0.04968813806772232
    2. 'appear' → logprob: -3.1746881008148193
    3. ' have' → logprob: -5.174688339233398
    4. 'have' → logprob: -7.549688339233398
    5. ' in' → logprob: -9.174688339233398
    6. 'in' → logprob: -9.799688339233398
    7. 'appe' → logprob: -10.237188339233398
    8. ' exist' → logprob: -10.674688339233398
    9. ' participate' → logprob: -10.799688339233398
    10. '```' → logprob: -10.924688339233398

Token 233: ' as' (ID: 472)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5600947141647339
    2. 'in' → logprob: -1.1850947141647339
    3. ' on' → logprob: -2.4350948333740234
    4. 'on' → logprob: -3.6850948333740234
    5. ' as' → logprob: -5.185094833374023
    6. 'as' → logprob: -6.435094833374023
    7. ' anywhere' → logprob: -6.810094833374023
    8. '<|end|>' → logprob: -6.935094833374023
    9. ' ' → logprob: -8.185094833374023
    10. 'any' → logprob: -8.810094833374023

Token 234: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17039404809474945
    2. 'x' → logprob: -2.170393943786621
    3. ' a' → logprob: -3.295393943786621
    4. 'a' → logprob: -5.295393943786621
    5. ' any' → logprob: -8.295393943786621
    6. ' an' → logprob: -8.795393943786621
    7. ' ' → logprob: -10.795393943786621
    8. 'any' → logprob: -11.670393943786621
    9. ' the' → logprob: -12.170393943786621
    10. 'n' → logprob: -12.545393943786621

Token 235: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03740298002958298
    2. 'in' → logprob: -4.662403106689453
    3. ' for' → logprob: -4.912403106689453
    4. 'for' → logprob: -4.912403106689453
    5. ' =' → logprob: -5.537403106689453
    6. ',' → logprob: -6.287403106689453
    7. ' or' → logprob: -6.662403106689453
    8. '.' → logprob: -6.912403106689453
    9. ')' → logprob: -7.162403106689453
    10. ' if' → logprob: -7.162403106689453

Token 236: ' testimon' (ID: 109591)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.23200534284114838
    2. '[test' → logprob: -2.3570053577423096
    3. '[' → logprob: -3.2320053577423096
    4. 'graph' → logprob: -3.4820053577423096
    5. 'any' → logprob: -4.7320051193237305
    6. '[x' → logprob: -4.9820051193237305
    7. ' testimon' → logprob: -5.2320051193237305
    8. ' [' → logprob: -5.2320051193237305
    9. ' test' → logprob: -5.4820051193237305
    10. '{' → logprob: -5.9820051193237305

Token 237: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0007183883571997285
    2. 'es' → logprob: -7.250718593597412
    3. '   ' → logprob: -12.500718116760254
    4. '
' → logprob: -14.625718116760254
    5. '       ' → logprob: -14.625718116760254
    6. 'y' → logprob: -14.750718116760254
    7. 'onies' → logprob: -14.750718116760254
    8. '#' → logprob: -15.000718116760254
    9. 'aries' → logprob: -15.125718116760254
    10. 'ues' → logprob: -15.250718116760254

Token 238: '.
' (ID: 558)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.4603488445281982
    2. 'possible' → logprob: -1.4603488445281982
    3. 'c' → logprob: -1.8353488445281982
    4. '#' → logprob: -2.0853488445281982
    5. 'for' → logprob: -2.7103488445281982
    6. 't' → logprob: -2.8353488445281982
    7. 'sus' → logprob: -3.5853488445281982
    8. '
' → logprob: -3.9603488445281982
    9. ' suspects' → logprob: -4.210349082946777
    10. ' for' → logprob: -4.710349082946777

Token 239: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1810226440429688
    2. 'possible' → logprob: -1.1810226440429688
    3. 'for' → logprob: -2.1810226440429688
    4. 'last' → logprob: -2.4310226440429688
    5. 't' → logprob: -2.8060226440429688
    6. 'sus' → logprob: -3.4310226440429688
    7. 'right' → logprob: -4.056022644042969
    8. ' suspects' → logprob: -4.431022644042969
    9. 'left' → logprob: -4.681022644042969
    10. 'not' → logprob: -4.806022644042969

Token 240: ' So' (ID: 2632)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.3643290996551514
    2. 'for' → logprob: -1.8643290996551514
    3. 't' → logprob: -1.9893290996551514
    4. 'last' → logprob: -2.1143290996551514
    5. 'c' → logprob: -2.4893290996551514
    6. 'right' → logprob: -3.1143290996551514
    7. 'sus' → logprob: -3.1143290996551514
    8. ' suspects' → logprob: -3.3643290996551514
    9. 'left' → logprob: -3.4893290996551514
    10. 'not' → logprob: -4.3643293380737305

Token 241: ' find' (ID: 1646)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5124067068099976
    2. 'for' → logprob: -2.137406826019287
    3. ' tama' → logprob: -2.637406826019287
    4. ' for' → logprob: -3.012406826019287
    5. 'possible' → logprob: -3.262406826019287
    6. 'c' → logprob: -3.887406826019287
    7. ' suspects' → logprob: -3.887406826019287
    8. ' candidates' → logprob: -4.137406826019287
    9. 'not' → logprob: -4.512406826019287
    10. 'non' → logprob: -4.887406826019287

Token 242: ' someone' (ID: 5693)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2164583206176758
    2. ' suspects' → logprob: -1.5914583206176758
    3. 'sus' → logprob: -2.966458320617676
    4. ' tama' → logprob: -3.091458320617676
    5. ' [' → logprob: -3.216458320617676
    6. ' suspect' → logprob: -3.341458320617676
    7. ' candidates' → logprob: -3.341458320617676
    8. '[t' → logprob: -3.716458320617676
    9. ' next' → logprob: -3.966458320617676
    10. ' t' → logprob: -3.966458320617676

Token 243: ' who' (ID: 1218)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8299452662467957
    2. ' not' → logprob: -1.3299453258514404
    3. '_not' → logprob: -1.9549453258514404
    4. ' =' → logprob: -2.4549453258514404
    5. ' who' → logprob: -3.0799453258514404
    6. 'who' → logprob: -4.204945087432861
    7. '_w' → logprob: -5.704945087432861
    8. '=' → logprob: -6.704945087432861
    9. '_candidates' → logprob: -6.829945087432861
    10. 'for' → logprob: -6.829945087432861

Token 244: ' never' (ID: 3779)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.019312437623739243
    2. 'not' → logprob: -4.519312381744385
    3. ' is' → logprob: -4.894312381744385
    4. ' does' → logprob: -7.394312381744385
    5. 'is' → logprob: -10.519312858581543
    6. ' doesn't' → logprob: -10.769312858581543
    7. ' isn't' → logprob: -10.894312858581543
    8. ' has' → logprob: -11.269312858581543
    9. 'does' → logprob: -11.894312858581543
    10. ' ' → logprob: -12.019312858581543

Token 245: ' appears' (ID: 14518)
  Prédit: ' appears'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appears' → logprob: -0.1591903269290924
    2. 'appe' → logprob: -2.2841904163360596
    3. ' appeared' → logprob: -3.2841904163360596
    4. ' in' → logprob: -5.4091901779174805
    5. 'in' → logprob: -6.6591901779174805
    6. ' is' → logprob: -6.9091901779174805
    7. ' ' → logprob: -8.65919017791748
    8. ' was' → logprob: -9.28419017791748
    9. '
' → logprob: -9.40919017791748
    10. 'appear' → logprob: -9.40919017791748

Token 246: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.3488752841949463
    2. 'as' → logprob: -1.2238752841949463
    3. 'in' → logprob: -8.348875045776367
    4. ' in' → logprob: -8.973875045776367
    5. ' ' → logprob: -10.973875045776367
    6. ' on' → logprob: -11.723875045776367
    7. 'on' → logprob: -12.223875045776367
    8. '```' → logprob: -12.223875045776367
    9. ' als' → logprob: -12.348875045776367
    10. '_as' → logprob: -12.348875045776367

Token 247: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759456157684326
    2. ' x' → logprob: -0.8259456157684326
    3. ' ' → logprob: -13.075945854187012
    4. ' a' → logprob: -14.075945854187012
    5. '	x' → logprob: -14.450945854187012
    6. 'a' → logprob: -14.575945854187012
    7. '_x' → logprob: -14.700945854187012
    8. ' an' → logprob: -15.075945854187012
    9. '1' → logprob: -15.200945854187012
    10. ' test' → logprob: -15.450945854187012

Token 248: '.
' (ID: 558)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12263375520706177
    2. 'appe' → logprob: -3.622633695602417
    3. 'last' → logprob: -4.247633934020996
    4. 'for' → logprob: -4.372633934020996
    5. 'possible' → logprob: -4.372633934020996
    6. 'sus' → logprob: -4.622633934020996
    7. 'x' → logprob: -4.872633934020996
    8. 'appear' → logprob: -4.997633934020996
    9. 'right' → logprob: -5.622633934020996
    10. 't' → logprob: -5.622633934020996

Token 249: 'appe' (ID: 15645)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8551676869392395
    2. 'x' → logprob: -1.7301676273345947
    3. 'appe' → logprob: -1.8551676273345947
    4. 'right' → logprob: -2.3551676273345947
    5. 'left' → logprob: -2.9801676273345947
    6. 'appear' → logprob: -3.2301676273345947
    7. 'sus' → logprob: -4.230167865753174
    8. 'all' → logprob: -4.605167865753174
    9. 'possible' → logprob: -5.105167865753174
    10. 'not' → logprob: -5.730167865753174

Token 250: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.032602254301309586
    2. 'ar' → logprob: -3.907602310180664
    3. 'aring' → logprob: -4.532602310180664
    4. 'ared' → logprob: -6.782602310180664
    5. 'rs' → logprob: -10.157602310180664
    6. '
' → logprob: -12.407602310180664
    7. 'arently' → logprob: -12.657602310180664
    8. '[' → logprob: -12.782602310180664
    9. 'a' → logprob: -12.782602310180664
    10. '#' → logprob: -13.032602310180664

Token 251: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.04448951408267021
    2. '=' → logprob: -3.794489622116089
    3. ' =' → logprob: -4.04448938369751
    4. 'as' → logprob: -5.79448938369751
    5. '_in' → logprob: -7.79448938369751
    6. ' as' → logprob: -11.044489860534668
    7. '_' → logprob: -11.169489860534668
    8. 'As' → logprob: -12.419489860534668
    9. '=_' → logprob: -13.169489860534668
    10. '_As' → logprob: -13.169489860534668

Token 252: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.8349800109863281
    2. '_as' → logprob: -0.8349800109863281
    3. ' =' → logprob: -2.084980010986328
    4. '=' → logprob: -5.084980010986328
    5. '=set' → logprob: -7.584980010986328
    6. 'x' → logprob: -7.959980010986328
    7. '_' → logprob: -8.709980010986328
    8. 'as' → logprob: -8.959980010986328
    9. '_set' → logprob: -9.084980010986328
    10. ' ' → logprob: -9.334980010986328

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687559962272644
    2. '=' → logprob: -1.1368756294250488
    3. '=set' → logprob: -12.38687515258789
    4. ' ' → logprob: -15.38687515258789
    5. '＝' → logprob: -16.51187515258789
    6. 's' → logprob: -16.88687515258789
    7. ' ' → logprob: -17.63687515258789
    8. '_' → logprob: -17.76187515258789
    9. ',' → logprob: -18.01187515258789
    10. ')' → logprob: -18.13687515258789

Token 254: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.059431638568639755
    2. ' set' → logprob: -3.059431552886963
    3. '{' → logprob: -4.559431552886963
    4. ' {' → logprob: -8.059432029724121
    5. '	set' → logprob: -14.684432029724121
    6. '=set' → logprob: -14.809432029724121
    7. '   ' → logprob: -15.684432029724121
    8. '(set' → logprob: -15.934432029724121
    9. '{i' → logprob: -16.309431076049805
    10. '{x' → logprob: -16.309431076049805

Token 255: '(x' (ID: 4061)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002967320033349097
    2. '()
' → logprob: -9.125296592712402
    3. '(x' → logprob: -9.250296592712402
    4. '(i' → logprob: -9.875296592712402
    5. '(y' → logprob: -11.375296592712402
    6. '([' → logprob: -11.375296592712402
    7. '(' → logprob: -11.750296592712402
    8. '()

' → logprob: -12.500296592712402
    9. '(t' → logprob: -13.125296592712402
    10. '(range' → logprob: -13.875296592712402

Token 256: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31346404552459717
    2. 'for' → logprob: -1.3134640455245972
    3. ' ' → logprob: -8.688464164733887
    4. '   ' → logprob: -11.813464164733887
    5. ')' → logprob: -11.813464164733887
    6. '
' → logprob: -12.438464164733887
    7. '	for' → logprob: -12.563464164733887
    8. '[' → logprob: -13.063464164733887
    9. '  ' → logprob: -13.063464164733887
    10. ' in' → logprob: -13.813464164733887

Token 257: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013877161778509617
    2. ' x' → logprob: -4.3888773918151855
    3. '(x' → logprob: -6.7638773918151855
    4. '_,' → logprob: -9.013876914978027
    5. ',' → logprob: -10.138876914978027
    6. ' (' → logprob: -10.388876914978027
    7. '_x' → logprob: -12.388876914978027
    8. ' _,' → logprob: -12.513876914978027
    9. '_' → logprob: -12.888876914978027
    10. ',x' → logprob: -12.888876914978027

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010707385838031769
    2. ',y' → logprob: -4.760707378387451
    3. ',_' → logprob: -6.260707378387451
    4. ' ,' → logprob: -9.51070785522461
    5. ' in' → logprob: -10.01070785522461
    6. 'in' → logprob: -11.26070785522461
    7. ',x' → logprob: -11.63570785522461
    8. ',n' → logprob: -11.76070785522461
    9. ',
' → logprob: -12.51070785522461
    10. ',s' → logprob: -12.88570785522461

Token 259: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09240469336509705
    2. ' y' → logprob: -2.59240460395813
    3. '_' → logprob: -4.592404842376709
    4. '_y' → logprob: -5.842404842376709
    5. ' _' → logprob: -7.842404842376709
    6. '	y' → logprob: -14.71740436553955
    7. '_=' → logprob: -16.092405319213867
    8. '(y' → logprob: -16.467405319213867
    9. ' in' → logprob: -16.467405319213867
    10. ' ' → logprob: -16.592405319213867

Token 260: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38694268465042114
    2. 'in' → logprob: -1.1369426250457764
    3. ')' → logprob: -10.261942863464355
    4. ' ' → logprob: -10.886942863464355
    5. '
' → logprob: -12.511942863464355
    6. 'n' → logprob: -12.761942863464355
    7. 'inthe' → logprob: -13.511942863464355
    8. ',' → logprob: -13.761942863464355
    9. 'import' → logprob: -14.011942863464355
    10. 'int' → logprob: -14.386942863464355

Token 261: ' testimon' (ID: 109591)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.2520384192466736
    2. ' testimon' → logprob: -1.5020384788513184
    3. ' testimonials' → logprob: -10.37703800201416
    4. ' test' → logprob: -11.00203800201416
    5. 'tests' → logprob: -11.12703800201416
    6. ' ' → logprob: -11.75203800201416
    7. 'Test' → logprob: -12.75203800201416
    8. '```' → logprob: -13.12703800201416
    9. 'tes' → logprob: -13.37703800201416
    10. '   ' → logprob: -13.37703800201416

Token 262: 'ies' (ID: 566)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.01815567910671234
    2. 'ies' → logprob: -4.018155574798584
    3. 'e' → logprob: -13.518156051635742
    4. 'ues' → logprob: -14.143156051635742
    5. '   ' → logprob: -14.393156051635742
    6. 'ries' → logprob: -14.518156051635742
    7. ')' → logprob: -14.768156051635742
    8. 'ologies' → logprob: -14.768156051635742
    9. 'onies' → logprob: -15.143156051635742
    10. 's' → logprob: -15.768156051635742

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.864272967912257e-05
    2. ' )' → logprob: -9.375088691711426
    3. ')
' → logprob: -12.875088691711426
    4. 'if' → logprob: -14.750088691711426
    5. ' if' → logprob: -14.875088691711426
    6. '())' → logprob: -16.00008773803711
    7. '))' → logprob: -16.75008773803711
    8. ')

' → logprob: -16.87508773803711
    9. ' ' → logprob: -17.25008773803711
    10. ')}' → logprob: -17.37508773803711

Token 264: 't' (ID: 83)
  Prédit: 'appe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appe' → logprob: -0.6583743691444397
    2. 'c' → logprob: -0.7833743691444397
    3. 'possible' → logprob: -4.783374309539795
    4. 'not' → logprob: -4.783374309539795
    5. 'does' → logprob: -5.908374309539795
    6. 'never' → logprob: -6.658374309539795
    7. 'no' → logprob: -7.033374309539795
    8. ' candidates' → logprob: -7.283374309539795
    9. 'all' → logprob: -7.408374309539795
    10. 'candidate' → logprob: -7.408374309539795

Token 265: 'ama' (ID: 2152)
  Prédit: 'ama'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ama' → logprob: -0.9086738228797913
    2. 'appe' → logprob: -1.4086737632751465
    3. 'ampa' → logprob: -2.2836737632751465
    4. 'here' → logprob: -3.6586737632751465
    5. 'am' → logprob: -4.0336737632751465
    6. 'arget' → logprob: -4.0336737632751465
    7. 'amp' → logprob: -4.1586737632751465
    8. 'o' → logprob: -4.2836737632751465
    9. 'r' → logprob: -4.2836737632751465
    10. 'amu' → logprob: -4.2836737632751465

Token 266: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.4298548400402069
    2. ' =' → logprob: -1.1798548698425293
    3. '=' → logprob: -3.3048548698425293
    4. '_candidate' → logprob: -5.429854869842529
    5. 's' → logprob: -7.679854869842529
    6. '_' → logprob: -8.304854393005371
    7. '_is' → logprob: -9.054854393005371
    8. '_not' → logprob: -9.679854393005371
    9. '_possible' → logprob: -10.179854393005371
    10. '_can' → logprob: -11.679854393005371

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01814994215965271
    2. '=' → logprob: -4.0181498527526855
    3. '＝' → logprob: -17.143150329589844
    4. '=set' → logprob: -17.768150329589844
    5. ' ' → logprob: -17.893150329589844
    6. ' =[' → logprob: -19.143150329589844
    7. ' =
' → logprob: -19.518150329589844
    8. ' ' → logprob: -20.143150329589844
    9. 's' → logprob: -20.143150329589844
    10. ' =
' → logprob: -20.643150329589844

Token 268: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.22074900567531586
    2. ' set' → logprob: -1.970749020576477
    3. '{' → logprob: -3.2207489013671875
    4. '{i' → logprob: -4.3457489013671875
    5. ' {' → logprob: -5.3457489013671875
    6. '[i' → logprob: -7.5957489013671875
    7. ' [' → logprob: -8.095748901367188
    8. ' ' → logprob: -9.720748901367188
    9. '[' → logprob: -9.845748901367188
    10. '   ' → logprob: -9.970748901367188

Token 269: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008801387157291174
    2. 'node' → logprob: -7.875880241394043
    3. 'sus' → logprob: -8.000880241394043
    4. 'candidate' → logprob: -9.875880241394043
    5. 's' → logprob: -10.375880241394043
    6. 'person' → logprob: -10.500880241394043
    7. ' i' → logprob: -10.750880241394043
    8. 'v' → logprob: -10.875880241394043
    9. ' suspect' → logprob: -12.500880241394043
    10. 'x' → logprob: -12.625880241394043

Token 270: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10023309290409088
    2. 'for' → logprob: -2.3502330780029297
    3. ' ' → logprob: -11.60023307800293
    4. ' in' → logprob: -11.97523307800293
    5. 'i' → logprob: -12.22523307800293
    6. ' not' → logprob: -13.22523307800293
    7. 'in' → logprob: -13.22523307800293
    8. 'not' → logprob: -13.72523307800293
    9. ' i' → logprob: -14.10023307800293
    10. '   ' → logprob: -15.60023307800293

Token 271: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8001486659049988
    2. 'range' → logprob: -1.0501487255096436
    3. 'i' → logprob: -1.6751487255096436
    4. ' i' → logprob: -4.3001484870910645
    5. ' ' → logprob: -13.050148963928223
    6. ' in' → logprob: -13.300148963928223
    7. '(range' → logprob: -14.925148963928223
    8. 'in' → logprob: -15.050148963928223
    9. '  ' → logprob: -15.425148963928223
    10. '   ' → logprob: -15.425148963928223

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1544962227344513
    2. 'in' → logprob: -2.029496192932129
    3. 'range' → logprob: -4.529496192932129
    4. ' range' → logprob: -7.029496192932129
    5. 'i' → logprob: -9.779496192932129
    6. '(range' → logprob: -11.654496192932129
    7. ' i' → logprob: -11.904496192932129
    8. ' ' → logprob: -12.404496192932129
    9. '(' → logprob: -13.529496192932129
    10. '1' → logprob: -14.029496192932129

Token 273: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031791406217962503
    2. ' range' → logprob: -5.75317907333374
    3. 'graph' → logprob: -13.628179550170898
    4. '1' → logprob: -16.3781795501709
    5. '(range' → logprob: -16.6281795501709
    6. '   ' → logprob: -17.0031795501709
    7. ' ' → logprob: -17.8781795501709
    8. '
' → logprob: -18.2531795501709
    9. '	range' → logprob: -18.2531795501709
    10. '  ' → logprob: -18.5031795501709

Token 274: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.372294698550832e-06
    2. '1' → logprob: -11.625009536743164
    3. ' (' → logprob: -14.750009536743164
    4. '   ' → logprob: -18.375009536743164
    5. '(m' → logprob: -18.625009536743164
    6. ',' → logprob: -19.000009536743164
    7. '(
' → logprob: -19.625009536743164
    8. ')' → logprob: -19.625009536743164
    9. 'a' → logprob: -20.125009536743164
    10. 'm' → logprob: -20.125009536743164

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.029847231227905e-05
    2. '(' → logprob: -9.500080108642578
    3. ' ' → logprob: -13.000080108642578
    4. ',' → logprob: -13.375080108642578
    5. '   ' → logprob: -14.250080108642578
    6. 'm' → logprob: -14.625080108642578
    7. ')' → logprob: -15.250080108642578
    8. '
' → logprob: -16.500080108642578
    9. '  ' → logprob: -18.000080108642578
    10. '```' → logprob: -18.125080108642578

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011247060261666775
    2. ',m' → logprob: -4.511247158050537
    3. ' ,' → logprob: -9.136246681213379
    4. 'm' → logprob: -9.636246681213379
    5. '1' → logprob: -10.761246681213379
    6. '+' → logprob: -14.011246681213379
    7. ',int' → logprob: -14.386246681213379
    8. ' ' → logprob: -15.011246681213379
    9. '‌,' → logprob: -15.011246681213379
    10. ',
' → logprob: -15.136246681213379

Token 277: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.306760805164231e-05
    2. ' m' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.62501335144043
    4. '	m' → logprob: -19.12501335144043
    5. '(m' → logprob: -19.75001335144043
    6. '+m' → logprob: -20.00001335144043
    7. ' ' → logprob: -20.62501335144043
    8. '
' → logprob: -20.75001335144043
    9. ')m' → logprob: -21.00001335144043
    10. '```' → logprob: -21.12501335144043

Token 278: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.7729658540920354e-05
    2. ' +' → logprob: -10.500027656555176
    3. ')' → logprob: -16.125028610229492
    4. '＋' → logprob: -18.875028610229492
    5. '+)' → logprob: -19.125028610229492
    6. ' if' → logprob: -19.250028610229492
    7. '```' → logprob: -19.750028610229492
    8. ')+' → logprob: -19.875028610229492
    9. 'if' → logprob: -20.125028610229492
    10. ' ' → logprob: -20.375028610229492

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005580356228165329
    2. '+' → logprob: -7.500557899475098
    3. ' ' → logprob: -12.625557899475098
    4. '2' → logprob: -14.125557899475098
    5. '```' → logprob: -15.000557899475098
    6. '   ' → logprob: -15.375557899475098
    7. 'm' → logprob: -15.625557899475098
    8. ')' → logprob: -16.625558853149414
    9. ' +' → logprob: -16.750558853149414
    10. '
' → logprob: -17.250558853149414

Token 280: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39665520191192627
    2. ' if' → logprob: -1.1466552019119263
    3. 'if' → logprob: -4.646655082702637
    4. ' )' → logprob: -9.021655082702637
    5. ' ' → logprob: -11.146655082702637
    6. '   ' → logprob: -12.021655082702637
    7. '  ' → logprob: -15.146655082702637
    8. '}' → logprob: -15.521655082702637
    9. '    ' → logprob: -15.521655082702637
    10. 'not' → logprob: -15.521655082702637

Token 281: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10020699352025986
    2. 'if' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.225207328796387
    4. '   ' → logprob: -15.975207328796387
    5. '	if' → logprob: -18.60020637512207
    6. ')' → logprob: -19.60020637512207
    7. 'not' → logprob: -19.72520637512207
    8. '  ' → logprob: -20.10020637512207
    9. '
' → logprob: -20.60020637512207
    10. ' ' → logprob: -20.72520637512207

Token 282: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20143575966358185
    2. ' i' → logprob: -1.7014358043670654
    3. '   ' → logprob: -11.326436042785645
    4. '	i' → logprob: -12.576436042785645
    5. ' ' → logprob: -13.201436042785645
    6. 'not' → logprob: -13.451436042785645
    7. '  ' → logprob: -13.701436042785645
    8. '(i' → logprob: -14.201436042785645
    9. '    ' → logprob: -14.451436042785645
    10. ' ' → logprob: -14.451436042785645

Token 283: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.005234002135694027
    2. 'not' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.755233764648438
    4. ':not' → logprob: -17.630233764648438
    5. '	not' → logprob: -17.630233764648438
    6. ')' → logprob: -19.130233764648438
    7. ' no' → logprob: -19.255233764648438
    8. '_not' → logprob: -20.130233764648438
    9. '<|end|>' → logprob: -20.880233764648438
    10. ' for' → logprob: -21.255233764648438

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4759223163127899
    2. 'in' → logprob: -0.9759223461151123
    3. 'appe' → logprob: -6.475922107696533
    4. ' appears' → logprob: -8.225922584533691
    5. ')' → logprob: -11.725922584533691
    6. ',' → logprob: -11.975922584533691
    7. '_in' → logprob: -12.350922584533691
    8. 'appear' → logprob: -12.850922584533691
    9. ']' → logprob: -12.975922584533691
    10. ' ' → logprob: -13.100922584533691

Token 285: ' appears' (ID: 14518)
  Prédit: 'appe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appe' → logprob: -0.08900239318609238
    2. ' appears' → logprob: -2.4640023708343506
    3. 'appear' → logprob: -10.83900260925293
    4. ' ' → logprob: -11.21400260925293
    5. 'ap' → logprob: -12.33900260925293
    6. '   ' → logprob: -12.33900260925293
    7. 'Appe' → logprob: -12.46400260925293
    8. '```' → logprob: -12.96400260925293
    9. ' ' → logprob: -13.52650260925293
    10. 'appearance' → logprob: -13.83900260925293

Token 286: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -4.60414821645827e-06
    2. 'as' → logprob: -13.000004768371582
    3. ' _' → logprob: -13.750004768371582
    4. ' as' → logprob: -15.125004768371582
    5. '_' → logprob: -15.625004768371582
    6. ')' → logprob: -16.375003814697266
    7. '_As' → logprob: -16.375003814697266
    8. '_a' → logprob: -16.625003814697266
    9. ')_' → logprob: -17.000003814697266
    10. '_at' → logprob: -17.125003814697266

Token 287: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.2519422471523285
    2. 'x' → logprob: -1.5019422769546509
    3. '{x' → logprob: -11.75194263458252
    4. ' x' → logprob: -14.25194263458252
    5. 's' → logprob: -14.25194263458252
    6. ')' → logprob: -14.62694263458252
    7. ' ' → logprob: -14.62694263458252
    8. '{' → logprob: -14.75194263458252
    9. '```' → logprob: -15.12694263458252
    10. '_' → logprob: -15.12694263458252

Token 288: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.9795445849886164e-05
    2. ' ]' → logprob: -9.750060081481934
    3. ']
' → logprob: -14.375060081481934
    4. ')]' → logprob: -14.500060081481934
    5. ']

' → logprob: -15.250060081481934
    6. '()]' → logprob: -17.375059127807617
    7. ' and' → logprob: -17.625059127807617
    8. '`]' → logprob: -17.875059127807617
    9. '])' → logprob: -18.750059127807617
    10. ')' → logprob: -18.875059127807617

Token 289: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17893266677856445
    2. 't' → logprob: -2.3039326667785645
    3. 'for' → logprob: -3.3039326667785645
    4. '#' → logprob: -3.8039326667785645
    5. 'possible' → logprob: -6.0539326667785645
    6. 'print' → logprob: -7.3039326667785645
    7. 'result' → logprob: -7.4289326667785645
    8. 'answer' → logprob: -7.5539326667785645
    9. ' if' → logprob: -8.303932189941406
    10. 'selected' → logprob: -8.803932189941406

Token 290: ' According' (ID: 16344)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30397677421569824
    2. 't' → logprob: -2.1789767742156982
    3. 'print' → logprob: -2.6789767742156982
    4. 'for' → logprob: -3.1789767742156982
    5. '#' → logprob: -3.5539767742156982
    6. 'answer' → logprob: -5.678977012634277
    7. 'result' → logprob: -6.178977012634277
    8. ' if' → logprob: -6.303977012634277
    9. 'possible' → logprob: -6.428977012634277
    10. 'assert' → logprob: -8.428977012634277

Token 291: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5278618931770325
    2. ' to' → logprob: -0.9028618931770325
    3. '_to' → logprob: -6.152862071990967
    4. 't' → logprob: -6.527862071990967
    5. ' ' → logprob: -7.402862071990967
    6. 'ly' → logprob: -8.027861595153809
    7. '=' → logprob: -9.902861595153809
    8. '_' → logprob: -10.402861595153809
    9. '_t' → logprob: -11.152861595153809
    10. ' =' → logprob: -11.277861595153809

Token 292: ' problem' (ID: 4792)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.58675217628479
    2. ' len' → logprob: -0.83675217628479
    3. ' problem' → logprob: -4.586751937866211
    4. 'problem' → logprob: -7.586751937866211
    5. ' ' → logprob: -10.961751937866211
    6. '#' → logprob: -11.086751937866211
    7. ' the' → logprob: -11.711751937866211
    8. 't' → logprob: -11.961751937866211
    9. 'the' → logprob: -12.461751937866211
    10. ' t' → logprob: -12.461751937866211

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08139559626579285
    2. ' constraints' → logprob: -3.4563956260681152
    3. 'constraints' → logprob: -4.081395626068115
    4. ' statement' → logprob: -4.581395626068115
    5. ' description' → logprob: -5.206395626068115
    6. ' ,' → logprob: -5.706395626068115
    7. 'statement' → logprob: -5.706395626068115
    8. 'description' → logprob: -5.956395626068115
    9. '_constraints' → logprob: -6.456395626068115
    10. 't' → logprob: -7.456395626068115

Token 294: ' Tama' (ID: 108269)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.40149569511413574
    2. ' tama' → logprob: -1.9014956951141357
    3. '#' → logprob: -2.2764956951141357
    4. 'assert' → logprob: -3.1514956951141357
    5. ' assert' → logprob: -3.9014956951141357
    6. ' #' → logprob: -4.651495933532715
    7. ' t' → logprob: -6.276495933532715
    8. ' if' → logprob: -6.651495933532715
    9. ' len' → logprob: -7.401495933532715
    10. 'len' → logprob: -7.776495933532715

Token 295: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7611931562423706
    2. ' is' → logprob: -1.1361931562423706
    3. '=' → logprob: -1.7611931562423706
    4. '_candidates' → logprob: -3.88619327545166
    5. ' has' → logprob: -4.38619327545166
    6. 'is' → logprob: -5.63619327545166
    7. ''s' → logprob: -7.51119327545166
    8. 's' → logprob: -7.51119327545166
    9. 'has' → logprob: -7.63619327545166
    10. ' appears' → logprob: -7.88619327545166

Token 296: ' exactly' (ID: 9707)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20217442512512207
    2. ' tama' → logprob: -1.702174425125122
    3. ' exactly' → logprob: -8.702174186706543
    4. ' ' → logprob: -8.952174186706543
    5. ' the' → logprob: -9.577174186706543
    6. ' only' → logprob: -9.952174186706543
    7. ' taman' → logprob: -9.952174186706543
    8. ' len' → logprob: -10.077174186706543
    9. 'a' → logprob: -10.327174186706543
    10. ' t' → logprob: -10.577174186706543

Token 297: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.25666508078575134
    2. 'one' → logprob: -1.5066651105880737
    3. 't' → logprob: -6.006665229797363
    4. '1' → logprob: -6.256665229797363
    5. ' ' → logprob: -8.631665229797363
    6. 'len' → logprob: -9.006665229797363
    7. ' satu' → logprob: -11.506665229797363
    8. ' t' → logprob: -11.756665229797363
    9. ' len' → logprob: -12.131665229797363
    10. '_one' → logprob: -12.256665229797363

Token 298: ' person' (ID: 1647)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13732075691223145
    2. ' if' → logprob: -3.0123207569122314
    3. 'if' → logprob: -3.0123207569122314
    4. '_candidates' → logprob: -4.637320518493652
    5. 'assert' → logprob: -5.262320518493652
    6. '_candidate' → logprob: -5.387320518493652
    7. '_t' → logprob: -5.762320518493652
    8. ' and' → logprob: -5.887320518493652
    9. 'candidate' → logprob: -7.012320518493652
    10. 's' → logprob: -7.387320518493652

Token 299: '.
' (ID: 558)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18149977922439575
    2. ' if' → logprob: -2.681499719619751
    3. 'if' → logprob: -2.806499719619751
    4. '[' → logprob: -3.931499719619751
    5. 'assert' → logprob: -5.18149995803833
    6. '
' → logprob: -5.68149995803833
    7. '#' → logprob: -5.68149995803833
    8. ' tama' → logprob: -6.80649995803833
    9. ',' → logprob: -6.93149995803833
    10. 'print' → logprob: -7.30649995803833

Token 300: '#' (ID: 2)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.45702245831489563
    2. 'print' → logprob: -1.3320224285125732
    3. 'if' → logprob: -2.8320224285125732
    4. 'for' → logprob: -3.8320224285125732
    5. '#' → logprob: -4.457022666931152
    6. 'answer' → logprob: -5.957022666931152
    7. 'next' → logprob: -6.207022666931152
    8. 'result' → logprob: -6.332022666931152
    9. 'return' → logprob: -6.582022666931152
    10. 'assert' → logprob: -6.582022666931152

Token 301: ' Tama' (ID: 108269)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10534609109163284
    2. 'if' → logprob: -2.730346202850342
    3. 'assert' → logprob: -3.605346202850342
    4. '#' → logprob: -5.355346202850342
    5. 'print' → logprob: -6.230346202850342
    6. 'for' → logprob: -7.480346202850342
    7. 'answer' → logprob: -9.105345726013184
    8. 'candidate' → logprob: -9.605345726013184
    9. 'possible' → logprob: -10.355345726013184
    10. 'T' → logprob: -10.355345726013184

Token 302: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018912214785814285
    2. '=' → logprob: -4.018912315368652
    3. '_candidate' → logprob: -7.393912315368652
    4. '_candidates' → logprob: -9.393912315368652
    5. ' ' → logprob: -11.143912315368652
    6. '_t' → logprob: -11.768912315368652
    7. '_index' → logprob: -11.768912315368652
    8. '_id' → logprob: -12.018912315368652
    9. '=t' → logprob: -12.018912315368652
    10. 't' → logprob: -12.143912315368652

Token 303: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20164769887924194
    2. ' =' → logprob: -1.7016477584838867
    3. '=t' → logprob: -9.201647758483887
    4. 't' → logprob: -9.576647758483887
    5. '=len' → logprob: -10.451647758483887
    6. ' be' → logprob: -11.201647758483887
    7. ' ' → logprob: -12.451647758483887
    8. '_candidates' → logprob: -13.076647758483887
    9. '_t' → logprob: -13.326647758483887
    10. ' tama' → logprob: -13.576647758483887

Token 304: ' last' (ID: 2174)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03805331513285637
    2. ' tama' → logprob: -3.288053274154663
    3. ' ' → logprob: -12.538053512573242
    4. ' taman' → logprob: -13.288053512573242
    5. 'ama' → logprob: -14.038053512573242
    6. ' t' → logprob: -14.288053512573242
    7. '	t' → logprob: -14.413053512573242
    8. 'a' → logprob: -14.538053512573242
    9. '   ' → logprob: -14.663053512573242
    10. ' tampa' → logprob: -14.663053512573242

Token 305: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.225364089012146
    2. '
' → logprob: -2.3503642082214355
    3. 'for' → logprob: -3.3503642082214355
    4. '#' → logprob: -3.7253642082214355
    5. 'if' → logprob: -4.3503642082214355
    6. ' for' → logprob: -4.6003642082214355
    7. ' if' → logprob: -5.1003642082214355
    8. ' tama' → logprob: -5.2253642082214355
    9. 'import' → logprob: -6.4753642082214355
    10. ' =' → logprob: -6.4753642082214355

Token 306: ' so' (ID: 813)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10602178424596786
    2. '#' → logprob: -3.6060218811035156
    3. 'order' → logprob: -3.8560218811035156
    4. 'if' → logprob: -4.981021881103516
    5. 'and' → logprob: -5.106021881103516
    6. 'last' → logprob: -5.231021881103516
    7. 'for' → logprob: -5.481021881103516
    8. 'break' → logprob: -5.856021881103516
    9. ' order' → logprob: -6.231021881103516
    10. ' and' → logprob: -6.231021881103516

Token 307: ' put' (ID: 3006)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3213963210582733
    2. 'for' → logprob: -2.0713963508605957
    3. 'last' → logprob: -2.8213963508605957
    4. '#' → logprob: -3.6963963508605957
    5. 'print' → logprob: -3.9463963508605957
    6. 'order' → logprob: -4.196396350860596
    7. 'top' → logprob: -5.321396350860596
    8. ' for' → logprob: -5.446396350860596
    9. 'in' → logprob: -5.446396350860596
    10. 'start' → logprob: -6.446396350860596

Token 308: ' Tama' (ID: 108269)
  Prédit: ' tama'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tama' → logprob: -0.44765767455101013
    2. 't' → logprob: -1.0726577043533325
    3. '(t' → logprob: -4.947657585144043
    4. ' the' → logprob: -5.697657585144043
    5. ' t' → logprob: -6.072657585144043
    6. ' them' → logprob: -7.072657585144043
    7. '_t' → logprob: -7.572657585144043
    8. ' ' → logprob: -7.947657585144043
    9. ' him' → logprob: -7.947657585144043
    10. '[t' → logprob: -8.197657585144043

Token 309: ' last' (ID: 2174)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6968495845794678
    2. ' at' → logprob: -0.9468495845794678
    3. '=' → logprob: -2.9468495845794678
    4. 'at' → logprob: -3.9468495845794678
    5. 'last' → logprob: -4.446849822998047
    6. ' last' → logprob: -4.821849822998047
    7. '_at' → logprob: -4.946849822998047
    8. '_last' → logprob: -5.321849822998047
    9. 't' → logprob: -5.946849822998047
    10. '_candidates' → logprob: -6.071849822998047

Token 310: ' in' (ID: 306)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.20809149742126465
    2. 't' → logprob: -2.2080914974212646
    3. 'for' → logprob: -3.7080914974212646
    4. ' order' → logprob: -4.083091735839844
    5. '
' → logprob: -4.458091735839844
    6. '#' → logprob: -4.958091735839844
    7. 'ordering' → logprob: -5.208091735839844
    8. 'result' → logprob: -5.708091735839844
    9. ' for' → logprob: -5.833091735839844
    10. 'answer' → logprob: -6.583091735839844

Token 311: ' order' (ID: 2569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6637082099914551
    2. ' the' → logprob: -1.413708209991455
    3. 'top' → logprob: -1.788708209991455
    4. 'order' → logprob: -3.288708209991455
    5. ' order' → logprob: -4.163708209991455
    6. ' top' → logprob: -4.413708209991455
    7. 'ordering' → logprob: -5.288708209991455
    8. ' ordering' → logprob: -6.413708209991455
    9. ' any' → logprob: -7.038708209991455
    10. 'any' → logprob: -7.413708209991455

Token 312: '.
' (ID: 558)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.017954424023628235
    2. 'for' → logprob: -5.017954349517822
    3. 't' → logprob: -5.267954349517822
    4. 'from' → logprob: -6.392954349517822
    5. ' order' → logprob: -6.392954349517822
    6. '#' → logprob: -7.392954349517822
    7. 'visited' → logprob: -7.892954349517822
    8. 'import' → logprob: -8.39295482635498
    9. 'non' → logprob: -8.39295482635498
    10. 'ordering' → logprob: -8.64295482635498

Token 313: 't' (ID: 83)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.06634972989559174
    2. 'from' → logprob: -3.316349744796753
    3. 'visited' → logprob: -3.816349744796753
    4. '#' → logprob: -5.691349506378174
    5. 'queue' → logprob: -6.941349506378174
    6. 'import' → logprob: -7.941349506378174
    7. 'ordered' → logprob: -8.566349983215332
    8. 'top' → logprob: -8.691349983215332
    9. 'for' → logprob: -8.816349983215332
    10. 'sorted' → logprob: -9.066349983215332

Token 314: 'ama' (ID: 2152)
  Prédit: 'ama'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ama' → logprob: -0.008574149571359158
    2. 'order' → logprob: -5.63357400894165
    3. 'op' → logprob: -6.00857400894165
    4. 'o' → logprob: -7.75857400894165
    5. '_order' → logprob: -7.75857400894165
    6. 'opo' → logprob: -7.75857400894165
    7. 'otal' → logprob: -8.383574485778809
    8. '#' → logprob: -9.133574485778809
    9. 'a' → logprob: -9.883574485778809
    10. 'ordered' → logprob: -9.946074485778809

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6917499899864197
    2. '_candidates' → logprob: -1.1917500495910645
    3. '=' → logprob: -1.6917500495910645
    4. '_' → logprob: -5.0667500495910645
    5. '_candidate' → logprob: -5.4417500495910645
    6. '=_' → logprob: -7.6917500495910645
    7. '_c' → logprob: -9.316749572753906
    8. '_=' → logprob: -9.316749572753906
    9. 's' → logprob: -9.691749572753906
    10. 'Candidates' → logprob: -11.441749572753906

Token 316: ' tama' (ID: 28620)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07897306978702545
    2. ' tama' → logprob: -2.5789730548858643
    3. ' ' → logprob: -10.578972816467285
    4. '	t' → logprob: -10.953972816467285
    5. ' taman' → logprob: -11.453972816467285
    6. ' t' → logprob: -11.828972816467285
    7. '(t' → logprob: -12.703972816467285
    8. '   ' → logprob: -13.078972816467285
    9. ' tana' → logprob: -13.203972816467285
    10. ' Tama' → logprob: -13.578972816467285

Token 317: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: 0.0
    2. '_candidate' → logprob: -17.0
    3. 's' → logprob: -17.875
    4. '_' → logprob: -18.0
    5. ' _' → logprob: -18.5
    6. '_c' → logprob: -18.625
    7. ' candidates' → logprob: -18.75
    8. 't' → logprob: -19.25
    9. 'andidates' → logprob: -19.625
    10. '\' → logprob: -20.375

Token 318: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[-' → logprob: -17.375
    3. '.pop' → logprob: -17.5
    4. '#' → logprob: -19.0
    5. '\[' → logprob: -20.25
    6. ' [' → logprob: -20.375
    7. '0' → logprob: -20.5
    8. '```' → logprob: -20.75
    9. '[:' → logprob: -22.375
    10. '.' → logprob: -22.375

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '-' → logprob: -15.625001907348633
    4. '
' → logprob: -17.062501907348633
    5. '   ' → logprob: -17.937501907348633
    6. '00' → logprob: -18.125001907348633
    7. '۰' → logprob: -18.250001907348633
    8. '1' → logprob: -18.312501907348633
    9. '０' → logprob: -18.687501907348633
    10. '```' → logprob: -18.875001907348633

Token 320: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005279176402837038
    2. ']' → logprob: -5.255279064178467
    3. ' )' → logprob: -10.505279541015625
    4. '])' → logprob: -11.880279541015625
    5. ')]' → logprob: -12.380279541015625
    6. '}' → logprob: -12.505279541015625
    7. ')
' → logprob: -13.630279541015625
    8. '）' → logprob: -14.005279541015625
    9. ' ]' → logprob: -14.380279541015625
    10. '))' → logprob: -15.880279541015625

Token 321: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1765030324459076
    2. 'order' → logprob: -2.0515029430389404
    3. '#' → logprob: -3.8015029430389404
    4. 'queue' → logprob: -4.9265031814575195
    5. 'visited' → logprob: -5.9265031814575195
    6. 'import' → logprob: -7.1765031814575195
    7. ' from' → logprob: -9.67650318145752
    8. '```' → logprob: -10.42650318145752
    9. 'ordered' → logprob: -10.67650318145752
    10. 'q' → logprob: -10.80150318145752

Token 322: ' Top' (ID: 8022)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.7907358407974243
    2. 'from' → logprob: -0.9157358407974243
    3. '#' → logprob: -2.1657357215881348
    4. 'visited' → logprob: -4.790735721588135
    5. 'import' → logprob: -4.915735721588135
    6. 'queue' → logprob: -5.290735721588135
    7. ' order' → logprob: -5.415735721588135
    8. ' from' → logprob: -5.790735721588135
    9. ' #' → logprob: -7.165735721588135
    10. 'def' → logprob: -8.165736198425293

Token 323: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.0011970169143751264
    2. 'logical' → logprob: -7.00119686126709
    3. 'o' → logprob: -8.25119686126709
    4. 'ical' → logprob: -11.87619686126709
    5. 'sort' → logprob: -12.00119686126709
    6. 'ogical' → logprob: -12.25119686126709
    7. '```' → logprob: -12.87619686126709
    8. '_sort' → logprob: -13.62619686126709
    9. 'os' → logprob: -14.50119686126709
    10. 'olog' → logprob: -14.75119686126709

Token 324: ' sort' (ID: 4506)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.5817654728889465
    2. 'sort' → logprob: -1.4567654132843018
    3. ' sort' → logprob: -1.5817654132843018
    4. '_order' → logprob: -7.081765651702881
    5. '_sorted' → logprob: -7.331765651702881
    6. ' sorting' → logprob: -7.456765651702881
    7. '_' → logprob: -9.206765174865723
    8. 'sorting' → logprob: -9.456765174865723
    9. ' order' → logprob: -9.581765174865723
    10. 'sorted' → logprob: -9.831765174865723

Token 325: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5515775680541992
    2. 'order' → logprob: -1.9265775680541992
    3. ' from' → logprob: -2.176577568054199
    4. ' order' → logprob: -2.676577568054199
    5. ' queue' → logprob: -3.176577568054199
    6. 'queue' → logprob: -3.176577568054199
    7. 'import' → logprob: -4.801577568054199
    8. ':' → logprob: -7.051577568054199
    9. 'stack' → logprob: -7.051577568054199
    10. 'result' → logprob: -7.301577568054199

Token 326: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.4344160258769989
    2. 'find' → logprob: -1.4344160556793213
    3. 'det' → logprob: -2.5594160556793213
    4. '[]' → logprob: -4.184415817260742
    5. ' determine' → logprob: -4.434415817260742
    6. 'get' → logprob: -6.434415817260742
    7. ' order' → logprob: -6.684415817260742
    8. ' get' → logprob: -6.809415817260742
    9. 'import' → logprob: -6.934415817260742
    10. ' []' → logprob: -7.309415817260742

Token 327: ' one' (ID: 1001)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.18519259989261627
    2. ' an' → logprob: -2.435192584991455
    3. ' the' → logprob: -2.810192584991455
    4. ' a' → logprob: -4.435192584991455
    5. 'order' → logprob: -4.935192584991455
    6. ' ordering' → logprob: -6.935192584991455
    7. 'the' → logprob: -7.685192584991455
    8. ' valid' → logprob: -7.685192584991455
    9. ' possible' → logprob: -9.560193061828613
    10. ' all' → logprob: -9.810193061828613

Token 328: ' order' (ID: 2569)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5298933386802673
    2. ' valid' → logprob: -1.029893398284912
    3. 'possible' → logprob: -3.779893398284912
    4. ' order' → logprob: -4.154893398284912
    5. 'valid' → logprob: -4.779893398284912
    6. ' ordering' → logprob: -6.279893398284912
    7. 'order' → logprob: -6.404893398284912
    8. 'def' → logprob: -6.654893398284912
    9. ' of' → logprob: -6.779893398284912
    10. '_possible' → logprob: -7.779893398284912

Token 329: ' that' (ID: 484)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.42387741804122925
    2. 'order' → logprob: -1.173877477645874
    3. 'queue' → logprob: -3.548877477645874
    4. ' from' → logprob: -5.423877239227295
    5. 'import' → logprob: -6.298877239227295
    6. ' order' → logprob: -7.798877239227295
    7. 'stack' → logprob: -7.923877239227295
    8. 'visited' → logprob: -8.423877716064453
    9. 'result' → logprob: -8.548877716064453
    10. ' queue' → logprob: -9.298877716064453

Token 330: ' satisfies' (ID: 126205)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9107555150985718
    2. 'res' → logprob: -0.9107555150985718
    3. 'includes' → logprob: -2.5357556343078613
    4. ' respects' → logprob: -3.1607556343078613
    5. ' satisfies' → logprob: -3.4107556343078613
    6. ' includes' → logprob: -3.5357556343078613
    7. 'vis' → logprob: -6.285755634307861
    8. 'works' → logprob: -6.410755634307861
    9. ' visits' → logprob: -6.535755634307861
    10. 'valid' → logprob: -7.035755634307861

Token 331: ' constraints' (ID: 31060)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8447981476783752
    2. 'from' → logprob: -1.2197980880737305
    3. 'the' → logprob: -1.9697980880737305
    4. 'import' → logprob: -3.9697980880737305
    5. ' from' → logprob: -4.0947980880737305
    6. 'in' → logprob: -4.2197980880737305
    7. ' all' → logprob: -4.2197980880737305
    8. ' in' → logprob: -4.3447980880737305
    9. 'possible' → logprob: -4.9697980880737305
    10. ' import' → logprob: -5.0947980880737305

Token 332: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.020109916105866432
    2. 'order' → logprob: -4.020110130310059
    3. ' from' → logprob: -6.895110130310059
    4. 'queue' → logprob: -7.270110130310059
    5. 'import' → logprob: -8.395110130310059
    6. 'stack' → logprob: -11.145110130310059
    7. ' order' → logprob: -12.270110130310059
    8. 'visited' → logprob: -13.520110130310059
    9. 'result' → logprob: -13.645110130310059
    10. '```' → logprob: -14.520110130310059

Token 333: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0033626044169068336
    2. 'order' → logprob: -5.753362655639648
    3. ' from' → logprob: -9.378362655639648
    4. 'import' → logprob: -9.753362655639648
    5. 'queue' → logprob: -10.128362655639648
    6. '```' → logprob: -14.003362655639648
    7. 'visited' → logprob: -14.628362655639648
    8. 'result' → logprob: -15.128362655639648
    9. 'stack' → logprob: -15.378362655639648
    10. 'answer' → logprob: -15.628362655639648

Token 334: ' To' (ID: 2514)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0309769157320261
    2. 'order' → logprob: -3.5309770107269287
    3. 'queue' → logprob: -7.03097677230835
    4. 'import' → logprob: -8.530977249145508
    5. ' from' → logprob: -8.905977249145508
    6. 'visited' → logprob: -12.405977249145508
    7. '```' → logprob: -13.655977249145508
    8. ' order' → logprob: -13.780977249145508
    9. 'stack' → logprob: -14.530977249145508
    10. 'q' → logprob: -14.655977249145508

Token 335: ' ensure' (ID: 6757)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4909910559654236
    2. 'p' → logprob: -1.2409911155700684
    3. 'from' → logprob: -3.4909911155700684
    4. 'import' → logprob: -3.6159911155700684
    5. 'po' → logprob: -4.240991115570068
    6. 'sort' → logprob: -5.615991115570068
    7. 'do' → logprob: -5.740991115570068
    8. 'pp' → logprob: -5.740991115570068
    9. 'top' → logprob: -5.990991115570068
    10. 'ple' → logprob: -6.490991115570068

Token 336: ' Tama' (ID: 108269)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.9262740612030029
    2. ' order' → logprob: -2.301274061203003
    3. ' stable' → logprob: -2.301274061203003
    4. ' queue' → logprob: -2.551274061203003
    5. ' the' → logprob: -2.926274061203003
    6. ' correct' → logprob: -3.301274061203003
    7. ' all' → logprob: -3.426274061203003
    8. 'that' → logprob: -3.676274061203003
    9. ' no' → logprob: -3.676274061203003
    10. ' a' → logprob: -4.051274299621582

Token 337: ' last' (ID: 2174)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0859723910689354
    2. ' not' → logprob: -3.460972309112549
    3. 'is' → logprob: -4.335972309112549
    4. ' !=' → logprob: -4.710972309112549
    5. ' isn't' → logprob: -4.835972309112549
    6. ' in' → logprob: -5.585972309112549
    7. '_is' → logprob: -6.335972309112549
    8. 'not' → logprob: -6.460972309112549
    9. ' ' → logprob: -6.710972309112549
    10. ' does' → logprob: -6.710972309112549

Token 338: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12827537953853607
    2. 'queue' → logprob: -2.8782753944396973
    3. ' from' → logprob: -3.1282753944396973
    4. 'import' → logprob: -4.378275394439697
    5. 'order' → logprob: -5.378275394439697
    6. ' queue' → logprob: -6.503275394439697
    7. 'q' → logprob: -7.253275394439697
    8. 'que' → logprob: -7.628275394439697
    9. ',' → logprob: -9.003274917602539
    10. ' import' → logprob: -9.253274917602539

Token 339: ' remove' (ID: 6234)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -1.1588945388793945
    2. ' for' → logprob: -1.5338945388793945
    3. 'queue' → logprob: -1.6588945388793945
    4. 'from' → logprob: -2.9088945388793945
    5. 'for' → logprob: -3.1588945388793945
    6. ' from' → logprob: -3.1588945388793945
    7. ' in' → logprob: -3.5338945388793945
    8. 'q' → logprob: -3.9088945388793945
    9. ' import' → logprob: -4.1588945388793945
    10. ' order' → logprob: -4.4088945388793945

Token 340: ' Tama' (ID: 108269)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2818010449409485
    2. ' tama' → logprob: -1.4068009853363037
    3. ' ' → logprob: -8.781801223754883
    4. ' taman' → logprob: -9.406801223754883
    5. ' in' → logprob: -9.656801223754883
    6. '	t' → logprob: -9.781801223754883
    7. '   ' → logprob: -9.906801223754883
    8. ' t' → logprob: -10.281801223754883
    9. ' from' → logprob: -10.406801223754883
    10. '(t' → logprob: -10.406801223754883

Token 341: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5963072180747986
    2. 'from' → logprob: -0.8463072180747986
    3. 'graph' → logprob: -5.096307277679443
    4. 't' → logprob: -5.346307277679443
    5. ' graph' → logprob: -5.846307277679443
    6. 'in' → logprob: -6.096307277679443
    7. ' in' → logprob: -6.346307277679443
    8. ' if' → logprob: -6.846307277679443
    9. 'if' → logprob: -7.596307277679443
    10. ' node' → logprob: -8.221306800842285

Token 342: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.25216254591941833
    2. ' graph' → logprob: -1.5021625757217407
    3. 'in' → logprob: -9.12716293334961
    4. ' in' → logprob: -9.25216293334961
    5. '	graph' → logprob: -10.62716293334961
    6. '(graph' → logprob: -13.50216293334961
    7. 't' → logprob: -14.12716293334961
    8. 'graphs' → logprob: -14.37716293334961
    9. ' ' → logprob: -14.87716293334961
    10. ' the' → logprob: -15.62716293334961

Token 343: ' except' (ID: 6384)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.08667845278978348
    2. 'del' → logprob: -3.4616785049438477
    3. '
' → logprob: -3.9616785049438477
    4. ' graph' → logprob: -3.9616785049438477
    5. ' del' → logprob: -4.961678504943848
    6. 'if' → logprob: -5.961678504943848
    7. 'for' → logprob: -6.086678504943848
    8. ' if' → logprob: -7.336678504943848
    9. ' for' → logprob: -7.461678504943848
    10. 't' → logprob: -8.586678504943848

Token 344: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0146844387054443
    2. ' edges' → logprob: -1.5146844387054443
    3. 'in' → logprob: -2.0146844387054443
    4. ' its' → logprob: -2.2646844387054443
    5. ' for' → logprob: -2.3896844387054443
    6. 'edges' → logprob: -3.5146844387054443
    7. 'for' → logprob: -3.7646844387054443
    8. 't' → logprob: -4.389684677124023
    9. ' the' → logprob: -4.764684677124023
    10. ' keys' → logprob: -5.514684677124023

Token 345: ' last' (ID: 2174)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29449787735939026
    2. 'in' → logprob: -2.1694979667663574
    3. ' its' → logprob: -2.5444979667663574
    4. 't' → logprob: -4.044497966766357
    5. ' the' → logprob: -4.294497966766357
    6. ' edges' → logprob: -4.419497966766357
    7. ' all' → logprob: -5.419497966766357
    8. ' his' → logprob: -6.169497966766357
    9. 'the' → logprob: -6.544497966766357
    10. ' t' → logprob: -6.544497966766357

Token 346: ' step' (ID: 5983)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3761245012283325
    2. 'del' → logprob: -1.5011245012283325
    3. 'if' → logprob: -2.376124382019043
    4. 't' → logprob: -2.626124382019043
    5. ' for' → logprob: -2.626124382019043
    6. ' del' → logprob: -2.876124382019043
    7. 'for' → logprob: -2.876124382019043
    8. 'node' → logprob: -3.001124382019043
    9. ' node' → logprob: -3.126124382019043
    10. ' graph' → logprob: -4.251124382019043

Token 347: '.

' (ID: 364)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.1017400026321411
    2. 'for' → logprob: -1.3517400026321411
    3. 'graph' → logprob: -1.8517400026321411
    4. 'from' → logprob: -1.9767400026321411
    5. 'if' → logprob: -3.6017398834228516
    6. 'import' → logprob: -3.7267398834228516
    7. 'in' → logprob: -3.8517398834228516
    8. 'order' → logprob: -4.601739883422852
    9. ' for' → logprob: -5.226739883422852
    10. 'del' → logprob: -5.351739883422852

Token 348: '#' (ID: 2)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.15960757434368134
    2. 'queue' → logprob: -2.2846076488494873
    3. 'for' → logprob: -4.159607410430908
    4. 'del' → logprob: -4.409607410430908
    5. 'from' → logprob: -5.659607410430908
    6. ' graph' → logprob: -5.659607410430908
    7. 'import' → logprob: -6.034607410430908
    8. 'order' → logprob: -6.284607410430908
    9. 'if' → logprob: -6.534607410430908
    10. 'top' → logprob: -6.659607410430908

Token 349: ' Remove' (ID: 18141)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9987879991531372
    2. 'queue' → logprob: -0.9987879991531372
    3. 'for' → logprob: -1.4987879991531372
    4. 'import' → logprob: -3.8737878799438477
    5. 'order' → logprob: -4.998787879943848
    6. 'q' → logprob: -5.748787879943848
    7. '#' → logprob: -5.998787879943848
    8. 'if' → logprob: -7.123787879943848
    9. ' queue' → logprob: -7.373787879943848
    10. 'top' → logprob: -7.373787879943848

Token 350: ' Tama' (ID: 108269)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.043061766773462296
    2. ' tama' → logprob: -3.1680617332458496
    3. ' edges' → logprob: -11.418062210083008
    4. ' taman' → logprob: -11.543062210083008
    5. 'from' → logprob: -11.918062210083008
    6. ' from' → logprob: -12.668062210083008
    7. '	t' → logprob: -12.668062210083008
    8. ' for' → logprob: -12.918062210083008
    9. 'tam' → logprob: -13.168062210083008
    10. '   ' → logprob: -13.168062210083008

Token 351: ' from' (ID: 591)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.8378362655639648
    2. 'from' → logprob: -1.5878362655639648
    3. 'graph' → logprob: -1.5878362655639648
    4. ' from' → logprob: -2.587836265563965
    5. ' del' → logprob: -2.962836265563965
    6. ' =' → logprob: -4.962836265563965
    7. 'for' → logprob: -5.212836265563965
    8. 't' → logprob: -5.212836265563965
    9. ' graph' → logprob: -5.837836265563965
    10. 'if' → logprob: -6.087836265563965

Token 352: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.28172847628593445
    2. ' graph' → logprob: -1.4067285060882568
    3. ' in' → logprob: -8.281728744506836
    4. '	graph' → logprob: -8.781728744506836
    5. 'in' → logprob: -8.906728744506836
    6. ' the' → logprob: -11.656728744506836
    7. 't' → logprob: -11.906728744506836
    8. 'the' → logprob: -12.281728744506836
    9. '(graph' → logprob: -12.906728744506836
    10. 'graphs' → logprob: -13.406728744506836

Token 353: ' nodes' (ID: 15749)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.36252647638320923
    2. 'del' → logprob: -1.2375264167785645
    3. ' del' → logprob: -4.7375264167785645
    4. ' graph' → logprob: -5.7375264167785645
    5. 'if' → logprob: -6.8625264167785645
    6. '
' → logprob: -7.9875264167785645
    7. 't' → logprob: -8.987526893615723
    8. ' if' → logprob: -9.112526893615723
    9. 'in' → logprob: -9.362526893615723
    10. 'for' → logprob: -9.362526893615723

Token 354: ' to' (ID: 316)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.184188574552536
    2. 'del' → logprob: -1.8091886043548584
    3. 'if' → logprob: -5.809188365936279
    4. ' del' → logprob: -7.059188365936279
    5. ' graph' → logprob: -8.434188842773438
    6. 't' → logprob: -8.434188842773438
    7. 'for' → logprob: -10.059188842773438
    8. ' if' → logprob: -10.309188842773438
    9. '   ' → logprob: -10.559188842773438
    10. '#' → logprob: -11.559188842773438

Token 355: ' sort' (ID: 4506)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.7682706117630005
    2. ' prevent' → logprob: -1.3932706117630005
    3. ' graph' → logprob: -2.393270492553711
    4. ' avoid' → logprob: -2.643270492553711
    5. 'graph' → logprob: -3.143270492553711
    6. 'process' → logprob: -3.518270492553711
    7. ' in' → logprob: -4.268270492553711
    8. ' top' → logprob: -4.768270492553711
    9. 'prevent' → logprob: -5.268270492553711
    10. 'top' → logprob: -5.393270492553711

Token 356: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2512257993221283
    2. 'del' → logprob: -1.8762258291244507
    3. 'for' → logprob: -3.751225709915161
    4. 'nodes' → logprob: -3.876225709915161
    5. ' del' → logprob: -5.12622594833374
    6. ' graph' → logprob: -5.50122594833374
    7. 't' → logprob: -5.50122594833374
    8. 'if' → logprob: -5.75122594833374
    9. ' for' → logprob: -6.62622594833374
    10. 'sorted' → logprob: -7.25122594833374

Token 357: 'nodes' (ID: 44664)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1265699863433838
    2. 'del' → logprob: -2.501569986343384
    3. 'for' → logprob: -4.376569747924805
    4. ' graph' → logprob: -5.126569747924805
    5. 'nodes' → logprob: -5.376569747924805
    6. ' del' → logprob: -5.751569747924805
    7. 'top' → logprob: -5.876569747924805
    8. 't' → logprob: -6.251569747924805
    9. 'if' → logprob: -6.376569747924805
    10. 'order' → logprob: -7.126569747924805

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859180003404617
    2. '=' → logprob: -3.0485918521881104
    3. ' =[' → logprob: -13.173591613769531
    4. ' ' → logprob: -14.173591613769531
    5. '=[' → logprob: -14.798591613769531
    6. '=list' → logprob: -14.798591613769531
    7. '=set' → logprob: -14.923591613769531
    8. '＝' → logprob: -15.298591613769531
    9. ' =
' → logprob: -16.42359161376953
    10. 's' → logprob: -16.79859161376953

Token 359: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20645281672477722
    2. ' [' → logprob: -1.7064528465270996
    3. '[' → logprob: -5.3314528465271
    4. '[t' → logprob: -9.831452369689941
    5. 'set' → logprob: -9.956452369689941
    6. '[node' → logprob: -11.081452369689941
    7. '[x' → logprob: -11.456452369689941
    8. '[s' → logprob: -11.581452369689941
    9. '{i' → logprob: -11.956452369689941
    10. ' set' → logprob: -12.081452369689941

Token 360: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008623793721199036
    2. 'node' → logprob: -4.7586236000061035
    3. 'x' → logprob: -12.383624076843262
    4. 'v' → logprob: -13.383624076843262
    5. ' i' → logprob: -13.383624076843262
    6. 'u' → logprob: -13.508624076843262
    7. ' node' → logprob: -15.508624076843262
    8. 'n' → logprob: -15.633624076843262
    9. 'k' → logprob: -16.383623123168945
    10. '   ' → logprob: -17.258623123168945

Token 361: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014166101813316345
    2. 'for' → logprob: -4.264165878295898
    3. ' ' → logprob: -12.889165878295898
    4. ' f' → logprob: -17.5141658782959
    5. ' if' → logprob: -17.7641658782959
    6. '	for' → logprob: -17.8891658782959
    7. ' i' → logprob: -17.8891658782959
    8. ')' → logprob: -18.2641658782959
    9. '```' → logprob: -18.8891658782959
    10. ' in' → logprob: -19.7641658782959

Token 362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.025195837020874
    2. ' range' → logprob: -1.275195837020874
    3. ' in' → logprob: -1.525195837020874
    4. 'range' → logprob: -2.525195837020874
    5. ' i' → logprob: -2.775195837020874
    6. 'in' → logprob: -6.275196075439453
    7. ' ' → logprob: -10.400196075439453
    8. ',' → logprob: -11.775196075439453
    9. '(range' → logprob: -12.275196075439453
    10. ',i' → logprob: -12.525196075439453

Token 363: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027251992374658585
    2. 'in' → logprob: -3.652251958847046
    3. 'range' → logprob: -7.027252197265625
    4. ' range' → logprob: -9.902252197265625
    5. ' ' → logprob: -11.527252197265625
    6. ',' → logprob: -13.777252197265625
    7. 'i' → logprob: -14.027252197265625
    8. 'if' → logprob: -14.402252197265625
    9. 'not' → logprob: -14.902252197265625
    10. '(range' → logprob: -15.652252197265625

Token 364: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028423182666301727
    2. ' range' → logprob: -5.877842426300049
    3. 'graph' → logprob: -10.25284194946289
    4. ' ' → logprob: -14.00284194946289
    5. 't' → logprob: -15.00284194946289
    6. '(range' → logprob: -15.00284194946289
    7. 'in' → logprob: -15.50284194946289
    8. '   ' → logprob: -15.62784194946289
    9. ' graph' → logprob: -16.25284194946289
    10. 'rang' → logprob: -16.62784194946289

Token 365: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10024344176054001
    2. '1' → logprob: -2.350243330001831
    3. ',' → logprob: -10.35024356842041
    4. ' ' → logprob: -12.97524356842041
    5. '   ' → logprob: -13.72524356842041
    6. ' (' → logprob: -14.60024356842041
    7. '
' → logprob: -15.47524356842041
    8. 'm' → logprob: -15.47524356842041
    9. '```' → logprob: -15.85024356842041
    10. 't' → logprob: -16.100242614746094

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '(' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.0
    5. ',' → logprob: -18.375
    6. 'm' → logprob: -18.75
    7. '
' → logprob: -20.0
    8. '```' → logprob: -20.375
    9. '           ' → logprob: -21.75
    10. '１' → logprob: -21.75

Token 367: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004022003151476383
    2. ',' → logprob: -6.004022121429443
    3. '(' → logprob: -6.754022121429443
    4. ' ' → logprob: -8.754021644592285
    5. 'm' → logprob: -9.254021644592285
    6. '   ' → logprob: -9.754021644592285
    7. ',m' → logprob: -10.504021644592285
    8. '+' → logprob: -11.379021644592285
    9. ' ,' → logprob: -11.629021644592285
    10. '=' → logprob: -12.254021644592285

Token 368: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.054500666621607e-06
    2. ' m' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.375003814697266
    4. '```' → logprob: -18.500003814697266
    5. ')m' → logprob: -18.500003814697266
    6. '1' → logprob: -18.625003814697266
    7. '	m' → logprob: -18.875003814697266
    8. '(m' → logprob: -19.000003814697266
    9. ',' → logprob: -19.250003814697266
    10. '+m' → logprob: -19.375003814697266

Token 369: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018399098189547658
    2. '+m' → logprob: -8.875184059143066
    3. 'm' → logprob: -10.750184059143066
    4. 'if' → logprob: -11.500184059143066
    5. ' if' → logprob: -12.375184059143066
    6. ' +' → logprob: -13.125184059143066
    7. '```' → logprob: -13.375184059143066
    8. ')+' → logprob: -14.000184059143066
    9. ')' → logprob: -14.000184059143066
    10. '
' → logprob: -14.125184059143066

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5798286199569702
    2. '+' → logprob: -0.8298286199569702
    3. 'm' → logprob: -5.57982873916626
    4. ' +' → logprob: -10.079828262329102
    5. '+m' → logprob: -11.079828262329102
    6. '```' → logprob: -11.204828262329102
    7. ')' → logprob: -12.204828262329102
    8. 'n' → logprob: -12.454828262329102
    9. ']+' → logprob: -12.829828262329102
    10. ' m' → logprob: -12.829828262329102

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1363087296485901
    2. 'if' → logprob: -2.6363086700439453
    3. ' if' → logprob: -2.8863086700439453
    4. ' )' → logprob: -11.761308670043945
    5. ']' → logprob: -12.011308670043945
    6. ' ' → logprob: -12.511308670043945
    7. '   ' → logprob: -14.136308670043945
    8. '()' → logprob: -14.136308670043945
    9. ')]' → logprob: -15.511308670043945
    10. '}' → logprob: -15.636308670043945

Token 372: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16022412478923798
    2. 'if' → logprob: -1.9102240800857544
    3. ' ' → logprob: -18.41022491455078
    4. '   ' → logprob: -20.03522491455078
    5. ',' → logprob: -20.41022491455078
    6. '	if' → logprob: -20.53522491455078
    7. 'If' → logprob: -21.41022491455078
    8. '```' → logprob: -21.41022491455078
    9. ']' → logprob: -21.53522491455078
    10. 'i' → logprob: -22.03522491455078

Token 373: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01815064437687397
    2. ' i' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.768150329589844
    4. ' ' → logprob: -15.768150329589844
    5. '```' → logprob: -15.768150329589844
    6. '  ' → logprob: -17.018150329589844
    7. '	i' → logprob: -17.143150329589844
    8. '
' → logprob: -17.393150329589844
    9. ' ' → logprob: -18.018150329589844
    10. ')' → logprob: -18.518150329589844

Token 374: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029764262959361076
    2. ' !=' → logprob: -3.529764175415039
    3. ']!=' → logprob: -11.529764175415039
    4. '()!=' → logprob: -13.529764175415039
    5. ')!=' → logprob: -14.154764175415039
    6. '!=(' → logprob: -14.404764175415039
    7. '```' → logprob: -15.654764175415039
    8. '!='' → logprob: -15.654764175415039
    9. 'not' → logprob: -15.904764175415039
    10. '!=-' → logprob: -15.904764175415039

Token 375: ' tama' (ID: 28620)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0021965294145047665
    2. ' tama' → logprob: -6.127196311950684
    3. '	t' → logprob: -12.377196311950684
    4. ' ' → logprob: -13.252196311950684
    5. ' Tama' → logprob: -13.627196311950684
    6. ' t' → logprob: -13.752196311950684
    7. '   ' → logprob: -13.752196311950684
    8. ' taman' → logprob: -14.377196311950684
    9. 'tam' → logprob: -15.502196311950684
    10. '  ' → logprob: -15.502196311950684

Token 376: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.184812031686306e-05
    2. ' ]' → logprob: -10.125082015991211
    3. ']
' → logprob: -10.625082015991211
    4. ']

' → logprob: -11.000082015991211
    5. ')' → logprob: -15.375082015991211
    6. ')]' → logprob: -16.00008201599121
    7. ']
' → logprob: -16.12508201599121
    8. '])' → logprob: -17.37508201599121
    9. '   ' → logprob: -17.50008201599121
    10. ']

' → logprob: -17.62508201599121

Token 377: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20589089393615723
    2. 'queue' → logprob: -1.7058908939361572
    3. 'order' → logprob: -5.705890655517578
    4. 'import' → logprob: -7.205890655517578
    5. 'q' → logprob: -8.705890655517578
    6. 'deque' → logprob: -9.830890655517578
    7. 'stack' → logprob: -9.955890655517578
    8. ' from' → logprob: -10.205890655517578
    9. 'visited' → logprob: -10.455890655517578
    10. 'que' → logprob: -10.830890655517578

Token 378: ' Build' (ID: 10885)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.09733511507511139
    2. 'queue' → logprob: -2.59733510017395
    3. 'import' → logprob: -4.347335338592529
    4. 'order' → logprob: -5.347335338592529
    5. '#' → logprob: -8.222334861755371
    6. 'q' → logprob: -9.222334861755371
    7. 'stack' → logprob: -9.722334861755371
    8. 'zero' → logprob: -9.972334861755371
    9. 'sorted' → logprob: -10.722334861755371
    10. 'visited' → logprob: -10.972334861755371

Token 379: ' new' (ID: 620)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.4013121128082275
    2. 'queue' → logprob: -1.5263121128082275
    3. ' queue' → logprob: -2.2763121128082275
    4. 'new' → logprob: -2.5263121128082275
    5. ' new' → logprob: -2.6513121128082275
    6. ' graph' → logprob: -2.6513121128082275
    7. 'in' → logprob: -2.9013121128082275
    8. 'adj' → logprob: -3.5263121128082275
    9. ' in' → logprob: -3.9013121128082275
    10. 'a' → logprob: -4.026311874389648

Token 380: ' in' (ID: 306)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9120530486106873
    2. 'in' → logprob: -1.537053108215332
    3. '_in' → logprob: -1.537053108215332
    4. '_graph' → logprob: -1.787053108215332
    5. ' graph' → logprob: -7.537053108215332
    6. ' in' → logprob: -9.037053108215332
    7. '_g' → logprob: -9.912053108215332
    8. 'Graph' → logprob: -11.037053108215332
    9. '_queue' → logprob: -11.162053108215332
    10. '	graph' → logprob: -11.162053108215332

Token 381: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.005361348390579224
    2. '_degree' → logprob: -5.255361557006836
    3. '_nodes' → logprob: -9.755361557006836
    4. '_deg' → logprob: -10.880361557006836
    5. '_' → logprob: -11.130361557006836
    6. 'de' → logprob: -11.380361557006836
    7. '_edges' → logprob: -11.630361557006836
    8. 'degrees' → logprob: -11.880361557006836
    9. 'degree' → logprob: -12.630361557006836
    10. '_in' → logprob: -13.130361557006836

Token 382: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -1.1637164789135568e-05
    2. 'gree' → logprob: -11.500011444091797
    3. 'g' → logprob: -14.125011444091797
    4. 'gress' → logprob: -14.250011444091797
    5. 'degrees' → logprob: -16.500011444091797
    6. 'gre' → logprob: -17.250011444091797
    7. 'gr' → logprob: -18.375011444091797
    8. 'gres' → logprob: -18.500011444091797
    9. 'rees' → logprob: -18.875011444091797
    10. '```' → logprob: -19.250011444091797

Token 383: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018708305433392525
    2. '=' → logprob: -4.643708229064941
    3. 'new' → logprob: -6.143708229064941
    4. 'tmp' → logprob: -6.268708229064941
    5. 'temp' → logprob: -6.268708229064941
    6. 't' → logprob: -6.518708229064941
    7. '_tmp' → logprob: -8.143708229064941
    8. '_new' → logprob: -8.393708229064941
    9. 'in' → logprob: -8.518708229064941
    10. 'for' → logprob: -9.018708229064941

Token 384: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1092037633061409
    2. ' graph' → logprob: -2.359203815460205
    3. 'new' → logprob: -5.734203815460205
    4. ' new' → logprob: -6.359203815460205
    5. 'out' → logprob: -6.984203815460205
    6. 'from' → logprob: -7.359203815460205
    7. 'queue' → logprob: -7.484203815460205
    8. '	graph' → logprob: -7.984203815460205
    9. ' queue' → logprob: -8.359203338623047
    10. '{' → logprob: -8.359203338623047

Token 385: ' without' (ID: 2935)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2776351869106293
    2. 'new' → logprob: -1.5276352167129517
    3. 'temp' → logprob: -4.777635097503662
    4. 'tmp' → logprob: -5.152635097503662
    5. 'top' → logprob: -5.402635097503662
    6. ' graph' → logprob: -6.402635097503662
    7. ' =' → logprob: -6.652635097503662
    8. ' new' → logprob: -7.152635097503662
    9. 't' → logprob: -7.402635097503662
    10. 'sub' → logprob: -7.527635097503662

Token 386: ' Tama' (ID: 108269)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16085754334926605
    2. ' tama' → logprob: -1.9108575582504272
    3. ' Tama' → logprob: -8.035857200622559
    4. ' taman' → logprob: -10.410857200622559
    5. '   ' → logprob: -10.660857200622559
    6. '#' → logprob: -10.660857200622559
    7. ' t' → logprob: -10.910857200622559
    8. '
' → logprob: -10.910857200622559
    9. 'tam' → logprob: -11.035857200622559
    10. ' talla' → logprob: -11.035857200622559

Token 387: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.14337103068828583
    2. 'new' → logprob: -2.143371105194092
    3. ' graph' → logprob: -4.768371105194092
    4. '
' → logprob: -5.893371105194092
    5. 'filtered' → logprob: -6.143371105194092
    6. ' new' → logprob: -6.393371105194092
    7. 'temp' → logprob: -7.643371105194092
    8. 'in' → logprob: -8.768370628356934
    9. 'tmp' → logprob: -9.518370628356934
    10. ' 
' → logprob: -9.768370628356934

Token 388: 'new' (ID: 1389)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03306252136826515
    2. 'new' → logprob: -3.53306245803833
    3. 'temp' → logprob: -6.65806245803833
    4. 'top' → logprob: -6.78306245803833
    5. 'filtered' → logprob: -8.033062934875488
    6. 'in' → logprob: -8.783062934875488
    7. ' graph' → logprob: -9.158062934875488
    8. 'tmp' → logprob: -9.158062934875488
    9. 't' → logprob: -9.408062934875488
    10. 'from' → logprob: -10.158062934875488

Token 389: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00684466864913702
    2. '_in' → logprob: -5.006844520568848
    3. '_' → logprob: -9.381844520568848
    4. 'graph' → logprob: -10.131844520568848
    5. 'in' → logprob: -12.756844520568848
    6. '_g' → logprob: -13.631844520568848
    7. '_nodes' → logprob: -15.006844520568848
    8. '_gr' → logprob: -15.131844520568848
    9. '_edges' → logprob: -16.131845474243164
    10. '_de' → logprob: -16.631845474243164

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868790566921234
    2. '=' → logprob: -1.1368790864944458
    3. '{' → logprob: -12.386878967285156
    4. '={' → logprob: -12.886878967285156
    5. ' ={' → logprob: -14.511878967285156
    6. ',' → logprob: -14.636878967285156
    7. '={}' → logprob: -16.011878967285156
    8. ' ' → logprob: -16.261878967285156
    9. '```' → logprob: -17.261878967285156
    10. 'import' → logprob: -17.261878967285156

Token 391: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00018232580623589456
    2. ' {' → logprob: -9.000182151794434
    3. '{i' → logprob: -9.750182151794434
    4. '{k' → logprob: -15.125182151794434
    5. '{x' → logprob: -15.875182151794434
    6. '{id' → logprob: -16.25018310546875
    7. '{}' → logprob: -17.12518310546875
    8. '{name' → logprob: -17.12518310546875
    9. '{}
' → logprob: -17.62518310546875
    10. '{sub' → logprob: -18.87518310546875

Token 392: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001963485963642597
    2. 'node' → logprob: -6.2519636154174805
    3. 'k' → logprob: -10.50196361541748
    4. ' i' → logprob: -12.25196361541748
    5. '   ' → logprob: -13.50196361541748
    6. 'key' → logprob: -13.75196361541748
    7. ' node' → logprob: -15.37696361541748
    8. 'u' → logprob: -18.126962661743164
    9. '	i' → logprob: -18.251962661743164
    10. '{i' → logprob: -18.501962661743164

Token 393: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.4121114822482923e-06
    2. ' :' → logprob: -12.750003814697266
    3. ':[' → logprob: -14.625003814697266
    4. '[]' → logprob: -18.125003814697266
    5. ':i' → logprob: -18.250003814697266
    6. 'for' → logprob: -18.625003814697266
    7. ':list' → logprob: -18.625003814697266
    8. '=[]' → logprob: -18.750003814697266
    9. ':set' → logprob: -20.375003814697266
    10. '=' → logprob: -20.500003814697266

Token 394: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0012692819582298398
    2. '[i' → logprob: -7.251269340515137
    3. ' []' → logprob: -8.126269340515137
    4. '[' → logprob: -8.376269340515137
    5. '[j' → logprob: -11.501269340515137
    6. '[]}' → logprob: -12.001269340515137
    7. '[]
' → logprob: -12.376269340515137
    8. '[node' → logprob: -12.376269340515137
    9. '[v' → logprob: -12.751269340515137
    10. '[x' → logprob: -13.626269340515137

Token 395: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20141363143920898
    2. ' for' → logprob: -1.701413631439209
    3. '   ' → logprob: -15.826414108276367
    4. ' ' → logprob: -16.326414108276367
    5. '	for' → logprob: -16.701414108276367
    6. ':' → logprob: -18.201414108276367
    7. 'i' → logprob: -18.826414108276367
    8. '    ' → logprob: -18.951414108276367
    9. '  ' → logprob: -19.326414108276367
    10. '       ' → logprob: -19.451414108276367

Token 396: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010410251561552286
    2. ' i' → logprob: -6.876040935516357
    3. ' in' → logprob: -11.876041412353516
    4. 'in' → logprob: -13.626041412353516
    5. ' ' → logprob: -17.251041412353516
    6. '	i' → logprob: -17.376041412353516
    7. ',' → logprob: -17.626041412353516
    8. ' ' → logprob: -17.751041412353516
    9. '   ' → logprob: -18.563541412353516
    10. 'e' → logprob: -19.251041412353516

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02690310776233673
    2. 'in' → logprob: -3.6519031524658203
    3. 'i' → logprob: -7.52690315246582
    4. ' i' → logprob: -9.77690315246582
    5. 'n' → logprob: -12.77690315246582
    6. ' ' → logprob: -13.15190315246582
    7. 'for' → logprob: -13.90190315246582
    8. 'e' → logprob: -15.52690315246582
    9. 'import' → logprob: -15.52690315246582
    10. '=' → logprob: -15.90190315246582

Token 398: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.004122687969356775
    2. ' nodes' → logprob: -5.504122734069824
    3. 'i' → logprob: -11.254122734069824
    4. 'range' → logprob: -11.379122734069824
    5. 'node' → logprob: -11.879122734069824
    6. '	nodes' → logprob: -11.879122734069824
    7. '(nodes' → logprob: -13.254122734069824
    8. '   ' → logprob: -13.379122734069824
    9. ' ' → logprob: -14.754122734069824
    10. 'nod' → logprob: -15.004122734069824

Token 399: '}
' (ID: 739)
  Prédit: '}
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}
' → logprob: -0.04099862277507782
    2. '}' → logprob: -3.790998697280884
    3. 'for' → logprob: -4.040998458862305
    4. ' for' → logprob: -11.415998458862305
    5. '}
' → logprob: -12.665998458862305
    6. '}

' → logprob: -13.540998458862305
    7. '
' → logprob: -14.290998458862305
    8. '   ' → logprob: -16.040998458862305
    9. ')
' → logprob: -16.540998458862305
    10. ' }
' → logprob: -16.665998458862305

Token 400: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0010472200810909271
    2. 'for' → logprob: -6.876047134399414
    3. ' new' → logprob: -11.251047134399414
    4. '    
' → logprob: -14.876047134399414
    5. ' for' → logprob: -16.001047134399414
    6. '	new' → logprob: -16.251047134399414
    7. '#' → logprob: -16.376047134399414
    8. '
' → logprob: -16.501047134399414
    9. '  
' → logprob: -16.501047134399414
    10. '_new' → logprob: -16.626047134399414

Token 401: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.000647029432002455
    2. 'in' → logprob: -8.125646591186523
    3. '_graph' → logprob: -8.250646591186523
    4. '_ind' → logprob: -10.000646591186523
    5. '_de' → logprob: -11.250646591186523
    6. '_' → logprob: -11.875646591186523
    7. '_edges' → logprob: -12.500646591186523
    8. 'for' → logprob: -12.625646591186523
    9. '_nodes' → logprob: -13.250646591186523
    10. '_for' → logprob: -13.250646591186523

Token 402: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0003943304473068565
    2. 'degrees' → logprob: -8.375393867492676
    3. 'de' → logprob: -8.750393867492676
    4. '_degree' → logprob: -13.250393867492676
    5. 'grees' → logprob: -13.875393867492676
    6. '-de' → logprob: -14.750393867492676
    7. '	de' → logprob: -14.875393867492676
    8. '_' → logprob: -15.125393867492676
    9. '_nodes' → logprob: -15.375393867492676
    10. '_deg' → logprob: -15.625393867492676

Token 403: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -8.180258191714529e-06
    2. 'g' → logprob: -12.375008583068848
    3. 'eg' → logprob: -13.125008583068848
    4. 'gree' → logprob: -13.875008583068848
    5. 'gress' → logprob: -15.375008583068848
    6. 'gr' → logprob: -15.375008583068848
    7. 'degrees' → logprob: -15.375008583068848
    8. 'gre' → logprob: -16.12500762939453
    9. 'rees' → logprob: -16.75000762939453
    10. 'gs' → logprob: -17.37500762939453

Token 404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326422095298767
    2. ' =' → logprob: -1.31326425075531
    3. '={' → logprob: -14.188263893127441
    4. '{' → logprob: -14.188263893127441
    5. ' ={' → logprob: -14.438263893127441
    6. '[' → logprob: -15.313263893127441
    7. ' ' → logprob: -15.938263893127441
    8. ',' → logprob: -16.938264846801758
    9. '[i' → logprob: -16.938264846801758
    10. 'for' → logprob: -17.313264846801758

Token 405: ' {' (ID: 354)
  Prédit: '{i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{i' → logprob: -0.2544110119342804
    2. '{' → logprob: -1.504410982131958
    3. ' {' → logprob: -6.004411220550537
    4. '{k' → logprob: -11.879410743713379
    5. '{id' → logprob: -13.129410743713379
    6. '{x' → logprob: -13.254410743713379
    7. '{s' → logprob: -15.754410743713379
    8. '{o' → logprob: -16.379411697387695
    9. '{name' → logprob: -16.754411697387695
    10. '{sub' → logprob: -18.004411697387695

Token 406: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.014684110297821e-06
    2. ' i' → logprob: -11.875008583068848
    3. '   ' → logprob: -13.375008583068848
    4. 'k' → logprob: -15.875008583068848
    5. '{i' → logprob: -16.625009536743164
    6. 'node' → logprob: -17.000009536743164
    7. '(i' → logprob: -17.500009536743164
    8. '	i' → logprob: -17.875009536743164
    9. ' ' → logprob: -18.000009536743164
    10. 'key' → logprob: -18.375009536743164

Token 407: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019562290981411934
    2. ':i' → logprob: -6.251956462860107
    3. ' :' → logprob: -10.62695598602295
    4. '0' → logprob: -13.25195598602295
    5. '[i' → logprob: -14.12695598602295
    6. 'i' → logprob: -15.00195598602295
    7. 'for' → logprob: -16.001956939697266
    8. '   ' → logprob: -16.376956939697266
    9. '=' → logprob: -16.626956939697266
    10. ' ' → logprob: -16.751956939697266

Token 408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01851043477654457
    2. 'i' → logprob: -4.143510341644287
    3. ' ' → logprob: -6.268510341644287
    4. 'in' → logprob: -8.268510818481445
    5. ' i' → logprob: -8.268510818481445
    6. ' in' → logprob: -10.893510818481445
    7. 'node' → logprob: -11.518510818481445
    8. '[i' → logprob: -12.143510818481445
    9. 'new' → logprob: -12.393510818481445
    10. '   ' → logprob: -12.393510818481445

Token 409: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.575947105884552
    2. 'for' → logprob: -0.825947105884552
    3. '	for' → logprob: -12.450946807861328
    4. '   ' → logprob: -12.950946807861328
    5. ' ' → logprob: -13.700946807861328
    6. '  ' → logprob: -16.700946807861328
    7. '    ' → logprob: -16.700946807861328
    8. '```' → logprob: -17.200946807861328
    9. 'i' → logprob: -17.450946807861328
    10. ':' → logprob: -18.200946807861328

Token 410: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003178782993927598
    2. ' i' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.878178596496582
    4. ' in' → logprob: -15.003178596496582
    5. 'node' → logprob: -16.1281795501709
    6. '
' → logprob: -16.7531795501709
    7. ' ' → logprob: -17.0031795501709
    8. '   ' → logprob: -17.1281795501709
    9. 'in' → logprob: -17.2531795501709
    10. '```' → logprob: -17.3781795501709

Token 411: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5843508839607239
    2. ' in' → logprob: -0.8343508839607239
    3. 'i' → logprob: -4.834351062774658
    4. ' i' → logprob: -7.834351062774658
    5. 'n' → logprob: -11.3343505859375
    6. ' ' → logprob: -11.7093505859375
    7. '[i' → logprob: -12.9593505859375
    8. 'nodes' → logprob: -13.7093505859375
    9. 'for' → logprob: -13.9593505859375
    10. '  ' → logprob: -14.4593505859375

Token 412: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.0015112892724573612
    2. ' nodes' → logprob: -6.501511096954346
    3. '	nodes' → logprob: -12.876511573791504
    4. 'node' → logprob: -13.001511573791504
    5. 'new' → logprob: -13.376511573791504
    6. '(nodes' → logprob: -13.876511573791504
    7. '   ' → logprob: -14.876511573791504
    8. 'range' → logprob: -14.876511573791504
    9. 'n' → logprob: -15.126511573791504
    10. ' ' → logprob: -15.376511573791504

Token 413: '}
' (ID: 739)
  Prédit: '}
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}
' → logprob: -0.6496411561965942
    2. '}

' → logprob: -0.8996411561965942
    3. '}' → logprob: -2.6496410369873047
    4. 'for' → logprob: -7.899641036987305
    5. '}
' → logprob: -13.274641036987305
    6. ' for' → logprob: -13.899641036987305
    7. '}

' → logprob: -14.524641036987305
    8. '}


' → logprob: -15.399641036987305
    9. ' }
' → logprob: -16.274641036987305
    10. '
' → logprob: -16.399641036987305

Token 414: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8624639324116288e-06
    2. ' for' → logprob: -13.250001907348633
    3. '
' → logprob: -18.750001907348633
    4. '```' → logprob: -18.875001907348633
    5. '<|end|>' → logprob: -20.250001907348633
    6. '#' → logprob: -20.750001907348633
    7. '	for' → logprob: -20.875001907348633
    8. 'For' → logprob: -21.375001907348633
    9. '    
' → logprob: -22.125001907348633
    10. 'from' → logprob: -22.250001907348633

Token 415: ' u' (ID: 337)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010422050021588802
    2. 'i' → logprob: -4.635422229766846
    3. ' x' → logprob: -7.885422229766846
    4. 'u' → logprob: -8.760421752929688
    5. '   ' → logprob: -9.135421752929688
    6. ' i' → logprob: -11.635421752929688
    7. 'node' → logprob: -12.385421752929688
    8. '(x' → logprob: -12.510421752929688
    9. 'a' → logprob: -12.885421752929688
    10. 'k' → logprob: -13.760421752929688

Token 416: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07827245444059372
    2. ' in' → logprob: -2.7032723426818848
    3. 'in' → logprob: -5.453272342681885
    4. ',v' → logprob: -6.578272342681885
    5. ',x' → logprob: -7.203272342681885
    6. ',t' → logprob: -7.828272342681885
    7. ' ,' → logprob: -7.953272342681885
    8. ',n' → logprob: -8.328272819519043
    9. ',u' → logprob: -8.578272819519043
    10. ',y' → logprob: -8.953272819519043

Token 417: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.012818168848752975
    2. 'graph' → logprob: -4.637818336486816
    3. ' nodes' → logprob: -6.012818336486816
    4. 'new' → logprob: -7.637818336486816
    5. 'test' → logprob: -10.512818336486816
    6. 'range' → logprob: -10.637818336486816
    7. ' graph' → logprob: -10.637818336486816
    8. 'node' → logprob: -10.887818336486816
    9. 'edges' → logprob: -12.137818336486816
    10. '	nodes' → logprob: -12.137818336486816

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2843571603298187
    2. ':
' → logprob: -1.7843571901321411
    3. '   ' → logprob: -2.5343570709228516
    4. ',' → logprob: -9.034357070922852
    5. ' for' → logprob: -9.409357070922852
    6. 'for' → logprob: -9.659357070922852
    7. ':
' → logprob: -11.909357070922852
    8. '       ' → logprob: -12.284357070922852
    9. ':

' → logprob: -13.284357070922852
    10. '):
' → logprob: -13.534357070922852

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025342830922454596
    2. 'for' → logprob: -6.00253438949585
    3. ' for' → logprob: -9.752533912658691
    4. '       ' → logprob: -14.752533912658691
    5. '	for' → logprob: -16.002534866333008
    6. '   ' → logprob: -17.252534866333008
    7. ' ' → logprob: -17.627534866333008
    8. '  ' → logprob: -18.502534866333008
    9. '    
' → logprob: -18.877534866333008
    10. '    ' → logprob: -20.127534866333008

Token 420: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09592531621456146
    2. '   ' → logprob: -2.4709253311157227
    3. ' for' → logprob: -4.970925331115723
    4. ' ' → logprob: -11.470925331115723
    5. '	for' → logprob: -11.470925331115723
    6. '  ' → logprob: -13.720925331115723
    7. '    
' → logprob: -13.720925331115723
    8. '       ' → logprob: -14.720925331115723
    9. 'new' → logprob: -14.720925331115723
    10. '
' → logprob: -15.345925331115723

Token 421: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002470350591465831
    2. 'w' → logprob: -9.00024700164795
    3. ' v' → logprob: -9.00024700164795
    4. ' w' → logprob: -16.000247955322266
    5. '	v' → logprob: -17.125247955322266
    6. '   ' → logprob: -17.375247955322266
    7. 'vv' → logprob: -17.500247955322266
    8. ' ' → logprob: -19.875247955322266
    9. '  ' → logprob: -19.875247955322266
    10. 'wv' → logprob: -22.375247955322266

Token 422: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300946369767189
    2. 'in' → logprob: -3.1680095195770264
    3. ' ' → logprob: -12.293009757995605
    4. '	in' → logprob: -12.793009757995605
    5. '   ' → logprob: -13.418009757995605
    6. '  ' → logprob: -14.668009757995605
    7. 'v' → logprob: -15.168009757995605
    8. 'graph' → logprob: -16.54300880432129
    9. 's' → logprob: -16.91800880432129
    10. 'In' → logprob: -17.04300880432129

Token 423: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0031796174589544535
    2. ' graph' → logprob: -5.753179550170898
    3. '	graph' → logprob: -13.378179550170898
    4. '(graph' → logprob: -15.878179550170898
    5. '   ' → logprob: -16.7531795501709
    6. ' ' → logprob: -17.0031795501709
    7. 'raph' → logprob: -17.5031795501709
    8. 'graphs' → logprob: -17.7531795501709
    9. 'Graph' → logprob: -18.1281795501709
    10. '  ' → logprob: -19.0031795501709

Token 424: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.1008713702030946e-06
    2. 'u' → logprob: -13.125001907348633
    3. '[' → logprob: -18.250001907348633
    4. '[v' → logprob: -19.750001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '<u' → logprob: -20.625001907348633
    7. ' u' → logprob: -20.750001907348633
    8. ' [' → logprob: -20.875001907348633
    9. '	u' → logprob: -21.250001907348633
    10. '```' → logprob: -21.750001907348633

Token 425: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5479854345321655
    2. ']:' → logprob: -1.0479854345321655
    3. ']:
' → logprob: -2.797985553741455
    4. ':
' → logprob: -4.922985553741455
    5. '   ' → logprob: -7.047985553741455
    6. '       ' → logprob: -7.297985553741455
    7. 'if' → logprob: -7.672985553741455
    8. ' if' → logprob: -8.047985076904297
    9. '}:' → logprob: -8.047985076904297
    10. ']' → logprob: -8.922985076904297

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024059813003987074
    2. ' if' → logprob: -6.127406120300293
    3. '	   ' → logprob: -9.502406120300293
    4. '	' → logprob: -9.752406120300293
    5. '   ' → logprob: -11.002406120300293
    6. '    ' → logprob: -11.127406120300293
    7. ',' → logprob: -11.377406120300293
    8. '	if' → logprob: -12.002406120300293
    9. '<|end|>' → logprob: -12.127406120300293
    10. 'if' → logprob: -12.252406120300293

Token 427: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05404677614569664
    2. 'if' (adapté à ' if') → logprob: -3.054046869277954
    3. '           ' → logprob: -5.304046630859375
    4. '       ' → logprob: -7.804046630859375
    5. '	       ' → logprob: -10.804046630859375
    6. '   ' → logprob: -11.054046630859375
    7. '	if' → logprob: -11.179046630859375
    8. ' ' → logprob: -12.179046630859375
    9. '	   ' → logprob: -12.429046630859375
    10. '        ' → logprob: -13.054046630859375

Token 428: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014164102263748646
    2. ' v' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. '	v' → logprob: -15.889163970947266
    5. '       ' → logprob: -16.264163970947266
    6. '           ' → logprob: -16.639163970947266
    7. '    ' → logprob: -18.139163970947266
    8. '(v' → logprob: -18.639163970947266
    9. ' ' → logprob: -19.014163970947266
    10. '  ' → logprob: -19.514163970947266

Token 429: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11737237870693207
    2. ' !=' → logprob: -2.3673722743988037
    3. ' in' → logprob: -4.117372512817383
    4. 'in' → logprob: -7.492372512817383
    5. ']!=' → logprob: -9.617372512817383
    6. ')!=' → logprob: -9.992372512817383
    7. '<|end|>' → logprob: -10.867372512817383
    8. '!==' → logprob: -11.242372512817383
    9. '!='' → logprob: -11.992372512817383
    10. '()!=' → logprob: -12.117372512817383

Token 430: ' tama' (ID: 28620)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00033879990223795176
    2. ' tama' → logprob: -8.000338554382324
    3. '	t' → logprob: -13.375338554382324
    4. '   ' → logprob: -14.125338554382324
    5. ' Tama' → logprob: -15.250338554382324
    6. '
' → logprob: -15.625338554382324
    7. ' ' → logprob: -15.750338554382324
    8. 'tam' → logprob: -15.875338554382324
    9. '`t' → logprob: -16.75033950805664
    10. 'T' → logprob: -16.75033950805664

Token 431: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4153290390968323
    2. ':' → logprob: -1.1653289794921875
    3. '           ' → logprob: -3.9153289794921875
    4. ' and' → logprob: -4.9153289794921875
    5. '):
' → logprob: -8.290328979492188
    6. '       ' → logprob: -9.290328979492188
    7. 'and' → logprob: -9.790328979492188
    8. ' new' → logprob: -9.915328979492188
    9. ':

' → logprob: -9.915328979492188
    10. ' :
' → logprob: -9.915328979492188

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04313632473349571
    2. ' new' → logprob: -3.5431363582611084
    3. 'new' → logprob: -4.543136119842529
    4. ':
' → logprob: -6.668136119842529
    5. ':' → logprob: -6.918136119842529
    6. '       ' → logprob: -9.543136596679688
    7. '	       ' → logprob: -9.668136596679688
    8. '               ' → logprob: -10.168136596679688
    9. '[new' → logprob: -10.293136596679688
    10. ',new' → logprob: -10.418136596679688

Token 433: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.609479546546936
    2. 'new' (adapté à ' new') → logprob: -1.109479546546936
    3. '           ' → logprob: -2.1094794273376465
    4. '               ' → logprob: -5.3594794273376465
    5. '       ' → logprob: -8.109479904174805
    6. '	       ' → logprob: -8.984479904174805
    7. '	new' → logprob: -9.734479904174805
    8. '   ' → logprob: -9.734479904174805
    9. '[new' → logprob: -10.359479904174805
    10. '```' → logprob: -11.859479904174805

Token 434: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.001983948517590761
    2. 'graph' → logprob: -6.251984119415283
    3. '_in' → logprob: -10.376983642578125
    4. 'new' → logprob: -11.126983642578125
    5. 'in' → logprob: -11.751983642578125
    6. '_new' → logprob: -14.501983642578125
    7. 'Graph' → logprob: -15.001983642578125
    8. '
' → logprob: -15.876983642578125
    9. '[new' → logprob: -16.001983642578125
    10. '[u' → logprob: -16.126983642578125

Token 435: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -17.125
    3. 'u' → logprob: -17.5
    4. '[v' → logprob: -18.625
    5. '[i' → logprob: -20.5
    6. '<u' → logprob: -21.125
    7. '(u' → logprob: -22.0
    8. '```' → logprob: -22.0
    9. ' [' → logprob: -22.375
    10. '	u' → logprob: -22.625

Token 436: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009296870557591319
    2. '.append' → logprob: -7.000929832458496
    3. '.' → logprob: -11.875929832458496
    4. '           ' → logprob: -12.500929832458496
    5. ' ].' → logprob: -12.500929832458496
    6. ']' → logprob: -13.375929832458496
    7. ' .' → logprob: -14.625929832458496
    8. '[' → logprob: -14.625929832458496
    9. ').' → logprob: -15.125929832458496
    10. '       ' → logprob: -15.375929832458496

Token 437: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. ' append' → logprob: -17.0
    3. '.append' → logprob: -19.5
    4. 'appen' → logprob: -21.5
    5. '	append' → logprob: -22.0
    6. 'Append' → logprob: -22.625
    7. '_append' → logprob: -23.125
    8. 'app' → logprob: -23.25
    9. ' ' → logprob: -23.875
    10. '```' → logprob: -24.625

Token 438: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00026383911608718336
    2. '(' → logprob: -8.250264167785645
    3. ' (' → logprob: -13.375264167785645
    4. 'v' → logprob: -13.875264167785645
    5. ' v' → logprob: -18.125263214111328
    6. '(
' → logprob: -18.375263214111328
    7. '((' → logprob: -19.875263214111328
    8. '()' → logprob: -20.375263214111328
    9. ')' → logprob: -20.625263214111328
    10. '(value' → logprob: -20.750263214111328

Token 439: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011471256148070097
    2. ')
' → logprob: -7.126147270202637
    3. '<|end|>' → logprob: -8.251147270202637
    4. ' )' → logprob: -9.626147270202637
    5. ')#' → logprob: -12.876147270202637
    6. ')v' → logprob: -12.876147270202637
    7. '<|end|>' → logprob: -13.126147270202637
    8. '       ' → logprob: -13.126147270202637
    9. '           ' → logprob: -13.376147270202637
    10. ')

' → logprob: -14.001147270202637

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010293578961864114
    2. 'new' → logprob: -7.3760294914245605
    3. ' new' → logprob: -8.376029014587402
    4. 'for' → logprob: -9.501029014587402
    5. ' for' → logprob: -10.376029014587402
    6. '            
' → logprob: -10.501029014587402
    7. '
' → logprob: -11.251029014587402
    8. '       ' → logprob: -12.626029014587402
    9. '               ' → logprob: -12.626029014587402
    10. '```' → logprob: -12.751029014587402

Token 441: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.16022484004497528
    2. ' new' → logprob: -1.9102247953414917
    3. '
' → logprob: -15.160224914550781
    4. '   ' → logprob: -15.785224914550781
    5. 'if' → logprob: -16.41022491455078
    6. '           ' → logprob: -16.41022491455078
    7. '1' → logprob: -17.28522491455078
    8. '	new' → logprob: -17.66022491455078
    9. ' if' → logprob: -18.03522491455078
    10. '               ' → logprob: -18.53522491455078

Token 442: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.935296834039036e-06
    2. 'in' → logprob: -12.87500286102295
    3. '_de' → logprob: -15.62500286102295
    4. '_' → logprob: -15.87500286102295
    5. '_ind' → logprob: -16.875003814697266
    6. 'In' → logprob: -18.125003814697266
    7. '_i' → logprob: -19.750003814697266
    8. '_out' → logprob: -19.750003814697266
    9. ' in' → logprob: -20.000003814697266
    10. '\' → logprob: -20.000003814697266

Token 443: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.4617256056226324e-05
    2. 'de' → logprob: -11.750014305114746
    3. 'degrees' → logprob: -13.125014305114746
    4. '_in' → logprob: -13.625014305114746
    5. 'in' → logprob: -13.625014305114746
    6. '_nodes' → logprob: -13.750014305114746
    7. '_degree' → logprob: -15.000014305114746
    8. 'new' → logprob: -15.375014305114746
    9. '_d' → logprob: -15.500014305114746
    10. '_' → logprob: -15.625014305114746

Token 444: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -4.060365608893335e-05
    2. 'g' → logprob: -11.125041007995605
    3. 'degrees' → logprob: -11.500041007995605
    4. 'gree' → logprob: -12.125041007995605
    5. 'gr' → logprob: -12.125041007995605
    6. 'eg' → logprob: -12.875041007995605
    7. 'gre' → logprob: -13.625041007995605
    8. 'gress' → logprob: -14.875041007995605
    9. 'in' → logprob: -15.500041007995605
    10. 'rees' → logprob: -15.750041007995605

Token 445: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.200166469876422e-06
    2. '[u' → logprob: -12.625004768371582
    3. 'v' → logprob: -13.250004768371582
    4. '[' → logprob: -17.0000057220459
    5. '(v' → logprob: -18.0000057220459
    6. '=v' → logprob: -18.7500057220459
    7. '[new' → logprob: -19.1250057220459
    8. '```' → logprob: -19.1250057220459
    9. '	v' → logprob: -19.2500057220459
    10. '[val' → logprob: -19.6250057220459

Token 446: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2574000060558319
    2. ' +=' → logprob: -1.5074000358581543
    3. ']+=' → logprob: -5.257400035858154
    4. ']' → logprob: -9.132399559020996
    5. '+' → logprob: -9.882399559020996
    6. ')' → logprob: -9.882399559020996
    7. '=' → logprob: -10.757399559020996
    8. '   ' → logprob: -11.632399559020996
    9. '```' → logprob: -12.632399559020996
    10. '    ' → logprob: -14.132399559020996

Token 447: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04859350249171257
    2. ' +=' → logprob: -3.048593521118164
    3. ']+=' → logprob: -12.798593521118164
    4. '+' → logprob: -12.923593521118164
    5. '=' → logprob: -14.048593521118164
    6. '   ' → logprob: -16.673593521118164
    7. '```' → logprob: -17.548593521118164
    8. '    ' → logprob: -18.423593521118164
    9. '+='' → logprob: -18.923593521118164
    10. ')' → logprob: -19.048593521118164

Token 448: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023245595395565033
    2. ' ' → logprob: -3.7732455730438232
    3. '   ' → logprob: -16.398244857788086
    4. '0' → logprob: -17.523244857788086
    5. ' ' → logprob: -17.835744857788086
    6. '```' → logprob: -18.585744857788086
    7. '  ' → logprob: -18.960744857788086
    8. '`' → logprob: -19.398244857788086
    9. '１' → logprob: -19.710744857788086
    10. 'int' → logprob: -19.898244857788086

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '0' → logprob: -19.000261306762695
    4. '   ' → logprob: -19.125261306762695
    5. '１' → logprob: -20.187761306762695
    6. '```' → logprob: -20.375261306762695
    7. '
' → logprob: -21.125261306762695
    8. '=' → logprob: -21.187761306762695
    9. ' ' → logprob: -21.312761306762695
    10. '-' → logprob: -21.437761306762695

Token 450: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0570845864713192
    2. 'queue' → logprob: -2.932084560394287
    3. '
' → logprob: -6.932084560394287
    4. ' from' → logprob: -7.307084560394287
    5. 'import' → logprob: -8.432085037231445
    6. 'stack' → logprob: -8.557085037231445
    7. 'q' → logprob: -10.182085037231445
    8. ' queue' → logprob: -10.432085037231445
    9. '    
' → logprob: -10.557085037231445
    10. 'order' → logprob: -11.307085037231445

Token 451: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.004163045436143875
    2. 'queue' → logprob: -5.5041632652282715
    3. 'import' → logprob: -9.504162788391113
    4. ' from' → logprob: -12.379162788391113
    5. 'stack' → logprob: -12.629162788391113
    6. 'q' → logprob: -13.629162788391113
    7. 'deque' → logprob: -14.129162788391113
    8. 'order' → logprob: -15.754162788391113
    9. '#' → logprob: -15.879162788391113
    10. '```' → logprob: -15.879162788391113

Token 452: ' Top' (ID: 8022)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0007642415002919734
    2. 'import' → logprob: -7.5007643699646
    3. 'queue' → logprob: -8.500763893127441
    4. ' from' → logprob: -12.000763893127441
    5. '#' → logprob: -14.250763893127441
    6. 'order' → logprob: -15.000763893127441
    7. 'stack' → logprob: -15.000763893127441
    8. 'deque' → logprob: -15.750763893127441
    9. 'q' → logprob: -16.000764846801758
    10. '```' → logprob: -16.125764846801758

Token 453: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.035756517201662064
    2. 'o' → logprob: -3.7857565879821777
    3. 'logical' → logprob: -4.660756587982178
    4. 'from' → logprob: -6.535756587982178
    5. 'import' → logprob: -7.035756587982178
    6. '#' → logprob: -8.91075611114502
    7. 'ology' → logprob: -9.41075611114502
    8. '```' → logprob: -9.66075611114502
    9. 'ogical' → logprob: -9.66075611114502
    10. 'ical' → logprob: -9.91075611114502

Token 454: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7976181507110596
    2. '_queue' → logprob: -1.0476181507110596
    3. '_sort' → logprob: -2.0476181507110596
    4. ' sort' → logprob: -3.0476181507110596
    5. 'queue' → logprob: -4.6726179122924805
    6. ' queue' → logprob: -5.5476179122924805
    7. 'from' → logprob: -5.9226179122924805
    8. '_nodes' → logprob: -6.4226179122924805
    9. '_order' → logprob: -7.0476179122924805
    10. '
' → logprob: -7.2976179122924805

Token 455: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.006490242667496204
    2. 'queue' → logprob: -5.256490230560303
    3. 'import' → logprob: -7.006490230560303
    4. ' from' → logprob: -8.256490707397461
    5. '
' → logprob: -9.631490707397461
    6. 'order' → logprob: -11.256490707397461
    7. 'stack' → logprob: -12.631490707397461
    8. 'deque' → logprob: -13.006490707397461
    9. ' queue' → logprob: -13.131490707397461
    10. 'q' → logprob: -13.131490707397461

Token 456: 'order' (ID: 2143)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.002146335318684578
    2. 'queue' → logprob: -6.252146244049072
    3. 'import' → logprob: -9.12714672088623
    4. 'order' → logprob: -9.25214672088623
    5. ' from' → logprob: -11.75214672088623
    6. 'stack' → logprob: -12.62714672088623
    7. '```' → logprob: -14.00214672088623
    8. 'que' → logprob: -14.75214672088623
    9. 'q' → logprob: -15.00214672088623
    10. 'deque' → logprob: -15.62714672088623

Token 457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014229794032871723
    2. '=' → logprob: -4.264229774475098
    3. ',' → logprob: -10.139229774475098
    4. '=[]' → logprob: -10.764229774475098
    5. '_queue' → logprob: -14.014229774475098
    6. ' ' → logprob: -14.139229774475098
    7. ')' → logprob: -14.389229774475098
    8. '_' → logprob: -14.639229774475098
    9. 'import' → logprob: -14.889229774475098
    10. '_tokens' → logprob: -15.014229774475098

Token 458: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00015383612480945885
    2. '[]
' → logprob: -9.500153541564941
    3. '[' → logprob: -10.000153541564941
    4. ' []' → logprob: -10.375153541564941
    5. '[]

' → logprob: -14.125153541564941
    6. '[]}' → logprob: -14.625153541564941
    7. '[t' → logprob: -15.750153541564941
    8. '[],' → logprob: -15.750153541564941
    9. '[n' → logprob: -16.000154495239258
    10. '[i' → logprob: -16.500154495239258

Token 459: 'queue' (ID: 9409)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.011273929849267006
    2. 'queue' → logprob: -4.5112738609313965
    3. 'stack' → logprob: -8.761274337768555
    4. 'import' → logprob: -9.761274337768555
    5. 'q' → logprob: -11.761274337768555
    6. ' from' → logprob: -13.511274337768555
    7. 'que' → logprob: -14.011274337768555
    8. 'deque' → logprob: -14.011274337768555
    9. '```' → logprob: -14.761274337768555
    10. 'zero' → logprob: -15.511274337768555

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059355515986680984
    2. '=' → logprob: -5.1309356689453125
    3. '=[]' → logprob: -12.380935668945312
    4. 'import' → logprob: -14.380935668945312
    5. '<|end|>' → logprob: -14.380935668945312
    6. 'from' → logprob: -14.630935668945312
    7. ')' → logprob: -15.380935668945312
    8. ' ' → logprob: -15.630935668945312
    9. ' =[' → logprob: -15.880935668945312
    10. '=[]
' → logprob: -16.130935668945312

Token 461: ' []
' (ID: 8911)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029468700289726257
    2. ' [' → logprob: -4.279468536376953
    3. '[' → logprob: -4.654468536376953
    4. '[t' → logprob: -5.904468536376953
    5. '[]' → logprob: -6.404468536376953
    6. '[token' → logprob: -8.654468536376953
    7. 'deque' → logprob: -8.779468536376953
    8. '[k' → logprob: -8.904468536376953
    9. '[q' → logprob: -8.904468536376953
    10. '[j' → logprob: -9.029468536376953

Token 462: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006415978539735079
    2. 'from' → logprob: -5.256415843963623
    3. '[i' → logprob: -7.881415843963623
    4. ' for' → logprob: -7.881415843963623
    5. 'import' → logprob: -8.381416320800781
    6. '[' → logprob: -9.506416320800781
    7. '[token' → logprob: -9.881416320800781
    8. 'queue' → logprob: -10.256416320800781
    9. '[q' → logprob: -11.506416320800781
    10. '[u' → logprob: -11.756416320800781

Token 463: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.049295824021101
    2. 'i' → logprob: -3.5492959022521973
    3. ' node' → logprob: -4.049295902252197
    4. 'u' → logprob: -6.299295902252197
    5. ' i' → logprob: -9.674295425415039
    6. 'k' → logprob: -11.049295425415039
    7. ' u' → logprob: -12.674295425415039
    8. 'v' → logprob: -13.674295425415039
    9. '   ' → logprob: -16.29929542541504
    10. '	node' → logprob: -16.92429542541504

Token 464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011057372204959393
    2. 'in' → logprob: -4.511057376861572
    3. ' ' → logprob: -12.511056900024414
    4. '	in' → logprob: -13.761056900024414
    5. '  ' → logprob: -14.136056900024414
    6. 'import' → logprob: -14.261056900024414
    7. '_in' → logprob: -14.261056900024414
    8. ',' → logprob: -14.261056900024414
    9. 'n' → logprob: -14.761056900024414
    10. ')' → logprob: -15.511056900024414

Token 465: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.02612135000526905
    2. ' nodes' → logprob: -4.151121139526367
    3. 'new' → logprob: -4.651121139526367
    4. ' new' → logprob: -7.776121139526367
    5. '[new' → logprob: -11.026121139526367
    6. 'node' → logprob: -11.151121139526367
    7. '(nodes' → logprob: -11.401121139526367
    8. '[' → logprob: -11.776121139526367
    9. '	nodes' → logprob: -12.151121139526367
    10. ' [' → logprob: -13.026121139526367

Token 466: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2061072438955307
    2. ':' → logprob: -1.706107258796692
    3. 'if' → logprob: -5.831107139587402
    4. ' if' → logprob: -6.706107139587402
    5. '   ' → logprob: -7.706107139587402
    6. '):
' → logprob: -11.081107139587402
    7. 'in' → logprob: -11.331107139587402
    8. ':
' → logprob: -11.706107139587402
    9. ' :
' → logprob: -11.956107139587402
    10. ',' → logprob: -12.456107139587402

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10666593909263611
    2. ' if' → logprob: -3.231665849685669
    3. ':' → logprob: -3.481665849685669
    4. 'if' → logprob: -3.856665849685669
    5. ':
' → logprob: -4.731666088104248
    6. ' ' → logprob: -8.48166561126709
    7. '    
' → logprob: -8.73166561126709
    8. '	if' → logprob: -9.35666561126709
    9. '[' → logprob: -9.35666561126709
    10. '  ' → logprob: -9.48166561126709

Token 468: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.079056017100811
    2. ' if' → logprob: -2.5790560245513916
    3. '   ' → logprob: -8.829055786132812
    4. 'in' → logprob: -11.454055786132812
    5. '
' → logprob: -12.704055786132812
    6. ' in' → logprob: -13.079055786132812
    7. 'import' → logprob: -13.579055786132812
    8. '    
' → logprob: -14.204055786132812
    9. '	if' → logprob: -14.579055786132812
    10. '0' → logprob: -14.829055786132812

Token 469: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.25193020701408386
    2. ' new' → logprob: -1.5019302368164062
    3. ' in' → logprob: -14.626930236816406
    4. 'in' → logprob: -14.751930236816406
    5. '_new' → logprob: -16.001930236816406
    6. '	new' → logprob: -16.626930236816406
    7. '(new' → logprob: -16.876930236816406
    8. ')new' → logprob: -17.501930236816406
    9. '   ' → logprob: -18.876930236816406
    10. ' ' → logprob: -19.001930236816406

Token 470: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.91732100979425e-05
    2. 'in' → logprob: -10.250039100646973
    3. '_node' → logprob: -13.750039100646973
    4. ' _' → logprob: -14.375039100646973
    5. '_new' → logprob: -14.625039100646973
    6. '_' → logprob: -15.125039100646973
    7. ' in' → logprob: -15.375039100646973
    8. '_nodes' → logprob: -15.375039100646973
    9. '
' → logprob: -15.750039100646973
    10. 'new' → logprob: -15.875039100646973

Token 471: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -4.0722858102526516e-05
    2. '_in' → logprob: -10.875041007995605
    3. 'degrees' → logprob: -11.250041007995605
    4. 'de' → logprob: -12.000041007995605
    5. 'in' → logprob: -13.125041007995605
    6. '_nodes' → logprob: -15.125041007995605
    7. '_degree' → logprob: -15.375041007995605
    8. '	de' → logprob: -17.50004005432129
    9. '-de' → logprob: -17.75004005432129
    10. '\' → logprob: -18.25004005432129

Token 472: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -9.209963900502771e-05
    2. '_de' → logprob: -10.125092506408691
    3. 'eg' → logprob: -10.250092506408691
    4. 'degrees' → logprob: -12.000092506408691
    5. 'gree' → logprob: -12.125092506408691
    6. 'g' → logprob: -13.000092506408691
    7. 'rees' → logprob: -13.375092506408691
    8. 'gr' → logprob: -14.750092506408691
    9. 'de' → logprob: -14.875092506408691
    10. 're' → logprob: -15.375092506408691

Token 473: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.128163257315464e-07
    2. 'node' → logprob: -15.875
    3. '[' → logprob: -16.25
    4. '[token' → logprob: -17.125
    5. '(node' → logprob: -17.25
    6. '=node' → logprob: -17.875
    7. ' [' → logprob: -19.0
    8. ' node' → logprob: -19.375
    9. '```' → logprob: -20.25
    10. '[user' → logprob: -20.375

Token 474: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5762003064155579
    2. ' ==' → logprob: -0.8262003064155579
    3. ']==' → logprob: -8.326200485229492
    4. ']' → logprob: -11.201200485229492
    5. ')==' → logprob: -13.076200485229492
    6. ')' → logprob: -13.451200485229492
    7. '===' → logprob: -14.576200485229492
    8. '```' → logprob: -15.201200485229492
    9. '==
' → logprob: -15.326200485229492
    10. '']==' → logprob: -15.701200485229492

Token 475: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38688158988952637
    2. ' ==' → logprob: -1.1368815898895264
    3. ']==' → logprob: -12.136881828308105
    4. '===' → logprob: -13.136881828308105
    5. ')==' → logprob: -13.511881828308105
    6. '==
' → logprob: -14.136881828308105
    7. '0' → logprob: -15.011881828308105
    8. '=' → logprob: -15.261881828308105
    9. '```' → logprob: -15.511881828308105
    10. ')' → logprob: -15.636881828308105

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.0000057220459
    4. '=' → logprob: -22.3750057220459
    5. '00' → logprob: -24.0000057220459
    6. ' ' → logprob: -24.0000057220459
    7. '  ' → logprob: -24.3750057220459
    8. '```' → logprob: -24.5000057220459
    9. '
' → logprob: -25.0000057220459
    10. '０' → logprob: -25.2500057220459

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '=' → logprob: -21.5
    4. '   ' → logprob: -21.625
    5. '```' → logprob: -22.0
    6. '00' → logprob: -22.375
    7. '
' → logprob: -22.5
    8. '０' → logprob: -23.125
    9. 'zero' → logprob: -23.375
    10. '۰' → logprob: -24.0

Token 478: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05941377952694893
    2. ':' → logprob: -3.0594136714935303
    3. '.append' → logprob: -4.934413909912109
    4. '   ' → logprob: -6.434413909912109
    5. '):
' → logprob: -6.809413909912109
    6. '.queue' → logprob: -8.43441390991211
    7. 'queue' → logprob: -9.05941390991211
    8. '       ' → logprob: -9.30941390991211
    9. '(queue' → logprob: -9.80941390991211
    10. 'append' → logprob: -9.80941390991211

Token 479: '       ' (ID: 309)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.010938639752566814
    2. 'queue' → logprob: -4.88593864440918
    3. '   ' → logprob: -6.13593864440918
    4. '.queue' → logprob: -7.26093864440918
    5. '	queue' → logprob: -8.01093864440918
    6. '(queue' → logprob: -9.51093864440918
    7. '.append' → logprob: -10.63593864440918
    8. '       ' → logprob: -11.13593864440918
    9. '_queue' → logprob: -12.63593864440918
    10. '```' → logprob: -12.76093864440918

Token 480: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.008615399710834026
    2. ' queue' → logprob: -4.758615493774414
    3. '	queue' → logprob: -14.883615493774414
    4. '.queue' → logprob: -15.258615493774414
    5. 'append' → logprob: -16.383615493774414
    6. '   ' → logprob: -16.508615493774414
    7. '(queue' → logprob: -16.508615493774414
    8. 'push' → logprob: -18.008615493774414
    9. '```' → logprob: -18.258615493774414
    10. ' ' → logprob: -18.633615493774414

Token 481: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020473242329899222
    2. '.' → logprob: -8.500205039978027
    3. ' .' → logprob: -14.125205039978027
    4. '.extend' → logprob: -15.875205039978027
    5. 'append' → logprob: -16.25020408630371
    6. '.app' → logprob: -16.50020408630371
    7. '.push' → logprob: -16.62520408630371
    8. '.insert' → logprob: -19.00020408630371
    9. '.pop' → logprob: -19.00020408630371
    10. '.ap' → logprob: -19.62520408630371

Token 482: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0002692032721824944
    2. 'node' → logprob: -8.250268936157227
    3. '(' → logprob: -11.875268936157227
    4. '(queue' → logprob: -14.375268936157227
    5. ' node' → logprob: -15.125268936157227
    6. ' (' → logprob: -16.375268936157227
    7. ',node' → logprob: -17.750268936157227
    8. '(
' → logprob: -18.000268936157227
    9. '[node' → logprob: -18.250268936157227
    10. '=node' → logprob: -19.000268936157227

Token 483: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046114567667245865
    2. ')
' → logprob: -6.129611492156982
    3. '.pop' → logprob: -6.754611492156982
    4. '
' → logprob: -7.254611492156982
    5. '<|end|>' → logprob: -9.254611015319824
    6. '```' → logprob: -9.379611015319824
    7. '[token' → logprob: -9.879611015319824
    8. ']' → logprob: -9.879611015319824
    9. '<|end|>' → logprob: -10.254611015319824
    10. 'while' → logprob: -10.504611015319824

Token 484: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0004845346265938133
    2. 'import' → logprob: -8.750484466552734
    3. ' while' → logprob: -8.875484466552734
    4. '```' → logprob: -9.375484466552734
    5. 'i' → logprob: -10.500484466552734
    6. 'idx' → logprob: -10.875484466552734
    7. 'queue' → logprob: -11.125484466552734
    8. 'from' → logprob: -11.125484466552734
    9. 'for' → logprob: -11.250484466552734
    10. 'index' → logprob: -12.000484466552734

Token 485: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0067209405824542046
    2. ' queue' → logprob: -5.006721019744873
    3. 'len' → logprob: -12.256720542907715
    4. '(queue' → logprob: -14.756720542907715
    5. '	queue' → logprob: -15.006720542907715
    6. ' len' → logprob: -17.25672149658203
    7. '   ' → logprob: -18.00672149658203
    8. '
' → logprob: -18.50672149658203
    9. 'que' → logprob: -18.63172149658203
    10. '  ' → logprob: -19.00672149658203

Token 486: ':
' (ID: 734)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.02626487985253334
    2. '.sort' → logprob: -4.401264667510986
    3. ':' → logprob: -4.526264667510986
    4. ':
' → logprob: -6.151264667510986
    5. '.' → logprob: -7.526264667510986
    6. 'pop' → logprob: -9.026265144348145
    7. '```' → logprob: -10.526265144348145
    8. '.append' → logprob: -11.901265144348145
    9. '.reverse' → logprob: -13.276265144348145
    10. '.remove' → logprob: -13.401265144348145

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09947361052036285
    2. ' node' → logprob: -2.849473714828491
    3. '```' → logprob: -3.849473714828491
    4. '.pop' → logprob: -5.224473476409912
    5. ' pop' → logprob: -5.724473476409912
    6. '    
' → logprob: -6.474473476409912
    7. ' queue' → logprob: -6.974473476409912
    8. '
' → logprob: -7.224473476409912
    9. '[node' → logprob: -7.474473476409912
    10. ' current' → logprob: -7.474473476409912

Token 488: ' current' (ID: 2208)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5007623434066772
    2. 'node' → logprob: -1.0007623434066772
    3. ' current' → logprob: -4.625762462615967
    4. ' u' → logprob: -4.875762462615967
    5. 'u' → logprob: -5.375762462615967
    6. 'current' (adapté à ' current') → logprob: -5.750762462615967
    7. '   ' → logprob: -6.875762462615967
    8. '```' → logprob: -11.125761985778809
    9. 'curr' → logprob: -11.625761985778809
    10. 'v' → logprob: -11.750761985778809

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04871999844908714
    2. '=' → logprob: -3.048719882965088
    3. '.pop' → logprob: -9.048720359802246
    4. 'pop' → logprob: -12.173720359802246
    5. '.append' → logprob: -12.673720359802246
    6. '.' → logprob: -13.298720359802246
    7. '_token' → logprob: -13.423720359802246
    8. '_' → logprob: -13.798720359802246
    9. '_pop' → logprob: -14.673720359802246
    10. ' =
' → logprob: -15.423720359802246

Token 490: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.03804194927215576
    2. ' queue' → logprob: -3.2880420684814453
    3. '	queue' → logprob: -15.038042068481445
    4. ' ' → logprob: -16.038042068481445
    5. '   ' → logprob: -16.163042068481445
    6. '(queue' → logprob: -17.413042068481445
    7. '  ' → logprob: -17.913042068481445
    8. 'que' → logprob: -18.163042068481445
    9. '.queue' → logprob: -18.788042068481445
    10. '0' → logprob: -18.788042068481445

Token 491: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -12.000011444091797
    3. 'pop' → logprob: -12.250011444091797
    4. ' .' → logprob: -17.500011444091797
    5. ' =' → logprob: -17.625011444091797
    6. '_pop' → logprob: -18.125011444091797
    7. '=' → logprob: -18.375011444091797
    8. '	pop' → logprob: -18.375011444091797
    9. '.p' → logprob: -18.500011444091797
    10. '.remove' → logprob: -18.625011444091797

Token 492: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31366807222366333
    2. '()' → logprob: -1.3136680126190186
    3. '()
' → logprob: -7.813668251037598
    4. '0' → logprob: -13.313668251037598
    5. '(-' → logprob: -16.18866729736328
    6. '()`' → logprob: -16.31366729736328
    7. '()-' → logprob: -16.68866729736328
    8. '(
' → logprob: -16.81366729736328
    9. '()

' → logprob: -17.31366729736328
    10. '().' → logprob: -17.31366729736328

Token 493: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.881560041918419e-05
    2. ')' → logprob: -10.375039100646973
    3. '()' → logprob: -12.250039100646973
    4. '(' → logprob: -13.000039100646973
    5. '-' → logprob: -14.875039100646973
    6. '())' → logprob: -16.000038146972656
    7. ' ' → logprob: -16.375038146972656
    8. '()
' → logprob: -17.250038146972656
    9. '```' → logprob: -18.000038146972656
    10. ')
' → logprob: -18.125038146972656

Token 494: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0012689243303611875
    2. ')' → logprob: -6.7512688636779785
    3. '   ' → logprob: -9.251269340515137
    4. ' )
' → logprob: -13.751269340515137
    5. ')
' → logprob: -13.876269340515137
    6. 'for' → logprob: -14.626269340515137
    7. '
' → logprob: -15.751269340515137
    8. ')

' → logprob: -17.12626838684082
    9. ' for' → logprob: -17.12626838684082
    10. '):
' → logprob: -17.50126838684082

Token 495: '   ' (ID: 271)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00028290803311392665
    2. '   ' → logprob: -8.250283241271973
    3. ' order' → logprob: -10.750283241271973
    4. '
' → logprob: -16.000282287597656
    5. '```' → logprob: -17.500282287597656
    6. '	order' → logprob: -17.625282287597656
    7. ' ' → logprob: -20.500282287597656
    8. '$order' → logprob: -20.500282287597656
    9. '    
' → logprob: -20.750282287597656
    10. '_order' → logprob: -20.875282287597656

Token 496: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -1.2664456789934775e-06
    2. ' order' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.625001907348633
    4. ' ' → logprob: -21.250001907348633
    5. '	order' → logprob: -22.000001907348633
    6. '
' → logprob: -22.375001907348633
    7. 'answer' → logprob: -23.500001907348633
    8. '```' → logprob: -23.875001907348633
    9. '  ' → logprob: -24.125001907348633
    10. 'append' → logprob: -24.375001907348633

Token 497: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.747814349073451e-05
    2. '.' → logprob: -11.000017166137695
    3. '.app' → logprob: -15.000017166137695
    4. ' .' → logprob: -16.000017166137695
    5. 'append' → logprob: -16.000017166137695
    6. '.extend' → logprob: -16.500017166137695
    7. '.Append' → logprob: -18.250017166137695
    8. '.ap' → logprob: -18.750017166137695
    9. '.add' → logprob: -19.625017166137695
    10. '_append' → logprob: -19.625017166137695

Token 498: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -6.20603168499656e-05
    2. '(' → logprob: -9.750061988830566
    3. 'current' → logprob: -12.500061988830566
    4. ' current' → logprob: -16.875062942504883
    5. '(cur' → logprob: -17.625062942504883
    6. '(
' → logprob: -17.875062942504883
    7. '(curr' → logprob: -18.250062942504883
    8. ' (' → logprob: -18.500062942504883
    9. ',current' → logprob: -20.250062942504883
    10. '[current' → logprob: -20.375062942504883

Token 499: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10414653271436691
    2. ')' → logprob: -2.3541464805603027
    3. '   ' → logprob: -5.979146480560303
    4. '
' → logprob: -6.854146480560303
    5. ' )
' → logprob: -8.104146957397461
    6. ' )' → logprob: -10.979146957397461
    7. 'for' → logprob: -11.104146957397461
    8. ')
' → logprob: -13.354146957397461
    9. '    
' → logprob: -13.479146957397461
    10. ' ' → logprob: -13.604146957397461

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08174663782119751
    2. 'for' → logprob: -2.5817465782165527
    3. ' for' → logprob: -6.206746578216553
    4. '
' → logprob: -7.706746578216553
    5. '    
' → logprob: -7.956746578216553
    6. '```' → logprob: -10.956747055053711
    7. '  
' → logprob: -11.831747055053711
    8. '	for' → logprob: -11.956747055053711
    9. '   
' → logprob: -13.081747055053711
    10. '   ' → logprob: -13.956747055053711

Token 501: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.4140441635390744e-05
    2. ' for' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.750014305114746
    4. '    
' → logprob: -20.00001335144043
    5. '
' → logprob: -21.12501335144043
    6. '	for' → logprob: -21.75001335144043
    7. '```' → logprob: -22.87501335144043
    8. ' 
' → logprob: -23.75001335144043
    9. ' ' → logprob: -24.12501335144043
    10. '  
' → logprob: -25.12501335144043

Token 502: ' nxt' (ID: 160200)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.014415462501347065
    2. ' neighbor' → logprob: -4.264415264129639
    3. 'next' → logprob: -9.014415740966797
    4. 'ne' → logprob: -9.264415740966797
    5. 'nei' → logprob: -11.014415740966797
    6. ' nxt' → logprob: -12.389415740966797
    7. ' nei' → logprob: -12.514415740966797
    8. 'adj' → logprob: -12.764415740966797
    9. 'n' → logprob: -13.139415740966797
    10. ' next' → logprob: -13.264415740966797

Token 503: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012550032697618008
    2. 'in' → logprob: -4.387549877166748
    3. '	in' → logprob: -10.887550354003906
    4. 'n' → logprob: -11.137550354003906
    5. ' ' → logprob: -12.512550354003906
    6. '_in' → logprob: -13.637550354003906
    7. '<|end|>' → logprob: -14.012550354003906
    8. '<|end|>' → logprob: -15.137550354003906
    9. 's' → logprob: -16.012550354003906
    10. 't' → logprob: -16.137550354003906

Token 504: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3868713080883026
    2. ' new' → logprob: -1.136871337890625
    3. '_new' → logprob: -16.136871337890625
    4. '   ' → logprob: -16.511871337890625
    5. '	new' → logprob: -16.511871337890625
    6. '(new' → logprob: -18.511871337890625
    7. '[new' → logprob: -18.886871337890625
    8. ' ' → logprob: -19.136871337890625
    9. 'range' → logprob: -19.261871337890625
    10. '新' → logprob: -20.386871337890625

Token 505: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.0001793457195162773
    2. 'graph' → logprob: -8.750179290771484
    3. '[current' → logprob: -11.250179290771484
    4. 'current' → logprob: -12.125179290771484
    5. 'Graph' → logprob: -13.500179290771484
    6. '_queue' → logprob: -15.000179290771484
    7. '[new' → logprob: -15.250179290771484
    8. 'new' → logprob: -15.625179290771484
    9. '_order' → logprob: -16.500179290771484
    10. '[' → logprob: -17.250179290771484

Token 506: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.0206720617134124e-05
    2. 'current' → logprob: -11.50001049041748
    3. '[cur' → logprob: -17.750009536743164
    4. '[' → logprob: -19.000009536743164
    5. '(current' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.375009536743164
    7. ' current' → logprob: -19.375009536743164
    8. ' [' → logprob: -20.125009536743164
    9. '[curr' → logprob: -20.500009536743164
    10. ',current' → logprob: -20.750009536743164

Token 507: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17648375034332275
    2. ']:' → logprob: -2.176483631134033
    3. ':
' → logprob: -3.676483631134033
    4. ']:
' → logprob: -3.926483631134033
    5. '):' → logprob: -6.551483631134033
    6. '   ' → logprob: -6.926483631134033
    7. '):
' → logprob: -7.676483631134033
    8. ']' → logprob: -8.426484107971191
    9. '       ' → logprob: -9.676484107971191
    10. ' :' → logprob: -10.301484107971191

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002707631094381213
    2. ':' → logprob: -6.627707481384277
    3. '   ' → logprob: -7.252707481384277
    4. ':
' → logprob: -7.377707481384277
    5. ' if' → logprob: -11.377707481384277
    6. '        
' → logprob: -11.502707481384277
    7. '):
' → logprob: -12.002707481384277
    8. '<|end|>' → logprob: -12.377707481384277
    9. ',' → logprob: -13.252707481384277
    10. '      ' → logprob: -13.502707481384277

Token 509: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.038085781037807465
    2. 'new' (adapté à ' new') → logprob: -3.288085699081421
    3. '       ' → logprob: -10.5380859375
    4. '   ' → logprob: -11.0380859375
    5. '
' → logprob: -14.1630859375
    6. '	new' → logprob: -14.7880859375
    7. '           ' → logprob: -15.2880859375
    8. '        
' → logprob: -15.7880859375
    9. ' 
' → logprob: -15.9130859375
    10. '    ' → logprob: -16.5380859375

Token 510: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -7.896309739408025e-07
    2. 'in' → logprob: -14.500000953674316
    3. '_' → logprob: -17.0
    4. '_ind' → logprob: -18.25
    5. '   ' → logprob: -18.375
    6. 'n' → logprob: -18.5
    7. '	in' → logprob: -18.625
    8. '
' → logprob: -18.875
    9. '_i' → logprob: -18.875
    10. ' in' → logprob: -19.0

Token 511: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -9.014684110297821e-06
    2. 'de' → logprob: -12.125008583068848
    3. 'degrees' → logprob: -12.625008583068848
    4. '_in' → logprob: -16.375009536743164
    5. 'grees' → logprob: -17.000009536743164
    6. 'in' → logprob: -17.000009536743164
    7. 'Degrees' → logprob: -17.125009536743164
    8. '	de' → logprob: -17.500009536743164
    9. '_degree' → logprob: -17.875009536743164
    10. '-de' → logprob: -18.625009536743164

Token 512: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -1.6047699318733066e-05
    2. '_de' → logprob: -11.625016212463379
    3. 'eg' → logprob: -12.250016212463379
    4. 'rees' → logprob: -14.125016212463379
    5. 'degrees' → logprob: -14.125016212463379
    6. 'gr' → logprob: -15.000016212463379
    7. 'gree' → logprob: -15.500016212463379
    8. 'de' → logprob: -16.000015258789062
    9. 'g' → logprob: -16.375015258789062
    10. 'gre' → logprob: -17.625015258789062

Token 513: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. 'n' → logprob: -15.75
    4. ' [' → logprob: -17.875
    5. '[next' → logprob: -18.625
    6. '   ' → logprob: -18.875
    7. '[v' → logprob: -19.25
    8. '```' → logprob: -20.0
    9. '	n' → logprob: -20.125
    10. '\[' → logprob: -20.375

Token 514: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.0445127372804563e-05
    2. 't' → logprob: -11.75001049041748
    3. 'x' → logprob: -14.37501049041748
    4. '[' → logprob: -14.50001049041748
    5. '```' → logprob: -14.75001049041748
    6. '   ' → logprob: -15.00001049041748
    7. '[n' → logprob: -15.62501049041748
    8. 'ode' → logprob: -15.75001049041748
    9. 'de' → logprob: -16.125009536743164
    10. 'st' → logprob: -16.500009536743164

Token 515: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.03852520138025284
    2. ' -=' → logprob: -3.538525104522705
    3. '-=' → logprob: -5.163525104522705
    4. '[current' → logprob: -6.163525104522705
    5. '-' → logprob: -7.663525104522705
    6. '   ' → logprob: -8.538525581359863
    7. '[next' → logprob: -9.163525581359863
    8. '[-' → logprob: -9.913525581359863
    9. '[' → logprob: -11.038525581359863
    10. 'n' → logprob: -11.038525581359863

Token 516: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03068673238158226
    2. ' -=' → logprob: -3.780686616897583
    3. '-' → logprob: -4.905686855316162
    4. '   ' → logprob: -11.905686378479004
    5. '```' → logprob: -13.905686378479004
    6. '>' → logprob: -14.780686378479004
    7. ' -' → logprob: -15.030686378479004
    8. '+=' → logprob: -15.155686378479004
    9. '=' → logprob: -15.280686378479004
    10. '    ' → logprob: -16.03068733215332

Token 517: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692810595035553
    2. ' ' → logprob: -2.1269280910491943
    3. '   ' → logprob: -17.376928329467773
    4. ' ' → logprob: -18.001928329467773
    5. '```' → logprob: -18.751928329467773
    6. '  ' → logprob: -21.501928329467773
    7. '１' → logprob: -21.626928329467773
    8. '	' → logprob: -21.876928329467773
    9. '0' → logprob: -21.876928329467773
    10. '    ' → logprob: -22.001928329467773

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.625001907348633
    5. '１' → logprob: -22.625001907348633
    6. '۱' → logprob: -23.000001907348633
    7. '`' → logprob: -23.625001907348633
    8. '0' → logprob: -24.000001907348633
    9. '  ' → logprob: -24.500001907348633
    10. ')' → logprob: -24.562501907348633

Token 519: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003959428519010544
    2. '   ' → logprob: -6.378959655761719
    3. '
' → logprob: -7.628959655761719
    4. 'if' → logprob: -7.753959655761719
    5. ' if' → logprob: -8.128959655761719
    6. '<|end|>' → logprob: -8.253959655761719
    7. '        
' → logprob: -8.503959655761719
    8. '  
' → logprob: -8.753959655761719
    9. '	' → logprob: -9.378959655761719
    10. ' 
' → logprob: -9.753959655761719

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04341978207230568
    2. 'if' → logprob: -3.91841983795166
    3. ' if' → logprob: -4.04341983795166
    4. '   ' → logprob: -5.41841983795166
    5. '        
' → logprob: -9.04341983795166
    6. '
' → logprob: -9.29341983795166
    7. ' ' → logprob: -9.29341983795166
    8. '  
' → logprob: -9.54341983795166
    9. '```' → logprob: -9.79341983795166
    10. ' 
' → logprob: -10.16841983795166

Token 521: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.080113984644413
    2. ' if' → logprob: -2.5801138877868652
    3. '   ' → logprob: -7.330113887786865
    4. '       ' → logprob: -7.580113887786865
    5. '1' → logprob: -10.205114364624023
    6. '4' → logprob: -12.330114364624023
    7. ' ' → logprob: -12.580114364624023
    8. '           ' → logprob: -13.330114364624023
    9. '    ' → logprob: -13.455114364624023
    10. 'If' → logprob: -13.455114364624023

Token 522: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.20141343772411346
    2. ' new' → logprob: -1.7014133930206299
    3. '	new' → logprob: -16.826414108276367
    4. ' ' → logprob: -17.576414108276367
    5. '(new' → logprob: -17.951414108276367
    6. 'n' → logprob: -18.451414108276367
    7. '[new' → logprob: -18.826414108276367
    8. '_new' → logprob: -19.076414108276367
    9. ')new' → logprob: -19.201414108276367
    10. ' ' → logprob: -19.451414108276367

Token 523: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -5.512236498361744e-07
    2. 'in' → logprob: -15.125000953674316
    3. '_' → logprob: -16.875
    4. '_de' → logprob: -17.875
    5. 'n' → logprob: -18.375
    6. '_ind' → logprob: -18.5
    7. '	in' → logprob: -18.5
    8. 'new' → logprob: -19.25
    9. '_indices' → logprob: -19.375
    10. '_new' → logprob: -19.5

Token 524: '_de' (ID: 5047)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.04940588399767876
    2. '_de' → logprob: -3.049405813217163
    3. 'in' → logprob: -7.174406051635742
    4. 'n' → logprob: -10.674406051635742
    5. 'de' → logprob: -11.049406051635742
    6. 'degrees' → logprob: -12.174406051635742
    7. '_nodes' → logprob: -13.424406051635742
    8. '_indices' → logprob: -13.549406051635742
    9. '_degree' → logprob: -13.674406051635742
    10. '_d' → logprob: -14.549406051635742

Token 525: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.001226062304340303
    2. 'gr' → logprob: -7.37622594833374
    3. '_in' → logprob: -8.501226425170898
    4. 'g' → logprob: -8.626226425170898
    5. '_de' → logprob: -8.876226425170898
    6. 'gree' → logprob: -10.251226425170898
    7. 'eg' → logprob: -11.251226425170898
    8. 'n' → logprob: -11.626226425170898
    9. 's' → logprob: -12.126226425170898
    10. '_g' → logprob: -12.626226425170898

Token 526: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.981667537620524e-06
    2. 'n' → logprob: -13.625001907348633
    3. '[next' → logprob: -14.625001907348633
    4. '[' → logprob: -15.125001907348633
    5. '```' → logprob: -17.125001907348633
    6. '==' → logprob: -17.750001907348633
    7. '[new' → logprob: -17.875001907348633
    8. '

' → logprob: -18.500001907348633
    9. '	n' → logprob: -18.500001907348633
    10. '[
' → logprob: -18.500001907348633

Token 527: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -4.36574100604048e-06
    2. '[n' → logprob: -12.375004768371582
    3. 'x' → logprob: -17.375003814697266
    4. 'n' → logprob: -17.500003814697266
    5. 't' → logprob: -18.125003814697266
    6. '```' → logprob: -18.125003814697266
    7. 'zt' → logprob: -18.250003814697266
    8. 'ext' → logprob: -18.250003814697266
    9. 'st' → logprob: -18.250003814697266
    10. '[' → logprob: -18.875003814697266

Token 528: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.41866585687967e-06
    2. 'n' → logprob: -12.250008583068848
    3. '[next' → logprob: -13.250008583068848
    4. '==' → logprob: -13.500008583068848
    5. '[' → logprob: -15.375008583068848
    6. '[node' → logprob: -16.37500762939453
    7. ' ==' → logprob: -16.37500762939453
    8. ']' → logprob: -16.75000762939453
    9. '```' → logprob: -17.37500762939453
    10. '[now' → logprob: -18.62500762939453

Token 529: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0687960833311081
    2. ' ==' → logprob: -2.818796157836914
    3. '[n' → logprob: -5.068796157836914
    4. '[node' → logprob: -8.318796157836914
    5. '[next' → logprob: -9.193796157836914
    6. '[' → logprob: -9.193796157836914
    7. '```' → logprob: -10.693796157836914
    8. ']==' → logprob: -11.068796157836914
    9. '=' → logprob: -11.568796157836914
    10. '[now' → logprob: -11.943796157836914

Token 530: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858771339058876
    2. ' ' → logprob: -3.0485877990722656
    3. '   ' → logprob: -14.923587799072266
    4. ' ' → logprob: -17.673587799072266
    5. '  ' → logprob: -18.298587799072266
    6. '```' → logprob: -19.048587799072266
    7. '1' → logprob: -19.298587799072266
    8. '=' → logprob: -19.298587799072266
    9. '	' → logprob: -19.423587799072266
    10. '
' → logprob: -19.548587799072266

Token 531: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.875011444091797
    4. '```' → logprob: -19.750011444091797
    5. '
' → logprob: -20.125011444091797
    6. '=' → logprob: -20.625011444091797
    7. '1' → logprob: -21.000011444091797
    8. '00' → logprob: -21.750011444091797
    9. ' ' → logprob: -21.875011444091797
    10. '  ' → logprob: -22.062511444091797

Token 532: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5883182883262634
    2. ':
' → logprob: -0.8383182883262634
    3. '       ' → logprob: -4.713318347930908
    4. '           ' → logprob: -5.963318347930908
    5. '):
' → logprob: -7.838318347930908
    6. ',' → logprob: -8.96331787109375
    7. '   ' → logprob: -9.21331787109375
    8. '):' → logprob: -10.58831787109375
    9. ')' → logprob: -10.83831787109375
    10. '<|end|>' → logprob: -11.21331787109375

Token 533: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017319408943876624
    2. ' queue' → logprob: -6.501731872558594
    3. 'queue' → logprob: -9.251731872558594
    4. '		' → logprob: -10.251731872558594
    5. '	       ' → logprob: -10.376731872558594
    6. '(queue' → logprob: -11.001731872558594
    7. '	queue' → logprob: -11.376731872558594
    8. '	   ' → logprob: -11.751731872558594
    9. '.queue' → logprob: -11.751731872558594
    10. '   ' → logprob: -12.251731872558594

Token 534: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.030153553932905197
    2. ' queue' → logprob: -3.530153512954712
    3. '               ' → logprob: -8.280153274536133
    4. '	queue' → logprob: -8.905153274536133
    5. '           ' → logprob: -11.655153274536133
    6. '   ' → logprob: -12.780153274536133
    7. '.queue' → logprob: -13.780153274536133
    8. '```' → logprob: -14.905153274536133
    9. '(queue' → logprob: -15.405153274536133
    10. '			' → logprob: -15.530153274536133

Token 535: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.800739018013701e-05
    2. '.' → logprob: -9.8750581741333
    3. 'append' → logprob: -12.0000581741333
    4. '.app' → logprob: -16.125057220458984
    5. '.extend' → logprob: -16.500057220458984
    6. '.Append' → logprob: -17.250057220458984
    7. 'Append' → logprob: -17.750057220458984
    8. '.push' → logprob: -18.000057220458984
    9. ' .' → logprob: -18.250057220458984
    10. '_append' → logprob: -18.500057220458984

Token 536: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -9.7500581741333
    3. 'n' → logprob: -18.750059127807617
    4. '(
' → logprob: -19.000059127807617
    5. '(next' → logprob: -20.000059127807617
    6. '((' → logprob: -20.000059127807617
    7. '()' → logprob: -20.250059127807617
    8. ' (' → logprob: -20.875059127807617
    9. '(noun' → logprob: -21.125059127807617
    10. '(nx' → logprob: -21.500059127807617

Token 537: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: 0.0
    2. 'ext' → logprob: -17.875
    3. 'x' → logprob: -18.125
    4. 't' → logprob: -19.25
    5. '```' → logprob: -19.875
    6. '[' → logprob: -20.125
    7. '.xt' → logprob: -20.625
    8. '(' → logprob: -20.75
    9. '_xt' → logprob: -20.875
    10. 'ode' → logprob: -21.375

Token 538: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ')
' → logprob: -12.250009536743164
    3. 'current' → logprob: -13.250009536743164
    4. ')n' → logprob: -14.000009536743164
    5. ' )' → logprob: -14.125009536743164
    6. '(current' → logprob: -14.375009536743164
    7. '[current' → logprob: -15.125009536743164
    8. '))' → logprob: -16.375009536743164
    9. '<|end|>' → logprob: -16.375009536743164
    10. '())' → logprob: -16.500009536743164

Token 539: '#' (ID: 2)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.2527701258659363
    2. 'if' → logprob: -1.502770185470581
    3. 'print' → logprob: -7.252769947052002
    4. '```' → logprob: -9.62777042388916
    5. 'for' → logprob: -10.12777042388916
    6. '#' → logprob: -11.37777042388916
    7. 'assert' → logprob: -11.87777042388916
    8. '
' → logprob: -12.50277042388916
    9. ' if' → logprob: -13.12777042388916
    10. ' order' → logprob: -13.37777042388916

Token 540: ' Append' (ID: 58624)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.08537308871746063
    2. 'if' → logprob: -2.5853731632232666
    3. 'print' → logprob: -5.2103729248046875
    4. 'for' → logprob: -6.9603729248046875
    5. '#' → logprob: -10.960372924804688
    6. 'assert' → logprob: -11.085372924804688
    7. ' order' → logprob: -11.335372924804688
    8. ' if' → logprob: -12.335372924804688
    9. '```' → logprob: -13.210372924804688
    10. 'answer' → logprob: -13.835372924804688

Token 541: ' Tama' (ID: 108269)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.001173917087726295
    2. '(' → logprob: -7.001173973083496
    3. 't' → logprob: -8.251173973083496
    4. '([' → logprob: -14.126173973083496
    5. ' (' → logprob: -14.626173973083496
    6. ' t' → logprob: -15.876173973083496
    7. '	t' → logprob: -16.75117301940918
    8. '('' → logprob: -17.62617301940918
    9. '[t' → logprob: -17.75117301940918
    10. '(T' → logprob: -17.87617301940918

Token 542: ' at' (ID: 540)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.7954958821064793e-05
    2. ' order' → logprob: -11.250018119812012
    3. '.order' → logprob: -13.125018119812012
    4. '```' → logprob: -13.625018119812012
    5. '
' → logprob: -14.125018119812012
    6. '(order' → logprob: -15.125018119812012
    7. '.' → logprob: -15.250018119812012
    8. '.append' → logprob: -16.500017166137695
    9. 'answer' → logprob: -16.750017166137695
    10. '.
' → logprob: -16.875017166137695

Token 543: ' last' (ID: 2174)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7060906291007996
    2. 'the' → logprob: -0.7060906291007996
    3. 'end' → logprob: -4.456090450286865
    4. ' end' → logprob: -6.956090450286865
    5. 'last' → logprob: -8.456090927124023
    6. ' last' → logprob: -10.081090927124023
    7. 'order' → logprob: -10.206090927124023
    8. ' order' → logprob: -12.081090927124023
    9. 't' → logprob: -14.331090927124023
    10. 'final' → logprob: -14.581090927124023

Token 544: '
' (ID: 198)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -2.5776860184123507e-06
    2. ' order' → logprob: -13.25000286102295
    3. '.order' → logprob: -14.75000286102295
    4. '```' → logprob: -15.37500286102295
    5. '
' → logprob: -16.625001907348633
    6. '.' → logprob: -16.750001907348633
    7. '.
' → logprob: -17.500001907348633
    8. '(order' → logprob: -18.000001907348633
    9. '``' → logprob: -18.750001907348633
    10. '`' → logprob: -19.875001907348633

Token 545: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: 0.0
    2. ' order' → logprob: -17.25
    3. '```' → logprob: -23.125
    4. 'print' → logprob: -23.875
    5. 'answer' → logprob: -25.75
    6. '	order' → logprob: -25.875
    7. '`' → logprob: -26.0
    8. 'output' → logprob: -26.5
    9. '
' → logprob: -27.0
    10. '$order' → logprob: -27.125

Token 546: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002636006975080818
    2. '.' → logprob: -8.250263214111328
    3. '.app' → logprob: -13.375263214111328
    4. 'append' → logprob: -15.125263214111328
    5. ' .' → logprob: -15.625263214111328
    6. '.ap' → logprob: -16.750263214111328
    7. '.extend' → logprob: -16.875263214111328
    8. '+' → logprob: -17.250263214111328
    9. '.push' → logprob: -17.750263214111328
    10. '.insert' → logprob: -18.125263214111328

Token 547: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. 't' → logprob: -16.25009536743164
    4. ' (' → logprob: -17.37509536743164
    5. '(T' → logprob: -17.75009536743164
    6. '((' → logprob: -19.50009536743164
    7. '(
' → logprob: -20.87509536743164
    8. '	t' → logprob: -21.37509536743164
    9. '('' → logprob: -21.87509536743164
    10. '()' → logprob: -22.00009536743164

Token 548: 'ama' (ID: 2152)
  Prédit: 'ama'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ama' → logprob: -1.688212614681106e-05
    2. 't' → logprob: -11.875017166137695
    3. 'ma' → logprob: -12.250017166137695
    4. 'a' → logprob: -12.250017166137695
    5. ' tama' → logprob: -15.750017166137695
    6. '(' → logprob: -17.250017166137695
    7. '[' → logprob: -17.500017166137695
    8. 'ata' → logprob: -17.625017166137695
    9. ' ama' → logprob: -17.875017166137695
    10. 'ама' → logprob: -17.875017166137695

Token 549: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -12.75000286102295
    3. ' )' → logprob: -15.12500286102295
    4. ')`' → logprob: -18.125003814697266
    5. '))' → logprob: -18.750003814697266
    6. ')

' → logprob: -18.875003814697266
    7. ')#' → logprob: -19.625003814697266
    8. '）' → logprob: -19.875003814697266
    9. ')
' → logprob: -20.125003814697266
    10. '),' → logprob: -20.375003814697266

Token 550: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3895234167575836
    2. 'for' → logprob: -1.1395233869552612
    3. 'if' → logprob: -6.014523506164551
    4. ' for' → logprob: -9.26452350616455
    5. '```' → logprob: -9.51452350616455
    6. '
' → logprob: -10.51452350616455
    7. '#' → logprob: -12.63952350616455
    8. ' print' → logprob: -12.76452350616455
    9. '#print' → logprob: -13.88952350616455
    10. '``' → logprob: -14.01452350616455

Token 551: ' o' (ID: 293)
  Prédit: ' suspect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suspect' → logprob: -1.2723453044891357
    2. 'person' → logprob: -1.5223453044891357
    3. ' person' → logprob: -1.6473453044891357
    4. 'sus' → logprob: -1.7723453044891357
    5. 'i' → logprob: -3.2723453044891357
    6. 'x' → logprob: -3.6473453044891357
    7. 'p' → logprob: -4.022345542907715
    8. ' x' → logprob: -4.397345542907715
    9. 'o' → logprob: -4.522345542907715
    10. ' i' → logprob: -5.147345542907715

Token 552: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11396409571170807
    2. 'in' → logprob: -2.238964080810547
    3. 'n' → logprob: -7.113964080810547
    4. ' ' → logprob: -8.738964080810547
    5. 'o' → logprob: -9.988964080810547
    6. '_' → logprob: -10.238964080810547
    7. 'i' → logprob: -10.238964080810547
    8. ' i' → logprob: -11.113964080810547
    9. ' o' → logprob: -11.613964080810547
    10. '  ' → logprob: -11.988964080810547

Token 553: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -7.941850526549388e-06
    2. ' order' → logprob: -11.750007629394531
    3. '(order' → logprob: -23.50000762939453
    4. '	order' → logprob: -23.75000762939453
    5. 'range' → logprob: -23.87500762939453
    6. ' ' → logprob: -24.50000762939453
    7. '
' → logprob: -24.75000762939453
    8. 'orde' → logprob: -25.50000762939453
    9. '$order' → logprob: -25.87500762939453
    10. '   ' → logprob: -26.25000762939453

Token 554: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24615144729614258
    2. 'print' → logprob: -1.6211514472961426
    3. ':
' → logprob: -4.371151447296143
    4. ',' → logprob: -5.746151447296143
    5. ' print' → logprob: -6.246151447296143
    6. '.print' → logprob: -6.871151447296143
    7. '<|end|>' → logprob: -7.371151447296143
    8. ')' → logprob: -7.996151447296143
    9. '(print' → logprob: -8.121150970458984
    10. '.' → logprob: -8.871150970458984

Token 555: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019150081789121032
    2. ' print' → logprob: -8.750191688537598
    3. '```' → logprob: -10.875191688537598
    4. '   ' → logprob: -11.250191688537598
    5. '``' → logprob: -14.875191688537598
    6. '
' → logprob: -15.000191688537598
    7. '	print' → logprob: -15.250191688537598
    8. '    
' → logprob: -16.87519073486328
    9. '#print' → logprob: -16.87519073486328
    10. '.print' → logprob: -16.87519073486328

Token 556: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018150413408875465
    2. ' print' → logprob: -4.018150329589844
    3. '   ' → logprob: -14.768150329589844
    4. '```' → logprob: -16.893150329589844
    5. '
' → logprob: -18.893150329589844
    6. '	print' → logprob: -19.018150329589844
    7. '.print' → logprob: -19.768150329589844
    8. 'printf' → logprob: -20.268150329589844
    9. '_print' → logprob: -21.768150329589844
    10. 'Print' → logprob: -21.893150329589844

Token 557: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'o' → logprob: -16.75
    4. '(f' → logprob: -19.5
    5. '(
' → logprob: -21.0
    6. '	o' → logprob: -21.125
    7. '()' → logprob: -22.0
    8. '{o' → logprob: -22.25
    9. '=o' → logprob: -22.375
    10. '(i' → logprob: -22.625

Token 558: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -15.250000953674316
    3. ')
' → logprob: -15.625000953674316
    4. '())' → logprob: -15.625000953674316
    5. ' )' → logprob: -16.875
    6. ')`' → logprob: -17.25
    7. '))' → logprob: -18.25
    8. '),' → logprob: -18.875
    9. ')}' → logprob: -18.875
    10. ')o' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 556
Tokens correctement prédits (1ère position, stricte): 219
Tokens correctement prédits (1ère position, avec adaptation): 230
Tokens correctement prédits (top 10): 409
Précision stricte (1ère position): 39.39%
Précision adaptée (1ère position): 41.37%
Précision (top 10): 73.56%
================================================================================
