================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    memo = {1: 0}  # operations needed to get x^1 is 0

    def min_ops(n):
        if n in memo:
            return memo[n]
        ops = float('inf')
        # Try to build n by multiplication from two smaller exponents
        for i in range(1, n):
            j = n - i
            # multiplication: op to i + op to j + 1
            ops = min(ops, min_ops(i) + min_ops(j) + 1)
        # Also try division: if n divides m, x^m/x^(m-n) = x^n
        for m in range(n + 1, 1001):
            if m % n == 0:
                ops = min(ops, min_ops(m) + 1)
        memo[n] = ops
        return ops

    while True:
        n = int(input())
        if n == 0:
            break
        print(min_ops(n))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.45526188611984253
    2. '\n' → logprob: -1.3302619457244873
    3. '   ' → logprob: -2.7052619457244873
    4. '    
' → logprob: -4.580261707305908
    5. ' 
' → logprob: -5.205261707305908
    6. '    ' → logprob: -5.330261707305908
    7. '```' → logprob: -5.580261707305908
    8. '(' → logprob: -5.955261707305908
    9. ''' → logprob: -6.580261707305908
    10. ' \' → logprob: -7.330261707305908

Token 4: ' memo' (ID: 46393)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.426801472902298
    2. '   ' → logprob: -1.6768014430999756
    3. 'pass' → logprob: -2.4268014430999756
    4. 'p' → logprob: -3.5518014430999756
    5. 'return' → logprob: -4.176801681518555
    6. 'r' → logprob: -4.301801681518555
    7. '#' → logprob: -5.176801681518555
    8. '    ' → logprob: -6.176801681518555
    9. 'a' → logprob: -6.301801681518555
    10. 'n' → logprob: -6.801801681518555

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0225085262209177
    2. '_' → logprob: -4.77250862121582
    3. '```' → logprob: -4.89750862121582
    4. '\[' → logprob: -7.02250862121582
    5. '[]' → logprob: -7.27250862121582
    6. '.setdefault' → logprob: -7.27250862121582
    7. 'ize' → logprob: -7.39750862121582
    8. '.' → logprob: -7.64750862121582
    9. 'ization' → logprob: -7.89750862121582
    10. '=' → logprob: -8.14750862121582

Token 6: ' {' (ID: 354)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.31334832310676575
    2. '{}' → logprob: -1.3133482933044434
    3. ' dict' → logprob: -11.063348770141602
    4. 'dict' → logprob: -11.188348770141602
    5. ' ' → logprob: -11.438348770141602
    6. ' {}\' → logprob: -11.438348770141602
    7. ' set' → logprob: -11.563348770141602
    8. 'set' → logprob: -12.438348770141602
    9. '={}' → logprob: -12.563348770141602
    10. '   ' → logprob: -12.688348770141602

Token 7: '1' (ID: 16)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0036948511842638254
    2. '0' → logprob: -6.753695011138916
    3. '   ' → logprob: -6.878695011138916
    4. ' }' → logprob: -8.128694534301758
    5. ''' → logprob: -8.253694534301758
    6. '"}' → logprob: -8.378694534301758
    7. '"' → logprob: -8.878694534301758
    8. '       ' → logprob: -9.378694534301758
    9. '<|end|>' → logprob: -9.378694534301758
    10. ''}' → logprob: -9.503694534301758

Token 8: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003233070601709187
    2. ' :' → logprob: -8.125323295593262
    3. ',' → logprob: -11.000323295593262
    4. '}' → logprob: -12.500323295593262
    5. '2' → logprob: -13.625323295593262
    6. '1' → logprob: -13.750323295593262
    7. '0' → logprob: -13.750323295593262
    8. ')' → logprob: -14.250323295593262
    9. ':return' → logprob: -14.875323295593262
    10. '=' → logprob: -15.375323295593262

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25263112783432007
    2. '1' → logprob: -1.5026311874389648
    3. ' True' → logprob: -8.127631187438965
    4. 'True' → logprob: -8.877631187438965
    5. '0' → logprob: -9.377631187438965
    6. '[' → logprob: -10.002631187438965
    7. ' [' → logprob: -10.377631187438965
    8. '(' → logprob: -11.440131187438965
    9. '   ' → logprob: -11.690131187438965
    10. ' '' → logprob: -11.690131187438965

Token 10: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0102196941152215
    2. ' ' → logprob: -4.635219573974609
    3. '0' → logprob: -8.76021957397461
    4. 'True' → logprob: -9.38521957397461
    5. '[' → logprob: -9.51021957397461
    6. '   ' → logprob: -10.51021957397461
    7. '2' → logprob: -10.88521957397461
    8. '{' → logprob: -10.88521957397461
    9. '(' → logprob: -11.19771957397461
    10. ' True' → logprob: -11.32271957397461

Token 11: '}' (ID: 92)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003041174029931426
    2. '}' → logprob: -5.8780412673950195
    3. ',
' → logprob: -8.75304126739502
    4. ' }' → logprob: -10.00304126739502
    5. ' ,' → logprob: -10.75304126739502
    6. '   ' → logprob: -12.75304126739502
    7. ',

' → logprob: -13.12804126739502
    8. ')' → logprob: -13.37804126739502
    9. '1' → logprob: -13.50304126739502
    10. '2' → logprob: -14.00304126739502

Token 12: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14550161361694336
    2. ',' → logprob: -2.8955016136169434
    3. '\n' → logprob: -4.020501613616943
    4. '    
' → logprob: -4.145501613616943
    5. ',
' → logprob: -4.270501613616943
    6. '   ' → logprob: -5.145501613616943
    7. '```' → logprob: -5.270501613616943
    8. ' 
' → logprob: -5.395501613616943
    9. '' → logprob: -5.645501613616943
    10. '\' → logprob: -5.895501613616943

Token 13: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3853691816329956
    2. ',' → logprob: -2.135369300842285
    3. '   ' → logprob: -2.760369300842285
    4. '    
' → logprob: -3.135369300842285
    5. ',
' → logprob: -3.885369300842285
    6. '[' → logprob: -4.260369300842285
    7. '   
' → logprob: -4.510369300842285
    8. ' 
' → logprob: -4.635369300842285
    9. '  
' → logprob: -5.010369300842285
    10. '\n' → logprob: -5.135369300842285

Token 14: ' operations' (ID: 12084)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5190608501434326
    2. ' number' → logprob: -1.5190608501434326
    3. '0' → logprob: -3.5190608501434326
    4. ' factorial' → logprob: -3.7690608501434326
    5. ' Number' → logprob: -4.394061088562012
    6. ' def' → logprob: -4.519061088562012
    7. ' "' → logprob: -5.144061088562012
    8. '  ' → logprob: -5.144061088562012
    9. ' '' → logprob: -5.269061088562012
    10. ' The' → logprob: -5.269061088562012

Token 15: ' needed' (ID: 6118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4397526979446411
    2. '_count' → logprob: -1.6897526979446411
    3. ' ' → logprob: -2.3147525787353516
    4. '<|end|>' → logprob: -2.5647525787353516
    5. '_needed' → logprob: -2.5647525787353516
    6. ' =' → logprob: -2.9397525787353516
    7. '_required' → logprob: -3.0647525787353516
    8. ' needed' → logprob: -3.1897525787353516
    9. '  ' → logprob: -3.5647525787353516
    10. '<|end|>' → logprob: -3.6897525787353516

Token 16: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.15773741900920868
    2. ' for' → logprob: -2.1577374935150146
    3. 'for' → logprob: -4.6577372550964355
    4. '   ' → logprob: -5.1577372550964355
    5. 'to' → logprob: -5.5327372550964355
    6. 'def' → logprob: -6.0327372550964355
    7. '[' → logprob: -6.1577372550964355
    8. ' ' → logprob: -6.1577372550964355
    9. '```' → logprob: -6.6577372550964355
    10. ',' → logprob: -6.9077372550964355

Token 17: ' get' (ID: 717)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.27713942527770996
    2. ' reduce' → logprob: -1.77713942527771
    3. ' get' → logprob: -3.02713942527771
    4. 'reduce' → logprob: -4.652139663696289
    5. ' ' → logprob: -5.402139663696289
    6. ' make' → logprob: -5.902139663696289
    7. 'reach' → logprob: -6.152139663696289
    8. ' compute' → logprob: -6.152139663696289
    9. 'get' → logprob: -6.652139663696289
    10. ' convert' → logprob: -8.027139663696289

Token 18: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11312735825777054
    2. '1' → logprob: -2.6131274700164795
    3. ' to' → logprob: -4.1131272315979
    4. '2' → logprob: -4.4881272315979
    5. 'to' → logprob: -5.9881272315979
    6. ' n' → logprob: -6.3631272315979
    7. ' from' → logprob: -7.7381272315979
    8. '```' → logprob: -8.238127708435059
    9. 'from' → logprob: -8.238127708435059
    10. 'n' → logprob: -8.488127708435059

Token 19: '^' (ID: 61)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0563603639602661
    2. '2' → logprob: -1.9313603639602661
    3. 'def' → logprob: -2.4313602447509766
    4. '<|end|>' → logprob: -2.4313602447509766
    5. '\' → logprob: -3.1813602447509766
    6. '1' → logprob: -3.1813602447509766
    7. '```' → logprob: -3.3063602447509766
    8. '0' → logprob: -3.3063602447509766
    9. ' ' → logprob: -3.4313602447509766
    10. '    
' → logprob: -4.056360244750977

Token 20: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07106103748083115
    2. ' ' → logprob: -3.321061134338379
    3. '1' → logprob: -4.196061134338379
    4. '}' → logprob: -4.571061134338379
    5. '0' → logprob: -5.821061134338379
    6. ' }' → logprob: -6.071061134338379
    7. ',' → logprob: -7.696061134338379
    8. ')' → logprob: -8.571061134338379
    9. '_' → logprob: -8.571061134338379
    10. '=' → logprob: -8.946061134338379

Token 21: ' is' (ID: 382)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1973345279693604
    2. '   ' → logprob: -2.0723345279693604
    3. '```' → logprob: -2.0723345279693604
    4. '    
' → logprob: -2.3223345279693604
    5. '\n' → logprob: -2.4473345279693604
    6. '[' → logprob: -2.6973345279693604
    7. '\' → logprob: -2.8223345279693604
    8. ' 
' → logprob: -3.5723345279693604
    9. ',' → logprob: -3.9473345279693604
    10. '  
' → logprob: -4.197334289550781

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4288255274295807
    2. '0' → logprob: -1.0538254976272583
    3. '1' → logprob: -9.053825378417969
    4. '   ' → logprob: -13.178825378417969
    5. '  ' → logprob: -13.428825378417969
    6. '    ' → logprob: -13.678825378417969
    7. '```' → logprob: -14.553825378417969
    8. ' ' → logprob: -14.928825378417969
    9. '2' → logprob: -14.991325378417969
    10. 'def' → logprob: -15.116325378417969

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011109835468232632
    2. ' ' → logprob: -4.511109828948975
    3. '1' → logprob: -10.511110305786133
    4. ' zero' → logprob: -10.886110305786133
    5. 'zero' → logprob: -11.136110305786133
    6. '  ' → logprob: -15.448610305786133
    7. '```' → logprob: -15.573610305786133
    8. '۰' → logprob: -15.886110305786133
    9. ' a' → logprob: -16.261110305786133
    10. ' ' → logprob: -16.511110305786133

Token 24: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9379003643989563
    2. '
' → logprob: -1.1879003047943115
    3. '    
' → logprob: -1.5629003047943115
    4. '   
' → logprob: -3.6879003047943115
    5. ' 
' → logprob: -4.062900543212891
    6. '\' → logprob: -4.312900543212891
    7. '  
' → logprob: -4.812900543212891
    8. ',' → logprob: -5.187900543212891
    9. '```' → logprob: -5.187900543212891
    10. '\n' → logprob: -5.437900543212891

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01335444487631321
    2. '
' → logprob: -4.763354301452637
    3. '    
' → logprob: -5.763354301452637
    4. 'n' → logprob: -7.763354301452637
    5. 'def' → logprob: -8.638354301452637
    6. ' for' → logprob: -8.888354301452637
    7. '   
' → logprob: -9.013354301452637
    8. '    ' → logprob: -9.138354301452637
    9. ' ' → logprob: -9.263354301452637
    10. '```' → logprob: -9.263354301452637

Token 26: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8527557849884033
    2. ' for' → logprob: -1.6027557849884033
    3. 'n' → logprob: -1.7277557849884033
    4. 'x' → logprob: -2.6027557849884033
    5. 'for' → logprob: -2.9777557849884033
    6. ' ' → logprob: -3.1027557849884033
    7. ' n' → logprob: -5.102755546569824
    8. ' x' → logprob: -5.227755546569824
    9. ' 
' → logprob: -6.102755546569824
    10. '    
' → logprob: -6.227755546569824

Token 27: ' min' (ID: 1349)
  Prédit: ' operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operations' → logprob: -1.0255672931671143
    2. ' helper' → logprob: -1.2755672931671143
    3. ' get' → logprob: -2.2755672931671143
    4. ' dfs' → logprob: -2.9005672931671143
    5. ' count' → logprob: -3.2755672931671143
    6. ' compute' → logprob: -3.5255672931671143
    7. ' f' → logprob: -3.7755672931671143
    8. ' ' → logprob: -4.150567054748535
    9. ' calc' → logprob: -4.150567054748535
    10. ' calculate' → logprob: -4.275567054748535

Token 28: '_ops' (ID: 53418)
  Prédit: '_operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.19670963287353516
    2. '_' → logprob: -2.321709632873535
    3. '_ops' → logprob: -2.821709632873535
    4. '_op' → logprob: -4.446709632873535
    5. '_steps' → logprob: -6.071709632873535
    6. '(' → logprob: -6.071709632873535
    7. '_count' → logprob: -7.571709632873535
    8. '_num' → logprob: -7.946709632873535
    9. 'imum' → logprob: -8.196709632873535
    10. '_val' → logprob: -8.321709632873535

Token 29: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7164182066917419
    2. '_to' → logprob: -0.7164182066917419
    3. ' (' → logprob: -4.591418266296387
    4. 'to' → logprob: -5.841418266296387
    5. '(x' → logprob: -6.216418266296387
    6. 'To' → logprob: -6.341418266296387
    7. ' to' → logprob: -6.466418266296387
    8. '_for' → logprob: -6.966418266296387
    9. '(n' → logprob: -7.091418266296387
    10. '_' → logprob: -7.216418266296387

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010142299579456449
    2. ')' → logprob: -7.126014232635498
    3. '   ' → logprob: -9.62601375579834
    4. ' ):' → logprob: -9.62601375579834
    5. '):
' → logprob: -10.12601375579834
    6. ':' → logprob: -11.25101375579834
    7. ',' → logprob: -11.37601375579834
    8. ' ' → logprob: -12.75101375579834
    9. '       ' → logprob: -12.87601375579834
    10. '  ' → logprob: -13.50101375579834

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13184121251106262
    2. '   ' → logprob: -2.3818411827087402
    3. '    ' → logprob: -4.63184118270874
    4. ' ' → logprob: -4.63184118270874
    5. '<|end|>' → logprob: -5.25684118270874
    6. ':' → logprob: -5.75684118270874
    7. ' if' → logprob: -7.13184118270874
    8. ')' → logprob: -7.25684118270874
    9. ',' → logprob: -8.256841659545898
    10. '     ' → logprob: -8.506841659545898

Token 32: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027552055194973946
    2. '   ' → logprob: -4.402552127838135
    3. 'if' (adapté à ' if') → logprob: -5.652552127838135
    4. ' if' → logprob: -5.652552127838135
    5. '\n' → logprob: -6.277552127838135
    6. '\' → logprob: -6.527552127838135
    7. '    ' → logprob: -6.527552127838135
    8. '           ' → logprob: -7.402552127838135
    9. ' ' → logprob: -7.777552127838135
    10. '        ' → logprob: -7.777552127838135

Token 33: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0046227299608290195
    2. 'n' → logprob: -5.379622936248779
    3. ' ' → logprob: -13.254622459411621
    4. ' ' → logprob: -14.879622459411621
    5. '	n' → logprob: -15.379622459411621
    6. '    ' → logprob: -16.379623413085938
    7. '   ' → logprob: -18.129623413085938
    8. '_n' → logprob: -18.504623413085938
    9. ' not' → logprob: -19.004623413085938
    10. ')n' → logprob: -19.004623413085938

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022351155057549477
    2. ' ==' → logprob: -4.022351264953613
    3. '==' → logprob: -6.397351264953613
    4. ' not' → logprob: -6.647351264953613
    5. ' ' → logprob: -7.272351264953613
    6. 'in' → logprob: -7.647351264953613
    7. 'not' → logprob: -10.772351264953613
    8. ' <=' → logprob: -11.147351264953613
    9. '   ' → logprob: -12.522351264953613
    10. ' <' → logprob: -12.772351264953613

Token 35: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.011055603623390198
    2. 'memo' → logprob: -4.5110554695129395
    3. ' meme' → logprob: -12.261055946350098
    4. ' ' → logprob: -13.261055946350098
    5. 'm' → logprob: -14.886055946350098
    6. ' memoir' → logprob: -15.136055946350098
    7. '.memo' → logprob: -15.761055946350098
    8. ' memory' → logprob: -16.26105499267578
    9. ' ' → logprob: -16.38605499267578
    10. '   ' → logprob: -16.38605499267578

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021295747137628496
    2. ':
' → logprob: -9.250212669372559
    3. ':return' → logprob: -9.375212669372559
    4. '):' → logprob: -11.375212669372559
    5. ' :' → logprob: -11.500212669372559
    6. '       ' → logprob: -11.875212669372559
    7. '           ' → logprob: -13.625212669372559
    8. ':**' → logprob: -14.125212669372559
    9. '   ' → logprob: -15.500212669372559
    10. '**' → logprob: -15.625212669372559

Token 37: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07275182753801346
    2. '           ' → logprob: -2.822751760482788
    3. ':
' → logprob: -4.947751998901367
    4. ':return' → logprob: -5.697751998901367
    5. ' return' → logprob: -9.447751998901367
    6. ' :' → logprob: -9.822751998901367
    7. '):' → logprob: -10.197751998901367
    8. 'return' → logprob: -10.822751998901367
    9. '       ' → logprob: -11.072751998901367
    10. '               ' → logprob: -11.822751998901367

Token 38: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6915287375450134
    2. ' return' → logprob: -0.9415287375450134
    3. 'return' (adapté à ' return') → logprob: -2.941528797149658
    4. '       ' → logprob: -2.941528797149658
    5. '               ' → logprob: -6.816528797149658
    6. ':return' → logprob: -7.191528797149658
    7. '   ' → logprob: -7.441528797149658
    8. ' ' → logprob: -8.3165283203125
    9. '```' → logprob: -8.6915283203125
    10. '<|end|>' → logprob: -8.6915283203125

Token 39: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.018150413408875465
    2. 'memo' → logprob: -4.018150329589844
    3. 'm' → logprob: -15.143150329589844
    4. ' meme' → logprob: -16.268150329589844
    5. ' mem' → logprob: -16.643150329589844
    6. ' memoir' → logprob: -16.768150329589844
    7. '.memo' → logprob: -17.518150329589844
    8. ' ' → logprob: -17.518150329589844
    9. ' ' → logprob: -17.768150329589844
    10. ' m' → logprob: -17.893150329589844

Token 40: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00030042731668800116
    2. '[' → logprob: -8.125300407409668
    3. ' [' → logprob: -12.750300407409668
    4. 'n' → logprob: -15.125300407409668
    5. '

' → logprob: -15.500300407409668
    6. '[
' → logprob: -15.500300407409668
    7. ' ' → logprob: -16.125301361083984
    8. '
' → logprob: -16.250301361083984
    9. '```' → logprob: -16.250301361083984
    10. '\[' → logprob: -16.375301361083984

Token 41: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025896925944834948
    2. ')' → logprob: -6.627589702606201
    3. '])' → logprob: -7.127589702606201
    4. ']
' → logprob: -7.752589702606201
    5. ']
' → logprob: -11.502589225769043
    6. ')]' → logprob: -11.627589225769043
    7. '       ' → logprob: -12.002589225769043
    8. ' ]' → logprob: -13.502589225769043
    9. '])
' → logprob: -13.502589225769043
    10. ']

' → logprob: -14.127589225769043

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10800793766975403
    2. '
' → logprob: -2.8580079078674316
    3. '        
' → logprob: -3.8580079078674316
    4. '\n' → logprob: -4.358007907867432
    5. '<|end|>' → logprob: -5.233007907867432
    6. '    
' → logprob: -6.483007907867432
    7. 'newline' → logprob: -7.358007907867432
    8. '
' → logprob: -7.733007907867432
    9. '\' → logprob: -7.858007907867432
    10. '  
' → logprob: -7.983007907867432

Token 43: ' ops' (ID: 26973)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45595797896385193
    2. '\n' → logprob: -2.0809578895568848
    3. '        
' → logprob: -2.2059578895568848
    4. '    
' → logprob: -3.4559578895568848
    5. ' 
' → logprob: -4.080957889556885
    6. '
' → logprob: -4.205957889556885
    7. ' if' → logprob: -4.205957889556885
    8. 'if' → logprob: -4.580957889556885
    9. 'n' → logprob: -4.830957889556885
    10. '   ' → logprob: -5.205957889556885

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046875146217644215
    2. '=' → logprob: -5.379687309265137
    3. '    ' → logprob: -11.129687309265137
    4. '_needed' → logprob: -11.129687309265137
    5. ' ' → logprob: -11.254687309265137
    6. '   ' → logprob: -11.754687309265137
    7. '_count' → logprob: -12.254687309265137
    8. '        ' → logprob: -13.004687309265137
    9. 's' → logprob: -13.379687309265137
    10. '  ' → logprob: -14.004687309265137

Token 45: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5277794599533081
    2. 'min' → logprob: -1.027779459953308
    3. ' float' → logprob: -3.6527795791625977
    4. ' min' → logprob: -3.9027795791625977
    5. 'main' → logprob: -6.277779579162598
    6. '1' → logprob: -6.902779579162598
    7. 'n' → logprob: -7.152779579162598
    8. '   ' → logprob: -7.777779579162598
    9. 'None' → logprob: -7.902779579162598
    10. ' ' → logprob: -8.027779579162598

Token 46: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -8.77627644513268e-06
    2. '("' → logprob: -12.500008583068848
    3. 'inf' → logprob: -12.750008583068848
    4. '('+' → logprob: -14.375008583068848
    5. '.inf' → logprob: -14.625008583068848
    6. '(' → logprob: -15.125008583068848
    7. '('-' → logprob: -15.375008583068848
    8. '_inf' → logprob: -15.500008583068848
    9. ' inf' → logprob: -15.875008583068848
    10. '(\'' → logprob: -16.875009536743164

Token 47: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.7432603272027336e-06
    2. 'in' → logprob: -13.625001907348633
    3. ''' → logprob: -15.750001907348633
    4. 'info' → logprob: -15.875001907348633
    5. ''in' → logprob: -16.625001907348633
    6. '∞' → logprob: -17.500001907348633
    7. 'i' → logprob: -18.625001907348633
    8. '.inf' → logprob: -19.000001907348633
    9. '_inf' → logprob: -19.000001907348633
    10. '6' → logprob: -19.125001907348633

Token 48: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044068231363780797
    2. '')' → logprob: -8.25044059753418
    3. ' )' → logprob: -9.25044059753418
    4. ')
' → logprob: -9.62544059753418
    5. '())' → logprob: -11.62544059753418
    6. '()' → logprob: -12.25044059753418
    7. '))' → logprob: -14.37544059753418
    8. '       ' → logprob: -14.50044059753418
    9. ')
' → logprob: -15.25044059753418
    10. '),' → logprob: -15.50044059753418

Token 49: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7651472091674805
    2. '<|end|>' → logprob: -1.2651472091674805
    3. '\n' → logprob: -2.5151472091674805
    4. ')' → logprob: -2.5151472091674805
    5. '       ' → logprob: -3.3901472091674805
    6. '        
' → logprob: -4.2651472091674805
    7. '<|end|>' → logprob: -4.7651472091674805
    8. '\' → logprob: -5.0151472091674805
    9. ' 
' → logprob: -5.2651472091674805
    10. '    
' → logprob: -5.7651472091674805

Token 50: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7353219985961914
    2. 'for' → logprob: -1.2353219985961914
    3. '       ' → logprob: -1.9853219985961914
    4. ' ' → logprob: -3.2353219985961914
    5. '<|end|>' → logprob: -3.8603219985961914
    6. '\n' → logprob: -4.610321998596191
    7. ' 
' → logprob: -4.985321998596191
    8. '
' → logprob: -5.610321998596191
    9. '\' → logprob: -6.110321998596191
    10. '   ' → logprob: -6.485321998596191

Token 51: ' Try' (ID: 14720)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03403199836611748
    2. 'for' → logprob: -3.534032106399536
    3. '       ' → logprob: -5.534031867980957
    4. '<|end|>' → logprob: -9.034031867980957
    5. ' ' → logprob: -9.784031867980957
    6. ' range' → logprob: -9.909031867980957
    7. '   ' → logprob: -10.034031867980957
    8. '        ' → logprob: -11.409031867980957
    9. '```' → logprob: -12.034031867980957
    10. ' ' → logprob: -12.159031867980957

Token 52: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8872161507606506
    2. ' n' → logprob: -2.137216091156006
    3. '   ' → logprob: -2.637216091156006
    4. ' to' → logprob: -2.637216091156006
    5. '    ' → logprob: -3.137216091156006
    6. '           ' → logprob: -3.637216091156006
    7. ' range' → logprob: -3.637216091156006
    8. ' ' → logprob: -3.762216091156006
    9. ' all' → logprob: -3.762216091156006
    10. ' x' → logprob: -3.762216091156006

Token 53: ' build' (ID: 3024)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17733004689216614
    2. ' for' → logprob: -3.1773300170898438
    3. 'range' → logprob: -3.3023300170898438
    4. ' n' → logprob: -3.8023300170898438
    5. ' i' → logprob: -4.552330017089844
    6. ' multiply' → logprob: -4.802330017089844
    7. 'for' → logprob: -4.927330017089844
    8. ' min' → logprob: -5.302330017089844
    9. 'n' → logprob: -5.427330017089844
    10. ' divide' → logprob: -5.802330017089844

Token 54: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1298602968454361
    2. 'n' → logprob: -2.1298604011535645
    3. ' up' → logprob: -7.0048604011535645
    4. ' the' → logprob: -7.7548604011535645
    5. ' all' → logprob: -8.754859924316406
    6. ' for' → logprob: -9.129859924316406
    7. '   ' → logprob: -9.129859924316406
    8. 's' → logprob: -9.254859924316406
    9. '(n' → logprob: -9.254859924316406
    10. ' a' → logprob: -9.504859924316406

Token 55: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7191864252090454
    2. ' from' → logprob: -1.0941864252090454
    3. 'from' → logprob: -2.469186305999756
    4. ' ' → logprob: -3.219186305999756
    5. ' using' → logprob: -4.094186305999756
    6. '    ' → logprob: -4.969186305999756
    7. '       ' → logprob: -5.219186305999756
    8. '        ' → logprob: -5.344186305999756
    9. '   ' → logprob: -5.469186305999756
    10. 'by' → logprob: -5.594186305999756

Token 56: ' multiplication' (ID: 86340)
  Prédit: ' doubling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doubling' → logprob: -0.21649512648582458
    2. ' multiplying' → logprob: -2.8414950370788574
    3. ' adding' → logprob: -2.9664950370788574
    4. 'multip' → logprob: -4.216495037078857
    5. ' using' → logprob: -4.216495037078857
    6. ' multiplication' → logprob: -4.466495037078857
    7. ' addition' → logprob: -5.091495037078857
    8. ' multip' → logprob: -5.091495037078857
    9. 'dou' → logprob: -5.841495037078857
    10. 'adding' → logprob: -5.841495037078857

Token 57: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21996799111366272
    2. ' by' → logprob: -1.9699679613113403
    3. ' for' → logprob: -4.469967842102051
    4. ' and' → logprob: -4.469967842102051
    5. '   ' → logprob: -5.094967842102051
    6. ',' → logprob: -5.469967842102051
    7. ' from' → logprob: -5.594967842102051
    8. '<|end|>' → logprob: -5.719967842102051
    9. '        
' → logprob: -5.969967842102051
    10. 'by' → logprob: -5.969967842102051

Token 58: ' two' (ID: 1920)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1512227058410645
    2. ' previous' → logprob: -2.1512227058410645
    3. 'previous' → logprob: -2.5262227058410645
    4. ' any' → logprob: -2.5262227058410645
    5. ' ' → logprob: -2.7762227058410645
    6. ' smaller' → logprob: -2.9012227058410645
    7. ' all' → logprob: -3.1512227058410645
    8. ' range' → logprob: -3.4012227058410645
    9. 'n' → logprob: -3.6512227058410645
    10. 'range' → logprob: -3.9012227058410645

Token 59: ' smaller' (ID: 13679)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.3602101504802704
    2. ' smaller' → logprob: -1.6102101802825928
    3. ' integers' → logprob: -3.2352101802825928
    4. 'numbers' → logprob: -4.110209941864014
    5. ' ' → logprob: -4.485209941864014
    6. 'sm' → logprob: -4.610209941864014
    7. ')' → logprob: -5.360209941864014
    8. ' factors' → logprob: -5.610209941864014
    9. '   ' → logprob: -6.235209941864014
    10. 'n' → logprob: -6.360209941864014

Token 60: ' ex' (ID: 513)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.042728640139102936
    2. ' integers' → logprob: -3.5427286624908447
    3. 'numbers' → logprob: -5.792728424072266
    4. ' ' → logprob: -6.167728424072266
    5. ')' → logprob: -6.292728424072266
    6. ' values' → logprob: -6.542728424072266
    7. 's' → logprob: -6.917728424072266
    8. ' factors' → logprob: -6.917728424072266
    9. 'n' → logprob: -7.417728424072266
    10. ' n' → logprob: -7.917728424072266

Token 61: 'ponents' (ID: 4331)
  Prédit: 'pressions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressions' → logprob: -0.023593319579958916
    2. 'pression' → logprob: -5.398593425750732
    3. '           ' → logprob: -5.523593425750732
    4. 'ponents' → logprob: -5.773593425750732
    5. 'press' → logprob: -5.773593425750732
    6. '   ' → logprob: -5.773593425750732
    7. 'p' → logprob: -6.648593425750732
    8. '```' → logprob: -6.773593425750732
    9. '       ' → logprob: -7.648593425750732
    10. 'pres' → logprob: -7.898593425750732

Token 62: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1097739040851593
    2. ' ' → logprob: -3.609773874282837
    3. '<|end|>' → logprob: -3.859773874282837
    4. ':' → logprob: -4.859774112701416
    5. ',' → logprob: -4.859774112701416
    6. ' for' → logprob: -4.984774112701416
    7. ')' → logprob: -5.234774112701416
    8. '        ' → logprob: -5.484774112701416
    9. '   ' → logprob: -5.859774112701416
    10. '\t' → logprob: -5.984774112701416

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10204677283763885
    2. '\n' → logprob: -3.4770467281341553
    3. ' ' → logprob: -4.477046966552734
    4. '\' → logprob: -4.477046966552734
    5. '        
' → logprob: -4.477046966552734
    6. ')' → logprob: -4.602046966552734
    7. '<|end|>' → logprob: -5.477046966552734
    8. '   ' → logprob: -5.602046966552734
    9. ',' → logprob: -6.227046966552734
    10. '        ' → logprob: -6.227046966552734

Token 64: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6443808674812317
    2. ' for' → logprob: -0.8943808674812317
    3. '       ' → logprob: -3.144380807876587
    4. ' ' → logprob: -4.019381046295166
    5. '        ' → logprob: -6.769381046295166
    6. ')' → logprob: -7.019381046295166
    7. '   ' → logprob: -7.144381046295166
    8. '    ' → logprob: -7.394381046295166
    9. '  ' → logprob: -8.019380569458008
    10. '<|end|>' → logprob: -8.269380569458008

Token 65: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001751103438436985
    2. 'i' → logprob: -6.501750946044922
    3. ' ' → logprob: -9.251750946044922
    4. ' x' → logprob: -9.376750946044922
    5. ' j' → logprob: -10.501750946044922
    6. '	i' → logprob: -11.251750946044922
    7. '```' → logprob: -11.626750946044922
    8. ' a' → logprob: -12.376750946044922
    9. ' k' → logprob: -12.501750946044922
    10. '   ' → logprob: -13.126750946044922

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012073767138645053
    2. 'in' → logprob: -7.37620735168457
    3. ' ' → logprob: -7.50120735168457
    4. '  ' → logprob: -12.00120735168457
    5. '	in' → logprob: -12.12620735168457
    6. ' i' → logprob: -12.37620735168457
    7. '<|end|>' → logprob: -12.50120735168457
    8. ',' → logprob: -13.37620735168457
    9. '=' → logprob: -13.50120735168457
    10. '1' → logprob: -14.25120735168457

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0017373013542965055
    2. 'range' → logprob: -6.376737117767334
    3. ' ' → logprob: -10.751737594604492
    4. '	range' → logprob: -12.251737594604492
    5. '   ' → logprob: -12.501737594604492
    6. '  ' → logprob: -12.751737594604492
    7. ' xrange' → logprob: -14.501737594604492
    8. '(range' → logprob: -14.501737594604492
    9. '[' → logprob: -15.126737594604492
    10. '```' → logprob: -15.501737594604492

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014025058771949261
    2. '(n' → logprob: -9.000140190124512
    3. ' (' → logprob: -12.000140190124512
    4. ' ' → logprob: -12.125140190124512
    5. '1' → logprob: -12.250140190124512
    6. '(
' → logprob: -15.625140190124512
    7. '(i' → logprob: -16.500141143798828
    8. '2' → logprob: -16.875141143798828
    9. '(

' → logprob: -17.000141143798828
    10. '   ' → logprob: -17.625141143798828

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0071006054058671
    2. '2' → logprob: -5.007100582122803
    3. ' ' → logprob: -8.007101058959961
    4. '(' → logprob: -10.507101058959961
    5. '   ' → logprob: -11.257101058959961
    6. 'n' → logprob: -11.507101058959961
    7. '    ' → logprob: -14.507101058959961
    8. '(n' → logprob: -14.632101058959961
    9. '       ' → logprob: -15.132101058959961
    10. '  ' → logprob: -15.632101058959961

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008713730610907078
    2. ' ,' → logprob: -4.758713722229004
    3. ',n' → logprob: -9.258713722229004
    4. 'n' → logprob: -13.008713722229004
    5. '(n' → logprob: -14.133713722229004
    6. '1' → logprob: -14.508713722229004
    7. ' n' → logprob: -15.383713722229004
    8. '   ' → logprob: -16.38371467590332
    9. ',
' → logprob: -17.13371467590332
    10. '    ' → logprob: -17.13371467590332

Token 71: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5760648846626282
    2. 'n' → logprob: -0.8260648846626282
    3. '(n' → logprob: -9.451065063476562
    4. ' (' → logprob: -10.201065063476562
    5. '	n' → logprob: -12.326065063476562
    6. '(' → logprob: -12.576065063476562
    7. ' ' → logprob: -13.576065063476562
    8. 'int' → logprob: -15.451065063476562
    9. ' int' → logprob: -15.951065063476562
    10. '   ' → logprob: -16.201065063476562

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7189595103263855
    2. ' ):' → logprob: -0.7189595103263855
    3. '):
' → logprob: -4.468959331512451
    4. '//' → logprob: -5.218959331512451
    5. ' ):
' → logprob: -5.343959331512451
    6. ' //' → logprob: -6.218959331512451
    7. ' )' → logprob: -6.968959331512451
    8. ')' → logprob: -7.343959331512451
    9. ' ' → logprob: -8.84395980834961
    10. '   ' → logprob: -10.21895980834961

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9024242162704468
    2. ':' → logprob: -1.1524242162704468
    3. '       ' → logprob: -2.0274243354797363
    4. '<|end|>' → logprob: -2.2774243354797363
    5. '):' → logprob: -4.902424335479736
    6. ' ' → logprob: -5.152424335479736
    7. '        ' → logprob: -5.152424335479736
    8. '+' → logprob: -5.277424335479736
    9. '<|end|>' → logprob: -5.527424335479736
    10. ')' → logprob: -5.902424335479736

Token 74: ' j' (ID: 441)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6439002752304077
    2. ' ops' → logprob: -1.0189002752304077
    3. '               ' → logprob: -3.2689003944396973
    4. ' if' → logprob: -3.7689003944396973
    5. '           ' → logprob: -3.8939003944396973
    6. 'ops' → logprob: -5.018900394439697
    7. ' ' → logprob: -5.393900394439697
    8. ' operations' → logprob: -5.893900394439697
    9. ' cost' → logprob: -6.143900394439697
    10. 'for' → logprob: -6.143900394439697

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759440064430237
    2. '=' → logprob: -0.8259440064430237
    3. '=n' → logprob: -12.825943946838379
    4. ' =
' → logprob: -14.200943946838379
    5. '=
' → logprob: -14.700943946838379
    6. ' in' → logprob: -15.200943946838379
    7. '＝' → logprob: -15.950943946838379
    8. 'n' → logprob: -16.075944900512695
    9. '=

' → logprob: -16.700944900512695
    10. ')' → logprob: -16.950944900512695

Token 76: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20142970979213715
    2. ' n' → logprob: -1.7014297246932983
    3. '   ' → logprob: -11.45142936706543
    4. '    ' → logprob: -12.70142936706543
    5. '	n' → logprob: -13.32642936706543
    6. ' ' → logprob: -14.20142936706543
    7. ')n' → logprob: -16.57642936706543
    8. '<n' → logprob: -16.70142936706543
    9. '(n' → logprob: -16.82642936706543
    10. ' ' → logprob: -16.95142936706543

Token 77: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10247047245502472
    2. '-' → logprob: -2.3524703979492188
    3. '-i' → logprob: -6.102470397949219
    4. ' ' → logprob: -10.727470397949219
    5. ' /' → logprob: -14.852470397949219
    6. '-token' → logprob: -15.102470397949219
    7. '/i' → logprob: -15.227470397949219
    8. '-ai' → logprob: -15.477470397949219
    9. '   ' → logprob: -15.602470397949219
    10. '/' → logprob: -16.10247039794922

Token 78: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015023599844425917
    2. ' i' → logprob: -6.501502513885498
    3. '	i' → logprob: -17.001502990722656
    4. ' ' → logprob: -17.876502990722656
    5. '   ' → logprob: -19.126502990722656
    6. '1' → logprob: -21.126502990722656
    7. '```' → logprob: -21.501502990722656
    8. '*i' → logprob: -21.876502990722656
    9. '  ' → logprob: -22.001502990722656
    10. ''i' → logprob: -22.251502990722656

Token 79: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29938262701034546
    2. '       ' → logprob: -2.4243826866149902
    3. '
' → logprob: -2.6743826866149902
    4. ')' → logprob: -3.7993826866149902
    5. ' 
' → logprob: -3.7993826866149902
    6. '               ' → logprob: -4.29938268661499
    7. ' ' → logprob: -4.42438268661499
    8. '            
' → logprob: -4.54938268661499
    9. '<|end|>' → logprob: -4.92438268661499
    10. ')
' → logprob: -6.04938268661499

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4374138414859772
    2. '
' → logprob: -1.9374138116836548
    3. '       ' → logprob: -2.3124139308929443
    4. '<|end|>' → logprob: -2.5624139308929443
    5. '            
' → logprob: -4.812413692474365
    6. ' 
' → logprob: -5.062413692474365
    7. ')' → logprob: -5.312413692474365
    8. '```' → logprob: -5.437413692474365
    9. '        
' → logprob: -5.937413692474365
    10. '  
' → logprob: -6.312413692474365

Token 81: ' #' (ID: 1069)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.23370122909545898
    2. ' ops' → logprob: -1.608701229095459
    3. ' cost' → logprob: -6.858701229095459
    4. ' current' → logprob: -7.108701229095459
    5. ' memo' → logprob: -7.108701229095459
    6. 'memo' → logprob: -7.108701229095459
    7. 'cost' → logprob: -7.233701229095459
    8. ' operations' → logprob: -7.733701229095459
    9. '_ops' → logprob: -7.733701229095459
    10. 'operations' → logprob: -7.983701229095459

Token 82: ' multiplication' (ID: 86340)
  Prédit: ' ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.4508225917816162
    2. 'ops' → logprob: -1.0758225917816162
    3. ' cost' → logprob: -4.325822830200195
    4. ' temp' → logprob: -6.325822830200195
    5. 'cost' → logprob: -6.325822830200195
    6. ' left' → logprob: -6.825822830200195
    7. ' op' → logprob: -7.700822830200195
    8. ' count' → logprob: -7.825822830200195
    9. ' current' → logprob: -7.950822830200195
    10. ' res' → logprob: -8.075822830200195

Token 83: ':' (ID: 25)
  Prédit: '_ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ops' → logprob: -0.3923216760158539
    2. '_cost' → logprob: -2.6423215866088867
    3. ' =' → logprob: -2.7673215866088867
    4. ' cost' → logprob: -2.8923215866088867
    5. ' ops' → logprob: -3.0173215866088867
    6. '           ' → logprob: -4.142321586608887
    7. 'cost' → logprob: -4.267321586608887
    8. '_count' → logprob: -4.392321586608887
    9. 'ops' → logprob: -4.392321586608887
    10. ' operations' → logprob: -5.142321586608887

Token 84: ' op' (ID: 991)
  Prédit: ' ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.15621210634708405
    2. ' memo' → logprob: -2.406212091445923
    3. 'ops' → logprob: -3.281212091445923
    4. 'memo' → logprob: -4.531212329864502
    5. ' min' → logprob: -5.406212329864502
    6. 'min' → logprob: -7.406212329864502
    7. ' op' → logprob: -8.156211853027344
    8. ' operations' → logprob: -9.031211853027344
    9. '               ' → logprob: -9.781211853027344
    10. '           ' → logprob: -9.781211853027344

Token 85: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000605933484621346
    2. 'er' → logprob: -8.750605583190918
    3. ' =' → logprob: -8.750605583190918
    4. '_count' → logprob: -9.000605583190918
    5. '1' → logprob: -9.500605583190918
    6. '_cost' → logprob: -10.500605583190918
    7. '=' → logprob: -11.000605583190918
    8. 'count' → logprob: -11.375605583190918
    9. '_' → logprob: -11.500605583190918
    10. '2' → logprob: -12.625605583190918

Token 86: ' i' (ID: 575)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.637001097202301
    2. 'get' → logprob: -1.7620010375976562
    3. 'min' → logprob: -1.7620010375976562
    4. ' min' → logprob: -2.8870010375976562
    5. 'multiply' → logprob: -4.012001037597656
    6. ' compute' → logprob: -4.637001037597656
    7. ' multiply' → logprob: -4.762001037597656
    8. ' reach' → logprob: -5.012001037597656
    9. 'combine' → logprob: -5.012001037597656
    10. ' combine' → logprob: -5.262001037597656

Token 87: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11801186949014664
    2. '+' → logprob: -2.618011951446533
    3. ')' → logprob: -3.618011951446533
    4. ']' → logprob: -5.618011951446533
    5. '}' → logprob: -5.993011951446533
    6. 's' → logprob: -6.368011951446533
    7. '=' → logprob: -7.243011951446533
    8. '   ' → logprob: -7.368011951446533
    9. ' ' → logprob: -7.743011951446533
    10. ')+' → logprob: -7.743011951446533

Token 88: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6041412949562073
    2. ' op' → logprob: -1.6041412353515625
    3. '1' → logprob: -2.6041412353515625
    4. ' min' → logprob: -2.7291412353515625
    5. ' ops' → logprob: -3.1041412353515625
    6. 'ops' → logprob: -3.2291412353515625
    7. 'min' → logprob: -3.7291412353515625
    8. 'memo' → logprob: -6.4791412353515625
    9. ' ' → logprob: -6.8541412353515625
    10. ' memo' → logprob: -7.1041412353515625

Token 89: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4173274040222168
    2. ' to' → logprob: -1.1673274040222168
    3. '[j' → logprob: -4.667327404022217
    4. ' for' → logprob: -5.167327404022217
    5. '[i' → logprob: -5.292327404022217
    6. '(i' → logprob: -5.542327404022217
    7. 'for' → logprob: -5.667327404022217
    8. '(j' → logprob: -6.667327404022217
    9. 's' → logprob: -8.167327880859375
    10. '   ' → logprob: -8.417327880859375

Token 90: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002481246367096901
    2. ' j' → logprob: -6.002481460571289
    3. '   ' → logprob: -12.627481460571289
    4. '	j' → logprob: -14.127481460571289
    5. '[j' → logprob: -14.377481460571289
    6. '    ' → logprob: -15.002481460571289
    7. ' ' → logprob: -15.002481460571289
    8. '```' → logprob: -15.752481460571289
    9. '  ' → logprob: -16.50248146057129
    10. '           ' → logprob: -16.62748146057129

Token 91: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07009026408195496
    2. '+' → logprob: -2.6950902938842773
    3. '           ' → logprob: -9.695090293884277
    4. ' ' → logprob: -9.820090293884277
    5. ' +
' → logprob: -11.570090293884277
    6. '       ' → logprob: -12.195090293884277
    7. ')' → logprob: -12.195090293884277
    8. '               ' → logprob: -12.320090293884277
    9. ' plus' → logprob: -13.320090293884277
    10. '   ' → logprob: -13.445090293884277

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12696579098701477
    2. ' ' → logprob: -2.1269657611846924
    3. '   ' → logprob: -11.126965522766113
    4. '+' → logprob: -11.751965522766113
    5. '  ' → logprob: -12.751965522766113
    6. '2' → logprob: -12.876965522766113
    7. ' +' → logprob: -12.876965522766113
    8. '    ' → logprob: -13.689465522766113
    9. ' ' → logprob: -13.814465522766113
    10. '0' → logprob: -14.314465522766113

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038288687937892973
    2. ' ' → logprob: -7.875382900238037
    3. '   ' → logprob: -14.000382423400879
    4. '2' → logprob: -14.625382423400879
    5. '+' → logprob: -14.750382423400879
    6. '  ' → logprob: -14.937882423400879
    7. '```' → logprob: -15.812882423400879
    8. '0' → logprob: -16.125383377075195
    9. ' +' → logprob: -16.750383377075195
    10. '
' → logprob: -17.125383377075195

Token 94: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23015722632408142
    2. ' +' → logprob: -2.1051571369171143
    3. ')' → logprob: -3.8551571369171143
    4. '       ' → logprob: -3.9801571369171143
    5. '+' → logprob: -3.9801571369171143
    6. '               ' → logprob: -4.980157375335693
    7. '
' → logprob: -5.230157375335693
    8. '<|end|>' → logprob: -5.980157375335693
    9. ' 
' → logprob: -6.480157375335693
    10. '            
' → logprob: -6.480157375335693

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027221249416470528
    2. '       ' → logprob: -4.527221202850342
    3. '               ' → logprob: -5.652221202850342
    4. '            
' → logprob: -6.152221202850342
    5. '+' → logprob: -6.277221202850342
    6. ' 
' → logprob: -6.402221202850342
    7. '<|end|>' → logprob: -6.902221202850342
    8. '
' → logprob: -7.152221202850342
    9. ')' → logprob: -7.152221202850342
    10. '  
' → logprob: -7.402221202850342

Token 96: ' ops' (ID: 26973)
  Prédit: ' ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.7058563828468323
    2. 'ops' (adapté à ' ops') → logprob: -0.8308563828468323
    3. '           ' → logprob: -3.5808563232421875
    4. 'temp' → logprob: -4.4558563232421875
    5. ' cost' → logprob: -4.8308563232421875
    6. ' temp' → logprob: -5.4558563232421875
    7. 'cost' → logprob: -5.4558563232421875
    8. 'current' → logprob: -5.7058563232421875
    9. ' current' → logprob: -5.9558563232421875
    10. ' operations' → logprob: -6.4558563232421875

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889165729284286
    2. '=' → logprob: -2.5788917541503906
    3. ' ' → logprob: -14.45389175415039
    4. '   ' → logprob: -14.70389175415039
    5. '=min' → logprob: -15.20389175415039
    6. 's' → logprob: -16.32889175415039
    7. ' =
' → logprob: -16.57889175415039
    8. '＝' → logprob: -16.57889175415039
    9. '       ' → logprob: -16.82889175415039
    10. '    ' → logprob: -16.82889175415039

Token 98: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.023245595395565033
    2. 'min' → logprob: -3.7732455730438232
    3. '	min' → logprob: -15.648245811462402
    4. ' ' → logprob: -18.273244857788086
    5. '(min' → logprob: -19.398244857788086
    6. '   ' → logprob: -19.398244857788086
    7. '.min' → logprob: -19.523244857788086
    8. ',min' → logprob: -19.648244857788086
    9. '[min' → logprob: -19.773244857788086
    10. '_min' → logprob: -20.148244857788086

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019936825265176594
    2. '(m' → logprob: -8.875199317932129
    3. '(
' → logprob: -10.250199317932129
    4. '(min' → logprob: -11.250199317932129
    5. '(op' → logprob: -11.750199317932129
    6. ' (' → logprob: -13.375199317932129
    7. '(

' → logprob: -13.875199317932129
    8. '((' → logprob: -15.625199317932129
    9. '(
' → logprob: -15.875199317932129
    10. '(mem' → logprob: -16.500200271606445

Token 100: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.014217919670045376
    2. 'memo' → logprob: -4.889217853546143
    3. ' ops' → logprob: -5.764217853546143
    4. 'min' → logprob: -5.764217853546143
    5. 'op' → logprob: -9.3892183303833
    6. ' memo' → logprob: -9.5142183303833
    7. '   ' → logprob: -10.2642183303833
    8. ' min' → logprob: -10.6392183303833
    9. 'm' → logprob: -10.8892183303833
    10. '       ' → logprob: -11.2642183303833

Token 101: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5123919248580933
    2. ',' → logprob: -1.1373919248580933
    3. '(m' → logprob: -2.762392044067383
    4. ' (' → logprob: -4.887392044067383
    5. '(min' → logprob: -5.637392044067383
    6. ' ,' → logprob: -6.012392044067383
    7. ',m' → logprob: -7.262392044067383
    8. '(op' → logprob: -7.262392044067383
    9. '(mem' → logprob: -7.512392044067383
    10. ')' → logprob: -8.012392044067383

Token 102: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.232796311378479
    2. 'min' → logprob: -1.607796311378479
    3. ' memo' → logprob: -5.2327961921691895
    4. 'memo' → logprob: -6.2327961921691895
    5. '           ' → logprob: -11.357796669006348
    6. '               ' → logprob: -11.857796669006348
    7. '    ' → logprob: -11.982796669006348
    8. 'm' → logprob: -12.357796669006348
    9. '(min' → logprob: -12.482796669006348
    10. '            ' → logprob: -12.732796669006348

Token 103: '_ops' (ID: 53418)
  Prédit: '_ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ops' → logprob: -7.703443770878948e-06
    2. '_op' → logprob: -13.000007629394531
    3. '_' → logprob: -13.250007629394531
    4. '_opts' → logprob: -14.125007629394531
    5. '```' → logprob: -14.500007629394531
    6. '(_' → logprob: -14.625007629394531
    7. '_objs' → logprob: -14.875007629394531
    8. '(' → logprob: -15.125007629394531
    9. ' _' → logprob: -15.750007629394531
    10. '_apps' → logprob: -15.750007629394531

Token 104: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00020401719666551799
    2. '(' → logprob: -8.500204086303711
    3. '(n' → logprob: -15.375204086303711
    4. '(
' → logprob: -15.750204086303711
    5. ' (' → logprob: -16.50020408630371
    6. '(j' → logprob: -17.50020408630371
    7. '(I' → logprob: -17.87520408630371
    8. ')' → logprob: -18.25020408630371
    9. '(ii' → logprob: -18.50020408630371
    10. ')(' → logprob: -18.75020408630371

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001514557225164026
    2. ')+' → logprob: -9.375151634216309
    3. ' )' → logprob: -9.625151634216309
    4. ')
' → logprob: -15.625151634216309
    5. '))' → logprob: -16.500150680541992
    6. '`)' → logprob: -16.750150680541992
    7. ')`' → logprob: -17.000150680541992
    8. '),' → logprob: -17.000150680541992
    9. '')' → logprob: -17.375150680541992
    10. '   ' → logprob: -17.500150680541992

Token 106: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.002827104413881898
    2. '+' → logprob: -5.877827167510986
    3. ')' → logprob: -11.502826690673828
    4. ' ' → logprob: -11.752826690673828
    5. ')+' → logprob: -13.127826690673828
    6. '   ' → logprob: -14.752826690673828
    7. '+j' → logprob: -14.752826690673828
    8. ' ' → logprob: -15.252826690673828
    9. ' )' → logprob: -15.627826690673828
    10. '()+' → logprob: -15.752826690673828

Token 107: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.10065464675426483
    2. 'min' → logprob: -2.3506546020507812
    3. '1' → logprob: -7.850654602050781
    4. ' ' → logprob: -10.600654602050781
    5. ')' → logprob: -11.475654602050781
    6. '(min' → logprob: -12.100654602050781
    7. '	min' → logprob: -12.975654602050781
    8. '[min' → logprob: -13.100654602050781
    9. ' )' → logprob: -13.225654602050781
    10. ''' → logprob: -13.600654602050781

Token 108: '_ops' (ID: 53418)
  Prédit: '_ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ops' → logprob: -1.9361264946837764e-07
    2. '_op' → logprob: -16.375
    3. '_opts' → logprob: -17.0
    4. '```' → logprob: -19.375
    5. '_' → logprob: -19.75
    6. 'ops' → logprob: -20.125
    7. 'Ops' → logprob: -20.75
    8. '_os' → logprob: -21.875
    9. '_objs' → logprob: -22.25
    10. '_OP' → logprob: -22.25

Token 109: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0007121934904716909
    2. '(' → logprob: -7.2507123947143555
    3. '(n' → logprob: -13.250712394714355
    4. '(js' → logprob: -15.750712394714355
    5. '(
' → logprob: -16.87571144104004
    6. '[j' → logprob: -17.00071144104004
    7. '(i' → logprob: -17.12571144104004
    8. ')' → logprob: -17.12571144104004
    9. ' (' → logprob: -17.25071144104004
    10. '((' → logprob: -17.87571144104004

Token 110: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14297381043434143
    2. '+' → logprob: -2.0179738998413086
    3. ')' → logprob: -8.142973899841309
    4. ')+' → logprob: -12.142973899841309
    5. '   ' → logprob: -14.142973899841309
    6. ' ' → logprob: -14.267973899841309
    7. ' )' → logprob: -15.142973899841309
    8. ' plus' → logprob: -15.767973899841309
    9. '1' → logprob: -15.892973899841309
    10. '```' → logprob: -16.267972946166992

Token 111: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740781784057617
    2. '+' → logprob: -0.9740781784057617
    3. ')' → logprob: -14.849078178405762
    4. '1' → logprob: -15.849078178405762
    5. ' ' → logprob: -15.849078178405762
    6. ')+' → logprob: -15.974078178405762
    7. '   ' → logprob: -16.224079132080078
    8. '+
' → logprob: -16.724079132080078
    9. '```' → logprob: -16.849079132080078
    10. ' +
' → logprob: -17.099079132080078

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364592790603638
    2. ' ' → logprob: -3.4086458683013916
    3. ')' → logprob: -16.658645629882812
    4. '```' → logprob: -16.908645629882812
    5. '   ' → logprob: -17.283645629882812
    6. ' ' → logprob: -17.908645629882812
    7. '2' → logprob: -18.658645629882812
    8. '  ' → logprob: -18.908645629882812
    9. '           ' → logprob: -19.283645629882812
    10. '<|end|>' → logprob: -19.908645629882812

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.000036239624023
    4. '```' → logprob: -17.125036239624023
    5. ')' → logprob: -18.375036239624023
    6. '  ' → logprob: -19.250036239624023
    7. '`' → logprob: -19.875036239624023
    8. ' ' → logprob: -21.000036239624023
    9. '           ' → logprob: -21.125036239624023
    10. '2' → logprob: -21.125036239624023

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02724502980709076
    2. ')
' → logprob: -3.777245044708252
    3. '       ' → logprob: -5.527245044708252
    4. '   ' → logprob: -12.402244567871094
    5. ')
' → logprob: -12.527244567871094
    6. ' )' → logprob: -12.652244567871094
    7. '           ' → logprob: -13.902244567871094
    8. ')

' → logprob: -14.152244567871094
    9. ')return' → logprob: -14.902244567871094
    10. ' )
' → logprob: -15.152244567871094

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010852093109861016
    2. '
' → logprob: -6.87608528137207
    3. ' return' → logprob: -11.50108528137207
    4. '```' → logprob: -11.50108528137207
    5. '   ' → logprob: -11.87608528137207
    6. '<|end|>' → logprob: -12.12608528137207
    7. '           ' → logprob: -12.37608528137207
    8. '        
' → logprob: -12.75108528137207
    9. ')' → logprob: -13.12608528137207
    10. ' memo' → logprob: -13.12608528137207

Token 116: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6282481551170349
    2. '       ' → logprob: -0.8782481551170349
    3. ' memo' → logprob: -3.3782482147216797
    4. '
' → logprob: -4.62824821472168
    5. 'memo' → logprob: -5.00324821472168
    6. '```' → logprob: -8.62824821472168
    7. '    
' → logprob: -9.12824821472168
    8. 'm' → logprob: -11.12824821472168
    9. '        
' → logprob: -11.50324821472168
    10. '	m' → logprob: -11.62824821472168

Token 117: ' Also' (ID: 8820)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.721828818321228
    2. 'memo' → logprob: -0.721828818321228
    3. '   ' → logprob: -4.221828937530518
    4. '       ' → logprob: -4.346828937530518
    5. '    ' → logprob: -8.59682846069336
    6. '  ' → logprob: -8.97182846069336
    7. ' ' → logprob: -9.34682846069336
    8. '
' → logprob: -9.97182846069336
    9. '     ' → logprob: -10.09682846069336
    10. '      ' → logprob: -10.47182846069336

Token 118: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6838130950927734
    2. ' try' → logprob: -1.9338130950927734
    3. ' consider' → logprob: -2.1838130950927734
    4. 'try' → logprob: -2.4338130950927734
    5. 'memo' → logprob: -2.4338130950927734
    6. '#' → logprob: -2.6838130950927734
    7. ' memo' → logprob: -2.9338130950927734
    8. '       ' → logprob: -2.9338130950927734
    9. 'consider' → logprob: -3.0588130950927734
    10. 'ops' → logprob: -3.3088130950927734

Token 119: ' division' (ID: 21629)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8695914149284363
    2. 'multip' → logprob: -1.869591474533081
    3. '   ' → logprob: -2.244591474533081
    4. ' to' → logprob: -2.744591474533081
    5. ' adding' → logprob: -2.994591474533081
    6. ' doubling' → logprob: -3.369591474533081
    7. 'division' → logprob: -3.619591474533081
    8. ' division' → logprob: -3.869591474533081
    9. 'to' → logprob: -3.994591474533081
    10. 'min' → logprob: -4.244591236114502

Token 120: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09856957197189331
    2. ' for' → logprob: -2.598569631576538
    3. ':' → logprob: -4.973569393157959
    4. ',' → logprob: -4.973569393157959
    5. '<|end|>' → logprob: -6.598569393157959
    6. 'for' → logprob: -7.223569393157959
    7. ' (' → logprob: -7.223569393157959
    8. ' and' → logprob: -8.098569869995117
    9. '(' → logprob: -8.098569869995117
    10. ' to' → logprob: -8.223569869995117

Token 121: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0527084656059742
    2. 'for' → logprob: -3.177708387374878
    3. ' if' → logprob: -5.677708625793457
    4. ' ops' → logprob: -5.677708625793457
    5. '       ' → logprob: -6.052708625793457
    6. 'ops' → logprob: -8.677708625793457
    7. 'if' → logprob: -8.802708625793457
    8. ' return' → logprob: -10.177708625793457
    9. ' memo' → logprob: -11.177708625793457
    10. ' ' → logprob: -11.302708625793457

Token 122: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3911586105823517
    2. 'n' → logprob: -1.1411585807800293
    3. ' any' → logprob: -5.516158580780029
    4. 'any' → logprob: -8.891159057617188
    5. '(n' → logprob: -10.016159057617188
    6. ' (' → logprob: -10.766159057617188
    7. '_n' → logprob: -12.203659057617188
    8. ' ' → logprob: -12.453659057617188
    9. '<|end|>' → logprob: -12.641159057617188
    10. '	n' → logprob: -12.703659057617188

Token 123: ' divides' (ID: 144028)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20468896627426147
    2. '%' → logprob: -1.7046890258789062
    3. ' in' → logprob: -6.954689025878906
    4. ' >' → logprob: -7.204689025878906
    5. '*' → logprob: -7.579689025878906
    6. '<|end|>' → logprob: -7.954689025878906
    7. '>' → logprob: -8.204689025878906
    8. ' *' → logprob: -9.079689025878906
    9. ' ' → logprob: -9.579689025878906
    10. '<|end|>' → logprob: -10.079689025878906

Token 124: ' m' (ID: 284)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -1.4502354860305786
    2. 'n' → logprob: -1.7002354860305786
    3. ' some' → logprob: -1.7002354860305786
    4. ' any' → logprob: -1.9502354860305786
    5. 'm' → logprob: -2.325235366821289
    6. ' n' → logprob: -3.575235366821289
    7. ' m' → logprob: -3.950235366821289
    8. 'x' → logprob: -4.075235366821289
    9. ' another' → logprob: -4.325235366821289
    10. '```' → logprob: -4.325235366821289

Token 125: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1272851526737213
    2. ' in' → logprob: -3.3772852420806885
    3. '   ' → logprob: -3.5022852420806885
    4. ':' → logprob: -4.002285003662109
    5. 'for' → logprob: -4.252285003662109
    6. ',' → logprob: -4.627285003662109
    7. ' and' → logprob: -6.002285003662109
    8. ':
' → logprob: -6.877285003662109
    9. ' ' → logprob: -7.002285003662109
    10. '(' → logprob: -7.002285003662109

Token 126: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04480881616473198
    2. 'for' → logprob: -3.294808864593506
    3. '       ' → logprob: -5.169808864593506
    4. ' n' → logprob: -7.544808864593506
    5. '<|end|>' → logprob: -8.294808387756348
    6. 'n' → logprob: -9.544808387756348
    7. ' and' → logprob: -10.669808387756348
    8. 'm' → logprob: -10.919808387756348
    9. ' in' → logprob: -11.044808387756348
    10. ' if' → logprob: -11.294808387756348

Token 127: '^' (ID: 61)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16855281591415405
    2. ' for' → logprob: -2.543552875518799
    3. '%' → logprob: -3.668552875518799
    4. 'for' → logprob: -4.668552875518799
    5. ' %' → logprob: -5.043552875518799
    6. '**' → logprob: -5.043552875518799
    7. '<|end|>' → logprob: -5.168552875518799
    8. '=' → logprob: -6.043552875518799
    9. 'in' → logprob: -6.043552875518799
    10. '<|end|>' → logprob: -6.043552875518799

Token 128: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13233894109725952
    2. 'n' → logprob: -2.1323390007019043
    3. '2' → logprob: -6.507339000701904
    4. ' m' → logprob: -7.007339000701904
    5. '<|end|>' → logprob: -7.507339000701904
    6. ' ' → logprob: -8.132338523864746
    7. '(' → logprob: -8.132338523864746
    8. '   ' → logprob: -8.132338523864746
    9. '(n' → logprob: -8.382338523864746
    10. '(m' → logprob: -8.507338523864746

Token 129: '/x' (ID: 22739)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5036975741386414
    2. ' for' → logprob: -1.6286976337432861
    3. '%' → logprob: -2.378697633743286
    4. ' %' → logprob: -2.503697633743286
    5. 'for' → logprob: -4.378697395324707
    6. 'in' → logprob: -5.003697395324707
    7. '=' → logprob: -5.878697395324707
    8. ' =' → logprob: -6.753697395324707
    9. ')' → logprob: -8.003697395324707
    10. '<|end|>' → logprob: -8.253697395324707

Token 130: '^(' (ID: 32612)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8581539988517761
    2. '=' → logprob: -0.9831539988517761
    3. '(' → logprob: -2.608154058456421
    4. ' =' → logprob: -3.358154058456421
    5. 'n' → logprob: -3.608154058456421
    6. 'm' → logprob: -4.358153820037842
    7. '_' → logprob: -5.108153820037842
    8. '^' → logprob: -5.233153820037842
    9. '<|end|>' → logprob: -5.358153820037842
    10. '_n' → logprob: -5.358153820037842

Token 131: 'm' (ID: 76)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00044544681441038847
    2. 'j' → logprob: -8.750445365905762
    3. ' n' → logprob: -9.250445365905762
    4. 'i' → logprob: -9.750445365905762
    5. '2' → logprob: -10.375445365905762
    6. '(n' → logprob: -10.375445365905762
    7. '1' → logprob: -11.125445365905762
    8. ')' → logprob: -11.125445365905762
    9. '   ' → logprob: -11.750445365905762
    10. '(' → logprob: -12.000445365905762

Token 132: '-n' (ID: 5219)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4514220952987671
    2. 'n' → logprob: -2.2014222145080566
    3. '=' → logprob: -2.8264222145080566
    4. '/' → logprob: -2.8264222145080566
    5. '-n' → logprob: -3.3264222145080566
    6. '-' → logprob: -3.5764222145080566
    7. '//' → logprob: -4.201422214508057
    8. '/n' → logprob: -4.951422214508057
    9. ' ' → logprob: -5.201422214508057
    10. ' -' → logprob: -5.326422214508057

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007819918682798743
    2. ')=' → logprob: -7.625782012939453
    3. ' )' → logprob: -9.125782012939453
    4. ')==' → logprob: -10.125782012939453
    5. '')' → logprob: -10.375782012939453
    6. '),' → logprob: -10.625782012939453
    7. '))' → logprob: -10.625782012939453
    8. '):' → logprob: -10.875782012939453
    9. ')
' → logprob: -11.500782012939453
    10. '=' → logprob: -11.625782012939453

Token 134: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11351107060909271
    2. ' for' → logprob: -2.238511085510254
    3. 'for' → logprob: -7.613511085510254
    4. ',' → logprob: -10.113511085510254
    5. '<|end|>' → logprob: -10.238511085510254
    6. '
' → logprob: -10.988511085510254
    7. '   ' → logprob: -11.238511085510254
    8. ' in' → logprob: -11.488511085510254
    9. '        
' → logprob: -11.738511085510254
    10. ' (' → logprob: -11.738511085510254

Token 135: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14564219117164612
    2. ' x' → logprob: -2.5206422805786133
    3. 'n' → logprob: -3.0206422805786133
    4. ' n' → logprob: -5.145642280578613
    5. 'm' → logprob: -8.270642280578613
    6. ' ' → logprob: -9.770642280578613
    7. 'j' → logprob: -10.520642280578613
    8. ' m' → logprob: -10.645642280578613
    9. '   ' → logprob: -10.895642280578613
    10. '1' → logprob: -11.145642280578613

Token 136: '^' (ID: 61)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19076129794120789
    2. '   ' → logprob: -2.6907613277435303
    3. 'for' → logprob: -2.8157613277435303
    4. '       ' → logprob: -4.315761089324951
    5. ' in' → logprob: -5.190761089324951
    6. '=' → logprob: -5.190761089324951
    7. ')' → logprob: -5.190761089324951
    8. ' =' → logprob: -5.565761089324951
    9. ',' → logprob: -5.815761089324951
    10. '
' → logprob: -6.815761089324951

Token 137: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003540542966220528
    2. 'm' → logprob: -8.250353813171387
    3. ' n' → logprob: -10.250353813171387
    4. '1' → logprob: -11.125353813171387
    5. '<|end|>' → logprob: -11.125353813171387
    6. '0' → logprob: -12.125353813171387
    7. '(n' → logprob: -12.250353813171387
    8. ' ' → logprob: -12.750353813171387
    9. '2' → logprob: -12.750353813171387
    10. '+' → logprob: -13.250353813171387

Token 138: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12327364832162857
    2. ' for' → logprob: -2.3732736110687256
    3. '
' → logprob: -4.123273849487305
    4. 'for' → logprob: -5.248273849487305
    5. ' 
' → logprob: -7.498273849487305
    6. '        
' → logprob: -7.748273849487305
    7. '\n' → logprob: -8.998273849487305
    8. '<|end|>' → logprob: -9.248273849487305
    9. '  
' → logprob: -10.248273849487305
    10. ' ' → logprob: -10.248273849487305

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01673821359872818
    2. ' for' → logprob: -4.141738414764404
    3. 'for' → logprob: -7.641738414764404
    4. '
' → logprob: -9.266737937927246
    5. '<|end|>' → logprob: -10.016737937927246
    6. '\n' → logprob: -10.641737937927246
    7. ' ' → logprob: -11.641737937927246
    8. '        
' → logprob: -11.641737937927246
    9. '           ' → logprob: -11.766737937927246
    10. ',' → logprob: -11.766737937927246

Token 140: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16086424887180328
    2. 'for' (adapté à ' for') → logprob: -2.0358643531799316
    3. '       ' → logprob: -4.035864353179932
    4. '
' → logprob: -9.535863876342773
    5. '   ' → logprob: -9.535863876342773
    6. ' return' → logprob: -9.910863876342773
    7. 'return' → logprob: -10.035863876342773
    8. '        
' → logprob: -10.660863876342773
    9. ' 
' → logprob: -11.285863876342773
    10. 'm' → logprob: -11.535863876342773

Token 141: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.02975395694375038
    2. 'm' → logprob: -3.5297539234161377
    3. '	m' → logprob: -14.029753684997559
    4. ' k' → logprob: -14.154753684997559
    5. '   ' → logprob: -14.529753684997559
    6. ' n' → logprob: -15.529753684997559
    7. ' ' → logprob: -15.654753684997559
    8. '```' → logprob: -16.029754638671875
    9. 'k' → logprob: -16.154754638671875
    10. ')m' → logprob: -16.279754638671875

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11287076026201248
    2. 'in' → logprob: -2.237870693206787
    3. ' ' → logprob: -10.737871170043945
    4. 'range' → logprob: -10.987871170043945
    5. '<|end|>' → logprob: -12.237871170043945
    6. 'n' → logprob: -13.737871170043945
    7. '  ' → logprob: -13.737871170043945
    8. ' range' → logprob: -13.987871170043945
    9. '	in' → logprob: -14.862871170043945
    10. ')' → logprob: -14.987871170043945

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08895429968833923
    2. ' range' → logprob: -2.463954210281372
    3. '(range' → logprob: -11.463953971862793
    4. '	range' → logprob: -13.588953971862793
    5. 'memo' → logprob: -13.838953971862793
    6. '[' → logprob: -14.588953971862793
    7. '   ' → logprob: -14.963953971862793
    8. ' ' → logprob: -15.088953971862793
    9. 'list' → logprob: -15.213953971862793
    10. '  ' → logprob: -16.21395492553711

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019300628919154406
    2. '(' → logprob: -6.251930236816406
    3. 'n' → logprob: -14.001930236816406
    4. '2' → logprob: -15.126930236816406
    5. ' (' → logprob: -15.376930236816406
    6. '((' → logprob: -16.251930236816406
    7. '(max' → logprob: -17.751930236816406
    8. ' n' → logprob: -18.501930236816406
    9. '(N' → logprob: -18.501930236816406
    10. '[n' → logprob: -18.626930236816406

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008450153283774853
    2. ' +' → logprob: -5.258450031280518
    3. '*' → logprob: -5.758450031280518
    4. '+n' → logprob: -11.508450508117676
    5. '+
' → logprob: -11.508450508117676
    6. '2' → logprob: -12.008450508117676
    7. ' *' → logprob: -12.008450508117676
    8. '1' → logprob: -12.133450508117676
    9. ',' → logprob: -12.383450508117676
    10. '
' → logprob: -12.758450508117676

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008397616329602897
    2. 'n' → logprob: -7.375839710235596
    3. ' ' → logprob: -8.625840187072754
    4. '2' → logprob: -11.000840187072754
    5. ' n' → logprob: -11.750840187072754
    6. '10' → logprob: -13.000840187072754
    7. '   ' → logprob: -13.000840187072754
    8. '100' → logprob: -13.375840187072754
    9. '20' → logprob: -14.313340187072754
    10. '
' → logprob: -14.750840187072754

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003647826088126749
    2. 'n' → logprob: -8.375365257263184
    3. ' ' → logprob: -9.000365257263184
    4. '2' → logprob: -13.000365257263184
    5. ' n' → logprob: -13.250365257263184
    6. '100' → logprob: -13.375365257263184
    7. '
' → logprob: -13.500365257263184
    8. '10' → logprob: -13.625365257263184
    9. '   ' → logprob: -14.250365257263184
    10. '20' → logprob: -14.625365257263184

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001785112835932523
    2. ' ,' → logprob: -9.125178337097168
    3. ',n' → logprob: -9.750178337097168
    4. '1' → logprob: -12.375178337097168
    5. '2' → logprob: -12.750178337097168
    6. '):' → logprob: -13.875178337097168
    7. ',
' → logprob: -14.500178337097168
    8. 'n' → logprob: -15.000178337097168
    9. '   ' → logprob: -15.125178337097168
    10. '```' → logprob: -15.125178337097168

Token 149: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028930825646966696
    2. 'n' → logprob: -6.252892971038818
    3. '3' → logprob: -7.502892971038818
    4. '100' → logprob: -8.877893447875977
    5. ' ' → logprob: -9.502893447875977
    6. '20' → logprob: -9.752893447875977
    7. 'max' → logprob: -10.502893447875977
    8. '101' → logprob: -10.502893447875977
    9. '21' → logprob: -10.752893447875977
    10. '200' → logprob: -11.877893447875977

Token 150: '100' (ID: 1353)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004178025701548904
    2. 'n' → logprob: -8.250417709350586
    3. '3' → logprob: -9.250417709350586
    4. '20' → logprob: -10.875417709350586
    5. '100' → logprob: -11.125417709350586
    6. ' ' → logprob: -11.875417709350586
    7. '10' → logprob: -13.000417709350586
    8. '21' → logprob: -13.000417709350586
    9. 'max' → logprob: -13.375417709350586
    10. '101' → logprob: -13.375417709350586

Token 151: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11415830254554749
    2. '0' → logprob: -2.6141583919525146
    3. '1' → logprob: -3.7391583919525146
    4. '):
' → logprob: -4.6141581535339355
    5. ')' → logprob: -7.9891581535339355
    6. '00' → logprob: -8.489158630371094
    7. '):

' → logprob: -8.614158630371094
    8. '2' → logprob: -9.614158630371094
    9. '+' → logprob: -9.864158630371094
    10. '000' → logprob: -10.239158630371094

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011078352108597755
    2. '):
' → logprob: -4.511078357696533
    3. ' ):' → logprob: -11.136077880859375
    4. ':' → logprob: -12.261077880859375
    5. ',' → logprob: -12.511077880859375
    6. '   ' → logprob: -12.886077880859375
    7. ')' → logprob: -13.386077880859375
    8. '}:' → logprob: -13.761077880859375
    9. '):
' → logprob: -13.886077880859375
    10. '):

' → logprob: -14.511077880859375

Token 153: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6870267987251282
    2. '       ' → logprob: -0.8120267987251282
    3. '<|end|>' → logprob: -3.6870267391204834
    4. 'if' → logprob: -3.9370267391204834
    5. ' ' → logprob: -5.6870269775390625
    6. ':' → logprob: -6.0620269775390625
    7. '   ' → logprob: -7.5620269775390625
    8. ':
' → logprob: -7.6870269775390625
    9. ',' → logprob: -7.8120269775390625
    10. '           ' → logprob: -8.312026977539062

Token 154: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023327935487031937
    2. ' if' → logprob: -3.8983278274536133
    3. '       ' → logprob: -5.898327827453613
    4. '           ' → logprob: -10.648327827453613
    5. '   ' → logprob: -11.898327827453613
    6. 'If' → logprob: -12.898327827453613
    7. '<|end|>' → logprob: -13.648327827453613
    8. ';if' → logprob: -14.148327827453613
    9. '	if' → logprob: -14.273327827453613
    10. ' ' → logprob: -14.398327827453613

Token 155: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.17977379262447357
    2. ' m' → logprob: -1.8047738075256348
    3. '(m' → logprob: -11.429773330688477
    4. ' (' → logprob: -12.054773330688477
    5. '           ' → logprob: -12.304773330688477
    6. '   ' → logprob: -13.429773330688477
    7. '(' → logprob: -13.429773330688477
    8. ' ' → logprob: -13.929773330688477
    9. ')m' → logprob: -14.679773330688477
    10. '    ' → logprob: -14.804773330688477

Token 156: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20152932405471802
    2. ' %' → logprob: -1.7015292644500732
    3. '%n' → logprob: -9.451529502868652
    4. '%i' → logprob: -11.076529502868652
    5. '%e' → logprob: -12.076529502868652
    6. '%x' → logprob: -12.326529502868652
    7. '%m' → logprob: -12.576529502868652
    8. '%d' → logprob: -12.701529502868652
    9. '<|end|>' → logprob: -13.201529502868652
    10. '%s' → logprob: -13.576529502868652

Token 157: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020354038861114532
    2. ' n' → logprob: -8.500203132629395
    3. '	n' → logprob: -18.37520408630371
    4. '_n' → logprob: -20.25020408630371
    5. ')n' → logprob: -20.75020408630371
    6. '   ' → logprob: -21.87520408630371
    7. '(n' → logprob: -22.00020408630371
    8. ',n' → logprob: -22.12520408630371
    9. '.n' → logprob: -22.37520408630371
    10. 'n't' → logprob: -23.12520408630371

Token 158: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3874819576740265
    2. ' ==' → logprob: -1.137481927871704
    3. '0' → logprob: -7.512482166290283
    4. '=' → logprob: -10.387481689453125
    5. ')==' → logprob: -10.887481689453125
    6. '===' → logprob: -12.262481689453125
    7. '==
' → logprob: -12.512481689453125
    8. ']==' → logprob: -13.012481689453125
    9. ')' → logprob: -13.387481689453125
    10. '()==' → logprob: -13.512481689453125

Token 159: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.87507438659668
    4. '  ' → logprob: -20.62507438659668
    5. '           ' → logprob: -20.87507438659668
    6. '       ' → logprob: -21.25007438659668
    7. '```' → logprob: -21.50007438659668
    8. '۰' → logprob: -21.62507438659668
    9. '    ' → logprob: -22.12507438659668
    10. '     ' → logprob: -22.37507438659668

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -20.12500762939453
    4. '۰' → logprob: -20.50000762939453
    5. '  ' → logprob: -21.62500762939453
    6. '```' → logprob: -22.06250762939453
    7. '０' → logprob: -22.56250762939453
    8. '٠' → logprob: -22.62500762939453
    9. '  ' → logprob: -22.62500762939453
    10. '০' → logprob: -22.68750762939453

Token 161: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3864981532096863
    2. ' and' → logprob: -1.636498212814331
    3. ':' → logprob: -2.136498212814331
    4. '           ' → logprob: -5.511497974395752
    5. '               ' → logprob: -6.261497974395752
    6. 'and' → logprob: -6.636497974395752
    7. '):
' → logprob: -7.761497974395752
    8. ',' → logprob: -10.13649845123291
    9. ' :
' → logprob: -10.38649845123291
    10. '       ' → logprob: -10.76149845123291

Token 162: '               ' (ID: 506)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.76491379737854
    2. '           ' → logprob: -1.63991379737854
    3. ' ops' → logprob: -1.76491379737854
    4. '               ' → logprob: -1.88991379737854
    5. 'if' → logprob: -5.014913558959961
    6. ' if' → logprob: -5.389913558959961
    7. 'memo' → logprob: -6.514913558959961
    8. 'operations' → logprob: -7.014913558959961
    9. '_ops' → logprob: -7.514913558959961
    10. ' operations' → logprob: -7.764913558959961

Token 163: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.016214663162827492
    2. ' ops' → logprob: -4.266214847564697
    3. 'memo' → logprob: -7.266214847564697
    4. '               ' → logprob: -7.516214847564697
    5. 'op' → logprob: -8.391214370727539
    6. 'if' → logprob: -8.641214370727539
    7. 'operations' → logprob: -8.766214370727539
    8. '           ' → logprob: -9.641214370727539
    9. '_ops' → logprob: -10.016214370727539
    10. '                   ' → logprob: -11.266214370727539

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14267908036708832
    2. '=' → logprob: -2.01767897605896
    3. '=min' → logprob: -12.892679214477539
    4. '   ' → logprob: -14.517679214477539
    5. 's' → logprob: -15.267679214477539
    6. '=
' → logprob: -16.76767921447754
    7. '           ' → logprob: -16.76767921447754
    8. ' ' → logprob: -17.01767921447754
    9. 'min' → logprob: -17.14267921447754
    10. 'ops' → logprob: -17.26767921447754

Token 165: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011048054322600365
    2. ' min' → logprob: -4.511047840118408
    3. '	min' → logprob: -15.636048316955566
    4. '(min' → logprob: -16.26104736328125
    5. '=min' → logprob: -18.26104736328125
    6. '_min' → logprob: -18.76104736328125
    7. ',min' → logprob: -18.88604736328125
    8. '.min' → logprob: -19.63604736328125
    9. '[min' → logprob: -19.76104736328125
    10. 'max' → logprob: -19.88604736328125

Token 166: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7432603272027336e-06
    2. '(
' → logprob: -13.625001907348633
    3. 'ops' → logprob: -15.500001907348633
    4. '(min' → logprob: -16.375001907348633
    5. '(

' → logprob: -16.625001907348633
    6. '(op' → logprob: -18.750001907348633
    7. '(
' → logprob: -19.875001907348633
    8. 'min' → logprob: -20.250001907348633
    9. '```' → logprob: -20.375001907348633
    10. 's' → logprob: -20.500001907348633

Token 167: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0009164590737782419
    2. '(' → logprob: -7.000916481018066
    3. ' ops' → logprob: -12.625916481018066
    4. '(
' → logprob: -15.000916481018066
    5. 'op' → logprob: -15.000916481018066
    6. '_ops' → logprob: -15.875916481018066
    7. '```' → logprob: -15.875916481018066
    8. 'operations' → logprob: -16.00091552734375
    9. '.ops' → logprob: -16.12591552734375
    10. 'ots' → logprob: -16.37591552734375

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46877825260162354
    2. '(' → logprob: -1.0937782526016235
    3. '(min' → logprob: -3.343778133392334
    4. '(m' → logprob: -6.218778133392334
    5. ',min' → logprob: -6.343778133392334
    6. ',m' → logprob: -9.093778610229492
    7. 'ops' → logprob: -10.218778610229492
    8. 'min' → logprob: -10.593778610229492
    9. '(op' → logprob: -10.968778610229492
    10. ' ,' → logprob: -11.343778610229492

Token 169: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005512753967195749
    2. ' min' → logprob: -5.255512714385986
    3. 'memo' → logprob: -8.755513191223145
    4. '1' → logprob: -9.380513191223145
    5. '   ' → logprob: -10.630513191223145
    6. '    ' → logprob: -12.755513191223145
    7. ' ' → logprob: -12.880513191223145
    8. ' memo' → logprob: -13.005513191223145
    9. '  ' → logprob: -13.630513191223145
    10. '	min' → logprob: -14.005513191223145

Token 170: '_ops' (ID: 53418)
  Prédit: '_ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ops' → logprob: -3.128163257315464e-07
    2. '_op' → logprob: -16.25
    3. '_opts' → logprob: -16.625
    4. 'ops' → logprob: -16.625
    5. 'Ops' → logprob: -18.5
    6. '_' → logprob: -19.125
    7. '_operations' → logprob: -19.125
    8. '```' → logprob: -19.5
    9. '_obs' → logprob: -20.5
    10. ')' → logprob: -20.625

Token 171: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.37500286102295
    3. 'm' → logprob: -14.87500286102295
    4. '[m' → logprob: -15.00000286102295
    5. ' (' → logprob: -15.75000286102295
    6. '(n' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.625001907348633
    8. ')' → logprob: -18.125001907348633
    9. '(M' → logprob: -18.125001907348633
    10. '```' → logprob: -18.375001907348633

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002629161812365055
    2. '-' → logprob: -6.377629280090332
    3. ' -' → logprob: -7.127629280090332
    4. ' )' → logprob: -9.627629280090332
    5. ')+' → logprob: -10.752629280090332
    6. '()' → logprob: -11.127629280090332
    7. '))' → logprob: -12.127629280090332
    8. '-)' → logprob: -12.752629280090332
    9. '+' → logprob: -12.877629280090332
    10. '),' → logprob: -13.377629280090332

Token 173: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.42940792441368103
    2. '+' → logprob: -1.0544079542160034
    3. ')' → logprob: -7.554408073425293
    4. ')+' → logprob: -9.429408073425293
    5. '()+' → logprob: -10.054408073425293
    6. '()' → logprob: -10.679408073425293
    7. ' )' → logprob: -12.054408073425293
    8. ' plus' → logprob: -12.054408073425293
    9. '   ' → logprob: -12.429408073425293
    10. ',' → logprob: -12.554408073425293

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006277294596657157
    2. ' ' → logprob: -7.375627517700195
    3. '   ' → logprob: -13.875627517700195
    4. '  ' → logprob: -16.000627517700195
    5. '0' → logprob: -17.250627517700195
    6. '
' → logprob: -17.313127517700195
    7. '2' → logprob: -17.500627517700195
    8. ')' → logprob: -17.500627517700195
    9. '```' → logprob: -17.688127517700195
    10. '+' → logprob: -18.875627517700195

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.875066757202148
    4. '
' → logprob: -16.00006675720215
    5. '0' → logprob: -16.12506675720215
    6. '```' → logprob: -16.50006675720215
    7. ')' → logprob: -17.18756675720215
    8. '

' → logprob: -17.18756675720215
    9. '  ' → logprob: -17.25006675720215
    10. '2' → logprob: -17.25006675720215

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4485217332839966
    2. ')
' → logprob: -1.1985217332839966
    3. '       ' → logprob: -2.823521614074707
    4. ' )' → logprob: -8.698521614074707
    5. ' )
' → logprob: -9.073521614074707
    6. '   ' → logprob: -9.323521614074707
    7. ')

' → logprob: -12.073521614074707
    8. '
' → logprob: -12.573521614074707
    9. ')\' → logprob: -13.198521614074707
    10. ')
' → logprob: -13.198521614074707

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07017483562231064
    2. '   ' → logprob: -2.6951749324798584
    3. ' memo' → logprob: -8.820175170898438
    4. 'memo' → logprob: -9.820175170898438
    5. '
' → logprob: -11.195175170898438
    6. '```' → logprob: -11.820175170898438
    7. '           ' → logprob: -12.070175170898438
    8. '    
' → logprob: -13.070175170898438
    9. '               ' → logprob: -13.195175170898438
    10. '        
' → logprob: -13.570175170898438

Token 178: ' memo' (ID: 46393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06726397573947906
    2. 'memo' (adapté à ' memo') → logprob: -3.4422640800476074
    3. '       ' → logprob: -3.6922640800476074
    4. ' memo' → logprob: -4.817264080047607
    5. '  ' → logprob: -11.31726360321045
    6. '
' → logprob: -11.56726360321045
    7. ' ' → logprob: -11.69226360321045
    8. '    
' → logprob: -11.81726360321045
    9. '    ' → logprob: -12.31726360321045
    10. 'memory' → logprob: -12.69226360321045

Token 179: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0002986392646562308
    2. '[' → logprob: -8.125298500061035
    3. '\[' → logprob: -14.125298500061035
    4. 'n' → logprob: -14.625298500061035
    5. '```' → logprob: -15.000298500061035
    6. ' [' → logprob: -15.000298500061035
    7. '[N' → logprob: -15.625298500061035
    8. '[
' → logprob: -15.875298500061035
    9. '=n' → logprob: -16.50029945373535
    10. '[m' → logprob: -16.75029945373535

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.4868770196917467e-05
    2. ']=' → logprob: -10.625024795532227
    3. ' ]' → logprob: -14.750024795532227
    4. '=' → logprob: -16.375024795532227
    5. ')' → logprob: -17.500024795532227
    6. ']
' → logprob: -17.875024795532227
    7. ']

' → logprob: -19.500024795532227
    8. ')]' → logprob: -20.250024795532227
    9. '']' → logprob: -20.750024795532227
    10. ' =' → logprob: -21.125024795532227

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. '=
' → logprob: -17.883615493774414
    4. '=

' → logprob: -18.133615493774414
    5. '＝' → logprob: -18.633615493774414
    6. ')=' → logprob: -19.133615493774414
    7. '=}' → logprob: -19.508615493774414
    8. '.=' → logprob: -19.883615493774414
    9. '_=' → logprob: -20.258615493774414
    10. ' =
' → logprob: -20.383615493774414

Token 182: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0019288709154352546
    2. ' ops' → logprob: -6.251928806304932
    3. 'op' → logprob: -16.126928329467773
    4. 'int' → logprob: -16.376928329467773
    5. 'operations' → logprob: -17.251928329467773
    6. '.ops' → logprob: -17.501928329467773
    7. '_ops' → logprob: -17.626928329467773
    8. '   ' → logprob: -18.376928329467773
    9. 'Ops' → logprob: -18.876928329467773
    10. 'opts' → logprob: -19.126928329467773

Token 183: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00246745184995234
    2. '   ' → logprob: -6.752467632293701
    3. 'return' → logprob: -6.752467632293701
    4. ' return' → logprob: -9.002467155456543
    5. '	return' → logprob: -12.252467155456543
    6. '
' → logprob: -15.752467155456543
    7. ':return' → logprob: -15.752467155456543
    8. '           ' → logprob: -16.62746810913086
    9. '	' → logprob: -16.87746810913086
    10. '	   ' → logprob: -17.25246810913086

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016825085505843163
    2. 'return' → logprob: -4.766825199127197
    3. '   ' → logprob: -5.141825199127197
    4. ' return' → logprob: -6.141825199127197
    5. '	return' → logprob: -8.766824722290039
    6. ':return' → logprob: -11.016824722290039
    7. ' ' → logprob: -13.266824722290039
    8. ')return' → logprob: -13.391824722290039
    9. '<|end|>' → logprob: -14.016824722290039
    10. '{return' → logprob: -14.516824722290039

Token 185: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09524697810411453
    2. '       ' → logprob: -3.0952470302581787
    3. ' return' → logprob: -3.0952470302581787
    4. '   ' → logprob: -8.095247268676758
    5. '	return' → logprob: -11.220247268676758
    6. '
' → logprob: -12.845247268676758
    7. ':return' → logprob: -13.845247268676758
    8. ' ' → logprob: -14.470247268676758
    9. '  ' → logprob: -15.470247268676758
    10. '           ' → logprob: -15.470247268676758

Token 186: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0019105502869933844
    2. ' ops' → logprob: -6.37691068649292
    3. 'memo' → logprob: -8.501910209655762
    4. 'op' → logprob: -13.126910209655762
    5. ' memo' → logprob: -13.251910209655762
    6. '   ' → logprob: -14.001910209655762
    7. 'operations' → logprob: -16.001911163330078
    8. 'os' → logprob: -16.501911163330078
    9. 'opts' → logprob: -16.626911163330078
    10. 'mem' → logprob: -16.626911163330078

Token 187: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09507647156715393
    2. '    
' → logprob: -3.470076560974121
    3. '<|end|>' → logprob: -3.470076560974121
    4. 'n' → logprob: -4.720076560974121
    5. 'return' → logprob: -5.345076560974121
    6. 'print' → logprob: -5.345076560974121
    7. ' return' → logprob: -6.345076560974121
    8. ' 
' → logprob: -6.470076560974121
    9. '  
' → logprob: -6.595076560974121
    10. ' ' → logprob: -6.720076560974121

Token 189: ' while' (ID: 2049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3607523441314697
    2. '   ' → logprob: -1.8607523441314697
    3. 'return' → logprob: -2.1107523441314697
    4. 'for' → logprob: -3.8607523441314697
    5. 'result' → logprob: -6.110752105712891
    6. 'n' → logprob: -6.860752105712891
    7. '#' → logprob: -6.985752105712891
    8. 'x' → logprob: -8.73575210571289
    9. '    
' → logprob: -8.98575210571289
    10. ' return' → logprob: -9.36075210571289

Token 190: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0031880477908998728
    2. 'True' → logprob: -5.753188133239746
    3. '(True' → logprob: -11.503188133239746
    4. '=True' → logprob: -15.753188133239746
    5. ' ' → logprob: -17.12818717956543
    6. ' true' → logprob: -17.62818717956543
    7. '_true' → logprob: -18.00318717956543
    8. ' not' → logprob: -18.37818717956543
    9. '_' → logprob: -18.62818717956543
    10. ' Tru' → logprob: -18.62818717956543

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04495573043823242
    2. '():' → logprob: -3.1699557304382324
    3. ':
' → logprob: -6.919955730438232
    4. '(' → logprob: -7.919955730438232
    5. '       ' → logprob: -8.54495620727539
    6. '():
' → logprob: -8.54495620727539
    7. ' :' → logprob: -9.91995620727539
    8. ',' → logprob: -9.91995620727539
    9. '):' → logprob: -10.54495620727539
    10. '   ' → logprob: -11.41995620727539

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002202474744990468
    2. ' try' → logprob: -6.50220251083374
    3. '   ' → logprob: -7.87720251083374
    4. 'try' → logprob: -8.502202033996582
    5. ' line' → logprob: -10.627202033996582
    6. ' input' → logprob: -10.877202033996582
    7. '<|end|>' → logprob: -11.002202033996582
    8. ' user' → logprob: -11.127202033996582
    9. 'input' → logprob: -11.502202033996582
    10. ' s' → logprob: -12.002202033996582

Token 193: ' n' (ID: 297)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.41257554292678833
    2. ' try' → logprob: -1.2875754833221436
    3. ' line' → logprob: -3.4125754833221436
    4. 'n' (adapté à ' n') → logprob: -4.537575721740723
    5. 'line' → logprob: -4.662575721740723
    6. ' n' → logprob: -5.162575721740723
    7. '   ' → logprob: -6.912575721740723
    8. ' inp' → logprob: -7.287575721740723
    9. 'user' → logprob: -7.412575721740723
    10. 'inp' → logprob: -7.912575721740723

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519380748271942
    2. '=' → logprob: -1.5019381046295166
    3. '=int' → logprob: -12.126937866210938
    4. '=input' → logprob: -13.001937866210938
    5. ' ==' → logprob: -15.251937866210938
    6. '	' → logprob: -15.876937866210938
    7. ' ' → logprob: -16.001937866210938
    8. '_input' → logprob: -16.126937866210938
    9. 'int' → logprob: -16.126937866210938
    10. 'input' → logprob: -16.251937866210938

Token 195: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2833147943019867
    2. ' int' → logprob: -1.408314824104309
    3. ' input' → logprob: -6.5333147048950195
    4. 'input' → logprob: -7.2833147048950195
    5. ' ' → logprob: -11.65831470489502
    6. '   ' → logprob: -12.28331470489502
    7. '(int' → logprob: -13.40831470489502
    8. '[int' → logprob: -13.65831470489502
    9. '=int' → logprob: -13.90831470489502
    10. '  ' → logprob: -14.03331470489502

Token 196: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006722471676766872
    2. '(' → logprob: -5.006722450256348
    3. 'input' → logprob: -11.881722450256348
    4. ' (' → logprob: -16.631723403930664
    5. '()' → logprob: -17.256723403930664
    6. '(
' → logprob: -17.506723403930664
    7. ' input' → logprob: -18.131723403930664
    8. '=input' → logprob: -19.006723403930664
    9. '(eval' → logprob: -19.506723403930664
    10. '<input' → logprob: -19.631723403930664

Token 197: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001079014502465725
    2. '()' → logprob: -6.876079082489014
    3. '(' → logprob: -10.626078605651855
    4. '())
' → logprob: -12.376078605651855
    5. ')' → logprob: -12.501078605651855
    6. '('' → logprob: -12.501078605651855
    7. '().' → logprob: -12.626078605651855
    8. ' ())' → logprob: -13.001078605651855
    9. '("' → logprob: -13.751078605651855
    10. '()>' → logprob: -13.876078605651855

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012960448861122131
    2. '<|end|>' → logprob: -4.512960433959961
    3. ' if' → logprob: -6.512960433959961
    4. '   ' → logprob: -8.512960433959961
    5. 'if' → logprob: -9.137960433959961
    6. '<|end|>' → logprob: -9.512960433959961
    7. ' ' → logprob: -11.637960433959961
    8. '        
' → logprob: -11.637960433959961
    9. '	' → logprob: -12.512960433959961
    10. ',' → logprob: -12.512960433959961

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3883680999279022
    2. ' if' → logprob: -1.1383681297302246
    3. '       ' → logprob: -6.513368129730225
    4. 'print' → logprob: -12.513367652893066
    5. '	if' → logprob: -12.513367652893066
    6. '   ' → logprob: -12.638367652893066
    7. 'break' → logprob: -13.888367652893066
    8. ' break' → logprob: -15.638367652893066
    9. '        
' → logprob: -15.888367652893066
    10. '    ' → logprob: -15.888367652893066

Token 200: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0017787108663469553
    2. 'n' → logprob: -6.376778602600098
    3. ' not' → logprob: -9.501778602600098
    4. '	n' → logprob: -13.501778602600098
    5. ' ' → logprob: -15.126778602600098
    6. ' ' → logprob: -15.876778602600098
    7. 'not' → logprob: -16.876779556274414
    8. ')n' → logprob: -18.626779556274414
    9. ' н' → logprob: -19.126779556274414
    10. '(n' → logprob: -19.376779556274414

Token 201: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23270298540592194
    2. '==' → logprob: -1.6077029705047607
    3. ' <=' → logprob: -5.35770320892334
    4. '<=' → logprob: -5.98270320892334
    5. '==-' → logprob: -11.60770320892334
    6. ')==' → logprob: -11.73270320892334
    7. ')' → logprob: -12.35770320892334
    8. ' ' → logprob: -13.23270320892334
    9. '()==' → logprob: -13.35770320892334
    10. '=' → logprob: -13.85770320892334

Token 202: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282496154308319
    2. ' ' → logprob: -2.2378249168395996
    3. ' -' → logprob: -13.362825393676758
    4. '   ' → logprob: -15.112825393676758
    5. '    ' → logprob: -15.487825393676758
    6. '  ' → logprob: -15.487825393676758
    7. '-' → logprob: -15.737825393676758
    8. ' ' → logprob: -16.112825393676758
    9. '```' → logprob: -16.612825393676758
    10. '	' → logprob: -18.300325393676758

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.721228368813172e-05
    2. ' ' → logprob: -9.875086784362793
    3. '-' → logprob: -10.250086784362793
    4. ' -' → logprob: -14.875086784362793
    5. '```' → logprob: -17.12508773803711
    6. ')' → logprob: -18.37508773803711
    7. '1' → logprob: -19.00008773803711
    8. '   ' → logprob: -19.12508773803711
    9. '
' → logprob: -19.25008773803711
    10. '  ' → logprob: -19.37508773803711

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.693200945854187
    2. ':
' → logprob: -0.693200945854187
    3. '       ' → logprob: -10.443201065063477
    4. ':return' → logprob: -11.943201065063477
    5. '   ' → logprob: -12.068201065063477
    6. '           ' → logprob: -12.568201065063477
    7. '):
' → logprob: -13.068201065063477
    8. ':
' → logprob: -13.193201065063477
    9. '():
' → logprob: -13.443201065063477
    10. ' :
' → logprob: -13.818201065063477

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4288922846317291
    2. '       ' → logprob: -1.0538922548294067
    3. '   ' → logprob: -9.553892135620117
    4. ' break' → logprob: -9.553892135620117
    5. 'break' → logprob: -11.178892135620117
    6. '	       ' → logprob: -11.428892135620117
    7. '     ' → logprob: -12.553892135620117
    8. '        ' → logprob: -12.553892135620117
    9. '          ' → logprob: -12.678892135620117
    10. '         ' → logprob: -13.053892135620117

Token 206: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7504491209983826
    2. 'break' (adapté à ' break') → logprob: -0.7504491209983826
    3. '       ' → logprob: -3.0004491806030273
    4. 'return' → logprob: -5.375449180603027
    5. ' return' → logprob: -6.875449180603027
    6. '	break' → logprob: -8.750449180603027
    7. '   ' → logprob: -9.750449180603027
    8. '           ' → logprob: -10.125449180603027
    9. '_break' → logprob: -13.125449180603027
    10. '
' → logprob: -13.500449180603027

Token 207: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00502158235758543
    2. '
' → logprob: -5.755021572113037
    3. '        
' → logprob: -7.005021572113037
    4. 'print' → logprob: -7.755021572113037
    5. '<|end|>' → logprob: -8.255022048950195
    6. '   ' → logprob: -9.005022048950195
    7. '    
' → logprob: -10.130022048950195
    8. ' print' → logprob: -10.880022048950195
    9. '<|end|>' → logprob: -11.630022048950195
    10. ',' → logprob: -11.755022048950195

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006224881508387625
    2. '   ' → logprob: -7.625622272491455
    3. 'print' → logprob: -9.500622749328613
    4. '
' → logprob: -11.000622749328613
    5. '        
' → logprob: -11.125622749328613
    6. '    
' → logprob: -12.000622749328613
    7. '           ' → logprob: -12.375622749328613
    8. '<|end|>' → logprob: -12.375622749328613
    9. ' print' → logprob: -12.500622749328613
    10. '	' → logprob: -13.000622749328613

Token 209: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.44910603761672974
    2. ' print' → logprob: -1.074105978012085
    3. ' result' → logprob: -4.449106216430664
    4. 'result' → logprob: -5.324106216430664
    5. '       ' → logprob: -6.199106216430664
    6. ' ops' → logprob: -7.324106216430664
    7. '   ' → logprob: -7.449106216430664
    8. 'ops' → logprob: -8.449106216430664
    9. ' res' → logprob: -9.949106216430664
    10. ' ans' → logprob: -10.449106216430664

Token 210: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3596038520336151
    2. '(min' → logprob: -1.3596038818359375
    3. '(m' → logprob: -3.1096038818359375
    4. '(f' → logprob: -7.8596038818359375
    5. '('' → logprob: -8.359603881835938
    6. '("' → logprob: -10.234603881835938
    7. '()' → logprob: -12.734603881835938
    8. '(
' → logprob: -13.484603881835938
    9. '(max' → logprob: -13.609603881835938
    10. '(M' → logprob: -13.984603881835938

Token 211: '_ops' (ID: 53418)
  Prédit: '_ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ops' → logprob: -1.6240566083070007e-06
    2. '_op' → logprob: -13.875001907348633
    3. '_opts' → logprob: -15.625001907348633
    4. '_' → logprob: -15.750001907348633
    5. '```' → logprob: -17.000001907348633
    6. '_objs' → logprob: -17.000001907348633
    7. ' _' → logprob: -17.250001907348633
    8. ')_' → logprob: -17.250001907348633
    9. '(_' → logprob: -17.625001907348633
    10. '_args' → logprob: -17.750001907348633

Token 212: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023631771910004318
    2. '(' → logprob: -8.375236511230469
    3. ' (' → logprob: -12.750236511230469
    4. ')' → logprob: -13.750236511230469
    5. ')n' → logprob: -14.125236511230469
    6. ')(' → logprob: -14.375236511230469
    7. '(
' → logprob: -14.750236511230469
    8. '(noun' → logprob: -18.00023651123047
    9. 'n' → logprob: -18.25023651123047
    10. '((' → logprob: -18.37523651123047

Token 213: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0021465737372636795
    2. ')' → logprob: -6.3771467208862305
    3. '()))' → logprob: -7.7521467208862305
    4. '())' → logprob: -11.62714672088623
    5. '))
' → logprob: -13.12714672088623
    6. ')))' → logprob: -13.50214672088623
    7. ' ))' → logprob: -13.87714672088623
    8. '()' → logprob: -14.37714672088623
    9. ')+' → logprob: -15.50214672088623
    10. ')
' → logprob: -16.752145767211914

Token 214: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9133008718490601
    2. '<|end|>' → logprob: -1.03830087184906
    3. '(' → logprob: -2.2883009910583496
    4. '```' → logprob: -2.4133009910583496
    5. '#' → logprob: -3.7883009910583496
    6. '()' → logprob: -4.53830099105835
    7. '<|end|>' → logprob: -5.16330099105835
    8. '[' → logprob: -5.78830099105835
    9. '\n' → logprob: -6.03830099105835
    10. ':' → logprob: -6.28830099105835


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 213
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 96
Tokens correctement prédits (top 10): 172
Précision stricte (1ère position): 42.25%
Précision adaptée (1ère position): 45.07%
Précision (top 10): 80.75%
================================================================================
