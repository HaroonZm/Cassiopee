================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import re

def main():
    # Nombre de serpents à identifier
    n = int(sys.stdin.readline().strip())

    # Expression régulière pour un serpent de type A
    # ^ >' (=+) # \1 ~ $
    # Détail :
    # ^ >'              : commence par >'
    # (=+)              : capture un ou plusieurs '='
    # #                 : suivi d'un '#'
    # \1                : suivi du même nombre d' '=' que précédemment (rappel du groupe 1)
    # ~                 : fini par un tilde '~'
    re_a = re.compile(r"^>'(=+)#\1~$")

    # Expression régulière pour un serpent de type B
    # ^ >\^ (Q=)+ ~~ $
    # Détail :
    # ^ >^             : commence par >^
    # (Q=)+            : une ou plusieurs répétitions de "Q="
    # ~~               : suivi de "~~" en fin
    re_b = re.compile(r"^>\^(Q=)+~~$")

    for _ in range(n):
        s = sys.stdin.readline().strip()

        # Test type A
        if re_a.match(s):
            print("A")
        # Test type B
        elif re_b.match(s):
            print("B")
        else:
            print("NA")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0415324792265892
    2. '\' → logprob: -4.291532516479492
    3. '.' → logprob: -4.541532516479492
    4. '[' → logprob: -5.166532516479492
    5. 'import' → logprob: -5.791532516479492
    6. '```' → logprob: -6.291532516479492
    7. 'newline' → logprob: -6.916532516479492
    8. '\b' → logprob: -7.166532516479492
    9. '\r' → logprob: -7.291532516479492
    10. '
' → logprob: -7.541532516479492

Token 6: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.667514443397522
    2. '.' → logprob: -1.917514443397522
    3. 'def' → logprob: -2.0425143241882324
    4. '```' → logprob: -2.4175143241882324
    5. 'import' → logprob: -2.5425143241882324
    6. '#' → logprob: -2.5425143241882324
    7. '^' → logprob: -2.5425143241882324
    8. '\' → logprob: -3.0425143241882324
    9. '[' → logprob: -3.2925143241882324
    10. 'pattern' → logprob: -3.5425143241882324

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008696353994309902
    2. ' process' → logprob: -5.633696556091309
    3. '_' → logprob: -6.383696556091309
    4. ' read' → logprob: -7.633696556091309
    5. ' parse' → logprob: -7.883696556091309
    6. ' space' → logprob: -8.133696556091309
    7. ' ' → logprob: -8.133696556091309
    8. ' main' → logprob: -8.258696556091309
    9. ' find' → logprob: -8.383696556091309
    10. ' _' → logprob: -8.758696556091309

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033581978641450405
    2. ':' → logprob: -9.375335693359375
    3. '(:' → logprob: -9.375335693359375
    4. '():' → logprob: -9.500335693359375
    5. '(
' → logprob: -10.875335693359375
    6. '):' → logprob: -10.875335693359375
    7. ' (' → logprob: -11.375335693359375
    8. ')' → logprob: -11.625335693359375
    9. '(":' → logprob: -12.250335693359375
    10. '(`' → logprob: -12.375335693359375

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13873133063316345
    2. ' ' → logprob: -2.6387312412261963
    3. '    ' → logprob: -3.3887312412261963
    4. '(' → logprob: -4.138731479644775
    5. '\' → logprob: -6.388731479644775
    6. '  ' → logprob: -6.763731479644775
    7. '    
' → logprob: -6.888731479644775
    8. 'print' → logprob: -7.263731479644775
    9. ')' → logprob: -7.638731479644775
    10. ' )' → logprob: -8.138731002807617

Token 10: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6986585855484009
    2. ' ' → logprob: -1.6986585855484009
    3. '    ' → logprob: -1.8236585855484009
    4. ' user' → logprob: -3.4486584663391113
    5. ' pass' → logprob: -3.9486584663391113
    6. 'n' → logprob: -3.9486584663391113
    7. 'user' → logprob: -4.198658466339111
    8. ' n' → logprob: -4.573658466339111
    9. ' input' → logprob: -4.823658466339111
    10. 'input' → logprob: -5.073658466339111

Token 11: ' Nombre' (ID: 70208)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.3543155193328857
    2. ' pass' → logprob: -1.4793155193328857
    3. '   ' → logprob: -1.8543155193328857
    4. ' input' → logprob: -2.7293155193328857
    5. ' user' → logprob: -2.8543155193328857
    6. 'input' → logprob: -2.9793155193328857
    7. '#' → logprob: -3.2293155193328857
    8. 'user' → logprob: -3.3543155193328857
    9. ' #' → logprob: -3.7293155193328857
    10. 'pattern' → logprob: -3.9793155193328857

Token 12: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.46635156869888306
    2. ' ' → logprob: -1.9663515090942383
    3. '_' → logprob: -2.2163515090942383
    4. ' =' → logprob: -3.4663515090942383
    5. '   ' → logprob: -3.7163515090942383
    6. '  ' → logprob: -4.216351509094238
    7. ' d' → logprob: -4.466351509094238
    8. 's' → logprob: -4.591351509094238
    9. 'de' → logprob: -4.591351509094238
    10. '_de' → logprob: -4.966351509094238

Token 13: ' serp' (ID: 116464)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8144381642341614
    2. 'f' → logprob: -2.0644381046295166
    3. 'clientes' → logprob: -2.9394381046295166
    4. 'usuarios' → logprob: -3.1894381046295166
    5. 'lí' → logprob: -3.3144381046295166
    6. 'm' → logprob: -3.4394381046295166
    7. 'util' → logprob: -3.4394381046295166
    8. 'lines' → logprob: -4.064438343048096
    9. 's' → logprob: -4.564438343048096
    10. 'car' → logprob: -4.564438343048096

Token 14: 'ents' (ID: 1094)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3896534740924835
    2. 'ientes' → logprob: -2.139653444290161
    3. 'ents' → logprob: -2.514653444290161
    4. 'ients' → logprob: -2.889653444290161
    5. 'pent' → logprob: -3.764653444290161
    6. 'ient' → logprob: -4.38965368270874
    7. 'ent' → logprob: -4.88965368270874
    8. 'ies' → logprob: -4.88965368270874
    9. 'iente' → logprob: -5.51465368270874
    10. 'pi' → logprob: -6.13965368270874

Token 15: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5050485134124756
    2. ' :' → logprob: -2.2550485134124756
    3. ' =' → logprob: -2.6300485134124756
    4. '   ' → logprob: -2.8800485134124756
    5. ' ' → logprob: -3.2550485134124756
    6. ':' → logprob: -3.3800485134124756
    7. ' )' → logprob: -3.7550485134124756
    8. ')' → logprob: -4.005048751831055
    9. '=' → logprob: -4.130048751831055
    10. 'n' → logprob: -4.255048751831055

Token 16: ' identifier' (ID: 24577)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.1857874393463135
    2. 'l' → logprob: -2.3107874393463135
    3. 'coder' → logprob: -2.4357874393463135
    4. 'chercher' → logprob: -2.6857874393463135
    5. 'aj' → logprob: -3.0607874393463135
    6. 'v' → logprob: -3.1857874393463135
    7. 'python' → logprob: -3.1857874393463135
    8. 'sim' → logprob: -3.3107874393463135
    9. 'aff' → logprob: -3.4357874393463135
    10. 'm' → logprob: -3.4357874393463135

Token 17: '
' (ID: 198)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4084332287311554
    2. ':' → logprob: -1.283433198928833
    3. ' ' → logprob: -4.033433437347412
    4. 'n' → logprob: -4.658433437347412
    5. '   ' → logprob: -4.908433437347412
    6. ' ' → logprob: -5.408433437347412
    7. 's' → logprob: -5.408433437347412
    8. '    ' → logprob: -5.658433437347412
    9. ' #' → logprob: -6.033433437347412
    10. '<|end|>' → logprob: -6.283433437347412

Token 18: '   ' (ID: 271)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6658324599266052
    2. ':' → logprob: -1.04083251953125
    3. ' ' → logprob: -2.29083251953125
    4. '   ' → logprob: -4.79083251953125
    5. ' ' → logprob: -5.16583251953125
    6. '    ' → logprob: -5.54083251953125
    7. '<|end|>' → logprob: -5.79083251953125
    8. 'n' → logprob: -6.04083251953125
    9. '  ' → logprob: -6.41583251953125
    10. 's' → logprob: -6.54083251953125

Token 19: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.7814931869506836
    2. ' n' → logprob: -1.0314931869506836
    3. ' snakes' → logprob: -2.6564931869506836
    4. '   ' → logprob: -3.2814931869506836
    5. ' snake' → logprob: -3.5314931869506836
    6. ' num' → logprob: -4.281493186950684
    7. ' ' → logprob: -4.781493186950684
    8. ' nb' → logprob: -5.156493186950684
    9. 'snake' → logprob: -5.406493186950684
    10. '    ' → logprob: -5.531493186950684

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2951909005641937
    2. ' ' → logprob: -1.5451909303665161
    3. '=' → logprob: -4.170190811157227
    4. '_' → logprob: -4.295190811157227
    5. 'umber' → logprob: -5.420190811157227
    6. '   ' → logprob: -6.170190811157227
    7. 'b' → logprob: -6.170190811157227
    8. '  ' → logprob: -6.670190811157227
    9. ' ' → logprob: -6.670190811157227
    10. 'um' → logprob: -7.545190811157227

Token 21: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6343413591384888
    2. ' int' → logprob: -0.7593413591384888
    3. 'int' → logprob: -6.384341239929199
    4. '  ' → logprob: -11.3843412399292
    5. ' input' → logprob: -11.3843412399292
    6. '0' → logprob: -12.3843412399292
    7. ' ' → logprob: -12.3843412399292
    8. '=int' → logprob: -12.6343412399292
    9. '10' → logprob: -12.7593412399292
    10. '20' → logprob: -13.0093412399292

Token 22: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044558022171258926
    2. '(input' → logprob: -3.294558048248291
    3. '(sys' → logprob: -5.044558048248291
    4. '('' → logprob: -10.919557571411133
    5. '(s' → logprob: -11.544557571411133
    6. ' (' → logprob: -11.669557571411133
    7. '(
' → logprob: -12.419557571411133
    8. '("("' → logprob: -13.169557571411133
    9. 'input' → logprob: -13.294557571411133
    10. '(n' → logprob: -13.919557571411133

Token 23: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8278913497924805
    2. '.stdin' → logprob: -0.8278913497924805
    3. '.argv' → logprob: -2.0778913497924805
    4. ' .' → logprob: -7.3278913497924805
    5. '.readline' → logprob: -9.45289134979248
    6. '.stdout' → logprob: -9.70289134979248
    7. '.input' → logprob: -10.32789134979248
    8. '.)' → logprob: -11.20289134979248
    9. '.std' → logprob: -11.70289134979248
    10. '(argv' → logprob: -12.95289134979248

Token 24: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0010679395636543632
    2. '.' → logprob: -7.126068115234375
    3. '.read' → logprob: -8.251068115234375
    4. '().' → logprob: -14.376068115234375
    5. ' .' → logprob: -14.376068115234375
    6. '.Read' → logprob: -15.001068115234375
    7. '.readlines' → logprob: -15.001068115234375
    8. ' readline' → logprob: -15.626068115234375
    9. '.stdin' → logprob: -15.751068115234375
    10. '.)' → logprob: -16.001068115234375

Token 25: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6391059756278992
    2. '()' → logprob: -0.7641059756278992
    3. '().' → logprob: -5.764105796813965
    4. '(' → logprob: -6.389105796813965
    5. ')' → logprob: -7.014105796813965
    6. '()))' → logprob: -7.889105796813965
    7. '('' → logprob: -8.264105796813965
    8. ' ())' → logprob: -10.014105796813965
    9. ' ' → logprob: -10.639105796813965
    10. '()[' → logprob: -11.514105796813965

Token 26: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0011815387988463044
    2. 'rstrip' → logprob: -6.751181602478027
    3. ')' → logprob: -11.876181602478027
    4. 'read' → logprob: -13.126181602478027
    5. 'split' → logprob: -13.876181602478027
    6. ' strip' → logprob: -13.876181602478027
    7. 'decode' → logprob: -16.12618064880371
    8. 'replace' → logprob: -16.37618064880371
    9. '_strip' → logprob: -16.37618064880371
    10. '-strip' → logprob: -16.75118064880371

Token 27: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5890330672264099
    2. ')' → logprob: -0.8390330672264099
    3. '()' → logprob: -4.464033126831055
    4. '))' → logprob: -6.839033126831055
    5. '()))' → logprob: -7.839033126831055
    6. '())
' → logprob: -11.214033126831055
    7. '(' → logprob: -11.714033126831055
    8. ' ())' → logprob: -13.714033126831055
    9. ' )' → logprob: -13.964033126831055
    10. ')
' → logprob: -14.839033126831055

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5236254334449768
    2. '\n' → logprob: -1.773625373840332
    3. '
' → logprob: -1.898625373840332
    4. 'for' → logprob: -2.773625373840332
    5. '    
' → logprob: -4.898625373840332
    6. '\' → logprob: -5.023625373840332
    7. '```' → logprob: -5.773625373840332
    8. ' for' → logprob: -5.898625373840332
    9. 'n' → logprob: -6.148625373840332
    10. '  
' → logprob: -7.023625373840332

Token 29: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16476088762283325
    2. 'for' → logprob: -2.1647608280181885
    3. 'sn' → logprob: -3.7897608280181885
    4. ' snakes' → logprob: -4.914761066436768
    5. 's' → logprob: -5.914761066436768
    6. 'snake' → logprob: -6.289761066436768
    7. ' for' → logprob: -6.789761066436768
    8. '```' → logprob: -7.039761066436768
    9. '    
' → logprob: -8.53976058959961
    10. 'result' → logprob: -9.66476058959961

Token 30: ' Expression' (ID: 32496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1394885778427124
    2. ' snakes' → logprob: -1.2644885778427124
    3. 'sn' → logprob: -1.7644885778427124
    4. ' for' → logprob: -1.8894885778427124
    5. 'patterns' → logprob: -3.639488697052002
    6. 'snake' → logprob: -4.389488697052002
    7. ' serp' → logprob: -5.139488697052002
    8. 'pattern' → logprob: -5.639488697052002
    9. 'names' → logprob: -5.889488697052002
    10. ' patterns' → logprob: -6.014488697052002

Token 31: ' réguli' (ID: 59739)
  Prédit: ' réguli'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réguli' → logprob: -0.41447895765304565
    2. ' regular' → logprob: -1.2894790172576904
    3. 'regular' → logprob: -3.5394790172576904
    4. 'r' → logprob: -4.664478778839111
    5. '_regular' → logprob: -5.664478778839111
    6. 's' → logprob: -5.664478778839111
    7. ' =' → logprob: -5.789478778839111
    8. ' de' → logprob: -5.789478778839111
    9. ' pattern' → logprob: -6.789478778839111
    10. 'reg' → logprob: -6.914478778839111

Token 32: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0006018842686899006
    2. '`' → logprob: -8.500601768493652
    3. 'èr' → logprob: -9.000601768493652
    4. 'è' → logprob: -9.500601768493652
    5. 'ères' → logprob: -9.750601768493652
    6. 're' → logprob: -10.125601768493652
    7. 'aire' → logprob: -10.500601768493652
    8. '```' → logprob: -10.625601768493652
    9. 'er' → logprob: -11.125601768493652
    10. 'ere' → logprob: -11.125601768493652

Token 33: ' pour' (ID: 1930)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.1851835995912552
    2. ' pattern' → logprob: -2.060183525085449
    3. 's' → logprob: -4.435183525085449
    4. '   ' → logprob: -4.560183525085449
    5. 'r' → logprob: -5.185183525085449
    6. 'snake' → logprob: -5.435183525085449
    7. 'regex' → logprob: -5.560183525085449
    8. ' snake' → logprob: -5.935183525085449
    9. 'pat' → logprob: -7.310183525085449
    10. ':' → logprob: -8.56018352508545

Token 34: ' un' (ID: 537)
  Prédit: ' identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' identifier' → logprob: -1.1377191543579102
    2. ' détect' → logprob: -1.7627191543579102
    3. ' reconnaître' → logprob: -1.8877191543579102
    4. ' matcher' → logprob: -2.63771915435791
    5. ' reconn' → logprob: -3.01271915435791
    6. 'identifier' → logprob: -3.13771915435791
    7. 'matcher' → logprob: -3.26271915435791
    8. 're' → logprob: -3.63771915435791
    9. ' rep' → logprob: -4.01271915435791
    10. 'r' → logprob: -4.13771915435791

Token 35: ' serpent' (ID: 154163)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00767122209072113
    2. ' e' → logprob: -6.132671356201172
    3. 'es' → logprob: -6.257671356201172
    4. 'a' → logprob: -6.882671356201172
    5. ' motif' → logprob: -8.257671356201172
    6. ' ' → logprob: -8.382671356201172
    7. '\s' → logprob: -8.382671356201172
    8. ' snake' → logprob: -8.382671356201172
    9. '\' → logprob: -8.757671356201172
    10. '(e' → logprob: -8.882671356201172

Token 36: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4490286111831665
    2. 'pattern' → logprob: -1.4490286111831665
    3. 's' → logprob: -1.8240286111831665
    4. ' pattern' → logprob: -2.074028491973877
    5. ' :' → logprob: -2.824028491973877
    6. ' snake' → logprob: -3.324028491973877
    7. ' =' → logprob: -3.449028491973877
    8. 'snake' → logprob: -3.449028491973877
    9. 'ser' → logprob: -3.949028491973877
    10. 'regex' → logprob: -4.449028491973877

Token 37: ' type' (ID: 1490)
  Prédit: '\s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\s' → logprob: -1.9384227991104126
    2. '\d' → logprob: -1.9384227991104126
    3. '[' → logprob: -2.563422679901123
    4. 'r' → logprob: -2.563422679901123
    5. 's' → logprob: -2.688422679901123
    6. ' ' → logprob: -3.063422679901123
    7. 'l' → logprob: -3.188422679901123
    8. '[a' → logprob: -3.188422679901123
    9. '([' → logprob: -3.688422679901123
    10. '\' → logprob: -3.938422679901123

Token 38: ' A' (ID: 355)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.1058871746063232
    2. 'r' → logprob: -1.2308871746063232
    3. '\s' → logprob: -2.1058871746063232
    4. '\b' → logprob: -3.1058871746063232
    5. ' :' → logprob: -3.4808871746063232
    6. ' snake' → logprob: -3.8558871746063232
    7. 's' → logprob: -4.230887413024902
    8. ' "' → logprob: -4.230887413024902
    9. ':' → logprob: -4.480887413024902
    10. ' '' → logprob: -4.605887413024902

Token 39: '
' (ID: 198)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5884444713592529
    2. ' =' → logprob: -2.213444471359253
    3. ':' → logprob: -2.463444471359253
    4. 'r' → logprob: -2.713444471359253
    5. '\s' → logprob: -2.713444471359253
    6. '[a' → logprob: -3.463444471359253
    7. 'a' → logprob: -3.713444471359253
    8. '[' → logprob: -4.713444709777832
    9. '=' → logprob: -4.838444709777832
    10. ',' → logprob: -4.963444709777832

Token 40: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0781645774841309
    2. 'pattern' → logprob: -1.2031645774841309
    3. 's' → logprob: -1.9531645774841309
    4. 'r' → logprob: -2.453164577484131
    5. 'snake' → logprob: -3.078164577484131
    6. ' pattern' → logprob: -4.578164577484131
    7. ' a' → logprob: -4.578164577484131
    8. '\s' → logprob: -4.703164577484131
    9. ' snake' → logprob: -4.828164577484131
    10. 'p' → logprob: -4.953164577484131

Token 41: ' #' (ID: 1069)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5654168725013733
    2. ' pattern' → logprob: -0.9404168725013733
    3. ' a' → logprob: -4.9404168128967285
    4. 'a' → logprob: -5.0654168128967285
    5. 'regex' → logprob: -5.0654168128967285
    6. ' snake' → logprob: -5.4404168128967285
    7. 'snake' → logprob: -5.4404168128967285
    8. 's' → logprob: -6.0654168128967285
    9. ' serpent' → logprob: -6.1904168128967285
    10. 'pat' → logprob: -6.5654168128967285

Token 42: ' ^' (ID: 7602)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.1990135759115219
    2. ' pattern' → logprob: -1.949013590812683
    3. 'a' → logprob: -4.449013710021973
    4. 'snake' → logprob: -5.074013710021973
    5. ' a' → logprob: -5.699013710021973
    6. 'regex' → logprob: -5.824013710021973
    7. ' serpent' → logprob: -6.074013710021973
    8. 'pat' → logprob: -6.074013710021973
    9. ' snake' → logprob: -6.199013710021973
    10. 'ser' → logprob: -6.199013710021973

Token 43: ' >' (ID: 1424)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0394338369369507
    2. '[A' → logprob: -1.0394338369369507
    3. 'S' → logprob: -2.7894339561462402
    4. 'a' → logprob: -3.2894339561462402
    5. '[' → logprob: -3.5394339561462402
    6. '[a' → logprob: -3.5394339561462402
    7. 'r' → logprob: -3.6644339561462402
    8. '([' → logprob: -4.16443395614624
    9. '\[' → logprob: -4.41443395614624
    10. 's' → logprob: -4.66443395614624

Token 44: ''' (ID: 6)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0402241945266724
    2. '[A' → logprob: -1.0402241945266724
    3. '[' → logprob: -2.540224075317383
    4. '\[' → logprob: -2.790224075317383
    5. '\' → logprob: -3.290224075317383
    6. '[a' → logprob: -3.790224075317383
    7. 'a' → logprob: -3.790224075317383
    8. 'r' → logprob: -4.040224075317383
    9. 'S' → logprob: -4.790224075317383
    10. '^' → logprob: -5.165224075317383

Token 45: ' (=' (ID: 72569)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -1.650342345237732
    2. '[' → logprob: -1.900342345237732
    3. '>' → logprob: -2.2753424644470215
    4. 'A' → logprob: -2.2753424644470215
    5. '\' → logprob: -2.2753424644470215
    6. '^' → logprob: -2.9003424644470215
    7. '[a' → logprob: -3.4003424644470215
    8. '\[' → logprob: -3.4003424644470215
    9. '@' → logprob: -3.9003424644470215
    10. 'a' → logprob: -3.9003424644470215

Token 46: '+)' (ID: 63829)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.694551408290863
    2. '[' → logprob: -2.319551467895508
    3. ')' → logprob: -2.694551467895508
    4. '\d' → logprob: -3.694551467895508
    5. '\\' → logprob: -3.819551467895508
    6. '\s' → logprob: -3.944551467895508
    7. '')' → logprob: -4.069551467895508
    8. '.*' → logprob: -4.319551467895508
    9. '^' → logprob: -4.319551467895508
    10. '\[' → logprob: -4.507051467895508

Token 47: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.458815574645996
    2. ''' → logprob: -1.583815574645996
    3. '>' → logprob: -1.708815574645996
    4. '~' → logprob: -2.083815574645996
    5. '\' → logprob: -2.458815574645996
    6. '(' → logprob: -3.708815574645996
    7. '[' → logprob: -3.833815574645996
    8. '#' → logprob: -3.958815574645996
    9. '^' → logprob: -4.708815574645996
    10. ''>' → logprob: -4.833815574645996

Token 48: ' \' (ID: 2381)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.32318297028541565
    2. '\[' → logprob: -2.448183059692383
    3. '[' → logprob: -3.073183059692383
    4. '>' → logprob: -3.073183059692383
    5. '=' → logprob: -3.948183059692383
    6. '^' → logprob: -4.698183059692383
    7. '\(' → logprob: -4.948183059692383
    8. '(' → logprob: -4.948183059692383
    9. '@' → logprob: -5.073183059692383
    10. '(\' → logprob: -5.573183059692383

Token 49: '1' (ID: 16)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.8035778999328613
    2. '[' → logprob: -1.5535778999328613
    3. '(' → logprob: -2.8035778999328613
    4. '\' → logprob: -2.8035778999328613
    5. '+' → logprob: -3.4285778999328613
    6. ')' → logprob: -3.6785778999328613
    7. '>' → logprob: -4.053577899932861
    8. '@' → logprob: -4.178577899932861
    9. '['' → logprob: -4.178577899932861
    10. '^(' → logprob: -4.678577899932861

Token 50: ' ~' (ID: 6574)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0799297094345093
    2. '\' → logprob: -1.9549297094345093
    3. '(' → logprob: -2.329929828643799
    4. '$' → logprob: -2.579929828643799
    5. '>' → logprob: -2.704929828643799
    6. '=' → logprob: -3.204929828643799
    7. '[' → logprob: -3.579929828643799
    8. '('' → logprob: -3.704929828643799
    9. '@' → logprob: -3.954929828643799
    10. '^' → logprob: -4.204929828643799

Token 51: ' $
' (ID: 55389)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.5129806399345398
    2. '<|end|>' → logprob: -1.2629806995391846
    3. '[' → logprob: -3.1379806995391846
    4. '\' → logprob: -3.8879806995391846
    5. '<|end|>' → logprob: -4.7629804611206055
    6. '>' → logprob: -5.2629804611206055
    7. '\n' → logprob: -6.1379804611206055
    8. ' ' → logprob: -6.1379804611206055
    9. ')' → logprob: -6.1379804611206055
    10. '\b' → logprob: -6.1379804611206055

Token 52: '   ' (ID: 271)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.5828733444213867
    2. '\' → logprob: -2.2078733444213867
    3. '[' → logprob: -2.7078733444213867
    4. '<|end|>' → logprob: -2.7078733444213867
    5. '>' → logprob: -2.8328733444213867
    6. ''' → logprob: -4.582873344421387
    7. '^' → logprob: -4.582873344421387
    8. '(' → logprob: -4.582873344421387
    9. '\n' → logprob: -4.707873344421387
    10. ' ' → logprob: -4.957873344421387

Token 53: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8561685085296631
    2. '^' → logprob: -1.231168508529663
    3. '\' → logprob: -2.981168508529663
    4. ' ' → logprob: -2.981168508529663
    5. 'import' → logprob: -3.731168508529663
    6. '\n' → logprob: -4.231168746948242
    7. 'r' → logprob: -4.606168746948242
    8. '[a' → logprob: -4.731168746948242
    9. '\[' → logprob: -4.731168746948242
    10. 'a' → logprob: -4.856168746948242

Token 54: ' D' (ID: 415)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -1.184127926826477
    2. '[' → logprob: -1.809127926826477
    3. ' ' → logprob: -2.4341278076171875
    4. 'a' → logprob: -2.4341278076171875
    5. 's' → logprob: -2.5591278076171875
    6. '   ' → logprob: -3.5591278076171875
    7. 'import' → logprob: -3.6841278076171875
    8. ' =' → logprob: -3.9341278076171875
    9. ' pattern' → logprob: -3.9341278076171875
    10. '  ' → logprob: -4.4341278076171875

Token 55: 'ét' (ID: 3913)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07840229570865631
    2. '{' → logprob: -2.828402280807495
    3. '<|end|>' → logprob: -5.953402519226074
    4. 'e' → logprob: -6.203402519226074
    5. '*' → logprob: -6.203402519226074
    6. '$' → logprob: -6.578402519226074
    7. 'ef' → logprob: -6.828402519226074
    8. '=' → logprob: -6.953402519226074
    9. 'r' → logprob: -7.078402519226074
    10. '[' → logprob: -7.078402519226074

Token 56: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.5891500115394592
    2. 'e' → logprob: -1.4641499519348145
    3. 'erm' → logprob: -2.5891499519348145
    4. 'é' → logprob: -3.3391499519348145
    5. 'er' → logprob: -3.8391499519348145
    6. 'ermin' → logprob: -4.2141499519348145
    7. 'ection' → logprob: -4.5891499519348145
    8. 'ect' → logprob: -4.5891499519348145
    9. 'a' → logprob: -4.8391499519348145
    10. 'ermine' → logprob: -4.9641499519348145

Token 57: ' :
' (ID: 10039)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0343025922775269
    2. '   ' → logprob: -1.6593025922775269
    3. '    ' → logprob: -2.7843027114868164
    4. 'r' → logprob: -2.7843027114868164
    5. '^' → logprob: -2.9093027114868164
    6. '  ' → logprob: -3.0343027114868164
    7. ' ^' → logprob: -3.5343027114868164
    8. '<|end|>' → logprob: -3.5343027114868164
    9. '\s' → logprob: -3.9093027114868164
    10. '[' → logprob: -4.034302711486816

Token 59: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2099628448486328
    2. ' ' → logprob: -1.5849628448486328
    3. '    ' → logprob: -1.7099628448486328
    4. 'r' → logprob: -2.459962844848633
    5. ' r' → logprob: -2.834962844848633
    6. ' ^' → logprob: -3.459962844848633
    7. ' #' → logprob: -3.709962844848633
    8. '\s' → logprob: -3.709962844848633
    9. ' \' → logprob: -4.584962844848633
    10. '  ' → logprob: -4.709962844848633

Token 60: ' ^' (ID: 7602)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2251137495040894
    2. ' \' → logprob: -1.9751137495040894
    3. '=' → logprob: -2.100113868713379
    4. '(' → logprob: -2.725113868713379
    5. '\(' → logprob: -2.725113868713379
    6. ' \(' → logprob: -2.850113868713379
    7. '\s' → logprob: -3.100113868713379
    8. ' (' → logprob: -3.725113868713379
    9. ''' → logprob: -3.725113868713379
    10. ' =' → logprob: -3.975113868713379

Token 61: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.26274728775024414
    2. '\' → logprob: -1.8877472877502441
    3. '>\' → logprob: -3.012747287750244
    4. '[' → logprob: -4.887747287750244
    5. '>'' → logprob: -4.887747287750244
    6. '>\<' → logprob: -5.637747287750244
    7. ' >' → logprob: -6.137747287750244
    8. '&gt' → logprob: -6.262747287750244
    9. '\[' → logprob: -7.012747287750244
    10. '^' → logprob: -7.137747287750244

Token 62: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04287552461028099
    2. ''>' → logprob: -3.2928755283355713
    3. '\'' → logprob: -6.417875289916992
    4. ''\' → logprob: -6.792875289916992
    5. ' '' → logprob: -7.542875289916992
    6. '>'' → logprob: -7.917875289916992
    7. '\' → logprob: -8.417875289916992
    8. '<|end|>' → logprob: -8.792875289916992
    9. '<|end|>' → logprob: -9.542875289916992
    10. ''><' → logprob: -9.667875289916992

Token 63: '             ' (ID: 1698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' commence' (ID: 44755)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.5032330751419067
    2. '\' → logprob: -1.6282330751419067
    3. '>' → logprob: -2.253232955932617
    4. ''>' → logprob: -3.503232955932617
    5. ''^' → logprob: -3.753232955932617
    6. ''' → logprob: -4.003232955932617
    7. '">' → logprob: -5.628232955932617
    8. '^\' → logprob: -5.753232955932617
    9. '>'' → logprob: -5.878232955932617
    10. '<|end|>' → logprob: -6.253232955932617

Token 66: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.8219940662384033
    2. '>' → logprob: -1.3219940662384033
    3. '^' → logprob: -1.8219940662384033
    4. '>'' → logprob: -2.6969940662384033
    5. ' par' → logprob: -4.321993827819824
    6. ''>' → logprob: -4.571993827819824
    7. ''' → logprob: -4.571993827819824
    8. 'avec' → logprob: -5.196993827819824
    9. '^\' → logprob: -5.821993827819824
    10. '\' → logprob: -5.821993827819824

Token 67: ' >' (ID: 1424)
  Prédit: '>''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>'' → logprob: -0.7511851191520691
    2. '>' → logprob: -1.0011851787567139
    3. ''>' → logprob: -2.626185178756714
    4. ''' → logprob: -3.876185178756714
    5. '>\' → logprob: -4.126184940338135
    6. ' >' → logprob: -4.126184940338135
    7. '^' → logprob: -4.626184940338135
    8. '\' → logprob: -5.001184940338135
    9. '">'' → logprob: -5.876184940338135
    10. ' '' → logprob: -6.126184940338135

Token 68: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18657158315181732
    2. '<|end|>' → logprob: -2.1865715980529785
    3. ''>' → logprob: -3.8115715980529785
    4. '<|end|>' → logprob: -3.8115715980529785
    5. '>'' → logprob: -6.3115715980529785
    6. '\'' → logprob: -6.4365715980529785
    7. '\' → logprob: -6.6865715980529785
    8. '')' → logprob: -6.6865715980529785
    9. ' '' → logprob: -7.0615715980529785
    10. '>' → logprob: -7.1865715980529785

Token 69: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5029290318489075
    2. '=' → logprob: -2.0029289722442627
    3. '\' → logprob: -2.3779289722442627
    4. '\(' → logprob: -3.1279289722442627
    5. ' (=' → logprob: -3.2529289722442627
    6. '(\' → logprob: -3.6279289722442627
    7. '[' → logprob: -3.8779289722442627
    8. '\[' → logprob: -4.877929210662842
    9. '<|end|>' → logprob: -5.127929210662842
    10. '(?' → logprob: -5.377929210662842

Token 70: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5095803141593933
    2. '=' → logprob: -1.509580373764038
    3. '\(' → logprob: -2.509580373764038
    4. '(\' → logprob: -3.509580373764038
    5. ' (=' → logprob: -3.884580373764038
    6. '\' → logprob: -3.884580373764038
    7. '=(' → logprob: -5.009580135345459
    8. ' \(' → logprob: -5.134580135345459
    9. '=\' → logprob: -5.384580135345459
    10. ' (' → logprob: -6.384580135345459

Token 71: ' (=' (ID: 72569)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13607415556907654
    2. '\(' → logprob: -2.3860740661621094
    3. '(\' → logprob: -4.261074066162109
    4. '\' → logprob: -4.761074066162109
    5. '=' → logprob: -5.511074066162109
    6. ' (=' → logprob: -5.636074066162109
    7. ' \(' → logprob: -5.636074066162109
    8. '=(' → logprob: -7.386074066162109
    9. '=\' → logprob: -8.76107406616211
    10. ' (' → logprob: -9.01107406616211

Token 72: '+)' (ID: 63829)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39682552218437195
    2. '+)' → logprob: -1.5218255519866943
    3. '(' → logprob: -2.6468255519866943
    4. '=' → logprob: -3.5218255519866943
    5. '[' → logprob: -6.146825313568115
    6. '\' → logprob: -6.271825313568115
    7. ')+' → logprob: -6.521825313568115
    8. ')' → logprob: -6.646825313568115
    9. '+=' → logprob: -7.146825313568115
    10. '(+' → logprob: -7.771825313568115

Token 73: '             ' (ID: 1698)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.5771661400794983
    2. '<|end|>' → logprob: -1.5771660804748535
    3. ')' → logprob: -2.0771660804748535
    4. '\\' → logprob: -3.2021660804748535
    5. ' \' → logprob: -3.4521660804748535
    6. ' ' → logprob: -4.9521660804748535
    7. '   ' → logprob: -5.3271660804748535
    8. '<|end|>' → logprob: -5.4521660804748535
    9. ')\' → logprob: -5.8271660804748535
    10. '#' → logprob: -5.9521660804748535

Token 74: ' :' (ID: 712)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.29514074325561523
    2. ')' → logprob: -2.6701407432556152
    3. '<|end|>' → logprob: -3.0451407432556152
    4. ' \' → logprob: -3.5451407432556152
    5. '=' → logprob: -3.6701407432556152
    6. '#' → logprob: -4.045140743255615
    7. '\\' → logprob: -4.545140743255615
    8. ':' (adapté à ' :') → logprob: -4.545140743255615
    9. '<|end|>' → logprob: -4.795140743255615
    10. ' ' → logprob: -4.920140743255615

Token 75: ' capture' (ID: 19374)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05924874171614647
    2. '=' → logprob: -4.309248924255371
    3. '(\' → logprob: -4.309248924255371
    4. '(group' → logprob: -4.434248924255371
    5. '\' → logprob: -5.559248924255371
    6. '('='' → logprob: -5.809248924255371
    7. 'group' → logprob: -6.309248924255371
    8. '(?' → logprob: -6.434248924255371
    9. '('' → logprob: -6.934248924255371
    10. 'capt' → logprob: -7.559248924255371

Token 76: ' un' (ID: 537)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004889435134828091
    2. '(' → logprob: -6.254889488220215
    3. '('='' → logprob: -7.379889488220215
    4. '\' → logprob: -8.004889488220215
    5. '<|end|>' → logprob: -8.004889488220215
    6. ')' → logprob: -8.754889488220215
    7. 'group' → logprob: -8.879889488220215
    8. ' (=' → logprob: -8.879889488220215
    9. '("="' → logprob: -9.004889488220215
    10. ' group' → logprob: -9.254889488220215

Token 77: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004504773300141096
    2. 'g' → logprob: -7.254504680633545
    3. ' groupe' → logprob: -7.379504680633545
    4. '<|end|>' → logprob: -7.379504680633545
    5. ' =' → logprob: -7.754504680633545
    6. 'e' → logprob: -7.879504680633545
    7. 'group' → logprob: -8.254505157470703
    8. 's' → logprob: -8.379505157470703
    9. 'equal' → logprob: -8.379505157470703
    10. '=}' → logprob: -8.629505157470703

Token 78: ' plusieurs' (ID: 20875)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14478886127471924
    2. '=' → logprob: -2.6447887420654297
    3. 'plus' → logprob: -2.8947887420654297
    4. 'more' → logprob: -5.14478874206543
    5. 'pl' → logprob: -7.39478874206543
    6. ' more' → logprob: -7.76978874206543
    7. ' plus' → logprob: -8.26978874206543
    8. '+=' → logprob: -8.39478874206543
    9. '>' → logprob: -8.64478874206543
    10. '```' → logprob: -8.64478874206543

Token 79: ' '='' (ID: 98780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -4.167648876318708e-05
    2. '=}' → logprob: -11.125041961669922
    3. ''=' → logprob: -12.125041961669922
    4. '==' → logprob: -12.625041961669922
    5. '=

' → logprob: -12.750041961669922
    6. '=<?' → logprob: -13.250041961669922
    7. '=(' → logprob: -13.625041961669922
    8. '='' → logprob: -13.750041961669922
    9. '=*' → logprob: -13.875041961669922
    10. '=.*' → logprob: -13.875041961669922

Token 80: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '   ' (ID: 271)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.0592776536941528
    2. '   ' → logprob: -1.1842776536941528
    3. '#' → logprob: -1.5592776536941528
    4. '\' → logprob: -3.6842775344848633
    5. '    ' → logprob: -3.6842775344848633
    6. ' ' → logprob: -3.8092775344848633
    7. ')' → logprob: -3.9342775344848633
    8. ' \' → logprob: -4.809277534484863
    9. ' )' → logprob: -4.934277534484863
    10. '(' → logprob: -5.059277534484863

Token 82: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37442877888679504
    2. '#' (adapté à ' #') → logprob: -2.4994287490844727
    3. ')' → logprob: -2.9994287490844727
    4. '[' → logprob: -3.1244287490844727
    5. '\' → logprob: -3.3744287490844727
    6. '\s' → logprob: -3.4994287490844727
    7. ' ' → logprob: -4.374428749084473
    8. '(' → logprob: -4.499428749084473
    9. ' #' → logprob: -4.624428749084473
    10. ' )' → logprob: -4.749428749084473

Token 83: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8955866098403931
    2. '\' → logprob: -1.395586609840393
    3. '#' → logprob: -1.520586609840393
    4. '\\' → logprob: -3.5205864906311035
    5. ' #' → logprob: -3.6455864906311035
    6. ')' → logprob: -4.2705864906311035
    7. '(' → logprob: -4.3955864906311035
    8. ' \' → logprob: -4.5205864906311035
    9. ' ' → logprob: -4.7705864906311035
    10. '    ' → logprob: -5.1455864906311035

Token 84: '                ' (ID: 408)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.15436464548110962
    2. ' ' → logprob: -2.654364585876465
    3. ')' → logprob: -3.904364585876465
    4. ' \' → logprob: -4.029364585876465
    5. '<|end|>' → logprob: -4.654364585876465
    6. '+' → logprob: -5.029364585876465
    7. '  ' → logprob: -5.279364585876465
    8. '<|end|>' → logprob: -5.779364585876465
    9. ' )' → logprob: -5.904364585876465
    10. '(' → logprob: -6.279364585876465

Token 85: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7016153931617737
    2. '\' → logprob: -1.076615333557129
    3. ' \' → logprob: -2.826615333557129
    4. '<|end|>' → logprob: -3.076615333557129
    5. '<|end|>' → logprob: -4.076615333557129
    6. '  ' → logprob: -4.201615333557129
    7. ')' → logprob: -4.951615333557129
    8. ' ' → logprob: -6.076615333557129
    9. '...' → logprob: -6.326615333557129
    10. '\\' → logprob: -6.326615333557129

Token 86: ' suivi' (ID: 60370)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.37618282437324524
    2. ' ' → logprob: -1.3761827945709229
    3. '\' → logprob: -3.626182794570923
    4. ' '' → logprob: -5.126183032989502
    5. '  ' → logprob: -5.376183032989502
    6. ' space' → logprob: -5.501183032989502
    7. '#' → logprob: -5.751183032989502
    8. ' \' → logprob: -5.876183032989502
    9. ' ' → logprob: -6.001183032989502
    10. ' espace' → logprob: -6.376183032989502

Token 87: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1578795462846756
    2. '<|end|>' → logprob: -2.782879590988159
    3. 'd' → logprob: -3.532879590988159
    4. ' par' → logprob: -3.782879590988159
    5. ' ' → logprob: -5.03287935256958
    6. '  ' → logprob: -5.03287935256958
    7. 'par' → logprob: -5.28287935256958
    8. ' de' → logprob: -5.53287935256958
    9. ' by' → logprob: -5.90787935256958
    10. '<|end|>' → logprob: -6.53287935256958

Token 88: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.9400883316993713
    2. ' un' → logprob: -1.0650882720947266
    3. ''' → logprob: -2.0650882720947266
    4. 'un' → logprob: -3.1900882720947266
    5. ' ' → logprob: -3.6900882720947266
    6. '<|end|>' → logprob: -4.190088272094727
    7. 'a' → logprob: -4.440088272094727
    8. 'space' → logprob: -4.815088272094727
    9. ' '' → logprob: -4.940088272094727
    10. '  ' → logprob: -4.940088272094727

Token 89: ' '#' (ID: 11284)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07144413888454437
    2. ' #' → logprob: -3.071444034576416
    3. ''' → logprob: -4.446444034576416
    4. ' ' → logprob: -5.446444034576416
    5. 'space' → logprob: -6.446444034576416
    6. '<|end|>' → logprob: -7.071444034576416
    7. ''#' → logprob: -7.571444034576416
    8. '=' → logprob: -7.571444034576416
    9. '~' → logprob: -8.071444511413574
    10. '(' → logprob: -8.196444511413574

Token 90: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1245642900466919
    2. ' \' → logprob: -2.6245641708374023
    3. '\' → logprob: -3.8745641708374023
    4. '    ' → logprob: -4.874564170837402
    5. ' #' → logprob: -6.124564170837402
    6. ' \\' → logprob: -6.124564170837402
    7. ' r' → logprob: -6.249564170837402
    8. ' ' → logprob: -6.374564170837402
    9. '  ' → logprob: -6.624564170837402
    10. 'r' → logprob: -6.874564170837402

Token 92: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037745364010334015
    2. ' \' → logprob: -4.162745475769043
    3. '\' → logprob: -4.537745475769043
    4. '    ' → logprob: -5.537745475769043
    5. ' ' → logprob: -7.162745475769043
    6. '[' → logprob: -7.162745475769043
    7. '\s' → logprob: -7.287745475769043
    8. ' {' → logprob: -7.412745475769043
    9. ' \\' → logprob: -7.537745475769043
    10. '  ' → logprob: -7.662745475769043

Token 93: ' \' (ID: 2381)
  Prédit: ' \'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' \' → logprob: -0.18021520972251892
    2. '\' → logprob: -2.0552151203155518
    3. ' r' → logprob: -4.430215358734131
    4. ' \\' → logprob: -4.555215358734131
    5. 'r' → logprob: -5.430215358734131
    6. ' ' → logprob: -5.930215358734131
    7. '(' → logprob: -6.305215358734131
    8. '\\' → logprob: -6.805215358734131
    9. 're' → logprob: -6.930215358734131
    10. '(\' → logprob: -7.055215358734131

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010533124441280961
    2. '\' → logprob: -9.875104904174805
    3. '(' → logprob: -11.250104904174805
    4. '2' → logprob: -11.500104904174805
    5. 'd' → logprob: -11.750104904174805
    6. '\\' → logprob: -11.875104904174805
    7. 'n' → logprob: -13.187604904174805
    8. '{' → logprob: -13.562604904174805
    9. '(\' → logprob: -13.687604904174805
    10. 's' → logprob: -13.812604904174805

Token 95: '               ' (ID: 506)
  Prédit: ' ~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ~' → logprob: -0.35695716738700867
    2. '~' → logprob: -1.231957197189331
    3. ' ' → logprob: -6.106956958770752
    4. '<|end|>' → logprob: -6.106956958770752
    5. '  ' → logprob: -7.231956958770752
    6. '<|end|>' → logprob: -7.481956958770752
    7. '~~~' → logprob: -7.606956958770752
    8. '[' → logprob: -7.731956958770752
    9. ' ' → logprob: -8.35695743560791
    10. '   ' → logprob: -8.73195743560791

Token 96: ' :' (ID: 712)
  Prédit: ' ~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ~' → logprob: -0.06982637941837311
    2. ' ' → logprob: -3.569826364517212
    3. '~' → logprob: -5.069826602935791
    4. ' #' → logprob: -5.194826602935791
    5. '  ' → logprob: -5.319826602935791
    6. ' +' → logprob: -6.069826602935791
    7. ' :' → logprob: -6.069826602935791
    8. '<|end|>' → logprob: -6.194826602935791
    9. ')' → logprob: -6.319826602935791
    10. '<|end|>' → logprob: -6.569826602935791

Token 97: ' suivi' (ID: 60370)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '~' → logprob: -0.5259535312652588
    2. '=' → logprob: -1.2759535312652588
    3. ' ~' → logprob: -3.025953531265259
    4. '\' → logprob: -3.525953531265259
    5. '+' → logprob: -4.15095329284668
    6. 're' → logprob: -4.90095329284668
    7. ' =' → logprob: -5.02595329284668
    8. '[' → logprob: -6.15095329284668
    9. 'same' → logprob: -6.40095329284668
    10. ' ' → logprob: -6.52595329284668

Token 98: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.06899971514940262
    2. '<|end|>' → logprob: -3.943999767303467
    3. 'du' → logprob: -4.193999767303467
    4. ' de' → logprob: -4.318999767303467
    5. ' d' → logprob: -4.443999767303467
    6. 'd' → logprob: -5.443999767303467
    7. ' ' → logprob: -7.318999767303467
    8. 'de' → logprob: -7.443999767303467
    9. ' par' → logprob: -7.568999767303467
    10. ' of' → logprob: -7.693999767303467

Token 99: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2733498513698578
    2. ' même' → logprob: -1.5233498811721802
    3. 'conten' → logprob: -5.023349761962891
    4. '\' → logprob: -5.398349761962891
    5. 'prem' → logprob: -6.023349761962891
    6. '=' → logprob: -6.148349761962891
    7. 'back' → logprob: -7.023349761962891
    8. ' contenu' → logprob: -7.148349761962891
    9. 'even' → logprob: -7.398349761962891
    10. 'same' → logprob: -7.648349761962891

Token 100: ' nombre' (ID: 9733)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005222928593866527
    2. ''' → logprob: -8.75052261352539
    3. ''=' → logprob: -9.62552261352539
    4. '='' → logprob: -9.87552261352539
    5. '(' → logprob: -10.12552261352539
    6. 's' → logprob: -10.62552261352539
    7. 'token' → logprob: -10.75052261352539
    8. '=}' → logprob: -10.75052261352539
    9. '('='' → logprob: -11.25052261352539
    10. 'equal' → logprob: -11.25052261352539

Token 101: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03387009724974632
    2. ''=' → logprob: -3.658869981765747
    3. ''' → logprob: -4.908870220184326
    4. 'equal' → logprob: -10.158869743347168
    5. '"' → logprob: -10.408869743347168
    6. '='' → logprob: -11.033869743347168
    7. '==' → logprob: -11.158869743347168
    8. 'equals' → logprob: -11.283869743347168
    9. ''é' → logprob: -12.283869743347168
    10. 's' → logprob: -12.408869743347168

Token 103: ' '='' (ID: 98780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009142052149400115
    2. ''=' → logprob: -7.125914096832275
    3. ''' → logprob: -9.250914573669434
    4. '"' → logprob: -12.375914573669434
    5. '=

' → logprob: -13.000914573669434
    6. '==' → logprob: -13.250914573669434
    7. '=}' → logprob: -13.375914573669434
    8. '=
' → logprob: -13.875914573669434
    9. '='' → logprob: -14.250914573669434
    10. 'equal' → logprob: -14.750914573669434

Token 104: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44306886196136475
    2. '<|end|>' → logprob: -1.5680688619613647
    3. '#' → logprob: -2.8180689811706543
    4. '<|end|>' → logprob: -3.1930689811706543
    5. 'import' → logprob: -4.193068981170654
    6. '(' → logprob: -5.068068981170654
    7. '=' → logprob: -5.193068981170654
    8. '
' → logprob: -5.443068981170654
    9. '  ' → logprob: -5.818068981170654
    10. '[' → logprob: -5.943068981170654

Token 105: ' précéd' (ID: 55435)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: 'emment' (ID: 58019)
  Prédit: 'emment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emment' → logprob: -0.1655905842781067
    2. 'ent' → logprob: -2.040590524673462
    3. 'e' → logprob: -4.165590763092041
    4. 'em' → logprob: -5.790590763092041
    5. 'ement' → logprob: -5.915590763092041
    6. 'é' → logprob: -7.040590763092041
    7. 'ente' → logprob: -8.790590286254883
    8. 'en' → logprob: -9.290590286254883
    9. '#' → logprob: -10.040590286254883
    10. 'ents' → logprob: -10.540590286254883

Token 107: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12541286647319794
    2. '(' → logprob: -3.375412940979004
    3. '<|end|>' → logprob: -3.375412940979004
    4. '=' → logprob: -3.750412940979004
    5. '<|end|>' → logprob: -5.375412940979004
    6. '#' → logprob: -5.375412940979004
    7. '[' → logprob: -5.625412940979004
    8. '\' → logprob: -5.875412940979004
    9. '  ' → logprob: -6.375412940979004
    10. 'import' → logprob: -6.500412940979004

Token 108: 'r' (ID: 81)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6529584527015686
    2. '   ' → logprob: -0.7779584527015686
    3. ')
' → logprob: -4.902958393096924
    4. '')' → logprob: -5.152958393096924
    5. '#' → logprob: -6.027958393096924
    6. '
' → logprob: -6.152958393096924
    7. ')\' → logprob: -7.652958393096924
    8. 'import' → logprob: -7.902958393096924
    9. '=' → logprob: -8.152958869934082
    10. ''' → logprob: -8.902958869934082

Token 109: 'appel' (ID: 100200)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6756993532180786
    2. 'f' → logprob: -1.9256993532180786
    3. '')' → logprob: -2.050699234008789
    4. ')' → logprob: -2.175699234008789
    5. 'e' → logprob: -2.800699234008789
    6. ''\' → logprob: -4.800699234008789
    7. '\\' → logprob: -4.925699234008789
    8. '"' → logprob: -5.300699234008789
    9. ''{' → logprob: -5.675699234008789
    10. '1' → logprob: -5.800699234008789

Token 110: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09556826949119568
    2. '   ' → logprob: -3.8455681800842285
    3. '\' → logprob: -4.0955681800842285
    4. '\n' → logprob: -4.4705681800842285
    5. ')
' → logprob: -4.8455681800842285
    6. ')\' → logprob: -5.0955681800842285
    7. ' de' → logprob: -5.4705681800842285
    8. ' )' → logprob: -5.5955681800842285
    9. '\\' → logprob: -6.3455681800842285
    10. ':' → logprob: -6.3455681800842285

Token 111: ' groupe' (ID: 29494)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.28950008749961853
    2. 'prem' → logprob: -2.4144999980926514
    3. '\' → logprob: -2.9144999980926514
    4. '1' → logprob: -3.2894999980926514
    5. 'capt' → logprob: -3.6644999980926514
    6. 'group' → logprob: -4.2895002365112305
    7. ')' → logprob: -4.2895002365112305
    8. '=' → logprob: -5.0395002365112305
    9. ' groupe' → logprob: -5.7895002365112305
    10. 'parent' → logprob: -7.1645002365112305

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003435061778873205
    2. ' ' → logprob: -6.378435134887695
    3. ')' → logprob: -6.503435134887695
    4. '(' → logprob: -8.878435134887695
    5. 'num' → logprob: -10.128435134887695
    6. 'n' → logprob: -10.878435134887695
    7. '=' → logprob: -12.753435134887695
    8. '(\' → logprob: -13.003435134887695
    9. 'number' → logprob: -13.003435134887695
    10. ')\' → logprob: -13.003435134887695

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010282850125804543
    2. '(' → logprob: -7.001028060913086
    3. ')' → logprob: -9.626028060913086
    4. '=' → logprob: -10.626028060913086
    5. ' ' → logprob: -12.251028060913086
    6. 'capt' → logprob: -12.626028060913086
    7. '\' → logprob: -13.126028060913086
    8. 'n' → logprob: -13.251028060913086
    9. '2' → logprob: -13.751028060913086
    10. 'group' → logprob: -13.751028060913086

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008384314365684986
    2. ')
' → logprob: -5.2583842277526855
    3. '   ' → logprob: -6.7583842277526855
    4. '')' → logprob: -7.2583842277526855
    5. ')\' → logprob: -7.5083842277526855
    6. ')`' → logprob: -8.383384704589844
    7. ')`
' → logprob: -8.508384704589844
    8. ' )' → logprob: -10.008384704589844
    9. '`)' → logprob: -10.133384704589844
    10. ')')
' → logprob: -10.633384704589844

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023843301460146904
    2. '#' → logprob: -6.627384185791016
    3. ')' → logprob: -8.502384185791016
    4. ' #' → logprob: -8.752384185791016
    5. '[' → logprob: -9.127384185791016
    6. '  ' → logprob: -9.127384185791016
    7. '(' → logprob: -9.252384185791016
    8. 'import' → logprob: -9.502384185791016
    9. '<|end|>' → logprob: -9.752384185791016
    10. '    ' → logprob: -9.877384185791016

Token 116: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32811281085014343
    2. '#' (adapté à ' #') → logprob: -2.703112840652466
    3. '<|end|>' → logprob: -2.703112840652466
    4. '[' → logprob: -3.453112840652466
    5. ')' → logprob: -3.828112840652466
    6. '\' → logprob: -4.203112602233887
    7. ' #' → logprob: -4.453112602233887
    8. ' ' → logprob: -4.453112602233887
    9. '    ' → logprob: -4.703112602233887
    10. '  ' → logprob: -4.703112602233887

Token 117: ' ~' (ID: 6574)
  Prédit: ' ~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ~' → logprob: -0.3039552867412567
    2. '~' → logprob: -1.428955316543579
    3. '   ' → logprob: -4.553955078125
    4. '[' → logprob: -4.928955078125
    5. ' ' → logprob: -6.803955078125
    6. '    ' → logprob: -7.428955078125
    7. ' [' → logprob: -7.803955078125
    8. ' #' → logprob: -7.803955078125
    9. '\' → logprob: -8.303955078125
    10. '#' → logprob: -8.428955078125

Token 118: '                ' (ID: 408)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.015604809857904911
    2. '$
' → logprob: -4.8906049728393555
    3. '<|end|>' → logprob: -6.1406049728393555
    4. ' $' → logprob: -6.5156049728393555
    5. ')$' → logprob: -6.7656049728393555
    6. '   ' → logprob: -6.7656049728393555
    7. ')' → logprob: -7.6406049728393555
    8. '[' → logprob: -8.265604972839355
    9. '$

' → logprob: -8.765604972839355
    10. '```' → logprob: -9.015604972839355

Token 119: ' :' (ID: 712)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.20178742706775665
    2. ' $' → logprob: -1.7017874717712402
    3. '$
' → logprob: -8.951786994934082
    4. '   ' → logprob: -9.326786994934082
    5. '$:' → logprob: -9.951786994934082
    6. ' ' → logprob: -10.701786994934082
    7. ' $
' → logprob: -11.076786994934082
    8. '\$' → logprob: -11.326786994934082
    9. ')$' → logprob: -11.451786994934082
    10. '$

' → logprob: -11.826786994934082

Token 120: ' fini' (ID: 63561)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '~' → logprob: -0.8814085125923157
    2. '$' → logprob: -1.381408452987671
    3. ' $' → logprob: -1.881408452987671
    4. ' ~' → logprob: -2.131408452987671
    5. ''' → logprob: -4.13140869140625
    6. ' $
' → logprob: -4.88140869140625
    7. ' ' → logprob: -5.13140869140625
    8. '\' → logprob: -5.25640869140625
    9. ' ' → logprob: -5.38140869140625
    10. ' ~$' → logprob: -5.63140869140625

Token 121: ' par' (ID: 686)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.006051447242498398
    2. '$
' → logprob: -6.131051540374756
    3. '   ' → logprob: -6.381051540374756
    4. ' $' → logprob: -7.256051540374756
    5. '<|end|>' → logprob: -7.381051540374756
    6. ')$' → logprob: -8.256051063537598
    7. '  ' → logprob: -9.131051063537598
    8. '```' → logprob: -9.256051063537598
    9. ')' → logprob: -9.756051063537598
    10. ' ' → logprob: -9.881051063537598

Token 122: ' un' (ID: 537)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.7170219421386719
    2. ' ~' → logprob: -1.4670219421386719
    3. '~' → logprob: -1.7170219421386719
    4. ' $' → logprob: -2.717021942138672
    5. ' ~$' → logprob: -3.967021942138672
    6. ' ' → logprob: -5.467021942138672
    7. '`' → logprob: -5.592021942138672
    8. ''' → logprob: -6.467021942138672
    9. '$
' → logprob: -6.842021942138672
    10. ' ' → logprob: -6.842021942138672

Token 123: ' til' (ID: 3453)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.03993210569024086
    2. ' til' → logprob: -4.2899322509765625
    3. '\n' → logprob: -5.6649322509765625
    4. ''' → logprob: -5.7899322509765625
    5. 'newline' → logprob: -5.9149322509765625
    6. 'space' → logprob: -6.1649322509765625
    7. '\' → logprob: -6.2899322509765625
    8. 'til' → logprob: -6.2899322509765625
    9. ' ~' → logprob: -6.4149322509765625
    10. '$' → logprob: -6.5399322509765625

Token 124: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0005617309361696243
    2. 'd' → logprob: -7.750561714172363
    3. '~' → logprob: -9.375561714172363
    4. 'e' → logprob: -11.000561714172363
    5. 'da' → logprob: -11.625561714172363
    6. 'def' → logprob: -12.500561714172363
    7. 'ilde' → logprob: -13.125561714172363
    8. 'lde' → logprob: -13.250561714172363
    9. '```' → logprob: -13.250561714172363
    10. '   ' → logprob: -13.625561714172363

Token 125: ' '~' (ID: 155911)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5027639865875244
    2. ')' → logprob: -1.2527639865875244
    3. '<|end|>' → logprob: -3.8777639865875244
    4. ':' → logprob: -4.127763748168945
    5. '\n' → logprob: -4.377763748168945
    6. '\' → logprob: -4.752763748168945
    7. '):' → logprob: -4.752763748168945
    8. 'def' → logprob: -5.127763748168945
    9. '    
' → logprob: -5.502763748168945
    10. '[' → logprob: -5.502763748168945

Token 126: ''
' (ID: 2207)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.012026148848235607
    2. '$
' → logprob: -4.637026309967041
    3. '   ' → logprob: -7.762026309967041
    4. '```' → logprob: -8.137025833129883
    5. ''' → logprob: -8.387025833129883
    6. ' $' → logprob: -8.387025833129883
    7. ''$' → logprob: -8.512025833129883
    8. ')$' → logprob: -8.637025833129883
    9. ')' → logprob: -8.762025833129883
    10. '`' → logprob: -9.012025833129883

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027117418125271797
    2. 'pattern' → logprob: -3.9021174907684326
    3. ')' → logprob: -6.1521172523498535
    4. 'import' → logprob: -7.2771172523498535
    5. '    
' → logprob: -7.6521172523498535
    6. '\' → logprob: -7.6521172523498535
    7. 'snake' → logprob: -7.7771172523498535
    8. '\n' → logprob: -7.9021172523498535
    9. 'regex' → logprob: -8.027117729187012
    10. '\s' → logprob: -8.277117729187012

Token 128: ' re' (ID: 322)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11681187897920609
    2. 'pattern' → logprob: -2.366811990737915
    3. '\n' → logprob: -5.116811752319336
    4. ')' → logprob: -5.741811752319336
    5. '    
' → logprob: -6.991811752319336
    6. '\' → logprob: -7.241811752319336
    7. 'snake' → logprob: -7.491811752319336
    8. '\s' → logprob: -7.491811752319336
    9. 'regex' → logprob: -7.491811752319336
    10. '
' → logprob: -7.616811752319336

Token 129: '_a' (ID: 10852)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.18013356626033783
    2. '_sn' → logprob: -2.555133581161499
    3. '_pat' → logprob: -3.680133581161499
    4. 's' → logprob: -3.930133581161499
    5. 'snake' → logprob: -4.05513334274292
    6. 'g' → logprob: -4.93013334274292
    7. '_p' → logprob: -5.80513334274292
    8. 'pattern' → logprob: -6.05513334274292
    9. 'p' → logprob: -6.55513334274292
    10. '_' → logprob: -6.55513334274292

Token 130: ' =' (ID: 314)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.04202032834291458
    2. ' =' → logprob: -3.417020320892334
    3. '=' → logprob: -5.417020320892334
    4. '_' → logprob: -6.417020320892334
    5. 'a' → logprob: -7.542020320892334
    6. 'A' → logprob: -7.667020320892334
    7. '_A' → logprob: -8.292020797729492
    8. '_pattern' → logprob: -8.292020797729492
    9. '_pat' → logprob: -8.542020797729492
    10. 's' → logprob: -8.542020797729492

Token 131: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0074169631116092205
    2. ' re' → logprob: -5.257416725158691
    3. 'r' → logprob: -6.132416725158691
    4. '   ' → logprob: -12.007416725158691
    5. ' r' → logprob: -13.132416725158691
    6. ' ' → logprob: -14.257416725158691
    7. '	re' → logprob: -15.007416725158691
    8. '  ' → logprob: -15.507416725158691
    9. '```' → logprob: -17.382417678833008
    10. '=re' → logprob: -18.132417678833008

Token 132: '.compile' (ID: 38900)
  Prédit: '.compile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compile' → logprob: -0.008132128976285458
    2. '.' → logprob: -4.883131980895996
    3. '\.' → logprob: -8.383131980895996
    4. '.comp' → logprob: -9.133131980895996
    5. '_compile' → logprob: -10.008131980895996
    6. '.Comp' → logprob: -10.508131980895996
    7. '.com' → logprob: -10.508131980895996
    8. '```' → logprob: -10.633131980895996
    9. 'compile' → logprob: -11.258131980895996
    10. '_comp' → logprob: -11.508131980895996

Token 133: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.644463479053229e-05
    2. '(' → logprob: -10.625046730041504
    3. '\(' → logprob: -11.250046730041504
    4. '(rb' → logprob: -12.250046730041504
    5. 'r' → logprob: -12.875046730041504
    6. '\' → logprob: -13.625046730041504
    7. ' (' → logprob: -15.250046730041504
    8. '```' → logprob: -16.625045776367188
    9. '(
' → logprob: -17.375045776367188
    10. '("\' → logprob: -17.750045776367188

Token 134: '"' (ID: 1)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25746509432792664
    2. '"' → logprob: -1.507465124130249
    3. '">' → logprob: -5.88246488571167
    4. '"'' → logprob: -6.63246488571167
    5. ''^' → logprob: -7.88246488571167
    6. '("^' → logprob: -8.007465362548828
    7. '^' → logprob: -8.257465362548828
    8. '(r' → logprob: -9.132465362548828
    9. ' r' → logprob: -9.382465362548828
    10. 'b' → logprob: -10.007465362548828

Token 135: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.1318988800048828
    2. 'r' → logprob: -2.256898880004883
    3. '"' → logprob: -4.006898880004883
    4. '^\' → logprob: -8.631898880004883
    5. '">' → logprob: -9.131898880004883
    6. ''^' → logprob: -9.381898880004883
    7. '^(' → logprob: -9.381898880004883
    8. '("^' → logprob: -9.756898880004883
    9. ' r' → logprob: -10.381898880004883
    10. 'b' → logprob: -10.631898880004883

Token 136: '>'' (ID: 12747)
  Prédit: '>''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>'' → logprob: -0.004715872462838888
    2. '>\' → logprob: -6.254715919494629
    3. '>' → logprob: -7.129715919494629
    4. '>'+' → logprob: -7.629715919494629
    5. ''' → logprob: -7.754715919494629
    6. ''>' → logprob: -7.879715919494629
    7. '">'' → logprob: -8.629715919494629
    8. '\' → logprob: -9.504715919494629
    9. '^' → logprob: -9.629715919494629
    10. '>'.' → logprob: -9.754715919494629

Token 137: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008070098701864481
    2. '=' → logprob: -7.50080680847168
    3. '=(' → logprob: -8.62580680847168
    4. '\(' → logprob: -10.25080680847168
    5. ' (=' → logprob: -11.37580680847168
    6. '(\' → logprob: -11.37580680847168
    7. '('='' → logprob: -11.87580680847168
    8. '\' → logprob: -12.75080680847168
    9. '(?' → logprob: -13.12580680847168
    10. '=\' → logprob: -13.37580680847168

Token 138: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005997528787702322
    2. '(' → logprob: -5.130997657775879
    3. '[' → logprob: -10.630997657775879
    4. ')=' → logprob: -11.755997657775879
    5. '\' → logprob: -12.130997657775879
    6. '=?' → logprob: -12.255997657775879
    7. '=.*' → logprob: -12.255997657775879
    8. '=(' → logprob: -12.505997657775879
    9. '+=' → logprob: -12.630997657775879
    10. '={' → logprob: -12.630997657775879

Token 139: '+)' (ID: 63829)
  Prédit: '+)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+)' → logprob: -0.11398409307003021
    2. '+' → logprob: -2.2389841079711914
    3. '\' → logprob: -7.113984107971191
    4. '+\' → logprob: -8.363984107971191
    5. '+')' → logprob: -9.863984107971191
    6. '+=' → logprob: -10.613984107971191
    7. '[' → logprob: -11.988984107971191
    8. '+")' → logprob: -12.113984107971191
    9. '++)' → logprob: -12.113984107971191
    10. '+
' → logprob: -12.238984107971191

Token 140: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.001090447069145739
    2. '\' → logprob: -7.3760905265808105
    3. '#
' → logprob: -8.501090049743652
    4. ')#' → logprob: -10.126090049743652
    5. '##' → logprob: -10.376090049743652
    6. '﻿#' → logprob: -10.626090049743652
    7. '#+' → logprob: -11.001090049743652
    8. '#

' → logprob: -11.001090049743652
    9. '#$' → logprob: -11.126090049743652
    10. ' #' → logprob: -11.376090049743652

Token 141: '\' (ID: 59)
  Prédit: '\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.001716827624477446
    2. '\\' → logprob: -6.376716613769531
    3. '=' → logprob: -11.876716613769531
    4. ' \' → logprob: -12.251716613769531
    5. '=\' → logprob: -13.751716613769531
    6. '#' → logprob: -14.126716613769531
    7. '\d' → logprob: -15.001716613769531
    8. '\(' → logprob: -15.876716613769531
    9. '\[' → logprob: -16.00171661376953
    10. ')\' → logprob: -16.37671661376953

Token 142: '1' (ID: 16)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.0016534021124243736
    2. '1' → logprob: -6.50165319442749
    3. '\\' → logprob: -8.876653671264648
    4. '=' → logprob: -12.251653671264648
    5. '\d' → logprob: -13.376653671264648
    6. '(' → logprob: -13.501653671264648
    7. '(\' → logprob: -13.626653671264648
    8. ' \' → logprob: -14.126653671264648
    9. 'r' → logprob: -15.001653671264648
    10. '\x' → logprob: -15.126653671264648

Token 143: '~' (ID: 93)
  Prédit: '~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -1.676292231422849e-05
    2. ' ~' → logprob: -11.875017166137695
    3. '~":"' → logprob: -12.750017166137695
    4. '~
' → logprob: -13.375017166137695
    5. '"' → logprob: -14.000017166137695
    6. '$' → logprob: -14.250017166137695
    7. '~~' → logprob: -14.375017166137695
    8. '\' → logprob: -14.625017166137695
    9. '~/' → logprob: -14.625017166137695
    10. '~

' → logprob: -14.875017166137695

Token 144: '$' (ID: 3)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.17002451419830322
    2. '$' → logprob: -1.9200245141983032
    3. ')")' → logprob: -5.045024394989014
    4. ')' → logprob: -6.170024394989014
    5. ')$' → logprob: -7.045024394989014
    6. '')' → logprob: -8.795024871826172
    7. '$")
' → logprob: -9.420024871826172
    8. '")
' → logprob: -10.670024871826172
    9. '"' → logprob: -11.295024871826172
    10. '}")' → logprob: -11.295024871826172

Token 145: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007641294039785862
    2. ')' → logprob: -5.007641315460205
    3. ')")' → logprob: -7.007641315460205
    4. '"' → logprob: -11.882640838623047
    5. '")
' → logprob: -12.382640838623047
    6. ')"' → logprob: -12.507640838623047
    7. '')' → logprob: -12.632640838623047
    8. '")
' → logprob: -14.632640838623047
    9. '}")' → logprob: -15.132640838623047
    10. '   ' → logprob: -15.257640838623047

Token 146: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21390052139759064
    2. '   ' → logprob: -1.8389005661010742
    3. '    
' → logprob: -3.963900566101074
    4. ')' → logprob: -5.588900566101074
    5. ')
' → logprob: -5.838900566101074
    6. '\n' → logprob: -6.088900566101074
    7. 'def' → logprob: -6.838900566101074
    8. '  
' → logprob: -6.963900566101074
    9. '<|end|>' → logprob: -7.088900566101074
    10. '```' → logprob: -7.963900566101074

Token 147: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3741500675678253
    2. 'for' → logprob: -1.374150037765503
    3. '    
' → logprob: -3.749150037765503
    4. ' for' → logprob: -4.249150276184082
    5. 'n' → logprob: -4.874150276184082
    6. '
' → logprob: -5.374150276184082
    7. '<|end|>' → logprob: -6.124150276184082
    8. '#' (adapté à ' #') → logprob: -6.749150276184082
    9. '  
' → logprob: -6.999150276184082
    10. 'def' → logprob: -7.249150276184082

Token 148: ' Expression' (ID: 32496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23957175016403198
    2. 're' → logprob: -2.2395718097686768
    3. '   ' → logprob: -2.9895718097686768
    4. ' for' → logprob: -3.4895718097686768
    5. '#' → logprob: -3.9895718097686768
    6. 'n' → logprob: -6.739571571350098
    7. ' re' → logprob: -6.989571571350098
    8. ' #' → logprob: -7.364571571350098
    9. 'def' → logprob: -7.489571571350098
    10. 'results' → logprob: -7.739571571350098

Token 149: ' réguli' (ID: 59739)
  Prédit: ' réguli'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réguli' → logprob: -0.8194395303726196
    2. '_' → logprob: -1.3194395303726196
    3. '_regular' → logprob: -1.9444395303726196
    4. ' regular' → logprob: -2.81943941116333
    5. 'regular' → logprob: -3.69443941116333
    6. '#' → logprob: -4.06943941116333
    7. ' #' → logprob: -4.44443941116333
    8. 're' → logprob: -4.56943941116333
    9. 'r' → logprob: -4.69443941116333
    10. ' reguliere' → logprob: -5.81943941116333

Token 150: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.005586498882621527
    2. 're' → logprob: -5.380586624145508
    3. 'è' → logprob: -7.505586624145508
    4. 'èr' → logprob: -8.630586624145508
    5. 'ére' → logprob: -9.755586624145508
    6. 'ères' → logprob: -10.130586624145508
    7. '#' → logprob: -10.255586624145508
    8. 'ere' → logprob: -10.755586624145508
    9. 'êre' → logprob: -11.380586624145508
    10. 'ève' → logprob: -11.630586624145508

Token 151: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8208754062652588
    2. '#' → logprob: -1.6958754062652588
    3. 're' → logprob: -1.6958754062652588
    4. 'for' → logprob: -2.195875406265259
    5. 'r' → logprob: -3.570875406265259
    6. ' #' → logprob: -3.695875406265259
    7. ' re' → logprob: -4.82087516784668
    8. '<|end|>' → logprob: -5.19587516784668
    9. ' =' → logprob: -5.32087516784668
    10. 'a' → logprob: -6.69587516784668

Token 152: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6713899374008179
    2. 're' → logprob: -1.1713899374008179
    3. 'un' → logprob: -2.0463900566101074
    4. ' re' → logprob: -3.6713900566101074
    5. '#' → logprob: -4.671390056610107
    6. 'r' → logprob: -5.296390056610107
    7. 'a' → logprob: -5.796390056610107
    8. 'une' → logprob: -6.171390056610107
    9. ' une' → logprob: -6.921390056610107
    10. 'ser' → logprob: -7.796390056610107

Token 153: ' serpent' (ID: 154163)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.09545677155256271
    2. ' serpent' → logprob: -2.470456838607788
    3. 'snake' → logprob: -6.345456600189209
    4. 're' → logprob: -6.595456600189209
    5. 'aut' → logprob: -7.970456600189209
    6. 'b' → logprob: -8.032957077026367
    7. 'python' → logprob: -8.220457077026367
    8. '#' → logprob: -8.532957077026367
    9. '```' → logprob: -8.595457077026367
    10. ' ser' → logprob: -8.657957077026367

Token 154: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38269051909446716
    2. '_b' → logprob: -1.7576905488967896
    3. ' de' → logprob: -2.7576904296875
    4. ' b' → logprob: -3.5076904296875
    5. 'de' → logprob: -4.3826904296875
    6. 're' → logprob: -4.3826904296875
    7. 'B' → logprob: -4.8826904296875
    8. '#' → logprob: -5.0076904296875
    9. 'a' → logprob: -5.7576904296875
    10. ' #' → logprob: -6.0076904296875

Token 155: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.07078687101602554
    2. ' type' → logprob: -2.695786952972412
    3. 'B' → logprob: -8.445786476135254
    4. 'b' → logprob: -9.195786476135254
    5. 'Type' → logprob: -9.195786476135254
    6. 'ser' → logprob: -9.445786476135254
    7. 's' → logprob: -9.945786476135254
    8. '"type' → logprob: -10.195786476135254
    9. 'un' → logprob: -10.445786476135254
    10. 't' → logprob: -10.883286476135254

Token 156: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10371123254299164
    2. ' B' → logprob: -2.3537111282348633
    3. 'b' → logprob: -6.103711128234863
    4. '"B' → logprob: -8.291211128234863
    5. 'A' → logprob: -8.353711128234863
    6. 'a' → logprob: -9.041211128234863
    7. '"' → logprob: -9.353711128234863
    8. 's' → logprob: -9.541211128234863
    9. ' b' → logprob: -9.666211128234863
    10. '#' → logprob: -9.666211128234863

Token 157: '
' (ID: 198)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00313089438714087
    2. 'r' → logprob: -6.628130912780762
    3. ' re' → logprob: -7.628130912780762
    4. ' =' → logprob: -8.378130912780762
    5. '=re' → logprob: -8.503130912780762
    6. '
' → logprob: -8.628130912780762
    7. 'b' → logprob: -8.753130912780762
    8. '=' → logprob: -8.878130912780762
    9. '   ' → logprob: -9.628130912780762
    10. ',' → logprob: -9.753130912780762

Token 158: '   ' (ID: 271)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0010869937250390649
    2. ' re' → logprob: -7.626087188720703
    3. 'r' → logprob: -8.376087188720703
    4. 'b' → logprob: -9.376087188720703
    5. '=re' → logprob: -10.126087188720703
    6. '```' → logprob: -10.126087188720703
    7. '
' → logprob: -10.251087188720703
    8. ' =' → logprob: -10.376087188720703
    9. 'import' → logprob: -10.626087188720703
    10. '=' → logprob: -10.626087188720703

Token 159: ' #' (ID: 1069)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1206393763422966
    2. '   ' → logprob: -2.2456393241882324
    3. 'r' → logprob: -5.370639324188232
    4. ' re' → logprob: -5.995639324188232
    5. '^' → logprob: -8.62063980102539
    6. 'import' → logprob: -8.87063980102539
    7. 'b' → logprob: -9.74563980102539
    8. '#' (adapté à ' #') → logprob: -9.87063980102539
    9. ' ' → logprob: -9.87063980102539
    10. '  ' → logprob: -9.99563980102539

Token 160: ' ^' (ID: 7602)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.005563856102526188
    2. ' re' → logprob: -5.880563735961914
    3. 'r' → logprob: -6.130563735961914
    4. '   ' → logprob: -8.755563735961914
    5. 'b' → logprob: -8.880563735961914
    6. '^' → logprob: -9.380563735961914
    7. '```' → logprob: -10.005563735961914
    8. ' ' → logprob: -10.505563735961914
    9. '`' → logprob: -11.130563735961914
    10. ' r' → logprob: -11.255563735961914

Token 161: ' >' (ID: 1424)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9513684511184692
    2. '\' → logprob: -1.2013684511184692
    3. '>'' → logprob: -3.2013683319091797
    4. '~' → logprob: -3.2013683319091797
    5. '@' → logprob: -3.4513683319091797
    6. '>' → logprob: -3.7013683319091797
    7. '>"' → logprob: -3.8263683319091797
    8. '>\' → logprob: -3.8263683319091797
    9. '<' → logprob: -4.20136833190918
    10. '"' → logprob: -4.20136833190918

Token 162: '\' (ID: 59)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.052386216819286346
    2. ''\' → logprob: -3.5523862838745117
    3. '\' → logprob: -4.677386283874512
    4. ''"' → logprob: -6.552386283874512
    5. ''(' → logprob: -6.927386283874512
    6. '\'' → logprob: -7.052386283874512
    7. 'r' → logprob: -7.052386283874512
    8. ''<' → logprob: -7.177386283874512
    9. '~' → logprob: -7.427386283874512
    10. '#' → logprob: -7.427386283874512

Token 163: '^' (ID: 61)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08570818603038788
    2. '\' → logprob: -3.7107081413269043
    3. '\\' → logprob: -3.8357081413269043
    4. ''\' → logprob: -4.210708141326904
    5. '_' → logprob: -6.460708141326904
    6. ''(' → logprob: -6.460708141326904
    7. 'o' → logprob: -6.585708141326904
    8. '\'' → logprob: -6.585708141326904
    9. '\[' → logprob: -6.710708141326904
    10. 'r' → logprob: -6.835708141326904

Token 164: ' (' (ID: 350)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.20371228456497192
    2. '\\' → logprob: -2.453712224960327
    3. ''' → logprob: -2.828712224960327
    4. ''\' → logprob: -4.203712463378906
    5. '\(' → logprob: -4.828712463378906
    6. 'r' → logprob: -5.078712463378906
    7. '>\' → logprob: -6.328712463378906
    8. '>'' → logprob: -6.328712463378906
    9. '>' → logprob: -6.453712463378906
    10. '(\' → logprob: -6.953712463378906

Token 165: 'Q' (ID: 48)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.42625710368156433
    2. '~' → logprob: -2.4262571334838867
    3. '[' → logprob: -3.0512571334838867
    4. '-' → logprob: -3.1762571334838867
    5. '=' → logprob: -3.3012571334838867
    6. '(\' → logprob: -3.5512571334838867
    7. '_' → logprob: -3.8012571334838867
    8. '\[' → logprob: -4.801257133483887
    9. '\-' → logprob: -4.926257133483887
    10. '(' → logprob: -4.926257133483887

Token 166: '=' (ID: 28)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9494920969009399
    2. '=' → logprob: -1.69949209690094
    3. '[' → logprob: -1.69949209690094
    4. '+)' → logprob: -2.1994919776916504
    5. '+' → logprob: -3.4494919776916504
    6. '{' → logprob: -4.44949197769165
    7. ')' → logprob: -4.44949197769165
    8. '\[' → logprob: -4.69949197769165
    9. '[\' → logprob: -5.19949197769165
    10. ''' → logprob: -5.32449197769165

Token 167: ')+' (ID: 16161)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2828408479690552
    2. '+)' → logprob: -2.5328407287597656
    3. '+' → logprob: -2.7828407287597656
    4. '+\' → logprob: -3.7828407287597656
    5. '\[' → logprob: -4.157840728759766
    6. '[' → logprob: -4.157840728759766
    7. '=' → logprob: -4.657840728759766
    8. ')+' → logprob: -5.407840728759766
    9. 'r' → logprob: -5.657840728759766
    10. '[\' → logprob: -5.657840728759766

Token 168: ' ~~' (ID: 182406)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04306221753358841
    2. 're' → logprob: -3.793062210083008
    3. '(r' → logprob: -5.293062210083008
    4. '\' → logprob: -5.418062210083008
    5. '\(' → logprob: -5.418062210083008
    6. '(' → logprob: -5.543062210083008
    7. '(\' → logprob: -7.918062210083008
    8. '(re' → logprob: -8.043062210083008
    9. 'import' → logprob: -8.168062210083008
    10. '\[' → logprob: -8.168062210083008

Token 169: ' $
' (ID: 55389)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07694734632968903
    2. 're' → logprob: -3.4519474506378174
    3. '\' → logprob: -3.5769474506378174
    4. '\(' → logprob: -5.076947212219238
    5. '(' → logprob: -5.576947212219238
    6. '(r' → logprob: -6.076947212219238
    7. '\[' → logprob: -7.451947212219238
    8. '```' → logprob: -7.826947212219238
    9. 'import' → logprob: -8.326947212219238
    10. '\\' → logprob: -8.451947212219238

Token 170: '   ' (ID: 271)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1605168730020523
    2. 'r' → logprob: -1.9105168581008911
    3. 'import' → logprob: -8.285516738891602
    4. ' re' → logprob: -11.410516738891602
    5. '(re' → logprob: -12.035516738891602
    6. '```' → logprob: -12.285516738891602
    7. '[' → logprob: -12.410516738891602
    8. '(r' → logprob: -12.785516738891602
    9. 'b' → logprob: -13.410516738891602
    10. '(' → logprob: -13.660516738891602

Token 171: ' #' (ID: 1069)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.038090720772743225
    2. 'r' → logprob: -3.288090705871582
    3. ' re' → logprob: -10.538090705871582
    4. 'import' → logprob: -11.413090705871582
    5. '[' → logprob: -12.913090705871582
    6. '>' → logprob: -13.163090705871582
    7. '```' → logprob: -13.413090705871582
    8. '   ' → logprob: -13.538090705871582
    9. '^' → logprob: -14.163090705871582
    10. '(re' → logprob: -14.413090705871582

Token 172: ' D' (ID: 415)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.008924176916480064
    2. 'r' → logprob: -5.1339240074157715
    3. ' re' → logprob: -5.8839240074157715
    4. 'b' → logprob: -9.38392448425293
    5. '^' → logprob: -10.00892448425293
    6. 'import' → logprob: -10.25892448425293
    7. '```' → logprob: -11.75892448425293
    8. ' r' → logprob: -12.50892448425293
    9. '>' → logprob: -12.63392448425293
    10. '\' → logprob: -12.88392448425293

Token 173: 'ét' (ID: 3913)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.19700326025485992
    2. 'r' → logprob: -2.9470033645629883
    3. '=' → logprob: -3.0720033645629883
    4. ' =' → logprob: -3.0720033645629883
    5. '=re' → logprob: -4.072003364562988
    6. 'e' → logprob: -4.697003364562988
    7. 'import' → logprob: -5.447003364562988
    8. 'ef' → logprob: -7.572003364562988
    9. '#' → logprob: -7.697003364562988
    10. 'a' → logprob: -8.072003364562988

Token 174: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.7377676367759705
    2. 'tail' → logprob: -0.9877676367759705
    3. '<|end|>' → logprob: -3.2377676963806152
    4. 'f' → logprob: -3.6127676963806152
    5. 'aille' → logprob: -3.9877676963806152
    6. 'é' → logprob: -3.9877676963806152
    7. 'ails' → logprob: -4.862767696380615
    8. 'fin' → logprob: -5.362767696380615
    9. 'import' → logprob: -5.362767696380615
    10. 'tails' → logprob: -5.362767696380615

Token 175: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9918988347053528
    2. 'import' → logprob: -0.9918988347053528
    3. 're' → logprob: -1.491898775100708
    4. ' re' → logprob: -4.741899013519287
    5. '=re' → logprob: -4.741899013519287
    6. ' :' → logprob: -5.116899013519287
    7. '=' → logprob: -5.366899013519287
    8. ' =' → logprob: -6.366899013519287
    9. 'r' → logprob: -6.866899013519287
    10. '#' → logprob: -7.616899013519287

Token 176: '   ' (ID: 271)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.06961992383003235
    2. 'r' → logprob: -3.44461989402771
    3. ' re' → logprob: -3.44461989402771
    4. '   ' → logprob: -6.569620132446289
    5. '^' → logprob: -6.694620132446289
    6. ' r' → logprob: -7.694620132446289
    7. 'import' → logprob: -9.319620132446289
    8. '```' → logprob: -10.194620132446289
    9. ' ^' → logprob: -10.444620132446289
    10. '#' → logprob: -10.569620132446289

Token 177: ' #' (ID: 1069)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.12978573143482208
    2. 'r' → logprob: -2.2547857761383057
    3. ' re' → logprob: -4.254785537719727
    4. 'import' → logprob: -6.629785537719727
    5. ' r' → logprob: -7.129785537719727
    6. '^' → logprob: -8.254785537719727
    7. '```' → logprob: -9.379785537719727
    8. '   ' → logprob: -10.879785537719727
    9. 'b' → logprob: -11.129785537719727
    10. '>' → logprob: -11.254785537719727

Token 178: ' ^' (ID: 7602)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.17152419686317444
    2. ' re' → logprob: -2.5465242862701416
    3. 'r' → logprob: -2.6715242862701416
    4. '^' → logprob: -5.0465240478515625
    5. ' r' → logprob: -6.1715240478515625
    6. '>' → logprob: -7.1715240478515625
    7. ' ^' → logprob: -8.546524047851562
    8. 'import' → logprob: -9.046524047851562
    9. ' >' → logprob: -9.046524047851562
    10. '```' → logprob: -9.421524047851562

Token 179: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8851718902587891
    2. '>\' → logprob: -0.8851718902587891
    3. '>' → logprob: -1.885171890258789
    4. 'r' → logprob: -4.135171890258789
    5. '>'' → logprob: -6.010171890258789
    6. '">\' → logprob: -6.760171890258789
    7. '>\<' → logprob: -7.010171890258789
    8. '\' → logprob: -7.635171890258789
    9. 're' → logprob: -7.760171890258789
    10. '">' → logprob: -8.135171890258789

Token 180: '^' (ID: 61)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.008816651068627834
    2. '\\' → logprob: -4.758816719055176
    3. ''\' → logprob: -8.758816719055176
    4. ''' → logprob: -11.508816719055176
    5. '`\' → logprob: -11.758816719055176
    6. '```' → logprob: -12.133816719055176
    7. '\$' → logprob: -12.633816719055176
    8. ' \' → logprob: -12.758816719055176
    9. '\[' → logprob: -13.008816719055176
    10. '"\' → logprob: -13.008816719055176

Token 181: '            ' (ID: 3346)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.1265099048614502
    2. '\\' → logprob: -2.87650990486145
    3. ''' → logprob: -3.25150990486145
    4. ''\' → logprob: -4.251509666442871
    5. '\(' → logprob: -5.501509666442871
    6. 'r' → logprob: -5.751509666442871
    7. '\'' → logprob: -7.251509666442871
    8. 're' → logprob: -8.001509666442871
    9. '('\\' → logprob: -8.376509666442871
    10. '\[' → logprob: -8.376509666442871

Token 182: ' :' (ID: 712)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.3339114785194397
    2. '<|end|>' → logprob: -1.833911418914795
    3. '\\' → logprob: -2.583911418914795
    4. ''' → logprob: -3.958911418914795
    5. 'r' → logprob: -4.458911418914795
    6. '\(' → logprob: -4.833911418914795
    7. '>' → logprob: -6.208911418914795
    8. ''>' → logprob: -6.458911418914795
    9. ''\' → logprob: -6.833911418914795
    10. 're' → logprob: -7.083911418914795

Token 183: ' commence' (ID: 44755)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3201419115066528
    2. '\' → logprob: -1.5701419115066528
    3. '>\' → logprob: -1.5701419115066528
    4. '">\' → logprob: -1.6951419115066528
    5. '">' → logprob: -3.1951417922973633
    6. 're' → logprob: -3.5701417922973633
    7. '>' → logprob: -3.6951417922973633
    8. 'import' → logprob: -4.820141792297363
    9. '>'' → logprob: -5.070141792297363
    10. ' r' → logprob: -5.070141792297363

Token 184: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.31330859661102295
    2. ' par' → logprob: -1.313308596611023
    3. 'r' → logprob: -10.938308715820312
    4. ' ' → logprob: -11.438308715820312
    5. '  ' → logprob: -11.813308715820312
    6. ' by' → logprob: -13.313308715820312
    7. '_par' → logprob: -13.313308715820312
    8. '	par' → logprob: -13.438308715820312
    9. ' r' → logprob: -13.938308715820312
    10. 'Par' → logprob: -14.313308715820312

Token 185: ' >' (ID: 1424)
  Prédit: '>\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>\' → logprob: -0.266253799200058
    2. '>' → logprob: -2.266253709793091
    3. '>'' → logprob: -2.891253709793091
    4. '\' → logprob: -3.141253709793091
    5. ' >' → logprob: -4.51625394821167
    6. '">\' → logprob: -4.64125394821167
    7. ''>' → logprob: -5.26625394821167
    8. '>\<' → logprob: -6.51625394821167
    9. '">' → logprob: -7.26625394821167
    10. '^\' → logprob: -7.89125394821167

Token 186: '^' (ID: 61)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.016241395846009254
    2. '\\' → logprob: -4.141241550445557
    3. ''\' → logprob: -8.766241073608398
    4. ''' → logprob: -10.516241073608398
    5. '```' → logprob: -12.266241073608398
    6. '`\' → logprob: -12.516241073608398
    7. '"\' → logprob: -12.641241073608398
    8. '\[' → logprob: -13.266241073608398
    9. 'r' → logprob: -13.391241073608398
    10. '\(' → logprob: -13.391241073608398

Token 187: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.16900451481342316
    2. '\\' → logprob: -2.169004440307617
    3. '\(' → logprob: -3.669004440307617
    4. 'r' → logprob: -4.669004440307617
    5. '(Q' → logprob: -6.169004440307617
    6. '(' → logprob: -6.919004440307617
    7. '(r' → logprob: -6.919004440307617
    8. '(\' → logprob: -7.169004440307617
    9. 're' → logprob: -7.419004440307617
    10. 'Q' → logprob: -8.669004440307617

Token 188: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.645728588104248
    2. '\(' → logprob: -1.145728588104248
    3. 'r' → logprob: -2.520728588104248
    4. '(Q' → logprob: -3.520728588104248
    5. '\\' → logprob: -4.020728588104248
    6. '(' → logprob: -4.520728588104248
    7. '(r' → logprob: -5.145728588104248
    8. '\[' → logprob: -5.145728588104248
    9. '(\' → logprob: -6.020728588104248
    10. 're' → logprob: -6.270728588104248

Token 189: ' #' (ID: 1069)
  Prédit: '\('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\(' → logprob: -0.7977882027626038
    2. '\' → logprob: -1.172788143157959
    3. '(Q' → logprob: -1.672788143157959
    4. 'r' → logprob: -4.297788143157959
    5. '(\' → logprob: -4.422788143157959
    6. '(' → logprob: -4.547788143157959
    7. '\\' → logprob: -5.172788143157959
    8. '\[' → logprob: -5.297788143157959
    9. 'Q' → logprob: -6.047788143157959
    10. '(r' → logprob: -6.672788143157959

Token 190: ' (' (ID: 350)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.0923491716384888
    2. '\(' → logprob: -1.2173491716384888
    3. '(\' → logprob: -1.8423491716384888
    4. '\' → logprob: -1.9673491716384888
    5. 'r' → logprob: -3.217349052429199
    6. '(?:' → logprob: -4.217349052429199
    7. '(' → logprob: -5.217349052429199
    8. '(r' → logprob: -5.342349052429199
    9. 're' → logprob: -6.092349052429199
    10. 'Q' → logprob: -6.842349052429199

Token 191: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.27084288001060486
    2. '(Q' → logprob: -1.7708429098129272
    3. '\' → logprob: -3.3958427906036377
    4. '[' → logprob: -4.395843029022217
    5. '\(' → logprob: -4.395843029022217
    6. '(\' → logprob: -6.645843029022217
    7. '\[' → logprob: -7.395843029022217
    8. '[\' → logprob: -7.520843029022217
    9. '[^' → logprob: -7.770843029022217
    10. '\d' → logprob: -7.833343029022217

Token 192: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007395071908831596
    2. '=\' → logprob: -5.882395267486572
    3. '[' → logprob: -6.132395267486572
    4. '+=' → logprob: -7.757395267486572
    5. '\' → logprob: -7.882395267486572
    6. 'Q' → logprob: -8.007394790649414
    7. '=q' → logprob: -8.507394790649414
    8. '=.*' → logprob: -8.882394790649414
    9. '=A' → logprob: -8.882394790649414
    10. '=?' → logprob: -9.007394790649414

Token 193: ')+' (ID: 16161)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.307783305644989
    2. '+' → logprob: -2.307783365249634
    3. ')+' → logprob: -2.557783365249634
    4. '[' → logprob: -3.432783365249634
    5. '+)' → logprob: -3.932783365249634
    6. '+\' → logprob: -4.432783126831055
    7. ')' → logprob: -4.932783126831055
    8. '[\' → logprob: -5.557783126831055
    9. '(' → logprob: -5.807783126831055
    10. '(Q' → logprob: -6.182783126831055

Token 194: '           ' (ID: 352)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.04587588086724281
    2. '\(' → logprob: -3.2958757877349854
    3. '\' → logprob: -5.4208760261535645
    4. '(' → logprob: -6.5458760261535645
    5. '(\' → logprob: -7.0458760261535645
    6. '(r' → logprob: -8.170875549316406
    7. 'r' → logprob: -8.420875549316406
    8. ' (' → logprob: -8.670875549316406
    9. ' \(' → logprob: -9.045875549316406
    10. '<|end|>' → logprob: -9.420875549316406

Token 195: ' :' (ID: 712)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.01903398148715496
    2. '(' → logprob: -4.644033908843994
    3. '\(' → logprob: -4.894033908843994
    4. '(r' → logprob: -7.644033908843994
    5. '(\' → logprob: -8.019034385681152
    6. 'r' → logprob: -8.269034385681152
    7. '\' → logprob: -8.394034385681152
    8. '<|end|>' → logprob: -8.394034385681152
    9. ' (' → logprob: -9.769034385681152
    10. '(Qt' → logprob: -10.519034385681152

Token 196: ' une' (ID: 2463)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0013799945591017604
    2. '(\' → logprob: -7.50137996673584
    3. '(' → logprob: -7.87637996673584
    4. '\(' → logprob: -8.37637996673584
    5. '(r' → logprob: -9.37637996673584
    6. '(?:' → logprob: -9.62637996673584
    7. ' (' → logprob: -10.62637996673584
    8. '(q' → logprob: -11.12637996673584
    9. 'r' → logprob: -11.62637996673584
    10. '(Qt' → logprob: -11.75137996673584

Token 197: ' ou' (ID: 2031)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.45267370343208313
    2. '(' → logprob: -1.0776736736297607
    3. '(q' → logprob: -5.07767391204834
    4. '(s' → logprob: -5.57767391204834
    5. ' (' → logprob: -6.07767391204834
    6. 'Q' → logprob: -6.07767391204834
    7. '(?:' → logprob: -6.07767391204834
    8. '(qu' → logprob: -6.70267391204834
    9. '(
' → logprob: -7.20267391204834
    10. 's' → logprob: -7.70267391204834

Token 198: ' plusieurs' (ID: 20875)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.32280394434928894
    2. 'fois' → logprob: -1.5728039741516113
    3. ' fois' → logprob: -3.8228039741516113
    4. ' ou' → logprob: -4.072803974151611
    5. 'suite' → logprob: -5.197803974151611
    6. 'plus' → logprob: -5.197803974151611
    7. '+' → logprob: -5.822803974151611
    8. 'or' → logprob: -6.072803974151611
    9. 'au' → logprob: -6.197803974151611
    10. '```' → logprob: -6.447803974151611

Token 199: ' répét' (ID: 156936)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0001749351795297116
    2. '(' → logprob: -9.375174522399902
    3. '\(' → logprob: -9.750174522399902
    4. 'Q' → logprob: -11.000174522399902
    5. '(?:' → logprob: -12.375174522399902
    6. ' (' → logprob: -12.625174522399902
    7. '\' → logprob: -12.750174522399902
    8. '(q' → logprob: -13.875174522399902
    9. '(Qt' → logprob: -14.250174522399902
    10. '(r' → logprob: -14.250174522399902

Token 200: 'itions' (ID: 5500)
  Prédit: 'itions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.01231762021780014
    2. 'ations' → logprob: -4.887317657470703
    3. 't' → logprob: -6.012317657470703
    4. 'ition' → logprob: -7.012317657470703
    5. 'a' → logprob: -8.512317657470703
    6. 'es' → logprob: -8.637317657470703
    7. 'ions' → logprob: -8.762317657470703
    8. 'it' → logprob: -9.012317657470703
    9. 'itations' → logprob: -9.012317657470703
    10. 's' → logprob: -9.387317657470703

Token 201: ' de' (ID: 334)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0895254984498024
    2. '(' → logprob: -3.3395254611968994
    3. '(r' → logprob: -3.8395254611968994
    4. '<|end|>' → logprob: -4.2145256996154785
    5. '\(' → logprob: -5.3395256996154785
    6. ' (' → logprob: -5.5895256996154785
    7. 'r' → logprob: -5.9645256996154785
    8. '\' → logprob: -6.8395256996154785
    9. 'Q' → logprob: -7.8395256996154785
    10. ' \(' → logprob: -8.71452522277832

Token 202: ' "' (ID: 392)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.01941543258726597
    2. '\(' → logprob: -4.019415378570557
    3. 'Q' → logprob: -6.894415378570557
    4. '\' → logprob: -8.769415855407715
    5. '(' → logprob: -10.144415855407715
    6. '(?:' → logprob: -11.019415855407715
    7. ' (' → logprob: -11.144415855407715
    8. ' \(' → logprob: -12.019415855407715
    9. '(\' → logprob: -12.644415855407715
    10. '(Qt' → logprob: -12.769415855407715

Token 203: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.10414685308933258
    2. '(Q' → logprob: -2.354146957397461
    3. '\' → logprob: -6.354146957397461
    4. '\(' → logprob: -6.729146957397461
    5. '[' → logprob: -9.229146957397461
    6. '(' → logprob: -9.479146957397461
    7. '(?:' → logprob: -9.479146957397461
    8. ' Q' → logprob: -9.604146957397461
    9. 'QQ' → logprob: -9.729146957397461
    10. 'QA' → logprob: -9.916646957397461

Token 204: '="
' (ID: 90534)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15336093306541443
    2. 'Q' → logprob: -2.6533608436584473
    3. '<|end|>' → logprob: -3.9033608436584473
    4. '(Q' → logprob: -4.028360843658447
    5. '\' → logprob: -4.153360843658447
    6. '\(' → logprob: -5.153360843658447
    7. '(' → logprob: -5.153360843658447
    8. ')' → logprob: -6.028360843658447
    9. '=\' → logprob: -6.153360843658447
    10. '=(' → logprob: -7.778360843658447

Token 205: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6968770027160645
    2. '\' → logprob: -1.8218770027160645
    3. 're' → logprob: -1.9468770027160645
    4. 'r' → logprob: -2.1968770027160645
    5. '(' → logprob: -3.6968770027160645
    6. '<|end|>' → logprob: -3.6968770027160645
    7. '[' → logprob: -4.4468770027160645
    8. '(re' → logprob: -5.4468770027160645
    9. '(r' → logprob: -5.6968770027160645
    10. '+' → logprob: -6.1968770027160645

Token 206: ' #' (ID: 1069)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.02262367494404316
    2. ' re' → logprob: -4.647623538970947
    3. 'b' → logprob: -4.772623538970947
    4. 'r' → logprob: -5.647623538970947
    5. 'import' → logprob: -7.897623538970947
    6. '   ' → logprob: -8.772624015808105
    7. '\b' → logprob: -9.522624015808105
    8. ' r' → logprob: -10.147624015808105
    9. 'B' → logprob: -10.772624015808105
    10. '```' → logprob: -10.897624015808105

Token 207: ' ~~' (ID: 182406)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.02787903882563114
    2. ' re' → logprob: -4.027879238128662
    3. 'r' → logprob: -5.152879238128662
    4. 'import' → logprob: -6.027879238128662
    5. '>' → logprob: -7.277879238128662
    6. '\' → logprob: -8.777878761291504
    7. ' r' → logprob: -9.277878761291504
    8. '~' → logprob: -9.777878761291504
    9. '   ' → logprob: -10.027878761291504
    10. 'b' → logprob: -10.402878761291504

Token 208: '              ' (ID: 4442)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.006209974177181721
    2. ' $' → logprob: -5.256209850311279
    3. '~' → logprob: -7.381209850311279
    4. ' ~$' → logprob: -9.256210327148438
    5. 'r' → logprob: -9.756210327148438
    6. '$
' → logprob: -10.006210327148438
    7. ')$' → logprob: -10.881210327148438
    8. '"$' → logprob: -11.006210327148438
    9. '$r' → logprob: -11.006210327148438
    10. '\$' → logprob: -11.131210327148438

Token 209: ' :' (ID: 712)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.007742435671389103
    2. ' $' → logprob: -4.882742404937744
    3. 'r' → logprob: -10.507742881774902
    4. '\$' → logprob: -10.507742881774902
    5. '~' → logprob: -11.132742881774902
    6. '$r' → logprob: -11.507742881774902
    7. '$
' → logprob: -11.632742881774902
    8. ')$' → logprob: -11.757742881774902
    9. '```' → logprob: -12.132742881774902
    10. ' ~$' → logprob: -12.132742881774902

Token 210: ' suivi' (ID: 60370)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.38935771584510803
    2. ' $' → logprob: -1.7643576860427856
    3. '~' → logprob: -3.139357805252075
    4. ' ~$' → logprob: -3.264357805252075
    5. '~~' → logprob: -3.264357805252075
    6. ' ~' → logprob: -4.514357566833496
    7. '\' → logprob: -4.514357566833496
    8. ' ~~' → logprob: -5.389357566833496
    9. '\$' → logprob: -6.639357566833496
    10. '$$' → logprob: -7.014357566833496

Token 211: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5281888246536255
    2. ' d' → logprob: -1.4031888246536255
    3. ' par' → logprob: -3.153188705444336
    4. ' ' → logprob: -3.153188705444336
    5. 'par' → logprob: -3.528188705444336
    6. 'de' → logprob: -3.653188705444336
    7. ' de' → logprob: -4.403188705444336
    8. '  ' → logprob: -5.778188705444336
    9. ' des' → logprob: -6.028188705444336
    10. '   ' → logprob: -6.028188705444336

Token 212: ' "' (ID: 392)
  Prédit: '~~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '~~' → logprob: -0.05881296843290329
    2. '~' → logprob: -3.8088128566741943
    3. '$' → logprob: -4.683813095092773
    4. '"' → logprob: -5.058813095092773
    5. ' ~~' → logprob: -5.308813095092773
    6. '\' → logprob: -5.683813095092773
    7. ' ~' → logprob: -6.058813095092773
    8. 'r' → logprob: -6.308813095092773
    9. '`' → logprob: -6.558813095092773
    10. '~~~' → logprob: -6.683813095092773

Token 213: '~~' (ID: 7739)
  Prédit: '~~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~~' → logprob: -0.05823102965950966
    2. '~' → logprob: -3.6832311153411865
    3. '$' → logprob: -4.183230876922607
    4. '"' → logprob: -4.308230876922607
    5. ''' → logprob: -7.308230876922607
    6. '`' → logprob: -7.808230876922607
    7. '~~~' → logprob: -8.058231353759766
    8. ' ~~' → logprob: -8.058231353759766
    9. '\' → logprob: -8.433231353759766
    10. '```' → logprob: -8.683231353759766

Token 214: '"' (ID: 1)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '$' → logprob: -0.0009591046255081892
    2. ')$' → logprob: -7.7509589195251465
    3. ' $' → logprob: -8.625959396362305
    4. '"$' → logprob: -9.125959396362305
    5. 're' → logprob: -9.750959396362305
    6. '$")
' → logprob: -9.875959396362305
    7. '$
' → logprob: -10.250959396362305
    8. 'r' → logprob: -10.875959396362305
    9. '$r' → logprob: -11.250959396362305
    10. '"' → logprob: -11.250959396362305

Token 215: ' en' (ID: 469)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.012227067723870277
    2. 'b' → logprob: -4.5122270584106445
    3. ' re' → logprob: -7.3872270584106445
    4. '   ' → logprob: -8.387227058410645
    5. 'r' → logprob: -8.887227058410645
    6. 'import' → logprob: -10.012227058410645
    7. '\b' → logprob: -10.512227058410645
    8. 'B' → logprob: -10.887227058410645
    9. '
' → logprob: -11.137227058410645
    10. '```' → logprob: -11.387227058410645

Token 216: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.29759177565574646
    2. '$' → logprob: -1.5475918054580688
    3. ' fin' → logprob: -3.1725916862487793
    4. 'f' → logprob: -6.297591686248779
    5. 're' → logprob: -8.547592163085938
    6. 'r' → logprob: -8.922592163085938
    7. 's' → logprob: -9.047592163085938
    8. 'final' → logprob: -9.922592163085938
    9. 'termin' → logprob: -10.047592163085938
    10. 'import' → logprob: -10.172592163085938

Token 217: '
' (ID: 198)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0055617173202335835
    2. 'r' → logprob: -5.755561828613281
    3. 'import' → logprob: -6.505561828613281
    4. '```' → logprob: -7.380561828613281
    5. 'b' → logprob: -9.380561828613281
    6. '$' → logprob: -10.005561828613281
    7. '_re' → logprob: -10.505561828613281
    8. ')' → logprob: -10.755561828613281
    9. '   ' → logprob: -10.755561828613281
    10. '`' → logprob: -10.880561828613281

Token 218: '   ' (ID: 271)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.057656168937683105
    2. '   ' → logprob: -2.9326562881469727
    3. ' re' → logprob: -5.932656288146973
    4. 'r' → logprob: -9.682656288146973
    5. '_re' → logprob: -11.682656288146973
    6. '	re' → logprob: -12.182656288146973
    7. '^' → logprob: -12.182656288146973
    8. '```' → logprob: -12.182656288146973
    9. '=re' → logprob: -12.182656288146973
    10. 'rea' → logprob: -12.307656288146973

Token 219: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' (adapté à ' re') → logprob: -0.00017064384883269668
    2. ' re' → logprob: -9.375170707702637
    3. 'r' → logprob: -10.250170707702637
    4. '   ' → logprob: -10.625170707702637
    5. 'b' → logprob: -11.625170707702637
    6. 'import' → logprob: -12.250170707702637
    7. '
' → logprob: -12.750170707702637
    8. '```' → logprob: -12.875170707702637
    9. '^' → logprob: -13.250170707702637
    10. 'rea' → logprob: -14.125170707702637

Token 220: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.008663617074489594
    2. '_a' → logprob: -4.758663654327393
    3. '.compile' → logprob: -10.008663177490234
    4. '_' → logprob: -13.383663177490234
    5. '_^' → logprob: -14.383663177490234
    6. '_compile' → logprob: -14.633663177490234
    7. '_=' → logprob: -15.133663177490234
    8. '```' → logprob: -15.133663177490234
    9. '_c' → logprob: -15.633663177490234
    10. '_B' → logprob: -15.633663177490234

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759734511375427
    2. '=' → logprob: -0.8259734511375427
    3. '=re' → logprob: -10.325973510742188
    4. 're' → logprob: -14.325973510742188
    5. ' ' → logprob: -15.825973510742188
    6. ' re' → logprob: -16.075973510742188
    7. 'r' → logprob: -16.450973510742188
    8. 's' → logprob: -16.825973510742188
    9. '=r' → logprob: -17.075973510742188
    10. ' ' → logprob: -17.325973510742188

Token 222: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.25192955136299133
    2. ' re' → logprob: -1.501929521560669
    3. 'r' → logprob: -15.62692928314209
    4. ' ' → logprob: -16.376930236816406
    5. '   ' → logprob: -17.001930236816406
    6. '	re' → logprob: -17.126930236816406
    7. '=re' → logprob: -17.126930236816406
    8. 'import' → logprob: -17.501930236816406
    9. '(re' → logprob: -19.001930236816406
    10. '```' → logprob: -19.376930236816406

Token 223: '.compile' (ID: 38900)
  Prédit: '.compile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compile' → logprob: -0.018155328929424286
    2. 'compile' → logprob: -4.018155097961426
    3. '.' → logprob: -13.268155097961426
    4. 'compl' → logprob: -13.768155097961426
    5. '_compile' → logprob: -14.143155097961426
    6. 'compiled' → logprob: -14.268155097961426
    7. 'import' → logprob: -14.643155097961426
    8. 'comp' → logprob: -15.518155097961426
    9. 'com' → logprob: -15.518155097961426
    10. '.com' → logprob: -15.893155097961426

Token 224: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00021402664424385875
    2. '(rb' → logprob: -8.500213623046875
    3. '(' → logprob: -12.500213623046875
    4. '\(' → logprob: -12.875213623046875
    5. 'r' → logprob: -13.250213623046875
    6. ' (' → logprob: -13.375213623046875
    7. '(re' → logprob: -14.500213623046875
    8. 'br' → logprob: -16.250213623046875
    9. '(br' → logprob: -16.375213623046875
    10. 'rb' → logprob: -16.625213623046875

Token 225: '"' (ID: 1)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.52788148727268e-05
    2. '"' → logprob: -10.500064849853516
    3. 'rb' → logprob: -11.000064849853516
    4. '(r' → logprob: -11.375064849853516
    5. ' r' → logprob: -12.000064849853516
    6. '^' → logprob: -13.250064849853516
    7. ''^' → logprob: -14.625064849853516
    8. '	r' → logprob: -14.750064849853516
    9. '   ' → logprob: -15.125064849853516
    10. '```' → logprob: -16.375064849853516

Token 226: '^' (ID: 61)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003055308014154434
    2. '^' → logprob: -6.378055095672607
    3. '"' → logprob: -6.628055095672607
    4. ' r' → logprob: -11.378055572509766
    5. '">' → logprob: -11.503055572509766
    6. ''^' → logprob: -12.503055572509766
    7. 'rb' → logprob: -14.378055572509766
    8. '(r' → logprob: -14.753055572509766
    9. 'b' → logprob: -14.878055572509766
    10. 're' → logprob: -15.128055572509766

Token 227: '>\' (ID: 16656)
  Prédit: '>''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>'' → logprob: -0.33784735202789307
    2. '>\' → logprob: -1.337847352027893
    3. '>' → logprob: -4.2128472328186035
    4. ''>' → logprob: -5.7128472328186035
    5. 'r' → logprob: -6.4628472328186035
    6. '>"' → logprob: -6.7128472328186035
    7. '">'' → logprob: -7.3378472328186035
    8. '">\' → logprob: -7.3378472328186035
    9. '>\<' → logprob: -7.5878472328186035
    10. '>'+' → logprob: -7.9628472328186035

Token 228: '^(' (ID: 32612)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.002162990625947714
    2. '^\' → logprob: -6.377162933349609
    3. '^' → logprob: -8.25216293334961
    4. '\\' → logprob: -8.62716293334961
    5. '\[' → logprob: -11.37716293334961
    6. '```' → logprob: -12.50216293334961
    7. '^^' → logprob: -14.00216293334961
    8. '`\' → logprob: -14.37716293334961
    9. '\(' → logprob: -14.75216293334961
    10. '\$' → logprob: -14.75216293334961

Token 229: 'Q' (ID: 48)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.000529202981851995
    2. '(?:' → logprob: -7.6255292892456055
    3. 'Q' → logprob: -11.250529289245605
    4. '(' → logprob: -11.250529289245605
    5. '\(' → logprob: -11.375529289245605
    6. ' (' → logprob: -13.125529289245605
    7. '(q' → logprob: -14.375529289245605
    8. '(\' → logprob: -15.250529289245605
    9. '((' → logprob: -16.00052833557129
    10. '(Qt' → logprob: -16.12552833557129

Token 230: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.862962229410186e-05
    2. '==' → logprob: -10.500078201293945
    3. '=

' → logprob: -11.250078201293945
    4. '=\' → logprob: -11.375078201293945
    5. '=
' → logprob: -12.500078201293945
    6. ')=' → logprob: -12.625078201293945
    7. '=q' → logprob: -12.750078201293945
    8. '+=' → logprob: -12.875078201293945
    9. '=.*' → logprob: -12.875078201293945
    10. '=}' → logprob: -13.000078201293945

Token 231: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.008106112480163574
    2. ')+(' → logprob: -5.758106231689453
    3. ')+"' → logprob: -6.008106231689453
    4. '\' → logprob: -6.133106231689453
    5. ')\' → logprob: -9.133106231689453
    6. '+' → logprob: -9.508106231689453
    7. ')+'' → logprob: -9.633106231689453
    8. ']+' → logprob: -11.383106231689453
    9. ')' → logprob: -11.883106231689453
    10. '+\' → logprob: -12.258106231689453

Token 232: '~~' (ID: 7739)
  Prédit: '~~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~~' → logprob: -0.009776279330253601
    2. '\' → logprob: -5.1347761154174805
    3. '~~~' → logprob: -7.0097761154174805
    4. '"' → logprob: -7.1347761154174805
    5. '~' → logprob: -7.3847761154174805
    6. '##' → logprob: -7.7597761154174805
    7. '```' → logprob: -8.13477611541748
    8. ' ~~' → logprob: -8.25977611541748
    9. '*' → logprob: -9.63477611541748
    10. '`' → logprob: -9.63477611541748

Token 233: '$' (ID: 3)
  Prédit: '$'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '$' → logprob: -8.101369894575328e-05
    2. '$")
' → logprob: -10.000081062316895
    3. '")' → logprob: -10.500081062316895
    4. ')$' → logprob: -11.875081062316895
    5. '$",' → logprob: -14.750081062316895
    6. '"$' → logprob: -15.500081062316895
    7. '$
' → logprob: -15.750081062316895
    8. ' $' → logprob: -16.125080108642578
    9. '}$' → logprob: -16.250080108642578
    10. '?$' → logprob: -16.625080108642578

Token 234: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12891490757465363
    2. '")' → logprob: -2.1289148330688477
    3. ')")' → logprob: -6.253914833068848
    4. '   ' → logprob: -10.628914833068848
    5. ')"' → logprob: -11.003914833068848
    6. ')
' → logprob: -11.878914833068848
    7. '')' → logprob: -12.128914833068848
    8. '"' → logprob: -13.003914833068848
    9. ' )' → logprob: -13.753914833068848
    10. '"""' → logprob: -13.878914833068848

Token 235: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7850703001022339
    2. '   ' → logprob: -1.2850703001022339
    3. ':' → logprob: -2.2850704193115234
    4. '<|end|>' → logprob: -2.2850704193115234
    5. '):' → logprob: -3.7850704193115234
    6. ')' → logprob: -3.9100704193115234
    7. '    
' → logprob: -4.785070419311523
    8. ':
' → logprob: -6.535070419311523
    9. '\n' → logprob: -6.660070419311523
    10. 'def' → logprob: -6.785070419311523

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09737686812877655
    2. '   ' → logprob: -2.472376823425293
    3. ' for' → logprob: -5.597376823425293
    4. '    
' → logprob: -5.722376823425293
    5. '
' → logprob: -6.847376823425293
    6. '	for' → logprob: -9.222376823425293
    7. '<|end|>' → logprob: -9.847376823425293
    8. '\n' → logprob: -10.097376823425293
    9. '  
' → logprob: -10.597376823425293
    10. ' ' → logprob: -10.597376823425293

Token 237: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25797370076179504
    2. ' i' → logprob: -1.5079736709594727
    3. '_' → logprob: -5.507973670959473
    4. 'i' → logprob: -7.007973670959473
    5. ' line' → logprob: -7.257973670959473
    6. ' snake' → logprob: -8.132973670959473
    7. ' range' → logprob: -10.257973670959473
    8. ' ' → logprob: -11.257973670959473
    9. ' n' → logprob: -12.132973670959473
    10. ' in' → logprob: -12.132973670959473

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14279523491859436
    2. 'in' → logprob: -2.0177953243255615
    3. ' ' → logprob: -9.76779556274414
    4. 'n' → logprob: -10.14279556274414
    5. 'line' → logprob: -12.01779556274414
    6. 'i' → logprob: -12.51779556274414
    7. 's' → logprob: -12.64279556274414
    8. '_' → logprob: -12.89279556274414
    9. 'import' → logprob: -13.39279556274414
    10. '	in' → logprob: -13.76779556274414

Token 239: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00470744539052248
    2. ' range' → logprob: -5.379707336425781
    3. 'sys' → logprob: -9.379707336425781
    4. ' sys' → logprob: -13.629707336425781
    5. 'ange' → logprob: -15.004707336425781
    6. ' ' → logprob: -15.379707336425781
    7. 'rang' → logprob: -15.504707336425781
    8. '(range' → logprob: -15.879707336425781
    9. '	range' → logprob: -15.879707336425781
    10. '   ' → logprob: -16.25470733642578

Token 240: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000727921025827527
    2. '(' → logprob: -7.250728130340576
    3. ' (' → logprob: -11.250727653503418
    4. 'n' → logprob: -12.625727653503418
    5. ' n' → logprob: -13.500727653503418
    6. '(
' → logprob: -15.500727653503418
    7. '(range' → logprob: -17.250728607177734
    8. '   ' → logprob: -17.625728607177734
    9. '(int' → logprob: -19.000728607177734
    10. 'range' → logprob: -19.125728607177734

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03481725975871086
    2. '):
' → logprob: -3.4098172187805176
    3. ')' → logprob: -6.909817218780518
    4. '   ' → logprob: -9.409817695617676
    5. ':' → logprob: -9.534817695617676
    6. ' ):' → logprob: -12.909817695617676
    7. '):
' → logprob: -12.909817695617676
    8. '+' → logprob: -13.034817695617676
    9. '():' → logprob: -13.159817695617676
    10. '):

' → logprob: -13.784817695617676

Token 242: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6405597925186157
    2. '       ' → logprob: -0.7655597925186157
    3. '    
' → logprob: -5.515559673309326
    4. ' line' → logprob: -6.515559673309326
    5. 'line' → logprob: -7.390559673309326
    6. '        
' → logprob: -7.390559673309326
    7. 'input' → logprob: -7.890559673309326
    8. '<|end|>' → logprob: -8.640560150146484
    9. '    ' → logprob: -9.140560150146484
    10. '  
' → logprob: -9.765560150146484

Token 243: ' s' (ID: 265)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07043618708848953
    2. ' line' → logprob: -2.9454362392425537
    3. 's' (adapté à ' s') → logprob: -5.195436000823975
    4. 'snake' → logprob: -5.445436000823975
    5. '   ' → logprob: -5.570436000823975
    6. '       ' → logprob: -7.320436000823975
    7. ' s' → logprob: -8.070436477661133
    8. 'ligne' → logprob: -8.070436477661133
    9. ' snake' → logprob: -8.820436477661133
    10. 'input' → logprob: -9.320436477661133

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994188576936722
    2. '=' → logprob: -2.694941997528076
    3. 's' → logprob: -13.694941520690918
    4. ' ' → logprob: -14.069941520690918
    5. '   ' → logprob: -14.194941520690918
    6. ' ' → logprob: -14.569941520690918
    7. '    ' → logprob: -14.694941520690918
    8. '=sys' → logprob: -14.819941520690918
    9. ' =
' → logprob: -15.319941520690918
    10. '        ' → logprob: -15.319941520690918

Token 245: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0486455038189888
    2. ' sys' → logprob: -3.048645496368408
    3. 'input' → logprob: -9.798645973205566
    4. ' input' → logprob: -14.173645973205566
    5. '=sys' → logprob: -14.423645973205566
    6. '   ' → logprob: -14.548645973205566
    7. '	sys' → logprob: -14.798645973205566
    8. '       ' → logprob: -15.298645973205566
    9. '(sys' → logprob: -15.298645973205566
    10. '.sys' → logprob: -17.92364501953125

Token 246: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.567575034452602e-05
    2. 'stdin' → logprob: -9.50009536743164
    3. '.stdout' → logprob: -11.12509536743164
    4. '.' → logprob: -13.12509536743164
    5. '.std' → logprob: -13.37509536743164
    6. '.readline' → logprob: -13.50009536743164
    7. '(stdin' → logprob: -14.00009536743164
    8. '```' → logprob: -16.62509536743164
    9. 'std' → logprob: -17.50009536743164
    10. '   ' → logprob: -17.62509536743164

Token 247: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.375001907348633
    3. '.stdin' → logprob: -15.500001907348633
    4. 'read' → logprob: -17.625001907348633
    5. '.readlines' → logprob: -18.000001907348633
    6. ' readline' → logprob: -18.375001907348633
    7. 'stdin' → logprob: -18.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. '.read' → logprob: -19.000001907348633
    10. 'line' → logprob: -20.000001907348633

Token 248: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07004868984222412
    2. '()' → logprob: -2.6950488090515137
    3. '.strip' → logprob: -10.695048332214355
    4. '.readline' → logprob: -10.820048332214355
    5. '<|end|>' → logprob: -11.070048332214355
    6. 'rstrip' → logprob: -11.570048332214355
    7. '.rstrip' → logprob: -11.945048332214355
    8. '())' → logprob: -12.070048332214355
    9. '().'' → logprob: -12.195048332214355
    10. '()).' → logprob: -12.445048332214355

Token 249: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.7120533811976202e-05
    2. 'rstrip' → logprob: -11.000017166137695
    3. 'read' → logprob: -15.500017166137695
    4. ' strip' → logprob: -15.875017166137695
    5. '(strip' → logprob: -18.375017166137695
    6. '_strip' → logprob: -19.625017166137695
    7. 'decode' → logprob: -20.000017166137695
    8. '```' → logprob: -20.750017166137695
    9. '.strip' → logprob: -21.750017166137695
    10. 'stripe' → logprob: -22.125017166137695

Token 250: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020001837983727455
    2. '
' → logprob: -4.8950018882751465
    3. ')' → logprob: -5.5200018882751465
    4. '<|end|>' → logprob: -5.6450018882751465
    5. '()' → logprob: -6.7700018882751465
    6. '        
' → logprob: -7.0200018882751465
    7. '()
' → logprob: -7.5200018882751465
    8. 'if' → logprob: -7.5200018882751465
    9. ' if' → logprob: -7.7700018882751465
    10. '<|end|>' → logprob: -8.020001411437988

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.865583706414327e-05
    2. '   ' → logprob: -9.75009822845459
    3. '<|end|>' → logprob: -11.00009822845459
    4. 'if' → logprob: -11.50009822845459
    5. ' if' → logprob: -12.25009822845459
    6. '        
' → logprob: -12.62509822845459
    7. '      ' → logprob: -13.75009822845459
    8. '	' → logprob: -14.12509822845459
    9. '<|end|>' → logprob: -14.12509822845459
    10. '           ' → logprob: -14.25009822845459

Token 252: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003643058007583022
    2. ' if' → logprob: -8.250364303588867
    3. '       ' → logprob: -9.500364303588867
    4. '   ' → logprob: -10.500364303588867
    5. 'match' → logprob: -14.625364303588867
    6. '```' → logprob: -16.500364303588867
    7. '           ' → logprob: -18.000364303588867
    8. 'If' → logprob: -18.500364303588867
    9. '
' → logprob: -18.750364303588867
    10. 'matches' → logprob: -18.875364303588867

Token 253: ' Test' (ID: 4674)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012808336177840829
    2. ' if' → logprob: -6.876280784606934
    3. 'match' → logprob: -8.876280784606934
    4. '       ' → logprob: -9.501280784606934
    5. '   ' → logprob: -10.501280784606934
    6. 'm' → logprob: -12.626280784606934
    7. 'If' → logprob: -14.001280784606934
    8. 'matches' → logprob: -14.501280784606934
    9. 'matched' → logprob: -15.376280784606934
    10. 'result' → logprob: -15.376280784606934

Token 254: ' type' (ID: 1490)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051386140286922455
    2. ' if' → logprob: -3.1763861179351807
    3. 'if' → logprob: -4.92638635635376
    4. '<|end|>' → logprob: -7.42638635635376
    5. '   ' → logprob: -9.301385879516602
    6. '<|end|>' → logprob: -9.676385879516602
    7. 's' → logprob: -9.801385879516602
    8. ')' → logprob: -10.051385879516602
    9. ' for' → logprob: -10.051385879516602
    10. '        
' → logprob: -10.051385879516602

Token 255: ' A' (ID: 355)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0375966913998127
    2. 'A' → logprob: -4.162596702575684
    3. ' A' → logprob: -5.162596702575684
    4. 'if' → logprob: -5.287596702575684
    5. ' =' → logprob: -6.037596702575684
    6. ' if' → logprob: -6.037596702575684
    7. '   ' → logprob: -6.412596702575684
    8. '_' → logprob: -6.787596702575684
    9. 's' → logprob: -7.162596702575684
    10. ' a' → logprob: -7.912596702575684

Token 256: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016902965726330876
    2. ' if' → logprob: -6.87669038772583
    3. 'if' → logprob: -7.75169038772583
    4. '<|end|>' → logprob: -9.626689910888672
    5. ':' → logprob: -10.001689910888672
    6. '        
' → logprob: -10.251689910888672
    7. ')' → logprob: -11.001689910888672
    8. ',' → logprob: -11.251689910888672
    9. '<|end|>' → logprob: -11.376689910888672
    10. '   ' → logprob: -11.501689910888672

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008669880218803883
    2. '<|end|>' → logprob: -5.383669853210449
    3. 'if' → logprob: -6.133669853210449
    4. ' if' → logprob: -6.508669853210449
    5. '        
' → logprob: -9.13366985321045
    6. '<|end|>' → logprob: -9.75866985321045
    7. ':' → logprob: -9.75866985321045
    8. '   ' → logprob: -9.88366985321045
    9. ')' → logprob: -10.13366985321045
    10. ',' → logprob: -10.88366985321045

Token 258: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25898364186286926
    2. '       ' → logprob: -1.7589836120605469
    3. ' if' → logprob: -2.883983612060547
    4. 'match' → logprob: -10.758983612060547
    5. '   ' → logprob: -12.133983612060547
    6. '	if' → logprob: -13.133983612060547
    7. 'matches' → logprob: -14.008983612060547
    8. ' match' → logprob: -14.383983612060547
    9. 'If' → logprob: -14.508983612060547
    10. '           ' → logprob: -15.258983612060547

Token 259: ' re' (ID: 322)
  Prédit: ' re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.1002107709646225
    2. 're' → logprob: -2.350210666656494
    3. '   ' → logprob: -13.225211143493652
    4. ' ' → logprob: -13.600211143493652
    5. '	re' → logprob: -14.475211143493652
    6. ' ' → logprob: -15.725211143493652
    7. 's' → logprob: -16.100210189819336
    8. '(re' → logprob: -16.350210189819336
    9. '  ' → logprob: -16.600210189819336
    10. '=re' → logprob: -17.350210189819336

Token 260: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.5048530030981055e-06
    2. '_b' → logprob: -13.625001907348633
    3. '_' → logprob: -17.500001907348633
    4. 'a' → logprob: -17.500001907348633
    5. '.match' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. '.search' → logprob: -19.375001907348633
    8. '._' → logprob: -19.500001907348633
    9. '.' → logprob: -19.625001907348633

Token 261: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.004189994651824236
    2. '.full' → logprob: -5.504189968109131
    3. '.search' → logprob: -9.879190444946289
    4. '.' → logprob: -10.004190444946289
    5. 'match' → logprob: -11.879190444946289
    6. '\.' → logprob: -12.629190444946289
    7. ' .' → logprob: -12.754190444946289
    8. '_match' → logprob: -14.754190444946289
    9. ').' → logprob: -14.879190444946289
    10. '```' → logprob: -15.004190444946289

Token 262: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.580929347255733e-05
    2. 's' → logprob: -11.875016212463379
    3. '(' → logprob: -12.000016212463379
    4. ' (' → logprob: -12.875016212463379
    5. ')' → logprob: -17.000015258789062
    6. '(
' → logprob: -18.000015258789062
    7. ')(' → logprob: -18.125015258789062
    8. ' s' → logprob: -19.875015258789062
    9. ')s' → logprob: -20.500015258789062
    10. '   ' → logprob: -21.750015258789062

Token 263: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014174791052937508
    2. '):
' → logprob: -4.264174938201904
    3. ')' → logprob: -11.764174461364746
    4. '   ' → logprob: -13.389174461364746
    5. '       ' → logprob: -14.264174461364746
    6. ':' → logprob: -14.389174461364746
    7. '):
' → logprob: -15.014174461364746
    8. ' ):' → logprob: -15.639174461364746
    9. '):

' → logprob: -16.139175415039062
    10. '"):' → logprob: -17.014175415039062

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01019764132797718
    2. ':' → logprob: -4.760197639465332
    3. 'print' → logprob: -7.510197639465332
    4. ':
' → logprob: -7.885197639465332
    5. '
' → logprob: -8.135197639465332
    6. '       ' → logprob: -8.385197639465332
    7. ' print' → logprob: -9.885197639465332
    8. '            
' → logprob: -10.635197639465332
    9. '          ' → logprob: -11.635197639465332
    10. ',' → logprob: -12.010197639465332

Token 265: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.8151179552078247
    2. '           ' → logprob: -1.1901179552078247
    3. '       ' → logprob: -1.6901179552078247
    4. ' print' → logprob: -2.690117835998535
    5. '
' → logprob: -7.565117835998535
    6. '   ' → logprob: -8.815117835998535
    7. '        ' → logprob: -10.565117835998535
    8. '        
' → logprob: -10.565117835998535
    9. '               ' → logprob: -10.940117835998535
    10. '	print' → logprob: -10.940117835998535

Token 266: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.002636183984577656
    2. '('' → logprob: -6.127635955810547
    3. '"A' → logprob: -8.627635955810547
    4. '(A' → logprob: -8.877635955810547
    5. '(' → logprob: -9.627635955810547
    6. 'A' → logprob: -10.127635955810547
    7. '("'' → logprob: -11.377635955810547
    8. '"' → logprob: -11.752635955810547
    9. '(Type' → logprob: -13.002635955810547
    10. '(type' → logprob: -14.002635955810547

Token 267: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5726719498634338
    2. 'Type' → logprob: -1.072671890258789
    3. 'Ser' → logprob: -2.822671890258789
    4. 'type' → logprob: -4.197671890258789
    5. 'ser' → logprob: -4.697671890258789
    6. 'SER' → logprob: -5.572671890258789
    7. 'TYPE' → logprob: -6.072671890258789
    8. 'Snake' → logprob: -6.947671890258789
    9. 'S' → logprob: -7.197671890258789
    10. 'a' → logprob: -7.697671890258789

Token 268: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06271227449178696
    2. '")
' → logprob: -2.8127121925354004
    3. '")
' → logprob: -7.5627121925354
    4. 'ype' → logprob: -9.062712669372559
    5. '')' → logprob: -10.812712669372559
    6. 'e' → logprob: -11.812712669372559
    7. 'Snake' → logprob: -11.812712669372559
    8. ')")' → logprob: -11.937712669372559
    9. 'snake' → logprob: -11.937712669372559
    10. 'Type' → logprob: -12.062712669372559

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017123986617662013
    2. 'elif' → logprob: -9.000171661376953
    3. '           ' → logprob: -10.625171661376953
    4. ' elif' → logprob: -11.125171661376953
    5. '<|end|>' → logprob: -13.000171661376953
    6. ')' → logprob: -13.375171661376953
    7. '
' → logprob: -13.625171661376953
    8. '   ' → logprob: -14.125171661376953
    9. '      ' → logprob: -14.875171661376953
    10. '```' → logprob: -15.000171661376953

Token 270: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2052527368068695
    2. 'elif' → logprob: -1.705252766609192
    3. ' elif' → logprob: -5.580252647399902
    4. 'else' → logprob: -10.330252647399902
    5. 'el' → logprob: -11.830252647399902
    6. '	elif' → logprob: -11.830252647399902
    7. '   ' → logprob: -11.955252647399902
    8. '```' → logprob: -13.080252647399902
    9. ' else' → logprob: -13.330252647399902
    10. '
' → logprob: -13.705252647399902

Token 271: ' Test' (ID: 4674)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.008784860372543335
    2. ' elif' → logprob: -4.758784770965576
    3. 'el' → logprob: -8.758785247802734
    4. '       ' → logprob: -11.383785247802734
    5. 'El' → logprob: -14.383785247802734
    6. 'else' → logprob: -14.508785247802734
    7. ' El' → logprob: -15.258785247802734
    8. '   ' → logprob: -15.883785247802734
    9. 'eli' → logprob: -16.383785247802734
    10. '	elif' → logprob: -16.383785247802734

Token 272: ' type' (ID: 1490)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.5760842561721802
    2. 'elif' → logprob: -0.8260842561721802
    3. ' type' → logprob: -9.57608413696289
    4. 'el' → logprob: -10.70108413696289
    5. ' if' → logprob: -10.82608413696289
    6. ' el' → logprob: -11.07608413696289
    7. ' else' → logprob: -12.45108413696289
    8. 'if' → logprob: -12.57608413696289
    9. 'type' → logprob: -12.82608413696289
    10. 'else' → logprob: -13.20108413696289

Token 273: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5974374413490295
    2. ' B' → logprob: -1.0974373817443848
    3. ' elif' → logprob: -2.3474373817443848
    4. 'elif' → logprob: -3.9724373817443848
    5. ' else' → logprob: -7.097437381744385
    6. 'b' → logprob: -8.347437858581543
    7. 'else' → logprob: -8.347437858581543
    8. '       ' → logprob: -9.222437858581543
    9. '_B' → logprob: -10.347437858581543
    10. ' if' → logprob: -10.347437858581543

Token 274: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.36792638897895813
    2. '       ' → logprob: -1.4929263591766357
    3. ' elif' → logprob: -2.4929263591766357
    4. '	elif' → logprob: -8.242926597595215
    5. 'el' → logprob: -9.742926597595215
    6. '<|end|>' → logprob: -10.242926597595215
    7. '   ' → logprob: -10.617926597595215
    8. ':' → logprob: -10.867926597595215
    9. '```' → logprob: -11.992926597595215
    10. ':
' → logprob: -12.117926597595215

Token 275: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.13129077851772308
    2. '       ' → logprob: -2.2562906742095947
    3. ' elif' → logprob: -4.006290912628174
    4. 'el' → logprob: -10.006290435791016
    5. '   ' → logprob: -10.756290435791016
    6. '```' → logprob: -11.631290435791016
    7. '	elif' → logprob: -11.631290435791016
    8. ':' → logprob: -12.756290435791016
    9. '<|end|>' → logprob: -12.881290435791016
    10. 'if' → logprob: -13.631290435791016

Token 276: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3132946491241455
    2. ' elif' → logprob: -1.3132946491241455
    3. 'el' → logprob: -10.688294410705566
    4. '       ' → logprob: -11.688294410705566
    5. '	elif' → logprob: -14.438294410705566
    6. ' el' → logprob: -14.813294410705566
    7. '   ' → logprob: -15.563294410705566
    8. ' eli' → logprob: -15.688294410705566
    9. ' El' → logprob: -15.938294410705566
    10. 'if' → logprob: -16.063295364379883

Token 277: ' re' (ID: 322)
  Prédit: ' re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.003178071230649948
    2. 're' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.253177642822266
    4. ' ' → logprob: -16.378177642822266
    5. '	re' → logprob: -17.003177642822266
    6. 's' → logprob: -18.878177642822266
    7. '=re' → logprob: -19.003177642822266
    8. '(re' → logprob: -19.128177642822266
    9. '   ' → logprob: -20.003177642822266
    10. '_re' → logprob: -20.003177642822266

Token 278: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.981667537620524e-06
    2. '_a' → logprob: -13.375001907348633
    3. '_' → logprob: -15.250001907348633
    4. '._' → logprob: -16.125001907348633
    5. ' _' → logprob: -17.625001907348633
    6. '=_' → logprob: -19.375001907348633
    7. '_B' → logprob: -19.625001907348633
    8. '_.' → logprob: -19.875001907348633
    9. 'a' → logprob: -20.500001907348633
    10. 'b' → logprob: -21.250001907348633

Token 279: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -12.750003814697266
    3. 'match' → logprob: -15.000003814697266
    4. ' .' → logprob: -15.750003814697266
    5. '.full' → logprob: -19.375003814697266
    6. ' match' → logprob: -19.750003814697266
    7. '.search' → logprob: -19.750003814697266
    8. '.matches' → logprob: -19.750003814697266
    9. '	match' → logprob: -20.375003814697266
    10. '.Match' → logprob: -20.500003814697266

Token 280: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.856408536899835e-05
    2. '(' → logprob: -10.875028610229492
    3. 's' → logprob: -11.750028610229492
    4. ' (' → logprob: -13.375028610229492
    5. '<|end|>' → logprob: -15.625028610229492
    6. '(ss' → logprob: -18.625028610229492
    7. '(
' → logprob: -18.625028610229492
    8. '(S' → logprob: -19.000028610229492
    9. ')' → logprob: -19.500028610229492
    10. '(x' → logprob: -19.625028610229492

Token 281: '):
' (ID: 1883)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.05582408234477043
    2. '):
' → logprob: -3.555824041366577
    3. 's' → logprob: -3.930824041366577
    4. '):' → logprob: -5.305824279785156
    5. ')' → logprob: -7.680824279785156
    6. ')(' → logprob: -8.180824279785156
    7. ' s' → logprob: -9.305824279785156
    8. '       ' → logprob: -9.555824279785156
    9. ' (' → logprob: -9.555824279785156
    10. '(' → logprob: -9.930824279785156

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16195420920848846
    2. 'print' → logprob: -1.9119541645050049
    3. '       ' → logprob: -7.286954402923584
    4. ' print' → logprob: -7.536954402923584
    5. 'True' → logprob: -8.286953926086426
    6. '   ' → logprob: -8.661953926086426
    7. ' True' → logprob: -9.911953926086426
    8. '          ' → logprob: -11.661953926086426
    9. '               ' → logprob: -11.911953926086426
    10. ' ' → logprob: -12.411953926086426

Token 283: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.061054359131958e-06
    2. ' print' → logprob: -11.750007629394531
    3. '           ' → logprob: -16.25000762939453
    4. '       ' → logprob: -19.25000762939453
    5. '	print' → logprob: -22.12500762939453
    6. '   ' → logprob: -23.00000762939453
    7. '```' → logprob: -23.12500762939453
    8. 'Print' → logprob: -23.87500762939453
    9. '               ' → logprob: -25.12500762939453
    10. '.print' → logprob: -25.50000762939453

Token 284: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0004966750275343657
    2. '("("' → logprob: -8.250496864318848
    3. '(' → logprob: -8.375496864318848
    4. '("(' → logprob: -12.875496864318848
    5. '('' → logprob: -13.125496864318848
    6. ' ("' → logprob: -15.875496864318848
    7. '("""' → logprob: -16.12549591064453
    8. '("")' → logprob: -16.37549591064453
    9. '(("' → logprob: -17.00049591064453
    10. ')("' → logprob: -17.25049591064453

Token 285: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.7432603272027336e-06
    2. '"B' → logprob: -13.375001907348633
    3. ' B' → logprob: -16.375001907348633
    4. '"' → logprob: -18.000001907348633
    5. '>B' → logprob: -19.750001907348633
    6. 'b' → logprob: -19.750001907348633
    7. '```' → logprob: -20.000001907348633
    8. '   ' → logprob: -20.250001907348633
    9. 'A' → logprob: -20.875001907348633
    10. '")' → logprob: -21.500001907348633

Token 286: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03817713260650635
    2. '")
' → logprob: -3.288177013397217
    3. ')' → logprob: -9.163177490234375
    4. '       ' → logprob: -10.663177490234375
    5. ')
' → logprob: -12.913177490234375
    6. ')")' → logprob: -13.413177490234375
    7. ')")
' → logprob: -13.788177490234375
    8. '")
' → logprob: -14.288177490234375
    9. '```' → logprob: -14.288177490234375
    10. '"' → logprob: -14.913177490234375

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006835664622485638
    2. 'else' → logprob: -5.006835460662842
    3. ' else' → logprob: -9.1318359375
    4. '<|end|>' → logprob: -11.8818359375
    5. '```' → logprob: -12.5068359375
    6. '	else' → logprob: -14.5068359375
    7. 'elif' → logprob: -15.3818359375
    8. '	' → logprob: -15.3818359375
    9. '   ' → logprob: -15.3818359375
    10. '      ' → logprob: -16.3818359375

Token 288: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049461815506219864
    2. 'else' (adapté à ' else') → logprob: -3.049461841583252
    3. ' else' → logprob: -7.049461841583252
    4. '<|end|>' → logprob: -13.049461364746094
    5. 'elif' → logprob: -13.424461364746094
    6. '	else' → logprob: -13.924461364746094
    7. '```' → logprob: -14.174461364746094
    8. '   ' → logprob: -15.174461364746094
    9. ')' → logprob: -15.799461364746094
    10. '_else' → logprob: -15.799461364746094

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032886747270822525
    2. ':
' → logprob: -3.6578867435455322
    3. '           ' → logprob: -5.032886981964111
    4. '       ' → logprob: -10.532886505126953
    5. '():
' → logprob: -12.532886505126953
    6. '():' → logprob: -12.907886505126953
    7. '	       ' → logprob: -13.032886505126953
    8. ' :' → logprob: -13.282886505126953
    9. '          ' → logprob: -13.782886505126953
    10. '   ' → logprob: -14.032886505126953

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6942631006240845
    2. 'print' → logprob: -0.6942631006240845
    3. ' print' → logprob: -7.444262981414795
    4. '       ' → logprob: -7.819262981414795
    5. '	print' → logprob: -9.819263458251953
    6. '	       ' → logprob: -10.444263458251953
    7. '   ' → logprob: -10.819263458251953
    8. '```' → logprob: -11.069263458251953
    9. '	   ' → logprob: -12.944263458251953
    10. '		' → logprob: -13.444263458251953

Token 291: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004484831355512142
    2. ' print' → logprob: -5.7544846534729
    3. '           ' → logprob: -6.7544846534729
    4. '       ' → logprob: -8.879485130310059
    5. '   ' → logprob: -13.754485130310059
    6. '	print' → logprob: -15.254485130310059
    7. '```' → logprob: -16.254484176635742
    8. ' ' → logprob: -17.629484176635742
    9. '          ' → logprob: -19.129484176635742
    10. '.print' → logprob: -19.379484176635742

Token 292: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004149276297539473
    2. '(' → logprob: -5.879149436950684
    3. '("?' → logprob: -6.754149436950684
    4. '("("' → logprob: -9.504149436950684
    5. '("")' → logprob: -9.504149436950684
    6. '("-' → logprob: -11.629149436950684
    7. '("(' → logprob: -12.254149436950684
    8. '("_' → logprob: -12.504149436950684
    9. '('' → logprob: -12.879149436950684
    10. '(-' → logprob: -13.004149436950684

Token 293: 'NA' (ID: 9555)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3061475157737732
    2. 'NA' → logprob: -2.556147575378418
    3. 'N' → logprob: -2.806147575378418
    4. 'Unknown' → logprob: -3.306147575378418
    5. 'UNKNOWN' → logprob: -3.681147575378418
    6. 'NONE' → logprob: -3.931147575378418
    7. '?' → logprob: -4.056147575378418
    8. 'unknown' → logprob: -4.931147575378418
    9. 'Neither' → logprob: -5.806147575378418
    10. 'In' → logprob: -6.181147575378418

Token 294: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0007767542265355587
    2. ')")' → logprob: -7.750776767730713
    3. ')' → logprob: -8.000776290893555
    4. '")
' → logprob: -11.500776290893555
    5. ')")
' → logprob: -15.000776290893555
    6. '}")' → logprob: -16.125776290893555
    7. '"' → logprob: -16.625776290893555
    8. ')"' → logprob: -17.000776290893555
    9. '")
' → logprob: -17.125776290893555
    10. '')' → logprob: -18.250776290893555

Token 295: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07897692918777466
    2. '__' → logprob: -2.57897686958313
    3. '_' → logprob: -9.95397663116455
    4. '___' → logprob: -11.45397663116455
    5. ' _' → logprob: -11.57897663116455
    6. ' ___' → logprob: -12.45397663116455
    7. '_name' → logprob: -12.70397663116455
    8. ' ' → logprob: -12.70397663116455
    9. '____' → logprob: -13.57897663116455
    10. 'name' → logprob: -13.57897663116455

Token 297: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12664508819580078
    2. ' ==' → logprob: -2.376645088195801
    3. '==' → logprob: -4.001645088195801
    4. ' __' → logprob: -5.626645088195801
    5. '=="' → logprob: -5.876645088195801
    6. '.__' → logprob: -8.0016450881958
    7. 'name' → logprob: -8.3766450881958
    8. '=='' → logprob: -8.7516450881958
    9. '__.__' → logprob: -9.2516450881958
    10. ' =="' → logprob: -9.6266450881958

Token 298: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.7954958821064793e-05
    2. '__.__' → logprob: -11.000018119812012
    3. '==' → logprob: -14.000018119812012
    4. '=="' → logprob: -16.625017166137695
    5. '__('' → logprob: -17.000017166137695
    6. '__.' → logprob: -17.125017166137695
    7. '____' → logprob: -17.375017166137695
    8. '__["' → logprob: -17.625017166137695
    9. '__
' → logprob: -17.625017166137695
    10. '__":
' → logprob: -17.750017166137695

Token 299: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10471320897340775
    2. '==' → logprob: -2.979713201522827
    3. '=="' → logprob: -3.104713201522827
    4. ' ==' → logprob: -6.229713439941406
    5. '=='' → logprob: -6.354713439941406
    6. '__.__' → logprob: -10.979713439941406
    7. '___' → logprob: -11.229713439941406
    8. '==="' → logprob: -11.479713439941406
    9. '.__' → logprob: -12.354713439941406
    10. '===' → logprob: -12.479713439941406

Token 300: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005257003009319305
    2. ''' → logprob: -5.2552571296691895
    3. ' "__' → logprob: -11.255256652832031
    4. '__' → logprob: -11.505256652832031
    5. ' '__' → logprob: -15.755256652832031
    6. '"user' → logprob: -17.00525665283203
    7. '"name' → logprob: -17.25525665283203
    8. ''"' → logprob: -18.25525665283203
    9. '("__' → logprob: -18.25525665283203
    10. '"_' → logprob: -18.63025665283203

Token 301: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6272578835487366
    2. 'main' → logprob: -0.8772578835487366
    3. '"' → logprob: -3.252257823944092
    4. ''' → logprob: -4.502257823944092
    5. '_main' → logprob: -9.62725830078125
    6. '__":
' → logprob: -9.62725830078125
    7. '___' → logprob: -10.12725830078125
    8. 'name' → logprob: -10.75225830078125
    9. ' main' → logprob: -11.00225830078125
    10. '__':
' → logprob: -11.12725830078125

Token 302: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.010081388056278229
    2. '__' → logprob: -4.8850812911987305
    3. '__':
' → logprob: -6.0100812911987305
    4. '__:' → logprob: -11.26008129119873
    5. '__.' → logprob: -12.63508129119873
    6. '__["' → logprob: -14.51008129119873
    7. '():
' → logprob: -14.88508129119873
    8. '```' → logprob: -15.26008129119873
    9. '.' → logprob: -15.38508129119873
    10. '__.__' → logprob: -15.76008129119873

Token 303: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00030161935137584805
    2. ' main' → logprob: -9.125301361083984
    3. '   ' → logprob: -9.250301361083984
    4. '	main' → logprob: -9.250301361083984
    5. '_main' → logprob: -14.875301361083984
    6. '.main' → logprob: -18.250301361083984
    7. '(main' → logprob: -18.375301361083984
    8. 'Main' → logprob: -18.500301361083984
    9. ' ' → logprob: -18.500301361083984
    10. 'mainwindow' → logprob: -18.875301361083984

Token 304: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -21.875
    4. '_main' → logprob: -25.75
    5. '   ' → logprob: -26.0
    6. 'mai' → logprob: -26.0
    7. '.main' → logprob: -26.125
    8. 'ma' → logprob: -26.625
    9. 'maine' → logprob: -27.0
    10. '(main' → logprob: -27.375

Token 305: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 303
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 171
Précision stricte (1ère position): 26.73%
Précision adaptée (1ère position): 29.70%
Précision (top 10): 56.44%
================================================================================
