================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import sys

def can(h, anchors):
    z = h*h
    points = []
    for x,y,l in anchors:
        r = l*l - z
        if r < -1e-14:
            return False
        r = max(r,0)
        d = math.sqrt(r)
        points.append((x,y,d))
    # check no ropes cross:
    # Ropes do not cross if for every pair (i,j), distance(anchor_i,anchor_j) >= d_i + d_j
    n = len(points)
    for i in range(n):
        x1,y1,d1 = points[i]
        for j in range(i+1,n):
            x2,y2,d2 = points[j]
            dist = math.hypot(x2 - x1, y2 - y1)
            if dist + 1e-14 < d1 + d2:
                return False
    return True

def main():
    input = sys.stdin.readline
    while True:
        n = input()
        if not n:
            break
        n = n.strip()
        if n == '0':
            break
        n = int(n)
        anchors = []
        for _ in range(n):
            x,y,l = map(int,input().split())
            anchors.append((x,y,l))
        low, high = 0.0, 300.0
        for _ in range(60):
            mid = (low+high)/2
            if can(mid, anchors):
                low = mid
            else:
                high = mid
        print("%.7f"%low)
        
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027101305313408375
    2. '<|end|>' → logprob: -6.627710342407227
    3. '```' → logprob: -7.877710342407227
    4. '\n' → logprob: -8.252710342407227
    5. '\' → logprob: -8.252710342407227
    6. 'import' → logprob: -8.752710342407227
    7. '<|end|>' → logprob: -9.752710342407227
    8. '.e' → logprob: -10.502710342407227
    9. '.pi' → logprob: -10.627710342407227
    10. '
' → logprob: -10.877710342407227

Token 4: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.45391958951950073
    2. ' os' → logprob: -1.0789196491241455
    3. ' numpy' → logprob: -4.203919410705566
    4. ' random' → logprob: -5.578919410705566
    5. 'sys' → logprob: -5.578919410705566
    6. 'os' → logprob: -6.578919410705566
    7. ' statistics' → logprob: -8.578919410705566
    8. ' cm' → logprob: -8.578919410705566
    9. ' re' → logprob: -8.703919410705566
    10. 'random' → logprob: -8.703919410705566

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.024697184562683
    2. '<|end|>' → logprob: -1.399697184562683
    3. '\n' → logprob: -2.0246973037719727
    4. '
' → logprob: -2.0246973037719727
    5. '

' → logprob: -3.0246973037719727
    6. '```' → logprob: -3.8996973037719727
    7. 'import' → logprob: -4.024697303771973
    8. '<|end|>' → logprob: -4.149697303771973
    9. '\' → logprob: -4.399697303771973
    10. 'newline' → logprob: -4.899697303771973

Token 6: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5566304922103882
    2. '.' → logprob: -1.6816304922103882
    3. '\' → logprob: -2.0566306114196777
    4. '\n' → logprob: -3.1816306114196777
    5. '```' → logprob: -4.056630611419678
    6. 'import' → logprob: -4.056630611419678
    7. '#' → logprob: -4.306630611419678
    8. '
' → logprob: -6.056630611419678
    9. '`' → logprob: -6.181630611419678
    10. 'print' → logprob: -6.306630611419678

Token 7: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03880583867430687
    2. ' calculate' → logprob: -3.5388057231903076
    3. ' factorial' → logprob: -5.788805961608887
    4. ' space' → logprob: -6.788805961608887
    5. '_' → logprob: -6.913805961608887
    6. ' math' → logprob: -7.038805961608887
    7. ' sqrt' → logprob: -7.288805961608887
    8. ' add' → logprob: -7.788805961608887
    9. ' compute' → logprob: -7.913805961608887
    10. ' ' → logprob: -8.538805961608887

Token 8: '(h' (ID: 8120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03714779019355774
    2. '_c' → logprob: -4.1621479988098145
    3. '_accept' → logprob: -5.1621479988098145
    4. ' _' → logprob: -5.7871479988098145
    5. ' ' → logprob: -6.5371479988098145
    6. '_n' → logprob: -6.9121479988098145
    7. '_access' → logprob: -6.9121479988098145
    8. '_continue' → logprob: -7.4121479988098145
    9. '_append' → logprob: -7.7871479988098145
    10. '_compute' → logprob: -7.7871479988098145

Token 9: ',' (ID: 11)
  Prédit: 'elp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elp' → logprob: -0.6408344507217407
    2. 'andle' → logprob: -1.6408344507217407
    3. 'e' → logprob: -2.390834331512451
    4. 'a' → logprob: -2.515834331512451
    5. 'and' → logprob: -3.890834331512451
    6. ',' → logprob: -4.140834331512451
    7. 'eight' → logprob: -4.140834331512451
    8. ')' → logprob: -4.515834331512451
    9. 'old' → logprob: -4.765834331512451
    10. 'ave' → logprob: -4.765834331512451

Token 10: ' anchors' (ID: 114642)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7910840511322021
    2. ' w' → logprob: -1.2910840511322021
    3. 'm' → logprob: -3.166084051132202
    4. ' t' → logprob: -3.541084051132202
    5. ' m' → logprob: -3.666084051132202
    6. 't' → logprob: -3.916084051132202
    7. 'k' → logprob: -4.166084289550781
    8. 'd' → logprob: -4.416084289550781
    9. 'r' → logprob: -4.416084289550781
    10. ' k' → logprob: -4.541084289550781

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03577469289302826
    2. ',' → logprob: -3.7857747077941895
    3. ')' → logprob: -4.4107747077941895
    4. ' ):' → logprob: -9.160774230957031
    5. '=' → logprob: -9.535774230957031
    6. '[' → logprob: -10.285774230957031
    7. ':' → logprob: -10.910774230957031
    8. ' ,' → logprob: -11.160774230957031
    9. '[]):' → logprob: -11.285774230957031
    10. 's' → logprob: -11.410774230957031

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33032044768333435
    2. '    ' → logprob: -2.205320358276367
    3. ':' → logprob: -2.455320358276367
    4. ' :' → logprob: -3.205320358276367
    5. '):' → logprob: -3.705320358276367
    6. ' ' → logprob: -4.580320358276367
    7. ' return' → logprob: -5.330320358276367
    8. ')' → logprob: -6.580320358276367
    9. '  ' → logprob: -7.080320358276367
    10. ' ):' → logprob: -7.455320358276367

Token 13: ' z' (ID: 579)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.283660352230072
    2. '   ' → logprob: -1.9086604118347168
    3. '):' → logprob: -2.908660411834717
    4. ' :' → logprob: -3.408660411834717
    5. ' ' → logprob: -6.533660411834717
    6. '[' → logprob: -6.533660411834717
    7. '    ' → logprob: -6.658660411834717
    8. ' for' → logprob: -7.158660411834717
    9. ',' → logprob: -7.283660411834717
    10. ' return' → logprob: -7.408660411834717

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6205608248710632
    2. '=' → logprob: -0.9955608248710632
    3. ' ==' → logprob: -3.495560884475708
    4. ' <' → logprob: -3.995560884475708
    5. '==' → logprob: -4.120560646057129
    6. ' ' → logprob: -5.245560646057129
    7. ' >=' → logprob: -5.245560646057129
    8. '   ' → logprob: -5.495560646057129
    9. ' <=' → logprob: -6.120560646057129
    10. '>=' → logprob: -6.370560646057129

Token 15: ' h' (ID: 312)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.56442791223526
    2. ' h' → logprob: -1.5644278526306152
    3. ' ' → logprob: -2.5644278526306152
    4. 'h' → logprob: -3.0644278526306152
    5. ' abs' → logprob: -3.1894278526306152
    6. 'abs' → logprob: -3.5644278526306152
    7. ' math' → logprob: -4.814427852630615
    8. '[]' → logprob: -5.814427852630615
    9. ' sum' → logprob: -6.064427852630615
    10. 'sum' → logprob: -6.314427852630615

Token 16: '*h' (ID: 139295)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7130274176597595
    2. '[' → logprob: -1.5880274772644043
    3. '+' → logprob: -2.3380274772644043
    4. ' **' → logprob: -2.5880274772644043
    5. ' *' → logprob: -3.9630274772644043
    6. '*' → logprob: -3.9630274772644043
    7. '>' → logprob: -3.9630274772644043
    8. '-' → logprob: -4.588027477264404
    9. ' +' → logprob: -4.588027477264404
    10. ' >' → logprob: -4.963027477264404

Token 17: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43251946568489075
    2. ' ' → logprob: -1.6825194358825684
    3. '-' → logprob: -3.0575194358825684
    4. ' >=' → logprob: -3.9325194358825684
    5. '+' → logprob: -4.307519435882568
    6. '   ' → logprob: -4.432519435882568
    7. ' <=' → logprob: -4.557519435882568
    8. '*' → logprob: -4.682519435882568
    9. ')' → logprob: -4.807519435882568
    10. ' *' → logprob: -4.807519435882568

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5479390025138855
    2. ' ' → logprob: -1.6729390621185303
    3. ' -' → logprob: -2.5479390621185303
    4. '-' → logprob: -3.2979390621185303
    5. ' *' → logprob: -3.7979390621185303
    6. '<|end|>' → logprob: -3.7979390621185303
    7. ')' → logprob: -4.422938823699951
    8. '*' → logprob: -4.672938823699951
    9. '+' → logprob: -4.922938823699951
    10. ' for' → logprob: -5.047938823699951

Token 19: ' points' (ID: 5571)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3545912504196167
    2. ' -' → logprob: -1.6045912504196167
    3. ' for' → logprob: -1.8545912504196167
    4. '-' → logprob: -2.2295913696289062
    5. '+' → logprob: -2.7295913696289062
    6. '   ' → logprob: -2.8545913696289062
    7. ' +' → logprob: -2.9795913696289062
    8. '**' → logprob: -3.6045913696289062
    9. ' **' → logprob: -4.354591369628906
    10. ')' → logprob: -4.479591369628906

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026815030723810196
    2. '=' → logprob: -3.6518149375915527
    3. '<|end|>' → logprob: -9.151815414428711
    4. '=[]' → logprob: -9.276815414428711
    5. '   ' → logprob: -9.401815414428711
    6. '<|end|>' → logprob: -9.776815414428711
    7. '.' → logprob: -10.026815414428711
    8. ' ' → logprob: -11.026815414428711
    9. ')' → logprob: -11.026815414428711
    10. '[]' → logprob: -11.026815414428711

Token 21: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3032692074775696
    2. '[]' → logprob: -1.5532691478729248
    3. ' [(' → logprob: -3.553269147872925
    4. ' [' → logprob: -4.428269386291504
    5. '[(' → logprob: -5.428269386291504
    6. '[' → logprob: -6.178269386291504
    7. '[len' → logprob: -6.803269386291504
    8. ' set' → logprob: -7.553269386291504
    9. ' ' → logprob: -7.678269386291504
    10. 'len' → logprob: -8.553269386291504

Token 22: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22326430678367615
    2. '<|end|>' → logprob: -2.348264217376709
    3. 'for' → logprob: -2.598264217376709
    4. '   ' → logprob: -3.723264217376709
    5. '<|end|>' → logprob: -5.723264217376709
    6. '	for' → logprob: -6.598264217376709
    7. ' ' → logprob: -6.848264217376709
    8. ',' → logprob: -9.098264694213867
    9. ')' → logprob: -9.598264694213867
    10. '  ' → logprob: -10.973264694213867

Token 23: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47681742906570435
    2. 'for' (adapté à ' for') → logprob: -0.9768174290657043
    3. '   ' → logprob: -6.476817607879639
    4. ' ' → logprob: -7.226817607879639
    5. '<|end|>' → logprob: -8.22681713104248
    6. '	for' → logprob: -8.85181713104248
    7. 'n' → logprob: -11.72681713104248
    8. ')' → logprob: -11.97681713104248
    9. '  ' → logprob: -11.97681713104248
    10. '<|end|>' → logprob: -12.22681713104248

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9137595891952515
    2. ' a' → logprob: -1.1637595891952515
    3. 'x' → logprob: -1.9137595891952515
    4. 'a' → logprob: -2.913759708404541
    5. ' i' → logprob: -3.288759708404541
    6. ' anchor' → logprob: -3.663759708404541
    7. 'i' → logprob: -5.163759708404541
    8. ' ' → logprob: -5.413759708404541
    9. 'anchor' → logprob: -6.663759708404541
    10. ' (' → logprob: -6.663759708404541

Token 25: ',y' (ID: 16103)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07212415337562561
    2. ',' → logprob: -3.0721242427825928
    3. 'in' → logprob: -3.8221242427825928
    4. ' ' → logprob: -7.572124004364014
    5. ' ,' → logprob: -7.697124004364014
    6. '0' → logprob: -9.822124481201172
    7. 'range' → logprob: -9.947124481201172
    8. '<|end|>' → logprob: -10.197124481201172
    9. ',y' → logprob: -10.509624481201172
    10. ',x' → logprob: -11.072124481201172

Token 26: ',l' (ID: 45198)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004809841513633728
    2. 'in' → logprob: -5.379809856414795
    3. ',' → logprob: -8.754809379577637
    4. ' ' → logprob: -11.129809379577637
    5. ' ,' → logprob: -11.879809379577637
    6. '	in' → logprob: -12.879809379577637
    7. '   ' → logprob: -13.129809379577637
    8. '<|end|>' → logprob: -13.379809379577637
    9. '  ' → logprob: -13.629809379577637
    10. ',in' → logprob: -14.379809379577637

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012248264625668526
    2. 'in' → logprob: -4.6372480392456055
    3. ',' → logprob: -6.0122480392456055
    4. 'n' → logprob: -11.762248039245605
    5. ' ' → logprob: -12.262248039245605
    6. 's' → logprob: -12.512248039245605
    7. ' ,' → logprob: -12.512248039245605
    8. 'ine' → logprob: -13.012248039245605
    9. '```' → logprob: -13.262248039245605
    10. ',n' → logprob: -13.762248039245605

Token 28: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.20150397717952728
    2. ' anchors' → logprob: -1.7015039920806885
    3. 'anch' → logprob: -9.95150375366211
    4. 'anchor' → logprob: -10.32650375366211
    5. ' ' → logprob: -12.32650375366211
    6. ' anchor' → logprob: -13.45150375366211
    7. 'points' → logprob: -14.76400375366211
    8. '   ' → logprob: -14.82650375366211
    9. 'Anch' → logprob: -14.82650375366211
    10. ' anch' → logprob: -14.82650375366211

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003241414960939437
    2. ':
' → logprob: -8.125324249267578
    3. ',' → logprob: -11.125324249267578
    4. '):' → logprob: -12.250324249267578
    5. '   ' → logprob: -12.750324249267578
    6. ' :' → logprob: -13.750324249267578
    7. ':**' → logprob: -14.125324249267578
    8. '=' → logprob: -14.500324249267578
    9. ':

' → logprob: -14.625324249267578
    10. '<|end|>' → logprob: -14.625324249267578

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14335502684116364
    2. ':' → logprob: -2.393355131149292
    3. '<|end|>' → logprob: -3.768355131149292
    4. ',' → logprob: -4.643354892730713
    5. ':
' → logprob: -5.393354892730713
    6. '<|end|>' → logprob: -6.018354892730713
    7. ' if' → logprob: -7.268354892730713
    8. '):
' → logprob: -7.768354892730713
    9. '   ' → logprob: -8.268355369567871
    10. '
' → logprob: -8.518355369567871

Token 31: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10377807915210724
    2. ' if' → logprob: -2.478778123855591
    3. ' s' → logprob: -6.103777885437012
    4. ' x' → logprob: -6.478777885437012
    5. 'd' → logprob: -6.728777885437012
    6. 'if' → logprob: -6.978777885437012
    7. '```' → logprob: -7.103777885437012
    8. ' points' → logprob: -7.228777885437012
    9. 'x' → logprob: -7.353777885437012
    10. ' y' → logprob: -7.353777885437012

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16200165450572968
    2. ' =' → logprob: -1.912001609802246
    3. '2' → logprob: -6.787001609802246
    4. '_squared' → logprob: -8.662001609802246
    5. '=r' → logprob: -9.412001609802246
    6. '=s' → logprob: -9.787001609802246
    7. '=Math' → logprob: -10.537001609802246
    8. '_sq' → logprob: -10.787001609802246
    9. 'ight' → logprob: -10.912001609802246
    10. 'adius' → logprob: -11.037001609802246

Token 33: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.43856021761894226
    2. 'math' → logprob: -1.9385602474212646
    3. ' math' → logprob: -2.1885602474212646
    4. ' l' → logprob: -2.5635602474212646
    5. '(math' → logprob: -5.0635600090026855
    6. ' (' → logprob: -5.4385600090026855
    7. '(l' → logprob: -5.5635600090026855
    8. 'h' → logprob: -6.3135600090026855
    9. 'max' → logprob: -6.3135600090026855
    10. 'abs' → logprob: -7.3135600090026855

Token 34: '*l' (ID: 176337)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.862302839756012
    2. '*' → logprob: -1.2373027801513672
    3. '/' → logprob: -2.237302780151367
    4. '-' → logprob: -2.987302780151367
    5. '**' → logprob: -2.987302780151367
    6. ' -' → logprob: -3.987302780151367
    7. ' +' → logprob: -4.112302780151367
    8. '/math' → logprob: -4.487302780151367
    9. ' /' → logprob: -4.612302780151367
    10. '*r' → logprob: -4.737302780151367

Token 35: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.431735098361969
    2. '-' → logprob: -1.0567350387573242
    3. ' ' → logprob: -6.431735038757324
    4. '<|end|>' → logprob: -7.931735038757324
    5. '-m' → logprob: -8.181735038757324
    6. '   ' → logprob: -8.806735038757324
    7. 'import' → logprob: -8.806735038757324
    8. ' /' → logprob: -9.056735038757324
    9. '+' → logprob: -9.931735038757324
    10. '-r' → logprob: -10.306735038757324

Token 36: ' z' (ID: 579)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8796138763427734
    2. 'x' → logprob: -1.7546138763427734
    3. ' (' → logprob: -1.7546138763427734
    4. 'z' → logprob: -2.7546138763427734
    5. 'abs' → logprob: -3.3796138763427734
    6. '(abs' → logprob: -3.3796138763427734
    7. '(z' → logprob: -3.6296138763427734
    8. '(' → logprob: -3.8796138763427734
    9. ' abs' → logprob: -4.129613876342773
    10. ' x' → logprob: -4.129613876342773

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3131398558616638
    2. 'if' (adapté à ' if') → logprob: -2.0631399154663086
    3. ' ' → logprob: -2.8131399154663086
    4. '
' → logprob: -3.9381399154663086
    5. '**' → logprob: -3.9381399154663086
    6. '       ' → logprob: -5.313139915466309
    7. '0' → logprob: -5.313139915466309
    8. '<|end|>' → logprob: -5.313139915466309
    9. ')' → logprob: -5.438139915466309
    10. ' 
' → logprob: -5.563139915466309

Token 40: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04160144180059433
    2. 'r' → logprob: -3.2916014194488525
    3. ' ' → logprob: -6.041601657867432
    4. '0' → logprob: -6.916601657867432
    5. '>' → logprob: -9.166601181030273
    6. '<' → logprob: -11.166601181030273
    7. '=' → logprob: -11.416601181030273
    8. ' <' → logprob: -12.166601181030273
    9. '   ' → logprob: -12.229101181030273
    10. ' l' → logprob: -12.416601181030273

Token 41: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8645122051239014
    2. '<' → logprob: -0.9895122051239014
    3. '>=' → logprob: -2.2395122051239014
    4. ' >=' → logprob: -2.6145122051239014
    5. '>' → logprob: -3.9895122051239014
    6. ' ' → logprob: -5.7395124435424805
    7. '0' → logprob: -6.2395124435424805
    8. ' >' → logprob: -6.7395124435424805
    9. '=' → logprob: -7.2395124435424805
    10. '==' → logprob: -7.8645124435424805

Token 42: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17543400824069977
    2. '=' → logprob: -2.175434112548828
    3. ' ' → logprob: -3.050434112548828
    4. ' =' → logprob: -12.675434112548828
    5. '1' → logprob: -13.425434112548828
    6. '-' → logprob: -13.425434112548828
    7. ':' → logprob: -14.550434112548828
    8. ')' → logprob: -14.675434112548828
    9. ' -' → logprob: -14.675434112548828
    10. '>' → logprob: -14.800434112548828

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005653033731505275
    2. '0' → logprob: -7.750565528869629
    3. ' ' → logprob: -9.250565528869629
    4. '10' → logprob: -10.375565528869629
    5. '-' → logprob: -13.500565528869629
    6. 'sys' → logprob: -13.750565528869629
    7. '2' → logprob: -13.875565528869629
    8. '(' → logprob: -13.875565528869629
    9. '.' → logprob: -13.875565528869629
    10. '4' → logprob: -15.000565528869629

Token 44: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00012689977302215993
    2. '0' → logprob: -9.250126838684082
    3. '000' → logprob: -11.250126838684082
    4. 'E' → logprob: -11.625126838684082
    5. ' ' → logprob: -12.875126838684082
    6. '.e' → logprob: -13.250126838684082
    7. '.' → logprob: -13.375126838684082
    8. ':' → logprob: -14.000126838684082
    9. '1' → logprob: -14.750126838684082
    10. '00' → logprob: -15.000126838684082

Token 45: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.372294698550832e-06
    2. '9' → logprob: -12.875009536743164
    3. '8' → logprob: -13.250009536743164
    4. '6' → logprob: -13.625009536743164
    5. '10' → logprob: -14.000009536743164
    6. '7' → logprob: -14.125009536743164
    7. '```' → logprob: -15.000009536743164
    8. '12' → logprob: -15.125009536743164
    9. '15' → logprob: -15.500009536743164
    10. '5' → logprob: -15.500009536743164

Token 46: '14' (ID: 1265)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.1466341018676758
    2. '9' → logprob: -1.1466341018676758
    3. '7' → logprob: -2.146634101867676
    4. '10' → logprob: -2.271634101867676
    5. '6' → logprob: -2.646634101867676
    6. '12' → logprob: -3.271634101867676
    7. '5' → logprob: -3.896634101867676
    8. '14' → logprob: -5.146634101867676
    9. '15' → logprob: -5.771634101867676
    10. '4' → logprob: -6.521634101867676

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013345248298719525
    2. ':return' → logprob: -7.6263346672058105
    3. ' :' → logprob: -8.126334190368652
    4. ':
' → logprob: -8.626334190368652
    5. '):' → logprob: -8.751334190368652
    6. ' or' → logprob: -9.126334190368652
    7. '       ' → logprob: -10.251334190368652
    8. '<|end|>' → logprob: -10.501334190368652
    9. ' ' → logprob: -11.501334190368652
    10. ')' → logprob: -11.626334190368652

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14241930842399597
    2. ' continue' → logprob: -2.1424193382263184
    3. '       ' → logprob: -5.392419338226318
    4. ':' → logprob: -5.767419338226318
    5. ' ' → logprob: -6.267419338226318
    6. 'continue' → logprob: -6.517419338226318
    7. ' return' → logprob: -6.767419338226318
    8. ' :' → logprob: -7.392419338226318
    9. '        ' → logprob: -8.14241886138916
    10. ':
' → logprob: -8.39241886138916

Token 49: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14999906718730927
    2. ' continue' → logprob: -2.5249991416931152
    3. '       ' → logprob: -3.7749991416931152
    4. '           ' → logprob: -4.149999141693115
    5. 'return' (adapté à ' return') → logprob: -4.524999141693115
    6. ' ' → logprob: -5.024999141693115
    7. 'continue' → logprob: -6.274999141693115
    8. '        ' → logprob: -8.399998664855957
    9. ':return' → logprob: -8.399998664855957
    10. '    ' → logprob: -8.524998664855957

Token 50: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.041075628250837326
    2. 'False' → logprob: -3.2910757064819336
    3. ' ' → logprob: -6.291075706481934
    4. ' None' → logprob: -6.791075706481934
    5. 'None' → logprob: -10.666075706481934
    6. ' F' → logprob: -11.416075706481934
    7. ' True' → logprob: -11.666075706481934
    8. ' 
' → logprob: -13.166075706481934
    9. '0' → logprob: -13.291075706481934
    10. ' 

' → logprob: -13.791075706481934

Token 51: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07698366045951843
    2. '
' → logprob: -3.826983690261841
    3. '<|end|>' → logprob: -4.076983451843262
    4. ',' → logprob: -4.326983451843262
    5. ' ' → logprob: -4.951983451843262
    6. '        
' → logprob: -5.201983451843262
    7. ')' → logprob: -6.076983451843262
    8. '   ' → logprob: -6.701983451843262
    9. '\n' → logprob: -6.826983451843262
    10. '  
' → logprob: -7.076983451843262

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08181177079677582
    2. '        
' → logprob: -3.8318116664886475
    3. '<|end|>' → logprob: -3.9568116664886475
    4. ',' → logprob: -4.456811904907227
    5. ' ' → logprob: -4.581811904907227
    6. ')' → logprob: -5.456811904907227
    7. '  
' → logprob: -5.956811904907227
    8. '    
' → logprob: -6.456811904907227
    9. ' 
' → logprob: -6.831811904907227
    10. '
' → logprob: -6.831811904907227

Token 53: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0944904163479805
    2. 'r' (adapté à ' r') → logprob: -4.0944905281066895
    3. ' if' → logprob: -4.3444905281066895
    4. ' r' → logprob: -4.5944905281066895
    5. ')' → logprob: -4.8444905281066895
    6. ' points' → logprob: -4.8444905281066895
    7. '   ' → logprob: -5.0944905281066895
    8. ' ' → logprob: -5.2194905281066895
    9. 's' → logprob: -5.3444905281066895
    10. '    ' → logprob: -6.0944905281066895

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6942794322967529
    2. ' =' → logprob: -0.6942794322967529
    3. '**' → logprob: -7.069279670715332
    4. ' **' → logprob: -8.319279670715332
    5. ' ' → logprob: -11.319279670715332
    6. '>' → logprob: -11.944279670715332
    7. '0' → logprob: -12.819279670715332
    8. 's' → logprob: -12.944279670715332
    9. ' +=' → logprob: -12.944279670715332
    10. 'if' → logprob: -13.444279670715332

Token 55: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7268972396850586
    2. ' math' → logprob: -0.8518972396850586
    3. 'math' → logprob: -3.1018972396850586
    4. 'max' → logprob: -3.3518972396850586
    5. '0' → logprob: -5.351897239685059
    6. ' ' → logprob: -5.351897239685059
    7. ' r' → logprob: -8.101897239685059
    8. 'r' → logprob: -9.101897239685059
    9. ' m' → logprob: -10.601897239685059
    10. '(math' → logprob: -10.726897239685059

Token 56: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038080278784036636
    2. '(r' → logprob: -3.2880802154541016
    3. '0' → logprob: -10.538080215454102
    4. 'r' → logprob: -12.163080215454102
    5. ' (' → logprob: -12.663080215454102
    6. '(math' → logprob: -12.663080215454102
    7. '```' → logprob: -16.0380802154541
    8. '(
' → logprob: -16.1630802154541
    9. '((' → logprob: -16.1630802154541
    10. '(s' → logprob: -16.5380802154541

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020606883335858583
    2. ' ,' → logprob: -6.502060890197754
    3. '0' → logprob: -7.502060890197754
    4. ',
' → logprob: -13.377060890197754
    5. '(' → logprob: -13.877060890197754
    6. ',r' → logprob: -14.002060890197754
    7. ')' → logprob: -14.502060890197754
    8. ' ' → logprob: -14.877060890197754
    9. '),' → logprob: -14.877060890197754
    10. ',

' → logprob: -15.127060890197754

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054892994463443756
    2. ' ' → logprob: -2.9298930168151855
    3. '   ' → logprob: -12.804892539978027
    4. ')' → logprob: -13.117392539978027
    5. '  ' → logprob: -13.304892539978027
    6. '<|end|>' → logprob: -13.492392539978027
    7. '    ' → logprob: -15.429892539978027
    8. 's' → logprob: -15.617392539978027
    9. '(' → logprob: -15.742392539978027
    10. '

' → logprob: -15.804892539978027

Token 59: ')
' (ID: 446)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.4311681389808655
    2. ')' → logprob: -1.0561680793762207
    3. '**' → logprob: -6.181168079376221
    4. ')
' → logprob: -8.556168556213379
    5. ')s' → logprob: -9.306168556213379
    6. ' )' → logprob: -10.431168556213379
    7. '   ' → logprob: -10.931168556213379
    8. '.' → logprob: -11.681168556213379
    9. '**)' → logprob: -11.681168556213379
    10. ' **' → logprob: -11.806168556213379

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043489061295986176
    2. ' **' → logprob: -4.4184889793396
    3. '<|end|>' → logprob: -4.9184889793396
    4. ')' → logprob: -5.0434889793396
    5. 'import' → logprob: -5.2934889793396
    6. ',' → logprob: -5.7934889793396
    7. '**' → logprob: -6.4184889793396
    8. ' r' → logprob: -6.9184889793396
    9. 'r' → logprob: -7.0434889793396
    10. ' import' → logprob: -7.1684889793396

Token 61: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5670228004455566
    2. 'import' → logprob: -1.8170228004455566
    3. ' import' → logprob: -2.0670228004455566
    4. ' r' → logprob: -2.3170228004455566
    5. ' points' → logprob: -2.3170228004455566
    6. 'r' → logprob: -2.9420228004455566
    7. ' y' → logprob: -3.0670228004455566
    8. ' s' → logprob: -3.1920228004455566
    9. ' sqrt' → logprob: -3.4420228004455566
    10. 's' → logprob: -4.192022800445557

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18000902235507965
    2. '=' → logprob: -1.8050090074539185
    3. ' math' → logprob: -8.555008888244629
    4. 'x' → logprob: -11.180008888244629
    5. 'ist' → logprob: -11.555008888244629
    6. ' ' → logprob: -11.680008888244629
    7. 'istance' → logprob: -11.805008888244629
    8. 'f' → logprob: -11.930008888244629
    9. 'math' → logprob: -12.305008888244629
    10. 'import' → logprob: -12.555008888244629

Token 63: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.282733291387558
    2. 'math' → logprob: -1.4077333211898804
    3. ' y' → logprob: -7.40773344039917
    4. 'y' → logprob: -7.90773344039917
    5. 'm' → logprob: -8.657732963562012
    6. '(math' → logprob: -9.032732963562012
    7. 'l' → logprob: -9.907732963562012
    8. 'r' → logprob: -9.907732963562012
    9. ' l' → logprob: -10.157732963562012
    10. ' ' → logprob: -10.282732963562012

Token 64: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.00011749001714633778
    2. '.' → logprob: -9.625117301940918
    3. 'sqrt' → logprob: -10.000117301940918
    4. '.Sqrt' → logprob: -12.625117301940918
    5. ' sqrt' → logprob: -13.875117301940918
    6. '.s' → logprob: -13.875117301940918
    7. ' .' → logprob: -15.125117301940918
    8. '```' → logprob: -15.500117301940918
    9. '.h' → logprob: -15.625117301940918
    10. 's' → logprob: -16.000118255615234

Token 65: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0021899950224906206
    2. '(' → logprob: -6.127190113067627
    3. '(d' → logprob: -13.127189636230469
    4. ' (' → logprob: -14.252189636230469
    5. 'r' → logprob: -14.252189636230469
    6. '<|end|>' → logprob: -15.252189636230469
    7. '(max' → logprob: -15.377189636230469
    8. '(
' → logprob: -15.502189636230469
    9. '(rhs' → logprob: -15.752189636230469
    10. '(s' → logprob: -15.877189636230469

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09198278933763504
    2. ')
' → logprob: -2.466982841491699
    3. ' )' → logprob: -6.591982841491699
    4. ')
' → logprob: -6.841982841491699
    5. ' )
' → logprob: -8.2169828414917
    6. '       ' → logprob: -8.9669828414917
    7. ')

' → logprob: -9.2169828414917
    8. '   ' → logprob: -10.8419828414917
    9. '),' → logprob: -11.7169828414917
    10. ')/' → logprob: -11.7169828414917

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011013990733772516
    2. '<|end|>' → logprob: -7.626101493835449
    3. ',' → logprob: -8.25110149383545
    4. ' points' → logprob: -8.87610149383545
    5. ')' → logprob: -9.37610149383545
    6. '        
' → logprob: -10.00110149383545
    7. ' ' → logprob: -11.00110149383545
    8. '   ' → logprob: -11.62610149383545
    9. '(points' → logprob: -11.62610149383545
    10. '```' → logprob: -12.12610149383545

Token 68: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6579763293266296
    2. ' points' → logprob: -0.7829763293266296
    3. 'points' (adapté à ' points') → logprob: -3.9079763889312744
    4. '	points' → logprob: -7.157976150512695
    5. '(points' → logprob: -7.157976150512695
    6. '   ' → logprob: -7.282976150512695
    7. '        
' → logprob: -7.657976150512695
    8. ',' → logprob: -8.282976150512695
    9. ' ' → logprob: -8.282976150512695
    10. '```' → logprob: -8.720476150512695

Token 69: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20174601674079895
    2. '.' → logprob: -1.7017459869384766
    3. '.extend' → logprob: -8.076745986938477
    4. ' .' → logprob: -11.201745986938477
    5. '.app' → logprob: -12.451745986938477
    6. '.ap' → logprob: -13.201745986938477
    7. '+=' → logprob: -14.201745986938477
    8. ' +=' → logprob: -14.326745986938477
    9. '.push' → logprob: -14.951745986938477
    10. '+' → logprob: -15.076745986938477

Token 70: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0029130501206964254
    2. '(' → logprob: -6.002912998199463
    3. '(((' → logprob: -8.002913475036621
    4. '(x' → logprob: -10.002913475036621
    5. '((-' → logprob: -10.502913475036621
    6. '([' → logprob: -10.877913475036621
    7. '(y' → logprob: -12.377913475036621
    8. '((((' → logprob: -13.002913475036621
    9. '(([' → logprob: -13.877913475036621
    10. '(('' → logprob: -13.877913475036621

Token 71: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015940988436341286
    2. ' x' → logprob: -4.765941143035889
    3. 'y' → logprob: -5.140941143035889
    4. '(x' → logprob: -7.140941143035889
    5. ' y' → logprob: -7.890941143035889
    6. ' ' → logprob: -9.01594066619873
    7. ' (' → logprob: -10.01594066619873
    8. '   ' → logprob: -10.64094066619873
    9. '-x' → logprob: -11.26594066619873
    10. 'max' → logprob: -11.51594066619873

Token 72: ',y' (ID: 16103)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8841187953948975
    2. '-d' → logprob: -1.1341187953948975
    3. ' -' → logprob: -1.3841187953948975
    4. '+d' → logprob: -4.884119033813477
    5. '+' → logprob: -5.884119033813477
    6. ' +' → logprob: -6.134119033813477
    7. ' ' → logprob: -6.509119033813477
    8. ',' → logprob: -7.884119033813477
    9. ',d' → logprob: -9.634119033813477
    10. '   ' → logprob: -9.884119033813477

Token 73: ',d' (ID: 26159)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.6351478099822998
    2. '+d' → logprob: -1.3851478099822998
    3. '-' → logprob: -2.0101478099823
    4. ' -' → logprob: -3.0101478099823
    5. '+' → logprob: -4.010148048400879
    6. ' +' → logprob: -4.135148048400879
    7. ',' → logprob: -6.635148048400879
    8. ' ' → logprob: -8.010148048400879
    9. ',d' → logprob: -8.885148048400879
    10. 'd' → logprob: -9.322648048400879

Token 74: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010136152617633343
    2. '))
' → logprob: -4.885136127471924
    3. ')' → logprob: -6.260136127471924
    4. ' ))' → logprob: -8.010136604309082
    5. '))

' → logprob: -8.635136604309082
    6. ')))' → logprob: -10.760136604309082
    7. '   ' → logprob: -10.885136604309082
    8. '))
' → logprob: -11.010136604309082
    9. ')
' → logprob: -11.510136604309082
    10. ' ))
' → logprob: -11.510136604309082

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08484341204166412
    2. '
' → logprob: -3.459843397140503
    3. '<|end|>' → logprob: -3.584843397140503
    4. ')' → logprob: -4.334843635559082
    5. '    
' → logprob: -5.334843635559082
    6. ' ' → logprob: -6.709843635559082
    7. '<|end|>' → logprob: -7.584843635559082
    8. '  
' → logprob: -7.709843635559082
    9. ',' → logprob: -7.834843635559082
    10. ' 
' → logprob: -8.084843635559082

Token 76: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1023887395858765
    2. '#' → logprob: -2.102388858795166
    3. ')' → logprob: -2.477388858795166
    4. 'for' → logprob: -2.477388858795166
    5. ' points' → logprob: -2.977388858795166
    6. ' if' → logprob: -2.977388858795166
    7. ' return' → logprob: -3.477388858795166
    8. 'points' → logprob: -3.727388858795166
    9. ' #' → logprob: -3.852388858795166
    10. ' )' → logprob: -3.977388858795166

Token 78: ' no' (ID: 860)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' ropes' (ID: 110596)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.7489172220230103
    2. ' two' → logprob: -1.6239172220230103
    3. 't' → logprob: -1.8739172220230103
    4. ' overlap' → logprob: -3.3739171028137207
    5. 'n' → logprob: -3.4989171028137207
    6. ' three' → logprob: -3.7489171028137207
    7. 'two' → logprob: -4.748917102813721
    8. ' ' → logprob: -4.998917102813721
    9. '<|end|>' → logprob: -4.998917102813721
    10. 'w' → logprob: -5.123917102813721

Token 80: ' cross' (ID: 8088)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4914555549621582
    2. '<|end|>' → logprob: -1.1164555549621582
    3. '\n' → logprob: -3.741455554962158
    4. ' 
' → logprob: -4.366455554962158
    5. '\' → logprob: -4.366455554962158
    6. ' \' → logprob: -5.366455554962158
    7. ' for' → logprob: -6.616455554962158
    8. '<|end|>' → logprob: -6.741455554962158
    9. '
' → logprob: -7.241455554962158
    10. 'n' → logprob: -7.491455554962158

Token 83: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08688842505216599
    2. 'for' → logprob: -3.461888313293457
    3. '<|end|>' → logprob: -3.586888313293457
    4. ' ' → logprob: -4.586888313293457
    5. ' n' → logprob: -4.961888313293457
    6. 'n' → logprob: -5.586888313293457
    7. ')' → logprob: -7.211888313293457
    8. '
' → logprob: -7.836888313293457
    9. '   ' → logprob: -7.961888313293457
    10. ' )' → logprob: -8.086888313293457

Token 84: ' R' (ID: 460)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42697393894195557
    2. ' ' → logprob: -1.5519739389419556
    3. '<|end|>' → logprob: -2.176973819732666
    4. 'for' → logprob: -4.176973819732666
    5. ')' → logprob: -6.801973819732666
    6. '    ' → logprob: -7.051973819732666
    7. ' ```' → logprob: -7.051973819732666
    8. '
' → logprob: -7.551973819732666
    9. '<|end|>' → logprob: -7.676973819732666
    10. '```' → logprob: -7.676973819732666

Token 85: 'opes' (ID: 25986)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -1.2133049964904785
    2. '=' → logprob: -2.3383049964904785
    3. ')' → logprob: -2.4633049964904785
    4. 'o' → logprob: -2.5883049964904785
    5. '<|end|>' → logprob: -3.0883049964904785
    6. 'for' → logprob: -3.0883049964904785
    7. ' =' → logprob: -3.2133049964904785
    8. 'e' → logprob: -3.2133049964904785
    9. 'oad' → logprob: -3.4633049964904785
    10. ' ' → logprob: -3.7133049964904785

Token 86: ' do' (ID: 621)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6203022003173828
    2. ' do' → logprob: -1.9953022003173828
    3. ' cross' → logprob: -2.620302200317383
    4. ' don't' → logprob: -2.620302200317383
    5. ' are' → logprob: -2.745302200317383
    6. ' =' → logprob: -2.745302200317383
    7. '=' → logprob: -3.370302200317383
    8. 'cross' → logprob: -3.370302200317383
    9. 'def' → logprob: -3.495302200317383
    10. '.' → logprob: -3.745302200317383

Token 87: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3531150817871094
    2. 'not' → logprob: -1.2281150817871094
    3. 'n't' → logprob: -5.478115081787109
    4. '<|end|>' → logprob: -8.22811508178711
    5. ' intersect' → logprob: -10.10311508178711
    6. 'nt' → logprob: -10.47811508178711
    7. ' cross' → logprob: -10.47811508178711
    8. 's' → logprob: -10.60311508178711
    9. ' ' → logprob: -11.10311508178711
    10. 'n' → logprob: -11.22811508178711

Token 88: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.13416199386119843
    2. 'cross' → logprob: -2.509161949157715
    3. ' intersect' → logprob: -3.259161949157715
    4. 'inter' → logprob: -6.509161949157715
    5. ' overlap' → logprob: -6.634161949157715
    6. ' have' → logprob: -7.384161949157715
    7. ' pass' → logprob: -7.446661949157715
    8. ' ' → logprob: -8.259161949157715
    9. '_cross' → logprob: -8.259161949157715
    10. ')' → logprob: -9.384161949157715

Token 89: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' for' (ID: 395)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2774774134159088
    2. ' for' → logprob: -2.152477502822876
    3. ' any' → logprob: -2.902477502822876
    4. ' the' → logprob: -3.277477502822876
    5. ' points' → logprob: -4.777477264404297
    6. 'for' → logprob: -5.027477264404297
    7. 'all' → logprob: -5.652477264404297
    8. ' len' → logprob: -6.402477264404297
    9. '(points' → logprob: -6.402477264404297
    10. 'points' → logprob: -6.527477264404297

Token 91: ' every' (ID: 1753)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.0210340023040771
    2. ' any' → logprob: -1.1460340023040771
    3. ' every' → logprob: -1.8960340023040771
    4. ' i' → logprob: -2.896034002304077
    5. ' each' → logprob: -3.021034002304077
    6. 'all' → logprob: -3.771034002304077
    7. 'i' → logprob: -3.896034002304077
    8. 'any' → logprob: -4.771034240722656
    9. 'every' → logprob: -5.146034240722656
    10. 'each' → logprob: -5.396034240722656

Token 92: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.644144594669342
    2. ' i' → logprob: -1.0191445350646973
    3. 'i' → logprob: -2.5191445350646973
    4. 'pair' → logprob: -4.144144535064697
    5. ' two' → logprob: -6.269144535064697
    6. '(i' → logprob: -6.269144535064697
    7. ' ' → logprob: -6.769144535064697
    8. ' (' → logprob: -6.769144535064697
    9. ' pairs' → logprob: -6.769144535064697
    10. ' triple' → logprob: -6.769144535064697

Token 93: ' (' (ID: 350)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.33761483430862427
    2. ' (' → logprob: -2.3376147747039795
    3. ',' → logprob: -2.5876147747039795
    4. '<|end|>' → logprob: -2.7126147747039795
    5. '(points' → logprob: -4.212615013122559
    6. ' ,' → logprob: -4.337615013122559
    7. 'of' → logprob: -5.712615013122559
    8. ' ' → logprob: -5.962615013122559
    9. '(' → logprob: -5.962615013122559
    10. '(s' → logprob: -6.462615013122559

Token 94: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8131365776062012
    2. 'i' → logprob: -1.8131365776062012
    3. ' (' → logprob: -1.9381365776062012
    4. ')' → logprob: -2.938136577606201
    5. ' )' → logprob: -3.688136577606201
    6. ' points' → logprob: -3.688136577606201
    7. '(i' → logprob: -3.938136577606201
    8. 'x' → logprob: -4.063136577606201
    9. '<|end|>' → logprob: -4.438136577606201
    10. ' ' → logprob: -4.563136577606201

Token 95: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.5676819086074829
    2. ',' → logprob: -0.9426819086074829
    3. ' ,' → logprob: -3.1926817893981934
    4. ')' → logprob: -6.817681789398193
    5. '),' → logprob: -8.067682266235352
    6. ' j' → logprob: -8.192682266235352
    7. ' ' → logprob: -8.817682266235352
    8. 'j' → logprob: -8.942682266235352
    9. ' ),' → logprob: -9.192682266235352
    10. '   ' → logprob: -9.567682266235352

Token 96: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17541968822479248
    2. '),' → logprob: -2.050419807434082
    3. ',' → logprob: -3.800419807434082
    4. ' )' → logprob: -5.800419807434082
    5. '):' → logprob: -6.175419807434082
    6. ' ),' → logprob: -6.175419807434082
    7. ' ,' → logprob: -7.550419807434082
    8. ':' → logprob: -7.800419807434082
    9. '<|end|>' → logprob: -7.800419807434082
    10. ',i' → logprob: -8.175419807434082

Token 97: ' distance' (ID: 9324)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2338529825210571
    2. ' the' → logprob: -2.1088528633117676
    3. ' not' → logprob: -2.2338528633117676
    4. ' for' → logprob: -2.4838528633117676
    5. ' either' → logprob: -2.6088528633117676
    6. ' (' → logprob: -2.8588528633117676
    7. ' abs' → logprob: -2.9838528633117676
    8. ' points' → logprob: -2.9838528633117676
    9. 'i' → logprob: -3.1088528633117676
    10. 'abs' → logprob: -3.8588528633117676

Token 98: '(anchor' (ID: 175863)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.011883269995450974
    2. 'between' → logprob: -5.26188325881958
    3. '<|end|>' → logprob: -5.76188325881958
    4. '(points' → logprob: -6.38688325881958
    5. '(i' → logprob: -7.13688325881958
    6. '_between' → logprob: -8.261883735656738
    7. ' (' → logprob: -8.386883735656738
    8. '[i' → logprob: -8.636883735656738
    9. '(' → logprob: -9.636883735656738
    10. ' ' → logprob: -10.011883735656738

Token 99: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3590613305568695
    2. ',i' → logprob: -2.3590612411499023
    3. 'i' → logprob: -2.4840612411499023
    4. '_i' → logprob: -3.1090612411499023
    5. 's' → logprob: -3.9840612411499023
    6. ' i' → logprob: -3.9840612411499023
    7. ',' → logprob: -3.9840612411499023
    8. ')' → logprob: -4.734061241149902
    9. ' ,' → logprob: -5.359061241149902
    10. '_points' → logprob: -6.609061241149902

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28746214509010315
    2. ' ,' → logprob: -2.1624622344970703
    3. ')' → logprob: -2.2874622344970703
    4. ',x' → logprob: -4.28746223449707
    5. '<|end|>' → logprob: -5.53746223449707
    6. '[' → logprob: -5.91246223449707
    7. '),' → logprob: -6.16246223449707
    8. ',i' → logprob: -6.16246223449707
    9. ' )' → logprob: -6.78746223449707
    10. 's' → logprob: -6.91246223449707

Token 101: 'anchor' (ID: 34039)
  Prédit: 'anchor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchor' → logprob: -0.06431284546852112
    2. ' anchor' → logprob: -3.1893129348754883
    3. '(anchor' → logprob: -4.189312934875488
    4. 'anchors' → logprob: -5.939312934875488
    5. 'points' → logprob: -7.564312934875488
    6. ')' → logprob: -7.689312934875488
    7. ' (' → logprob: -7.939312934875488
    8. '   ' → logprob: -8.126812934875488
    9. '(' → logprob: -8.189312934875488
    10. ' anchors' → logprob: -8.251812934875488

Token 102: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.06430502235889435
    2. '_i' → logprob: -3.189305067062378
    3. ')' → logprob: -4.189304828643799
    4. ')_' → logprob: -5.314304828643799
    5. '_)' → logprob: -7.564304828643799
    6. 'j' → logprob: -8.689305305480957
    7. '_' → logprob: -8.939305305480957
    8. '_x' → logprob: -10.189305305480957
    9. ' _' → logprob: -10.314305305480957
    10. 'i' → logprob: -10.939305305480957

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019379158038645983
    2. ')>' → logprob: -6.7519378662109375
    3. ' )' → logprob: -7.8769378662109375
    4. ')>=' → logprob: -8.376937866210938
    5. ')+' → logprob: -9.751937866210938
    6. ')**' → logprob: -10.626937866210938
    7. ')<=' → logprob: -10.626937866210938
    8. ')<' → logprob: -11.251937866210938
    9. '<|end|>' → logprob: -12.251937866210938
    10. '[' → logprob: -12.501937866210938

Token 104: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9105243682861328
    2. ')' → logprob: -1.1605243682861328
    3. ' >=' → logprob: -1.9105243682861328
    4. ' <=' → logprob: -3.285524368286133
    5. '<|end|>' → logprob: -3.285524368286133
    6. '>' → logprob: -4.410524368286133
    7. ' ' → logprob: -4.660524368286133
    8. ')>' → logprob: -4.660524368286133
    9. ')>=' → logprob: -5.035524368286133
    10. ' )' → logprob: -5.035524368286133

Token 105: ' d' (ID: 272)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.14178721606731415
    2. ' points' → logprob: -2.51678729057312
    3. 'abs' → logprob: -3.14178729057312
    4. ' abs' → logprob: -5.516787052154541
    5. '(points' → logprob: -6.641787052154541
    6. 'd' → logprob: -6.766787052154541
    7. 'anchors' → logprob: -7.016787052154541
    8. ' anchors' → logprob: -8.6417875289917
    9. '```' → logprob: -8.6417875289917
    10. ' d' → logprob: -9.3917875289917

Token 106: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06265876442193985
    2. 'i' → logprob: -2.9376587867736816
    3. ' i' → logprob: -5.687658786773682
    4. '_i' → logprob: -5.812658786773682
    5. 'points' → logprob: -7.562658786773682
    6. '_points' → logprob: -8.312658309936523
    7. 'oints' → logprob: -8.937658309936523
    8. ' points' → logprob: -8.937658309936523
    9. '[' → logprob: -9.562658309936523
    10. '(i' → logprob: -9.812658309936523

Token 107: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6381375193595886
    2. '+d' → logprob: -1.3881375789642334
    3. '+' → logprob: -1.5131375789642334
    4. 'd' → logprob: -6.763137340545654
    5. ' ' → logprob: -9.263137817382812
    6. '+j' → logprob: -9.638137817382812
    7. ')' → logprob: -9.638137817382812
    8. ')+' → logprob: -9.888137817382812
    9. '_i' → logprob: -9.888137817382812
    10. '   ' → logprob: -10.013137817382812

Token 108: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2525476813316345
    2. ' d' → logprob: -1.5025477409362793
    3. ' ' → logprob: -7.627547740936279
    4. '   ' → logprob: -9.877547264099121
    5. '  ' → logprob: -11.002547264099121
    6. ' points' → logprob: -11.252547264099121
    7. 'points' → logprob: -11.627547264099121
    8. ' ' → logprob: -12.377547264099121
    9. '_d' → logprob: -12.502547264099121
    10. '	d' → logprob: -12.565047264099121

Token 109: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.624070405960083
    2. '_' → logprob: -1.749070405960083
    3. 's' → logprob: -2.124070405960083
    4. ')' → logprob: -2.874070405960083
    5. '_i' → logprob: -2.874070405960083
    6. '_s' → logprob: -3.624070405960083
    7. '[j' → logprob: -4.874070167541504
    8. ',' → logprob: -5.374070167541504
    9. '[i' → logprob: -5.499070167541504
    10. '[' → logprob: -5.874070167541504

Token 110: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3792168200016022
    2. '   ' → logprob: -1.3792167901992798
    3. '<|end|>' → logprob: -3.0042169094085693
    4. '  
' → logprob: -5.75421667098999
    5. '\n' → logprob: -6.25421667098999
    6. ' for' → logprob: -6.37921667098999
    7. ' ' → logprob: -6.62921667098999
    8. '<|end|>' → logprob: -6.87921667098999
    9. ')' → logprob: -7.00421667098999
    10. '    
' → logprob: -7.00421667098999

Token 111: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8035376667976379
    2. ':' → logprob: -1.1785376071929932
    3. '<|end|>' → logprob: -1.8035376071929932
    4. ',' → logprob: -4.053537845611572
    5. ':
' → logprob: -4.303537845611572
    6. '   ' → logprob: -4.303537845611572
    7. ')' → logprob: -4.803537845611572
    8. '\n' → logprob: -5.178537845611572
    9. '  
' → logprob: -5.303537845611572
    10. ' ' → logprob: -5.553537845611572

Token 112: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7547354102134705
    2. ':' → logprob: -0.8797354102134705
    3. ' ' → logprob: -3.0047354698181152
    4. '<|end|>' → logprob: -4.254735469818115
    5. ':
' → logprob: -4.629735469818115
    6. '
' → logprob: -4.629735469818115
    7. ')' → logprob: -5.004735469818115
    8. ',' → logprob: -5.254735469818115
    9. ' for' → logprob: -5.254735469818115
    10. '  ' → logprob: -5.629735469818115

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00524454889819026
    2. '=' → logprob: -5.255244731903076
    3. ' ' → logprob: -12.505244255065918
    4. '=len' → logprob: -13.005244255065918
    5. ' =
' → logprob: -13.380244255065918
    6. ',' → logprob: -13.505244255065918
    7. '=int' → logprob: -14.005244255065918
    8. ')' → logprob: -14.380244255065918
    9. ' =)' → logprob: -15.630244255065918
    10. '<|end|>' → logprob: -16.005245208740234

Token 114: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002476604888215661
    2. ' len' → logprob: -6.002476692199707
    3. '(len' → logprob: -14.127476692199707
    4. '=len' → logprob: -16.25247573852539
    5. '[len' → logprob: -16.87747573852539
    6. '	len' → logprob: -17.87747573852539
    7. '   ' → logprob: -18.37747573852539
    8. ',len' → logprob: -19.00247573852539
    9. '<len' → logprob: -19.12747573852539
    10. ' ' → logprob: -21.62747573852539

Token 115: '(points' (ID: 72131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4742589294910431
    2. '(points' → logprob: -0.9742588996887207
    3. 'points' → logprob: -9.349259376525879
    4. ' (' → logprob: -10.224259376525879
    5. 'anchors' → logprob: -10.474259376525879
    6. '(anchor' → logprob: -10.599259376525879
    7. ' points' → logprob: -13.349259376525879
    8. '(
' → logprob: -14.474259376525879
    9. '```' → logprob: -14.474259376525879
    10. ' anchors' → logprob: -14.724259376525879

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013466615928336978
    2. ')
' → logprob: -6.626346588134766
    3. ' )' → logprob: -11.126346588134766
    4. '   ' → logprob: -12.501346588134766
    5. ')

' → logprob: -14.751346588134766
    6. ')n' → logprob: -14.876346588134766
    7. ')
' → logprob: -15.001346588134766
    8. '<|end|>' → logprob: -15.501346588134766
    9. ' ' → logprob: -16.001346588134766
    10. '))' → logprob: -16.126346588134766

Token 117: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5804288983345032
    2. 'for' (adapté à ' for') → logprob: -0.8304288983345032
    3. '   ' → logprob: -5.5804290771484375
    4. '
' → logprob: -7.8304290771484375
    5. ' ' → logprob: -9.205429077148438
    6. '	for' → logprob: -9.580429077148438
    7. ' 
' → logprob: -9.580429077148438
    8. '```' → logprob: -11.080429077148438
    9. '    
' → logprob: -11.205429077148438
    10. ' i' → logprob: -11.205429077148438

Token 119: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0011893989285454154
    2. 'i' → logprob: -6.751189231872559
    3. ' ' → logprob: -11.126189231872559
    4. '	i' → logprob: -12.751189231872559
    5. ' ' → logprob: -14.376189231872559
    6. '_i' → logprob: -15.626189231872559
    7. '   ' → logprob: -15.751189231872559
    8. '0' → logprob: -16.251190185546875
    9. ' j' → logprob: -16.563690185546875
    10. ' I' → logprob: -16.688690185546875

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10056744515895844
    2. 'in' → logprob: -2.35056734085083
    3. ' ' → logprob: -8.225567817687988
    4. '+' → logprob: -9.475567817687988
    5. '   ' → logprob: -12.725567817687988
    6. '	in' → logprob: -12.725567817687988
    7. '0' → logprob: -13.100567817687988
    8. '  ' → logprob: -13.100567817687988
    9. 'range' → logprob: -13.100567817687988
    10. '1' → logprob: -13.600567817687988

Token 121: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038044705986976624
    2. ' range' → logprob: -3.2880446910858154
    3. ' ' → logprob: -12.788044929504395
    4. '  ' → logprob: -15.788044929504395
    5. '   ' → logprob: -16.163043975830078
    6. '(range' → logprob: -16.663043975830078
    7. ' xrange' → logprob: -17.288043975830078
    8. '	range' → logprob: -17.413043975830078
    9. '0' → logprob: -17.913043975830078
    10. '```' → logprob: -18.788043975830078

Token 122: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0018053685780614614
    2. '(' → logprob: -6.376805305480957
    3. ' (' → logprob: -9.376805305480957
    4. ' n' → logprob: -11.251805305480957
    5. 'n' → logprob: -12.251805305480957
    6. ' ' → logprob: -14.501805305480957
    7. '(
' → logprob: -16.876806259155273
    8. '   ' → logprob: -16.876806259155273
    9. '(i' → logprob: -17.001806259155273
    10. '1' → logprob: -17.251806259155273

Token 123: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20640966296195984
    2. '):' → logprob: -1.8314096927642822
    3. '-' → logprob: -3.8314096927642822
    4. '   ' → logprob: -5.956409454345703
    5. ' -' → logprob: -6.831409454345703
    6. '+' → logprob: -7.206409454345703
    7. ' ' → logprob: -9.956409454345703
    8. ' ):
' → logprob: -10.081409454345703
    9. ' ):' → logprob: -10.456409454345703
    10. ')' → logprob: -10.581409454345703

Token 124: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28792768716812134
    2. '   ' → logprob: -1.4129276275634766
    3. '<|end|>' → logprob: -5.912927627563477
    4. '       ' → logprob: -6.037927627563477
    5. 'for' → logprob: -7.037927627563477
    6. ' ' → logprob: -8.037927627563477
    7. '	for' → logprob: -8.662927627563477
    8. ' range' → logprob: -9.162927627563477
    9. '```' → logprob: -10.037927627563477
    10. '<|end|>' → logprob: -10.537927627563477

Token 125: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03859264403581619
    2. 'for' → logprob: -3.288592576980591
    3. '   ' → logprob: -7.53859281539917
    4. '	for' → logprob: -11.538592338562012
    5. '```' → logprob: -12.913592338562012
    6. '
' → logprob: -13.288592338562012
    7. ' j' → logprob: -13.413592338562012
    8. ' ' → logprob: -14.163592338562012
    9. '       ' → logprob: -14.788592338562012
    10. ' range' → logprob: -14.913592338562012

Token 126: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3788532018661499
    2. ',' → logprob: -2.0038533210754395
    3. ',i' → logprob: -2.5038533210754395
    4. ' i' → logprob: -4.3788533210754395
    5. ' +' → logprob: -4.3788533210754395
    6. '<|end|>' → logprob: -4.5038533210754395
    7. ' ,' → logprob: -4.6288533210754395
    8. '=' → logprob: -4.8788533210754395
    9. '+i' → logprob: -5.0038533210754395
    10. ')' → logprob: -5.1288533210754395

Token 127: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6940532326698303
    2. ',y' → logprob: -0.6940532326698303
    3. ',x' → logprob: -8.194053649902344
    4. ' ,' → logprob: -8.319053649902344
    5. ',i' → logprob: -9.194053649902344
    6. ',j' → logprob: -9.694053649902344
    7. '   ' → logprob: -9.819053649902344
    8. '=' → logprob: -9.944053649902344
    9. ',n' → logprob: -10.194053649902344
    10. ')' → logprob: -10.694053649902344

Token 128: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6391867995262146
    2. ',i' → logprob: -1.6391868591308594
    3. ',' → logprob: -2.0141868591308594
    4. '1' → logprob: -2.3891868591308594
    5. '=' → logprob: -4.014186859130859
    6. '[i' → logprob: -4.389186859130859
    7. 'i' → logprob: -4.889186859130859
    8. ' i' → logprob: -5.764186859130859
    9. '   ' → logprob: -5.889186859130859
    10. ')' → logprob: -5.889186859130859

Token 129: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1407700777053833
    2. ',d' → logprob: -2.2657699584960938
    3. '=' → logprob: -4.640769958496094
    4. ',z' → logprob: -4.890769958496094
    5. ' =' → logprob: -5.765769958496094
    6. ' ,' → logprob: -6.140769958496094
    7. ',x' → logprob: -6.515769958496094
    8. ',p' → logprob: -6.765769958496094
    9. ',i' → logprob: -6.890769958496094
    10. ',n' → logprob: -8.265769958496094

Token 130: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5379243493080139
    2. ' =' → logprob: -0.9129243493080139
    3. ')' → logprob: -4.287924289703369
    4. ')=' → logprob: -7.912924289703369
    5. '=i' → logprob: -8.912924766540527
    6. 'i' → logprob: -9.162924766540527
    7. '   ' → logprob: -9.412924766540527
    8. ']' → logprob: -9.662924766540527
    9. ',' → logprob: -9.912924766540527
    10. ',i' → logprob: -10.287924766540527

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22824221849441528
    2. '=' → logprob: -1.6032421588897705
    3. ')' → logprob: -6.10324239730835
    4. '   ' → logprob: -7.72824239730835
    5. ',' → logprob: -9.603241920471191
    6. ')=' → logprob: -9.978241920471191
    7. ' ' → logprob: -10.978241920471191
    8. ' =
' → logprob: -12.728241920471191
    9. '    ' → logprob: -12.978241920471191
    10. ' in' → logprob: -13.103241920471191

Token 132: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.3868717551231384
    2. 'points' → logprob: -1.1368718147277832
    3. '(points' → logprob: -15.011871337890625
    4. '	points' → logprob: -15.136871337890625
    5. '   ' → logprob: -16.511871337890625
    6. 'oints' → logprob: -16.511871337890625
    7. '.points' → logprob: -17.511871337890625
    8. '_points' → logprob: -18.636871337890625
    9. ' pontos' → logprob: -19.011871337890625
    10. ' ' → logprob: -19.636871337890625

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.061054359131958e-06
    2. '[j' → logprob: -12.750007629394531
    3. ' [' → logprob: -13.500007629394531
    4. '   ' → logprob: -13.750007629394531
    5. '[' → logprob: -13.875007629394531
    6. 'i' → logprob: -14.500007629394531
    7. ',i' → logprob: -15.250007629394531
    8. '
' → logprob: -15.875007629394531
    9. '[n' → logprob: -16.12500762939453
    10. ' i' → logprob: -16.12500762939453

Token 134: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5169404149055481
    2. ']' → logprob: -1.2669403553009033
    3. ')
' → logprob: -2.6419403553009033
    4. ')' → logprob: -3.0169403553009033
    5. '   ' → logprob: -6.766940593719482
    6. '       ' → logprob: -8.766940116882324
    7. ']
' → logprob: -8.891940116882324
    8. '])
' → logprob: -9.391940116882324
    9. ']

' → logprob: -9.516940116882324
    10. '])' → logprob: -9.891940116882324

Token 135: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8311562538146973
    2. ' for' → logprob: -1.3311562538146973
    3. '<|end|>' → logprob: -1.8311562538146973
    4. ' 
' → logprob: -2.8311562538146973
    5. '       ' → logprob: -3.4561562538146973
    6. ' ' → logprob: -4.206156253814697
    7. '  
' → logprob: -4.456156253814697
    8. '
' → logprob: -4.581156253814697
    9. 'for' → logprob: -5.331156253814697
    10. '    
' → logprob: -5.706156253814697

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07900489866733551
    2. ' for' → logprob: -2.579005002975464
    3. '   ' → logprob: -9.079005241394043
    4. '       ' → logprob: -14.579005241394043
    5. '	for' → logprob: -14.579005241394043
    6. 'import' → logprob: -15.954005241394043
    7. ' ' → logprob: -17.204004287719727
    8. '
' → logprob: -17.829004287719727
    9. '_for' → logprob: -18.579004287719727
    10. '```' → logprob: -18.579004287719727

Token 137: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.288013219833374
    2. 'i' → logprob: -2.163013219833374
    3. ' range' → logprob: -2.163013219833374
    4. 'range' → logprob: -3.913013219833374
    5. ' j' → logprob: -8.913013458251953
    6. 'j' → logprob: -9.663013458251953
    7. ' in' → logprob: -10.038013458251953
    8. ' ' → logprob: -10.788013458251953
    9. '   ' → logprob: -11.163013458251953
    10. '    ' → logprob: -12.288013458251953

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013441620394587517
    2. 'in' → logprob: -6.626344203948975
    3. ' ' → logprob: -11.251343727111816
    4. ' i' → logprob: -12.501343727111816
    5. ' =' → logprob: -14.876343727111816
    6. 'i' → logprob: -15.251343727111816
    7. '=' → logprob: -15.751343727111816
    8. ' range' → logprob: -15.876343727111816
    9. '	in' → logprob: -15.876343727111816
    10. 'range' → logprob: -16.001344680786133

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.400815486907959
    2. ' range' → logprob: -1.150815486907959
    3. 'i' → logprob: -4.400815486907959
    4. ' i' → logprob: -6.525815486907959
    5. '(i' → logprob: -9.525815963745117
    6. '(range' → logprob: -10.525815963745117
    7. ' ' → logprob: -12.275815963745117
    8. '   ' → logprob: -13.025815963745117
    9. 'x' → logprob: -13.275815963745117
    10. '  ' → logprob: -13.650815963745117

Token 140: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0014292863197624683
    2. 'i' → logprob: -7.126429080963135
    3. ' i' → logprob: -8.501429557800293
    4. '(n' → logprob: -8.751429557800293
    5. ' range' → logprob: -9.001429557800293
    6. ' (' → logprob: -9.501429557800293
    7. 'range' → logprob: -9.751429557800293
    8. '(range' → logprob: -12.501429557800293
    9. 'n' → logprob: -13.376429557800293
    10. '(' → logprob: -13.751429557800293

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006663504522293806
    2. ' +' → logprob: -5.1316633224487305
    3. '1' → logprob: -7.2566633224487305
    4. ' ' → logprob: -11.63166332244873
    5. '+j' → logprob: -11.75666332244873
    6. '+
' → logprob: -12.25666332244873
    7. '+i' → logprob: -12.38166332244873
    8. ')+' → logprob: -14.13166332244873
    9. '   ' → logprob: -14.63166332244873
    10. '```' → logprob: -15.00666332244873

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011081460979767144
    2. ' ' → logprob: -9.125110626220703
    3. 'n' → logprob: -14.875110626220703
    4. '
' → logprob: -15.000110626220703
    5. '   ' → logprob: -15.000110626220703
    6. '

' → logprob: -15.500110626220703
    7. '2' → logprob: -16.062610626220703
    8. '```' → logprob: -16.250110626220703
    9. 'i' → logprob: -16.437610626220703
    10. ',' → logprob: -17.000110626220703

Token 143: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.3135838210582733
    2. ',' → logprob: -1.3135838508605957
    3. ' ,' → logprob: -8.563583374023438
    4. ',j' → logprob: -9.313583374023438
    5. 'n' → logprob: -10.188583374023438
    6. '1' → logprob: -14.188583374023438
    7. ',len' → logprob: -14.438583374023438
    8. ',
' → logprob: -14.938583374023438
    9. ' n' → logprob: -14.938583374023438
    10. '(n' → logprob: -15.188583374023438

Token 144: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048654817044734955
    2. '):' → logprob: -3.048654794692993
    3. '):
' → logprob: -10.048654556274414
    4. '   ' → logprob: -11.798654556274414
    5. ':' → logprob: -12.048654556274414
    6. ' ):
' → logprob: -12.048654556274414
    7. '):

' → logprob: -13.048654556274414
    8. ')' → logprob: -13.673654556274414
    9. ' ):' → logprob: -14.673654556274414
    10. ' ' → logprob: -15.173654556274414

Token 145: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14531001448631287
    2. ' ' → logprob: -2.2703099250793457
    3. '       ' → logprob: -4.520309925079346
    4. '        ' → logprob: -4.770309925079346
    5. '           ' → logprob: -5.145309925079346
    6. 'x' → logprob: -6.145309925079346
    7. ' ' → logprob: -6.520309925079346
    8. ' 
' → logprob: -6.770309925079346
    9. '<|end|>' → logprob: -7.270309925079346
    10. ',' → logprob: -7.520309925079346

Token 146: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06394702941179276
    2. 'x' (adapté à ' x') → logprob: -3.0639469623565674
    3. ' ' → logprob: -4.1889472007751465
    4. ' 
' → logprob: -10.063946723937988
    5. ' ' → logprob: -11.563946723937988
    6. '(x' → logprob: -12.188946723937988
    7. ',x' → logprob: -12.563946723937988
    8. '<|end|>' → logprob: -12.563946723937988
    9. ' ,' → logprob: -12.938946723937988
    10. ' (' → logprob: -13.063946723937988

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01238767895847559
    2. ',' → logprob: -5.262387752532959
    3. ',j' → logprob: -5.762387752532959
    4. '1' → logprob: -6.387387752532959
    5. ',y' → logprob: -6.762387752532959
    6. '_,' → logprob: -8.0123872756958
    7. ' ' → logprob: -8.2623872756958
    8. ' ,' → logprob: -8.5123872756958
    9. 'j' → logprob: -8.8873872756958
    10. '```' → logprob: -9.5123872756958

Token 148: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0038031688891351223
    2. ',' → logprob: -5.628803253173828
    3. ' ,' → logprob: -8.503803253173828
    4. ',
' → logprob: -16.003803253173828
    5. ',x' → logprob: -16.753803253173828
    6. '<|end|>' → logprob: -17.753803253173828
    7. ',j' → logprob: -18.003803253173828
    8. ' y' → logprob: -18.253803253173828
    9. '_,' → logprob: -18.253803253173828
    10. '   ' → logprob: -18.253803253173828

Token 149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017365860985592008
    2. ',y' → logprob: -6.626736640930176
    3. ',' → logprob: -8.751736640930176
    4. ',x' → logprob: -9.126736640930176
    5. '1' → logprob: -9.501736640930176
    6. ',j' → logprob: -10.126736640930176
    7. '[' → logprob: -11.251736640930176
    8. ' ' → logprob: -11.876736640930176
    9. ' ,' → logprob: -12.876736640930176
    10. '```' → logprob: -13.126736640930176

Token 150: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.003912764601409435
    2. ',' → logprob: -5.628912925720215
    3. ',y' → logprob: -8.253912925720215
    4. ' ,' → logprob: -10.003912925720215
    5. ',x' → logprob: -13.503912925720215
    6. 'd' → logprob: -13.503912925720215
    7. '       ' → logprob: -13.878912925720215
    8. '           ' → logprob: -14.003912925720215
    9. ',j' → logprob: -15.003912925720215
    10. '   ' → logprob: -15.128912925720215

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021831797494087368
    2. ',' → logprob: -9.125218391418457
    3. ' ' → logprob: -9.375218391418457
    4. ',j' → logprob: -12.125218391418457
    5. '   ' → logprob: -12.250218391418457
    6. '1' → logprob: -12.625218391418457
    7. '[j' → logprob: -13.125218391418457
    8. ' ,' → logprob: -13.250218391418457
    9. '_,' → logprob: -13.875218391418457
    10. '[' → logprob: -13.875218391418457

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20175498723983765
    2. '=' → logprob: -1.7017550468444824
    3. 'import' → logprob: -8.701754570007324
    4. '   ' → logprob: -10.076754570007324
    5. ',' → logprob: -10.576754570007324
    6. ')' → logprob: -10.576754570007324
    7. ' ' → logprob: -10.701754570007324
    8. '           ' → logprob: -10.951754570007324
    9. '       ' → logprob: -11.076754570007324
    10. '        ' → logprob: -11.951754570007324

Token 153: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5759450793266296
    2. ' points' → logprob: -0.8259450793266296
    3. '(points' → logprob: -12.700944900512695
    4. '	points' → logprob: -13.325944900512695
    5. '   ' → logprob: -14.950944900512695
    6. '.points' → logprob: -15.950944900512695
    7. 'oints' → logprob: -16.200944900512695
    8. '       ' → logprob: -16.200944900512695
    9. ' ' → logprob: -16.575944900512695
    10. '    ' → logprob: -17.075944900512695

Token 154: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -12.750011444091797
    3. '[i' → logprob: -13.000011444091797
    4. 'j' → logprob: -13.125011444091797
    5. ' [' → logprob: -13.750011444091797
    6. '```' → logprob: -13.750011444091797
    7. '[
' → logprob: -14.125011444091797
    8. '   ' → logprob: -14.625011444091797
    9. '
' → logprob: -15.625011444091797
    10. ' ' → logprob: -16.250011444091797

Token 155: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06940707564353943
    2. ')' → logprob: -2.8194069862365723
    3. '           ' → logprob: -5.444406986236572
    4. '):
' → logprob: -6.569406986236572
    5. '       ' → logprob: -6.944406986236572
    6. ')
' → logprob: -8.31940746307373
    7. ']
' → logprob: -8.81940746307373
    8. ' )
' → logprob: -9.31940746307373
    9. '   ' → logprob: -10.56940746307373
    10. '
' → logprob: -10.56940746307373

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005712389014661312
    2. '       ' → logprob: -6.505712509155273
    3. ' 
' → logprob: -6.630712509155273
    4. '            
' → logprob: -7.630712509155273
    5. '
' → logprob: -7.755712509155273
    6. '  
' → logprob: -8.005712509155273
    7. ' if' → logprob: -8.380712509155273
    8. ' distance' → logprob: -8.505712509155273
    9. '   ' → logprob: -8.630712509155273
    10. ',' → logprob: -8.755712509155273

Token 157: ' dist' (ID: 3601)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.5319915413856506
    2. 'dx' → logprob: -1.4069914817810059
    3. 'dist' (adapté à ' dist') → logprob: -2.656991481781006
    4. ' dist' → logprob: -3.031991481781006
    5. '           ' → logprob: -3.531991481781006
    6. 'd' → logprob: -4.656991481781006
    7. ' d' → logprob: -5.406991481781006
    8. '
' → logprob: -6.031991481781006
    9. 'distance' → logprob: -7.156991481781006
    10. ' if' → logprob: -7.406991481781006

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023554319515824318
    2. '=' → logprob: -3.7735543251037598
    3. '_squared' → logprob: -8.773553848266602
    4. '_sq' → logprob: -9.273553848266602
    5. '   ' → logprob: -11.023553848266602
    6. ' ' → logprob: -11.023553848266602
    7. ' squared' → logprob: -11.773553848266602
    8. '2' → logprob: -12.148553848266602
    9. '=s' → logprob: -13.023553848266602
    10. '           ' → logprob: -13.273553848266602

Token 159: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.387969434261322
    2. 'math' → logprob: -1.1379694938659668
    3. '(math' → logprob: -7.012969493865967
    4. '((' → logprob: -9.012969017028809
    5. ' ((' → logprob: -10.137969017028809
    6. ' (' → logprob: -10.262969017028809
    7. '(x' → logprob: -14.012969017028809
    8. '   ' → logprob: -15.012969017028809
    9. ' ' → logprob: -16.012969970703125
    10. '(' → logprob: -16.262969970703125

Token 160: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.006547336000949144
    2. '.h' → logprob: -5.506547451019287
    3. '.dist' → logprob: -6.006547451019287
    4. 'dist' → logprob: -13.881546974182129
    5. 'sqrt' → logprob: -14.006546974182129
    6. '.' → logprob: -14.756546974182129
    7. '.Sqrt' → logprob: -15.131546974182129
    8. '.atan' → logprob: -15.256546974182129
    9. '```' → logprob: -15.381546974182129
    10. '.pow' → logprob: -15.506546974182129

Token 161: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.012373795732855797
    2. 'sqrt' → logprob: -5.262373924255371
    3. 'dist' → logprob: -5.512373924255371
    4. 'at' → logprob: -6.262373924255371
    5. '.sqrt' → logprob: -7.387373924255371
    6. 'ath' → logprob: -8.137373924255371
    7. 'distance' → logprob: -9.887373924255371
    8. 'eu' → logprob: -10.387373924255371
    9. 's' → logprob: -10.762373924255371
    10. 'ot' → logprob: -10.887373924255371

Token 162: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0630156546831131
    2. 'at' → logprob: -2.8130156993865967
    3. 'sqrt' → logprob: -7.563015460968018
    4. '       ' → logprob: -8.188015937805176
    5. '   ' → logprob: -9.438015937805176
    6. 's' → logprob: -10.313015937805176
    7. '     ' → logprob: -11.188015937805176
    8. '.sqrt' → logprob: -11.188015937805176
    9. '           ' → logprob: -11.313015937805176
    10. 't' → logprob: -11.563015937805176

Token 163: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -11.000032424926758
    3. '((' → logprob: -11.500032424926758
    4. 'x' → logprob: -12.250032424926758
    5. ' (' → logprob: -16.000032424926758
    6. '(y' → logprob: -16.625032424926758
    7. '(
' → logprob: -17.125032424926758
    8. '<|end|>' → logprob: -18.750032424926758
    9. ',x' → logprob: -19.250032424926758
    10. '(abs' → logprob: -19.375032424926758

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6327869892120361
    2. '1' → logprob: -0.7577869892120361
    3. '(x' → logprob: -8.757786750793457
    4. 'x' → logprob: -11.132786750793457
    5. '[x' → logprob: -12.632786750793457
    6. ' x' → logprob: -13.257786750793457
    7. ',x' → logprob: -13.382786750793457
    8. ' -' → logprob: -13.632786750793457
    9. '-x' → logprob: -13.882786750793457
    10. ' y' → logprob: -14.007786750793457

Token 165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21164943277835846
    2. '-x' → logprob: -1.8366494178771973
    3. '-' → logprob: -3.4616494178771973
    4. 'x' → logprob: -10.961649894714355
    5. ' ' → logprob: -12.961649894714355
    6. '```' → logprob: -14.586649894714355
    7. '   ' → logprob: -14.711649894714355
    8. '(x' → logprob: -15.211649894714355
    9. '-y' → logprob: -15.336649894714355
    10. ' x' → logprob: -15.586649894714355

Token 166: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004882152716163546
    2. ' x' → logprob: -7.62548828125
    3. '<|end|>' → logprob: -16.87548828125
    4. ')x' → logprob: -17.25048828125
    5. '(x' → logprob: -17.37548828125
    6. '	x' → logprob: -17.75048828125
    7. ',x' → logprob: -18.37548828125
    8. ' ' → logprob: -19.00048828125
    9. ',' → logprob: -19.00048828125
    10. '
' → logprob: -19.37548828125

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '```' → logprob: -16.25
    4. ',' → logprob: -16.5
    5. ' -' → logprob: -17.25
    6. '2' → logprob: -18.25
    7. '   ' → logprob: -18.375
    8. ')' → logprob: -18.5
    9. '...' → logprob: -19.25
    10. '_' → logprob: -19.25

Token 168: ',' (ID: 11)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5863502025604248
    2. ',' → logprob: -0.8363502025604248
    3. ' ,' → logprob: -4.586350440979004
    4. ',x' → logprob: -9.086350440979004
    5. ',
' → logprob: -10.211350440979004
    6. 'y' → logprob: -12.461350440979004
    7. '   ' → logprob: -12.836350440979004
    8. ' -' → logprob: -12.961350440979004
    9. ' y' → logprob: -13.586350440979004
    10. ' ' → logprob: -13.711350440979004

Token 169: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.038042064756155014
    2. ' y' → logprob: -3.2880420684814453
    3. '	y' → logprob: -15.038042068481445
    4. '
' → logprob: -16.163042068481445
    5. '<|end|>' → logprob: -16.538042068481445
    6. '(y' → logprob: -16.913042068481445
    7. ' ' → logprob: -17.163042068481445
    8. '   ' → logprob: -17.163042068481445
    9. ')y' → logprob: -17.288042068481445
    10. ')' → logprob: -18.038042068481445

Token 170: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0485999770462513
    2. '1' → logprob: -3.0485999584198
    3. '<|end|>' → logprob: -12.048600196838379
    4. ' ' → logprob: -12.173600196838379
    5. ' -' → logprob: -14.298600196838379
    6. '```' → logprob: -15.048600196838379
    7. ')' → logprob: -15.798600196838379
    8. '   ' → logprob: -16.298599243164062
    9. ',' → logprob: -16.361099243164062
    10. '[' → logprob: -16.736099243164062

Token 171: ' -' (ID: 533)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.777921736240387
    2. '1' → logprob: -1.2779216766357422
    3. ' -' → logprob: -1.4029216766357422
    4. ' ' → logprob: -4.652921676635742
    5. '-' → logprob: -5.152921676635742
    6. ' y' → logprob: -8.277921676635742
    7. ',' → logprob: -8.277921676635742
    8. 'x' → logprob: -9.527921676635742
    9. '   ' → logprob: -9.652921676635742
    10. ')' → logprob: -10.152921676635742

Token 172: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023246292024850845
    2. ' y' → logprob: -3.7732462882995605
    3. ')y' → logprob: -15.273246765136719
    4. 'x' → logprob: -15.398246765136719
    5. '	y' → logprob: -16.02324676513672
    6. ')' → logprob: -16.39824676513672
    7. '(y' → logprob: -16.39824676513672
    8. '<|end|>' → logprob: -17.02324676513672
    9. ' ' → logprob: -17.89824676513672
    10. ''y' → logprob: -18.89824676513672

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '2' → logprob: -12.375004768371582
    3. ')' → logprob: -15.375004768371582
    4. ' ' → logprob: -16.125003814697266
    5. '```' → logprob: -16.625003814697266
    6. 'y' → logprob: -17.750003814697266
    7. '<|end|>' → logprob: -19.000003814697266
    8. ' -' → logprob: -19.250003814697266
    9. '   ' → logprob: -19.375003814697266
    10. 's' → logprob: -19.500003814697266

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08054918050765991
    2. ')
' → logprob: -2.5805492401123047
    3. ' )' → logprob: -6.705549240112305
    4. ' )
' → logprob: -7.830549240112305
    5. ')
' → logprob: -11.455549240112305
    6. '       ' → logprob: -12.080549240112305
    7. ')

' → logprob: -12.205549240112305
    8. '   ' → logprob: -12.705549240112305
    9. '           ' → logprob: -13.330549240112305
    10. ')return' → logprob: -13.455549240112305

Token 175: '           ' (ID: 352)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5381119847297668
    2. '           ' → logprob: -1.038111925125122
    3. '       ' → logprob: -3.913111925125122
    4. '<' → logprob: -3.913111925125122
    5. '<|end|>' → logprob: -4.913112163543701
    6. '               ' → logprob: -5.538112163543701
    7. ' >=' → logprob: -5.663112163543701
    8. '
' → logprob: -6.663112163543701
    9. '          ' → logprob: -7.038112163543701
    10. '>=' → logprob: -7.163112163543701

Token 176: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19924303889274597
    2. 'if' (adapté à ' if') → logprob: -1.8242430686950684
    3. '           ' → logprob: -3.9492430686950684
    4. ' ' → logprob: -11.32424259185791
    5. 'If' → logprob: -12.19924259185791
    6. '```' → logprob: -12.57424259185791
    7. '
' → logprob: -12.69924259185791
    8. '               ' → logprob: -12.82424259185791
    9. '       ' → logprob: -13.07424259185791
    10. ' If' → logprob: -13.19924259185791

Token 177: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.2519666254520416
    2. 'dist' → logprob: -1.5019665956497192
    3. '(dist' → logprob: -10.37696647644043
    4. '	dist' → logprob: -12.75196647644043
    5. 'd' → logprob: -13.25196647644043
    6. ' ' → logprob: -14.12696647644043
    7. '   ' → logprob: -14.62696647644043
    8. ' ' → logprob: -15.50196647644043
    9. '_dist' → logprob: -16.50196647644043
    10. ' d' → logprob: -16.87696647644043

Token 178: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25258490443229675
    2. '<' → logprob: -1.5025849342346191
    3. ' ' → logprob: -7.377584934234619
    4. ' ' → logprob: -11.627584457397461
    5. '[' → logprob: -13.502584457397461
    6. ' <
' → logprob: -13.565084457397461
    7. '<len' → logprob: -13.627584457397461
    8. ')' → logprob: -13.815084457397461
    9. '<|end|>' → logprob: -13.815084457397461
    10. ',' → logprob: -13.940084457397461

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20166894793510437
    2. ' ' → logprob: -1.7016689777374268
    3. '-' → logprob: -8.826668739318848
    4. ' -' → logprob: -9.451668739318848
    5. 'd' → logprob: -12.076668739318848
    6. '>' → logprob: -12.326668739318848
    7. ' d' → logprob: -12.826668739318848
    8. '<' → logprob: -12.951668739318848
    9. '0' → logprob: -13.076668739318848
    10. ' h' → logprob: -13.201668739318848

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00196110550314188
    2. ' ' → logprob: -6.5019612312316895
    3. '-' → logprob: -7.7519612312316895
    4. ' -' → logprob: -10.626960754394531
    5. 'd' → logprob: -13.751960754394531
    6. '>' → logprob: -13.751960754394531
    7. 'h' → logprob: -14.626960754394531
    8. '2' → logprob: -15.376960754394531
    9. '(' → logprob: -15.376960754394531
    10. '0' → logprob: -15.501960754394531

Token 181: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.339278580620885e-06
    2. '<' → logprob: -13.250001907348633
    3. ' <' → logprob: -14.625001907348633
    4. '```' → logprob: -17.625001907348633
    5. '
' → logprob: -18.375001907348633
    6. 'E' → logprob: -18.500001907348633
    7. ' e' → logprob: -19.500001907348633
    8. '*' → logprob: -19.625001907348633
    9. '.e' → logprob: -19.750001907348633
    10. '-' → logprob: -19.875001907348633

Token 182: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -17.25
    3. '14' → logprob: -17.625
    4. '```' → logprob: -18.0
    5. '--' → logprob: -19.625
    6. '-
' → logprob: -20.125
    7. ' ' → logprob: -20.375
    8. '   ' → logprob: -20.5
    9. '12' → logprob: -20.875
    10. '−' → logprob: -21.25

Token 183: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.013131874613463879
    2. '15' → logprob: -4.763132095336914
    3. '12' → logprob: -5.638132095336914
    4. '13' → logprob: -8.013132095336914
    5. '10' → logprob: -8.138132095336914
    6. '-' → logprob: -8.763132095336914
    7. '9' → logprob: -8.888132095336914
    8. '8' → logprob: -11.388132095336914
    9. '11' → logprob: -11.638132095336914
    10. '16' → logprob: -12.013132095336914

Token 184: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.018171953037381172
    2. ' <' → logprob: -4.018171787261963
    3. ' ' → logprob: -11.268172264099121
    4. '<
' → logprob: -13.768172264099121
    5. '```' → logprob: -13.768172264099121
    6. '<=' → logprob: -14.018172264099121
    7. ')<' → logprob: -14.393172264099121
    8. ')' → logprob: -14.518172264099121
    9. '<|end|>' → logprob: -14.643172264099121
    10. '<len' → logprob: -14.768172264099121

Token 185: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00600629486143589
    2. ' d' → logprob: -5.131006240844727
    3. '(d' → logprob: -9.506006240844727
    4. ' (' → logprob: -13.006006240844727
    5. '(' → logprob: -14.381006240844727
    6. '	d' → logprob: -15.881006240844727
    7. ' ' → logprob: -16.131006240844727
    8. '   ' → logprob: -16.881006240844727
    9. '
' → logprob: -16.881006240844727
    10. '```' → logprob: -17.381006240844727

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -12.37501049041748
    3. ' ' → logprob: -12.50001049041748
    4. '```' → logprob: -13.87501049041748
    5. '[i' → logprob: -15.81251049041748
    6. '[' → logprob: -15.87501049041748
    7. '_i' → logprob: -16.187509536743164
    8. 'd' → logprob: -16.250009536743164
    9. 'i' → logprob: -16.250009536743164
    10. '   ' → logprob: -16.625009536743164

Token 187: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3870152235031128
    2. '+' → logprob: -1.1370152235031128
    3. '+d' → logprob: -8.887015342712402
    4. ' ' → logprob: -13.137015342712402
    5. ' ' → logprob: -13.387015342712402
    6. ' plus' → logprob: -14.387015342712402
    7. '   ' → logprob: -15.137015342712402
    8. '2' → logprob: -15.512015342712402
    9. '>' → logprob: -15.512015342712402
    10. '+
' → logprob: -15.637015342712402

Token 188: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12693166732788086
    2. ' d' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.126932144165039
    4. ' ' → logprob: -15.001932144165039
    5. '
' → logprob: -15.376932144165039
    6. '	d' → logprob: -15.376932144165039
    7. '_d' → logprob: -16.00193214416504
    8. ' 
' → logprob: -16.18943214416504
    9. '2' → logprob: -16.25193214416504
    10. '```' → logprob: -16.43943214416504

Token 189: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.500007629394531
    3. '_' → logprob: -13.375007629394531
    4. '₂' → logprob: -14.750007629394531
    5. '```' → logprob: -15.125007629394531
    6. 'j' → logprob: -15.250007629394531
    7. '   ' → logprob: -15.625007629394531
    8. '
' → logprob: -15.687507629394531
    9. '_j' → logprob: -15.750007629394531
    10. '<|end|>' → logprob: -16.37500762939453

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4666050374507904
    2. ':
' → logprob: -1.0916050672531128
    3. '           ' → logprob: -3.9666049480438232
    4. ':return' → logprob: -4.216605186462402
    5. '               ' → logprob: -6.341605186462402
    6. '       ' → logprob: -6.466605186462402
    7. 'return' → logprob: -9.716605186462402
    8. ' return' → logprob: -10.216605186462402
    9. ':
' → logprob: -10.591605186462402
    10. '():
' → logprob: -11.216605186462402

Token 191: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02377132698893547
    2. '           ' → logprob: -4.023771286010742
    3. ' return' → logprob: -5.273771286010742
    4. 'return' → logprob: -7.898771286010742
    5. '
' → logprob: -9.898771286010742
    6. '```' → logprob: -10.773771286010742
    7. '       ' → logprob: -12.023771286010742
    8. '                
' → logprob: -12.148771286010742
    9. '            
' → logprob: -12.398771286010742
    10. '   ' → logprob: -12.398771286010742

Token 192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3876480460166931
    2. ' return' → logprob: -1.137648105621338
    3. '               ' → logprob: -7.387648105621338
    4. '           ' → logprob: -9.63764762878418
    5. '                   ' → logprob: -9.76264762878418
    6. '
' → logprob: -10.51264762878418
    7. '   ' → logprob: -12.38764762878418
    8. '```' → logprob: -13.38764762878418
    9. '	return' → logprob: -13.88764762878418
    10. ' ' → logprob: -14.63764762878418

Token 193: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031777136027812958
    2. ' False' → logprob: -5.753177642822266
    3. 'True' → logprob: -16.878177642822266
    4. '(False' → logprob: -19.753177642822266
    5. 'None' → logprob: -20.628177642822266
    6. 'false' → logprob: -21.878177642822266
    7. ' True' → logprob: -22.253177642822266
    8. 'F' → logprob: -22.628177642822266
    9. '=False' → logprob: -22.628177642822266
    10. '_false' → logprob: -23.503177642822266

Token 194: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6254064440727234
    2. '   ' → logprob: -1.0004065036773682
    3. ' return' → logprob: -3.750406503677368
    4. '    
' → logprob: -3.875406503677368
    5. '<|end|>' → logprob: -4.000406265258789
    6. 'return' → logprob: -4.250406265258789
    7. '\n' → logprob: -5.250406265258789
    8. '       ' → logprob: -5.375406265258789
    9. '  
' → logprob: -5.500406265258789
    10. ' 
' → logprob: -6.250406265258789

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08241508901119232
    2. '
' → logprob: -2.7074151039123535
    3. '    
' → logprob: -5.4574151039123535
    4. ' return' → logprob: -5.9574151039123535
    5. 'return' → logprob: -6.4574151039123535
    6. '\n' → logprob: -7.2074151039123535
    7. '	return' → logprob: -7.2074151039123535
    8. '```' → logprob: -7.4574151039123535
    9. '  
' → logprob: -7.5824151039123535
    10. '       ' → logprob: -7.7074151039123535

Token 196: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.053999677300453186
    2. '   ' → logprob: -3.303999662399292
    3. ' return' → logprob: -4.178999900817871
    4. '
' → logprob: -8.178999900817871
    5. '	return' → logprob: -9.053999900817871
    6. '    
' → logprob: -10.053999900817871
    7. '```' → logprob: -10.678999900817871
    8. 'eturn' → logprob: -10.803999900817871
    9. '  
' → logprob: -12.178999900817871
    10. ' ' → logprob: -12.428999900817871

Token 197: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. '(True' → logprob: -17.423587799072266
    4. '   ' → logprob: -18.173587799072266
    5. 'False' → logprob: -19.173587799072266
    6. ' ' → logprob: -19.173587799072266
    7. '=True' → logprob: -19.673587799072266
    8. 'true' → logprob: -19.798587799072266
    9. ' ' → logprob: -20.798587799072266
    10. 'None' → logprob: -21.923587799072266

Token 198: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07094322890043259
    2. '#' → logprob: -3.9459431171417236
    3. '\n' → logprob: -4.070943355560303
    4. '\' → logprob: -4.695943355560303
    5. '
' → logprob: -5.320943355560303
    6. '<|end|>' → logprob: -5.445943355560303
    7. 'n' → logprob: -5.820943355560303
    8. ' 
' → logprob: -6.320943355560303
    9. '```' → logprob: -6.320943355560303
    10. 'h' → logprob: -6.945943355560303

Token 200: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.22869783639907837
    2. 'main' → logprob: -1.8536977767944336
    3. 'solve' → logprob: -3.9786977767944336
    4. 'max' → logprob: -4.728697776794434
    5. ' solve' → logprob: -4.978697776794434
    6. ' max' → logprob: -5.228697776794434
    7. 'binary' → logprob: -5.478697776794434
    8. ' binary' → logprob: -5.978697776794434
    9. ' find' → logprob: -7.603697776794434
    10. 'find' → logprob: -8.478697776794434

Token 201: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.043078898685053e-05
    2. '():
' → logprob: -10.000090599060059
    3. ' ():' → logprob: -10.500090599060059
    4. '(' → logprob: -11.125090599060059
    5. '()' → logprob: -13.250090599060059
    6. ':' → logprob: -14.875090599060059
    7. '():
' → logprob: -15.625090599060059
    8. '(h' → logprob: -15.750090599060059
    9. '():

' → logprob: -16.250089645385742
    10. '_' → logprob: -16.500089645385742

Token 202: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6454368829727173
    2. '   ' → logprob: -1.0204368829727173
    3. 'import' → logprob: -3.2704367637634277
    4. ' n' → logprob: -3.3954367637634277
    5. ' input' → logprob: -3.3954367637634277
    6. ' pass' → logprob: -5.645436763763428
    7. 'n' → logprob: -6.020436763763428
    8. ' line' → logprob: -7.395436763763428
    9. ' readline' → logprob: -7.395436763763428
    10. '    ' → logprob: -7.770436763763428

Token 203: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29949185252189636
    2. 'input' (adapté à ' input') → logprob: -2.2994918823242188
    3. ' input' → logprob: -2.4244918823242188
    4. ' n' → logprob: -2.7994918823242188
    5. '   ' → logprob: -5.299491882324219
    6. 'import' → logprob: -5.799491882324219
    7. ' import' → logprob: -7.549491882324219
    8. 't' → logprob: -8.924491882324219
    9. 'N' → logprob: -9.299491882324219
    10. 'r' → logprob: -10.049491882324219

Token 204: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.040601957589387894
    2. '_data' → logprob: -3.790601968765259
    3. '_line' → logprob: -4.41560173034668
    4. ' =' → logprob: -6.29060173034668
    5. '_lines' → logprob: -6.29060173034668
    6. '_' → logprob: -7.79060173034668
    7. 'data' → logprob: -8.04060173034668
    8. '=' → logprob: -8.29060173034668
    9. 's' → logprob: -8.91560173034668
    10. '_text' → logprob: -9.79060173034668

Token 205: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6931642889976501
    2. 'sys' → logprob: -0.6931642889976501
    3. 'input' → logprob: -11.318163871765137
    4. ' input' → logprob: -13.193163871765137
    5. '=sys' → logprob: -13.568163871765137
    6. '	sys' → logprob: -13.818163871765137
    7. '(sys' → logprob: -14.693163871765137
    8. 'lambda' → logprob: -15.443163871765137
    9. ' lambda' → logprob: -16.693164825439453
    10. ' ' → logprob: -16.943164825439453

Token 206: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.9266199160483666e-05
    2. '.stdout' → logprob: -11.500019073486328
    3. '.argv' → logprob: -12.875019073486328
    4. '.' → logprob: -13.250019073486328
    5. 'stdin' → logprob: -13.250019073486328
    6. '.readline' → logprob: -13.375019073486328
    7. '.std' → logprob: -13.875019073486328
    8. ' stdin' → logprob: -15.375019073486328
    9. '(stdin' → logprob: -15.875019073486328
    10. '.input' → logprob: -16.875019073486328

Token 207: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001766040368238464
    2. 'read' → logprob: -9.250176429748535
    3. '.read' → logprob: -10.000176429748535
    4. 'buffer' → logprob: -11.125176429748535
    5. '.readlines' → logprob: -11.750176429748535
    6. '.' → logprob: -12.250176429748535
    7. 'reader' → logprob: -13.375176429748535
    8. ' readline' → logprob: -13.375176429748535
    9. 'input' → logprob: -13.875176429748535
    10. '```' → logprob: -14.000176429748535

Token 208: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1961446851491928
    2. '   ' → logprob: -2.0711445808410645
    3. '().' → logprob: -3.0711445808410645
    4. '()
' → logprob: -5.1961445808410645
    5. '()\' → logprob: -10.446145057678223
    6. '
' → logprob: -11.071145057678223
    7. '.strip' → logprob: -11.071145057678223
    8. ' ()' → logprob: -11.196145057678223
    9. '  ' → logprob: -11.321145057678223
    10. 'def' → logprob: -11.446145057678223

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07090814411640167
    2. 'n' → logprob: -3.0709080696105957
    3. ' n' → logprob: -4.820908069610596
    4. '(n' → logprob: -5.570908069610596
    5. ' line' → logprob: -5.695908069610596
    6. '
' → logprob: -5.820908069610596
    7. '    
' → logprob: -6.445908069610596
    8. ' while' → logprob: -6.945908069610596
    9. '()' → logprob: -8.445908546447754
    10. '```' → logprob: -8.570908546447754

Token 210: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006422259844839573
    2. 'N' → logprob: -5.75642204284668
    3. '   ' → logprob: -6.13142204284668
    4. 't' → logprob: -7.00642204284668
    5. 'T' → logprob: -9.13142204284668
    6. ' n' → logprob: -10.25642204284668
    7. 'q' → logprob: -12.63142204284668
    8. '
' → logprob: -12.88142204284668
    9. 'k' → logprob: -13.50642204284668
    10. '```' → logprob: -13.50642204284668

Token 211: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01817791908979416
    2. 'True' → logprob: -4.0181779861450195
    3. '(True' → logprob: -10.64317798614502
    4. ' ' → logprob: -12.76817798614502
    5. '1' → logprob: -14.64317798614502
    6. '=True' → logprob: -15.14317798614502
    7. ' line' → logprob: -16.018177032470703
    8. ' Tru' → logprob: -16.143177032470703
    9. '   ' → logprob: -16.393177032470703
    10. '  ' → logprob: -16.768177032470703

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030681539326906204
    2. '():' → logprob: -3.780681610107422
    3. '       ' → logprob: -5.530681610107422
    4. ':
' → logprob: -6.155681610107422
    5. '():
' → logprob: -7.530681610107422
    6. '   ' → logprob: -8.030681610107422
    7. ',' → logprob: -8.405681610107422
    8. ' :' → logprob: -9.655681610107422
    9. '):' → logprob: -10.155681610107422
    10. '=' → logprob: -10.530681610107422

Token 213: '       ' (ID: 309)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5827995538711548
    2. '   ' → logprob: -0.8327995538711548
    3. 'line' → logprob: -5.207799434661865
    4. '       ' → logprob: -6.957799434661865
    5. ' s' → logprob: -8.832799911499023
    6. '	line' → logprob: -9.457799911499023
    7. '```' → logprob: -9.707799911499023
    8. '    ' → logprob: -10.332799911499023
    9. ' l' → logprob: -10.832799911499023
    10. '(line' → logprob: -11.207799911499023

Token 214: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1295781135559082
    2. 'line' → logprob: -2.129578113555908
    3. 'n' (adapté à ' n') → logprob: -6.254578113555908
    4. ' n' → logprob: -8.12957763671875
    5. '   ' → logprob: -8.12957763671875
    6. 's' → logprob: -9.37957763671875
    7. ' s' → logprob: -10.87957763671875
    8. 'l' → logprob: -11.50457763671875
    9. 'N' → logprob: -11.75457763671875
    10. '	line' → logprob: -12.62957763671875

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06200577691197395
    2. '=' → logprob: -2.8120057582855225
    3. '=int' → logprob: -10.812005996704102
    4. ' ' → logprob: -11.937005996704102
    5. ',' → logprob: -12.937005996704102
    6. '   ' → logprob: -13.187005996704102
    7. '=line' → logprob: -13.187005996704102
    8. '<|end|>' → logprob: -13.562005996704102
    9. ' =
' → logprob: -14.312005996704102
    10. ')' → logprob: -14.562005996704102

Token 216: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3138152062892914
    2. ' int' → logprob: -1.3138152360916138
    3. 'input' → logprob: -7.813815116882324
    4. ' input' → logprob: -9.063815116882324
    5. 'len' → logprob: -11.688815116882324
    6. ' ' → logprob: -11.813815116882324
    7. '=int' → logprob: -12.563815116882324
    8. ' sys' → logprob: -12.688815116882324
    9. ' n' → logprob: -12.813815116882324
    10. 'n' → logprob: -13.063815116882324

Token 217: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47411248087882996
    2. '().' → logprob: -0.9741125106811523
    3. '()
' → logprob: -10.599112510681152
    4. '()

' → logprob: -12.724112510681152
    5. '())' → logprob: -13.099112510681152
    6. '(' → logprob: -13.599112510681152
    7. '.strip' → logprob: -14.099112510681152
    8. '()?.' → logprob: -14.724112510681152
    9. '()<' → logprob: -14.724112510681152
    10. ' ()' → logprob: -14.974112510681152

Token 218: '       ' (ID: 309)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.03182876855134964
    2. '<|end|>' → logprob: -4.531828880310059
    3. '
' → logprob: -4.656828880310059
    4. '.rstrip' → logprob: -5.531828880310059
    5. '       ' → logprob: -6.031828880310059
    6. '().' → logprob: -6.281828880310059
    7. '   ' → logprob: -7.031828880310059
    8. '<|end|>' → logprob: -8.031828880310059
    9. 'strip' → logprob: -8.156828880310059
    10. '.readline' → logprob: -8.656828880310059

Token 219: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10032625496387482
    2. 'if' (adapté à ' if') → logprob: -2.3503262996673584
    3. '       ' → logprob: -9.600326538085938
    4. ' n' → logprob: -10.975326538085938
    5. 'n' → logprob: -11.475326538085938
    6. '
' → logprob: -11.725326538085938
    7. ' ' → logprob: -12.475326538085938
    8. '   ' → logprob: -12.600326538085938
    9. '.strip' → logprob: -12.600326538085938
    10. '<|end|>' → logprob: -12.850326538085938

Token 220: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0012432056246325374
    2. 'not' → logprob: -6.7512431144714355
    3. ' n' → logprob: -9.751243591308594
    4. 'n' → logprob: -11.126243591308594
    5. ' ' → logprob: -16.626243591308594
    6. '	not' → logprob: -18.376243591308594
    7. 'n't' → logprob: -19.501243591308594
    8. '!' → logprob: -19.501243591308594
    9. ' ' → logprob: -20.376243591308594
    10. '(not' → logprob: -21.376243591308594

Token 221: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01815006136894226
    2. 'n' → logprob: -4.0181498527526855
    3. '	n' → logprob: -16.268150329589844
    4. ' ' → logprob: -17.143150329589844
    5. ' ' → logprob: -18.143150329589844
    6. ')n' → logprob: -18.393150329589844
    7. ' н' → logprob: -18.768150329589844
    8. '(n' → logprob: -19.268150329589844
    9. '_n' → logprob: -19.768150329589844
    10. '$n' → logprob: -20.518150329589844

Token 222: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.21560966968536377
    2. ':' → logprob: -1.8406096696853638
    3. ':
' → logprob: -3.465609550476074
    4. '.' → logprob: -6.590609550476074
    5. ' or' → logprob: -7.090609550476074
    6. '.rstrip' → logprob: -7.090609550476074
    7. '.readline' → logprob: -7.590609550476074
    8. '.trim' → logprob: -8.590609550476074
    9. '<|end|>' → logprob: -9.590609550476074
    10. ':return' → logprob: -10.090609550476074

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016384923947043717
    2. '       ' → logprob: -9.625164031982422
    3. '   ' → logprob: -10.125164031982422
    4. ' break' → logprob: -10.500164031982422
    5. ' ' → logprob: -11.625164031982422
    6. ',' → logprob: -12.375164031982422
    7. 'break' → logprob: -12.625164031982422
    8. ' or' → logprob: -12.750164031982422
    9. '          ' → logprob: -13.250164031982422
    10. '               ' → logprob: -13.375164031982422

Token 224: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6400021314620972
    2. '           ' → logprob: -1.5150021314620972
    3. ' break' → logprob: -1.5150021314620972
    4. 'return' → logprob: -3.6400022506713867
    5. ' return' → logprob: -5.640002250671387
    6. '               ' → logprob: -6.640002250671387
    7. '       ' → logprob: -7.015002250671387
    8. '   ' → logprob: -8.140002250671387
    9. ' ' → logprob: -8.265002250671387
    10. '	break' → logprob: -8.390002250671387

Token 225: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003285494167357683
    2. '<|end|>' → logprob: -6.1282854080200195
    3. 'n' → logprob: -7.8782854080200195
    4. '        
' → logprob: -8.00328540802002
    5. ' n' → logprob: -8.25328540802002
    6. '        ' → logprob: -10.00328540802002
    7. '      ' → logprob: -11.00328540802002
    8. '<|end|>' → logprob: -11.12828540802002
    9. ',' → logprob: -11.62828540802002
    10. '   ' → logprob: -11.75328540802002

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002013217657804489
    2. '<|end|>' → logprob: -6.877013206481934
    3. 'n' → logprob: -7.252013206481934
    4. '        
' → logprob: -8.877013206481934
    5. ' n' → logprob: -10.127013206481934
    6. ',' → logprob: -10.377013206481934
    7. '   ' → logprob: -11.377013206481934
    8. '
' → logprob: -12.127013206481934
    9. '<|end|>' → logprob: -12.127013206481934
    10. '=' → logprob: -12.252013206481934

Token 227: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20143985748291016
    2. 'n' (adapté à ' n') → logprob: -1.7014398574829102
    3. '   ' → logprob: -10.82643985748291
    4. '       ' → logprob: -12.70143985748291
    5. '	n' → logprob: -13.45143985748291
    6. ' try' → logprob: -14.32643985748291
    7. '    ' → logprob: -14.32643985748291
    8. ' ' → logprob: -15.32643985748291
    9. '
' → logprob: -15.95143985748291
    10. 'try' → logprob: -16.201438903808594

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10023200511932373
    2. ' =' → logprob: -2.3502321243286133
    3. '=int' → logprob: -10.600232124328613
    4. '=n' → logprob: -15.475232124328613
    5. ')' → logprob: -16.475231170654297
    6. 'int' → logprob: -16.725231170654297
    7. '=
' → logprob: -16.975231170654297
    8. '＝' → logprob: -17.225231170654297
    9. ' ' → logprob: -17.350231170654297
    10. '=

' → logprob: -17.975231170654297

Token 229: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00317783304490149
    2. ' int' → logprob: -5.753177642822266
    3. 'n' → logprob: -16.003177642822266
    4. '=int' → logprob: -19.003177642822266
    5. ' n' → logprob: -19.378177642822266
    6. '(int' → logprob: -20.503177642822266
    7. '[int' → logprob: -21.128177642822266
    8. '   ' → logprob: -22.253177642822266
    9. '	int' → logprob: -22.503177642822266
    10. '<int' → logprob: -22.753177642822266

Token 230: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.06947024166584015
    2. 'strip' → logprob: -3.069470167160034
    3. '().' → logprob: -4.819470405578613
    4. 'int' → logprob: -5.194470405578613
    5. '.' → logprob: -5.944470405578613
    6. '.rstrip' → logprob: -6.194470405578613
    7. 'rstrip' → logprob: -7.319470405578613
    8. ' strip' → logprob: -7.319470405578613
    9. '=int' → logprob: -7.444470405578613
    10. ' .' → logprob: -9.444470405578613

Token 231: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5315772891044617
    2. '()' → logprob: -1.0315773487091064
    3. '       ' → logprob: -3.0315773487091064
    4. '<|end|>' → logprob: -5.906577110290527
    5. ' and' → logprob: -6.406577110290527
    6. '<|end|>' → logprob: -7.031577110290527
    7. 'def' → logprob: -8.031577110290527
    8. '
' → logprob: -8.031577110290527
    9. 'and' → logprob: -8.281577110290527
    10. ')' → logprob: -8.406577110290527

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02894631028175354
    2. ' if' → logprob: -4.153946399688721
    3. '<|end|>' → logprob: -5.028946399688721
    4. ' =' → logprob: -5.903946399688721
    5. 'if' → logprob: -7.153946399688721
    6. '=' → logprob: -7.153946399688721
    7. '<|end|>' → logprob: -7.528946399688721
    8. 'n' → logprob: -7.778946399688721
    9. ',' → logprob: -8.778945922851562
    10. ' n' → logprob: -9.028945922851562

Token 233: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16472236812114716
    2. ' if' → logprob: -1.9147223234176636
    3. 'n' → logprob: -5.414722442626953
    4. ' n' → logprob: -10.289722442626953
    5. '       ' → logprob: -12.789722442626953
    6. '```' → logprob: -14.914722442626953
    7. 'try' → logprob: -15.914722442626953
    8. 'If' → logprob: -16.539722442626953
    9. 'num' → logprob: -17.039722442626953
    10. '	if' → logprob: -17.164722442626953

Token 234: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011171720921993256
    2. 'not' → logprob: -4.511171817779541
    3. ' n' → logprob: -9.386171340942383
    4. 'n' → logprob: -10.136171340942383
    5. 'n't' → logprob: -15.386171340942383
    6. '!' → logprob: -15.761171340942383
    7. ' ' → logprob: -17.261171340942383
    8. '(not' → logprob: -17.511171340942383
    9. '	not' → logprob: -17.511171340942383
    10. '   ' → logprob: -18.136171340942383

Token 235: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17990067601203918
    2. ' ==' → logprob: -1.8049006462097168
    3. '=' → logprob: -9.679901123046875
    4. '()==' → logprob: -10.054901123046875
    5. '=='' → logprob: -10.804901123046875
    6. '===' → logprob: -11.804901123046875
    7. ' =' → logprob: -12.054901123046875
    8. ')==' → logprob: -12.304901123046875
    9. '=="' → logprob: -12.679901123046875
    10. 'and' → logprob: -13.054901123046875

Token 236: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.303711861371994
    2. '''' → logprob: -1.5537118911743164
    3. '"' → logprob: -3.3037118911743164
    4. '""' → logprob: -4.303711891174316
    5. '"":' → logprob: -8.928711891174316
    6. '0' → logprob: -9.928711891174316
    7. ' '' → logprob: -11.678711891174316
    8. ''end' → logprob: -13.178711891174316
    9. '   ' → logprob: -13.428711891174316
    10. ''q' → logprob: -13.553711891174316

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002863127738237381
    2. ''' → logprob: -5.877862930297852
    3. '"' → logprob: -10.252862930297852
    4. '':' → logprob: -11.377862930297852
    5. ' ' → logprob: -12.002862930297852
    6. '''' → logprob: -12.502862930297852
    7. '""' → logprob: -14.627862930297852
    8. '"":' → logprob: -15.752862930297852
    9. ''''' → logprob: -15.877862930297852
    10. ' '' → logprob: -16.00286293029785

Token 238: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2023356854915619
    2. '':' → logprob: -1.7023357152938843
    3. '':
' → logprob: -7.577335834503174
    4. ''' → logprob: -8.702335357666016
    5. ':
' → logprob: -9.202335357666016
    6. ':' → logprob: -9.202335357666016
    7. ''):
' → logprob: -10.952335357666016
    8. '   ' → logprob: -12.202335357666016
    9. '       ' → logprob: -12.577335357666016
    10. '":
' → logprob: -12.702335357666016

Token 239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5213274309644476e-05
    2. ':' → logprob: -12.625015258789062
    3. '          ' → logprob: -12.625015258789062
    4. '       ' → logprob: -12.875015258789062
    5. '		' → logprob: -13.625015258789062
    6. '	       ' → logprob: -13.750015258789062
    7. '<|end|>' → logprob: -14.125015258789062
    8. '               ' → logprob: -14.500015258789062
    9. ':
' → logprob: -14.500015258789062
    10. '   ' → logprob: -14.875015258789062

Token 240: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7972604632377625
    2. 'break' (adapté à ' break') → logprob: -0.7972604632377625
    3. 'return' → logprob: -2.5472605228424072
    4. '           ' → logprob: -4.297260284423828
    5. ' return' → logprob: -5.047260284423828
    6. '       ' → logprob: -7.797260284423828
    7. '	break' → logprob: -9.172260284423828
    8. '               ' → logprob: -10.547260284423828
    9. '   ' → logprob: -12.547260284423828
    10. '		' → logprob: -14.047260284423828

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027669060975313187
    2. '<|end|>' → logprob: -3.6526689529418945
    3. '
' → logprob: -7.1526689529418945
    4. '        
' → logprob: -8.027668952941895
    5. ',' → logprob: -9.027668952941895
    6. '<|end|>' → logprob: -9.527668952941895
    7. 'n' → logprob: -10.152668952941895
    8. ' n' → logprob: -12.527668952941895
    9. '      ' → logprob: -12.527668952941895
    10. '        ' → logprob: -12.902668952941895

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001969554228708148
    2. '<|end|>' → logprob: -6.376969337463379
    3. '
' → logprob: -9.251969337463379
    4. 'n' → logprob: -9.626969337463379
    5. '        
' → logprob: -9.751969337463379
    6. ' n' → logprob: -11.001969337463379
    7. '```' → logprob: -11.501969337463379
    8. '<|end|>' → logprob: -12.126969337463379
    9. '   ' → logprob: -12.376969337463379
    10. ',' → logprob: -12.876969337463379

Token 243: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4367568790912628
    2. 'n' (adapté à ' n') → logprob: -1.0617568492889404
    3. ' anchors' → logprob: -5.3117570877075195
    4. 'anchors' → logprob: -6.0617570877075195
    5. '   ' → logprob: -8.43675708770752
    6. '       ' → logprob: -8.68675708770752
    7. 'h' → logprob: -9.43675708770752
    8. '```' → logprob: -10.24925708770752
    9. '	n' → logprob: -10.56175708770752
    10. ' h' → logprob: -10.93675708770752

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744707942008972
    2. '=' → logprob: -0.9744707942008972
    3. '=int' → logprob: -7.849470615386963
    4. '=n' → logprob: -12.849471092224121
    5. 'n' → logprob: -14.599471092224121
    6. 'int' → logprob: -15.724471092224121
    7. '＝' → logprob: -16.224470138549805
    8. ' ' → logprob: -16.349470138549805
    9. '=
' → logprob: -16.724470138549805
    10. '```' → logprob: -17.474470138549805

Token 245: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005233763717114925
    2. ' int' → logprob: -5.2552337646484375
    3. '	int' → logprob: -22.880233764648438
    4. '[int' → logprob: -22.880233764648438
    5. '=int' → logprob: -23.255233764648438
    6. '  ' → logprob: -24.130233764648438
    7. '<int' → logprob: -24.380233764648438
    8. ' ' → logprob: -24.380233764648438
    9. '(int' → logprob: -24.505233764648438
    10. '   ' → logprob: -25.130233764648438

Token 246: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.288163083605468e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -14.125052452087402
    4. 'n' → logprob: -14.750052452087402
    5. '(
' → logprob: -16.50005340576172
    6. ' n' → logprob: -17.25005340576172
    7. ')n' → logprob: -17.37505340576172
    8. '	n' → logprob: -18.25005340576172
    9. '()' → logprob: -18.75005340576172
    10. '```' → logprob: -19.12505340576172

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.135819760151207e-05
    2. ')
' → logprob: -9.87507152557373
    3. ' )' → logprob: -10.87507152557373
    4. '       ' → logprob: -15.12507152557373
    5. ')n' → logprob: -16.375070571899414
    6. '))' → logprob: -16.500070571899414
    7. '<|end|>' → logprob: -16.500070571899414
    8. '())' → logprob: -17.250070571899414
    9. ')`' → logprob: -17.375070571899414
    10. '   ' → logprob: -17.500070571899414

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.813502848148346
    2. 'anchors' → logprob: -0.813502848148346
    3. ' anchors' → logprob: -2.563502788543701
    4. '<|end|>' → logprob: -4.063502788543701
    5. '        
' → logprob: -4.938502788543701
    6. '	' → logprob: -5.563502788543701
    7. '   ' → logprob: -6.188502788543701
    8. 'points' → logprob: -6.688502788543701
    9. '```' → logprob: -6.938502788543701
    10. '	   ' → logprob: -7.938502788543701

Token 249: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' (adapté à ' anchors') → logprob: -0.011290192604064941
    2. ' anchors' → logprob: -4.511290073394775
    3. 'anch' → logprob: -9.261290550231934
    4. '       ' → logprob: -10.011290550231934
    5. '   ' → logprob: -10.886290550231934
    6. '```' → logprob: -10.886290550231934
    7. 'anchor' → logprob: -11.386290550231934
    8. 'roots' → logprob: -11.886290550231934
    9. '        
' → logprob: -11.886290550231934
    10. 'ans' → logprob: -12.261290550231934

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004092408809810877
    2. '=' → logprob: -5.504092216491699
    3. '=[]' → logprob: -11.5040922164917
    4. ' ' → logprob: -14.1290922164917
    5. '[]' → logprob: -14.2540922164917
    6. '<|end|>' → logprob: -14.5040922164917
    7. '   ' → logprob: -14.7540922164917
    8. 's' → logprob: -15.0040922164917
    9. '<|end|>' → logprob: -15.7540922164917
    10. ')' → logprob: -15.8790922164917

Token 251: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02535257488489151
    2. '[' → logprob: -4.025352478027344
    3. ' []' → logprob: -5.025352478027344
    4. ' [' → logprob: -7.525352478027344
    5. '[]
' → logprob: -10.900352478027344
    6. '[n' → logprob: -11.525352478027344
    7. '[int' → logprob: -11.525352478027344
    8. '[user' → logprob: -12.775352478027344
    9. '[p' → logprob: -12.900352478027344
    10. '[input' → logprob: -13.025352478027344

Token 252: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6785612106323242
    2. '<|end|>' → logprob: -1.3035612106323242
    3. '       ' → logprob: -1.6785612106323242
    4. '	for' → logprob: -4.553561210632324
    5. '   ' → logprob: -5.053561210632324
    6. 'for' → logprob: -5.428561210632324
    7. ' ' → logprob: -5.553561210632324
    8. '        
' → logprob: -6.428561210632324
    9. ' 
' → logprob: -6.553561210632324
    10. '	' → logprob: -7.178561210632324

Token 253: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5759612321853638
    2. ' for' → logprob: -0.8259612321853638
    3. '	for' → logprob: -11.575961112976074
    4. '       ' → logprob: -11.700961112976074
    5. '   ' → logprob: -12.450961112976074
    6. ' ' → logprob: -16.57596206665039
    7. '
' → logprob: -17.70096206665039
    8. '<|end|>' → logprob: -18.20096206665039
    9. '    ' → logprob: -18.57596206665039
    10. ' ' → logprob: -18.70096206665039

Token 254: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20142512023448944
    2. '_' → logprob: -1.7014250755310059
    3. ' i' → logprob: -11.701425552368164
    4. ' ' → logprob: -13.201425552368164
    5. ' in' → logprob: -14.076425552368164
    6. '_i' → logprob: -14.701425552368164
    7. ' range' → logprob: -15.076425552368164
    8. ' ' → logprob: -15.701425552368164
    9. 'i' → logprob: -16.451425552368164
    10. 'range' → logprob: -17.451425552368164

Token 255: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38718822598457336
    2. ' in' → logprob: -1.137188196182251
    3. 'range' → logprob: -8.137187957763672
    4. ' ' → logprob: -11.637187957763672
    5. ' range' → logprob: -12.012187957763672
    6. '_' → logprob: -12.262187957763672
    7. '  ' → logprob: -13.637187957763672
    8. 'n' → logprob: -13.887187957763672
    9. 'i' → logprob: -14.512187957763672
    10. ' _' → logprob: -14.762187957763672

Token 256: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '	range' → logprob: -18.000431060791016
    4. '(range' → logprob: -19.250431060791016
    5. '   ' → logprob: -19.875431060791016
    6. 'in' → logprob: -20.125431060791016
    7. ' ' → logprob: -20.250431060791016
    8. 'rang' → logprob: -20.500431060791016
    9. '  ' → logprob: -20.875431060791016
    10. 'input' → logprob: -21.000431060791016

Token 257: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002861104905605316
    2. ' (' → logprob: -6.502861022949219
    3. ' n' → logprob: -6.877861022949219
    4. 'n' → logprob: -8.502861022949219
    5. '(' → logprob: -9.002861022949219
    6. ' range' → logprob: -15.002861022949219
    7. '(
' → logprob: -15.127861022949219
    8. '(range' → logprob: -15.252861022949219
    9. '	n' → logprob: -15.252861022949219
    10. ' ' → logprob: -15.377861022949219

Token 258: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20407025516033173
    2. '):' → logprob: -1.7040702104568481
    3. ':' → logprob: -6.954070091247559
    4. '():
' → logprob: -7.204070091247559
    5. ':
' → logprob: -7.829070091247559
    6. '       ' → logprob: -9.204070091247559
    7. '):
' → logprob: -9.329070091247559
    8. ' ):
' → logprob: -9.454070091247559
    9. ',' → logprob: -9.579070091247559
    10. '   ' → logprob: -9.954070091247559

Token 259: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6461438536643982
    2. '           ' → logprob: -1.271143913269043
    3. '       ' → logprob: -2.021143913269043
    4. '	   ' → logprob: -3.896143913269043
    5. '	       ' → logprob: -4.646143913269043
    6. ' line' → logprob: -5.021143913269043
    7. '<|end|>' → logprob: -5.396143913269043
    8. ' x' → logprob: -5.646143913269043
    9. '    	   ' → logprob: -5.771143913269043
    10. ' s' → logprob: -5.896143913269043

Token 260: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7045186758041382
    2. 'x' (adapté à ' x') → logprob: -0.8295186758041382
    3. ' line' → logprob: -2.7045187950134277
    4. 'line' → logprob: -6.079518795013428
    5. ' parts' → logprob: -9.45451831817627
    6. 's' → logprob: -10.57951831817627
    7. ' s' → logprob: -10.57951831817627
    8. 'a' → logprob: -10.70451831817627
    9. ' data' → logprob: -11.45451831817627
    10. ' a' → logprob: -11.95451831817627

Token 261: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5770582556724548
    2. ',y' → logprob: -0.8270582556724548
    3. ' ,' → logprob: -6.8270583152771
    4. 'y' → logprob: -11.202057838439941
    5. '_,' → logprob: -11.827057838439941
    6. ' y' → logprob: -12.577057838439941
    7. ',Y' → logprob: -12.827057838439941
    8. ',line' → logprob: -13.827057838439941
    9. ',s' → logprob: -13.952057838439941
    10. ',int' → logprob: -14.327057838439941

Token 262: ',l' (ID: 45198)
  Prédit: ',l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.004479016177356243
    2. ',' → logprob: -5.504478931427002
    3. ',length' → logprob: -9.37947940826416
    4. ' ,' → logprob: -9.50447940826416
    5. ',L' → logprob: -9.87947940826416
    6. ',line' → logprob: -10.62947940826416
    7. ',d' → logprob: -11.00447940826416
    8. ',r' → logprob: -11.00447940826416
    9. ',w' → logprob: -11.12947940826416
    10. ',z' → logprob: -11.25447940826416

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931602954864502
    2. ' =' → logprob: -0.6931602954864502
    3. '=input' → logprob: -11.443160057067871
    4. '=line' → logprob: -13.318160057067871
    5. ',' → logprob: -14.568160057067871
    6. ' ' → logprob: -16.068161010742188
    7. '=sys' → logprob: -16.943161010742188
    8. '   ' → logprob: -16.943161010742188
    9. '    ' → logprob: -17.068161010742188
    10. '＝' → logprob: -17.568161010742188

Token 264: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06244802102446556
    2. ' map' → logprob: -2.812448024749756
    3. 'input' → logprob: -7.687448024749756
    4. ' input' → logprob: -10.812447547912598
    5. '	map' → logprob: -14.687447547912598
    6. '(map' → logprob: -14.812447547912598
    7. 'list' → logprob: -14.812447547912598
    8. '[' → logprob: -15.687447547912598
    9. ' ' → logprob: -15.687447547912598
    10. '   ' → logprob: -17.062448501586914

Token 265: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.38696756958961487
    2. '(float' → logprob: -1.1369675397872925
    3. '(' → logprob: -9.386967658996582
    4. 'float' → logprob: -11.886967658996582
    5. 'int' → logprob: -12.511967658996582
    6. '(map' → logprob: -14.136967658996582
    7. '(str' → logprob: -14.761967658996582
    8. '=float' → logprob: -15.511967658996582
    9. '[int' → logprob: -15.761967658996582
    10. ',float' → logprob: -15.761967658996582

Token 266: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.12555472552776337
    2. ',' → logprob: -2.3755548000335693
    3. 'input' → logprob: -3.8755548000335693
    4. '(input' → logprob: -5.50055456161499
    5. ' input' → logprob: -8.625555038452148
    6. '(' → logprob: -11.250555038452148
    7. '[input' → logprob: -13.000555038452148
    8. ' ,' → logprob: -13.750555038452148
    9. ')' → logprob: -13.750555038452148
    10. '=input' → logprob: -13.875555038452148

Token 267: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.339278580620885e-06
    2. '()' → logprob: -13.000001907348633
    3. ' ().' → logprob: -17.125001907348633
    4. '(' → logprob: -18.750001907348633
    5. '.readline' → logprob: -19.375001907348633
    6. '())' → logprob: -19.375001907348633
    7. ')' → logprob: -20.375001907348633
    8. '()
' → logprob: -20.625001907348633
    9. '().__' → logprob: -20.750001907348633
    10. '.split' → logprob: -21.375001907348633

Token 268: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006730765104293823
    2. 'strip' → logprob: -5.006730556488037
    3. 'rstrip' → logprob: -11.631731033325195
    4. '(split' → logprob: -12.881731033325195
    5. 'read' → logprob: -13.006731033325195
    6. ' split' → logprob: -14.131731033325195
    7. '().' → logprob: -14.131731033325195
    8. ')' → logprob: -16.006731033325195
    9. ' strip' → logprob: -17.381731033325195
    10. 'plit' → logprob: -18.006731033325195

Token 269: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006372620700858533
    2. ')' → logprob: -7.500637054443359
    3. '()' → logprob: -9.62563705444336
    4. '())
' → logprob: -11.37563705444336
    5. '()))' → logprob: -12.25063705444336
    6. ' ())' → logprob: -13.62563705444336
    7. '))' → logprob: -15.50063705444336
    8. '(' → logprob: -15.62563705444336
    9. '())

' → logprob: -15.87563705444336
    10. '())
' → logprob: -16.25063705444336

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030359527096152306
    2. '<|end|>' → logprob: -3.9053595066070557
    3. ',' → logprob: -5.655359745025635
    4. '       ' → logprob: -6.530359745025635
    5. '            
' → logprob: -6.530359745025635
    6. 'anchors' → logprob: -6.780359745025635
    7. ')' → logprob: -7.280359745025635
    8. '<|end|>' → logprob: -7.405359745025635
    9. '
' → logprob: -8.405359268188477
    10. ' anchors' → logprob: -8.530359268188477

Token 271: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' (adapté à ' anchors') → logprob: -0.04314009100198746
    2. ' anchors' → logprob: -3.168140172958374
    3. '           ' → logprob: -9.043140411376953
    4. '       ' → logprob: -11.543140411376953
    5. '   ' → logprob: -11.668140411376953
    6. 'anchor' → logprob: -13.168140411376953
    7. 'anch' → logprob: -13.418140411376953
    8. '	' → logprob: -15.793140411376953
    9. 'anc' → logprob: -16.168140411376953
    10. ' ' → logprob: -16.168140411376953

Token 272: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006398845580406487
    2. '.' → logprob: -7.500639915466309
    3. ' .' → logprob: -9.375639915466309
    4. ').' → logprob: -13.750639915466309
    5. '.app' → logprob: -15.000639915466309
    6. '.extend' → logprob: -15.125639915466309
    7. 'append' → logprob: -15.250639915466309
    8. '.ap' → logprob: -16.750638961791992
    9. '.Append' → logprob: -16.875638961791992
    10. '           ' → logprob: -17.125638961791992

Token 273: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002476016292348504
    2. '(' → logprob: -6.002476215362549
    3. '(x' → logprob: -15.37747573852539
    4. ' (' → logprob: -16.87747573852539
    5. '<|end|>' → logprob: -17.37747573852539
    6. '(
' → logprob: -18.12747573852539
    7. ' ((' → logprob: -18.25247573852539
    8. '```' → logprob: -19.00247573852539
    9. '([' → logprob: -19.37747573852539
    10. '(('' → logprob: -19.75247573852539

Token 274: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.375
    3. ')x' → logprob: -19.125
    4. '	x' → logprob: -21.75
    5. '"x' → logprob: -22.75
    6. '(x' → logprob: -22.75
    7. ',x' → logprob: -23.125
    8. 'xref' → logprob: -24.0
    9. '<|end|>' → logprob: -24.25
    10. '{x' → logprob: -24.25

Token 275: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.1602998673915863
    2. ',' → logprob: -1.9102998971939087
    3. ' ,' → logprob: -9.535300254821777
    4. ',
' → logprob: -13.285300254821777
    5. ',user' → logprob: -14.035300254821777
    6. 'y' → logprob: -15.285300254821777
    7. '<|end|>' → logprob: -15.410300254821777
    8. ',Y' → logprob: -15.660300254821777
    9. '   ' → logprob: -17.16029930114746
    10. '       ' → logprob: -17.41029930114746

Token 276: ',l' (ID: 45198)
  Prédit: ',l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.033975765109062195
    2. ',' → logprob: -3.408975839614868
    3. ' ,' → logprob: -8.033975601196289
    4. 'l' → logprob: -13.283975601196289
    5. ' l' → logprob: -14.283975601196289
    6. ',ll' → logprob: -14.283975601196289
    7. ',x' → logprob: -14.408975601196289
    8. ',y' → logprob: -14.408975601196289
    9. ',
' → logprob: -14.908975601196289
    10. ',n' → logprob: -15.158975601196289

Token 277: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011893989285454154
    2. '))
' → logprob: -6.751189231872559
    3. ')' → logprob: -11.001189231872559
    4. ' ))' → logprob: -13.626189231872559
    5. '))
' → logprob: -15.126189231872559
    6. ')))' → logprob: -15.126189231872559
    7. '))

' → logprob: -15.251189231872559
    8. '       ' → logprob: -15.501189231872559
    9. '   ' → logprob: -15.751189231872559
    10. ')
' → logprob: -17.001190185546875

Token 278: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0320465564727783
    2. ' lo' → logprob: -1.1570465564727783
    3. ' low' → logprob: -2.0320465564727783
    4. 'low' → logprob: -2.5320465564727783
    5. 'lo' → logprob: -3.0320465564727783
    6. '```' → logprob: -3.1570465564727783
    7. ' left' → logprob: -4.907046318054199
    8. '
' → logprob: -5.032046318054199
    9. ' l' → logprob: -5.782046318054199
    10. 'left' → logprob: -5.907046318054199

Token 279: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.9262052178382874
    2. 'lo' → logprob: -1.1762051582336426
    3. 'l' → logprob: -1.3012051582336426
    4. 'left' → logprob: -3.9262051582336426
    5. 'hi' → logprob: -6.051205158233643
    6. 'h' → logprob: -8.1762056350708
    7. 'ok' → logprob: -8.5512056350708
    8. '
' → logprob: -9.3012056350708
    9. 'lh' → logprob: -9.3012056350708
    10. 's' → logprob: -9.4262056350708

Token 280: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030454114079475403
    2. ',' → logprob: -4.030454158782959
    3. '=' → logprob: -4.405454158782959
    4. ' ,' → logprob: -11.2804536819458
    5. '<|end|>' → logprob: -12.6554536819458
    6. ' ' → logprob: -13.7804536819458
    7. '<|end|>' → logprob: -15.4054536819458
    8. '=int' → logprob: -16.030454635620117
    9. ')' → logprob: -16.030454635620117
    10. '```' → logprob: -16.030454635620117

Token 281: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.2519296407699585
    2. ' high' → logprob: -1.5019296407699585
    3. 'hi' → logprob: -15.50192928314209
    4. '_high' → logprob: -16.126930236816406
    5. 'up' → logprob: -16.251930236816406
    6. '(high' → logprob: -16.501930236816406
    7. '.high' → logprob: -17.251930236816406
    8. '=' → logprob: -17.501930236816406
    9. 'High' → logprob: -17.626930236816406
    10. ' hi' → logprob: -18.251930236816406

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269284337759018
    2. '=' → logprob: -2.1269283294677734
    3. ',' → logprob: -15.376928329467773
    4. ' ' → logprob: -16.376928329467773
    5. '=float' → logprob: -16.876928329467773
    6. '＝' → logprob: -17.751928329467773
    7. '=int' → logprob: -18.001928329467773
    8. '<|end|>' → logprob: -18.751928329467773
    9. '=cut' → logprob: -19.251928329467773
    10. '```' → logprob: -19.501928329467773

Token 283: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004702822305262089
    2. '1' → logprob: -6.379703044891357
    3. '100' → logprob: -6.754703044891357
    4. ' ' → logprob: -7.129703044891357
    5. 'max' → logprob: -7.129703044891357
    6. '10' → logprob: -8.7547025680542
    7. 'min' → logprob: -11.1297025680542
    8. 'math' → logprob: -11.3797025680542
    9. ' max' → logprob: -11.5047025680542
    10. '500' → logprob: -11.6297025680542

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006222409661859274
    2. '1' → logprob: -5.381222248077393
    3. '100' → logprob: -7.131222248077393
    4. '-' → logprob: -7.756222248077393
    5. 'max' → logprob: -8.88122272491455
    6. '10' → logprob: -9.00622272491455
    7. ' ' → logprob: -9.63122272491455
    8. 'min' → logprob: -11.13122272491455
    9. '200' → logprob: -11.75622272491455
    10. '2' → logprob: -12.50622272491455

Token 285: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00604398176074028
    2. ',max' → logprob: -5.256043910980225
    3. ' ,' → logprob: -7.631043910980225
    4. ',int' → logprob: -9.131044387817383
    5. ',float' → logprob: -9.381044387817383
    6. '100' → logprob: -10.256044387817383
    7. 'max' → logprob: -10.506044387817383
    8. '1' → logprob: -11.131044387817383
    9. ',
' → logprob: -11.631044387817383
    10. '=' → logprob: -11.756044387817383

Token 286: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0832276344299316
    2. '9' → logprob: -1.2082276344299316
    3. '10' → logprob: -1.5832276344299316
    4. '100' → logprob: -3.3332276344299316
    5. '8' → logprob: -3.4582276344299316
    6. '7' → logprob: -3.4582276344299316
    7. '15' → logprob: -3.9582276344299316
    8. '200' → logprob: -4.958227634429932
    9. '6' → logprob: -5.083227634429932
    10. '5' → logprob: -5.208227634429932

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00588566018268466
    2. ' ,' → logprob: -5.255885601043701
    3. ',max' → logprob: -7.630885601043701
    4. ',
' → logprob: -9.63088607788086
    5. ',float' → logprob: -10.00588607788086
    6. ',min' → logprob: -11.13088607788086
    7. ',l' → logprob: -11.13088607788086
    8. '
' → logprob: -12.25588607788086
    9. ' ' → logprob: -12.38088607788086
    10. ' ,
' → logprob: -13.00588607788086

Token 288: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3385637402534485
    2. '100' → logprob: -1.4635636806488037
    3. 'max' → logprob: -3.7135636806488037
    4. '10' → logprob: -3.9635636806488037
    5. ' ' → logprob: -5.213563919067383
    6. 'min' → logprob: -5.838563919067383
    7. '200' → logprob: -7.088563919067383
    8. ' max' → logprob: -7.213563919067383
    9. '2' → logprob: -7.338563919067383
    10. '500' → logprob: -7.588563919067383

Token 289: '300' (ID: 4095)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22153803706169128
    2. '100' → logprob: -1.7215380668640137
    3. '10' → logprob: -4.471538066864014
    4. 'max' → logprob: -5.846538066864014
    5. '200' → logprob: -6.471538066864014
    6. '2' → logprob: -6.721538066864014
    7. 'min' → logprob: -7.096538066864014
    8. '150' → logprob: -7.596538066864014
    9. '500' → logprob: -7.721538066864014
    10. 'math' → logprob: -8.096537590026855

Token 290: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12477749586105347
    2. '000' → logprob: -2.2497775554656982
    3. '0' → logprob: -4.499777317047119
    4. '00' → logprob: -7.249777317047119
    5. '_' → logprob: -11.124777793884277
    6. '001' → logprob: -11.499777793884277
    7. '300' → logprob: -11.499777793884277
    8. 'e' → logprob: -11.624777793884277
    9. '1' → logprob: -12.124777793884277
    10. '+' → logprob: -13.124777793884277

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017091481015086174
    2. '6' → logprob: -5.267091274261475
    3. '5' → logprob: -5.517091274261475
    4. '7' → logprob: -6.017091274261475
    5. '9' → logprob: -6.767091274261475
    6. '8' → logprob: -6.892091274261475
    7. '10' → logprob: -7.517091274261475
    8. '4' → logprob: -7.642091274261475
    9. '000' → logprob: -7.767091274261475
    10. '3' → logprob: -7.767091274261475

Token 292: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.167700856924057
    2. ' while' → logprob: -3.29270076751709
    3. '  
' → logprob: -3.79270076751709
    4. '       ' → logprob: -3.79270076751709
    5. ' 
' → logprob: -4.04270076751709
    6. '<|end|>' → logprob: -4.04270076751709
    7. ' ' → logprob: -4.16770076751709
    8. '   ' → logprob: -4.79270076751709
    9. 'while' → logprob: -5.54270076751709
    10. '        
' → logprob: -5.79270076751709

Token 293: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.31614425778388977
    2. ' 
' → logprob: -2.3161442279815674
    3. '<|end|>' → logprob: -3.3161442279815674
    4. '
' → logprob: -3.4411442279815674
    5. '   ' → logprob: -3.5661442279815674
    6. ' ' → logprob: -3.6911442279815674
    7. '  
' → logprob: -4.1911444664001465
    8. 'while' → logprob: -4.3161444664001465
    9. '    
' → logprob: -4.9411444664001465
    10. '       ' → logprob: -5.1911444664001465

Token 294: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7926926016807556
    2. ' while' → logprob: -1.5426926612854004
    3. 'for' (adapté à ' for') → logprob: -1.7926926612854004
    4. ' for' → logprob: -2.1676926612854004
    5. '       ' → logprob: -3.0426926612854004
    6. '   ' → logprob: -5.7926926612854
    7. '
' → logprob: -6.9176926612854
    8. ' ' → logprob: -7.7926926612854
    9. ' 
' → logprob: -8.542692184448242
    10. '        
' → logprob: -9.667692184448242

Token 295: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0005577972042374313
    2. '_' → logprob: -7.500557899475098
    3. ' i' → logprob: -12.875557899475098
    4. ' ' → logprob: -13.125557899475098
    5. ' __' → logprob: -16.00055694580078
    6. ' mid' → logprob: -17.00055694580078
    7. ' _
' → logprob: -17.12555694580078
    8. '  ' → logprob: -17.37555694580078
    9. '_i' → logprob: -18.50055694580078
    10. '_mid' → logprob: -19.00055694580078

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0052966042421758175
    2. 'in' → logprob: -5.25529670715332
    3. ' ' → logprob: -10.75529670715332
    4. '_' → logprob: -11.38029670715332
    5. '<|end|>' → logprob: -11.88029670715332
    6. '  ' → logprob: -12.75529670715332
    7. 'range' → logprob: -13.25529670715332
    8. 'int' → logprob: -13.25529670715332
    9. '```' → logprob: -13.50529670715332
    10. 'import' → logprob: -13.63029670715332

Token 297: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -17.875431060791016
    4. ' ' → logprob: -19.000431060791016
    5. '	range' → logprob: -19.250431060791016
    6. '[' → logprob: -20.250431060791016
    7. '   ' → logprob: -20.375431060791016
    8. '```' → logprob: -21.000431060791016
    9. '(' → logprob: -21.375431060791016
    10. '  ' → logprob: -22.000431060791016

Token 298: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00032283025211654603
    2. ' ' → logprob: -8.125323295593262
    3. '50' → logprob: -11.125323295593262
    4. '60' → logprob: -12.250323295593262
    5. ' (' → logprob: -12.375323295593262
    6. '40' → logprob: -14.000323295593262
    7. '30' → logprob: -14.250323295593262
    8. '20' → logprob: -14.500323295593262
    9. '100' → logprob: -14.875323295593262
    10. '(
' → logprob: -15.500323295593262

Token 299: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.46443286538124084
    2. '100' → logprob: -1.5894328355789185
    3. '50' → logprob: -1.9644328355789185
    4. '70' → logprob: -4.089432716369629
    5. '40' → logprob: -5.339432716369629
    6. '80' → logprob: -5.589432716369629
    7. '64' → logprob: -7.339432716369629
    8. ' ' → logprob: -7.964432716369629
    9. '200' → logprob: -8.089432716369629
    10. '90' → logprob: -9.089432716369629

Token 300: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4280841648578644
    2. ':' → logprob: -1.553084135055542
    3. '):' → logprob: -2.553084135055542
    4. ':
' → logprob: -2.928084135055542
    5. '   ' → logprob: -6.678084373474121
    6. '<|end|>' → logprob: -6.803084373474121
    7. ' ):
' → logprob: -7.178084373474121
    8. '():
' → logprob: -7.678084373474121
    9. '       ' → logprob: -7.678084373474121
    10. ' :' → logprob: -8.428084373474121

Token 301: '           ' (ID: 352)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.30409735441207886
    2. '           ' → logprob: -1.5540974140167236
    3. 'mid' → logprob: -3.1790974140167236
    4. ' midpoint' → logprob: -5.9290971755981445
    5. '	       ' → logprob: -6.1790971755981445
    6. '```' → logprob: -6.8040971755981445
    7. ' mids' → logprob: -6.9290971755981445
    8. '_mid' → logprob: -7.6790971755981445
    9. '<|end|>' → logprob: -7.9290971755981445
    10. '[mid' → logprob: -8.054097175598145

Token 302: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.5768110752105713
    2. 'mid' (adapté à ' mid') → logprob: -0.8268110752105713
    3. '           ' → logprob: -7.326810836791992
    4. 'm' → logprob: -9.326810836791992
    5. ' midpoint' → logprob: -9.826810836791992
    6. '_mid' → logprob: -11.076810836791992
    7. ' mids' → logprob: -11.076810836791992
    8. ' middle' → logprob: -11.701810836791992
    9. 'middle' → logprob: -11.951810836791992
    10. '[mid' → logprob: -11.951810836791992

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003612901084125042
    2. '=' → logprob: -5.628612995147705
    3. '<|end|>' → logprob: -11.503612518310547
    4. ')' → logprob: -14.128612518310547
    5. ' ' → logprob: -14.253612518310547
    6. 'space' → logprob: -15.378612518310547
    7. ' =(' → logprob: -15.753612518310547
    8. ',' → logprob: -16.003612518310547
    9. ' =)' → logprob: -16.128612518310547
    10. '=(' → logprob: -16.253612518310547

Token 304: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16057129204273224
    2. '(low' → logprob: -1.9105713367462158
    3. '(high' → logprob: -8.035571098327637
    4. '(mid' → logprob: -12.035571098327637
    5. '
' → logprob: -12.660571098327637
    6. '(left' → logprob: -12.785571098327637
    7. '(lower' → logprob: -12.910571098327637
    8. ' ' → logprob: -12.910571098327637
    9. '0' → logprob: -13.910571098327637
    10. '   ' → logprob: -14.160571098327637

Token 305: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.01416398212313652
    2. ' low' → logprob: -4.264163970947266
    3. 'high' → logprob: -15.139163970947266
    4. '_low' → logprob: -16.639163970947266
    5. '(low' → logprob: -16.764163970947266
    6. ')' → logprob: -17.514163970947266
    7. '.low' → logprob: -17.889163970947266
    8. ' ' → logprob: -18.764163970947266
    9. 'Low' → logprob: -19.014163970947266
    10. '低' → logprob: -19.514163970947266

Token 306: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759394764900208
    2. ' +' → logprob: -0.8259394764900208
    3. ' +
' → logprob: -17.950939178466797
    4. '＋' → logprob: -18.075939178466797
    5. ' plus' → logprob: -18.200939178466797
    6. ' ' → logprob: -18.200939178466797
    7. '+
' → logprob: -19.200939178466797
    8. ' ' → logprob: -19.450939178466797
    9. '
' → logprob: -19.700939178466797
    10. '```' → logprob: -19.825939178466797

Token 307: 'high' (ID: 21116)
  Prédit: 'high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.001170225441455841
    2. ' high' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.876171112060547
    4. '   ' → logprob: -18.126171112060547
    5. '.high' → logprob: -18.626171112060547
    6. '(high' → logprob: -18.751171112060547
    7. 'High' → logprob: -19.001171112060547
    8. '_high' → logprob: -19.126171112060547
    9. '高' → logprob: -19.376171112060547
    10. '-high' → logprob: -19.751171112060547

Token 308: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.126951202750206
    2. ')/' → logprob: -2.126951217651367
    3. ' )' → logprob: -10.751951217651367
    4. ')*' → logprob: -13.376951217651367
    5. ')//' → logprob: -15.876951217651367
    6. ')>>' → logprob: -16.626951217651367
    7. '   ' → logprob: -17.001951217651367
    8. '）' → logprob: -17.751951217651367
    9. ')**' → logprob: -18.251951217651367
    10. ')/(' → logprob: -18.376951217651367

Token 309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.710618905955926e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.000097274780273
    4. '```' → logprob: -15.125097274780273
    5. '
' → logprob: -17.062597274780273
    6. '  ' → logprob: -17.312597274780273
    7. '۲' → logprob: -17.625097274780273
    8. '２' → logprob: -17.875097274780273
    9. '=' → logprob: -18.062597274780273
    10. '

' → logprob: -18.750097274780273

Token 310: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6197527647018433
    2. '       ' → logprob: -1.3697527647018433
    3. '<|end|>' → logprob: -2.619752883911133
    4. 'if' → logprob: -3.119752883911133
    5. '           ' → logprob: -3.244752883911133
    6. '
' → logprob: -3.369752883911133
    7. ' 
' → logprob: -5.369752883911133
    8. ' ' → logprob: -6.119752883911133
    9. '        
' → logprob: -6.119752883911133
    10. ')' → logprob: -6.119752883911133

Token 312: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2034538835287094
    2. ' if' → logprob: -1.7034538984298706
    3. '           ' → logprob: -6.20345401763916
    4. '       ' → logprob: -11.20345401763916
    5. '	if' → logprob: -13.70345401763916
    6. '   ' → logprob: -14.70345401763916
    7. '
' → logprob: -14.82845401763916
    8. 'If' → logprob: -15.57845401763916
    9. '            
' → logprob: -16.078453063964844
    10. '               ' → logprob: -16.203453063964844

Token 313: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.20141352713108063
    2. ' can' → logprob: -1.7014135122299194
    3. '	can' → logprob: -15.70141315460205
    4. '(can' → logprob: -16.951414108276367
    5. '.can' → logprob: -18.076414108276367
    6. '_can' → logprob: -18.701414108276367
    7. ' not' → logprob: -18.826414108276367
    8. '   ' → logprob: -19.076414108276367
    9. ' ' → logprob: -19.451414108276367
    10. 'not' → logprob: -20.951414108276367

Token 314: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -2.339278580620885e-06
    2. 'mid' → logprob: -13.875001907348633
    3. '[mid' → logprob: -14.375001907348633
    4. ' (' → logprob: -14.375001907348633
    5. ' mid' → logprob: -16.000001907348633
    6. ')' → logprob: -18.000001907348633
    7. '(m' → logprob: -20.000001907348633
    8. '(
' → logprob: -20.125001907348633
    9. '(' → logprob: -20.125001907348633
    10. '.mid' → logprob: -20.625001907348633

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005564896273426712
    2. ' ,' → logprob: -7.500556468963623
    3. ',
' → logprob: -13.750556945800781
    4. 'anchors' → logprob: -13.750556945800781
    5. '           ' → logprob: -14.750556945800781
    6. '```' → logprob: -15.750556945800781
    7. ' anchors' → logprob: -16.37555694580078
    8. '(' → logprob: -16.62555694580078
    9. ')' → logprob: -16.87555694580078
    10. '   ' → logprob: -16.87555694580078

Token 316: ' anchors' (ID: 114642)
  Prédit: 'anchors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anchors' → logprob: -0.0005557744298130274
    2. ' anchors' → logprob: -7.500555992126465
    3. 'anch' → logprob: -13.500555992126465
    4. '   ' → logprob: -14.750555992126465
    5. 'anchor' → logprob: -15.125555992126465
    6. ')' → logprob: -15.125555992126465
    7. '           ' → logprob: -16.00055503845215
    8. '       ' → logprob: -16.37555503845215
    9. '
' → logprob: -16.87555503845215
    10. 'points' → logprob: -17.25055503845215

Token 317: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018153101205825806
    2. '):' → logprob: -4.018153190612793
    3. '):
' → logprob: -13.518153190612793
    4. ' ):
' → logprob: -14.018153190612793
    5. ':
' → logprob: -14.893153190612793
    6. ')' → logprob: -15.143153190612793
    7. ':' → logprob: -15.643153190612793
    8. '):

' → logprob: -15.768153190612793
    9. '           ' → logprob: -16.393152236938477
    10. ' ):' → logprob: -17.143152236938477

Token 318: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07347502559423447
    2. ' high' → logprob: -2.8234751224517822
    3. '
' → logprob: -5.323474884033203
    4. 'high' → logprob: -6.448474884033203
    5. '           ' → logprob: -6.948474884033203
    6. ':
' → logprob: -7.073474884033203
    7. '                
' → logprob: -7.073474884033203
    8. '):
' → logprob: -7.323474884033203
    9. ')' → logprob: -7.948474884033203
    10. '(high' → logprob: -7.948474884033203

Token 319: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.02975720353424549
    2. ' low' → logprob: -3.529757261276245
    3. 'high' → logprob: -12.154757499694824
    4. '               ' → logprob: -14.529757499694824
    5. '           ' → logprob: -15.279757499694824
    6. '
' → logprob: -15.404757499694824
    7. '.low' → logprob: -15.404757499694824
    8. '   ' → logprob: -16.154756546020508
    9. ' high' → logprob: -16.404756546020508
    10. '_low' → logprob: -16.654756546020508

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740784466266632
    2. '=' → logprob: -0.9740784168243408
    3. '<|end|>' → logprob: -13.974078178405762
    4. ' ' → logprob: -15.849078178405762
    5. ',' → logprob: -16.349079132080078
    6. '=end' → logprob: -16.849079132080078
    7. '=cut' → logprob: -17.224079132080078
    8. '=}' → logprob: -17.349079132080078
    9. '=line' → logprob: -17.349079132080078
    10. '=center' → logprob: -17.599079132080078

Token 321: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.2519296407699585
    2. 'mid' → logprob: -1.5019296407699585
    3. '(mid' → logprob: -15.00192928314209
    4. ' midpoint' → logprob: -16.501930236816406
    5. '[mid' → logprob: -16.876930236816406
    6. '_mid' → logprob: -17.001930236816406
    7. '.mid' → logprob: -18.626930236816406
    8. ' mids' → logprob: -18.751930236816406
    9. ' middle' → logprob: -19.376930236816406
    10. 'middle' → logprob: -20.501930236816406

Token 322: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052251022309064865
    2. ' else' → logprob: -3.302251100540161
    3. 'else' → logprob: -4.302250862121582
    4. '
' → logprob: -7.927250862121582
    5. '<|end|>' → logprob: -9.052250862121582
    6. '       ' → logprob: -10.927250862121582
    7. '            
' → logprob: -11.052250862121582
    8. '               ' → logprob: -11.052250862121582
    9. '[' → logprob: -11.927250862121582
    10. '    
' → logprob: -12.177250862121582

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05564695596694946
    2. 'else' → logprob: -3.1806468963623047
    3. ' else' → logprob: -4.430646896362305
    4. '
' → logprob: -7.555646896362305
    5. '       ' → logprob: -10.180646896362305
    6. '<|end|>' → logprob: -10.680646896362305
    7. '```' → logprob: -11.055646896362305
    8. 'high' → logprob: -11.055646896362305
    9. '               ' → logprob: -11.180646896362305
    10. '            
' → logprob: -11.555646896362305

Token 324: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.028392717242240906
    2. ' else' → logprob: -3.778392791748047
    3. '       ' → logprob: -5.278392791748047
    4. '           ' → logprob: -10.403392791748047
    5. '	else' → logprob: -13.528392791748047
    6. '```' → logprob: -14.028392791748047
    7. '   ' → logprob: -14.278392791748047
    8. '#else' → logprob: -17.153392791748047
    9. '_else' → logprob: -17.278392791748047
    10. '
' → logprob: -18.028392791748047

Token 325: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04063618928194046
    2. '               ' → logprob: -3.6656363010406494
    3. ':' → logprob: -4.54063606262207
    4. '           ' → logprob: -5.79063606262207
    5. ' high' → logprob: -8.41563606262207
    6. '):
' → logprob: -9.54063606262207
    7. '       ' → logprob: -9.91563606262207
    8. 'high' → logprob: -10.29063606262207
    9. '              ' → logprob: -10.79063606262207
    10. ':

' → logprob: -11.04063606262207

Token 326: '               ' (ID: 506)
  Prédit: ' high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.33161279559135437
    2. 'high' → logprob: -1.3316128253936768
    3. '               ' → logprob: -4.206612586975098
    4. '       ' → logprob: -5.956612586975098
    5. '           ' → logprob: -7.706612586975098
    6. '   ' → logprob: -8.581612586975098
    7. '(high' → logprob: -10.956612586975098
    8. '_high' → logprob: -11.331612586975098
    9. '.high' → logprob: -11.331612586975098
    10. '
' → logprob: -11.706612586975098

Token 327: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.011055837385356426
    2. ' high' → logprob: -4.511055946350098
    3. '               ' → logprob: -12.761055946350098
    4. '   ' → logprob: -13.511055946350098
    5. '_high' → logprob: -14.011055946350098
    6. '.high' → logprob: -14.136055946350098
    7. '           ' → logprob: -14.261055946350098
    8. '       ' → logprob: -14.261055946350098
    9. '(high' → logprob: -14.636055946350098
    10. 'High' → logprob: -15.386055946350098

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. '=end' → logprob: -18.27975082397461
    4. ' ' → logprob: -18.65475082397461
    5. ')' → logprob: -19.77975082397461
    6. '＝' → logprob: -20.02975082397461
    7. '=cut' → logprob: -20.27975082397461
    8. '<|end|>' → logprob: -20.27975082397461
    9. ' =
' → logprob: -20.52975082397461
    10. '[mid' → logprob: -20.90475082397461

Token 329: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.03804149478673935
    2. ' mid' → logprob: -3.288041591644287
    3. '[mid' → logprob: -17.913042068481445
    4. '(mid' → logprob: -17.913042068481445
    5. 'middle' → logprob: -19.788042068481445
    6. '_mid' → logprob: -19.788042068481445
    7. ' midpoint' → logprob: -20.163042068481445
    8. '.mid' → logprob: -21.038042068481445
    9. 'm' → logprob: -22.038042068481445
    10. 'midt' → logprob: -22.413042068481445

Token 330: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007606726721860468
    2. '   ' → logprob: -8.125761032104492
    3. '
' → logprob: -8.250761032104492
    4. 'print' → logprob: -9.500761032104492
    5. 'else' → logprob: -9.875761032104492
    6. ' else' → logprob: -10.625761032104492
    7. '<|end|>' → logprob: -11.250761032104492
    8. '        
' → logprob: -11.625761032104492
    9. '    
' → logprob: -12.250761032104492
    10. ' print' → logprob: -12.250761032104492

Token 331: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8180073499679565
    2. '       ' → logprob: -0.8180073499679565
    3. 'print' → logprob: -2.693007469177246
    4. ' print' → logprob: -3.443007469177246
    5. '```' → logprob: -4.693007469177246
    6. '
' → logprob: -5.193007469177246
    7. ' return' → logprob: -7.068007469177246
    8. ' else' → logprob: -8.068007469177246
    9. 'else' → logprob: -8.068007469177246
    10. '	print' → logprob: -8.568007469177246

Token 332: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004966066684573889
    2. ' print' → logprob: -5.3799662590026855
    3. '   ' → logprob: -8.004965782165527
    4. '
' → logprob: -12.629965782165527
    5. '```' → logprob: -12.629965782165527
    6. '       ' → logprob: -13.254965782165527
    7. ')' → logprob: -13.254965782165527
    8. 'return' → logprob: -14.129965782165527
    9. '	print' → logprob: -15.129965782165527
    10. '#print' → logprob: -15.379965782165527

Token 333: '("%.' (ID: 110073)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.006172894034534693
    2. '("{' → logprob: -5.2561726570129395
    3. '("%.' → logprob: -7.6311726570129395
    4. '("' → logprob: -8.881173133850098
    5. '(int' → logprob: -9.256173133850098
    6. '('{' → logprob: -9.631173133850098
    7. '(round' → logprob: -10.131173133850098
    8. '(' → logprob: -10.256173133850098
    9. '(format' → logprob: -10.381173133850098
    10. '('' → logprob: -10.631173133850098

Token 334: '7' (ID: 22)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7993894219398499
    2. '10' → logprob: -1.674389362335205
    3. '12' → logprob: -2.174389362335205
    4. '6' → logprob: -2.549389362335205
    5. '7' → logprob: -2.924389362335205
    6. '8' → logprob: -2.924389362335205
    7. '11' → logprob: -3.799389362335205
    8. '15' → logprob: -4.174389362335205
    9. '13' → logprob: -4.424389362335205
    10. '14' → logprob: -4.799389362335205

Token 335: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. 'g' → logprob: -16.375
    3. ' f' → logprob: -18.25
    4. 'lf' → logprob: -18.625
    5. 'e' → logprob: -20.875
    6. '%' → logprob: -21.0
    7. '```' → logprob: -21.125
    8. '	f' → logprob: -21.25
    9. 'F' → logprob: -21.75
    10. '
' → logprob: -22.0

Token 336: '"%' (ID: 77104)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04452701285481453
    2. '"%' → logprob: -3.294527053833008
    3. '"%(' → logprob: -5.044527053833008
    4. '"(' → logprob: -11.169527053833008
    5. '(low' → logprob: -12.669527053833008
    6. ' "' → logprob: -14.294527053833008
    7. '%"' → logprob: -14.669527053833008
    8. ''%' → logprob: -14.669527053833008
    9. '%' → logprob: -15.419527053833008
    10. '("%' → logprob: -15.419527053833008

Token 337: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0009863656014204025
    2. ' low' → logprob: -7.000986576080322
    3. '(low' → logprob: -9.500986099243164
    4. 'high' → logprob: -17.000986099243164
    5. '((' → logprob: -17.875986099243164
    6. '(' → logprob: -18.000986099243164
    7. ' (' → logprob: -19.500986099243164
    8. ')' → logprob: -19.750986099243164
    9. 'float' → logprob: -20.250986099243164
    10. 'Low' → logprob: -20.500986099243164

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.015305552864447e-05
    2. '())' → logprob: -10.500060081481934
    3. ' )' → logprob: -10.625060081481934
    4. ')
' → logprob: -12.875060081481934
    5. '()' → logprob: -13.500060081481934
    6. '<|end|>' → logprob: -13.875060081481934
    7. '*' → logprob: -14.500060081481934
    8. '))' → logprob: -14.750060081481934
    9. '```' → logprob: -15.125060081481934
    10. ')#' → logprob: -15.125060081481934

Token 339: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.578184497309849e-05
    2. ' if' → logprob: -10.375085830688477
    3. '<|end|>' → logprob: -10.375085830688477
    4. '
' → logprob: -11.125085830688477
    5. '```' → logprob: -12.000085830688477
    6. '    
' → logprob: -14.500085830688477
    7. '        
' → logprob: -14.500085830688477
    8. '  
' → logprob: -14.875085830688477
    9. '#' → logprob: -15.375085830688477
    10. '__' → logprob: -16.125085830688477

Token 341: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4741896390914917
    2. '__' → logprob: -0.9741896390914917
    3. '_' → logprob: -9.849189758300781
    4. ' ' → logprob: -10.974189758300781
    5. 'name' → logprob: -11.224189758300781
    6. '_name' → logprob: -11.599189758300781
    7. '___' → logprob: -11.849189758300781
    8. ' ' → logprob: -12.349189758300781
    9. '  ' → logprob: -12.724189758300781
    10. '/__' → logprob: -13.849189758300781

Token 342: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.389961838722229
    2. ' ==' → logprob: -1.389961838722229
    3. '==' → logprob: -2.6399617195129395
    4. '=="' → logprob: -6.2649617195129395
    5. '=='' → logprob: -8.639962196350098
    6. '__.__' → logprob: -8.889962196350098
    7. ' __' → logprob: -9.389962196350098
    8. '__.' → logprob: -9.514962196350098
    9. '.__' → logprob: -10.514962196350098
    10. ' =="' → logprob: -11.389962196350098

Token 343: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00020020268857479095
    2. '__.__' → logprob: -8.750200271606445
    3. '==' → logprob: -10.250200271606445
    4. '__.' → logprob: -12.625200271606445
    5. '__('' → logprob: -14.000200271606445
    6. '__["' → logprob: -14.375200271606445
    7. ' ==' → logprob: -14.500200271606445
    8. '=="' → logprob: -14.875200271606445
    9. '___' → logprob: -15.875200271606445
    10. '=='' → logprob: -16.125200271606445

Token 344: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008757093921303749
    2. '==' → logprob: -5.0087571144104
    3. ' ==' → logprob: -6.3837571144104
    4. '=="' → logprob: -8.133756637573242
    5. '=='' → logprob: -10.008756637573242
    6. '__.__' → logprob: -12.008756637573242
    7. '___' → logprob: -13.383756637573242
    8. '===' → logprob: -13.758756637573242
    9. '_' → logprob: -14.008756637573242
    10. '__('' → logprob: -14.883756637573242

Token 345: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02325526252388954
    2. ''' → logprob: -3.7732553482055664
    3. ' "__' → logprob: -11.773255348205566
    4. '__' → logprob: -13.648255348205566
    5. ''"' → logprob: -15.398255348205566
    6. ' '__' → logprob: -15.523255348205566
    7. '"user' → logprob: -16.02325439453125
    8. '"name' → logprob: -16.39825439453125
    9. '"'' → logprob: -16.64825439453125
    10. '"_' → logprob: -17.39825439453125

Token 346: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.039200812578201294
    2. '__' → logprob: -3.289200782775879
    3. '"' → logprob: -6.789200782775879
    4. 'name' → logprob: -11.289200782775879
    5. ''' → logprob: -11.789200782775879
    6. '__":
' → logprob: -12.539200782775879
    7. 'built' → logprob: -12.914200782775879
    8. ' "__' → logprob: -13.664200782775879
    9. '_main' → logprob: -13.789200782775879
    10. ' main' → logprob: -14.289200782775879

Token 347: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.007065100595355034
    2. '__' → logprob: -5.007065296173096
    3. '__':
' → logprob: -8.007064819335938
    4. '__.' → logprob: -11.257064819335938
    5. '__.__' → logprob: -13.507064819335938
    6. '__["' → logprob: -13.507064819335938
    7. '__:' → logprob: -14.882064819335938
    8. '.' → logprob: -15.757064819335938
    9. '.__' → logprob: -16.007064819335938
    10. '__",' → logprob: -17.007064819335938

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18176381289958954
    2. 'main' → logprob: -1.931763768196106
    3. '	main' → logprob: -4.431763648986816
    4. ' main' → logprob: -4.681763648986816
    5. '<|end|>' → logprob: -9.931763648986816
    6. '_main' → logprob: -10.306763648986816
    7. '  ' → logprob: -10.806763648986816
    8. '   ' → logprob: -11.181763648986816
    9. '__' → logprob: -11.681763648986816
    10. ' ' → logprob: -11.681763648986816

Token 349: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.088346359931165e-07
    2. ' main' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.0
    4. '	main' → logprob: -21.0
    5. '.main' → logprob: -26.125
    6. '_main' → logprob: -27.375
    7. 'import' → logprob: -27.75
    8. '(main' → logprob: -27.75
    9. ' ' → logprob: -28.125
    10. 'Main' → logprob: -28.25

Token 350: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 348
Tokens correctement prédits (1ère position, stricte): 169
Tokens correctement prédits (1ère position, avec adaptation): 184
Tokens correctement prédits (top 10): 300
Précision stricte (1ère position): 48.56%
Précision adaptée (1ère position): 52.87%
Précision (top 10): 86.21%
================================================================================
