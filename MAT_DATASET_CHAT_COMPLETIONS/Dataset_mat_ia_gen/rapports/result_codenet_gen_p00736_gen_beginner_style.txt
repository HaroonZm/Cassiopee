================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def eval_formula(formula, vals):
    # vals is a dict {'P':0/1/2, 'Q':0/1/2, 'R':0/1/2}
    if formula == '0':
        return 0
    if formula == '1':
        return 1
    if formula == '2':
        return 2
    if formula == 'P':
        return vals['P']
    if formula == 'Q':
        return vals['Q']
    if formula == 'R':
        return vals['R']
    if formula[0] == '-':
        val = eval_formula(formula[1:], vals)
        if val == 0:
            return 2
        if val == 1:
            return 1
        if val == 2:
            return 0
    if formula[0] == '(':
        # find operator position
        # formula is like (X*Y) or (X+Y)
        # find main operator that splits formula in two subformulas
        level = 0
        for i in range(1, len(formula)-1):
            if formula[i] == '(':
                level += 1
            elif formula[i] == ')':
                level -= 1
            elif (formula[i] == '*' or formula[i] == '+') and level == 0:
                op_pos = i
                break
        left = formula[1:op_pos]
        right = formula[op_pos+1:-1]
        valL = eval_formula(left, vals)
        valR = eval_formula(right, vals)
        if formula[op_pos] == '*':
            # and operation
            # 3-valued logic and:
            # 0*0=0,0*1=0,0*2=0
            # 1*0=0,1*1=1,1*2=1
            # 2*0=0,2*1=1,2*2=2
            if valL == 0 or valR == 0:
                return 0
            elif valL == 1 or valR == 1:
                return 1
            else:
                return 2
        else:
            # or operation '+'
            # 0+0=0,0+1=1,0+2=2
            # 1+0=1,1+1=1,1+2=2
            # 2+0=2,2+1=2,2+2=2
            if valL == 2 or valR == 2:
                return 2
            elif valL == 1 or valR == 1:
                return 1
            else:
                return 0

count_2 = []
while True:
    line = input()
    if line == '.':
        break
    count = 0
    for P in [0,1,2]:
        for Q in [0,1,2]:
            for R in [0,1,2]:
                vals = {'P':P,'Q':Q,'R':R}
                if eval_formula(line, vals) == 2:
                    count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' eval' (ID: 29383)
  → Token d'amorce (pas de prédiction)

Token 2: '_formula' (ID: 188631)
  → Token d'amorce (pas de prédiction)

Token 3: '(form' (ID: 33445)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03178927302360535
    2. '_' → logprob: -3.5317893028259277
    3. '```' → logprob: -7.281789302825928
    4. '(:' → logprob: -7.656789302825928
    5. '(_:' → logprob: -8.03178882598877
    6. '("("' → logprob: -9.65678882598877
    7. '(_' → logprob: -9.65678882598877
    8. '('' → logprob: -10.03178882598877
    9. '(`' → logprob: -10.03178882598877
    10. '_:' → logprob: -10.15678882598877

Token 4: 'ula' (ID: 3419)
  Prédit: 'ula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -0.034986719489097595
    2. '_' → logprob: -3.409986734390259
    3. ')' → logprob: -7.78498649597168
    4. 'u' → logprob: -8.15998649597168
    5. '(' → logprob: -8.28498649597168
    6. '```' → logprob: -9.03498649597168
    7. '_formula' → logprob: -9.90998649597168
    8. '_a' → logprob: -10.28498649597168
    9. 'ul' → logprob: -10.78498649597168
    10. 'a' → logprob: -10.78498649597168

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11521326005458832
    2. ')' → logprob: -2.24021315574646
    3. ':' → logprob: -6.490213394165039
    4. '[' → logprob: -7.740213394165039
    5. '(' → logprob: -8.865213394165039
    6. '):
' → logprob: -9.240213394165039
    7. ',' → logprob: -10.240213394165039
    8. '():' → logprob: -10.365213394165039
    9. '```' → logprob: -10.990213394165039
    10. '<|end|>' → logprob: -10.990213394165039

Token 6: ' vals' (ID: 58985)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.8460061550140381
    2. ' context' → logprob: -1.221006155014038
    3. ' data' → logprob: -1.971006155014038
    4. ' values' → logprob: -3.346006155014038
    5. ' params' → logprob: -3.846006155014038
    6. ' args' → logprob: -4.346006393432617
    7. ' formula' → logprob: -4.596006393432617
    8. ' env' → logprob: -4.721006393432617
    9. ' x' → logprob: -4.721006393432617
    10. 'data' → logprob: -5.096006393432617

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00854022428393364
    2. ')' → logprob: -4.883540153503418
    3. ',' → logprob: -7.383540153503418
    4. '[' → logprob: -8.758540153503418
    5. ':' → logprob: -9.633540153503418
    6. '```' → logprob: -10.758540153503418
    7. '):
' → logprob: -10.883540153503418
    8. ''):' → logprob: -11.383540153503418
    9. 's' → logprob: -11.758540153503418
    10. ' ):' → logprob: -12.258540153503418

Token 8: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9094056487083435
    2. ''' → logprob: -1.6594057083129883
    3. '   ' → logprob: -1.6594057083129883
    4. ':' → logprob: -1.7844057083129883
    5. '"' → logprob: -3.6594057083129883
    6. '```' → logprob: -4.159405708312988
    7. '(:' → logprob: -7.034405708312988
    8. ''''' → logprob: -7.284405708312988
    9. '    
' → logprob: -7.284405708312988
    10. '"""' → logprob: -7.284405708312988

Token 9: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040281396359205246
    2. '    ' → logprob: -4.540281295776367
    3. '```' → logprob: -4.665281295776367
    4. ' return' → logprob: -4.915281295776367
    5. 'return' → logprob: -5.540281295776367
    6. '       ' → logprob: -6.415281295776367
    7. '\' → logprob: -6.665281295776367
    8. ' ' → logprob: -6.790281295776367
    9. '    
' → logprob: -7.415281295776367
    10. '(' → logprob: -7.665281295776367

Token 10: ' vals' (ID: 58985)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6244792938232422
    2. ' return' → logprob: -1.7494792938232422
    3. '    ' → logprob: -2.499479293823242
    4. 'return' → logprob: -2.999479293823242
    5. ' if' → logprob: -3.124479293823242
    6. ' ' → logprob: -3.124479293823242
    7. ' pass' → logprob: -4.124479293823242
    8. 'result' → logprob: -4.624479293823242
    9. ' """' → logprob: -4.874479293823242
    10. ' #' → logprob: -5.249479293823242

Token 11: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.62828129529953
    2. '=' → logprob: -1.7532813549041748
    3. ' is' → logprob: -2.003281354904175
    4. ')' → logprob: -3.128281354904175
    5. '[' → logprob: -3.253281354904175
    6. '.get' → logprob: -3.753281354904175
    7. '.' → logprob: -4.628281116485596
    8. ' ' → logprob: -4.753281116485596
    9. ',' → logprob: -5.003281116485596
    10. '   ' → logprob: -5.628281116485596

Token 12: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.005959256552159786
    2. 'a' → logprob: -5.7559590339660645
    3. ' {' → logprob: -6.7559590339660645
    4. ' ' → logprob: -7.6309590339660645
    5. ' {'' → logprob: -8.005959510803223
    6. '{' → logprob: -8.630959510803223
    7. ' the' → logprob: -8.755959510803223
    8. ' {}' → logprob: -8.880959510803223
    9. '{}' → logprob: -9.505959510803223
    10. 'dict' → logprob: -10.255959510803223

Token 13: ' dict' (ID: 11878)
  Prédit: ' dictionary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dictionary' → logprob: -0.597154974937439
    2. ' dict' → logprob: -0.847154974937439
    3. 'dict' → logprob: -4.0971550941467285
    4. ' list' → logprob: -6.2221550941467285
    5. 'dictionary' → logprob: -6.3471550941467285
    6. ' {' → logprob: -8.34715461730957
    7. ' function' → logprob: -9.22215461730957
    8. ' ' → logprob: -9.72215461730957
    9. ' defaultdict' → logprob: -10.59715461730957
    10. ' {'' → logprob: -10.72215461730957

Token 14: ' {'' (ID: 11881)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5400905609130859
    2. '   ' → logprob: -1.290090560913086
    3. '.' → logprob: -2.540090560913086
    4. ':' → logprob: -3.790090560913086
    5. ',' → logprob: -4.290090560913086
    6. '[
' → logprob: -5.290090560913086
    7. ''' → logprob: -5.665090560913086
    8. '(' → logprob: -5.790090560913086
    9. ')' → logprob: -5.915090560913086
    10. '```' → logprob: -6.040090560913086

Token 15: 'P' (ID: 47)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9428596496582031
    2. 'var' → logprob: -1.1928596496582031
    3. 'variable' → logprob: -1.6928596496582031
    4. 'a' → logprob: -2.442859649658203
    5. 'symbol' → logprob: -4.567859649658203
    6. 'A' → logprob: -4.817859649658203
    7. 'key' → logprob: -5.567859649658203
    8. 'val' → logprob: -6.192859649658203
    9. 'value' → logprob: -6.317859649658203
    10. 'name' → logprob: -6.317859649658203

Token 16: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0942189022898674
    2. ' ':' → logprob: -3.2192189693450928
    3. ',' → logprob: -3.5942189693450928
    4. ''' → logprob: -5.719218730926514
    5. ' ,' → logprob: -5.844218730926514
    6. '}' → logprob: -6.219218730926514
    7. ':' → logprob: -6.344218730926514
    8. '1' → logprob: -6.469218730926514
    9. ''}' → logprob: -6.844218730926514
    10. ' :' → logprob: -6.844218730926514

Token 17: '0' (ID: 15)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.038775574415922165
    2. 'True' → logprob: -3.413775682449341
    3. ' bool' → logprob: -6.038775444030762
    4. 'bool' → logprob: -7.163775444030762
    5. ' int' → logprob: -7.413775444030762
    6. ' ' → logprob: -8.038775444030762
    7. ' False' → logprob: -8.163775444030762
    8. ' value' → logprob: -8.538775444030762
    9. '0' → logprob: -9.163775444030762
    10. ' float' → logprob: -9.288775444030762

Token 18: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014508993364870548
    2. '}' → logprob: -5.014509201049805
    3. ' ,' → logprob: -5.514509201049805
    4. ' or' → logprob: -6.139509201049805
    5. ','' → logprob: -7.639509201049805
    6. '',' → logprob: -8.139509201049805
    7. '.' → logprob: -8.764509201049805
    8. ',
' → logprob: -8.764509201049805
    9. ' }' → logprob: -9.014509201049805
    10. 'or' → logprob: -9.389509201049805

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34824955463409424
    2. ',' → logprob: -1.5982495546340942
    3. ' ' → logprob: -2.5982494354248047
    4. ' ,' → logprob: -4.473249435424805
    5. ' or' → logprob: -5.848249435424805
    6. 'or' → logprob: -7.723249435424805
    7. '.' → logprob: -7.848249435424805
    8. '  ' → logprob: -7.973249435424805
    9. '   ' → logprob: -8.098249435424805
    10. ''' → logprob: -8.348249435424805

Token 20: '/' (ID: 14)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07304773479700089
    2. ' }' → logprob: -2.948047637939453
    3. ',' → logprob: -4.073047637939453
    4. '}:' → logprob: -7.823047637939453
    5. ''}' → logprob: -8.323047637939453
    6. ' ,' → logprob: -9.448047637939453
    7. '   ' → logprob: -9.698047637939453
    8. ' }:' → logprob: -9.823047637939453
    9. ' ' → logprob: -10.323047637939453
    10. ''' → logprob: -11.073047637939453

Token 21: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19685004651546478
    2. ' ' → logprob: -2.321850061416626
    3. 'None' → logprob: -3.821850061416626
    4. ''' → logprob: -4.196849822998047
    5. ' None' → logprob: -4.571849822998047
    6. '2' → logprob: -4.571849822998047
    7. ' }' → logprob: -4.821849822998047
    8. '}' → logprob: -4.946849822998047
    9. 'True' → logprob: -5.821849822998047
    10. ' True' → logprob: -6.571849822998047

Token 22: ',' (ID: 11)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.12539951503276825
    2. ',' → logprob: -2.375399589538574
    3. ' }' → logprob: -3.875399589538574
    4. ''}' → logprob: -6.000399589538574
    5. ' ,' → logprob: -7.125399589538574
    6. '',' → logprob: -8.250399589538574
    7. '   ' → logprob: -9.125399589538574
    8. ''' → logprob: -9.250399589538574
    9. '}:' → logprob: -9.375399589538574
    10. ')' → logprob: -9.750399589538574

Token 23: ' '' (ID: 461)
  Prédit: ' }'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' }' → logprob: -0.70951908826828
    2. '}' → logprob: -1.3345191478729248
    3. ',' → logprob: -2.834519147872925
    4. ''' → logprob: -2.834519147872925
    5. '   ' → logprob: -3.209519147872925
    6. ')' → logprob: -3.834519147872925
    7. ' ,' → logprob: -4.334518909454346
    8. '):' → logprob: -4.584518909454346
    9. ' '' → logprob: -4.959518909454346
    10. ' '}' → logprob: -5.334518909454346

Token 24: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.021807415410876274
    2. ' Q' → logprob: -4.8968071937561035
    3. ''' → logprob: -5.1468071937561035
    4. 'P' → logprob: -6.1468071937561035
    5. 'A' → logprob: -6.7718071937561035
    6. 'T' → logprob: -7.0218071937561035
    7. ')' → logprob: -7.0218071937561035
    8. 'O' → logprob: -7.6468071937561035
    9. '')' → logprob: -7.6468071937561035
    10. ' ')' → logprob: -8.021807670593262

Token 25: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00417444109916687
    2. ''}' → logprob: -5.87917423248291
    3. '}' → logprob: -7.75417423248291
    4. ':' → logprob: -8.37917423248291
    5. '':'' → logprob: -8.75417423248291
    6. ''' → logprob: -9.00417423248291
    7. '):' → logprob: -9.12917423248291
    8. '}:' → logprob: -9.62917423248291
    9. '',' → logprob: -10.12917423248291
    10. ''):' → logprob: -10.37917423248291

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0612652562558651
    2. ' ' → logprob: -3.561265230178833
    3. '}' → logprob: -4.186265468597412
    4. ''' → logprob: -4.686265468597412
    5. ''}' → logprob: -6.061265468597412
    6. '1' → logprob: -7.186265468597412
    7. ' }' → logprob: -7.561265468597412
    8. '   ' → logprob: -7.561265468597412
    9. ' '' → logprob: -7.811265468597412
    10. '')' → logprob: -7.936265468597412

Token 27: '/' (ID: 14)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03943405672907829
    2. ''}' → logprob: -4.03943395614624
    3. ' }' → logprob: -4.53943395614624
    4. ',' → logprob: -4.66443395614624
    5. ' '}' → logprob: -8.664434432983398
    6. ')' → logprob: -9.289434432983398
    7. '   ' → logprob: -9.289434432983398
    8. '',' → logprob: -9.414434432983398
    9. ' ,' → logprob: -9.414434432983398
    10. '}:' → logprob: -10.164434432983398

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000145137935760431
    2. ' ' → logprob: -9.375144958496094
    3. '/' → logprob: -10.000144958496094
    4. '3' → logprob: -11.875144958496094
    5. '2' → logprob: -12.750144958496094
    6. '0' → logprob: -13.125144958496094
    7. '```' → logprob: -14.000144958496094
    8. '   ' → logprob: -14.875144958496094
    9. '  ' → logprob: -15.375144958496094
    10. ''' → logprob: -15.625144958496094

Token 29: '/' (ID: 14)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.10840218514204025
    2. ' }' → logprob: -2.9834022521972656
    3. ',' → logprob: -3.2334022521972656
    4. ''}' → logprob: -5.358402252197266
    5. ')' → logprob: -5.483402252197266
    6. ')}' → logprob: -6.608402252197266
    7. ' ,' → logprob: -7.483402252197266
    8. '})' → logprob: -7.733402252197266
    9. '[' → logprob: -8.108402252197266
    10. ','' → logprob: -8.608402252197266

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03625065088272095
    2. '}' → logprob: -3.911250591278076
    3. '/' → logprob: -4.286250591278076
    4. ''}' → logprob: -7.536250591278076
    5. ''' → logprob: -8.036251068115234
    6. ' ' → logprob: -8.911251068115234
    7. ' or' → logprob: -9.036251068115234
    8. 'or' → logprob: -9.286251068115234
    9. '```' → logprob: -9.536251068115234
    10. '})' → logprob: -9.661251068115234

Token 31: ',' (ID: 11)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.02227712608873844
    2. '}:' → logprob: -4.397277355194092
    3. '):' → logprob: -5.147277355194092
    4. ' }' → logprob: -6.397277355194092
    5. ',' → logprob: -6.647277355194092
    6. ' }):' → logprob: -8.272276878356934
    7. ''):' → logprob: -8.897276878356934
    8. '   ' → logprob: -8.897276878356934
    9. ')' → logprob: -9.022276878356934
    10. ' }:' → logprob: -9.147276878356934

Token 32: ' '' (ID: 461)
  Prédit: ' }'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' }' → logprob: -1.714015245437622
    2. '}' → logprob: -1.839015245437622
    3. ' '' → logprob: -1.839015245437622
    4. ''' → logprob: -2.089015245437622
    5. ',' → logprob: -2.589015245437622
    6. '   ' → logprob: -3.089015245437622
    7. ' '}' → logprob: -3.089015245437622
    8. ' ')' → logprob: -3.214015245437622
    9. ')' → logprob: -3.339015245437622
    10. '')' → logprob: -3.464015245437622

Token 33: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.018872084096074104
    2. ''' → logprob: -4.893872261047363
    3. ' R' → logprob: -6.143872261047363
    4. ' '' → logprob: -6.268872261047363
    5. 'P' → logprob: -6.393872261047363
    6. '}' → logprob: -7.018872261047363
    7. 'T' → logprob: -7.643872261047363
    8. 'A' → logprob: -7.893872261047363
    9. ''s' → logprob: -8.268872261047363
    10. ' ' → logprob: -8.331372261047363

Token 34: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.35293108224868774
    2. '}' → logprob: -1.602931022644043
    3. ''}' → logprob: -2.477931022644043
    4. '}:' → logprob: -4.602931022644043
    5. ':' → logprob: -7.102931022644043
    6. '):' → logprob: -7.727931022644043
    7. ',' → logprob: -8.352931022644043
    8. '':'' → logprob: -9.352931022644043
    9. ' }' → logprob: -9.477931022644043
    10. ')' → logprob: -9.602931022644043

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008816886693239212
    2. ''}' → logprob: -5.633816719055176
    3. ' ' → logprob: -5.758816719055176
    4. '}' → logprob: -7.258816719055176
    5. '':' → logprob: -8.133816719055176
    6. ''' → logprob: -8.133816719055176
    7. '/' → logprob: -9.258816719055176
    8. ':' → logprob: -9.383816719055176
    9. '1' → logprob: -9.383816719055176
    10. ''},' → logprob: -10.008816719055176

Token 36: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.37537986040115356
    2. '}' → logprob: -1.2503798007965088
    3. ''}' → logprob: -4.000380039215088
    4. ',' → logprob: -4.875380039215088
    5. '}:' → logprob: -9.62537956237793
    6. '':' → logprob: -9.62537956237793
    7. ':' → logprob: -9.62537956237793
    8. ' }' → logprob: -10.12537956237793
    9. '`}' → logprob: -10.62537956237793
    10. '<|end|>' → logprob: -10.62537956237793

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019509078934788704
    2. '2' → logprob: -4.019509315490723
    3. '3' → logprob: -8.019509315490723
    4. '}' → logprob: -8.144509315490723
    5. ''}' → logprob: -8.644509315490723
    6. '/' → logprob: -8.644509315490723
    7. ''' → logprob: -8.769509315490723
    8. ' ' → logprob: -9.269509315490723
    9. '```' → logprob: -10.269509315490723
    10. ')' → logprob: -11.269509315490723

Token 38: '/' (ID: 14)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0077811297960579395
    2. ''}' → logprob: -5.132781028747559
    3. ')' → logprob: -7.757781028747559
    4. ',' → logprob: -7.882781028747559
    5. '}:' → logprob: -7.882781028747559
    6. ' }' → logprob: -8.132781028747559
    7. ')}' → logprob: -9.257781028747559
    8. '}
' → logprob: -9.382781028747559
    9. '):' → logprob: -10.382781028747559
    10. '"}' → logprob: -10.632781028747559

Token 39: '2' (ID: 17)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03764008730649948
    2. ''}' → logprob: -3.53764009475708
    3. ')' → logprob: -5.91264009475708
    4. ''' → logprob: -6.41264009475708
    5. ')}' → logprob: -6.78764009475708
    6. '})' → logprob: -7.16264009475708
    7. '3' → logprob: -8.037639617919922
    8. ' }' → logprob: -8.162639617919922
    9. '')' → logprob: -8.287639617919922
    10. '}:' → logprob: -8.537639617919922

Token 40: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.009901518002152443
    2. ')' → logprob: -5.759901523590088
    3. ',' → logprob: -6.134901523590088
    4. '):' → logprob: -6.259901523590088
    5. '}:' → logprob: -7.134901523590088
    6. ' }' → logprob: -7.134901523590088
    7. ''}' → logprob: -7.259901523590088
    8. '   ' → logprob: -9.88490104675293
    9. ''):' → logprob: -10.13490104675293
    10. ''' → logprob: -10.13490104675293

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6644707322120667
    2. ':' → logprob: -0.7894707322120667
    3. ' ' → logprob: -4.289470672607422
    4. ')' → logprob: -5.164470672607422
    5. ',' → logprob: -6.164470672607422
    6. '```' → logprob: -6.164470672607422
    7. ''' → logprob: -6.414470672607422
    8. ' :' → logprob: -6.789470672607422
    9. '    ' → logprob: -7.414470672607422
    10. '"' → logprob: -7.414470672607422

Token 42: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30824851989746094
    2. ' ' → logprob: -1.808248519897461
    3. ':' → logprob: -3.683248519897461
    4. ')' → logprob: -4.308248519897461
    5. ',' → logprob: -4.683248519897461
    6. 'i' → logprob: -4.808248519897461
    7. ' 
' → logprob: -5.058248519897461
    8. ' i' → logprob: -5.308248519897461
    9. '(' → logprob: -5.433248519897461
    10. '    ' → logprob: -5.808248519897461

Token 43: ' formula' (ID: 20690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0980522483587265
    2. ' '' → logprob: -2.9730522632598877
    3. ' not' → logprob: -3.4730522632598877
    4. ''' → logprob: -5.223052024841309
    5. ' formula' → logprob: -6.723052024841309
    6. '  ' → logprob: -6.973052024841309
    7. ' "' → logprob: -7.098052024841309
    8. '"' → logprob: -7.598052024841309
    9. ' isinstance' → logprob: -7.723052024841309
    10. 'formula' → logprob: -8.098052024841309

Token 44: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2264976054430008
    2. ' ==' → logprob: -2.1014976501464844
    3. '.' → logprob: -3.2264976501464844
    4. ' ' → logprob: -4.226497650146484
    5. '.startswith' → logprob: -4.726497650146484
    6. ' .' → logprob: -5.601497650146484
    7. '[:]' → logprob: -6.351497650146484
    8. '==' → logprob: -6.476497650146484
    9. '[]' → logprob: -6.726497650146484
    10. '<|end|>' → logprob: -7.226497650146484

Token 45: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.059737347066402435
    2. '"' → logprob: -2.93473744392395
    3. '''' → logprob: -5.809737205505371
    4. ' '' → logprob: -6.559737205505371
    5. ' "' → logprob: -8.684737205505371
    6. '""' → logprob: -8.809737205505371
    7. ' ''' → logprob: -10.059737205505371
    8. ' ' → logprob: -10.684737205505371
    9. ''"' → logprob: -10.934737205505371
    10. ''''' → logprob: -11.934737205505371

Token 46: '0' (ID: 15)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.004286030773073435
    2. ''' → logprob: -6.00428581237793
    3. ' P' → logprob: -8.12928581237793
    4. '')' → logprob: -8.12928581237793
    5. 'T' → logprob: -8.37928581237793
    6. 'True' → logprob: -8.62928581237793
    7. '('' → logprob: -8.75428581237793
    8. ' '' → logprob: -9.37928581237793
    9. '0' → logprob: -10.00428581237793
    10. 'AND' → logprob: -10.12928581237793

Token 47: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40623238682746887
    2. '':' → logprob: -1.1562323570251465
    3. ':' → logprob: -4.9062323570251465
    4. ''):' → logprob: -5.0312323570251465
    5. ' ':' → logprob: -6.2812323570251465
    6. '')' → logprob: -6.2812323570251465
    7. ' '' → logprob: -6.7812323570251465
    8. '):' → logprob: -8.906232833862305
    9. ')' → logprob: -9.406232833862305
    10. '':'' → logprob: -10.656232833862305

Token 48: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3057425618171692
    2. '    ' → logprob: -2.5557425022125244
    3. '   ' → logprob: -2.6807425022125244
    4. ':' → logprob: -2.8057425022125244
    5. '       ' → logprob: -3.4307425022125244
    6. ' :' → logprob: -4.8057427406311035
    7. ' return' → logprob: -5.3057427406311035
    8. ':return' → logprob: -5.5557427406311035
    9. '  ' → logprob: -6.1807427406311035
    10. '0' → logprob: -6.3057427406311035

Token 49: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7854316234588623
    2. ' return' → logprob: -0.9104316234588623
    3. '       ' → logprob: -2.9104316234588623
    4. '0' → logprob: -3.1604316234588623
    5. 'return' (adapté à ' return') → logprob: -4.410431861877441
    6. '   ' → logprob: -4.535431861877441
    7. ' ' → logprob: -5.160431861877441
    8. '    ' → logprob: -5.285431861877441
    9. ':return' → logprob: -5.410431861877441
    10. ' 
' → logprob: -6.410431861877441

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4741969108581543
    2. '0' → logprob: -0.9741969108581543
    3. ' False' → logprob: -9.849197387695312
    4. 'False' → logprob: -9.974197387695312
    5. ' '' → logprob: -12.224197387695312
    6. ''' → logprob: -12.599197387695312
    7. '2' → logprob: -12.849197387695312
    8. '1' → logprob: -13.099197387695312
    9. '  ' → logprob: -13.224197387695312
    10. ' ' → logprob: -13.411697387695312

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007811574032530189
    2. ' ' → logprob: -7.375781059265137
    3. ''' → logprob: -9.125781059265137
    4. 'False' → logprob: -10.250781059265137
    5. '[' → logprob: -12.625781059265137
    6. '"' → logprob: -13.250781059265137
    7. '1' → logprob: -14.250781059265137
    8. ' False' → logprob: -14.375781059265137
    9. ' '' → logprob: -14.438281059265137
    10. '`' → logprob: -14.500781059265137

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8076959252357483
    2. '\n' → logprob: -0.8076959252357483
    3. '
' → logprob: -2.9326958656311035
    4. ' ' → logprob: -4.6826958656311035
    5. ' 
' → logprob: -4.6826958656311035
    6. '    
' → logprob: -4.6826958656311035
    7. '```' → logprob: -5.1826958656311035
    8. 'elif' → logprob: -5.8076958656311035
    9. '<|end|>' → logprob: -5.8076958656311035
    10. ' elif' → logprob: -5.8076958656311035

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07392682880163193
    2. '\n' → logprob: -3.1989269256591797
    3. '```' → logprob: -4.82392692565918
    4. 'elif' → logprob: -5.19892692565918
    5. '    
' → logprob: -5.44892692565918
    6. ' elif' → logprob: -5.69892692565918
    7. ' ' → logprob: -5.82392692565918
    8. '
' → logprob: -6.57392692565918
    9. ')' → logprob: -6.82392692565918
    10. '   
' → logprob: -7.32392692565918

Token 54: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.669441282749176
    2. 'elif' → logprob: -1.5444412231445312
    3. '   ' → logprob: -1.9194412231445312
    4. ' ' → logprob: -2.9194412231445312
    5. ' elif' → logprob: -3.2944412231445312
    6. '```' → logprob: -4.419441223144531
    7. '    
' → logprob: -6.044441223144531
    8. ')' → logprob: -6.294441223144531
    9. '\' → logprob: -6.294441223144531
    10. '	elif' → logprob: -6.419441223144531

Token 55: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.10296399891376495
    2. 'formula' → logprob: -2.352963924407959
    3. ' ' → logprob: -6.852963924407959
    4. '_formula' → logprob: -7.602963924407959
    5. ' form' → logprob: -8.352964401245117
    6. ' '' → logprob: -8.477964401245117
    7. 'form' → logprob: -8.727964401245117
    8. ' ' → logprob: -9.102964401245117
    9. '(form' → logprob: -9.602964401245117
    10. '	form' → logprob: -9.602964401245117

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00614990433678031
    2. ' ' → logprob: -5.756149768829346
    3. '==' → logprob: -6.381149768829346
    4. '<|end|>' → logprob: -7.506149768829346
    5. ' =' → logprob: -8.006150245666504
    6. ' =='' → logprob: -8.756150245666504
    7. '[' → logprob: -9.881150245666504
    8. '=' → logprob: -10.381150245666504
    9. ' !=' → logprob: -10.631150245666504
    10. ' in' → logprob: -10.756150245666504

Token 57: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07907925546169281
    2. ' '' → logprob: -2.5790791511535645
    3. '"' → logprob: -8.954079627990723
    4. ' ' → logprob: -10.454079627990723
    5. '1' → logprob: -11.329079627990723
    6. ' ' → logprob: -12.204079627990723
    7. 'space' → logprob: -12.454079627990723
    8. ' "' → logprob: -13.391579627990723
    9. '`' → logprob: -13.579079627990723
    10. '('' → logprob: -13.641579627990723

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.000763510703109e-05
    2. ''' → logprob: -10.500040054321289
    3. ' ' → logprob: -11.625040054321289
    4. ' '' → logprob: -14.125040054321289
    5. '0' → logprob: -14.562540054321289
    6. '('' → logprob: -14.625040054321289
    7. '')' → logprob: -15.187540054321289
    8. '(' → logprob: -15.250040054321289
    9. ''s' → logprob: -15.437540054321289
    10. '' → logprob: -16.31254005432129

Token 59: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31871554255485535
    2. '':' → logprob: -1.3187155723571777
    3. '):' → logprob: -5.693715572357178
    4. ''' → logprob: -7.193715572357178
    5. '<|end|>' → logprob: -7.818715572357178
    6. '   ' → logprob: -8.06871509552002
    7. ')' → logprob: -8.44371509552002
    8. ''):' → logprob: -8.81871509552002
    9. '       ' → logprob: -9.69371509552002
    10. ':return' → logprob: -10.06871509552002

Token 60: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6945321559906006
    2. '       ' → logprob: -0.8195321559906006
    3. '   ' → logprob: -3.5695321559906006
    4. '<|end|>' → logprob: -4.31953239440918
    5. ':return' → logprob: -5.19453239440918
    6. ' ' → logprob: -5.19453239440918
    7. '    ' → logprob: -5.81953239440918
    8. ':
' → logprob: -6.19453239440918
    9. ' :' → logprob: -6.81953239440918
    10. '  ' → logprob: -8.44453239440918

Token 61: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6381692290306091
    2. '   ' → logprob: -1.888169288635254
    3. '1' → logprob: -2.138169288635254
    4. '       ' → logprob: -2.138169288635254
    5. ' return' → logprob: -3.138169288635254
    6. '<|end|>' → logprob: -4.138169288635254
    7. '    ' → logprob: -4.263169288635254
    8. ' ' → logprob: -5.638169288635254
    9. 'return' (adapté à ' return') → logprob: -5.763169288635254
    10. '  ' → logprob: -6.513169288635254

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34845098853111267
    2. ' ' → logprob: -1.223451018333435
    3. ' ' → logprob: -12.348450660705566
    4. 'space' → logprob: -14.098450660705566
    5. '0' → logprob: -14.598450660705566
    6. '<|end|>' → logprob: -14.848450660705566
    7. '   ' → logprob: -16.473451614379883
    8. ' space' → logprob: -16.848451614379883
    9. '2' → logprob: -17.035951614379883
    10. '  ' → logprob: -17.160951614379883

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '0' → logprob: -15.7501802444458
    4. '   ' → logprob: -17.375179290771484
    5. '  ' → logprob: -17.562679290771484
    6. '<|end|>' → logprob: -18.000179290771484
    7. ' ' → logprob: -18.375179290771484
    8. '```' → logprob: -18.437679290771484
    9. '`' → logprob: -18.625179290771484
    10. '۱' → logprob: -19.000179290771484

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045833297073841095
    2. '<|end|>' → logprob: -4.545833110809326
    3. '\n' → logprob: -4.795833110809326
    4. '
' → logprob: -4.920833110809326
    5. '    
' → logprob: -5.170833110809326
    6. '  
' → logprob: -5.670833110809326
    7. '```' → logprob: -5.795833110809326
    8. ' 
' → logprob: -6.545833110809326
    9. '   
' → logprob: -6.795833110809326
    10. ' ' → logprob: -7.045833110809326

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6317482590675354
    2. ' 
' → logprob: -1.2567481994628906
    3. '```' → logprob: -3.1317481994628906
    4. '    
' → logprob: -3.5067481994628906
    5. '\n' → logprob: -3.6317481994628906
    6. '  
' → logprob: -3.8817481994628906
    7. ' ' → logprob: -4.006748199462891
    8. '   
' → logprob: -4.631748199462891
    9. '\' → logprob: -5.006748199462891
    10. '
' → logprob: -5.131748199462891

Token 66: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3598496913909912
    2. ' ' → logprob: -1.9848496913909912
    3. ' 
' → logprob: -3.484849691390991
    4. '```' → logprob: -3.734849691390991
    5. 'i' → logprob: -3.984849691390991
    6. 't' → logprob: -4.35984992980957
    7. '   
' → logprob: -4.85984992980957
    8. ' elif' → logprob: -4.98484992980957
    9. '  ' → logprob: -5.10984992980957
    10. ' ```' → logprob: -5.23484992980957

Token 67: ' formula' (ID: 20690)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.2574593722820282
    2. ' formula' → logprob: -2.0074594020843506
    3. ''' → logprob: -3.1324594020843506
    4. ' ' → logprob: -3.5074594020843506
    5. 'formula' → logprob: -4.1324591636657715
    6. ' form' → logprob: -7.5074591636657715
    7. '"' → logprob: -7.6324591636657715
    8. '  ' → logprob: -8.00745964050293
    9. 'form' → logprob: -8.25745964050293
    10. ' (' → logprob: -8.75745964050293

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016645951196551323
    2. '.startswith' → logprob: -5.141645908355713
    3. '==' → logprob: -5.266645908355713
    4. '[' → logprob: -5.641645908355713
    5. ' =='' → logprob: -7.891645908355713
    6. '<|end|>' → logprob: -8.141646385192871
    7. ' ' → logprob: -8.391646385192871
    8. ' in' → logprob: -9.016646385192871
    9. '[]' → logprob: -9.016646385192871
    10. ' '' → logprob: -9.266646385192871

Token 69: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.324397474527359
    2. ''' → logprob: -1.3243974447250366
    3. ' '('' → logprob: -5.699397563934326
    4. 'formula' → logprob: -6.699397563934326
    5. ' ' → logprob: -6.949397563934326
    6. ''A' → logprob: -7.199397563934326
    7. ' formula' → logprob: -7.324397563934326
    8. '"' → logprob: -7.449397563934326
    9. ''T' → logprob: -8.199397087097168
    10. ''S' → logprob: -8.199397087097168

Token 70: '2' (ID: 17)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.08440351486206055
    2. ''' → logprob: -2.5844035148620605
    3. '(P' → logprob: -6.7094035148620605
    4. '('' → logprob: -6.8344035148620605
    5. '(' → logprob: -7.0844035148620605
    6. '0' → logprob: -7.4594035148620605
    7. '')' → logprob: -7.7094035148620605
    8. ')' → logprob: -8.459403991699219
    9. ' P' → logprob: -8.709403991699219
    10. ' '' → logprob: -9.459403991699219

Token 71: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6550022959709167
    2. ''' → logprob: -0.7800022959709167
    3. ' ':' → logprob: -4.530002117156982
    4. ' '' → logprob: -4.780002117156982
    5. ':' → logprob: -6.280002117156982
    6. ''):' → logprob: -8.15500259399414
    7. ' ' → logprob: -8.28000259399414
    8. '<|end|>' → logprob: -8.65500259399414
    9. '):' → logprob: -10.15500259399414
    10. ')' → logprob: -10.40500259399414

Token 72: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8997937440872192
    2. ' ' → logprob: -1.2747937440872192
    3. ' vals' → logprob: -1.7747937440872192
    4. '(vals' → logprob: -2.7747936248779297
    5. '0' → logprob: -4.14979362487793
    6. ':' → logprob: -4.27479362487793
    7. '    ' → logprob: -4.52479362487793
    8. ' '' → logprob: -5.02479362487793
    9. 'return' → logprob: -5.64979362487793
    10. ' :' → logprob: -5.77479362487793

Token 73: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06905289739370346
    2. '2' → logprob: -2.8190529346466064
    3. ' vals' → logprob: -5.569052696228027
    4. '0' → logprob: -7.194052696228027
    5. 'vals' → logprob: -7.569052696228027
    6. '(vals' → logprob: -7.694052696228027
    7. '    ' → logprob: -7.819052696228027
    8. ' return' → logprob: -7.819052696228027
    9. ' val' → logprob: -8.944052696228027
    10. ' )' → logprob: -9.756552696228027

Token 74: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22541765868663788
    2. ' ' → logprob: -1.6004176139831543
    3. '0' → logprob: -13.100418090820312
    4. 'vals' → logprob: -13.975418090820312
    5. '1' → logprob: -14.662918090820312
    6. 'val' → logprob: -14.912918090820312
    7. ' vals' → logprob: -14.975418090820312
    8. '   ' → logprob: -15.225418090820312
    9. ' ' → logprob: -16.225418090820312
    10. '  ' → logprob: -16.412918090820312

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000454506283858791
    2. ' ' → logprob: -7.750454425811768
    3. '0' → logprob: -11.125454902648926
    4. 'vals' → logprob: -12.500454902648926
    5. '1' → logprob: -12.750454902648926
    6. 'val' → logprob: -13.875454902648926
    7. '   ' → logprob: -14.250454902648926
    8. ' vals' → logprob: -15.812954902648926
    9. '  ' → logprob: -15.937954902648926
    10. 'formula' → logprob: -16.37545394897461

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06277038902044296
    2. '    
' → logprob: -3.812770366668701
    3. '```' → logprob: -4.687770366668701
    4. ' 
' → logprob: -4.937770366668701
    5. '
' → logprob: -5.062770366668701
    6. '  
' → logprob: -5.312770366668701
    7. '\n' → logprob: -5.437770366668701
    8. '<|end|>' → logprob: -6.312770366668701
    9. '   
' → logprob: -6.437770366668701
    10. ' ' → logprob: -7.312770366668701

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.001220464706421
    2. ' 
' → logprob: -1.001220464706421
    3. '  
' → logprob: -2.501220464706421
    4. ' ' → logprob: -3.126220464706421
    5. '    
' → logprob: -3.501220464706421
    6. '   
' → logprob: -3.626220464706421
    7. '\n' → logprob: -3.876220464706421
    8. '<|end|>' → logprob: -4.001220703125
    9. '```' → logprob: -4.626220703125
    10. '[' → logprob: -5.001220703125

Token 78: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3835473656654358
    2. '[' → logprob: -2.758547306060791
    3. '   ' → logprob: -2.883547306060791
    4. '(' → logprob: -3.008547306060791
    5. ' )' → logprob: -3.383547306060791
    6. ' 
' → logprob: -4.133547306060791
    7. ''' → logprob: -4.133547306060791
    8. ' (' → logprob: -4.508547306060791
    9. '```' → logprob: -4.633547306060791
    10. ' `' → logprob: -5.008547306060791

Token 79: ' formula' (ID: 20690)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.2868115305900574
    2. ''' → logprob: -1.9118115901947021
    3. ' ' → logprob: -2.536811590194702
    4. ' formula' → logprob: -4.286811351776123
    5. 'formula' → logprob: -6.286811351776123
    6. '"' → logprob: -6.411811351776123
    7. ' len' → logprob: -6.786811351776123
    8. ' "' → logprob: -6.911811351776123
    9. ' isinstance' → logprob: -7.036811351776123
    10. ' form' → logprob: -7.786811351776123

Token 80: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4045506417751312
    2. ' ' → logprob: -1.5295506715774536
    3. ' in' → logprob: -3.654550552368164
    4. ' '' → logprob: -3.779550552368164
    5. '==' → logprob: -4.154550552368164
    6. ' =='' → logprob: -4.279550552368164
    7. ''' → logprob: -4.404550552368164
    8. '[' → logprob: -4.529550552368164
    9. '  ' → logprob: -5.529550552368164
    10. ' ' → logprob: -6.154550552368164

Token 81: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.44069430232048035
    2. ' '' → logprob: -1.0656943321228027
    3. ' formula' → logprob: -5.565694332122803
    4. 'formula' → logprob: -5.690694332122803
    5. ' isinstance' → logprob: -6.815694332122803
    6. '"' → logprob: -7.065694332122803
    7. ' ' → logprob: -7.690694332122803
    8. ' '('' → logprob: -7.940694332122803
    9. ''s' → logprob: -8.315693855285645
    10. 'form' → logprob: -8.440693855285645

Token 82: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.025647396221756935
    2. ''' → logprob: -4.775647163391113
    3. '('' → logprob: -4.775647163391113
    4. '(P' → logprob: -5.525647163391113
    5. 'formula' → logprob: -6.275647163391113
    6. ')' → logprob: -7.650647163391113
    7. 'Q' → logprob: -8.275647163391113
    8. '(' → logprob: -8.525647163391113
    9. 'A' → logprob: -8.650647163391113
    10. '0' → logprob: -9.025647163391113

Token 83: '':
' (ID: 7669)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.6614355444908142
    2. ''' → logprob: -0.9114355444908142
    3. '':' → logprob: -3.536435604095459
    4. '')' → logprob: -3.911435604095459
    5. ']' → logprob: -4.286435604095459
    6. ''}' → logprob: -4.786435604095459
    7. '}' → logprob: -5.536435604095459
    8. ')' → logprob: -5.911435604095459
    9. '}'' → logprob: -6.661435604095459
    10. '['' → logprob: -7.536435604095459

Token 84: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6186125874519348
    2. '<|end|>' → logprob: -1.24361252784729
    3. ' return' → logprob: -2.99361252784729
    4. ':' → logprob: -3.24361252784729
    5. '   ' → logprob: -3.74361252784729
    6. ' in' → logprob: -4.118612766265869
    7. ')' → logprob: -4.493612766265869
    8. '  ' → logprob: -4.993612766265869
    9. ':return' → logprob: -5.368612766265869
    10. '(vals' → logprob: -6.243612766265869

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.00887797586619854
    2. 'return' (adapté à ' return') → logprob: -5.258877754211426
    3. ' vals' → logprob: -6.258877754211426
    4. ' ' → logprob: -7.258877754211426
    5. ' val' → logprob: -7.508877754211426
    6. '<|end|>' → logprob: -8.883877754211426
    7. ' ```' → logprob: -9.883877754211426
    8. ':return' → logprob: -10.258877754211426
    9. '   ' → logprob: -10.383877754211426
    10. '(vals' → logprob: -10.633877754211426

Token 86: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.005979277193546295
    2. 'vals' → logprob: -5.130979061126709
    3. '(vals' → logprob: -10.005979537963867
    4. ' val' → logprob: -12.505979537963867
    5. 'val' → logprob: -14.505979537963867
    6. ' vars' → logprob: -14.630979537963867
    7. ' vall' → logprob: -15.005979537963867
    8. '_vals' → logprob: -15.380979537963867
    9. ' values' → logprob: -15.755979537963867
    10. 'vall' → logprob: -16.130979537963867

Token 87: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00039528406341560185
    2. '[' → logprob: -7.87539529800415
    3. '[P' → logprob: -11.375394821166992
    4. ''' → logprob: -13.625394821166992
    5. '[['' → logprob: -14.000394821166992
    6. ' ['' → logprob: -14.375394821166992
    7. '["' → logprob: -14.375394821166992
    8. '[
' → logprob: -15.250394821166992
    9. '.get' → logprob: -15.750394821166992
    10. 'P' → logprob: -16.750394821166992

Token 88: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: 0.0
    2. ' P' → logprob: -19.5
    3. '	P' → logprob: -23.0
    4. ''' → logprob: -23.125
    5. 'p' → logprob: -24.625
    6. 'П' → logprob: -24.75
    7. '`' → logprob: -25.25
    8. '"P' → logprob: -25.375
    9. 'Ｐ' → logprob: -25.5
    10. ' ' → logprob: -26.125

Token 89: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.00033999193692579865
    2. ']' → logprob: -8.000340461730957
    3. ''' → logprob: -12.875340461730957
    4. ' ']' → logprob: -13.750340461730957
    5. '"]' → logprob: -14.750340461730957
    6. '']
' → logprob: -15.125340461730957
    7. ' ]' → logprob: -15.875340461730957
    8. '']

' → logprob: -18.50033950805664
    9. '`]' → logprob: -18.87533950805664
    10. '}' → logprob: -19.50033950805664

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0046628303825855255
    2. '    
' → logprob: -6.754662990570068
    3. ' ' → logprob: -6.879662990570068
    4. '<|end|>' → logprob: -7.004662990570068
    5. '```' → logprob: -7.379662990570068
    6. '	elif' → logprob: -9.00466251373291
    7. ' if' → logprob: -9.12966251373291
    8. '  ' → logprob: -9.25466251373291
    9. ' 
' → logprob: -9.62966251373291
    10. '  
' → logprob: -9.75466251373291

Token 91: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03001289628446102
    2. '    
' → logprob: -4.405013084411621
    3. '
' → logprob: -5.155013084411621
    4. '\n' → logprob: -5.280013084411621
    5. ' ' → logprob: -6.530013084411621
    6. '  
' → logprob: -6.780013084411621
    7. '```' → logprob: -6.780013084411621
    8. ' 
' → logprob: -7.280013084411621
    9. '   
' → logprob: -7.780013084411621
    10. '' → logprob: -8.030013084411621

Token 92: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.5268407464027405
    2. ' ' → logprob: -1.2768406867980957
    3. 'formula' → logprob: -2.4018406867980957
    4. ' ' → logprob: -3.7768406867980957
    5. '  ' → logprob: -4.526840686798096
    6. ''' → logprob: -6.401840686798096
    7. ' '' → logprob: -7.151840686798096
    8. ' form' → logprob: -7.276840686798096
    9. '<|end|>' → logprob: -7.276840686798096
    10. ' space' → logprob: -7.526840686798096

Token 93: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0034652480389922857
    2. '==' → logprob: -5.753465175628662
    3. ' =='' → logprob: -8.62846565246582
    4. '=='' → logprob: -10.25346565246582
    5. '[' → logprob: -10.37846565246582
    6. ' =' → logprob: -10.87846565246582
    7. ' ' → logprob: -11.25346565246582
    8. '=' → logprob: -12.62846565246582
    9. ' =="' → logprob: -12.75346565246582
    10. ' ===' → logprob: -14.12846565246582

Token 94: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00039504567394033074
    2. ' '' → logprob: -8.375394821166992
    3. '"' → logprob: -8.750394821166992
    4. '<|end|>' → logprob: -14.000394821166992
    5. 'space' → logprob: -14.250394821166992
    6. '`' → logprob: -14.375394821166992
    7. '[' → logprob: -14.500394821166992
    8. ''A' → logprob: -14.625394821166992
    9. ' ' → logprob: -14.750394821166992
    10. ''''' → logprob: -14.750394821166992

Token 95: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.7432603272027336e-06
    2. ''' → logprob: -13.500001907348633
    3. ' Q' → logprob: -15.125001907348633
    4. 'P' → logprob: -16.875001907348633
    5. '')' → logprob: -18.625001907348633
    6. '`' → logprob: -19.125001907348633
    7. '	Q' → logprob: -19.125001907348633
    8. '.Q' → logprob: -20.375001907348633
    9. '"' → logprob: -20.375001907348633
    10. '<Q' → logprob: -20.500001907348633

Token 96: '':
' (ID: 7669)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -2.999452772201039e-05
    2. ''' → logprob: -11.250029563903809
    3. ']' → logprob: -11.375029563903809
    4. '"]' → logprob: -12.500029563903809
    5. '']:' → logprob: -14.875029563903809
    6. ''][' → logprob: -15.000029563903809
    7. '']['' → logprob: -15.125029563903809
    8. ' ']' → logprob: -15.500029563903809
    9. '']

' → logprob: -16.000030517578125
    10. '[' → logprob: -16.125030517578125

Token 97: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.920423150062561
    2. ':' → logprob: -1.045423150062561
    3. ']' → logprob: -2.1704230308532715
    4. '[' → logprob: -2.9204230308532715
    5. '<|end|>' → logprob: -3.1704230308532715
    6. ':
' → logprob: -4.6704230308532715
    7. '):' → logprob: -5.1704230308532715
    8. '']' → logprob: -5.2954230308532715
    9. ':return' → logprob: -5.6704230308532715
    10. ' ' → logprob: -5.7954230308532715

Token 98: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.026446010917425156
    2. 'return' (adapté à ' return') → logprob: -3.6514461040496826
    3. ' ' → logprob: -9.901446342468262
    4. ':return' → logprob: -10.651446342468262
    5. ' vals' → logprob: -11.026446342468262
    6. ')' → logprob: -11.276446342468262
    7. '       ' → logprob: -11.401446342468262
    8. ')return' → logprob: -12.151446342468262
    9. '<|end|>' → logprob: -12.276446342468262
    10. 'eturn' → logprob: -12.401446342468262

Token 99: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.0006375004886649549
    2. 'vals' → logprob: -7.375637531280518
    3. '(vals' → logprob: -11.75063705444336
    4. ' val' → logprob: -13.37563705444336
    5. ' vall' → logprob: -13.75063705444336
    6. ' values' → logprob: -16.37563705444336
    7. ' v' → logprob: -16.75063705444336
    8. '_vals' → logprob: -16.87563705444336
    9. ' ' → logprob: -16.87563705444336
    10. 'val' → logprob: -17.25063705444336

Token 100: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00043472214019857347
    2. '[' → logprob: -7.750434875488281
    3. ' ['' → logprob: -13.500434875488281
    4. '[['' → logprob: -13.875434875488281
    5. ''' → logprob: -14.125434875488281
    6. '[
' → logprob: -14.375434875488281
    7. '["' → logprob: -15.750434875488281
    8. '   ' → logprob: -16.62543487548828
    9. ' ' → logprob: -17.00043487548828
    10. '[...]' → logprob: -17.50043487548828

Token 101: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00015872348740231246
    2. ''' → logprob: -8.750158309936523
    3. ' Q' → logprob: -15.375158309936523
    4. '	Q' → logprob: -17.750158309936523
    5. '<Q' → logprob: -19.125158309936523
    6. '_Q' → logprob: -19.250158309936523
    7. '.Q' → logprob: -19.625158309936523
    8. '`' → logprob: -20.500158309936523
    9. '['' → logprob: -20.500158309936523
    10. '(Q' → logprob: -21.000158309936523

Token 102: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.004220620729029179
    2. ']' → logprob: -5.504220485687256
    3. '']
' → logprob: -9.129220962524414
    4. '"]' → logprob: -11.379220962524414
    5. ''' → logprob: -11.504220962524414
    6. '   ' → logprob: -11.754220962524414
    7. ']
' → logprob: -13.004220962524414
    8. '}' → logprob: -13.879220962524414
    9. ' ]' → logprob: -14.754220962524414
    10. '       ' → logprob: -15.379220962524414

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013250234769657254
    2. '```' → logprob: -9.50013256072998
    3. '<|end|>' → logprob: -11.00013256072998
    4. ' if' → logprob: -11.50013256072998
    5. ''' → logprob: -12.25013256072998
    6. '    
' → logprob: -12.25013256072998
    7. '`' → logprob: -12.75013256072998
    8. '\' → logprob: -12.87513256072998
    9. '
' → logprob: -12.87513256072998
    10. '  ' → logprob: -13.00013256072998

Token 104: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006037346553057432
    2. ' if' → logprob: -5.38103723526001
    3. '```' → logprob: -7.50603723526001
    4. ' ' → logprob: -7.88103723526001
    5. 'if' (adapté à ' if') → logprob: -8.506037712097168
    6. '  ' → logprob: -9.381037712097168
    7. '`' → logprob: -9.506037712097168
    8. '    ' → logprob: -10.506037712097168
    9. '	if' → logprob: -10.756037712097168
    10. '    
' → logprob: -10.881037712097168

Token 105: ' formula' (ID: 20690)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08968895673751831
    2. ' formula' → logprob: -2.589689016342163
    3. ' '' → logprob: -5.339688777923584
    4. 'formula' → logprob: -6.214688777923584
    5. '"' → logprob: -6.839688777923584
    6. ' ' → logprob: -6.839688777923584
    7. ' f' → logprob: -7.339688777923584
    8. '`' → logprob: -7.339688777923584
    9. ' form' → logprob: -9.339689254760742
    10. ' `' → logprob: -9.714689254760742

Token 106: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.010325772687792778
    2. '==' → logprob: -4.635325908660889
    3. '=='' → logprob: -8.63532543182373
    4. ' =='' → logprob: -8.76032543182373
    5. ''' → logprob: -9.38532543182373
    6. '[' → logprob: -9.76032543182373
    7. ' '' → logprob: -10.01032543182373
    8. ' =' → logprob: -11.01032543182373
    9. ' ' → logprob: -11.38532543182373
    10. '=' → logprob: -11.76032543182373

Token 107: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23144423961639404
    2. ' '' → logprob: -1.606444239616394
    3. ' vals' → logprob: -5.481444358825684
    4. '"' → logprob: -6.606444358825684
    5. 'vals' → logprob: -8.231444358825684
    6. ' ' → logprob: -8.981444358825684
    7. ' ' → logprob: -11.106444358825684
    8. ''s' → logprob: -11.106444358825684
    9. ' val' → logprob: -11.106444358825684
    10. ''S' → logprob: -11.356444358825684

Token 108: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0017081368714571
    2. ''' → logprob: -6.376708030700684
    3. ' R' → logprob: -12.126708030700684
    4. '`' → logprob: -14.876708030700684
    5. '['' → logprob: -17.501708984375
    6. ''r' → logprob: -17.876708984375
    7. '"' → logprob: -18.001708984375
    8. ''''' → logprob: -18.001708984375
    9. '	R' → logprob: -18.001708984375
    10. ''s' → logprob: -18.251708984375

Token 109: '':
' (ID: 7669)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.010092249140143394
    2. '']:' → logprob: -4.760092258453369
    3. '']:
' → logprob: -7.010092258453369
    4. '':' → logprob: -7.760092258453369
    5. ''' → logprob: -9.135091781616211
    6. '"]' → logprob: -11.260091781616211
    7. '']
' → logprob: -11.510091781616211
    8. ']' → logprob: -11.885091781616211
    9. '"]:' → logprob: -13.135091781616211
    10. '']=' → logprob: -13.260091781616211

Token 110: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08874379098415375
    2. 'return' → logprob: -3.0887436866760254
    3. '       ' → logprob: -3.3387436866760254
    4. '   ' → logprob: -5.838743686676025
    5. ' vals' → logprob: -7.338743686676025
    6. ':return' → logprob: -9.588744163513184
    7. '	return' → logprob: -9.838744163513184
    8. '<|end|>' → logprob: -9.963744163513184
    9. 'vals' → logprob: -10.088744163513184
    10. ' ' → logprob: -10.713744163513184

Token 111: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25330278277397156
    2. 'return' (adapté à ' return') → logprob: -1.503302812576294
    3. ' vals' → logprob: -6.753302574157715
    4. 'vals' → logprob: -8.628302574157715
    5. '   ' → logprob: -11.253302574157715
    6. '       ' → logprob: -12.503302574157715
    7. '	return' → logprob: -12.753302574157715
    8. ':return' → logprob: -13.128302574157715
    9. '(vals' → logprob: -13.753302574157715
    10. ' val' → logprob: -14.128302574157715

Token 112: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.00038682064041495323
    2. 'vals' → logprob: -7.875386714935303
    3. '(vals' → logprob: -12.000387191772461
    4. ' val' → logprob: -15.250387191772461
    5. ' vall' → logprob: -15.250387191772461
    6. ' ' → logprob: -17.00038719177246
    7. ' ' → logprob: -17.62538719177246
    8. '_vals' → logprob: -17.62538719177246
    9. ' values' → logprob: -18.00038719177246
    10. 'val' → logprob: -18.62538719177246

Token 113: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -5.049755782238208e-05
    2. '[' → logprob: -10.00005054473877
    3. ''' → logprob: -13.00005054473877
    4. ' ['' → logprob: -13.87505054473877
    5. '[['' → logprob: -14.75005054473877
    6. '["' → logprob: -14.87505054473877
    7. '[
' → logprob: -15.25005054473877
    8. ''s' → logprob: -15.50005054473877
    9. '   ' → logprob: -15.62505054473877
    10. ']['' → logprob: -16.625049591064453

Token 114: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3132629096508026
    2. ''' → logprob: -1.313262939453125
    3. '`' → logprob: -14.188262939453125
    4. ''r' → logprob: -15.688262939453125
    5. ' R' → logprob: -16.188262939453125
    6. '"' → logprob: -17.188262939453125
    7. 'Ｒ' → logprob: -17.313262939453125
    8. '   ' → logprob: -17.563262939453125
    9. '['' → logprob: -17.688262939453125
    10. '‘' → logprob: -17.813262939453125

Token 115: '']
' (ID: 9756)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.47850948572158813
    2. ''' → logprob: -1.6035094261169434
    3. '']' → logprob: -2.2285094261169434
    4. ''}' → logprob: -2.7285094261169434
    5. '   ' → logprob: -5.353509426116943
    6. '}
' → logprob: -7.353509426116943
    7. '}'' → logprob: -8.353509902954102
    8. '')' → logprob: -8.978509902954102
    9. ''}
' → logprob: -9.353509902954102
    10. '```' → logprob: -9.728509902954102

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08578401058912277
    2. ' 
' → logprob: -3.0857839584350586
    3. ' ' → logprob: -4.335783958435059
    4. '    
' → logprob: -4.460783958435059
    5. '  
' → logprob: -6.460783958435059
    6. ' elif' → logprob: -6.585783958435059
    7. '    ' → logprob: -6.585783958435059
    8. ' if' → logprob: -6.710783958435059
    9. '   
' → logprob: -6.835783958435059
    10. '  ' → logprob: -7.210783958435059

Token 117: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0064619779586792
    2. 'if' (adapté à ' if') → logprob: -1.3814619779586792
    3. '(' → logprob: -2.0064620971679688
    4. '   ' → logprob: -2.5064620971679688
    5. ' ' → logprob: -2.6314620971679688
    6. ' (' → logprob: -3.5064620971679688
    7. 'i' → logprob: -3.8814620971679688
    8. ' i' → logprob: -4.256462097167969
    9. ' )' → logprob: -4.756462097167969
    10. ' 
' → logprob: -4.881462097167969

Token 118: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.21022643148899078
    2. 'formula' → logprob: -2.210226535797119
    3. ''' → logprob: -3.210226535797119
    4. ' '' → logprob: -3.960226535797119
    5. ' len' → logprob: -4.460226535797119
    6. ' ' → logprob: -5.460226535797119
    7. 'form' → logprob: -6.710226535797119
    8. ' form' → logprob: -6.960226535797119
    9. 'len' → logprob: -7.210226535797119
    10. '(form' → logprob: -7.960226535797119

Token 119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6758130788803101
    2. '.startswith' → logprob: -1.42581307888031
    3. '.' → logprob: -2.0508131980895996
    4. ' .' → logprob: -2.3008131980895996
    5. ' ==' → logprob: -4.0508131980896
    6. ' [' → logprob: -6.4258131980896
    7. ' ' → logprob: -6.9258131980896
    8. 'startswith' → logprob: -7.4258131980896
    9. '==' → logprob: -8.175812721252441
    10. ' =='' → logprob: -8.175812721252441

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03584427759051323
    2. ' ' → logprob: -3.910844326019287
    3. '[' → logprob: -5.160844326019287
    4. '1' → logprob: -5.285844326019287
    5. ' ==' → logprob: -5.910844326019287
    6. ':' → logprob: -7.285844326019287
    7. '2' → logprob: -8.285843849182129
    8. '(' → logprob: -8.285843849182129
    9. '==' → logprob: -8.785843849182129
    10. '.startswith' → logprob: -9.035843849182129

Token 121: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43086302280426025
    2. '==' → logprob: -1.4308630228042603
    3. '=='' → logprob: -2.8058629035949707
    4. ''' → logprob: -3.1808629035949707
    5. '=' → logprob: -6.555862903594971
    6. '(' → logprob: -6.680862903594971
    7. ')' → logprob: -6.805862903594971
    8. ' ' → logprob: -6.930862903594971
    9. '[' → logprob: -7.430862903594971
    10. ' '' → logprob: -7.680862903594971

Token 122: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06777052581310272
    2. '==' → logprob: -3.442770481109619
    3. '=='' → logprob: -4.192770481109619
    4. ''' → logprob: -4.442770481109619
    5. '[' → logprob: -6.442770481109619
    6. ' ' → logprob: -6.442770481109619
    7. ' '' → logprob: -6.942770481109619
    8. ' =='' → logprob: -7.067770481109619
    9. '=' → logprob: -7.442770481109619
    10. ' in' → logprob: -7.817770481109619

Token 123: ' '-' (ID: 17489)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09358108788728714
    2. ''-' → logprob: -2.968581199645996
    3. ''N' → logprob: -3.718581199645996
    4. ''A' → logprob: -5.593581199645996
    5. ''C' → logprob: -6.468581199645996
    6. ''O' → logprob: -6.593581199645996
    7. ''T' → logprob: -6.968581199645996
    8. ''*' → logprob: -7.093581199645996
    9. ''U' → logprob: -7.093581199645996
    10. ''L' → logprob: -7.468581199645996

Token 124: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12839743494987488
    2. '':' → logprob: -2.5033974647521973
    3. ' '' → logprob: -3.3783974647521973
    4. ' ':' → logprob: -6.253397464752197
    5. ''>' → logprob: -7.378397464752197
    6. '1' → logprob: -8.003396987915039
    7. '('' → logprob: -8.253396987915039
    8. '(':' → logprob: -8.378396987915039
    9. 'formula' → logprob: -8.753396987915039
    10. 'P' → logprob: -8.878396987915039

Token 125: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.414473533630371
    2. ' (' → logprob: -1.414473533630371
    3. ' return' → logprob: -1.914473533630371
    4. '3' → logprob: -2.414473533630371
    5. 'return' → logprob: -2.414473533630371
    6. 'eval' → logprob: -3.039473533630371
    7. ' eval' → logprob: -3.164473533630371
    8. '2' → logprob: -3.164473533630371
    9. ' ' → logprob: -3.664473533630371
    10. '(eval' → logprob: -4.789473533630371

Token 126: ' val' (ID: 1459)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8035517334938049
    2. '(' → logprob: -1.1785516738891602
    3. ' (' → logprob: -2.55355167388916
    4. ' ' → logprob: -2.92855167388916
    5. 'return' → logprob: -3.05355167388916
    6. ' return' → logprob: -3.17855167388916
    7. '3' → logprob: -3.92855167388916
    8. '{' → logprob: -7.30355167388916
    9. '{
' → logprob: -7.42855167388916
    10. 'eval' → logprob: -7.67855167388916

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5244385004043579
    2. '=' → logprob: -0.8994385004043579
    3. ')' → logprob: -8.149438858032227
    4. ',' → logprob: -8.524438858032227
    5. '   ' → logprob: -8.774438858032227
    6. ' ' → logprob: -8.774438858032227
    7. 'eturn' → logprob: -9.649438858032227
    8. '(' → logprob: -9.774438858032227
    9. ')=' → logprob: -9.899438858032227
    10. 's' → logprob: -10.024438858032227

Token 128: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.287259578704834
    2. ' eval' → logprob: -1.412259578704834
    3. '3' → logprob: -6.412259578704834
    4. '(eval' → logprob: -6.537259578704834
    5. '2' → logprob: -6.662259578704834
    6. ' ' → logprob: -7.037259578704834
    7. '(' → logprob: -7.787259578704834
    8. ' (' → logprob: -7.912259578704834
    9. '.eval' → logprob: -11.662260055541992
    10. '  ' → logprob: -11.912260055541992

Token 129: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -7.016616291366518e-05
    2. '_' → logprob: -9.750070571899414
    3. '_form' → logprob: -11.375070571899414
    4. ' _' → logprob: -15.875070571899414
    5. '```' → logprob: -17.250070571899414
    6. '_factor' → logprob: -17.500070571899414
    7. '_function' → logprob: -17.625070571899414
    8. '_
' → logprob: -17.625070571899414
    9. 'Formula' → logprob: -18.125070571899414
    10. '_format' → logprob: -18.250070571899414

Token 130: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -0.02329649217426777
    2. '(' → logprob: -3.773296594619751
    3. '(f' → logprob: -10.398296356201172
    4. '('' → logprob: -11.648296356201172
    5. '(
' → logprob: -12.148296356201172
    6. ' (' → logprob: -13.023296356201172
    7. '("("' → logprob: -13.523296356201172
    8. 'formula' → logprob: -14.273296356201172
    9. '(func' → logprob: -14.648296356201172
    10. '((' → logprob: -14.898296356201172

Token 131: 'ula' (ID: 3419)
  Prédit: 'ula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -0.0006102138431742787
    2. '_formula' → logprob: -7.6256103515625
    3. 'formula' → logprob: -9.8756103515625
    4. '```' → logprob: -11.0006103515625
    5. '_' → logprob: -11.5006103515625
    6. 'ul' → logprob: -12.1256103515625
    7. 'la' → logprob: -12.6256103515625
    8. 'ule' → logprob: -12.7506103515625
    9. 'ула' → logprob: -12.8756103515625
    10. 'mula' → logprob: -13.2506103515625

Token 132: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001772638875991106
    2. '(' → logprob: -6.626772403717041
    3. '(form' → logprob: -8.6267728805542
    4. '('' → logprob: -9.2517728805542
    5. 'formula' → logprob: -10.2517728805542
    6. ''[' → logprob: -10.5017728805542
    7. '('[' → logprob: -10.6267728805542
    8. '[
' → logprob: -11.2517728805542
    9. '([' → logprob: -11.5017728805542
    10. ')' → logprob: -11.8767728805542

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. '[' → logprob: -10.625041007995605
    3. ' ' → logprob: -11.375041007995605
    4. '2' → logprob: -13.500041007995605
    5. '```' → logprob: -13.625041007995605
    6. '   ' → logprob: -13.750041007995605
    7. '(' → logprob: -14.625041007995605
    8. '
' → logprob: -14.875041007995605
    9. '0' → logprob: -15.687541007995605
    10. ':' → logprob: -15.937541007995605

Token 134: ':],' (ID: 117284)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4065938889980316
    2. ':],' → logprob: -1.281593918800354
    3. '],' → logprob: -3.0315937995910645
    4. '),' → logprob: -5.5315937995910645
    5. ' ,' → logprob: -6.0315937995910645
    6. ':,' → logprob: -8.156594276428223
    7. ',),' → logprob: -8.156594276428223
    8. ':' → logprob: -8.156594276428223
    9. '>,' → logprob: -8.281594276428223
    10. ')' → logprob: -8.781594276428223

Token 135: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.25212448835372925
    2. 'vals' → logprob: -1.502124547958374
    3. '(vals' → logprob: -8.752124786376953
    4. '    ' → logprob: -11.627124786376953
    5. '   ' → logprob: -11.627124786376953
    6. ' ' → logprob: -12.252124786376953
    7. '
' → logprob: -12.627124786376953
    8. 'Vals' → logprob: -13.127124786376953
    9. '_vals' → logprob: -13.252124786376953
    10. '```' → logprob: -13.377124786376953

Token 136: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20153506100177765
    2. ')' → logprob: -1.7015351057052612
    3. ')

' → logprob: -10.45153522491455
    4. ' )
' → logprob: -10.70153522491455
    5. ')
' → logprob: -11.07653522491455
    6. '[' → logprob: -11.07653522491455
    7. 'def' → logprob: -11.20153522491455
    8. ' )' → logprob: -11.95153522491455
    9. ' ' → logprob: -12.70153522491455
    10. '   ' → logprob: -12.95153522491455

Token 137: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.061597079038619995
    2. '   ' → logprob: -2.9365971088409424
    3. ' if' → logprob: -6.436596870422363
    4. ' return' → logprob: -6.436596870422363
    5. 'return' → logprob: -7.311596870422363
    6. '  
' → logprob: -7.561596870422363
    7. '    
' → logprob: -7.561596870422363
    8. ' 
' → logprob: -7.811596870422363
    9. '\n' → logprob: -7.811596870422363
    10. '	return' → logprob: -8.686596870422363

Token 138: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20763219892978668
    2. 'if' (adapté à ' if') → logprob: -2.207632303237915
    3. '   ' → logprob: -3.582632303237915
    4. ' if' → logprob: -3.957632303237915
    5. ' return' → logprob: -4.207632064819336
    6. '
' → logprob: -4.332632064819336
    7. '3' → logprob: -6.457632064819336
    8. '2' → logprob: -7.707632064819336
    9. '```' → logprob: -8.457632064819336
    10. '       ' → logprob: -8.957632064819336

Token 139: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12694406509399414
    2. ' val' → logprob: -2.126944065093994
    3. '0' → logprob: -12.501943588256836
    4. '2' → logprob: -12.626943588256836
    5. '```' → logprob: -13.126943588256836
    6. '   ' → logprob: -13.501943588256836
    7. '	val' → logprob: -13.626943588256836
    8. ' ' → logprob: -13.626943588256836
    9. '(val' → logprob: -14.376943588256836
    10. '1' → logprob: -14.751943588256836

Token 140: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2814965844154358
    2. ' ==' → logprob: -1.406496524810791
    3. '=' → logprob: -8.78149700164795
    4. '()==' → logprob: -9.90649700164795
    5. '0' → logprob: -10.53149700164795
    6. ')==' → logprob: -11.15649700164795
    7. '<|end|>' → logprob: -11.28149700164795
    8. '[' → logprob: -11.40649700164795
    9. ' =' → logprob: -11.53149700164795
    10. '==
' → logprob: -11.65649700164795

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.123899558791891e-05
    2. ' ' → logprob: -9.62507152557373
    3. '2' → logprob: -12.37507152557373
    4. '1' → logprob: -14.75007152557373
    5. '
' → logprob: -15.50007152557373
    6. '   ' → logprob: -16.000070571899414
    7. '  ' → logprob: -17.375070571899414
    8. '۰' → logprob: -17.875070571899414
    9. '```' → logprob: -18.000070571899414
    10. ' ' → logprob: -18.437570571899414

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010235115041723475
    2. ' ' → logprob: -9.625102043151855
    3. '2' → logprob: -10.250102043151855
    4. '1' → logprob: -14.125102043151855
    5. '   ' → logprob: -16.250102996826172
    6. '  ' → logprob: -16.500102996826172
    7. ''' → logprob: -17.125102996826172
    8. '-' → logprob: -17.937602996826172
    9. '"' → logprob: -18.312602996826172
    10. '۰' → logprob: -18.625102996826172

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18180853128433228
    2. ':
' → logprob: -1.8068084716796875
    3. ':return' → logprob: -6.3068084716796875
    4. ' :' → logprob: -9.181808471679688
    5. ':

' → logprob: -10.306808471679688
    6. ' :
' → logprob: -10.306808471679688
    7. '1' → logprob: -10.931808471679688
    8. '<|end|>' → logprob: -11.431808471679688
    9. '):' → logprob: -11.556808471679688
    10. '2' → logprob: -11.806808471679688

Token 144: '           ' (ID: 352)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2624590396881104
    2. 'return' → logprob: -1.2624590396881104
    3. '1' → logprob: -2.3874590396881104
    4. '<|end|>' → logprob: -2.3874590396881104
    5. '       ' → logprob: -2.6374590396881104
    6. ':' → logprob: -2.7624590396881104
    7. ' return' → logprob: -3.3874590396881104
    8. ':return' → logprob: -4.012458801269531
    9. '<|end|>' → logprob: -4.387458801269531
    10. '3' → logprob: -4.512458801269531

Token 145: ' return' (ID: 622)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006355931982398033
    2. 'return' (adapté à ' return') → logprob: -7.625635623931885
    3. '1' → logprob: -9.875635147094727
    4. ' return' → logprob: -10.000635147094727
    5. ' ' → logprob: -10.250635147094727
    6. '
' → logprob: -11.750635147094727
    7. '0' → logprob: -12.625635147094727
    8. '   ' → logprob: -14.125635147094727
    9. '<|end|>' → logprob: -14.125635147094727
    10. '3' → logprob: -14.875635147094727

Token 146: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.602024900028482e-05
    2. ' ' → logprob: -9.375085830688477
    3. '1' → logprob: -14.625085830688477
    4. '0' → logprob: -15.250085830688477
    5. '   ' → logprob: -16.000085830688477
    6. '
' → logprob: -16.750085830688477
    7. '  ' → logprob: -17.125085830688477
    8. '`' → logprob: -17.375085830688477
    9. '"' → logprob: -17.625085830688477
    10. '```' → logprob: -17.875085830688477

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -10.75002670288086
    3. '0' → logprob: -12.50002670288086
    4. '1' → logprob: -14.00002670288086
    5. ''' → logprob: -14.75002670288086
    6. '"' → logprob: -15.62502670288086
    7. '`' → logprob: -15.75002670288086
    8. '   ' → logprob: -16.00002670288086
    9. '  ' → logprob: -16.87502670288086
    10. '۲' → logprob: -17.06252670288086

Token 148: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.281499445438385
    2. '       ' → logprob: -1.7814993858337402
    3. 'elif' → logprob: -3.2814993858337402
    4. '<|end|>' → logprob: -3.6564993858337402
    5. ' 
' → logprob: -5.90649938583374
    6. '   ' → logprob: -5.90649938583374
    7. ' elif' → logprob: -6.03149938583374
    8. '  
' → logprob: -6.15649938583374
    9. '    
' → logprob: -7.28149938583374
    10. '    ' → logprob: -7.78149938583374

Token 149: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.15031853318214417
    2. '<|end|>' → logprob: -2.1503186225891113
    3. ' elif' → logprob: -4.400318622589111
    4. '
' → logprob: -5.150318622589111
    5. ' ' → logprob: -6.900318622589111
    6. '1' → logprob: -6.900318622589111
    7. '	elif' → logprob: -7.025318622589111
    8. '2' → logprob: -7.400318622589111
    9. '<|end|>' → logprob: -8.025318145751953
    10. ' 
' → logprob: -8.525318145751953

Token 150: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2979026436805725
    2. 'if' (adapté à ' if') → logprob: -1.5479025840759277
    3. ' if' → logprob: -3.7979025840759277
    4. ' elif' → logprob: -3.7979025840759277
    5. '       ' → logprob: -9.797903060913086
    6. '   ' → logprob: -11.172903060913086
    7. '    ' → logprob: -11.672903060913086
    8. '	elif' → logprob: -12.047903060913086
    9. 'else' → logprob: -12.422903060913086
    10. ' ' → logprob: -13.172903060913086

Token 151: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.08927477896213531
    2. 'val' → logprob: -2.4642748832702637
    3. '1' → logprob: -8.589274406433105
    4. '2' → logprob: -8.964274406433105
    5. ' ' → logprob: -10.839274406433105
    6. '0' → logprob: -14.714274406433105
    7. '	val' → logprob: -15.214274406433105
    8. '(val' → logprob: -15.339274406433105
    9. '[val' → logprob: -15.839274406433105
    10. '_val' → logprob: -16.214275360107422

Token 152: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04870080202817917
    2. '==' → logprob: -3.0487008094787598
    3. ' ' → logprob: -9.298700332641602
    4. '<|end|>' → logprob: -11.923700332641602
    5. '=' → logprob: -13.048700332641602
    6. '[' → logprob: -13.298700332641602
    7. '<|end|>' → logprob: -13.423700332641602
    8. ' ' → logprob: -13.423700332641602
    9. ')==' → logprob: -13.798700332641602
    10. '1' → logprob: -14.048700332641602

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05613405629992485
    2. ' ' → logprob: -3.431133985519409
    3. '2' → logprob: -3.806133985519409
    4. '   ' → logprob: -13.431134223937988
    5. '  ' → logprob: -14.056134223937988
    6. '0' → logprob: -14.681134223937988
    7. '<|end|>' → logprob: -15.806134223937988
    8. '...' → logprob: -16.243633270263672
    9. '    ' → logprob: -16.368633270263672
    10. ' ' → logprob: -16.868633270263672

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04360410198569298
    2. '2' → logprob: -3.1686041355133057
    3. ' ' → logprob: -7.418603897094727
    4. '0' → logprob: -12.793603897094727
    5. '   ' → logprob: -14.418603897094727
    6. '  ' → logprob: -14.668603897094727
    7. '<|end|>' → logprob: -15.231103897094727
    8. '```' → logprob: -15.606103897094727
    9. '...' → logprob: -16.356103897094727
    10. ''' → logprob: -16.981103897094727

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001714093261398375
    2. ':
' → logprob: -6.87671422958374
    3. '==' → logprob: -8.376713752746582
    4. ':return' → logprob: -8.751713752746582
    5. ' :' → logprob: -9.251713752746582
    6. '<|end|>' → logprob: -10.001713752746582
    7. ' ==' → logprob: -10.126713752746582
    8. '=' → logprob: -10.251713752746582
    9. '       ' → logprob: -10.751713752746582
    10. '):' → logprob: -11.251713752746582

Token 156: '           ' (ID: 352)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05781324952840805
    2. '0' → logprob: -3.3078131675720215
    3. '1' → logprob: -4.3078131675720215
    4. ' ' → logprob: -5.5578131675720215
    5. '           ' → logprob: -7.3078131675720215
    6. 'return' → logprob: -7.9328131675720215
    7. '=' → logprob: -8.18281364440918
    8. '==' → logprob: -8.18281364440918
    9. ' return' → logprob: -8.43281364440918
    10. ':' → logprob: -9.18281364440918

Token 157: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8921695047756657e-05
    2. '0' → logprob: -11.125028610229492
    3. ' ' → logprob: -11.750028610229492
    4. '2' → logprob: -13.000028610229492
    5. '       ' → logprob: -13.250028610229492
    6. '   ' → logprob: -13.500028610229492
    7. '           ' → logprob: -14.250028610229492
    8. '<|end|>' → logprob: -16.125028610229492
    9. '<|end|>' → logprob: -17.375028610229492
    10. 'return' (adapté à ' return') → logprob: -17.625028610229492

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016146517009474337
    2. ' ' → logprob: -9.375161170959473
    3. '0' → logprob: -9.500161170959473
    4. '<|end|>' → logprob: -14.000161170959473
    5. '2' → logprob: -14.125161170959473
    6. '  ' → logprob: -17.00016212463379
    7. '"' → logprob: -17.12516212463379
    8. '   ' → logprob: -17.12516212463379
    9. '۱' → logprob: -17.62516212463379
    10. '
' → logprob: -17.68766212463379

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. '0' → logprob: -11.375015258789062
    3. '2' → logprob: -12.875015258789062
    4. ' ' → logprob: -14.500015258789062
    5. '۱' → logprob: -16.750015258789062
    6. '１' → logprob: -17.250015258789062
    7. '"' → logprob: -17.625015258789062
    8. '
' → logprob: -17.875015258789062
    9. '```' → logprob: -18.000015258789062
    10. '<|end|>' → logprob: -18.062515258789062

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.939851037808694e-05
    2. 'return' → logprob: -11.375029563903809
    3. '2' → logprob: -11.500029563903809
    4. '<|end|>' → logprob: -12.625029563903809
    5. 'if' → logprob: -13.625029563903809
    6. '3' → logprob: -14.125029563903809
    7. '   ' → logprob: -14.750029563903809
    8. '      ' → logprob: -14.875029563903809
    9. '           ' → logprob: -15.250029563903809
    10. '0' → logprob: -15.375029563903809

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4153549020411447e-05
    2. 'if' → logprob: -11.62502384185791
    3. 'return' → logprob: -12.37502384185791
    4. ' if' → logprob: -12.50002384185791
    5. '<|end|>' → logprob: -12.50002384185791
    6. '   ' → logprob: -13.87502384185791
    7. '```' → logprob: -14.75002384185791
    8. '	' → logprob: -15.00002384185791
    9. '      ' → logprob: -15.25002384185791
    10. ' ' → logprob: -15.25002384185791

Token 162: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008948163129389286
    2. 'return' → logprob: -4.88394832611084
    3. 'if' (adapté à ' if') → logprob: -6.88394832611084
    4. ' if' → logprob: -8.25894832611084
    5. ' return' → logprob: -10.00894832611084
    6. '   ' → logprob: -12.75894832611084
    7. '2' → logprob: -13.25894832611084
    8. '           ' → logprob: -14.00894832611084
    9. '      ' → logprob: -14.00894832611084
    10. '```' → logprob: -14.13394832611084

Token 163: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.04859600216150284
    2. 'val' → logprob: -3.048595905303955
    3. '2' → logprob: -11.798596382141113
    4. '(val' → logprob: -14.798596382141113
    5. ' ' → logprob: -15.423596382141113
    6. '0' → logprob: -15.798596382141113
    7. '	val' → logprob: -15.923596382141113
    8. '_val' → logprob: -17.048595428466797
    9. '   ' → logprob: -17.173595428466797
    10. '    ' → logprob: -17.173595428466797

Token 164: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014175145886838436
    2. '==' → logprob: -4.264174938201904
    3. ' ' → logprob: -11.889175415039062
    4. '=' → logprob: -13.389175415039062
    5. ' =' → logprob: -13.514175415039062
    6. '[' → logprob: -14.639175415039062
    7. ' ' → logprob: -14.889175415039062
    8. ' ==
' → logprob: -15.139175415039062
    9. '2' → logprob: -15.389175415039062
    10. ')' → logprob: -16.514175415039062

Token 165: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008615161292254925
    2. ' ' → logprob: -4.758615016937256
    3. '0' → logprob: -14.508615493774414
    4. '   ' → logprob: -16.758615493774414
    5. '    ' → logprob: -18.508615493774414
    6. '۲' → logprob: -18.633615493774414
    7. '       ' → logprob: -18.758615493774414
    8. '<|end|>' → logprob: -18.883615493774414
    9. '  ' → logprob: -19.008615493774414
    10. '     ' → logprob: -19.508615493774414

Token 166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03372833877801895
    2. '0' → logprob: -3.4087283611297607
    3. ' ' → logprob: -9.40872859954834
    4. '20' → logprob: -15.65872859954834
    5. '   ' → logprob: -15.78372859954834
    6. '  ' → logprob: -17.283727645874023
    7. '02' → logprob: -17.283727645874023
    8. '```' → logprob: -17.471227645874023
    9. '    ' → logprob: -17.658727645874023
    10. '<|end|>' → logprob: -17.658727645874023

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1576579064130783
    2. '0' → logprob: -2.2826578617095947
    3. ':
' → logprob: -3.2826578617095947
    4. ':return' → logprob: -5.782658100128174
    5. '           ' → logprob: -6.657658100128174
    6. ' ' → logprob: -7.407658100128174
    7. '       ' → logprob: -7.407658100128174
    8. ' :' → logprob: -8.407657623291016
    9. 'return' → logprob: -8.407657623291016
    10. '   ' → logprob: -9.657657623291016

Token 168: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007221345789730549
    2. '           ' → logprob: -5.507221221923828
    3. ' ' → logprob: -6.007221221923828
    4. '       ' → logprob: -8.257221221923828
    5. 'return' → logprob: -8.382221221923828
    6. ' return' → logprob: -8.757221221923828
    7. '   ' → logprob: -11.507221221923828
    8. ' 
' → logprob: -12.257221221923828
    9. ' ' → logprob: -12.632221221923828
    10. '               ' → logprob: -13.257221221923828

Token 169: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'return' (adapté à ' return') → logprob: -20.0
    4. '           ' → logprob: -20.125
    5. '       ' → logprob: -22.125
    6. '```' → logprob: -22.25
    7. ' ' → logprob: -23.5
    8. '   ' → logprob: -23.5
    9. '۰' → logprob: -23.875
    10. '=' → logprob: -24.375

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -21.75
    4. ' ' → logprob: -24.0
    5. '   ' → logprob: -24.0
    6. '```' → logprob: -24.125
    7. '০' → logprob: -24.25
    8. '０' → logprob: -24.875
    9. '٠' → logprob: -25.25
    10. '०' → logprob: -25.5

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '۰' → logprob: -21.875
    4. '```' → logprob: -23.875
    5. '০' → logprob: -24.0
    6. '   ' → logprob: -24.375
    7. '０' → logprob: -24.5
    8. ' ' → logprob: -25.125
    9. '`' → logprob: -25.375
    10. '٠' → logprob: -25.5

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0139986053109169
    2. '
' → logprob: -4.888998508453369
    3. ')' → logprob: -6.388998508453369
    4. '\n' → logprob: -6.638998508453369
    5. '    
' → logprob: -6.638998508453369
    6. 'return' → logprob: -7.388998508453369
    7. ' return' → logprob: -7.763998508453369
    8. ' 
' → logprob: -8.263998985290527
    9. '	return' → logprob: -8.763998985290527
    10. '       ' → logprob: -9.513998985290527

Token 173: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.096331238746643
    2. '   ' → logprob: -1.221331238746643
    3. '\n' → logprob: -1.971331238746643
    4. ' 
' → logprob: -2.0963311195373535
    5. ' )' → logprob: -2.7213311195373535
    6. '    
' → logprob: -4.2213311195373535
    7. '  
' → logprob: -4.9713311195373535
    8. ' ' → logprob: -5.5963311195373535
    9. '
' → logprob: -5.7213311195373535
    10. '\' → logprob: -5.8463311195373535

Token 174: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1809321641921997
    2. ' )' → logprob: -1.5559321641921997
    3. ' 
' → logprob: -1.9309321641921997
    4. 'i' → logprob: -2.18093204498291
    5. ' ' → logprob: -3.05593204498291
    6. ' if' → logprob: -3.68093204498291
    7. 'if' (adapté à ' if') → logprob: -3.80593204498291
    8. ' elif' → logprob: -3.93093204498291
    9. '  
' → logprob: -4.05593204498291
    10. '   ' → logprob: -4.05593204498291

Token 175: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.35023006796836853
    2. 'formula' → logprob: -1.225230097770691
    3. 'form' → logprob: -7.6002302169799805
    4. ' len' → logprob: -7.7252302169799805
    5. ''' → logprob: -7.9752302169799805
    6. ' '' → logprob: -8.60023021697998
    7. 'len' → logprob: -9.22523021697998
    8. ' ' → logprob: -9.72523021697998
    9. ' form' → logprob: -9.97523021697998
    10. '(form' → logprob: -9.97523021697998

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.849109119386412e-06
    2. '.startswith' → logprob: -12.500009536743164
    3. '[:' → logprob: -13.375009536743164
    4. '[
' → logprob: -13.375009536743164
    5. '==' → logprob: -13.625009536743164
    6. ' [' → logprob: -14.000009536743164
    7. ' ==' → logprob: -14.250009536743164
    8. ' ' → logprob: -16.625009536743164
    9. 'startswith' → logprob: -16.625009536743164
    10. 'and' → logprob: -16.750009536743164

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13384348154067993
    2. '1' → logprob: -2.133843421936035
    3. ' ' → logprob: -5.008843421936035
    4. ':' → logprob: -9.133843421936035
    5. '[' → logprob: -10.383843421936035
    6. '2' → logprob: -10.508843421936035
    7. '-' → logprob: -11.883843421936035
    8. ']' → logprob: -12.196343421936035
    9. ' :' → logprob: -12.196343421936035
    10. '(' → logprob: -12.571343421936035

Token 178: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9856650829315186
    2. ''' → logprob: -1.1106650829315186
    3. ' '' → logprob: -1.8606650829315186
    4. ' ' → logprob: -2.9856650829315186
    5. '==' → logprob: -3.2356650829315186
    6. '=='' → logprob: -3.7356650829315186
    7. ' '&' → logprob: -5.235665321350098
    8. ']' → logprob: -5.485665321350098
    9. ' in' → logprob: -5.985665321350098
    10. '[' → logprob: -6.360665321350098

Token 179: ' ==' (ID: 951)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3813558518886566
    2. '=='' → logprob: -2.2563557624816895
    3. ' ==' → logprob: -2.3813557624816895
    4. '==' → logprob: -3.1313557624816895
    5. ' '' → logprob: -3.5063557624816895
    6. ' in' → logprob: -4.3813557624816895
    7. ' '&' → logprob: -4.5063557624816895
    8. '=' → logprob: -4.7563557624816895
    9. ' '('' → logprob: -6.1313557624816895
    10. ' ' → logprob: -6.5063557624816895

Token 180: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.035748809576034546
    2. ''*' → logprob: -4.0357489585876465
    3. ' '' → logprob: -5.2857489585876465
    4. ''A' → logprob: -5.5357489585876465
    5. ''C' → logprob: -6.0357489585876465
    6. ''+' → logprob: -6.6607489585876465
    7. ' '+'' → logprob: -7.0357489585876465
    8. ''S' → logprob: -7.5357489585876465
    9. ''N' → logprob: -7.6607489585876465
    10. ''O' → logprob: -7.9107489585876465

Token 181: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5605508089065552
    2. ':' → logprob: -1.0605508089065552
    3. '<|end|>' → logprob: -3.0605506896972656
    4. 'and' → logprob: -3.8105506896972656
    5. ' ' → logprob: -5.935550689697266
    6. ')' → logprob: -6.060550689697266
    7. 'a' → logprob: -6.685550689697266
    8. ':
' → logprob: -6.935550689697266
    9. '   ' → logprob: -7.060550689697266
    10. '[' → logprob: -7.185550689697266

Token 182: '       ' (ID: 309)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' op' → logprob: -1.1865737438201904
    2. ' f' → logprob: -1.8115737438201904
    3. 'op' → logprob: -2.0615737438201904
    4. 'f' → logprob: -2.6865737438201904
    5. 'l' → logprob: -2.6865737438201904
    6. ' left' → logprob: -2.6865737438201904
    7. ' l' → logprob: -2.8115737438201904
    8. 'left' → logprob: -4.0615739822387695
    9. 'i' → logprob: -4.3115739822387695
    10. ' val' → logprob: -4.4365739822387695

Token 183: ' #' (ID: 1069)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.4542759358882904
    2. 'left' → logprob: -1.2042759656906128
    3. ' op' → logprob: -3.4542758464813232
    4. 'l' → logprob: -4.454276084899902
    5. ' left' → logprob: -4.454276084899902
    6. 'pos' → logprob: -5.829276084899902
    7. 'f' → logprob: -6.079276084899902
    8. 'i' → logprob: -6.954276084899902
    9. ')' → logprob: -6.954276084899902
    10. '#' (adapté à ' #') → logprob: -7.204276084899902

Token 184: ' find' (ID: 1646)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.27601659297943115
    2. 'left' → logprob: -1.6510165929794312
    3. ' op' → logprob: -4.151016712188721
    4. 'pos' → logprob: -4.276016712188721
    5. '#' → logprob: -5.276016712188721
    6. 'l' → logprob: -5.526016712188721
    7. ' left' → logprob: -5.526016712188721
    8. 'i' → logprob: -6.901016712188721
    9. 'f' → logprob: -7.151016712188721
    10. 'for' → logprob: -7.401016712188721

Token 185: ' operator' (ID: 11019)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.6738905906677246
    2. ' op' → logprob: -1.6738905906677246
    3. ' space' → logprob: -2.5488905906677246
    4. ' matching' → logprob: -2.7988905906677246
    5. 'pos' → logprob: -2.9238905906677246
    6. ' closing' → logprob: -2.9238905906677246
    7. 'count' → logprob: -3.0488905906677246
    8. ')' → logprob: -3.2988905906677246
    9. 'space' → logprob: -3.5488905906677246
    10. ' pos' → logprob: -3.5488905906677246

Token 186: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20158164203166962
    2. ' ' → logprob: -1.826581597328186
    3. 'i' → logprob: -4.4515814781188965
    4. ' space' → logprob: -5.2015814781188965
    5. ')' → logprob: -6.4515814781188965
    6. ' )' → logprob: -7.4515814781188965
    7. ' idx' → logprob: -7.5765814781188965
    8. ' for' → logprob: -7.7015814781188965
    9. ' pos' → logprob: -8.076581954956055
    10. 'space' → logprob: -8.076581954956055

Token 187: '
' (ID: 198)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.32494860887527466
    2. ' pos' → logprob: -1.8249485492706299
    3. 'pos' → logprob: -2.94994854927063
    4. 'i' → logprob: -2.94994854927063
    5. ' space' → logprob: -5.074948787689209
    6. 'space' → logprob: -6.324948787689209
    7. ' idx' → logprob: -6.949948787689209
    8. ' for' → logprob: -7.199948787689209
    9. 'count' → logprob: -8.44994831085205
    10. ' op' → logprob: -8.57494831085205

Token 188: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7721865177154541
    2. ' pos' → logprob: -1.647186517715454
    3. ' count' → logprob: -2.397186517715454
    4. '       ' → logprob: -2.397186517715454
    5. 'count' → logprob: -3.522186517715454
    6. ' cnt' → logprob: -3.522186517715454
    7. 'i' → logprob: -3.772186517715454
    8. 'pos' → logprob: -4.022186279296875
    9. ' op' → logprob: -4.147186279296875
    10. '   ' → logprob: -4.772186279296875

Token 189: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2441626787185669
    2. 'i' → logprob: -2.2441625595092773
    3. ' pos' → logprob: -3.4941625595092773
    4. ' i' → logprob: -3.6191625595092773
    5. 'op' → logprob: -4.119162559509277
    6. 'count' → logprob: -4.494162559509277
    7. 'depth' → logprob: -4.869162559509277
    8. 'stack' → logprob: -5.369162559509277
    9. ' op' → logprob: -5.744162559509277
    10. 'balance' → logprob: -6.369162559509277

Token 190: ' formula' (ID: 20690)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2967974841594696
    2. 'depth' → logprob: -2.546797513961792
    3. 'op' → logprob: -3.046797513961792
    4. 'count' → logprob: -3.171797513961792
    5. 'stack' → logprob: -4.046797275543213
    6. 'i' → logprob: -4.296797275543213
    7. 'for' → logprob: -4.671797275543213
    8. ' pos' → logprob: -4.921797275543213
    9. 'open' → logprob: -4.921797275543213
    10. 'close' → logprob: -5.046797275543213

Token 191: ' is' (ID: 382)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1430931091308594
    2. '_pos' → logprob: -1.6430931091308594
    3. ' =' → logprob: -1.8930931091308594
    4. '_len' → logprob: -3.1430931091308594
    5. '_' → logprob: -3.2680931091308594
    6. '_idx' → logprob: -3.3930931091308594
    7. 'def' → logprob: -3.5180931091308594
    8. '[' → logprob: -3.5180931091308594
    9. '=' → logprob: -3.5180931091308594
    10. '_index' → logprob: -4.018093109130859

Token 192: ' like' (ID: 1299)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.053087018430233
    2. '(' → logprob: -3.678086996078491
    3. ' '('' → logprob: -4.17808723449707
    4. ''(' → logprob: -5.42808723449707
    5. ' (' → logprob: -5.80308723449707
    6. '"' → logprob: -6.30308723449707
    7. 'formula' → logprob: -7.42808723449707
    8. '(form' → logprob: -8.05308723449707
    9. '   ' → logprob: -8.67808723449707
    10. '('' → logprob: -9.17808723449707

Token 193: ' (' (ID: 350)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6241414546966553
    2. '(' → logprob: -0.9991414546966553
    3. ''(' → logprob: -3.2491414546966553
    4. ' (' → logprob: -3.3741414546966553
    5. 'formula' → logprob: -5.124141693115234
    6. ' '('' → logprob: -5.499141693115234
    7. '(
' → logprob: -5.749141693115234
    8. '"' → logprob: -5.999141693115234
    9. ' formula' → logprob: -6.374141693115234
    10. '('' → logprob: -6.499141693115234

Token 194: 'X' (ID: 55)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.04700440540909767
    2. 'form' → logprob: -4.672004222869873
    3. 'f' → logprob: -5.172004222869873
    4. 'A' → logprob: -5.172004222869873
    5. '-' → logprob: -5.547004222869873
    6. '[' → logprob: -5.797004222869873
    7. 'eval' → logprob: -5.797004222869873
    8. ' formula' → logprob: -5.922004222869873
    9. ')' → logprob: -6.422004222869873
    10. 'op' → logprob: -6.797004222869873

Token 195: '*' (ID: 9)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08249170333147049
    2. '2' → logprob: -3.457491636276245
    3. ' ' → logprob: -3.582491636276245
    4. '[' → logprob: -5.582491874694824
    5. ',' → logprob: -5.707491874694824
    6. '(' → logprob: -5.957491874694824
    7. ')' → logprob: -5.957491874694824
    8. '-' → logprob: -6.832491874694824
    9. ' (' → logprob: -6.957491874694824
    10. '+' → logprob: -7.207491874694824

Token 196: 'Y' (ID: 56)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4986320734024048
    2. '1' → logprob: -0.9986320734024048
    3. ')' → logprob: -4.623631954193115
    4. '3' → logprob: -4.998631954193115
    5. '[' → logprob: -5.873631954193115
    6. ' ' → logprob: -6.373631954193115
    7. ',' → logprob: -7.498631954193115
    8. '+' → logprob: -7.748631954193115
    9. '+)' → logprob: -7.748631954193115
    10. '0' → logprob: -7.998631954193115

Token 197: ')' (ID: 8)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7579696178436279
    2. 'i' → logprob: -1.257969617843628
    3. ')' → logprob: -1.507969617843628
    4. '1' → logprob: -5.257969856262207
    5. ' )' → logprob: -5.507969856262207
    6. 'pos' → logprob: -5.882969856262207
    7. '
' → logprob: -6.132969856262207
    8. ',' → logprob: -6.257969856262207
    9. ' ' → logprob: -6.382969856262207
    10. ' for' → logprob: -6.507969856262207

Token 198: ' or' (ID: 503)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8738189339637756
    2. ' pos' → logprob: -1.2488188743591309
    3. ' i' → logprob: -1.7488188743591309
    4. 'i' → logprob: -2.373818874359131
    5. ' for' → logprob: -4.623818874359131
    6. ' op' → logprob: -5.623818874359131
    7. 'for' → logprob: -6.498818874359131
    8. 'op' → logprob: -6.498818874359131
    9. '   ' → logprob: -6.623818874359131
    10. 'depth' → logprob: -6.623818874359131

Token 199: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9891623854637146
    2. ' (' → logprob: -0.9891623854637146
    3. ''' → logprob: -1.9891624450683594
    4. ' '('' → logprob: -2.9891624450683594
    5. 'formula' → logprob: -4.239162445068359
    6. '(X' → logprob: -4.489162445068359
    7. ''(' → logprob: -4.614162445068359
    8. '       ' → logprob: -5.364162445068359
    9. ' formula' → logprob: -5.489162445068359
    10. ' '' → logprob: -5.864162445068359

Token 200: 'X' (ID: 55)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.0958716943860054
    2. '1' → logprob: -3.470871686935425
    3. 'X' → logprob: -3.970871686935425
    4. ' formula' → logprob: -4.845871925354004
    5. ' ' → logprob: -5.220871925354004
    6. '-' → logprob: -5.220871925354004
    7. '(' → logprob: -5.595871925354004
    8. '[' → logprob: -6.345871925354004
    9. 'eval' → logprob: -6.345871925354004
    10. 'form' → logprob: -6.470871925354004

Token 201: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05493791401386261
    2. '[' → logprob: -3.1799378395080566
    3. '|' → logprob: -4.929937839508057
    4. '*' → logprob: -6.179937839508057
    5. ' ' → logprob: -7.304937839508057
    6. ' +' → logprob: -7.804937839508057
    7. '&' → logprob: -7.929937839508057
    8. 'or' → logprob: -8.679938316345215
    9. ' or' → logprob: -8.929938316345215
    10. '1' → logprob: -9.179938316345215

Token 202: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00016384923947043717
    2. ' Y' → logprob: -9.500164031982422
    3. 'X' → logprob: -9.875164031982422
    4. 'Z' → logprob: -10.750164031982422
    5. ')' → logprob: -12.375164031982422
    6. '<|end|>' → logprob: -13.000164031982422
    7. ' ' → logprob: -13.250164031982422
    8. '1' → logprob: -13.500164031982422
    9. 'formula' → logprob: -13.625164031982422
    10. ',' → logprob: -13.750164031982422

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03350668027997017
    2. '       ' → logprob: -4.408506870269775
    3. '   ' → logprob: -4.908506870269775
    4. ' )' → logprob: -5.033506870269775
    5. '[' → logprob: -6.283506870269775
    6. '')' → logprob: -6.533506870269775
    7. ',' → logprob: -7.033506870269775
    8. ' ' → logprob: -7.283506870269775
    9. '    ' → logprob: -8.033506393432617
    10. ' ')' → logprob: -8.158506393432617

Token 204: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6720401048660278
    2. 'pos' → logprob: -1.6720401048660278
    3. 'i' → logprob: -1.9220401048660278
    4. ' pos' → logprob: -2.1720399856567383
    5. '       ' → logprob: -3.9220399856567383
    6. ' for' → logprob: -5.047039985656738
    7. '   ' → logprob: -5.797039985656738
    8. ')' → logprob: -5.797039985656738
    9. 'idx' → logprob: -6.797039985656738
    10. ' idx' → logprob: -7.047039985656738

Token 205: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2759395241737366
    2. 'i' → logprob: -2.275939464569092
    3. 'depth' → logprob: -3.025939464569092
    4. 'count' → logprob: -3.400939464569092
    5. 'op' → logprob: -4.025939464569092
    6. 'stack' → logprob: -4.400939464569092
    7. ' pos' → logprob: -5.275939464569092
    8. ' i' → logprob: -5.400939464569092
    9. 'paren' → logprob: -6.150939464569092
    10. 'balance' → logprob: -6.275939464569092

Token 206: ' find' (ID: 1646)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.676474392414093
    2. 'i' → logprob: -1.6764743328094482
    3. 'op' → logprob: -2.0514743328094482
    4. 'depth' → logprob: -2.9264743328094482
    5. 'for' → logprob: -3.1764743328094482
    6. 'stack' → logprob: -3.4264743328094482
    7. ' i' → logprob: -5.176474571228027
    8. 'count' → logprob: -5.301474571228027
    9. ' pos' → logprob: -5.301474571228027
    10. 'left' → logprob: -5.551474571228027

Token 207: ' main' (ID: 2758)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.19969302415847778
    2. ' op' → logprob: -2.699692964553833
    3. 'pos' → logprob: -2.824692964553833
    4. 'i' → logprob: -3.324692964553833
    5. ' pos' → logprob: -5.199693202972412
    6. ' i' → logprob: -5.574693202972412
    7. 'operator' → logprob: -6.074693202972412
    8. 'space' → logprob: -6.199693202972412
    9. 'bal' → logprob: -6.824693202972412
    10. ' space' → logprob: -6.824693202972412

Token 208: ' operator' (ID: 11019)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -1.1266719102859497
    2. '_' → logprob: -1.2516719102859497
    3. 'operator' → logprob: -2.25167179107666
    4. '_operator' → logprob: -2.25167179107666
    5. 'op' → logprob: -2.37667179107666
    6. ' operator' → logprob: -3.50167179107666
    7. ' op' → logprob: -3.62667179107666
    8. ' _' → logprob: -3.75167179107666
    9. ' ' → logprob: -6.12667179107666
    10. '_space' → logprob: -7.00167179107666

Token 209: ' that' (ID: 484)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014636924490332603
    2. ' pos' → logprob: -4.514636993408203
    3. 'i' → logprob: -6.514636993408203
    4. ' for' → logprob: -7.514636993408203
    5. ' idx' → logprob: -7.639636993408203
    6. ' ' → logprob: -8.389636993408203
    7. 'pos' → logprob: -8.514636993408203
    8. ' space' → logprob: -8.639636993408203
    9. ')' → logprob: -9.514636993408203
    10. ' count' → logprob: -9.889636993408203

Token 210: ' splits' (ID: 76848)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4357973039150238
    2. 'is' → logprob: -1.4357973337173462
    3. ' balances' → logprob: -3.3107972145080566
    4. 'balances' → logprob: -3.3107972145080566
    5. ' isn't' → logprob: -4.685797214508057
    6. 'spl' → logprob: -5.310797214508057
    7. ' formula' → logprob: -5.685797214508057
    8. 'se' → logprob: -5.810797214508057
    9. 's' → logprob: -5.935797214508057
    10. 'formula' → logprob: -6.310797214508057

Token 211: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.09054017812013626
    2. ' formula' → logprob: -2.5905401706695557
    3. 'the' → logprob: -5.590540409088135
    4. ' the' → logprob: -5.965540409088135
    5. '_formula' → logprob: -6.215540409088135
    6. ')' → logprob: -6.840540409088135
    7. 'form' → logprob: -7.090540409088135
    8. 'X' → logprob: -8.090539932250977
    9. 'f' → logprob: -8.590539932250977
    10. '   ' → logprob: -8.965539932250977

Token 212: ' in' (ID: 306)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5170114040374756
    2. 'i' → logprob: -1.1420114040374756
    3. ' =' → logprob: -4.017011642456055
    4. '=' → logprob: -4.017011642456055
    5. ' for' → logprob: -4.392011642456055
    6. 'pos' → logprob: -4.517011642456055
    7. 'idx' → logprob: -5.017011642456055
    8. ' idx' → logprob: -5.392011642456055
    9. ' pos' → logprob: -5.642011642456055
    10. 'for' → logprob: -6.392011642456055

Token 213: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.733292281627655
    2. 'the' → logprob: -1.6082923412322998
    3. 'formula' → logprob: -2.2332923412323
    4. '1' → logprob: -2.3582923412323
    5. ' two' → logprob: -3.3582923412323
    6. '2' → logprob: -3.9832923412323
    7. 'sub' → logprob: -4.108292102813721
    8. 'tokens' → logprob: -4.358292102813721
    9. ' the' → logprob: -4.858292102813721
    10. 'balanced' → logprob: -5.108292102813721

Token 214: ' sub' (ID: 1543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24226245284080505
    2. 'i' → logprob: -2.242262363433838
    3. 'pos' → logprob: -2.992262363433838
    4. ' pos' → logprob: -3.242262363433838
    5. ')' → logprob: -4.992262363433838
    6. ' idx' → logprob: -5.742262363433838
    7. 'count' → logprob: -5.867262363433838
    8. ' count' → logprob: -6.742262363433838
    9. 'idx' → logprob: -6.867262363433838
    10. ' for' → logprob: -6.867262363433838

Token 215: 'form' (ID: 700)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.2846725285053253
    2. 'form' → logprob: -1.534672498703003
    3. 'express' → logprob: -4.534672737121582
    4. 'tokens' → logprob: -4.784672737121582
    5. 'f' → logprob: -5.409672737121582
    6. '_formula' → logprob: -5.659672737121582
    7. 'strings' → logprob: -6.409672737121582
    8. ' formula' → logprob: -7.159672737121582
    9. 'expr' → logprob: -7.659672737121582
    10. '_form' → logprob: -7.909672737121582

Token 216: 'ulas' (ID: 20748)
  Prédit: 'ula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -0.12284685671329498
    2. 'ulas' → logprob: -2.497846841812134
    3. 'at' → logprob: -3.997846841812134
    4. 'ats' → logprob: -4.747847080230713
    5. 'a' → logprob: -6.247847080230713
    6. 'la' → logprob: -7.372847080230713
    7. 'ul' → logprob: -7.497847080230713
    8. '   ' → logprob: -7.747847080230713
    9. 'as' → logprob: -7.872847080230713
    10. 's' → logprob: -8.122846603393555

Token 217: '
' (ID: 198)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07674135267734528
    2. 'i' → logprob: -3.2017414569854736
    3. ' pos' → logprob: -3.9517414569854736
    4. ')' → logprob: -5.3267412185668945
    5. 'pos' → logprob: -5.4517412185668945
    6. ' count' → logprob: -6.7017412185668945
    7. '   ' → logprob: -7.0767412185668945
    8. 'count' → logprob: -7.2017412185668945
    9. ' )' → logprob: -7.9517412185668945
    10. ' idx' → logprob: -8.076741218566895

Token 218: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02658729813992977
    2. ' pos' → logprob: -4.52658748626709
    3. 'i' → logprob: -5.02658748626709
    4. '    ' → logprob: -6.15158748626709
    5. ')' → logprob: -6.65158748626709
    6. 'pos' → logprob: -6.90158748626709
    7. '   ' → logprob: -7.15158748626709
    8. '(' → logprob: -7.40158748626709
    9. ' ' → logprob: -7.40158748626709
    10. '       ' → logprob: -7.77658748626709

Token 219: ' level' (ID: 3211)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.49326664209365845
    2. ' pos' → logprob: -1.4932665824890137
    3. ' i' → logprob: -2.8682665824890137
    4. 'i' → logprob: -2.9932665824890137
    5. 'count' → logprob: -4.243266582489014
    6. 'depth' → logprob: -4.493266582489014
    7. 'stack' → logprob: -4.743266582489014
    8. ' stack' → logprob: -5.368266582489014
    9. ' depth' → logprob: -5.743266582489014
    10. 'balance' → logprob: -5.743266582489014

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889056205749512
    2. '=' → logprob: -2.578890562057495
    3. ' ' → logprob: -15.078890800476074
    4. ',' → logprob: -15.453890800476074
    5. ' +=' → logprob: -16.453889846801758
    6. 's' → logprob: -16.453889846801758
    7. '_=' → logprob: -16.953889846801758
    8. '   ' → logprob: -17.203889846801758
    9. 'count' → logprob: -17.453889846801758
    10. ' =
' → logprob: -17.453889846801758

Token 221: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007834223215468228
    2. ' ' → logprob: -7.500783443450928
    3. '1' → logprob: -8.37578296661377
    4. '   ' → logprob: -17.500783920288086
    5. '۰' → logprob: -19.625783920288086
    6. '  ' → logprob: -19.750783920288086
    7. '	' → logprob: -20.625783920288086
    8. ' ' → logprob: -20.688283920288086
    9. '2' → logprob: -20.875783920288086
    10. '=' → logprob: -20.938283920288086

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011760921915993094
    2. '1' → logprob: -9.250117301940918
    3. ' ' → logprob: -10.750117301940918
    4. '۰' → logprob: -19.375118255615234
    5. '   ' → logprob: -19.500118255615234
    6. '=' → logprob: -19.937618255615234
    7. '2' → logprob: -20.250118255615234
    8. '[' → logprob: -20.312618255615234
    9. '  ' → logprob: -20.375118255615234
    10. '０' → logprob: -20.625118255615234

Token 223: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9355021715164185
    2. 'for' → logprob: -1.1855021715164185
    3. '
' → logprob: -2.685502052307129
    4. ' i' → logprob: -2.810502052307129
    5. 'i' → logprob: -2.810502052307129
    6. '   ' → logprob: -3.060502052307129
    7. '       ' → logprob: -3.060502052307129
    8. ' ' → logprob: -4.435502052307129
    9. ' 
' → logprob: -5.810502052307129
    10. '    ' → logprob: -7.060502052307129

Token 224: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25694289803504944
    2. 'for' → logprob: -1.756942868232727
    3. ' i' → logprob: -3.3819429874420166
    4. 'i' → logprob: -4.5069427490234375
    5. '   ' → logprob: -5.1319427490234375
    6. '
' → logprob: -6.5069427490234375
    7. '       ' → logprob: -7.2569427490234375
    8. 'pos' → logprob: -7.7569427490234375
    9. ' pos' → logprob: -9.256942749023438
    10. ' ' → logprob: -9.756942749023438

Token 225: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026511605829000473
    2. 'pos' → logprob: -4.0265116691589355
    3. 'op' → logprob: -5.2765116691589355
    4. ' for' → logprob: -6.5265116691589355
    5. 'i' → logprob: -6.7765116691589355
    6. 'operator' → logprob: -7.5265116691589355
    7. ' op' → logprob: -9.776511192321777
    8. ' pos' → logprob: -12.276511192321777
    9. ' operator' → logprob: -12.651511192321777
    10. ' i' → logprob: -12.776511192321777

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132636249065399
    2. ' i' → logprob: -1.3132636547088623
    3. 'idx' → logprob: -14.063263893127441
    4. 'pos' → logprob: -14.688263893127441
    5. ' idx' → logprob: -14.938263893127441
    6. '	i' → logprob: -15.813263893127441
    7. 'index' → logprob: -16.188262939453125
    8. ' pos' → logprob: -16.563262939453125
    9. ' index' → logprob: -17.438262939453125
    10. ' ' → logprob: -19.063262939453125

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014397254213690758
    2. 'in' → logprob: -4.264397144317627
    3. ' ' → logprob: -8.514397621154785
    4. ',' → logprob: -11.139397621154785
    5. '	in' → logprob: -11.514397621154785
    6. ' i' → logprob: -13.014397621154785
    7. '<|end|>' → logprob: -13.639397621154785
    8. ' range' → logprob: -13.889397621154785
    9. 'range' → logprob: -14.264397621154785
    10. ' ,' → logprob: -14.264397621154785

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975083328783512
    2. ' range' → logprob: -3.5297508239746094
    3. '1' → logprob: -16.15475082397461
    4. '(range' → logprob: -16.15475082397461
    5. '
' → logprob: -16.52975082397461
    6. '	range' → logprob: -16.65475082397461
    7. ' xrange' → logprob: -17.27975082397461
    8. '   ' → logprob: -17.40475082397461
    9. ' ' → logprob: -17.52975082397461
    10. '```' → logprob: -20.15475082397461

Token 229: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011659173294901848
    2. '2' → logprob: -4.886659145355225
    3. '(' → logprob: -5.636659145355225
    4. ' ' → logprob: -7.761659145355225
    5. 'len' → logprob: -10.261659622192383
    6. ' (' → logprob: -12.011659622192383
    7. '(len' → logprob: -12.261659622192383
    8. '   ' → logprob: -12.386659622192383
    9. ' len' → logprob: -13.636659622192383
    10. '    ' → logprob: -14.136659622192383

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012023169983876869
    2. 'len' → logprob: -9.500120162963867
    3. '2' → logprob: -10.250120162963867
    4. ' ' → logprob: -11.875120162963867
    5. '(' → logprob: -13.625120162963867
    6. '   ' → logprob: -15.312620162963867
    7. ' len' → logprob: -15.312620162963867
    8. '```' → logprob: -15.687620162963867
    9. '
' → logprob: -15.937620162963867
    10. '6' → logprob: -16.062620162963867

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01271247398108244
    2. ',len' → logprob: -4.387712478637695
    3. ' ,' → logprob: -8.637712478637695
    4. ',length' → logprob: -11.387712478637695
    5. 'len' → logprob: -11.637712478637695
    6. '<|end|>' → logprob: -13.762712478637695
    7. '(len' → logprob: -13.887712478637695
    8. ',i' → logprob: -14.012712478637695
    9. ' len' → logprob: -14.637712478637695
    10. ' ' → logprob: -14.637712478637695

Token 232: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -8.061054359131958e-06
    2. ' len' → logprob: -11.750007629394531
    3. '(len' → logprob: -16.87500762939453
    4. ' ' → logprob: -18.00000762939453
    5. '   ' → logprob: -18.12500762939453
    6. '
' → logprob: -18.25000762939453
    7. ')' → logprob: -19.12500762939453
    8. '<len' → logprob: -19.25000762939453
    9. '[len' → logprob: -19.62500762939453
    10. ',len' → logprob: -19.62500762939453

Token 233: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -2.522638169466518e-05
    2. 'formula' → logprob: -10.750024795532227
    3. ' (' → logprob: -13.250024795532227
    4. '(' → logprob: -13.500024795532227
    5. ' formula' → logprob: -15.250024795532227
    6. ')' → logprob: -15.625024795532227
    7. '=form' → logprob: -16.250024795532227
    8. '_formula' → logprob: -17.125024795532227
    9. '(
' → logprob: -17.500024795532227
    10. ' ' → logprob: -18.250024795532227

Token 234: 'ula' (ID: 3419)
  Prédit: 'ula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -1.0921942703134846e-05
    2. ')' → logprob: -11.87501049041748
    3. '```' → logprob: -13.62501049041748
    4. 'la' → logprob: -13.87501049041748
    5. 'ула' → logprob: -14.75001049041748
    6. 'a' → logprob: -14.87501049041748
    7. '[' → logprob: -15.50001049041748
    8. '   ' → logprob: -15.62501049041748
    9. ')
' → logprob: -16.250011444091797
    10. ']' → logprob: -16.500011444091797

Token 235: ')-' (ID: 14080)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.2589595317840576
    2. ')):
' → logprob: -1.6339595317840576
    3. '):' → logprob: -3.5089595317840576
    4. '):
' → logprob: -6.383959770202637
    5. ')' → logprob: -7.383959770202637
    6. '))' → logprob: -7.633959770202637
    7. ')):
' → logprob: -9.633959770202637
    8. ' ' → logprob: -9.883959770202637
    9. ' ):' → logprob: -10.008959770202637
    10. ']):' → logprob: -10.633959770202637

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -11.000020027160645
    3. '2' → logprob: -13.250020027160645
    4. '-' → logprob: -14.375020027160645
    5. '   ' → logprob: -15.375020027160645
    6. '
' → logprob: -15.500020027160645
    7. '```' → logprob: -15.625020027160645
    8. ')' → logprob: -16.375019073486328
    9. '

' → logprob: -16.875019073486328
    10. ' -' → logprob: -17.125019073486328

Token 237: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761168003082275
    2. '):' → logprob: -0.8261168003082275
    3. ':' → logprob: -9.576116561889648
    4. '):
' → logprob: -10.451116561889648
    5. '       ' → logprob: -10.576116561889648
    6. ':
' → logprob: -11.201116561889648
    7. ' ):
' → logprob: -11.326116561889648
    8. ' ):' → logprob: -11.826116561889648
    9. '):

' → logprob: -12.076116561889648
    10. ')' → logprob: -12.576116561889648

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01894742250442505
    2. ' if' → logprob: -4.268947601318359
    3. 'if' → logprob: -6.268947601318359
    4. '	       ' → logprob: -6.893947601318359
    5. ' ' → logprob: -7.143947601318359
    6. '            
' → logprob: -8.39394760131836
    7. '<|end|>' → logprob: -8.39394760131836
    8. '            ' → logprob: -9.01894760131836
    9. '        ' → logprob: -9.39394760131836
    10. '          ' → logprob: -9.76894760131836

Token 239: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7964856624603271
    2. 'if' (adapté à ' if') → logprob: -1.2964856624603271
    3. 'c' → logprob: -1.5464856624603271
    4. ' c' → logprob: -2.921485662460327
    5. 'char' → logprob: -5.421485900878906
    6. ' char' → logprob: -6.171485900878906
    7. 'ch' → logprob: -6.671485900878906
    8. '       ' → logprob: -7.796485900878906
    9. 'token' → logprob: -8.421485900878906
    10. ' ch' → logprob: -9.046485900878906

Token 240: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.4741535782814026
    2. ' formula' → logprob: -0.9741535782814026
    3. 'form' → logprob: -9.599153518676758
    4. ' formule' → logprob: -12.849153518676758
    5. '_formula' → logprob: -12.849153518676758
    6. '(form' → logprob: -13.849153518676758
    7. ' ' → logprob: -13.974153518676758
    8. '	form' → logprob: -14.474153518676758
    9. 'formular' → logprob: -14.724153518676758
    10. ' form' → logprob: -15.349153518676758

Token 241: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005254156421869993
    2. '[' → logprob: -5.25525426864624
    3. '[
' → logprob: -10.880253791809082
    4. '[I' → logprob: -14.630253791809082
    5. 'i' → logprob: -14.880253791809082
    6. ' [' → logprob: -15.505253791809082
    7. '[in' → logprob: -16.5052547454834
    8. '```' → logprob: -16.6302547454834
    9. ''[' → logprob: -16.7552547454834
    10. '==' → logprob: -16.7552547454834

Token 242: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20063196122646332
    2. ' ==' → logprob: -1.9506319761276245
    3. '=='' → logprob: -3.575631856918335
    4. ']==' → logprob: -5.200632095336914
    5. ''' → logprob: -6.325632095336914
    6. '(' → logprob: -6.450632095336914
    7. ']' → logprob: -7.075632095336914
    8. ']=='' → logprob: -7.075632095336914
    9. '[' → logprob: -8.075632095336914
    10. '==
' → logprob: -8.700632095336914

Token 243: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004705899860709906
    2. '=='' → logprob: -5.629705905914307
    3. ' ==' → logprob: -7.629705905914307
    4. '(' → logprob: -7.754705905914307
    5. '==
' → logprob: -9.254705429077148
    6. '=' → logprob: -10.629705429077148
    7. '()==' → logprob: -10.879705429077148
    8. '===' → logprob: -10.879705429077148
    9. '=="' → logprob: -11.629705429077148
    10. ''' → logprob: -11.754705429077148

Token 244: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00017195509281009436
    2. '(' → logprob: -8.750171661376953
    3. ' '('' → logprob: -11.625171661376953
    4. '('' → logprob: -13.375171661376953
    5. ''(' → logprob: -13.375171661376953
    6. '"' → logprob: -13.500171661376953
    7. '(
' → logprob: -19.000171661376953
    8. '')' → logprob: -19.500171661376953
    9. '`' → logprob: -19.625171661376953
    10. ''''' → logprob: -20.000171661376953

Token 245: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35553836822509766
    2. ':' → logprob: -1.2305383682250977
    3. '               ' → logprob: -5.230538368225098
    4. ' or' → logprob: -7.105538368225098
    5. '):
' → logprob: -7.855538368225098
    6. ')' → logprob: -8.980538368225098
    7. '           ' → logprob: -8.980538368225098
    8. '<|end|>' → logprob: -9.730538368225098
    9. '):' → logprob: -9.855538368225098
    10. '              ' → logprob: -10.855538368225098

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004378144163638353
    2. 'level' → logprob: -6.379378318786621
    3. '	level' → logprob: -7.129378318786621
    4. '	           ' → logprob: -7.254378318786621
    5. ' level' → logprob: -8.379378318786621
    6. '[level' → logprob: -8.629378318786621
    7. '			   ' → logprob: -8.754378318786621
    8. '			' → logprob: -8.879378318786621
    9. '		       ' → logprob: -9.004378318786621
    10. '(level' → logprob: -9.004378318786621

Token 247: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.02907843515276909
    2. ' level' → logprob: -3.779078483581543
    3. '               ' → logprob: -5.279078483581543
    4. '	level' → logprob: -7.654078483581543
    5. '[level' → logprob: -8.904078483581543
    6. '(level' → logprob: -9.654078483581543
    7. '                   ' → logprob: -10.404078483581543
    8. '
' → logprob: -11.904078483581543
    9. '.level' → logprob: -13.279078483581543
    10. '   ' → logprob: -13.654078483581543

Token 248: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0010638902895152569
    2. ' +=' → logprob: -7.001063823699951
    3. '=' → logprob: -9.00106430053711
    4. '+' → logprob: -10.50106430053711
    5. ']+=' → logprob: -14.00106430053711
    6. '+='' → logprob: -14.75106430053711
    7. '+="' → logprob: -15.50106430053711
    8. '+=(' → logprob: -16.25106430053711
    9. '++' → logprob: -17.75106430053711
    10. '<|end|>' → logprob: -18.12606430053711

Token 249: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -17.750019073486328
    4. '   ' → logprob: -18.625019073486328
    5. '```' → logprob: -21.625019073486328
    6. '
' → logprob: -21.625019073486328
    7. '  ' → logprob: -22.000019073486328
    8. '۱' → logprob: -22.375019073486328
    9. '+' → logprob: -23.125019073486328
    10. '0' → logprob: -23.500019073486328

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '<|end|>' → logprob: -18.125
    4. '```' → logprob: -21.0
    5. '0' → logprob: -22.0
    6. '+' → logprob: -22.5
    7. '۱' → logprob: -22.5
    8. '   ' → logprob: -23.0
    9. '
' → logprob: -23.25
    10. '-' → logprob: -23.5

Token 251: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13975666463375092
    2. 'elif' → logprob: -2.139756679534912
    3. ' elif' → logprob: -5.139756679534912
    4. '       ' → logprob: -6.139756679534912
    5. '<|end|>' → logprob: -6.264756679534912
    6. '
' → logprob: -6.639756679534912
    7. '               ' → logprob: -7.014756679534912
    8. '	elif' → logprob: -8.764756202697754
    9. '   ' → logprob: -9.389756202697754
    10. '		' → logprob: -9.514756202697754

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02140538953244686
    2. 'elif' → logprob: -4.521405220031738
    3. ' elif' → logprob: -4.646405220031738
    4. '       ' → logprob: -7.521405220031738
    5. ' if' → logprob: -10.396405220031738
    6. ' ' → logprob: -10.521405220031738
    7. '               ' → logprob: -10.521405220031738
    8. '   ' → logprob: -11.146405220031738
    9. '          ' → logprob: -11.271405220031738
    10. '<|end|>' → logprob: -11.521405220031738

Token 253: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.04659273102879524
    2. 'if' → logprob: -3.5465927124023438
    3. ' elif' → logprob: -4.296592712402344
    4. '           ' → logprob: -6.421592712402344
    5. ' if' → logprob: -6.546592712402344
    6. '       ' → logprob: -11.546592712402344
    7. '               ' → logprob: -11.796592712402344
    8. '	elif' → logprob: -12.796592712402344
    9. '   ' → logprob: -13.046592712402344
    10. ' ' → logprob: -13.921592712402344

Token 254: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.4851120412349701
    2. ' formula' → logprob: -0.9851120710372925
    3. '')' → logprob: -4.860112190246582
    4. 'form' → logprob: -5.985112190246582
    5. ' ')'' → logprob: -8.485112190246582
    6. ' ')' → logprob: -8.735112190246582
    7. ')' → logprob: -8.860112190246582
    8. ' ' → logprob: -9.360112190246582
    9. '	form' → logprob: -10.985112190246582
    10. '_formula' → logprob: -11.110112190246582

Token 255: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.990154047845863e-05
    2. '[' → logprob: -10.125049591064453
    3. ' [' → logprob: -12.375049591064453
    4. '[
' → logprob: -13.125049591064453
    5. 'i' → logprob: -13.375049591064453
    6. ' ' → logprob: -14.625049591064453
    7. ' i' → logprob: -15.000049591064453
    8. 'if' → logprob: -15.750049591064453
    9. ' ==' → logprob: -15.750049591064453
    10. ''' → logprob: -16.000049591064453

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23383095860481262
    2. '==' → logprob: -2.3588309288024902
    3. ']==' → logprob: -2.3588309288024902
    4. ' ==' → logprob: -3.9838309288024902
    5. '[' → logprob: -7.73383092880249
    6. ']=='' → logprob: -9.108831405639648
    7. ''' → logprob: -9.358831405639648
    8. ' ]' → logprob: -9.733831405639648
    9. '']' → logprob: -9.858831405639648
    10. '=='' → logprob: -10.608831405639648

Token 257: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5762364268302917
    2. '==' → logprob: -0.8262364268302917
    3. '[' → logprob: -9.451236724853516
    4. ']==' → logprob: -9.576236724853516
    5. '=='' → logprob: -10.076236724853516
    6. ']' → logprob: -10.201236724853516
    7. ')' → logprob: -10.701236724853516
    8. ''' → logprob: -11.076236724853516
    9. '==
' → logprob: -11.951236724853516
    10. ' ' → logprob: -12.201236724853516

Token 258: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0006520323222503066
    2. ' ')' → logprob: -8.250652313232422
    3. ' ')'' → logprob: -8.375652313232422
    4. ')' → logprob: -8.750652313232422
    5. ''' → logprob: -13.875652313232422
    6. '")' → logprob: -14.250652313232422
    7. ''):' → logprob: -16.375652313232422
    8. ')'' → logprob: -16.500652313232422
    9. '']' → logprob: -16.500652313232422
    10. ' ' → logprob: -16.875652313232422

Token 259: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09086482971906662
    2. ':
' → logprob: -2.715864896774292
    3. ':' → logprob: -4.090864658355713
    4. '(level' → logprob: -7.215864658355713
    5. '[level' → logprob: -7.340864658355713
    6. '           ' → logprob: -7.465864658355713
    7. '                   ' → logprob: -7.840864658355713
    8. 'level' → logprob: -8.340865135192871
    9. '              ' → logprob: -8.465865135192871
    10. '                ' → logprob: -8.465865135192871

Token 260: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017532380297780037
    2. 'level' → logprob: -7.251753330230713
    3. ' level' → logprob: -7.501753330230713
    4. '	level' → logprob: -8.376752853393555
    5. '           ' → logprob: -9.126752853393555
    6. '                   ' → logprob: -10.001752853393555
    7. '	           ' → logprob: -10.751752853393555
    8. '[level' → logprob: -10.876752853393555
    9. '(level' → logprob: -11.001752853393555
    10. '   ' → logprob: -11.251752853393555

Token 261: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.5760409832000732
    2. ' level' → logprob: -0.8260409832000732
    3. '               ' → logprob: -9.451041221618652
    4. '                   ' → logprob: -11.826041221618652
    5. '	level' → logprob: -11.826041221618652
    6. '[level' → logprob: -12.326041221618652
    7. '(level' → logprob: -12.701041221618652
    8. '           ' → logprob: -14.826041221618652
    9. '            ' → logprob: -15.951041221618652
    10. '.level' → logprob: -16.201040267944336

Token 262: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03632606565952301
    2. ' -=' → logprob: -3.5363261699676514
    3. '-' → logprob: -5.036325931549072
    4. '               ' → logprob: -11.03632640838623
    5. '           ' → logprob: -11.03632640838623
    6. '   ' → logprob: -11.78632640838623
    7. ' -' → logprob: -12.03632640838623
    8. '+=' → logprob: -12.66132640838623
    9. '                   ' → logprob: -12.91132640838623
    10. '            ' → logprob: -13.28632640838623

Token 263: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07888989895582199
    2. ' ' → logprob: -2.578889846801758
    3. '           ' → logprob: -16.828889846801758
    4. '   ' → logprob: -17.203889846801758
    5. '               ' → logprob: -18.328889846801758
    6. '                   ' → logprob: -19.078889846801758
    7. ' ' → logprob: -19.828889846801758
    8. '```' → logprob: -19.828889846801758
    9. '       ' → logprob: -20.578889846801758
    10. '-' → logprob: -20.578889846801758

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.000045776367188
    4. '           ' → logprob: -19.000045776367188
    5. '<|end|>' → logprob: -19.500045776367188
    6. '```' → logprob: -20.125045776367188
    7. '
' → logprob: -20.625045776367188
    8. '       ' → logprob: -21.000045776367188
    9. '               ' → logprob: -21.375045776367188
    10. ')' → logprob: -21.375045776367188

Token 265: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00311984121799469
    2. ' elif' → logprob: -6.128119945526123
    3. 'elif' → logprob: -7.628119945526123
    4. '<|end|>' → logprob: -8.253119468688965
    5. ' else' → logprob: -10.253119468688965
    6. '<|end|>' → logprob: -10.753119468688965
    7. '       ' → logprob: -10.753119468688965
    8. '		' → logprob: -10.878119468688965
    9. ',' → logprob: -11.003119468688965
    10. '	elif' → logprob: -11.128119468688965

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015223885886371136
    2. ' elif' → logprob: -4.265223979949951
    3. 'elif' → logprob: -7.265223979949951
    4. '       ' → logprob: -8.515223503112793
    5. ' else' → logprob: -9.765223503112793
    6. '               ' → logprob: -10.890223503112793
    7. '   ' → logprob: -10.890223503112793
    8. '```' → logprob: -11.015223503112793
    9. '	elif' → logprob: -11.015223503112793
    10. '<|end|>' → logprob: -11.890223503112793

Token 267: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.48716259002685547
    2. ' elif' → logprob: -0.9871625900268555
    3. '           ' → logprob: -4.4871625900268555
    4. ' if' → logprob: -7.2371625900268555
    5. 'if' → logprob: -8.237162590026855
    6. ' ' → logprob: -8.612162590026855
    7. '	elif' → logprob: -8.612162590026855
    8. 'else' → logprob: -8.987162590026855
    9. '       ' → logprob: -8.987162590026855
    10. ' else' → logprob: -9.612162590026855

Token 268: ' (' (ID: 350)
  Prédit: '(form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -1.039529800415039
    2. ' (' → logprob: -1.164529800415039
    3. '(level' → logprob: -1.289529800415039
    4. ' level' → logprob: -3.539529800415039
    5. ' formula' → logprob: -4.164529800415039
    6. 'level' → logprob: -5.164529800415039
    7. 'formula' → logprob: -5.414529800415039
    8. '(' → logprob: -5.539529800415039
    9. ' ' → logprob: -10.164529800415039
    10. 'form' → logprob: -10.289529800415039

Token 269: 'formula' (ID: 157531)
  Prédit: '(form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -0.8057109713554382
    2. 'formula' → logprob: -0.9307109713554382
    3. ' (' → logprob: -2.555711030960083
    4. ' formula' → logprob: -3.180711030960083
    5. 'level' → logprob: -3.805711030960083
    6. '(level' → logprob: -4.430710792541504
    7. ' level' → logprob: -5.930710792541504
    8. 'form' → logprob: -6.180710792541504
    9. ' ' → logprob: -8.305710792541504
    10. '(' → logprob: -8.555710792541504

Token 270: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.625007629394531
    3. 'i' → logprob: -13.750007629394531
    4. ')[' → logprob: -14.000007629394531
    5. ' [' → logprob: -14.000007629394531
    6. '[
' → logprob: -14.500007629394531
    7. ' i' → logprob: -14.500007629394531
    8. ')' → logprob: -15.625007629394531
    9. ' ' → logprob: -16.00000762939453
    10. '```' → logprob: -17.00000762939453

Token 271: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48461779952049255
    2. ' ==' → logprob: -0.9846178293228149
    3. '==' → logprob: -4.859617710113525
    4. ' =='' → logprob: -7.109617710113525
    5. '=='' → logprob: -7.109617710113525
    6. ' ' → logprob: -7.234617710113525
    7. 'in' → logprob: -8.234618186950684
    8. ' '' → logprob: -10.234618186950684
    9. ' !=' → logprob: -10.859618186950684
    10. ''' → logprob: -10.984618186950684

Token 272: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.050082460045814514
    2. ' ==' → logprob: -3.4250824451446533
    3. '==' → logprob: -4.550082683563232
    4. 'in' → logprob: -5.300082683563232
    5. '=='' → logprob: -7.550082683563232
    6. ' ' → logprob: -9.425082206726074
    7. ' '' → logprob: -9.925082206726074
    8. ' =='' → logprob: -10.050082206726074
    9. '['' → logprob: -11.425082206726074
    10. ''' → logprob: -11.550082206726074

Token 273: ' '*'' (ID: 89603)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.610693633556366
    2. ''*' → logprob: -0.985693633556366
    3. ''+' → logprob: -2.7356936931610107
    4. ' '+'' → logprob: -4.235693454742432
    5. ' '' → logprob: -6.235693454742432
    6. ' '*'' → logprob: -6.360693454742432
    7. ' '+' → logprob: -7.860693454742432
    8. ' '*' → logprob: -8.11069393157959
    9. '')' → logprob: -10.86069393157959
    10. '+' → logprob: -10.86069393157959

Token 274: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005640432238578796
    2. ')' → logprob: -5.630640506744385
    3. 'or' → logprob: -6.630640506744385
    4. ' ' → logprob: -8.130640029907227
    5. ' )' → logprob: -8.255640029907227
    6. '<|end|>' → logprob: -8.880640029907227
    7. ' and' → logprob: -11.380640029907227
    8. ''or' → logprob: -12.505640029907227
    9. '<|end|>' → logprob: -12.880640029907227
    10. '	or' → logprob: -13.005640029907227

Token 275: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.20146068930625916
    2. 'formula' → logprob: -1.7014607191085815
    3. 'form' → logprob: -10.951460838317871
    4. '_formula' → logprob: -11.576460838317871
    5. ' formule' → logprob: -12.576460838317871
    6. 'formular' → logprob: -12.826460838317871
    7. '(form' → logprob: -12.826460838317871
    8. ' ' → logprob: -12.951460838317871
    9. ''' → logprob: -13.326460838317871
    10. ' fórmula' → logprob: -13.326460838317871

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.625003814697266
    3. 'i' → logprob: -15.250003814697266
    4. '[
' → logprob: -15.750003814697266
    5. ' ' → logprob: -17.000003814697266
    6. ' i' → logprob: -18.125003814697266
    7. '(i' → logprob: -18.375003814697266
    8. ')' → logprob: -18.500003814697266
    9. ' [' → logprob: -18.750003814697266
    10. '<|end|>' → logprob: -19.250003814697266

Token 277: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5880420804023743
    2. ']==' → logprob: -0.8380420804023743
    3. '==' → logprob: -4.713042259216309
    4. ']=='' → logprob: -6.338042259216309
    5. '[' → logprob: -7.338042259216309
    6. '[i' → logprob: -8.338042259216309
    7. ' ==' → logprob: -8.588042259216309
    8. '']==' → logprob: -9.963042259216309
    9. '']' → logprob: -10.463042259216309
    10. ')==' → logprob: -10.463042259216309

Token 278: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18033993244171143
    2. ' ==' → logprob: -1.8053399324417114
    3. '=='' → logprob: -7.680339813232422
    4. '=' → logprob: -9.805339813232422
    5. '[' → logprob: -10.680339813232422
    6. ''' → logprob: -11.305339813232422
    7. ' =='' → logprob: -11.305339813232422
    8. ')==' → logprob: -11.555339813232422
    9. ')' → logprob: -11.805339813232422
    10. ']==' → logprob: -12.305339813232422

Token 279: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.016205159947276115
    2. ''' → logprob: -4.266205310821533
    3. ' '+' → logprob: -6.266205310821533
    4. '+' → logprob: -9.516204833984375
    5. ' '+'' → logprob: -10.016204833984375
    6. ')+' → logprob: -12.266204833984375
    7. '+)' → logprob: -12.516204833984375
    8. '"+' → logprob: -12.516204833984375
    9. ')' → logprob: -13.016204833984375
    10. '('+' → logprob: -13.391204833984375

Token 280: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519995868206024
    2. '')' → logprob: -1.5019996166229248
    3. ' )' → logprob: -10.751999855041504
    4. ''' → logprob: -11.501999855041504
    5. '<|end|>' → logprob: -11.626999855041504
    6. ' ')' → logprob: -12.126999855041504
    7. ''):
' → logprob: -12.251999855041504
    8. ' and' → logprob: -12.376999855041504
    9. ' or' → logprob: -13.251999855041504
    10. 'and' → logprob: -13.501999855041504

Token 281: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003311746520921588
    2. 'and' → logprob: -5.753311634063721
    3. '<|end|>' → logprob: -9.128312110900879
    4. ' ' → logprob: -11.628312110900879
    5. '<|end|>' → logprob: -12.378312110900879
    6. ')' → logprob: -12.378312110900879
    7. '           ' → logprob: -13.003312110900879
    8. '       ' → logprob: -13.628312110900879
    9. ' if' → logprob: -13.753312110900879
    10. '	and' → logprob: -13.753312110900879

Token 282: ' level' (ID: 3211)
  Prédit: ' level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.048587825149297714
    2. 'level' → logprob: -3.0485877990722656
    3. '(level' → logprob: -14.923587799072266
    4. '	level' → logprob: -16.173587799072266
    5. '[level' → logprob: -17.423587799072266
    6. ' nivel' → logprob: -18.048587799072266
    7. ' lvl' → logprob: -18.798587799072266
    8. ' leve' → logprob: -19.548587799072266
    9. ' ' → logprob: -19.548587799072266
    10. '.level' → logprob: -19.548587799072266

Token 283: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07890355587005615
    2. ' ==' → logprob: -2.5789036750793457
    3. '==
' → logprob: -12.203903198242188
    4. '0' → logprob: -12.328903198242188
    5. ']==' → logprob: -13.453903198242188
    6. '===' → logprob: -13.578903198242188
    7. '()==' → logprob: -14.453903198242188
    8. ')==' → logprob: -14.703903198242188
    9. '<|end|>' → logprob: -15.078903198242188
    10. '=' → logprob: -15.328903198242188

Token 284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -20.7500057220459
    4. '۰' → logprob: -21.6250057220459
    5. '   ' → logprob: -22.6250057220459
    6. '０' → logprob: -23.7500057220459
    7. '
' → logprob: -23.7500057220459
    8. '00' → logprob: -23.8750057220459
    9. '০' → logprob: -24.1250057220459
    10. 'zero' → logprob: -24.7500057220459

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -17.375
    4. '۰' → logprob: -20.0
    5. 'zero' → logprob: -21.0
    6. '০' → logprob: -21.375
    7. '   ' → logprob: -21.5
    8. '
' → logprob: -21.75
    9. '<|end|>' → logprob: -21.875
    10. '```' → logprob: -22.4375

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05029889568686485
    2. ':
' → logprob: -3.0502989292144775
    3. '):
' → logprob: -7.800298690795898
    4. '           ' → logprob: -7.800298690795898
    5. '               ' → logprob: -8.175298690795898
    6. '):' → logprob: -8.675298690795898
    7. ':return' → logprob: -8.675298690795898
    8. ' :' → logprob: -9.175298690795898
    9. ')' → logprob: -9.800298690795898
    10. '       ' → logprob: -10.425298690795898

Token 287: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15665701031684875
    2. ':
' → logprob: -2.9066569805145264
    3. '           ' → logprob: -3.0316569805145264
    4. ' return' → logprob: -3.7816569805145264
    5. ':' → logprob: -4.5316572189331055
    6. ' :
' → logprob: -5.9066572189331055
    7. '):
' → logprob: -6.0316572189331055
    8. ' :' → logprob: -6.7816572189331055
    9. ':return' → logprob: -7.4066572189331055
    10. ' ):
' → logprob: -8.531657218933105

Token 288: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.014221448451280594
    2. 'op' (adapté à ' op') → logprob: -4.264221668243408
    3. 'operator' → logprob: -10.76422119140625
    4. ' operator' → logprob: -11.01422119140625
    5. 'pos' → logprob: -11.88922119140625
    6. ' pos' → logprob: -12.26422119140625
    7. '	op' → logprob: -12.63922119140625
    8. ' opr' → logprob: -14.01422119140625
    9. 'return' → logprob: -14.26422119140625
    10. ' return' → logprob: -14.26422119140625

Token 289: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0004618896055035293
    2. 'pos' → logprob: -8.00046157836914
    3. '_' → logprob: -9.50046157836914
    4. '_idx' → logprob: -10.62546157836914
    5. 'Pos' → logprob: -11.25046157836914
    6. '_index' → logprob: -11.62546157836914
    7. '=' → logprob: -12.87546157836914
    8. '_position' → logprob: -14.00046157836914
    9. 'os' → logprob: -14.62546157836914
    10. ' =' → logprob: -14.87546157836914

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144714415073395
    2. '=' → logprob: -1.7014471292495728
    3. ' =
' → logprob: -10.951447486877441
    4. '=i' → logprob: -11.201447486877441
    5. '=
' → logprob: -13.576447486877441
    6. ' ' → logprob: -13.576447486877441
    7. '＝' → logprob: -17.076446533203125
    8. ' =
' → logprob: -17.326446533203125
    9. '=

' → logprob: -17.451446533203125
    10. ' =)' → logprob: -17.576446533203125

Token 291: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020354038861114532
    2. ' i' → logprob: -8.500203132629395
    3. '	i' → logprob: -18.12520408630371
    4. '
' → logprob: -20.12520408630371
    5. ')i' → logprob: -20.50020408630371
    6. '<|end|>' → logprob: -21.00020408630371
    7. ' ' → logprob: -21.12520408630371
    8. '   ' → logprob: -21.25020408630371
    9. '$i' → logprob: -21.62520408630371
    10. '```' → logprob: -21.75020408630371

Token 292: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030423623975366354
    2. '<|end|>' → logprob: -6.753042221069336
    3. '       ' → logprob: -6.878042221069336
    4. '
' → logprob: -7.878042221069336
    5. '<|end|>' → logprob: -8.628042221069336
    6. '                ' → logprob: -9.753042221069336
    7. '           ' → logprob: -10.378042221069336
    8. ')' → logprob: -10.378042221069336
    9. ' break' → logprob: -10.628042221069336
    10. '                
' → logprob: -10.628042221069336

Token 293: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09131157398223877
    2. '       ' → logprob: -2.466311454772949
    3. '
' → logprob: -7.341311454772949
    4. '<|end|>' → logprob: -7.591311454772949
    5. '        
' → logprob: -7.716311454772949
    6. '                
' → logprob: -8.34131145477295
    7. ')' → logprob: -9.21631145477295
    8. ',' → logprob: -9.59131145477295
    9. '              ' → logprob: -9.84131145477295
    10. '                ' → logprob: -10.09131145477295

Token 294: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46600544452667236
    2. 'break' (adapté à ' break') → logprob: -1.4660054445266724
    3. ' break' → logprob: -1.9660054445266724
    4. '       ' → logprob: -7.091005325317383
    5. 'left' → logprob: -8.591005325317383
    6. '	break' → logprob: -8.841005325317383
    7. '                
' → logprob: -8.841005325317383
    8. ' left' → logprob: -9.841005325317383
    9. '
' → logprob: -10.091005325317383
    10. '              ' → logprob: -10.091005325317383

Token 295: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003357728011906147
    2. ' left' → logprob: -6.128357887268066
    3. ' lhs' → logprob: -7.378357887268066
    4. '   ' → logprob: -8.753357887268066
    5. 'left' → logprob: -9.628357887268066
    6. '        
' → logprob: -9.753357887268066
    7. '      ' → logprob: -10.253357887268066
    8. 'lhs' → logprob: -10.628357887268066
    9. '           ' → logprob: -11.128357887268066
    10. ' ' → logprob: -11.128357887268066

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005438896827399731
    2. ' left' → logprob: -5.630438804626465
    3. 'left' → logprob: -7.130438804626465
    4. '        
' → logprob: -7.630438804626465
    5. '
' → logprob: -7.880438804626465
    6. '   ' → logprob: -10.255438804626465
    7. '      ' → logprob: -10.755438804626465
    8. ' lhs' → logprob: -11.005438804626465
    9. '       
' → logprob: -11.130438804626465
    10. '                
' → logprob: -11.630438804626465

Token 297: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.008141472004354
    2. ' left' → logprob: -5.50814151763916
    3. 'lhs' → logprob: -6.13314151763916
    4. 'X' → logprob: -7.38314151763916
    5. 'l' → logprob: -7.50814151763916
    6. '       ' → logprob: -7.88314151763916
    7. 'x' → logprob: -9.13314151763916
    8. 'L' → logprob: -9.75814151763916
    9. ' lhs' → logprob: -10.25814151763916
    10. 'sub' → logprob: -10.38314151763916

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4041380286216736
    2. '_formula' → logprob: -1.5291380882263184
    3. '_' → logprob: -2.6541380882263184
    4. '=' → logprob: -3.5291380882263184
    5. '_form' → logprob: -5.029138088226318
    6. '_sub' → logprob: -5.279138088226318
    7. '_val' → logprob: -5.654138088226318
    8. '=form' → logprob: -8.40413761138916
    9. '_f' → logprob: -8.77913761138916
    10. '_=' → logprob: -8.90413761138916

Token 299: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.4034357964992523
    2. 'eval' → logprob: -1.5284358263015747
    3. ' formula' → logprob: -2.528435707092285
    4. ' eval' → logprob: -3.403435707092285
    5. 'form' → logprob: -6.278435707092285
    6. ' formule' → logprob: -10.215935707092285
    7. 'formular' → logprob: -11.028435707092285
    8. ' ' → logprob: -11.090935707092285
    9. '_formula' → logprob: -11.153435707092285
    10. '(eval' → logprob: -11.528435707092285

Token 300: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021521867893170565
    2. '1' → logprob: -8.500215530395508
    3. '(' → logprob: -11.875215530395508
    4. '[
' → logprob: -13.375215530395508
    5. ' [' → logprob: -13.625215530395508
    6. '[:' → logprob: -14.125215530395508
    7. '=' → logprob: -14.375215530395508
    8. '[left' → logprob: -15.250215530395508
    9. ':' → logprob: -15.875215530395508
    10. '```' → logprob: -17.250215530395508

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.125123977661133
    3. '   ' → logprob: -11.750123977661133
    4. 'op' → logprob: -12.500123977661133
    5. '2' → logprob: -13.875123977661133
    6. '(' → logprob: -14.500123977661133
    7. ' op' → logprob: -14.750123977661133
    8. '    ' → logprob: -15.250123977661133
    9. '  ' → logprob: -15.375123977661133
    10. '     ' → logprob: -15.625123977661133

Token 302: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7954958821064793e-05
    2. ' :' → logprob: -11.500018119812012
    3. 'op' → logprob: -11.875018119812012
    4. ',' → logprob: -15.500018119812012
    5. '	op' → logprob: -15.500018119812012
    6. ':
' → logprob: -16.500017166137695
    7. ' op' → logprob: -16.625017166137695
    8. '(op' → logprob: -17.000017166137695
    9. 'opf' → logprob: -17.375017166137695
    10. ':semicolon' → logprob: -18.000017166137695

Token 303: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.9361264946837764e-07
    2. ' op' → logprob: -16.0
    3. 'opf' → logprob: -18.625
    4. '	op' → logprob: -21.0
    5. '
' → logprob: -21.5
    6. '(op' → logprob: -21.75
    7. 'opt' → logprob: -22.25
    8. '_op' → logprob: -24.0
    9. 'opcode' → logprob: -24.625
    10. 'ops' → logprob: -25.375

Token 304: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.860340752406046e-05
    2. 'pos' → logprob: -9.7500581741333
    3. '_' → logprob: -16.000059127807617
    4. 'Pos' → logprob: -16.875059127807617
    5. '	pos' → logprob: -17.125059127807617
    6. '-pos' → logprob: -17.875059127807617
    7. ' pos' → logprob: -18.000059127807617
    8. '_op' → logprob: -18.125059127807617
    9. '[pos' → logprob: -18.500059127807617
    10. '_p' → logprob: -18.625059127807617

Token 305: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011260372586548328
    2. ']
' → logprob: -4.511260509490967
    3. ' ]' → logprob: -9.386260032653809
    4. ')' → logprob: -9.761260032653809
    5. '       ' → logprob: -9.886260032653809
    6. '   ' → logprob: -11.886260032653809
    7. '<|end|>' → logprob: -12.761260032653809
    8. ']

' → logprob: -12.886260032653809
    9. ' ]
' → logprob: -13.261260032653809
    10. ']
' → logprob: -14.011260032653809

Token 306: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.007508787326514721
    2. ' right' → logprob: -5.382508754730225
    3. '       ' → logprob: -5.882508754730225
    4. '	right' → logprob: -9.882509231567383
    5. '        
' → logprob: -11.007509231567383
    6. '
' → logprob: -11.257509231567383
    7. '.right' → logprob: -11.882509231567383
    8. ',right' → logprob: -12.757509231567383
    9. '_right' → logprob: -13.632509231567383
    10. '[right' → logprob: -14.132509231567383

Token 307: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.008617054671049118
    2. ' right' → logprob: -4.758616924285889
    3. '	right' → logprob: -13.383617401123047
    4. '       ' → logprob: -14.008617401123047
    5. '
' → logprob: -17.258617401123047
    6. '_right' → logprob: -18.008617401123047
    7. '   ' → logprob: -18.008617401123047
    8. '           ' → logprob: -18.133617401123047
    9. 'rightness' → logprob: -18.133617401123047
    10. ' ' → logprob: -18.258617401123047

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327468156814575
    2. '=' → logprob: -1.313274621963501
    3. '=form' → logprob: -11.313274383544922
    4. 'formula' → logprob: -15.188274383544922
    5. ' formula' → logprob: -15.563274383544922
    6. ')' → logprob: -16.313274383544922
    7. '<|end|>' → logprob: -16.438274383544922
    8. '_formula' → logprob: -17.313274383544922
    9. '＝' → logprob: -17.438274383544922
    10. ' =
' → logprob: -17.563274383544922

Token 309: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.6931552886962891
    2. 'formula' → logprob: -0.6931552886962891
    3. 'form' → logprob: -11.818155288696289
    4. ' formule' → logprob: -15.068155288696289
    5. '_formula' → logprob: -15.193155288696289
    6. 'formular' → logprob: -16.81815528869629
    7. ' form' → logprob: -17.06815528869629
    8. ' formular' → logprob: -17.19315528869629
    9. '=form' → logprob: -17.44315528869629
    10. '(form' → logprob: -17.81815528869629

Token 310: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9623810658231378e-05
    2. '1' → logprob: -11.250020027160645
    3. '+' → logprob: -13.000020027160645
    4. '_pos' → logprob: -13.625020027160645
    5. 'op' → logprob: -13.750020027160645
    6. 'pos' → logprob: -14.375020027160645
    7. '>' → logprob: -14.625020027160645
    8. '[
' → logprob: -14.750020027160645
    9. '
' → logprob: -15.875020027160645
    10. '_op' → logprob: -16.375019073486328

Token 311: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -3.762356209335849e-05
    2. ' op' → logprob: -11.12503719329834
    3. '(op' → logprob: -11.62503719329834
    4. '1' → logprob: -11.75003719329834
    5. 'pos' → logprob: -12.37503719329834
    6. '+' → logprob: -13.37503719329834
    7. '(' → logprob: -17.250038146972656
    8. '_op' → logprob: -17.250038146972656
    9. '[' → logprob: -17.625038146972656
    10. '2' → logprob: -18.000038146972656

Token 312: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.7631749510765076
    2. 'pos' → logprob: -1.2631750106811523
    3. 'os' → logprob: -1.3881750106811523
    4. 's' → logprob: -7.138175010681152
    5. 'Pos' → logprob: -7.388175010681152
    6. '+' → logprob: -9.513175010681152
    7. 'sp' → logprob: -11.638175010681152
    8. 'op' → logprob: -12.763175010681152
    9. '```' → logprob: -12.888175010681152
    10. 'osition' → logprob: -13.013175010681152

Token 313: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.392202976712724e-06
    2. ' +' → logprob: -12.000006675720215
    3. '1' → logprob: -16.1250057220459
    4. ']+' → logprob: -19.2500057220459
    5. '+
' → logprob: -19.6250057220459
    6. '＋' → logprob: -20.0000057220459
    7. '()+' → logprob: -20.5000057220459
    8. '[' → logprob: -21.2500057220459
    9. '+]' → logprob: -21.3750057220459
    10. '```' → logprob: -21.6250057220459

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -20.125
    4. '
' → logprob: -20.25
    5. '   ' → logprob: -20.75
    6. '0' → logprob: -21.125
    7. ']' → logprob: -21.375
    8. '2' → logprob: -21.75
    9. '

' → logprob: -22.0
    10. '-' → logprob: -22.0

Token 315: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.07891380041837692
    2. ':' → logprob: -2.578913688659668
    3. ' :' → logprob: -10.828913688659668
    4. ' :-' → logprob: -13.453913688659668
    5. ':]' → logprob: -13.703913688659668
    6. 'len' → logprob: -13.828913688659668
    7. ':].' → logprob: -14.953913688659668
    8. ':]
' → logprob: -15.578913688659668
    9. ':end' → logprob: -16.828914642333984
    10. '=len' → logprob: -17.578914642333984

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '   ' → logprob: -17.25
    4. ')' → logprob: -17.4375
    5. '```' → logprob: -17.4375
    6. '
' → logprob: -18.25
    7. '``' → logprob: -18.75
    8. '１' → logprob: -19.0625
    9. '

' → logprob: -19.3125
    10. '۱' → logprob: -19.375

Token 317: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029329674318432808
    2. ')
' → logprob: -3.904329776763916
    3. ']' → logprob: -4.779329776763916
    4. '   ' → logprob: -9.154329299926758
    5. ' )' → logprob: -9.279329299926758
    6. '       ' → logprob: -9.404329299926758
    7. ']
' → logprob: -10.029329299926758
    8. '）' → logprob: -12.404329299926758
    9. ' ' → logprob: -12.529329299926758
    10. ' )
' → logprob: -12.654329299926758

Token 318: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5337304472923279
    2. ' left' → logprob: -1.6587305068969727
    3. '   ' → logprob: -2.5337305068969727
    4. '       ' → logprob: -2.6587305068969727
    5. 'val' → logprob: -2.7837305068969727
    6. ' val' → logprob: -4.783730506896973
    7. '	left' → logprob: -6.783730506896973
    8. 'lhs' → logprob: -7.533730506896973
    9. ' lhs' → logprob: -7.908730506896973
    10. 'res' → logprob: -8.283730506896973

Token 319: ' val' (ID: 1459)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.14344125986099243
    2. 'val' (adapté à ' val') → logprob: -2.3934412002563477
    3. 'l' → logprob: -3.3934412002563477
    4. 'v' → logprob: -5.768441200256348
    5. 'lv' → logprob: -6.018441200256348
    6. 'vl' → logprob: -6.393441200256348
    7. ' left' → logprob: -6.768441200256348
    8. 'lhs' → logprob: -9.018441200256348
    9. '       ' → logprob: -9.393441200256348
    10. ' val' → logprob: -10.768441200256348

Token 320: 'L' (ID: 43)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0023698240984231234
    2. 'left' → logprob: -6.5023698806762695
    3. '_l' → logprob: -7.5023698806762695
    4. ' =' → logprob: -8.87736988067627
    5. 'L' → logprob: -9.75236988067627
    6. '=' → logprob: -9.87736988067627
    7. 'l' → logprob: -10.25236988067627
    8. ' left' → logprob: -10.62736988067627
    9. 'Left' → logprob: -12.87736988067627
    10. '1' → logprob: -12.87736988067627

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.201414108276367
    4. ',' → logprob: -16.451414108276367
    5. ')' → logprob: -17.951414108276367
    6. ' =
' → logprob: -18.576414108276367
    7. '  ' → logprob: -18.826414108276367
    8. ' ' → logprob: -19.201414108276367
    9. '=
' → logprob: -19.701414108276367
    10. '   ' → logprob: -19.701414108276367

Token 322: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.10020710527896881
    2. ' eval' → logprob: -2.3502070903778076
    3. '(eval' → logprob: -14.850207328796387
    4. ' ' → logprob: -16.85020637512207
    5. '.eval' → logprob: -17.22520637512207
    6. '   ' → logprob: -17.97520637512207
    7. '_eval' → logprob: -18.60020637512207
    8. 'val' → logprob: -19.22520637512207
    9. 'ev' → logprob: -19.47520637512207
    10. 'evalu' → logprob: -19.60020637512207

Token 323: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -2.3199920178740285e-05
    2. '_form' → logprob: -10.750022888183594
    3. '_' → logprob: -13.500022888183594
    4. ' _' → logprob: -15.875022888183594
    5. '```' → logprob: -16.750022888183594
    6. '_code' → logprob: -17.875022888183594
    7. 'Formula' → logprob: -17.875022888183594
    8. ''_' → logprob: -18.125022888183594
    9. '"_' → logprob: -18.500022888183594
    10. '\' → logprob: -18.500022888183594

Token 324: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -6.0391463193809614e-05
    2. '(' → logprob: -10.250060081481934
    3. '(form' → logprob: -10.750060081481934
    4. ' (' → logprob: -13.125060081481934
    5. 'left' → logprob: -14.125060081481934
    6. '(right' → logprob: -15.250060081481934
    7. '(
' → logprob: -15.625060081481934
    8. '(lhs' → logprob: -16.25006103515625
    9. ' left' → logprob: -16.87506103515625
    10. ',left' → logprob: -17.00006103515625

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014287306112237275
    2. ' ,' → logprob: -8.875143051147461
    3. ',val' → logprob: -12.875143051147461
    4. '(vals' → logprob: -15.500143051147461
    5. ' vals' → logprob: -15.875143051147461
    6. ' ' → logprob: -17.37514305114746
    7. ',
' → logprob: -17.37514305114746
    8. 'vals' → logprob: -18.25014305114746
    9. ')' → logprob: -18.62514305114746
    10. '```' → logprob: -18.62514305114746

Token 326: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.16022859513759613
    2. ' vals' → logprob: -1.9102286100387573
    3. '(vals' → logprob: -12.660228729248047
    4. 'val' → logprob: -13.910228729248047
    5. '_vals' → logprob: -15.535228729248047
    6. 'Vals' → logprob: -16.160228729248047
    7. 'vars' → logprob: -16.285228729248047
    8. ' ' → logprob: -17.910228729248047
    9. 'vall' → logprob: -18.160228729248047
    10. 'values' → logprob: -18.285228729248047

Token 327: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006721298210322857
    2. ')' → logprob: -5.006721496582031
    3. ')
' → logprob: -12.256721496582031
    4. ' )
' → logprob: -14.006721496582031
    5. ')

' → logprob: -15.381721496582031
    6. '       ' → logprob: -16.25672149658203
    7. '   ' → logprob: -17.00672149658203
    8. ')`
' → logprob: -18.13172149658203
    9. ' ' → logprob: -18.50672149658203
    10. ' )' → logprob: -19.75672149658203

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26132437586784363
    2. '
' → logprob: -1.761324405670166
    3. 'val' → logprob: -2.886324405670166
    4. ' val' → logprob: -6.636324405670166
    5. '        
' → logprob: -7.261324405670166
    6. '	val' → logprob: -9.011323928833008
    7. '   ' → logprob: -10.136323928833008
    8. ',val' → logprob: -10.136323928833008
    9. '<|end|>' → logprob: -10.136323928833008
    10. '[val' → logprob: -10.386323928833008

Token 329: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0049189734272658825
    2. ' val' → logprob: -5.379919052124023
    3. '       ' → logprob: -8.129919052124023
    4. '	val' → logprob: -12.754919052124023
    5. 'Val' → logprob: -15.379919052124023
    6. '_val' → logprob: -15.379919052124023
    7. '   ' → logprob: -15.879919052124023
    8. ',val' → logprob: -16.254919052124023
    9. '      ' → logprob: -16.379919052124023
    10. '[val' → logprob: -16.379919052124023

Token 330: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.45848218582978e-06
    2. '_R' → logprob: -13.87500286102295
    3. ' R' → logprob: -14.25000286102295
    4. '=' → logprob: -14.50000286102295
    5. '_' → logprob: -15.50000286102295
    6. '```' → logprob: -17.000001907348633
    7. ' =' → logprob: -17.125001907348633
    8. '[' → logprob: -17.500001907348633
    9. '[R' → logprob: -18.000001907348633
    10. '	R' → logprob: -18.250001907348633

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ')' → logprob: -16.813261032104492
    4. ' ' → logprob: -17.313261032104492
    5. ' =
' → logprob: -18.438261032104492
    6. '=
' → logprob: -19.063261032104492
    7. ' ' → logprob: -19.313261032104492
    8. '=

' → logprob: -19.563261032104492
    9. ',' → logprob: -19.938261032104492
    10. '[' → logprob: -20.188261032104492

Token 332: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.014164329506456852
    2. ' eval' → logprob: -4.264164447784424
    3. '(eval' → logprob: -14.139163970947266
    4. '.eval' → logprob: -16.139163970947266
    5. '_eval' → logprob: -17.264163970947266
    6. 'val' → logprob: -18.264163970947266
    7. 'evaluate' → logprob: -18.764163970947266
    8. ' ' → logprob: -19.389163970947266
    9. 'e' → logprob: -19.764163970947266
    10. 'evalu' → logprob: -19.889163970947266

Token 333: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -4.320199877838604e-07
    2. 'formula' → logprob: -14.75
    3. '_function' → logprob: -16.875
    4. 'Formula' → logprob: -19.0
    5. '_form' → logprob: -19.625
    6. ' formula' → logprob: -19.875
    7. '```' → logprob: -20.125
    8. '_' → logprob: -20.5
    9. '_code' → logprob: -21.0
    10. '_algorithm' → logprob: -21.125

Token 334: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.002436308655887842
    2. 'right' → logprob: -6.25243616104126
    3. '_right' → logprob: -8.127436637878418
    4. '_formula' → logprob: -9.377436637878418
    5. '[right' → logprob: -9.877436637878418
    6. ' right' → logprob: -10.252436637878418
    7. '	right' → logprob: -10.752436637878418
    8. '(' → logprob: -11.752436637878418
    9. ',right' → logprob: -12.127436637878418
    10. '_' → logprob: -13.377436637878418

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. ' ,' → logprob: -10.875025749206543
    3. ',val' → logprob: -12.000025749206543
    4. ')' → logprob: -14.750025749206543
    5. ',
' → logprob: -15.500025749206543
    6. '(vals' → logprob: -17.25002670288086
    7. '<|end|>' → logprob: -17.87502670288086
    8. ',v' → logprob: -18.50002670288086
    9. ' vals' → logprob: -18.62502670288086
    10. '‌,' → logprob: -18.87502670288086

Token 336: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.16026638448238373
    2. ' vals' → logprob: -1.910266399383545
    3. '(vals' → logprob: -10.660265922546387
    4. 'val' → logprob: -10.910265922546387
    5. ' val' → logprob: -15.160265922546387
    6. 'vall' → logprob: -16.160266876220703
    7. '_vals' → logprob: -17.035266876220703
    8. 'Vals' → logprob: -17.160266876220703
    9. ')' → logprob: -18.535266876220703
    10. '[val' → logprob: -18.535266876220703

Token 337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859384149312973
    2. ')
' → logprob: -3.048593759536743
    3. ')
' → logprob: -12.798593521118164
    4. ')

' → logprob: -12.923593521118164
    5. '       ' → logprob: -14.673593521118164
    6. ' )' → logprob: -15.048593521118164
    7. ')return' → logprob: -15.298593521118164
    8. '   ' → logprob: -15.798593521118164
    9. ' )
' → logprob: -17.048593521118164
    10. ')`' → logprob: -17.798593521118164

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1066882312297821
    2. 'if' → logprob: -2.7316882610321045
    3. ' if' → logprob: -3.3566882610321045
    4. '```' → logprob: -6.981688022613525
    5. '
' → logprob: -9.356688499450684
    6. '``' → logprob: -9.481688499450684
    7. '   ' → logprob: -9.731688499450684
    8. '	if' → logprob: -9.856688499450684
    9. '        
' → logprob: -11.106688499450684
    10. '<|end|>' → logprob: -12.231688499450684

Token 339: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0868605449795723
    2. '       ' → logprob: -2.5868606567382812
    3. ' if' → logprob: -4.836860656738281
    4. '
' → logprob: -12.836860656738281
    5. '	if' → logprob: -13.461860656738281
    6. '        
' → logprob: -14.086860656738281
    7. '   ' → logprob: -14.461860656738281
    8. 'If' → logprob: -14.711860656738281
    9. '```' → logprob: -14.711860656738281
    10. ' ' → logprob: -14.961860656738281

Token 340: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.026388075202703476
    2. 'formula' → logprob: -3.651388168334961
    3. ' ' → logprob: -9.776388168334961
    4. ' formule' → logprob: -11.401388168334961
    5. '	form' → logprob: -12.651388168334961
    6. '(form' → logprob: -12.651388168334961
    7. 'form' → logprob: -12.651388168334961
    8. '_formula' → logprob: -13.151388168334961
    9. '  ' → logprob: -13.401388168334961
    10. ' form' → logprob: -13.526388168334961

Token 341: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.500000953674316
    3. '[
' → logprob: -15.500000953674316
    4. '```' → logprob: -16.875
    5. '   ' → logprob: -17.375
    6. ' ' → logprob: -18.25
    7. ' op' → logprob: -18.375
    8. '
' → logprob: -18.875
    9. ''[' → logprob: -18.875
    10. '	' → logprob: -19.5

Token 342: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.07904169708490372
    2. '[' → logprob: -2.5790417194366455
    3. ' op' → logprob: -8.829041481018066
    4. '   ' → logprob: -13.954041481018066
    5. '(op' → logprob: -13.954041481018066
    6. ' ' → logprob: -14.204041481018066
    7. '_op' → logprob: -14.204041481018066
    8. '
' → logprob: -14.829041481018066
    9. '	op' → logprob: -14.829041481018066
    10. 'Op' → logprob: -15.079041481018066

Token 343: '_pos' (ID: 14692)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.181746706366539
    2. '_pos' → logprob: -2.0567467212677
    3. 'os' → logprob: -4.056746482849121
    4. 's' → logprob: -4.431746482849121
    5. 'pos' → logprob: -4.931746482849121
    6. 'Pos' → logprob: -6.931746482849121
    7. '[pos' → logprob: -7.806746482849121
    8. ''s' → logprob: -8.681746482849121
    9. 'osition' → logprob: -8.681746482849121
    10. '0' → logprob: -9.806746482849121

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05812181904911995
    2. ']==' → logprob: -3.058121919631958
    3. ' ]' → logprob: -5.433121681213379
    4. ' ==' → logprob: -5.808121681213379
    5. ']=='' → logprob: -6.683121681213379
    6. '==' → logprob: -7.183121681213379
    7. '=='' → logprob: -10.058121681213379
    8. '']' → logprob: -10.808121681213379
    9. ' ' → logprob: -11.558121681213379
    10. '[' → logprob: -11.808121681213379

Token 345: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10373187065124512
    2. '==' → logprob: -2.478731870651245
    3. '=='' → logprob: -4.228732109069824
    4. '=="' → logprob: -9.978732109069824
    5. ' =='' → logprob: -10.103732109069824
    6. ' ' → logprob: -12.228732109069824
    7. '=' → logprob: -12.228732109069824
    8. ' =' → logprob: -13.103732109069824
    9. ')==' → logprob: -13.228732109069824
    10. ' =="' → logprob: -13.353732109069824

Token 346: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.000460935989394784
    2. ''+' → logprob: -7.875461101531982
    3. ''' → logprob: -9.750460624694824
    4. ' '*'' → logprob: -10.875460624694824
    5. '('*' → logprob: -13.625460624694824
    6. ' '*' → logprob: -14.375460624694824
    7. '"*' → logprob: -14.375460624694824
    8. ' ' → logprob: -14.750460624694824
    9. '	' → logprob: -15.625460624694824
    10. '`' → logprob: -15.875460624694824

Token 347: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.017908990383148193
    2. '':
' → logprob: -4.142909049987793
    3. ''' → logprob: -6.392909049987793
    4. ' ':' → logprob: -8.892909049987793
    5. ' '' → logprob: -10.142909049987793
    6. '':
' → logprob: -11.767909049987793
    7. ''*' → logprob: -12.392909049987793
    8. ':' → logprob: -12.642909049987793
    9. '':

' → logprob: -12.642909049987793
    10. '*' → logprob: -13.767909049987793

Token 348: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4347454309463501
    2. ':
' → logprob: -1.68474543094635
    3. '           ' → logprob: -2.0597453117370605
    4. ':return' → logprob: -3.5597453117370605
    5. ' return' → logprob: -5.0597453117370605
    6. 'return' → logprob: -6.0597453117370605
    7. '       ' → logprob: -7.0597453117370605
    8. ' :' → logprob: -7.0597453117370605
    9. ' :
' → logprob: -8.184745788574219
    10. ':

' → logprob: -9.559745788574219

Token 349: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008642955799587071
    2. 'if' → logprob: -7.500864505767822
    3. ' return' → logprob: -8.375864028930664
    4. 'min' → logprob: -9.750864028930664
    5. '           ' → logprob: -10.875864028930664
    6. '
' → logprob: -13.625864028930664
    7. ' if' → logprob: -14.250864028930664
    8. '       ' → logprob: -14.250864028930664
    9. '```' → logprob: -14.250864028930664
    10. 'ret' → logprob: -15.625864028930664

Token 350: ' and' (ID: 326)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38704365491867065
    2. 'return' → logprob: -1.1370437145233154
    3. 'min' → logprob: -8.887043952941895
    4. ' if' → logprob: -11.262043952941895
    5. '
' → logprob: -11.387043952941895
    6. ' return' → logprob: -12.137043952941895
    7. 'result' → logprob: -13.137043952941895
    8. '```' → logprob: -14.387043952941895
    9. 'ret' → logprob: -14.387043952941895
    10. '   ' → logprob: -15.137043952941895

Token 351: ' operation' (ID: 9506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9944308996200562
    2. '       ' → logprob: -1.4944308996200562
    3. ' if' → logprob: -1.6194308996200562
    4. 'if' → logprob: -1.8694308996200562
    5. ' return' → logprob: -3.1194310188293457
    6. '           ' → logprob: -4.994431018829346
    7. '
' → logprob: -6.994431018829346
    8. ':
' → logprob: -7.744431018829346
    9. ':return' → logprob: -7.744431018829346
    10. '   ' → logprob: -8.494430541992188

Token 352: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6116403937339783
    2. '       ' → logprob: -0.8616403937339783
    3. ' return' → logprob: -4.236640453338623
    4. '           ' → logprob: -4.736640453338623
    5. 'if' → logprob: -5.361640453338623
    6. '
' → logprob: -5.986640453338623
    7. ':
' → logprob: -6.361640453338623
    8. ' if' → logprob: -6.486640453338623
    9. ':return' → logprob: -6.986640453338623
    10. ':' → logprob: -8.861639976501465

Token 353: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39033687114715576
    2. '       ' → logprob: -1.1403368711471558
    3. ' return' → logprob: -6.015336990356445
    4. 'if' → logprob: -7.515336990356445
    5. '           ' → logprob: -8.390336990356445
    6. '```' → logprob: -8.765336990356445
    7. ' if' → logprob: -10.265336990356445
    8. '{return' → logprob: -10.515336990356445
    9. ':return' → logprob: -11.765336990356445
    10. '{
' → logprob: -12.140336990356445

Token 354: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003485745983198285
    2. 'if' → logprob: -8.250349044799805
    3. ' return' → logprob: -9.625349044799805
    4. '           ' → logprob: -10.875349044799805
    5. '       ' → logprob: -13.750349044799805
    6. 'min' → logprob: -14.750349044799805
    7. '```' → logprob: -15.000349044799805
    8. '{return' → logprob: -15.750349044799805
    9. 'result' → logprob: -16.125349044799805
    10. 'ret' → logprob: -16.750349044799805

Token 355: ' ' (ID: 220)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00890219584107399
    2. 'if' → logprob: -4.758902072906494
    3. ' return' → logprob: -8.258902549743652
    4. '           ' → logprob: -11.383902549743652
    5. ' if' → logprob: -11.883902549743652
    6. '       ' → logprob: -12.008902549743652
    7. '
' → logprob: -13.383902549743652
    8. '```' → logprob: -13.758902549743652
    9. 'result' → logprob: -14.383902549743652
    10. '{return' → logprob: -15.008902549743652

Token 356: '3' (ID: 18)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04862676560878754
    2. 'if' → logprob: -3.048626661300659
    3. ' return' → logprob: -10.423626899719238
    4. ' if' → logprob: -12.798626899719238
    5. 'result' → logprob: -13.048626899719238
    6. '
' → logprob: -13.798626899719238
    7. '   ' → logprob: -13.798626899719238
    8. 'ret' → logprob: -14.673626899719238
    9. 'def' → logprob: -14.798626899719238
    10. '```' → logprob: -14.798626899719238

Token 357: '-valu' (ID: 116315)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6712929606437683
    2. 'if' → logprob: -1.296293020248413
    3. 'return' → logprob: -1.796293020248413
    4. ' return' → logprob: -3.796293020248413
    5. '       ' → logprob: -4.296292781829834
    6. '           ' → logprob: -4.921292781829834
    7. 'eturn' → logprob: -6.796292781829834
    8. ' =' → logprob: -7.046292781829834
    9. '   ' → logprob: -7.046292781829834
    10. '_return' → logprob: -7.421292781829834

Token 358: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.005781835410743952
    2. 'ation' → logprob: -5.755781650543213
    3. 'ated' → logprob: -7.505781650543213
    4. 'al' → logprob: -7.505781650543213
    5. '   ' → logprob: -7.630781650543213
    6. 'val' → logprob: -8.755782127380371
    7. '           ' → logprob: -9.130782127380371
    8. 'alue' → logprob: -9.255782127380371
    9. 'ate' → logprob: -9.505782127380371
    10. 'ent' → logprob: -9.505782127380371

Token 359: ' logic' (ID: 18485)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09856957197189331
    2. ' return' → logprob: -2.598569631576538
    3. 'if' → logprob: -4.473569393157959
    4. 'return' → logprob: -4.848569393157959
    5. '           ' → logprob: -9.098569869995117
    6. ' ' → logprob: -10.723569869995117
    7. ' min' → logprob: -11.098569869995117
    8. '       ' → logprob: -11.598569869995117
    9. '
' → logprob: -11.598569869995117
    10. '_return' → logprob: -11.723569869995117

Token 360: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038735661655664444
    2. ' if' → logprob: -3.7887356281280518
    3. '           ' → logprob: -4.788735866546631
    4. 'return' → logprob: -6.413735866546631
    5. 'if' → logprob: -6.913735866546631
    6. ' return' → logprob: -7.163735866546631
    7. '        ' → logprob: -7.413735866546631
    8. '<|end|>' → logprob: -7.663735866546631
    9. '   ' → logprob: -7.913735866546631
    10. '
' → logprob: -7.913735866546631

Token 361: ':
' (ID: 734)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04650000110268593
    2. ' return' → logprob: -3.9214999675750732
    3. '       ' → logprob: -4.046500205993652
    4. 'if' → logprob: -5.171500205993652
    5. '           ' → logprob: -6.796500205993652
    6. ' if' → logprob: -6.921500205993652
    7. '
' → logprob: -8.421500205993652
    8. '{
' → logprob: -10.046500205993652
    9. '	return' → logprob: -10.796500205993652
    10. '```' → logprob: -10.921500205993652

Token 362: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12655329704284668
    2. '           ' → logprob: -2.7515532970428467
    3. ' return' → logprob: -3.1265532970428467
    4. 'if' → logprob: -4.751553535461426
    5. ' if' → logprob: -6.126553535461426
    6. '```' → logprob: -9.001553535461426
    7. 'min' → logprob: -10.001553535461426
    8. '       ' → logprob: -10.001553535461426
    9. '{return' → logprob: -10.126553535461426
    10. '   ' → logprob: -10.251553535461426

Token 363: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20588837563991547
    2. 'if' → logprob: -1.7058883905410767
    3. ' return' → logprob: -6.330888271331787
    4. ' if' → logprob: -6.455888271331787
    5. '           ' → logprob: -6.830888271331787
    6. 'min' → logprob: -10.580888748168945
    7. '```' → logprob: -13.205888748168945
    8. '       ' → logprob: -13.330888748168945
    9. '
' → logprob: -14.080888748168945
    10. 'result' → logprob: -14.330888748168945

Token 364: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29244503378868103
    2. 'return' → logprob: -1.4174450635910034
    3. ' if' → logprob: -4.667445182800293
    4. ' return' → logprob: -6.792445182800293
    5. '           ' → logprob: -7.917445182800293
    6. 'min' → logprob: -8.417445182800293
    7. '
' → logprob: -9.792445182800293
    8. 'result' → logprob: -11.042445182800293
    9. '   ' → logprob: -11.417445182800293
    10. '```' → logprob: -11.667445182800293

Token 365: '0' (ID: 15)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.449303537607193
    2. 'if' → logprob: -1.1993035078048706
    3. 'min' → logprob: -2.82430362701416
    4. 'result' → logprob: -7.94930362701416
    5. 'max' → logprob: -8.19930362701416
    6. ' return' → logprob: -9.07430362701416
    7. '
' → logprob: -9.07430362701416
    8. 'def' → logprob: -9.44930362701416
    9. '0' → logprob: -9.82430362701416
    10. ' if' → logprob: -9.82430362701416

Token 366: '*' (ID: 9)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1570170372724533
    2. 'if' → logprob: -2.6570169925689697
    3. ' =' → logprob: -3.2820169925689697
    4. ' is' → logprob: -3.9070169925689697
    5. '=' → logprob: -4.907017230987549
    6. ' return' → logprob: -6.157017230987549
    7. ':' → logprob: -6.782017230987549
    8. ',' → logprob: -7.282017230987549
    9. ' and' → logprob: -7.282017230987549
    10. 'return' → logprob: -7.282017230987549

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033548781648278236
    2. 'min' → logprob: -6.378355026245117
    3. 'val' → logprob: -6.878355026245117
    4. ' ' → logprob: -8.128355026245117
    5. '<|end|>' → logprob: -9.628355026245117
    6. ' min' → logprob: -10.378355026245117
    7. '=' → logprob: -10.378355026245117
    8. '<|end|>' → logprob: -10.503355026245117
    9. 'x' → logprob: -10.628355026245117
    10. '_' → logprob: -10.753355026245117

Token 368: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4513571262359619
    2. ' =' → logprob: -1.076357126235962
    3. ' ==' → logprob: -4.451356887817383
    4. ' ' → logprob: -6.201356887817383
    5. '           ' → logprob: -6.201356887817383
    6. '0' → logprob: -6.326356887817383
    7. '==' → logprob: -6.576356887817383
    8. ':' → logprob: -6.701356887817383
    9. '=
' → logprob: -7.451356887817383
    10. ',' → logprob: -7.951356887817383

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۰' → logprob: -17.250019073486328
    4. '০' → logprob: -18.750019073486328
    5. '=' → logprob: -18.812519073486328
    6. '<|end|>' → logprob: -18.812519073486328
    7. '   ' → logprob: -18.875019073486328
    8. '00' → logprob: -18.875019073486328
    9. '０' → logprob: -19.000019073486328
    10. '```' → logprob: -19.125019073486328

Token 370: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2782830595970154
    2. '           ' → logprob: -1.5282831192016602
    3. ',' → logprob: -4.77828311920166
    4. '       ' → logprob: -5.52828311920166
    5. ',
' → logprob: -5.90328311920166
    6. '\n' → logprob: -5.90328311920166
    7. '0' → logprob: -6.52828311920166
    8. '  
' → logprob: -6.52828311920166
    9. '            
' → logprob: -6.90328311920166
    10. '<|end|>' → logprob: -7.02828311920166

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007393499254249036
    2. ' ' → logprob: -7.375739574432373
    3. '1' → logprob: -9.125739097595215
    4. '           ' → logprob: -13.125739097595215
    5. '2' → logprob: -14.375739097595215
    6. '
' → logprob: -14.500739097595215
    7. '   ' → logprob: -15.125739097595215
    8. '       ' → logprob: -16.12574005126953
    9. 'val' → logprob: -16.62574005126953
    10. '            
' → logprob: -16.62574005126953

Token 372: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -4.11996734328568e-05
    2. ' *' → logprob: -10.375041007995605
    3. '*
' → logprob: -13.250041007995605
    4. '*=' → logprob: -13.250041007995605
    5. '**' → logprob: -14.000041007995605
    6. ' ' → logprob: -14.000041007995605
    7. '*,' → logprob: -14.250041007995605
    8. '*object' → logprob: -14.375041007995605
    9. '0' → logprob: -14.625041007995605
    10. ''*' → logprob: -14.750041007995605

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.7292167184641585e-05
    2. '2' → logprob: -9.875057220458984
    3. '0' → logprob: -12.625057220458984
    4. '*' → logprob: -13.750057220458984
    5. '```' → logprob: -15.000057220458984
    6. '
' → logprob: -16.125057220458984
    7. ' ' → logprob: -16.250057220458984
    8. 'anything' → logprob: -16.625057220458984
    9. '...' → logprob: -16.687557220458984
    10. '' → logprob: -16.812557220458984

Token 374: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.620622712536715e-05
    2. '*' → logprob: -11.250045776367188
    3. ' =' → logprob: -11.250045776367188
    4. '*=' → logprob: -11.625045776367188
    5. '=*' → logprob: -11.750045776367188
    6. '0' → logprob: -13.500045776367188
    7. '=
' → logprob: -13.625045776367188
    8. '=*/' → logprob: -15.000045776367188
    9. ',' → logprob: -16.000045776367188
    10. '=

' → logprob: -16.125045776367188

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001600347168277949
    2. ' ' → logprob: -8.750160217285156
    3. '1' → logprob: -14.125160217285156
    4. '  ' → logprob: -15.875160217285156
    5. '   ' → logprob: -16.625160217285156
    6. '00' → logprob: -17.062660217285156
    7. '۰' → logprob: -17.125160217285156
    8. '012' → logprob: -17.187660217285156
    9. '2' → logprob: -17.250160217285156
    10. '{' → logprob: -17.250160217285156

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01607765629887581
    2. ',
' → logprob: -4.891077518463135
    3. '           ' → logprob: -5.516077518463135
    4. '0' → logprob: -5.891077518463135
    5. '
' → logprob: -6.641077518463135
    6. ' ,' → logprob: -8.766077995300293
    7. '       ' → logprob: -9.516077995300293
    8. ' ' → logprob: -10.016077995300293
    9. '   ' → logprob: -10.141077995300293
    10. '               ' → logprob: -11.766077995300293

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '1' → logprob: -18.250011444091797
    4. '#' → logprob: -18.250011444091797
    5. '
' → logprob: -18.500011444091797
    6. '           ' → logprob: -19.625011444091797
    7. '   ' → logprob: -19.750011444091797
    8. '```' → logprob: -20.250011444091797
    9. '       ' → logprob: -21.500011444091797
    10. '            
' → logprob: -21.875011444091797

Token 378: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -8.537868779967539e-06
    2. '*=' → logprob: -12.625008583068848
    3. '*,' → logprob: -13.375008583068848
    4. '*
' → logprob: -13.750008583068848
    5. ' *' → logprob: -13.875008583068848
    6. '**' → logprob: -14.875008583068848
    7. ''*' → logprob: -15.125008583068848
    8. '1' → logprob: -16.00000762939453
    9. '=' → logprob: -16.12500762939453
    10. '*(' → logprob: -16.37500762939453

Token 379: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.976922744186595e-05
    2. '0' → logprob: -10.500040054321289
    3. '1' → logprob: -11.500040054321289
    4. ' ' → logprob: -13.250040054321289
    5. '*' → logprob: -15.250040054321289
    6. '
' → logprob: -18.00004005432129
    7. '```' → logprob: -18.12504005432129
    8. '   ' → logprob: -18.75004005432129
    9. '۲' → logprob: -19.37504005432129
    10. '  ' → logprob: -19.62504005432129

Token 380: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.372294698550832e-06
    2. ' =' → logprob: -11.875009536743164
    3. '=
' → logprob: -13.500009536743164
    4. '0' → logprob: -14.375009536743164
    5. ',' → logprob: -15.125009536743164
    6. '=

' → logprob: -15.750009536743164
    7. ' ' → logprob: -17.125009536743164
    8. ''=' → logprob: -18.250009536743164
    9. ')=' → logprob: -19.125009536743164
    10. ']=' → logprob: -19.750009536743164

Token 381: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '1' → logprob: -16.875003814697266
    4. '```' → logprob: -16.875003814697266
    5. '۰' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '...' → logprob: -17.875003814697266
    8. '2' → logprob: -18.000003814697266
    9. '<|end|>' → logprob: -18.000003814697266
    10. '012' → logprob: -18.187503814697266

Token 382: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6222448945045471
    2. ',' → logprob: -1.4972448348999023
    3. '       ' → logprob: -1.6222448348999023
    4. '0' → logprob: -4.372244834899902
    5. ',
' → logprob: -4.372244834899902
    6. '   ' → logprob: -4.997244834899902
    7. '
' → logprob: -5.247244834899902
    8. ' ' → logprob: -6.247244834899902
    9. '               ' → logprob: -7.497244834899902
    10. '\n' → logprob: -7.747244834899902

Token 383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09269071370363235
    2. ',' → logprob: -3.0926907062530518
    3. '0' → logprob: -3.8426907062530518
    4. '       ' → logprob: -4.592690944671631
    5. ' ' → logprob: -4.717690944671631
    6. '   ' → logprob: -6.592690944671631
    7. '               ' → logprob: -7.592690944671631
    8. '1' → logprob: -8.967690467834473
    9. ',
' → logprob: -9.217690467834473
    10. ' if' → logprob: -9.342690467834473

Token 384: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07208233326673508
    2. '0' → logprob: -3.822082281112671
    3. '       ' → logprob: -3.822082281112671
    4. ' ' → logprob: -3.947082281112671
    5. ' if' → logprob: -5.69708251953125
    6. 'if' → logprob: -7.07208251953125
    7. ',' → logprob: -7.32208251953125
    8. '   ' → logprob: -7.32208251953125
    9. '               ' → logprob: -8.19708251953125
    10. '1' → logprob: -8.57208251953125

Token 385: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015349778113886714
    2. '0' → logprob: -7.126534938812256
    3. '           ' → logprob: -7.876534938812256
    4. ' ' → logprob: -8.751535415649414
    5. '       ' → logprob: -9.501535415649414
    6. 'elif' → logprob: -9.751535415649414
    7. 'if' → logprob: -10.251535415649414
    8. '   ' → logprob: -11.126535415649414
    9. '               ' → logprob: -12.876535415649414
    10. '  ' → logprob: -13.876535415649414

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016332881525158882
    2. '0' → logprob: -4.141333103179932
    3. ' ' → logprob: -8.516332626342773
    4. 'elif' → logprob: -10.766332626342773
    5. '   ' → logprob: -11.016332626342773
    6. 'if' → logprob: -11.141332626342773
    7. '2' → logprob: -11.266332626342773
    8. '  ' → logprob: -11.766332626342773
    9. 'val' → logprob: -11.891332626342773
    10. '           ' → logprob: -11.891332626342773

Token 387: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0009182471549138427
    2. ' *' → logprob: -7.000918388366699
    3. '**' → logprob: -13.0009183883667
    4. '*(' → logprob: -14.3759183883667
    5. '*[' → logprob: -14.5009183883667
    6. '*object' → logprob: -14.7509183883667
    7. ' ' → logprob: -14.8759183883667
    8. '	' → logprob: -15.0009183883667
    9. '*
' → logprob: -15.1259183883667
    10. '*&' → logprob: -15.5009183883667

Token 388: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38827720284461975
    2. '1' → logprob: -1.1382771730422974
    3. '2' → logprob: -6.763277053833008
    4. ' ' → logprob: -8.638277053833008
    5. '*' → logprob: -9.763277053833008
    6. '   ' → logprob: -12.825777053833008
    7. '```' → logprob: -13.513277053833008
    8. '  ' → logprob: -13.763277053833008
    9. '=' → logprob: -14.200777053833008
    10. '' → logprob: -14.263277053833008

Token 389: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5332478142227046e-05
    2. ' =' → logprob: -11.250015258789062
    3. '*' → logprob: -13.375015258789062
    4. ',' → logprob: -15.250015258789062
    5. '*=' → logprob: -16.250015258789062
    6. '=
' → logprob: -16.250015258789062
    7. '0' → logprob: -16.250015258789062
    8. '=*' → logprob: -16.500015258789062
    9. '1' → logprob: -17.375015258789062
    10. ' ' → logprob: -17.750015258789062

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.375012397766113
    3. '1' → logprob: -14.375012397766113
    4. '۰' → logprob: -15.500012397766113
    5. '０' → logprob: -17.125011444091797
    6. ' ' → logprob: -17.937511444091797
    7. '০' → logprob: -18.187511444091797
    8. '०' → logprob: -18.750011444091797
    9. '  ' → logprob: -19.062511444091797
    10. '٠' → logprob: -19.187511444091797

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1468592882156372
    2. '1' → logprob: -2.0218591690063477
    3. ',
' → logprob: -5.521859169006348
    4. ' ' → logprob: -9.521859169006348
    5. ' ,' → logprob: -10.146859169006348
    6. '
' → logprob: -10.896859169006348
    7. ',\
' → logprob: -11.146859169006348
    8. '```' → logprob: -11.646859169006348
    9. '0' → logprob: -11.896859169006348
    10. '   ' → logprob: -12.021859169006348

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -10.0000581741333
    3. '           ' → logprob: -11.3750581741333
    4. '0' → logprob: -13.8750581741333
    5. '       ' → logprob: -15.8750581741333
    6. '   ' → logprob: -16.250059127807617
    7. '#' → logprob: -16.375059127807617
    8. '```' → logprob: -16.500059127807617
    9. '
' → logprob: -16.625059127807617
    10. '            
' → logprob: -17.250059127807617

Token 393: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3856492842023727e-06
    2. ''*' → logprob: -14.125000953674316
    3. ' *' → logprob: -15.250000953674316
    4. '**' → logprob: -16.250001907348633
    5. '*
' → logprob: -16.875001907348633
    6. '```' → logprob: -17.000001907348633
    7. '*(' → logprob: -17.500001907348633
    8. '*[' → logprob: -17.500001907348633
    9. ')*' → logprob: -17.625001907348633
    10. '*)' → logprob: -17.625001907348633

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009276605560444295
    2. '2' → logprob: -7.000927448272705
    3. '*' → logprob: -11.375927925109863
    4. '0' → logprob: -13.000927925109863
    5. ' ' → logprob: -13.500927925109863
    6. 'val' → logprob: -14.375927925109863
    7. '```' → logprob: -16.125926971435547
    8. '<|end|>' → logprob: -16.125926971435547
    9. '*)' → logprob: -16.375926971435547
    10. '...' → logprob: -17.000926971435547

Token 395: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.088346359931165e-07
    2. '*' → logprob: -15.125000953674316
    3. ' =' → logprob: -15.125000953674316
    4. '=*' → logprob: -16.125
    5. '*=' → logprob: -16.25
    6. '1' → logprob: -16.25
    7. '=
' → logprob: -17.25
    8. '==' → logprob: -19.125
    9. '=*/' → logprob: -19.25
    10. ''=' → logprob: -19.25

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -16.625
    4. '' → logprob: -18.125
    5. '   ' → logprob: -18.1875
    6. '{' → logprob: -18.5
    7. '  ' → logprob: -18.5
    8. '<|end|>' → logprob: -18.5
    9. '۱' → logprob: -18.75
    10. '```' → logprob: -19.0

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020169056951999664
    2. '           ' → logprob: -6.377017021179199
    3. '1' → logprob: -8.6270170211792
    4. ',
' → logprob: -9.3770170211792
    5. ' ,' → logprob: -10.1270170211792
    6. ' ' → logprob: -12.5020170211792
    7. '   ' → logprob: -13.5020170211792
    8. '               ' → logprob: -13.6270170211792
    9. '       ' → logprob: -14.1270170211792
    10. '```' → logprob: -14.1270170211792

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002979240380227566
    2. ' ' → logprob: -8.250297546386719
    3. '           ' → logprob: -10.625297546386719
    4. '0' → logprob: -12.625297546386719
    5. '#' → logprob: -12.750297546386719
    6. '
' → logprob: -13.375297546386719
    7. '<|end|>' → logprob: -13.750297546386719
    8. '   ' → logprob: -14.375297546386719
    9. '            
' → logprob: -14.750297546386719
    10. '```' → logprob: -15.000297546386719

Token 399: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -3.128163257315464e-07
    2. ''*' → logprob: -16.5
    3. '**' → logprob: -16.75
    4. ' *' → logprob: -17.0
    5. '*object' → logprob: -17.75
    6. '1' → logprob: -17.875
    7. '*[' → logprob: -18.0
    8. '*(' → logprob: -18.0
    9. '***' → logprob: -18.25
    10. ')*' → logprob: -18.25

Token 400: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006988753564655781
    2. '1' → logprob: -5.006988525390625
    3. '0' → logprob: -8.256988525390625
    4. '*' → logprob: -11.756988525390625
    5. ' ' → logprob: -12.756988525390625
    6. '<|end|>' → logprob: -13.631988525390625
    7. '```' → logprob: -14.131988525390625
    8. '[' → logprob: -15.006988525390625
    9. '-' → logprob: -16.006988525390625
    10. '...' → logprob: -16.131988525390625

Token 401: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8624639324116288e-06
    2. '=*' → logprob: -14.000001907348633
    3. ' =' → logprob: -14.750001907348633
    4. '=
' → logprob: -15.250001907348633
    5. '*' → logprob: -15.875001907348633
    6. '*=' → logprob: -16.625001907348633
    7. '=

' → logprob: -17.250001907348633
    8. '0' → logprob: -17.375001907348633
    9. '=*/' → logprob: -17.750001907348633
    10. '=}' → logprob: -18.000001907348633

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008778835646808147
    2. '0' → logprob: -4.758779048919678
    3. '2' → logprob: -8.75877857208252
    4. ' ' → logprob: -12.13377857208252
    5. '<|end|>' → logprob: -14.75877857208252
    6. '   ' → logprob: -15.13377857208252
    7. '<|end|>' → logprob: -15.25877857208252
    8. '{' → logprob: -15.88377857208252
    9. '  ' → logprob: -16.008779525756836
    10. '```' → logprob: -16.196279525756836

Token 403: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3185185194015503
    2. '#' → logprob: -1.3185185194015503
    3. '1' → logprob: -6.19351863861084
    4. '       ' → logprob: -6.56851863861084
    5. '0' → logprob: -7.56851863861084
    6. ' #' → logprob: -7.81851863861084
    7. '   ' → logprob: -8.44351863861084
    8. ' ' → logprob: -8.44351863861084
    9. '```' → logprob: -8.94351863861084
    10. '
' → logprob: -9.06851863861084

Token 404: '           ' (ID: 352)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7832652926445007
    2. '           ' → logprob: -0.7832652926445007
    3. ' ' → logprob: -3.4082653522491455
    4. '1' → logprob: -3.9082653522491455
    5. '       ' → logprob: -3.9082653522491455
    6. ' #' → logprob: -5.033265113830566
    7. '0' → logprob: -5.408265113830566
    8. '   ' → logprob: -6.533265113830566
    9. '2' → logprob: -8.533265113830566
    10. '               ' → logprob: -9.283265113830566

Token 405: ' #' (ID: 1069)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19761881232261658
    2. '1' → logprob: -2.3226187229156494
    3. '           ' → logprob: -3.5726187229156494
    4. '       ' → logprob: -3.6976187229156494
    5. 'if' → logprob: -4.3226189613342285
    6. ' ' → logprob: -4.8226189613342285
    7. '0' → logprob: -5.5726189613342285
    8. ' if' → logprob: -5.9476189613342285
    9. 'return' → logprob: -7.5726189613342285
    10. '   ' → logprob: -9.57261848449707

Token 406: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010055196471512318
    2. ' ' → logprob: -4.635055065155029
    3. '1' → logprob: -8.260055541992188
    4. '   ' → logprob: -11.135055541992188
    5. '           ' → logprob: -11.385055541992188
    6. '       ' → logprob: -11.635055541992188
    7. '0' → logprob: -13.135055541992188
    8. '  ' → logprob: -14.385055541992188
    9. '
' → logprob: -14.385055541992188
    10. '        ' → logprob: -14.760055541992188

Token 407: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0167617779225111
    2. '1' → logprob: -4.141761779785156
    3. ' ' → logprob: -7.266761779785156
    4. '0' → logprob: -11.391761779785156
    5. '   ' → logprob: -11.391761779785156
    6. '  ' → logprob: -13.516761779785156
    7. '       ' → logprob: -13.766761779785156
    8. '     ' → logprob: -14.266761779785156
    9. '           ' → logprob: -14.391761779785156
    10. '
' → logprob: -14.391761779785156

Token 408: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.4736459888808895e-05
    2. '**' → logprob: -11.750014305114746
    3. ' *' → logprob: -12.750014305114746
    4. '*[' → logprob: -13.375014305114746
    5. ''*' → logprob: -13.875014305114746
    6. '*(' → logprob: -14.500014305114746
    7. '***' → logprob: -15.250014305114746
    8. '```' → logprob: -16.000015258789062
    9. '>*' → logprob: -16.625015258789062
    10. '*@' → logprob: -16.750015258789062

Token 409: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018266530707478523
    2. '2' → logprob: -4.018266677856445
    3. ' ' → logprob: -9.643266677856445
    4. '1' → logprob: -10.018266677856445
    5. '   ' → logprob: -13.018266677856445
    6. 'val' → logprob: -13.768266677856445
    7. '  ' → logprob: -14.018266677856445
    8. '*' → logprob: -14.330766677856445
    9. '```' → logprob: -15.080766677856445
    10. '=' → logprob: -15.205766677856445

Token 410: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.704273118884885e-07
    2. ' =' → logprob: -15.000000953674316
    3. '=
' → logprob: -15.250000953674316
    4. '=

' → logprob: -17.75
    5. '==' → logprob: -19.375
    6. '=*' → logprob: -20.125
    7. '0' → logprob: -20.375
    8. ')=' → logprob: -20.375
    9. '=}' → logprob: -20.75
    10. '2' → logprob: -21.0

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.500004768371582
    3. '2' → logprob: -14.125004768371582
    4. '1' → logprob: -15.125004768371582
    5. '۰' → logprob: -16.8125057220459
    6. '...' → logprob: -17.8750057220459
    7. '<|end|>' → logprob: -17.9375057220459
    8. '   ' → logprob: -18.1250057220459
    9. '  ' → logprob: -18.5625057220459
    10. '０' → logprob: -19.1250057220459

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16884484887123108
    2. '           ' → logprob: -1.9188448190689087
    3. ',
' → logprob: -4.918844699859619
    4. ' ' → logprob: -7.293844699859619
    5. '2' → logprob: -8.418845176696777
    6. ' ,' → logprob: -8.918845176696777
    7. '       ' → logprob: -9.918845176696777
    8. '               ' → logprob: -10.168845176696777
    9. '   ' → logprob: -10.293845176696777
    10. '0' → logprob: -10.668845176696777

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001006846665404737
    2. ' ' → logprob: -7.376007080078125
    3. '1' → logprob: -7.876007080078125
    4. '           ' → logprob: -15.751007080078125
    5. '   ' → logprob: -16.501007080078125
    6. '```' → logprob: -16.626007080078125
    7. '0' → logprob: -17.376007080078125
    8. ''' → logprob: -17.501007080078125
    9. 'elif' → logprob: -18.001007080078125
    10. '       ' → logprob: -18.376007080078125

Token 414: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00044496997725218534
    2. ''*' → logprob: -7.7504448890686035
    3. '*[' → logprob: -12.375445365905762
    4. '**' → logprob: -13.125445365905762
    5. '*
' → logprob: -13.500445365905762
    6. '*>' → logprob: -13.875445365905762
    7. '`' → logprob: -14.000445365905762
    8. ')*' → logprob: -14.250445365905762
    9. '[' → logprob: -14.375445365905762
    10. '*)' → logprob: -14.375445365905762

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018202271312475204
    2. '2' → logprob: -4.018202304840088
    3. '0' → logprob: -10.14320182800293
    4. ' ' → logprob: -11.89320182800293
    5. 'val' → logprob: -13.26820182800293
    6. '*' → logprob: -13.33070182800293
    7. '```' → logprob: -14.26820182800293
    8. '   ' → logprob: -14.58070182800293
    9. '...' → logprob: -15.58070182800293
    10. '[' → logprob: -15.83070182800293

Token 416: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1472419600977446e-06
    2. '2' → logprob: -15.125000953674316
    3. '=*' → logprob: -15.250000953674316
    4. ' =' → logprob: -15.500000953674316
    5. '=
' → logprob: -15.750000953674316
    6. '=

' → logprob: -16.625001907348633
    7. '*' → logprob: -17.125001907348633
    8. '*=' → logprob: -17.125001907348633
    9. '=*/' → logprob: -17.750001907348633
    10. '=}' → logprob: -18.500001907348633

Token 417: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12718448042869568
    2. '1' → logprob: -2.1271843910217285
    3. '0' → logprob: -8.377184867858887
    4. ' ' → logprob: -10.627184867858887
    5. '   ' → logprob: -13.377184867858887
    6. '  ' → logprob: -16.00218391418457
    7. '```' → logprob: -16.37718391418457
    8. '[' → logprob: -16.62718391418457
    9. '{
' → logprob: -17.00218391418457
    10. '{' → logprob: -17.18968391418457

Token 418: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20397189259529114
    2. ',' → logprob: -1.7039718627929688
    3. '2' → logprob: -6.453971862792969
    4. ' ' → logprob: -7.703971862792969
    5. '          ' → logprob: -8.828971862792969
    6. '0' → logprob: -9.328971862792969
    7. '            ' → logprob: -9.453971862792969
    8. '       ' → logprob: -9.578971862792969
    9. '               ' → logprob: -10.453971862792969
    10. ' ,' → logprob: -10.453971862792969

Token 419: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '1' → logprob: -15.625041007995605
    4. '           ' → logprob: -16.12504005432129
    5. '```' → logprob: -16.25004005432129
    6. '   ' → logprob: -16.50004005432129
    7. ''' → logprob: -17.12504005432129
    8. '0' → logprob: -17.37504005432129
    9. '
' → logprob: -17.81254005432129
    10. '       ' → logprob: -18.00004005432129

Token 420: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -2.0219828002154827e-05
    2. ''*' → logprob: -11.375020027160645
    3. '*[' → logprob: -11.875020027160645
    4. '[' → logprob: -14.500020027160645
    5. '**' → logprob: -14.875020027160645
    6. ' *' → logprob: -15.625020027160645
    7. '```' → logprob: -15.750020027160645
    8. '"*' → logprob: -16.12502098083496
    9. '*(' → logprob: -16.50002098083496
    10. '2' → logprob: -16.50002098083496

Token 421: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '0' → logprob: -15.125007629394531
    4. '[' → logprob: -16.00000762939453
    5. '*' → logprob: -16.25000762939453
    6. '۲' → logprob: -16.50000762939453
    7. '1' → logprob: -16.87500762939453
    8. '<|end|>' → logprob: -16.87500762939453
    9. '```' → logprob: -16.87500762939453
    10. '(' → logprob: -17.56250762939453

Token 422: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6240566083070007e-06
    2. '=
' → logprob: -13.500001907348633
    3. ' =' → logprob: -15.750001907348633
    4. '=

' → logprob: -17.125001907348633
    5. '2' → logprob: -18.125001907348633
    6. '=}' → logprob: -20.375001907348633
    7. ')=' → logprob: -22.000001907348633
    8. '='' → logprob: -22.125001907348633
    9. '==' → logprob: -22.125001907348633
    10. '=_' → logprob: -22.250001907348633

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '0' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '۲' → logprob: -18.625001907348633
    6. '1' → logprob: -19.125001907348633
    7. '２' → logprob: -19.812501907348633
    8. '  ' → logprob: -20.125001907348633
    9. '২' → logprob: -20.625001907348633
    10. '२' → logprob: -21.000001907348633

Token 424: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4564855098724365
    2. '           ' → logprob: -1.8314855098724365
    3. 'if' → logprob: -2.4564855098724365
    4. ' if' → logprob: -2.4564855098724365
    5. 'return' → logprob: -3.4564855098724365
    6. ' return' → logprob: -5.956485748291016
    7. '   ' → logprob: -9.331485748291016
    8. '        
' → logprob: -9.331485748291016
    9. 'result' → logprob: -9.706485748291016
    10. '        ' → logprob: -9.706485748291016

Token 425: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08531606942415237
    2. 'if' → logprob: -3.0853161811828613
    3. ' if' → logprob: -3.4603161811828613
    4. 'return' → logprob: -5.460316181182861
    5. ' return' → logprob: -8.460315704345703
    6. '        
' → logprob: -9.585315704345703
    7. '```' → logprob: -9.960315704345703
    8. '
' → logprob: -11.460315704345703
    9. '           ' → logprob: -11.710315704345703
    10. '   ' → logprob: -11.960315704345703

Token 426: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002649119414854795
    2. 'return' → logprob: -8.375265121459961
    3. ' if' → logprob: -11.500265121459961
    4. '       ' → logprob: -11.500265121459961
    5. '```' → logprob: -12.125265121459961
    6. 'result' → logprob: -12.750265121459961
    7. 'res' → logprob: -13.750265121459961
    8. 'vals' → logprob: -13.875265121459961
    9. 'values' → logprob: -14.000265121459961
    10. '           ' → logprob: -14.500265121459961

Token 427: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0003396343090571463
    2. ' val' → logprob: -8.00033950805664
    3. '(val' → logprob: -13.12533950805664
    4. '0' → logprob: -13.50033950805664
    5. '   ' → logprob: -14.87533950805664
    6. '(' → logprob: -15.87533950805664
    7. ' ' → logprob: -16.12533950805664
    8. '	val' → logprob: -16.25033950805664
    9. '  ' → logprob: -16.50033950805664
    10. ' (' → logprob: -16.87533950805664

Token 428: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.1472419600977446e-06
    2. ' L' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. 'R' → logprob: -16.375001907348633
    5. ' ==' → logprob: -17.125001907348633
    6. '[' → logprob: -18.000001907348633
    7. '```' → logprob: -18.187501907348633
    8. 'A' → logprob: -18.187501907348633
    9. '   ' → logprob: -18.375001907348633
    10. 'M' → logprob: -18.375001907348633

Token 429: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021831095218658
    2. ' ==' → logprob: -2.3502182960510254
    3. '==
' → logprob: -11.850218772888184
    4. '<=' → logprob: -13.600218772888184
    5. ' ' → logprob: -13.725218772888184
    6. '=' → logprob: -13.725218772888184
    7. '```' → logprob: -15.350218772888184
    8. '[' → logprob: -15.350218772888184
    9. '0' → logprob: -15.600218772888184
    10. '<' → logprob: -16.350217819213867

Token 430: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007269674097187817
    2. ' ' → logprob: -7.25072717666626
    3. '2' → logprob: -11.125726699829102
    4. '1' → logprob: -13.375726699829102
    5. '   ' → logprob: -14.625726699829102
    6. '  ' → logprob: -15.875726699829102
    7. '    ' → logprob: -16.7507266998291
    8. '

' → logprob: -17.9382266998291
    9. '	' → logprob: -18.0632266998291
    10. '
' → logprob: -18.0632266998291

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.2762428822461516e-05
    2. '2' → logprob: -10.500052452087402
    3. ' ' → logprob: -10.625052452087402
    4. '1' → logprob: -14.250052452087402
    5. '   ' → logprob: -15.750052452087402
    6. '  ' → logprob: -17.06255340576172
    7. '۰' → logprob: -18.00005340576172
    8. '    ' → logprob: -18.12505340576172
    9. ''' → logprob: -18.18755340576172
    10. '```' → logprob: -18.56255340576172

Token 432: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10043515264987946
    2. 'or' → logprob: -2.350435256958008
    3. ':' → logprob: -8.975435256958008
    4. ':
' → logprob: -10.100435256958008
    5. '	or' → logprob: -10.725435256958008
    6. ' ' → logprob: -11.225435256958008
    7. '   ' → logprob: -11.850435256958008
    8. '       ' → logprob: -11.850435256958008
    9. '           ' → logprob: -12.225435256958008
    10. ':return' → logprob: -12.350435256958008

Token 433: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00033558503491804004
    2. ' val' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.125335693359375
    4. '  ' → logprob: -17.500335693359375
    5. '	val' → logprob: -17.750335693359375
    6. ' ' → logprob: -18.375335693359375
    7. '           ' → logprob: -18.750335693359375
    8. '    ' → logprob: -19.500335693359375
    9. '       ' → logprob: -20.250335693359375
    10. '     ' → logprob: -20.875335693359375

Token 434: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.001333932508714497
    2. 'L' → logprob: -6.626333713531494
    3. ' R' → logprob: -12.626334190368652
    4. 'val' → logprob: -13.376334190368652
    5. '[' → logprob: -13.501334190368652
    6. '==' → logprob: -14.251334190368652
    7. '[val' → logprob: -15.126334190368652
    8. '```' → logprob: -15.751334190368652
    9. ' ' → logprob: -15.876334190368652
    10. '   ' → logprob: -16.126333236694336

Token 435: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10020893067121506
    2. '==' → logprob: -2.3502089977264404
    3. ' ' → logprob: -13.97520923614502
    4. '==
' → logprob: -14.47520923614502
    5. ']==' → logprob: -15.10020923614502
    6. ')==' → logprob: -15.22520923614502
    7. ' ==
' → logprob: -15.47520923614502
    8. '()==' → logprob: -17.600208282470703
    9. '=' → logprob: -17.725208282470703
    10. '<|end|>' → logprob: -17.975208282470703

Token 436: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002476604888215661
    2. ' ' → logprob: -6.002476692199707
    3. '<|end|>' → logprob: -14.377476692199707
    4. '   ' → logprob: -15.752476692199707
    5. '۰' → logprob: -16.43997573852539
    6. '  ' → logprob: -16.68997573852539
    7. '```' → logprob: -17.62747573852539
    8. '<|end|>' → logprob: -18.43997573852539
    9. '=' → logprob: -18.87747573852539
    10. ' ' → logprob: -19.06497573852539

Token 437: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -16.750009536743164
    4. '۰' → logprob: -17.625009536743164
    5. '```' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.625009536743164
    7. '０' → logprob: -19.937509536743164
    8. '০' → logprob: -20.000009536743164
    9. '[' → logprob: -20.250009536743164
    10. '  ' → logprob: -20.312509536743164

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3214219808578491
    2. ':
' → logprob: -1.3214219808578491
    3. ':return' → logprob: -5.321422100067139
    4. '       ' → logprob: -6.321422100067139
    5. '               ' → logprob: -6.946422100067139
    6. '           ' → logprob: -7.946422100067139
    7. '):
' → logprob: -9.94642162322998
    8. ':
' → logprob: -11.07142162322998
    9. '<|end|>' → logprob: -11.32142162322998
    10. ':

' → logprob: -11.44642162322998

Token 439: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020757904276251793
    2. '           ' → logprob: -6.502075672149658
    3. ' return' → logprob: -8.377076148986816
    4. 'return' → logprob: -8.877076148986816
    5. ':return' → logprob: -9.877076148986816
    6. ':' → logprob: -10.252076148986816
    7. '       ' → logprob: -10.377076148986816
    8. ':
' → logprob: -10.627076148986816
    9. '
' → logprob: -11.002076148986816
    10. '<|end|>' → logprob: -11.127076148986816

Token 440: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13714605569839478
    2. ' return' → logprob: -2.13714599609375
    3. '               ' → logprob: -4.63714599609375
    4. '           ' → logprob: -8.26214599609375
    5. '0' → logprob: -8.88714599609375
    6. ' ' → logprob: -10.26214599609375
    7. '{return' → logprob: -10.76214599609375
    8. '	return' → logprob: -11.26214599609375
    9. ':return' → logprob: -11.63714599609375
    10. ' 
' → logprob: -13.88714599609375

Token 441: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -22.000709533691406
    4. '`' → logprob: -22.875709533691406
    5. ' ' → logprob: -22.875709533691406
    6. '000' → logprob: -23.250709533691406
    7. '00' → logprob: -23.625709533691406
    8. '```' → logprob: -23.625709533691406
    9. '۰' → logprob: -24.000709533691406
    10. '  ' → logprob: -24.250709533691406

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '۰' → logprob: -22.25
    4. '０' → logprob: -23.875
    5. '`' → logprob: -24.0
    6. '   ' → logprob: -24.625
    7. '```' → logprob: -24.75
    8. '00' → logprob: -25.25
    9. '000' → logprob: -25.5
    10. ' ' → logprob: -25.625

Token 443: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3498736619949341
    2. '           ' → logprob: -1.224873661994934
    3. '   ' → logprob: -7.7248735427856445
    4. 'elif' → logprob: -8.349873542785645
    5. '
' → logprob: -8.599873542785645
    6. ' if' → logprob: -8.849873542785645
    7. '<|end|>' → logprob: -9.474873542785645
    8. ' elif' → logprob: -9.724873542785645
    9. 'if' → logprob: -9.849873542785645
    10. '               ' → logprob: -10.474873542785645

Token 444: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027996525168418884
    2. '           ' → logprob: -6.0027995109558105
    3. '   ' → logprob: -9.127799987792969
    4. ' if' → logprob: -9.377799987792969
    5. ' elif' → logprob: -9.502799987792969
    6. '
' → logprob: -11.752799987792969
    7. 'elif' → logprob: -11.752799987792969
    8. '    ' → logprob: -12.127799987792969
    9. '        ' → logprob: -12.127799987792969
    10. '      ' → logprob: -12.252799987792969

Token 445: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4114769697189331
    2. '       ' → logprob: -1.161476969718933
    3. ' if' → logprob: -3.9114770889282227
    4. 'elif' (adapté à ' elif') → logprob: -6.036477088928223
    5. '           ' → logprob: -6.286477088928223
    6. ' elif' → logprob: -10.786477088928223
    7. '   ' → logprob: -11.036477088928223
    8. 'else' → logprob: -13.411477088928223
    9. '	if' → logprob: -13.536477088928223
    10. '      ' → logprob: -14.036477088928223

Token 446: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06196948140859604
    2. ' val' → logprob: -2.811969518661499
    3. '	val' → logprob: -14.061969757080078
    4. '   ' → logprob: -14.561969757080078
    5. '(val' → logprob: -14.936969757080078
    6. '
' → logprob: -16.561969757080078
    7. ' ' → logprob: -16.686969757080078
    8. '    ' → logprob: -16.686969757080078
    9. '[val' → logprob: -16.811969757080078
    10. ' (' → logprob: -17.561969757080078

Token 447: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0012723775580525398
    2. '==' → logprob: -7.251272201538086
    3. ' ==' → logprob: -7.501272201538086
    4. ' ' → logprob: -12.376272201538086
    5. '   ' → logprob: -13.251272201538086
    6. '  ' → logprob: -13.876272201538086
    7. '[' → logprob: -14.001272201538086
    8. ' L' → logprob: -14.501272201538086
    9. '=' → logprob: -15.001272201538086
    10. 'R' → logprob: -15.126272201538086

Token 448: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16022604703903198
    2. '==' → logprob: -1.9102261066436768
    3. ' ' → logprob: -13.785225868225098
    4. ' in' → logprob: -15.035225868225098
    5. '==
' → logprob: -15.160225868225098
    6. 'in' → logprob: -16.660226821899414
    7. ' ' → logprob: -16.910226821899414
    8. '=' → logprob: -16.910226821899414
    9. '1' → logprob: -17.410226821899414
    10. '[' → logprob: -17.535226821899414

Token 449: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07903861254453659
    2. ' ' → logprob: -2.704038619995117
    3. '2' → logprob: -4.704038619995117
    4. '  ' → logprob: -14.079038619995117
    5. '   ' → logprob: -14.204038619995117
    6. 'val' → logprob: -14.704038619995117
    7. '
' → logprob: -15.704038619995117
    8. '0' → logprob: -16.266538619995117
    9. ' val' → logprob: -16.704038619995117
    10. '12' → logprob: -16.704038619995117

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031848405487835407
    2. '2' → logprob: -5.753184795379639
    3. ' ' → logprob: -12.503185272216797
    4. 'val' → logprob: -12.753185272216797
    5. '
' → logprob: -15.503185272216797
    6. '   ' → logprob: -15.753185272216797
    7. '

' → logprob: -16.690685272216797
    8. '0' → logprob: -16.753185272216797
    9. '  ' → logprob: -17.315685272216797
    10. '```' → logprob: -18.003185272216797

Token 451: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519439160823822
    2. 'and' → logprob: -1.5019439458847046
    3. '==' → logprob: -12.126943588256836
    4. ' ' → logprob: -12.876943588256836
    5. '           ' → logprob: -13.001943588256836
    6. '            ' → logprob: -13.251943588256836
    7. ' ==' → logprob: -13.501943588256836
    8. '	and' → logprob: -14.626943588256836
    9. '               ' → logprob: -14.876943588256836
    10. '   ' → logprob: -15.501943588256836

Token 452: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2014147937297821
    2. ' val' → logprob: -1.7014148235321045
    3. '           ' → logprob: -14.451415061950684
    4. '	val' → logprob: -15.076415061950684
    5. '(val' → logprob: -15.451415061950684
    6. '   ' → logprob: -15.826415061950684
    7. ' ' → logprob: -16.076414108276367
    8. '            ' → logprob: -16.576414108276367
    9. '    ' → logprob: -16.576414108276367
    10. '  ' → logprob: -17.326414108276367

Token 453: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.3080716346157715e-05
    2. 'L' → logprob: -11.500022888183594
    3. 'val' → logprob: -12.250022888183594
    4. ' R' → logprob: -12.375022888183594
    5. ' ' → logprob: -13.375022888183594
    6. '<|end|>' → logprob: -13.875022888183594
    7. '1' → logprob: -15.250022888183594
    8. 'C' → logprob: -15.875022888183594
    9. '```' → logprob: -16.000022888183594
    10. '2' → logprob: -16.250022888183594

Token 454: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38688698410987854
    2. ' ==' → logprob: -1.1368869543075562
    3. '1' → logprob: -11.886886596679688
    4. '==
' → logprob: -12.386886596679688
    5. ']==' → logprob: -13.261886596679688
    6. ')==' → logprob: -13.636886596679688
    7. '<|end|>' → logprob: -14.511886596679688
    8. '=='' → logprob: -15.136886596679688
    9. '=' → logprob: -15.136886596679688
    10. ' ' → logprob: -15.261886596679688

Token 455: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -17.250009536743164
    4. '۱' → logprob: -18.875009536743164
    5. '0' → logprob: -19.125009536743164
    6. '  ' → logprob: -19.437509536743164
    7. '१' → logprob: -19.812509536743164
    8. '```' → logprob: -19.937509536743164
    9. '১' → logprob: -20.125009536743164
    10. '   ' → logprob: -20.187509536743164

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -17.75
    4. '0' → logprob: -19.25
    5. '۱' → logprob: -19.625
    6. '१' → logprob: -20.625
    7. '১' → logprob: -20.6875
    8. '```' → logprob: -20.75
    9. '<|end|>' → logprob: -21.0
    10. '...' → logprob: -21.125

Token 457: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2334044873714447
    2. ':' → logprob: -1.608404517173767
    3. '               ' → logprob: -5.358404636383057
    4. ':return' → logprob: -5.858404636383057
    5. '           ' → logprob: -8.233404159545898
    6. 'return' → logprob: -10.358404159545898
    7. '):
' → logprob: -10.483404159545898
    8. ':
' → logprob: -10.983404159545898
    9. ' :
' → logprob: -11.358404159545898
    10. ' return' → logprob: -11.483404159545898

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005047772428952157
    2. 'return' → logprob: -8.250504493713379
    3. ' return' → logprob: -8.875504493713379
    4. '           ' → logprob: -9.375504493713379
    5. ':return' → logprob: -12.750504493713379
    6. '```' → logprob: -13.125504493713379
    7. '<|end|>' → logprob: -13.250504493713379
    8. '			' → logprob: -13.250504493713379
    9. '{
' → logprob: -13.500504493713379
    10. ':
' → logprob: -13.875504493713379

Token 459: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26842623949050903
    2. 'return' (adapté à ' return') → logprob: -1.5184261798858643
    3. '               ' → logprob: -4.268426418304443
    4. ' return' → logprob: -6.643426418304443
    5. '           ' → logprob: -6.893426418304443
    6. ' ' → logprob: -10.268425941467285
    7. '   ' → logprob: -12.518425941467285
    8. '	return' → logprob: -14.143425941467285
    9. '                   ' → logprob: -14.643425941467285
    10. '       ' → logprob: -15.268425941467285

Token 460: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.500011444091797
    4. '           ' → logprob: -18.625011444091797
    5. '  ' → logprob: -19.750011444091797
    6. '۱' → logprob: -20.375011444091797
    7. '１' → logprob: -21.250011444091797
    8. '       ' → logprob: -21.375011444091797
    9. '```' → logprob: -21.625011444091797
    10. '१' → logprob: -21.937511444091797

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۱' → logprob: -20.75
    4. '১' → logprob: -21.25
    5. '१' → logprob: -21.5
    6. '   ' → logprob: -22.5
    7. '１' → logprob: -22.875
    8. '
' → logprob: -23.1875
    9. '' → logprob: -23.25
    10. '  ' → logprob: -23.3125

Token 462: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06044498458504677
    2. 'else' → logprob: -3.1854450702667236
    3. ' else' → logprob: -4.0604448318481445
    4. '		' → logprob: -10.560444831848145
    5. 'elif' → logprob: -11.060444831848145
    6. 'return' → logprob: -13.560444831848145
    7. '	       ' → logprob: -13.560444831848145
    8. ' elif' → logprob: -13.685444831848145
    9. '	else' → logprob: -13.685444831848145
    10. '               ' → logprob: -13.810444831848145

Token 463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11665860563516617
    2. 'else' → logprob: -2.3666586875915527
    3. ' else' → logprob: -4.116658687591553
    4. '		' → logprob: -11.866658210754395
    5. 'elif' → logprob: -12.116658210754395
    6. '	       ' → logprob: -13.366658210754395
    7. '```' → logprob: -13.866658210754395
    8. '	else' → logprob: -14.116658210754395
    9. '               ' → logprob: -14.491658210754395
    10. 'return' → logprob: -14.741658210754395

Token 464: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.019477397203445435
    2. '           ' → logprob: -4.019477367401123
    3. ' else' → logprob: -6.644477367401123
    4. 'elif' → logprob: -11.144477844238281
    5. '       ' → logprob: -11.769477844238281
    6. 'return' → logprob: -13.644477844238281
    7. '	else' → logprob: -14.019477844238281
    8. '		' → logprob: -14.644477844238281
    9. '```' → logprob: -15.144477844238281
    10. '   ' → logprob: -15.644477844238281

Token 465: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7528995871543884
    2. ':' → logprob: -1.0028996467590332
    3. ':
' → logprob: -2.002899646759033
    4. '           ' → logprob: -4.252899646759033
    5. 'return' → logprob: -5.377899646759033
    6. ':return' → logprob: -5.377899646759033
    7. ' return' → logprob: -5.877899646759033
    8. '   ' → logprob: -8.502899169921875
    9. ' :
' → logprob: -9.127899169921875
    10. ' :' → logprob: -9.127899169921875

Token 466: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7598133683204651
    2. 'return' → logprob: -0.7598133683204651
    3. '           ' → logprob: -3.0098133087158203
    4. '               ' → logprob: -4.38481330871582
    5. '   ' → logprob: -6.00981330871582
    6. ' ' → logprob: -8.75981330871582
    7. '       ' → logprob: -9.50981330871582
    8. '    ' → logprob: -11.75981330871582
    9. '  ' → logprob: -12.00981330871582
    10. '            ' → logprob: -12.00981330871582

Token 467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002619318547658622
    2. ' return' → logprob: -8.250262260437012
    3. '               ' → logprob: -14.500262260437012
    4. '   ' → logprob: -16.250261306762695
    5. '           ' → logprob: -16.750261306762695
    6. '2' → logprob: -17.875261306762695
    7. ' ' → logprob: -19.625261306762695
    8. '	return' → logprob: -19.875261306762695
    9. '                   ' → logprob: -20.000261306762695
    10. '       ' → logprob: -20.625261306762695

Token 468: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.000045776367188
    4. '۲' → logprob: -20.250045776367188
    5. '  ' → logprob: -20.500045776367188
    6. '```' → logprob: -22.625045776367188
    7. 'val' → logprob: -22.875045776367188
    8. '２' → logprob: -22.875045776367188
    9. '    ' → logprob: -23.125045776367188
    10. '22' → logprob: -23.375045776367188

Token 469: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'val' → logprob: -19.875
    4. '۲' → logprob: -20.375
    5. '  ' → logprob: -22.625
    6. '   ' → logprob: -22.625
    7. '２' → logprob: -22.75
    8. '২' → logprob: -24.125
    9. '٢' → logprob: -24.25
    10. '₂' → logprob: -24.25

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01248999685049057
    2. 'elif' → logprob: -4.6374897956848145
    3. 'if' → logprob: -6.1374897956848145
    4. 'else' → logprob: -8.387490272521973
    5. ' if' → logprob: -8.512490272521973
    6. ' elif' → logprob: -9.387490272521973
    7. '<|end|>' → logprob: -11.387490272521973
    8. ' else' → logprob: -11.637490272521973
    9. '   ' → logprob: -12.012490272521973
    10. '[' → logprob: -12.387490272521973

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02413749136030674
    2. 'elif' → logprob: -4.649137496948242
    3. '
' → logprob: -5.399137496948242
    4. '<|end|>' → logprob: -5.649137496948242
    5. '        
' → logprob: -6.774137496948242
    6. ' elif' → logprob: -7.024137496948242
    7. '   ' → logprob: -7.274137496948242
    8. '	' → logprob: -7.399137496948242
    9. '	elif' → logprob: -7.649137496948242
    10. ')' → logprob: -7.899137496948242

Token 472: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.26394331455230713
    2. '       ' → logprob: -1.7639433145523071
    3. 'elif' → logprob: -3.1389431953430176
    4. ' else' → logprob: -4.388943195343018
    5. 'if' → logprob: -5.388943195343018
    6. ' elif' → logprob: -8.388943672180176
    7. ' if' → logprob: -9.638943672180176
    8. '   ' → logprob: -12.513943672180176
    9. '
' → logprob: -13.263943672180176
    10. '	else' → logprob: -13.638943672180176

Token 473: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029407329857349396
    2. ':
' → logprob: -6.377940654754639
    3. ' :' → logprob: -7.002940654754639
    4. '           ' → logprob: -8.752941131591797
    5. '       ' → logprob: -10.002941131591797
    6. '   ' → logprob: -10.252941131591797
    7. 'if' → logprob: -10.627941131591797
    8. '        ' → logprob: -11.377941131591797
    9. ' :
' → logprob: -11.627941131591797
    10. ' ' → logprob: -11.752941131591797

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008142538368701935
    2. '#' → logprob: -5.008142471313477
    3. '       ' → logprob: -7.008142471313477
    4. ' #' → logprob: -8.383142471313477
    5. 'if' → logprob: -8.508142471313477
    6. '   ' → logprob: -9.883142471313477
    7. '          ' → logprob: -11.008142471313477
    8. ' if' → logprob: -11.633142471313477
    9. '               ' → logprob: -12.383142471313477
    10. '        ' → logprob: -13.008142471313477

Token 475: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.20149041712284088
    2. 'if' → logprob: -1.7014904022216797
    3. '       ' → logprob: -9.95149040222168
    4. '           ' → logprob: -11.20149040222168
    5. ' if' → logprob: -11.82649040222168
    6. '   ' → logprob: -12.32649040222168
    7. ' #' → logprob: -12.45149040222168
    8. ' ' → logprob: -15.95149040222168
    9. '#if' → logprob: -16.57649040222168
    10. '	if' → logprob: -17.95149040222168

Token 476: ' or' (ID: 503)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01654934324324131
    2. 'if' → logprob: -4.141549110412598
    3. ' #' → logprob: -7.891549110412598
    4. '           ' → logprob: -10.141549110412598
    5. '+' → logprob: -10.266549110412598
    6. ' if' → logprob: -10.891549110412598
    7. '   ' → logprob: -10.891549110412598
    8. ' ' → logprob: -12.016549110412598
    9. '#if' → logprob: -12.141549110412598
    10. 'or' → logprob: -12.766549110412598

Token 477: ' operation' (ID: 9506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39099690318107605
    2. ' if' → logprob: -1.6409969329833984
    3. '           ' → logprob: -2.1409969329833984
    4. '       ' → logprob: -4.890996932983398
    5. '   ' → logprob: -5.390996932983398
    6. '	if' → logprob: -9.265996932983398
    7. ' ' → logprob: -10.140996932983398
    8. '
' → logprob: -10.640996932983398
    9. '  ' → logprob: -11.265996932983398
    10. '          ' → logprob: -11.390996932983398

Token 478: ' '+' (ID: 30120)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0252796970307827
    2. 'if' → logprob: -3.9002797603607178
    3. ' if' → logprob: -5.525279521942139
    4. '       ' → logprob: -7.775279521942139
    5. '
' → logprob: -8.275279998779297
    6. '            
' → logprob: -11.025279998779297
    7. '   ' → logprob: -11.150279998779297
    8. '          ' → logprob: -11.525279998779297
    9. '               ' → logprob: -12.400279998779297
    10. '	       ' → logprob: -12.650279998779297

Token 479: ''
' (ID: 2207)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04380790516734123
    2. ''' → logprob: -3.4188079833984375
    3. ''
' → logprob: -4.9188079833984375
    4. '<|end|>' → logprob: -7.6688079833984375
    5. ' if' → logprob: -7.7938079833984375
    6. ' '' → logprob: -7.9188079833984375
    7. ' '
' → logprob: -8.168807983398438
    8. 'if' → logprob: -8.168807983398438
    9. '          ' → logprob: -8.418807983398438
    10. '            ' → logprob: -8.418807983398438

Token 480: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019167419523000717
    2. 'if' → logprob: -4.269167423248291
    3. '           ' → logprob: -5.894167423248291
    4. ' if' → logprob: -6.144167423248291
    5. '   ' → logprob: -9.519166946411133
    6. '
' → logprob: -12.644166946411133
    7. '	if' → logprob: -12.894166946411133
    8. '        ' → logprob: -13.144166946411133
    9. '      ' → logprob: -13.144166946411133
    10. ' ' → logprob: -13.769166946411133

Token 481: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007196996593847871
    2. ' if' → logprob: -7.5007195472717285
    3. '       ' → logprob: -8.750720024108887
    4. '           ' → logprob: -11.750720024108887
    5. '   ' → logprob: -15.500720024108887
    6. '	if' → logprob: -15.875720024108887
    7. '        ' → logprob: -17.00071907043457
    8. '```' → logprob: -17.50071907043457
    9. ' ' → logprob: -17.62571907043457
    10. '      ' → logprob: -19.00071907043457

Token 482: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.062285058200359344
    2. ' if' → logprob: -2.8122849464416504
    3. '       ' → logprob: -8.312285423278809
    4. '           ' → logprob: -9.562285423278809
    5. '   ' → logprob: -13.937285423278809
    6. '
' → logprob: -15.687285423278809
    7. ' ' → logprob: -15.812285423278809
    8. '        ' → logprob: -16.062284469604492
    9. 'val' → logprob: -16.437284469604492
    10. '	if' → logprob: -16.437284469604492

Token 483: '0' (ID: 15)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.141186450899113e-05
    2. ' if' → logprob: -10.875020980834961
    3. '           ' → logprob: -13.625020980834961
    4. '#' → logprob: -14.500020980834961
    5. 'val' → logprob: -15.500020980834961
    6. 'values' → logprob: -15.500020980834961
    7. 'vals' → logprob: -15.625020980834961
    8. '       ' → logprob: -16.50002098083496
    9. '   ' → logprob: -17.12502098083496
    10. '
' → logprob: -17.25002098083496

Token 484: '+' (ID: 10)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5533288717269897
    2. ' if' → logprob: -1.0533288717269897
    3. '*' → logprob: -2.6783289909362793
    4. ' or' → logprob: -5.428328990936279
    5. 'or' → logprob: -6.928328990936279
    6. '           ' → logprob: -7.053328990936279
    7. ' *' → logprob: -7.803328990936279
    8. '   ' → logprob: -8.303328514099121
    9. 'def' → logprob: -8.303328514099121
    10. 'elif' → logprob: -9.428328514099121

Token 485: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.000763510703109e-05
    2. ' ' → logprob: -10.375040054321289
    3. 'val' → logprob: -11.750040054321289
    4. '<|end|>' → logprob: -15.500040054321289
    5. '2' → logprob: -15.625040054321289
    6. '+' → logprob: -16.00004005432129
    7. '   ' → logprob: -16.25004005432129
    8. '1' → logprob: -16.25004005432129
    9. ' val' → logprob: -16.75004005432129
    10. '  ' → logprob: -17.12504005432129

Token 486: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48098456859588623
    2. ' if' → logprob: -1.9809845685958862
    3. '           ' → logprob: -2.355984687805176
    4. '==' → logprob: -2.855984687805176
    5. ' =' → logprob: -3.355984687805176
    6. ' ==' → logprob: -3.730984687805176
    7. 'if' → logprob: -3.730984687805176
    8. ' ' → logprob: -6.105984687805176
    9. '               ' → logprob: -6.355984687805176
    10. ':' → logprob: -6.605984687805176

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '           ' → logprob: -17.750911712646484
    4. '   ' → logprob: -17.875911712646484
    5. '```' → logprob: -18.125911712646484
    6. '  ' → logprob: -18.875911712646484
    7. '۰' → logprob: -19.250911712646484
    8. '    ' → logprob: -19.375911712646484
    9. '1' → logprob: -19.500911712646484
    10. '<|end|>' → logprob: -19.625911712646484

Token 488: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003440176835283637
    2. ' if' → logprob: -6.3784403800964355
    3. '       ' → logprob: -6.5034403800964355
    4. 'if' → logprob: -8.628439903259277
    5. '   ' → logprob: -11.003439903259277
    6. ',' → logprob: -11.378439903259277
    7. '
' → logprob: -11.753439903259277
    8. '```' → logprob: -12.003439903259277
    9. '          ' → logprob: -12.378439903259277
    10. '               ' → logprob: -12.503439903259277

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001787513610906899
    2. ' ' → logprob: -6.5017876625061035
    3. '           ' → logprob: -8.751787185668945
    4. '#' → logprob: -9.001787185668945
    5. '       ' → logprob: -13.126787185668945
    6. '   ' → logprob: -14.376787185668945
    7. ' #' → logprob: -14.501787185668945
    8. 'val' → logprob: -15.876787185668945
    9. '               ' → logprob: -16.126787185668945
    10. '```' → logprob: -16.126787185668945

Token 490: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007146967691369355
    2. '*' → logprob: -7.3757147789001465
    3. ' +' → logprob: -9.750714302062988
    4. 'or' → logprob: -11.375714302062988
    5. ' or' → logprob: -12.000714302062988
    6. ''+' → logprob: -12.125714302062988
    7. '+'' → logprob: -13.000714302062988
    8. '+
' → logprob: -13.625714302062988
    9. '   ' → logprob: -14.000714302062988
    10. ''*' → logprob: -14.750714302062988

Token 491: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009205120149999857
    2. '1' → logprob: -7.000920295715332
    3. '<|end|>' → logprob: -11.875920295715332
    4. ' ' → logprob: -13.625920295715332
    5. '+' → logprob: -14.250920295715332
    6. '...' → logprob: -16.37592124938965
    7. '[' → logprob: -17.75092124938965
    8. '2' → logprob: -18.12592124938965
    9. '```' → logprob: -18.37592124938965
    10. '<|end|>' → logprob: -18.75092124938965

Token 492: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0406126044690609
    2. '+' → logprob: -3.7906126976013184
    3. ' =' → logprob: -4.165612697601318
    4. '==' → logprob: -7.165612697601318
    5. ' or' → logprob: -8.04061222076416
    6. ' ==' → logprob: -9.16561222076416
    7. '=
' → logprob: -9.16561222076416
    8. ' ' → logprob: -9.79061222076416
    9. '+=' → logprob: -9.91561222076416
    10. ',' → logprob: -10.04061222076416

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -14.750004768371582
    4. '<|end|>' → logprob: -15.375004768371582
    5. '<|end|>' → logprob: -19.6250057220459
    6. '  ' → logprob: -20.0000057220459
    7. '...' → logprob: -20.0000057220459
    8. '۱' → logprob: -20.0000057220459
    9. '```' → logprob: -20.2500057220459
    10. '১' → logprob: -21.0000057220459

Token 494: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05593658611178398
    2. ',' → logprob: -2.930936574935913
    3. ',
' → logprob: -7.680936813354492
    4. '       ' → logprob: -7.805936813354492
    5. '               ' → logprob: -10.180936813354492
    6. '          ' → logprob: -10.305936813354492
    7. ' ,' → logprob: -10.305936813354492
    8. '   ' → logprob: -10.430936813354492
    9. '0' → logprob: -11.305936813354492
    10. '```' → logprob: -11.930936813354492

Token 495: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '           ' → logprob: -17.875011444091797
    4. '#' → logprob: -18.375011444091797
    5. '```' → logprob: -18.375011444091797
    6. '1' → logprob: -19.875011444091797
    7. '``' → logprob: -21.375011444091797
    8. '`' → logprob: -21.750011444091797
    9. '﻿' → logprob: -22.000011444091797
    10. '   ' → logprob: -22.500011444091797

Token 496: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.751746746478602e-05
    2. ' +' → logprob: -10.00004768371582
    3. '+[' → logprob: -13.87504768371582
    4. '[' → logprob: -14.62504768371582
    5. ' ' → logprob: -15.62504768371582
    6. '+
' → logprob: -15.75004768371582
    7. '+'' → logprob: -16.50004768371582
    8. '+)' → logprob: -16.75004768371582
    9. '*' → logprob: -17.12504768371582
    10. ' or' → logprob: -17.25004768371582

Token 497: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0077550956048071384
    2. ' ' → logprob: -5.007755279541016
    3. '0' → logprob: -7.007755279541016
    4. '1' → logprob: -9.007755279541016
    5. '```' → logprob: -11.507755279541016
    6. '+' → logprob: -14.882755279541016
    7. '<|end|>' → logprob: -14.882755279541016
    8. '`' → logprob: -15.007755279541016
    9. '[' → logprob: -15.507755279541016
    10. '  ' → logprob: -15.757755279541016

Token 498: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000251326389843598
    2. ' =' → logprob: -8.875251770019531
    3. '=
' → logprob: -9.250251770019531
    4. '+' → logprob: -11.625251770019531
    5. '<|end|>' → logprob: -13.375251770019531
    6. '==' → logprob: -13.500251770019531
    7. ')=' → logprob: -14.000251770019531
    8. '+=' → logprob: -14.500251770019531
    9. '=

' → logprob: -14.500251770019531
    10. '=True' → logprob: -15.000251770019531

Token 499: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '1' → logprob: -15.125001907348633
    4. '0' → logprob: -16.375001907348633
    5. '۲' → logprob: -17.625001907348633
    6. '```' → logprob: -18.625001907348633
    7. '<|end|>' → logprob: -19.125001907348633
    8. '[' → logprob: -19.250001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '২' → logprob: -19.500001907348633

Token 500: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024203950306400657
    2. ' if' → logprob: -9.000242233276367
    3. '       ' → logprob: -10.125242233276367
    4. 'if' → logprob: -10.375242233276367
    5. '
' → logprob: -11.625242233276367
    6. '   ' → logprob: -11.750242233276367
    7. ',' → logprob: -12.000242233276367
    8. '```' → logprob: -12.000242233276367
    9. '<|end|>' → logprob: -12.375242233276367
    10. '          ' → logprob: -12.625242233276367

Token 501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.876193169271573e-05
    2. '       ' → logprob: -10.250088691711426
    3. '```' → logprob: -10.875088691711426
    4. ' if' → logprob: -11.250088691711426
    5. 'elif' → logprob: -11.625088691711426
    6. '          ' → logprob: -12.625088691711426
    7. '   ' → logprob: -13.250088691711426
    8. 'if' → logprob: -13.250088691711426
    9. '               ' → logprob: -13.375088691711426
    10. ' elif' → logprob: -13.500088691711426

Token 502: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025069529190659523
    2. ' if' → logprob: -4.775069713592529
    3. '       ' → logprob: -4.900069713592529
    4. 'elif' → logprob: -5.400069713592529
    5. ' elif' → logprob: -5.775069713592529
    6. 'if' → logprob: -7.150069713592529
    7. '   ' → logprob: -8.775069236755371
    8. '    ' → logprob: -9.025069236755371
    9. ' ' → logprob: -9.400069236755371
    10. '        ' → logprob: -10.150069236755371

Token 503: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11586788296699524
    2. '       ' → logprob: -3.240867853164673
    3. ' ' → logprob: -3.365867853164673
    4. '1' → logprob: -3.865867853164673
    5. '   ' → logprob: -4.615868091583252
    6. 'elif' → logprob: -6.115868091583252
    7. ' if' → logprob: -6.990868091583252
    8. '    ' → logprob: -7.115868091583252
    9. ' elif' → logprob: -7.490868091583252
    10. 'if' → logprob: -8.740867614746094

Token 504: '1' (ID: 16)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3438449501991272
    2. '1' → logprob: -1.5938448905944824
    3. 'elif' → logprob: -2.9688448905944824
    4. '   ' → logprob: -4.218844890594482
    5. '       ' → logprob: -4.593844890594482
    6. 'if' → logprob: -5.093844890594482
    7. ' ' → logprob: -5.593844890594482
    8. ' if' → logprob: -7.218844890594482
    9. ' elif' → logprob: -7.343844890594482
    10. '  ' → logprob: -9.59384536743164

Token 505: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014527195133268833
    2. '*' → logprob: -4.764527320861816
    3. ' +' → logprob: -5.139527320861816
    4. ' *' → logprob: -11.639527320861816
    5. ' or' → logprob: -11.639527320861816
    6. '+
' → logprob: -11.889527320861816
    7. ' ' → logprob: -12.389527320861816
    8. '   ' → logprob: -13.264527320861816
    9. 'elif' → logprob: -13.389527320861816
    10. ')+' → logprob: -14.889527320861816

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014319339767098427
    2. '1' → logprob: -4.26431941986084
    3. ' ' → logprob: -8.88931941986084
    4. '<|end|>' → logprob: -12.01431941986084
    5. '...' → logprob: -12.51431941986084
    6. '   ' → logprob: -13.45181941986084
    7. '```' → logprob: -13.63931941986084
    8. '2' → logprob: -13.70181941986084
    9. '<|end|>' → logprob: -13.76431941986084
    10. '  ' → logprob: -14.26431941986084

Token 507: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.983476436696947e-05
    2. '==' → logprob: -9.375089645385742
    3. ' =' → logprob: -12.625089645385742
    4. '=
' → logprob: -13.750089645385742
    5. '=

' → logprob: -15.250089645385742
    6. ')=' → logprob: -16.000089645385742
    7. '=}' → logprob: -17.000089645385742
    8. '==
' → logprob: -17.125089645385742
    9. '=True' → logprob: -17.250089645385742
    10. ']=' → logprob: -17.375089645385742

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -11.125022888183594
    3. '0' → logprob: -11.750022888183594
    4. '<|end|>' → logprob: -15.125022888183594
    5. '`' → logprob: -19.375022888183594
    6. '<|end|>' → logprob: -19.625022888183594
    7. '```' → logprob: -20.000022888183594
    8. '\
' → logprob: -20.250022888183594
    9. '2' → logprob: -20.250022888183594
    10. '  ' → logprob: -20.250022888183594

Token 509: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14439809322357178
    2. ',' → logprob: -2.0193982124328613
    3. '       ' → logprob: -7.519398212432861
    4. ' if' → logprob: -7.894398212432861
    5. 'elif' → logprob: -8.144397735595703
    6. '          ' → logprob: -8.894397735595703
    7. ',
' → logprob: -9.144397735595703
    8. ' ,' → logprob: -9.394397735595703
    9. '   ' → logprob: -9.894397735595703
    10. 'if' → logprob: -10.644397735595703

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09592954069375992
    2. ' ' → logprob: -2.4709296226501465
    3. '           ' → logprob: -4.9709296226501465
    4. '   ' → logprob: -11.845929145812988
    5. '            ' → logprob: -12.345929145812988
    6. '       ' → logprob: -12.470929145812988
    7. '```' → logprob: -12.845929145812988
    8. '#' → logprob: -13.095929145812988
    9. '               ' → logprob: -13.220929145812988
    10. ' ' → logprob: -13.470929145812988

Token 511: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009373087668791413
    2. ' +' → logprob: -7.375937461853027
    3. '*' → logprob: -8.125937461853027
    4. ' or' → logprob: -12.500937461853027
    5. '   ' → logprob: -12.625937461853027
    6. '+
' → logprob: -13.250937461853027
    7. ' ' → logprob: -13.375937461853027
    8. ''+' → logprob: -13.750937461853027
    9. '+'' → logprob: -14.250937461853027
    10. 'or' → logprob: -14.500937461853027

Token 512: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11301524937152863
    2. '1' → logprob: -2.2380151748657227
    3. '2' → logprob: -9.238015174865723
    4. ' ' → logprob: -9.363015174865723
    5. '```' → logprob: -12.738015174865723
    6. '   ' → logprob: -12.863015174865723
    7. '(' → logprob: -14.488015174865723
    8. '[' → logprob: -14.738015174865723
    9. '<|end|>' → logprob: -14.863015174865723
    10. '+' → logprob: -14.988015174865723

Token 513: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.9650025428272784e-05
    2. '+' → logprob: -10.750040054321289
    3. ' =' → logprob: -11.125040054321289
    4. '==' → logprob: -13.250040054321289
    5. '=
' → logprob: -14.125040054321289
    6. '=True' → logprob: -15.000040054321289
    7. '+=' → logprob: -15.625040054321289
    8. '<|end|>' → logprob: -16.25004005432129
    9. '=

' → logprob: -16.37504005432129
    10. ')' → logprob: -16.50004005432129

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -15.000005722045898
    4. '2' → logprob: -16.1250057220459
    5. '   ' → logprob: -17.7500057220459
    6. '+' → logprob: -17.8750057220459
    7. '<|end|>' → logprob: -18.2500057220459
    8. '  ' → logprob: -18.5000057220459
    9. '...' → logprob: -18.7500057220459
    10. '１' → logprob: -19.1250057220459

Token 515: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1639440506696701
    2. ',' → logprob: -1.9139440059661865
    3. '#' → logprob: -5.663944244384766
    4. '          ' → logprob: -9.663944244384766
    5. '       ' → logprob: -10.163944244384766
    6. ' ,' → logprob: -10.288944244384766
    7. '```' → logprob: -11.163944244384766
    8. '            ' → logprob: -11.413944244384766
    9. ' ' → logprob: -11.413944244384766
    10. ' #' → logprob: -11.538944244384766

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029828163678757846
    2. '#' → logprob: -9.125298500061035
    3. '           ' → logprob: -9.125298500061035
    4. ''' → logprob: -10.000298500061035
    5. ' ' → logprob: -10.375298500061035
    6. '`' → logprob: -13.875298500061035
    7. '0' → logprob: -14.375298500061035
    8. '   ' → logprob: -14.625298500061035
    9. '            ' → logprob: -15.125298500061035
    10. '               ' → logprob: -15.250298500061035

Token 517: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.333223139634356e-05
    2. ' +' → logprob: -10.375033378601074
    3. '+
' → logprob: -14.000033378601074
    4. ''+' → logprob: -14.875033378601074
    5. '+'' → logprob: -15.250033378601074
    6. '*' → logprob: -15.625033378601074
    7. '[' → logprob: -15.875033378601074
    8. '1' → logprob: -16.750032424926758
    9. ' ' → logprob: -16.750032424926758
    10. '+')' → logprob: -17.125032424926758

Token 518: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0489126555621624
    2. '1' → logprob: -3.048912763595581
    3. '+' → logprob: -8.67391300201416
    4. '0' → logprob: -8.92391300201416
    5. ' ' → logprob: -11.04891300201416
    6. '[' → logprob: -13.67391300201416
    7. '```' → logprob: -13.92391300201416
    8. '<|end|>' → logprob: -14.04891300201416
    9. '(' → logprob: -14.29891300201416
    10. '...' → logprob: -15.17391300201416

Token 519: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.849109119386412e-06
    2. ' =' → logprob: -12.250009536743164
    3. '=
' → logprob: -12.500009536743164
    4. '=

' → logprob: -14.000009536743164
    5. '<|end|>' → logprob: -15.750009536743164
    6. '=True' → logprob: -16.000009536743164
    7. '=}' → logprob: -16.625009536743164
    8. ')=' → logprob: -16.750009536743164
    9. '==' → logprob: -16.750009536743164
    10. '='' → logprob: -17.125009536743164

Token 520: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931580901145935
    2. '2' → logprob: -0.6931580901145935
    3. ' ' → logprob: -11.443158149719238
    4. '   ' → logprob: -16.568157196044922
    5. '  ' → logprob: -17.193157196044922
    6. '<|end|>' → logprob: -17.693157196044922
    7. '```' → logprob: -17.818157196044922
    8. '۲' → logprob: -17.943157196044922
    9. '<|end|>' → logprob: -18.443157196044922
    10. '[' → logprob: -18.693157196044922

Token 521: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015775939682498574
    2. ' if' → logprob: -7.376577377319336
    3. 'if' → logprob: -7.751577377319336
    4. '<|end|>' → logprob: -8.251577377319336
    5. '       ' → logprob: -8.751577377319336
    6. '#' → logprob: -10.126577377319336
    7. '   ' → logprob: -11.501577377319336
    8. '          ' → logprob: -11.501577377319336
    9. '<|end|>' → logprob: -11.876577377319336
    10. '            ' → logprob: -12.001577377319336

Token 522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.3438327843905427e-05
    2. '          ' → logprob: -11.62502384185791
    3. '       ' → logprob: -12.00002384185791
    4. '```' → logprob: -12.50002384185791
    5. '               ' → logprob: -13.62502384185791
    6. '            ' → logprob: -14.12502384185791
    7. '         ' → logprob: -14.37502384185791
    8. ' ' → logprob: -15.00002384185791
    9. 'if' → logprob: -15.12502384185791
    10. '   ' → logprob: -15.12502384185791

Token 523: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23318272829055786
    2. 'if' → logprob: -1.733182668685913
    3. ' if' → logprob: -3.483182668685913
    4. '       ' → logprob: -8.233182907104492
    5. 'elif' → logprob: -8.358182907104492
    6. '          ' → logprob: -10.858182907104492
    7. '```' → logprob: -10.983182907104492
    8. '   ' → logprob: -11.483182907104492
    9. ' elif' → logprob: -12.608182907104492
    10. '		' → logprob: -12.983182907104492

Token 524: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7545291185379028
    2. ' ' → logprob: -1.1295291185379028
    3. '1' → logprob: -1.7545291185379028
    4. '2' → logprob: -3.7545289993286133
    5. '   ' → logprob: -4.879528999328613
    6. '       ' → logprob: -6.379528999328613
    7. ' if' → logprob: -8.504528999328613
    8. '    ' → logprob: -9.129528999328613
    9. '            ' → logprob: -9.129528999328613
    10. '  ' → logprob: -9.254528999328613

Token 525: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007779114414006472
    2. ' ' → logprob: -5.382779121398926
    3. '           ' → logprob: -6.632779121398926
    4. 'if' → logprob: -6.757779121398926
    5. '0' → logprob: -8.382779121398926
    6. ' if' → logprob: -8.757779121398926
    7. '       ' → logprob: -9.132779121398926
    8. '   ' → logprob: -9.507779121398926
    9. 'elif' → logprob: -9.757779121398926
    10. '1' → logprob: -11.007779121398926

Token 526: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005567280459217727
    2. ' +' → logprob: -7.500556945800781
    3. '+
' → logprob: -13.125556945800781
    4. '*' → logprob: -13.500556945800781
    5. ')+' → logprob: -16.37555694580078
    6. '   ' → logprob: -17.00055694580078
    7. '+[' → logprob: -17.12555694580078
    8. ' +
' → logprob: -17.25055694580078
    9. '[' → logprob: -17.25055694580078
    10. '	' → logprob: -17.50055694580078

Token 527: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012887592427432537
    2. '2' → logprob: -4.387887477874756
    3. ' ' → logprob: -7.887887477874756
    4. '1' → logprob: -13.137887954711914
    5. '   ' → logprob: -14.637887954711914
    6. '  ' → logprob: -15.887887954711914
    7. '+' → logprob: -17.262887954711914
    8. '...' → logprob: -17.950387954711914
    9. '	' → logprob: -18.012887954711914
    10. '```' → logprob: -18.137887954711914

Token 528: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001427538663847372
    2. ' =' → logprob: -9.000143051147461
    3. '==' → logprob: -11.250143051147461
    4. '=
' → logprob: -13.125143051147461
    5. '+=' → logprob: -13.625143051147461
    6. ''=' → logprob: -13.625143051147461
    7. '+' → logprob: -15.125143051147461
    8. '=

' → logprob: -15.250143051147461
    9. '='' → logprob: -15.375143051147461
    10. ')=' → logprob: -15.500143051147461

Token 529: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024358915106859058
    2. '0' → logprob: -8.500243186950684
    3. ' ' → logprob: -10.125243186950684
    4. '   ' → logprob: -17.250244140625
    5. '1' → logprob: -18.250244140625
    6. '۲' → logprob: -18.375244140625
    7. '```' → logprob: -18.500244140625
    8. '  ' → logprob: -18.625244140625
    9. '	' → logprob: -19.562744140625
    10. '２' → logprob: -20.562744140625

Token 530: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030630910769104958
    2. '+' → logprob: -4.280631065368652
    3. ',' → logprob: -4.405631065368652
    4. ' or' → logprob: -7.155631065368652
    5. '          ' → logprob: -7.280631065368652
    6. '               ' → logprob: -7.905631065368652
    7. '<|end|>' → logprob: -8.030631065368652
    8. '		' → logprob: -8.030631065368652
    9. ' ' → logprob: -8.280631065368652
    10. '       ' → logprob: -8.280631065368652

Token 531: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011096273548901081
    2. ' ' → logprob: -4.511096477508545
    3. '1' → logprob: -10.386096000671387
    4. '0' → logprob: -11.011096000671387
    5. '           ' → logprob: -15.011096000671387
    6. '```' → logprob: -15.636096000671387
    7. 'val' → logprob: -16.011096954345703
    8. '   ' → logprob: -16.136096954345703
    9. ''' → logprob: -16.386096954345703
    10. '`' → logprob: -16.511096954345703

Token 532: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001431114797014743
    2. ' +' → logprob: -9.125143051147461
    3. '*' → logprob: -10.375143051147461
    4. ''+' → logprob: -13.750143051147461
    5. '```' → logprob: -14.875143051147461
    6. '+
' → logprob: -15.125143051147461
    7. '+'' → logprob: -15.375143051147461
    8. '"+"' → logprob: -15.500143051147461
    9. ')+' → logprob: -15.750143051147461
    10. '   ' → logprob: -16.00014305114746

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023164297454059124
    2. '2' → logprob: -6.252316474914551
    3. '0' → logprob: -7.877316474914551
    4. ' ' → logprob: -12.00231647491455
    5. '...' → logprob: -14.62731647491455
    6. '<|end|>' → logprob: -14.75231647491455
    7. '```' → logprob: -14.87731647491455
    8. '[' → logprob: -14.93981647491455
    9. '   ' → logprob: -15.31481647491455
    10. '`' → logprob: -16.627315521240234

Token 534: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.537868779967539e-06
    2. ' =' → logprob: -12.000008583068848
    3. '=
' → logprob: -13.500008583068848
    4. '=

' → logprob: -14.750008583068848
    5. '='' → logprob: -15.375008583068848
    6. ''=' → logprob: -16.75000762939453
    7. '==' → logprob: -16.75000762939453
    8. '=}' → logprob: -17.12500762939453
    9. ')=' → logprob: -17.87500762939453
    10. '<|end|>' → logprob: -18.25000762939453

Token 535: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۲' → logprob: -16.00004005432129
    4. '   ' → logprob: -16.50004005432129
    5. '1' → logprob: -17.25004005432129
    6. '  ' → logprob: -18.25004005432129
    7. '２' → logprob: -18.50004005432129
    8. '২' → logprob: -19.12504005432129
    9. '₂' → logprob: -19.12504005432129
    10. '٢' → logprob: -19.25004005432129

Token 536: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16483630239963531
    2. '               ' → logprob: -1.9148362874984741
    3. 'return' → logprob: -6.164836406707764
    4. ' return' → logprob: -7.414836406707764
    5. '       ' → logprob: -7.789836406707764
    6. ':' → logprob: -7.789836406707764
    7. '```' → logprob: -8.664835929870605
    8. '          ' → logprob: -8.789835929870605
    9. ':return' → logprob: -9.039835929870605
    10. ':
' → logprob: -9.414835929870605

Token 537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008070098701864481
    2. ' ' → logprob: -7.12580680847168
    3. '1' → logprob: -14.37580680847168
    4. '           ' → logprob: -14.50080680847168
    5. '   ' → logprob: -14.62580680847168
    6. '```' → logprob: -15.50080680847168
    7. '۲' → logprob: -16.00080680847168
    8. '0' → logprob: -16.50080680847168
    9. '`' → logprob: -16.62580680847168
    10. '       ' → logprob: -16.93830680847168

Token 538: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016036832705140114
    2. '*' → logprob: -4.1410369873046875
    3. '==' → logprob: -13.891036987304688
    4. '```' → logprob: -14.141036987304688
    5. ' +' → logprob: -14.516036987304688
    6. '+
' → logprob: -15.266036987304688
    7. '+=' → logprob: -17.016036987304688
    8. '[' → logprob: -17.766036987304688
    9. '-' → logprob: -17.891036987304688
    10. '2' → logprob: -18.141036987304688

Token 539: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.706686690449715e-05
    2. ' ' → logprob: -9.625066757202148
    3. '0' → logprob: -14.750066757202148
    4. '۲' → logprob: -15.250066757202148
    5. '1' → logprob: -15.750066757202148
    6. '   ' → logprob: -16.87506675720215
    7. '２' → logprob: -16.87506675720215
    8. '	' → logprob: -17.00006675720215
    9. '  ' → logprob: -18.12506675720215
    10. '२' → logprob: -18.25006675720215

Token 540: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8624639324116288e-06
    2. '=
' → logprob: -13.375001907348633
    3. ' =' → logprob: -15.250001907348633
    4. '=

' → logprob: -16.875001907348633
    5. '==' → logprob: -18.250001907348633
    6. ')=' → logprob: -18.875001907348633
    7. '=}' → logprob: -18.875001907348633
    8. '=True' → logprob: -19.125001907348633
    9. '<|end|>' → logprob: -19.625001907348633
    10. ']=' → logprob: -19.875001907348633

Token 541: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.125030517578125
    4. '۲' → logprob: -17.375030517578125
    5. '  ' → logprob: -19.250030517578125
    6. '	' → logprob: -19.500030517578125
    7. '２' → logprob: -19.625030517578125
    8. '```' → logprob: -19.625030517578125
    9. '₂' → logprob: -19.875030517578125
    10. '٢' → logprob: -20.625030517578125

Token 542: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004803624760825187
    2. ' if' → logprob: -8.250480651855469
    3. '       ' → logprob: -8.875480651855469
    4. 'if' → logprob: -9.625480651855469
    5. '          ' → logprob: -12.000480651855469
    6. '   ' → logprob: -12.750480651855469
    7. '
' → logprob: -14.250480651855469
    8. '               ' → logprob: -14.375480651855469
    9. '		' → logprob: -14.500480651855469
    10. '            
' → logprob: -14.500480651855469

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010777325369417667
    2. '       ' → logprob: -4.635777473449707
    3. ' if' → logprob: -7.010777473449707
    4. 'if' → logprob: -9.385777473449707
    5. '          ' → logprob: -10.885777473449707
    6. '   ' → logprob: -12.385777473449707
    7. '               ' → logprob: -12.885777473449707
    8. '```' → logprob: -12.885777473449707
    9. '        ' → logprob: -13.385777473449707
    10. '      ' → logprob: -13.885777473449707

Token 544: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0002142650482710451
    2. '           ' → logprob: -8.750214576721191
    3. ' if' → logprob: -10.000214576721191
    4. '       ' → logprob: -12.000214576721191
    5. 'return' → logprob: -12.625214576721191
    6. 'val' → logprob: -15.375214576721191
    7. '   ' → logprob: -15.375214576721191
    8. 'result' → logprob: -15.500214576721191
    9. '	if' → logprob: -16.500213623046875
    10. '```' → logprob: -16.625213623046875

Token 545: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.005945982877165079
    2. ' val' → logprob: -5.130946159362793
    3. '0' → logprob: -11.255946159362793
    4. '   ' → logprob: -12.880946159362793
    5. '(val' → logprob: -13.880946159362793
    6. ' ' → logprob: -14.755946159362793
    7. '	val' → logprob: -15.880946159362793
    8. 'va' → logprob: -16.505945205688477
    9. '
' → logprob: -16.755945205688477
    10. '  ' → logprob: -16.880945205688477

Token 546: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.9361264946837764e-07
    2. ' L' → logprob: -16.5
    3. '[' → logprob: -19.625
    4. '(' → logprob: -20.0
    5. '0' → logprob: -20.5
    6. '=' → logprob: -21.125
    7. 'LObject' → logprob: -21.25
    8. ')' → logprob: -21.75
    9. '[
' → logprob: -22.375
    10. 'R' → logprob: -23.0

Token 547: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759524703025818
    2. '==' → logprob: -0.8259524703025818
    3. '==
' → logprob: -11.575952529907227
    4. ' ' → logprob: -13.575952529907227
    5. '=' → logprob: -13.825952529907227
    6. ']==' → logprob: -14.700952529907227
    7. ')==' → logprob: -14.950952529907227
    8. '[' → logprob: -15.575952529907227
    9. ' ==
' → logprob: -16.200952529907227
    10. '```' → logprob: -16.575952529907227

Token 548: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10440322011709213
    2. '0' → logprob: -2.354403257369995
    3. ' ' → logprob: -5.729403018951416
    4. '1' → logprob: -6.979403018951416
    5. '   ' → logprob: -12.104403495788574
    6. '  ' → logprob: -13.729403495788574
    7. '    ' → logprob: -15.041903495788574
    8. '	' → logprob: -15.291903495788574
    9. '

' → logprob: -15.791903495788574
    10. '
' → logprob: -15.979403495788574

Token 549: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34850364923477173
    2. '0' → logprob: -1.223503589630127
    3. ' ' → logprob: -9.848504066467285
    4. '1' → logprob: -12.223504066467285
    5. '   ' → logprob: -14.348504066467285
    6. '

' → logprob: -15.223504066467285
    7. '  ' → logprob: -15.786004066467285
    8. '
' → logprob: -15.911004066467285
    9. '```' → logprob: -17.09850311279297
    10. '    ' → logprob: -17.16100311279297

Token 550: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03302676975727081
    2. ' and' → logprob: -3.783026695251465
    3. 'and' → logprob: -5.408026695251465
    4. 'or' → logprob: -6.033026695251465
    5. ' ==' → logprob: -6.658026695251465
    6. '==' → logprob: -6.658026695251465
    7. '           ' → logprob: -8.908026695251465
    8. ' ' → logprob: -8.908026695251465
    9. '   ' → logprob: -12.533026695251465
    10. '	or' → logprob: -12.908026695251465

Token 551: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.005286053754389286
    2. ' val' → logprob: -5.25528621673584
    3. '           ' → logprob: -9.88028621673584
    4. '            ' → logprob: -14.63028621673584
    5. '          ' → logprob: -15.38028621673584
    6. '               ' → logprob: -15.88028621673584
    7. '	val' → logprob: -16.255285263061523
    8. '              ' → logprob: -17.005285263061523
    9. ' ' → logprob: -17.130285263061523
    10. '   ' → logprob: -17.255285263061523

Token 552: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -5.085517113911919e-05
    2. 'L' → logprob: -10.00005054473877
    3. 'val' → logprob: -13.25005054473877
    4. ' R' → logprob: -13.37505054473877
    5. '```' → logprob: -14.37505054473877
    6. '[' → logprob: -14.87505054473877
    7. '_R' → logprob: -15.12505054473877
    8. ' ' → logprob: -16.250051498413086
    9. '   ' → logprob: -16.250051498413086
    10. 'pos' → logprob: -16.250051498413086

Token 553: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740847051143646
    2. ' ==' → logprob: -0.974084734916687
    3. ']==' → logprob: -12.724084854125977
    4. '==
' → logprob: -13.474084854125977
    5. ')==' → logprob: -14.224084854125977
    6. '<|end|>' → logprob: -14.224084854125977
    7. '=' → logprob: -14.849084854125977
    8. '=='' → logprob: -14.849084854125977
    9. ' ' → logprob: -14.974084854125977
    10. '=="' → logprob: -15.474084854125977

Token 554: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018154975026845932
    2. ' ' → logprob: -4.018155097961426
    3. '   ' → logprob: -12.393155097961426
    4. '  ' → logprob: -14.393155097961426
    5. '```' → logprob: -16.14315414428711
    6. '۲' → logprob: -16.39315414428711
    7. '           ' → logprob: -17.01815414428711
    8. '       ' → logprob: -17.64315414428711
    9. '    ' → logprob: -17.70565414428711
    10. '２' → logprob: -18.08065414428711

Token 555: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008618000894784927
    2. ' ' → logprob: -4.758617877960205
    3. '   ' → logprob: -13.133618354797363
    4. '  ' → logprob: -14.633618354797363
    5. '۲' → logprob: -14.883618354797363
    6. '```' → logprob: -15.008618354797363
    7. '<|end|>' → logprob: -16.758617401123047
    8. '２' → logprob: -17.133617401123047
    9. '২' → logprob: -17.508617401123047
    10. '[' → logprob: -17.508617401123047

Token 556: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8143311738967896
    2. ':
' → logprob: -0.9393311738967896
    3. '==' → logprob: -2.0643310546875
    4. ' ==' → logprob: -3.6893310546875
    5. '               ' → logprob: -4.4393310546875
    6. ':return' → logprob: -6.8143310546875
    7. '           ' → logprob: -7.1893310546875
    8. '       ' → logprob: -8.8143310546875
    9. '2' → logprob: -8.9393310546875
    10. '=' → logprob: -9.8143310546875

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005392124294303358
    2. ' return' → logprob: -8.12553882598877
    3. 'return' → logprob: -8.75053882598877
    4. ':return' → logprob: -10.50053882598877
    5. '           ' → logprob: -11.25053882598877
    6. ':' → logprob: -11.87553882598877
    7. '              ' → logprob: -12.00053882598877
    8. '			' → logprob: -12.25053882598877
    9. ':
' → logprob: -12.25053882598877
    10. '<|end|>' → logprob: -12.62553882598877

Token 558: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0018265502294525504
    2. '               ' → logprob: -7.001826763153076
    3. ' return' → logprob: -7.001826763153076
    4. '           ' → logprob: -13.001826286315918
    5. '{return' → logprob: -14.001826286315918
    6. ':return' → logprob: -14.501826286315918
    7. '	return' → logprob: -14.751826286315918
    8. '2' → logprob: -15.376826286315918
    9. '   ' → logprob: -16.751827239990234
    10. 'eturn' → logprob: -17.501827239990234

Token 559: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.250040054321289
    4. '           ' → logprob: -18.75004005432129
    5. '  ' → logprob: -19.12504005432129
    6. '۲' → logprob: -20.75004005432129
    7. '       ' → logprob: -20.75004005432129
    8. '               ' → logprob: -21.75004005432129
    9. '```' → logprob: -21.87504005432129
    10. '    ' → logprob: -22.12504005432129

Token 560: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.375003814697266
    4. '  ' → logprob: -18.875003814697266
    5. '۲' → logprob: -18.875003814697266
    6. '```' → logprob: -20.750003814697266
    7. '２' → logprob: -20.875003814697266
    8. '	' → logprob: -21.000003814697266
    9. '       ' → logprob: -21.312503814697266
    10. '২' → logprob: -21.437503814697266

Token 561: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18978793919086456
    2. 'elif' → logprob: -1.9397879838943481
    3. 'if' → logprob: -3.5647878646850586
    4. '       ' → logprob: -7.439787864685059
    5. '   ' → logprob: -9.314787864685059
    6. ' if' → logprob: -9.439787864685059
    7. ' elif' → logprob: -10.189787864685059
    8. 'else' → logprob: -11.189787864685059
    9. '<|end|>' → logprob: -12.439787864685059
    10. '               ' → logprob: -12.564787864685059

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0379469394683838
    2. 'elif' → logprob: -1.0379469394683838
    3. 'if' → logprob: -1.2879469394683838
    4. '       ' → logprob: -4.287946701049805
    5. ' if' → logprob: -6.537946701049805
    6. ' elif' → logprob: -8.162946701049805
    7. '   ' → logprob: -8.287946701049805
    8. '               ' → logprob: -10.412946701049805
    9. 'else' → logprob: -10.537946701049805
    10. '```' → logprob: -11.037946701049805

Token 563: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.011515186168253422
    2. 'if' → logprob: -4.511515140533447
    3. '           ' → logprob: -7.886515140533447
    4. '       ' → logprob: -9.386515617370605
    5. 'else' → logprob: -12.511515617370605
    6. ' elif' → logprob: -12.761515617370605
    7. '   ' → logprob: -14.761515617370605
    8. 'el' → logprob: -15.261515617370605
    9. 'return' → logprob: -15.761515617370605
    10. '	elif' → logprob: -16.13651466369629

Token 564: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.0206720617134124e-05
    2. ' val' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.500009536743164
    4. '1' → logprob: -18.625009536743164
    5. '	val' → logprob: -19.500009536743164
    6. '(val' → logprob: -21.375009536743164
    7. '           ' → logprob: -21.625009536743164
    8. '  ' → logprob: -22.250009536743164
    9. ' ' → logprob: -22.500009536743164
    10. '_val' → logprob: -23.375009536743164

Token 565: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -6.704273118884885e-07
    2. ' L' → logprob: -14.625000953674316
    3. 'val' → logprob: -16.0
    4. '{' → logprob: -19.25
    5. '1' → logprob: -19.375
    6. '[val' → logprob: -19.875
    7. ' val' → logprob: -20.375
    8. '   ' → logprob: -20.375
    9. 'l' → logprob: -20.5
    10. '[' → logprob: -20.625

Token 566: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0015058133285492659
    2. ' ==' → logprob: -6.5015058517456055
    3. '==
' → logprob: -13.501505851745605
    4. '=' → logprob: -13.751505851745605
    5. '1' → logprob: -14.126505851745605
    6. '===' → logprob: -16.50150489807129
    7. 'or' → logprob: -17.25150489807129
    8. 's' → logprob: -17.75150489807129
    9. '=='' → logprob: -18.12650489807129
    10. 'is' → logprob: -18.12650489807129

Token 567: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12696421146392822
    2. ' ' → logprob: -2.1269640922546387
    3. '0' → logprob: -10.251964569091797
    4. '   ' → logprob: -15.501964569091797
    5. 'val' → logprob: -15.689464569091797
    6. '  ' → logprob: -16.126964569091797
    7. ' ' → logprob: -16.564464569091797
    8. '=' → logprob: -17.314464569091797
    9. '۱' → logprob: -17.376964569091797
    10. '2' → logprob: -17.564464569091797

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014418430509977043
    2. ' ' → logprob: -8.875144004821777
    3. '2' → logprob: -12.500144004821777
    4. '0' → logprob: -14.500144004821777
    5. '   ' → logprob: -16.625144958496094
    6. '  ' → logprob: -17.875144958496094
    7. '

' → logprob: -18.812644958496094
    8. '
' → logprob: -19.375144958496094
    9. '۱' → logprob: -19.562644958496094
    10. '１' → logprob: -19.625144958496094

Token 569: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.011240453459322453
    2. 'or' → logprob: -4.511240482330322
    3. ' ==' → logprob: -8.886240005493164
    4. '==' → logprob: -10.261240005493164
    5. '           ' → logprob: -11.761240005493164
    6. ' ' → logprob: -11.761240005493164
    7. '	or' → logprob: -12.761240005493164
    8. '            ' → logprob: -15.136240005493164
    9. '          ' → logprob: -15.511240005493164
    10. ' ' → logprob: -16.136240005493164

Token 570: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.31326204538345337
    2. ' val' → logprob: -1.3132619857788086
    3. '	val' → logprob: -15.563261985778809
    4. '[val' → logprob: -16.688262939453125
    5. '(val' → logprob: -17.438262939453125
    6. '_val' → logprob: -17.688262939453125
    7. '1' → logprob: -17.938262939453125
    8. '   ' → logprob: -18.188262939453125
    9. '.val' → logprob: -18.563262939453125
    10. ' ' → logprob: -18.563262939453125

Token 571: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0011080671101808548
    2. 'val' → logprob: -6.876108169555664
    3. ' val' → logprob: -10.626108169555664
    4. '1' → logprob: -10.876108169555664
    5. ' R' → logprob: -11.126108169555664
    6. ' ' → logprob: -11.751108169555664
    7. '   ' → logprob: -12.876108169555664
    8. '[' → logprob: -13.751108169555664
    9. '  ' → logprob: -13.751108169555664
    10. '[val' → logprob: -13.751108169555664

Token 572: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04300685599446297
    2. '==' → logprob: -3.1680068969726562
    3. '[' → logprob: -12.668006896972656
    4. ' ' → logprob: -13.918006896972656
    5. ']==' → logprob: -14.168006896972656
    6. '```' → logprob: -14.418006896972656
    7. '<|end|>' → logprob: -14.793006896972656
    8. ')==' → logprob: -14.793006896972656
    9. '           ' → logprob: -15.168006896972656
    10. '1' → logprob: -15.168006896972656

Token 573: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.000261306762695
    4. '[' → logprob: -19.500261306762695
    5. '0' → logprob: -19.625261306762695
    6. '  ' → logprob: -19.625261306762695
    7. '=' → logprob: -19.875261306762695
    8. '<|end|>' → logprob: -19.875261306762695
    9. ' ' → logprob: -20.125261306762695
    10. '(' → logprob: -20.375261306762695

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007104054093360901
    2. ' ' → logprob: -7.250710487365723
    3. '<|end|>' → logprob: -15.500710487365723
    4. '```' → logprob: -16.500709533691406
    5. '0' → logprob: -18.063209533691406
    6. '   ' → logprob: -18.188209533691406
    7. '[' → logprob: -18.313209533691406
    8. '=' → logprob: -18.375709533691406
    9. '`' → logprob: -18.500709533691406
    10. '  ' → logprob: -18.500709533691406

Token 575: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28796032071113586
    2. '               ' → logprob: -1.4129602909088135
    3. ':
' → logprob: -5.537960529327393
    4. ':return' → logprob: -6.537960529327393
    5. '           ' → logprob: -7.412960529327393
    6. '              ' → logprob: -8.287960052490234
    7. ' :' → logprob: -8.662960052490234
    8. '	       ' → logprob: -9.662960052490234
    9. '<|end|>' → logprob: -9.662960052490234
    10. ' return' → logprob: -10.537960052490234

Token 576: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0039139497093856335
    2. '1' → logprob: -6.128913879394531
    3. '           ' → logprob: -7.378913879394531
    4. ':' → logprob: -7.878913879394531
    5. 'return' → logprob: -8.753913879394531
    6. '	       ' → logprob: -9.003913879394531
    7. ':return' → logprob: -9.128913879394531
    8. '<|end|>' → logprob: -9.753913879394531
    9. '	           ' → logprob: -10.003913879394531
    10. '		       ' → logprob: -10.003913879394531

Token 577: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02024509198963642
    2. 'return' (adapté à ' return') → logprob: -4.27024507522583
    3. '               ' → logprob: -5.89524507522583
    4. ' return' → logprob: -6.27024507522583
    5. ' ' → logprob: -6.64524507522583
    6. '           ' → logprob: -9.145245552062988
    7. '   ' → logprob: -11.520245552062988
    8. '	return' → logprob: -13.895245552062988
    9. '       ' → logprob: -15.520245552062988
    10. ' ' → logprob: -15.520245552062988

Token 578: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '<|end|>' → logprob: -19.12747573852539
    4. '   ' → logprob: -19.25247573852539
    5. ' ' → logprob: -20.50247573852539
    6. '0' → logprob: -20.75247573852539
    7. '۱' → logprob: -20.87747573852539
    8. '  ' → logprob: -21.37747573852539
    9. '```' → logprob: -21.62747573852539
    10. '`' → logprob: -21.81497573852539

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '<|end|>' → logprob: -21.75
    4. '۱' → logprob: -22.75
    5. '   ' → logprob: -23.25
    6. '```' → logprob: -23.625
    7. '`' → logprob: -23.75
    8. '2' → logprob: -24.25
    9. '0' → logprob: -24.375
    10. '  ' → logprob: -24.875

Token 580: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4775408208370209
    2. 'else' → logprob: -1.1025408506393433
    3. ' else' → logprob: -3.2275407314300537
    4. '       ' → logprob: -5.352540969848633
    5. '               ' → logprob: -6.477540969848633
    6. '0' → logprob: -7.227540969848633
    7. 'return' → logprob: -7.602540969848633
    8. '	       ' → logprob: -8.227540969848633
    9. '```' → logprob: -9.352540969848633
    10. '		' → logprob: -10.227540969848633

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25655895471572876
    2. '               ' → logprob: -1.506558895111084
    3. '       ' → logprob: -5.881558895111084
    4. ' else' → logprob: -6.631558895111084
    5. 'else' → logprob: -8.006559371948242
    6. '```' → logprob: -9.631559371948242
    7. ' return' → logprob: -10.506559371948242
    8. 'return' → logprob: -10.506559371948242
    9. '   ' → logprob: -11.381559371948242
    10. '<|end|>' → logprob: -11.506559371948242

Token 582: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20806390047073364
    2. '           ' → logprob: -2.208063840866089
    3. 'return' → logprob: -2.958063840866089
    4. '0' → logprob: -4.458064079284668
    5. ' else' → logprob: -4.833064079284668
    6. '               ' → logprob: -5.583064079284668
    7. '       ' → logprob: -6.208064079284668
    8. ' return' → logprob: -8.333064079284668
    9. '```' → logprob: -8.583064079284668
    10. '   ' → logprob: -9.708064079284668

Token 583: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07409609109163284
    2. ':' → logprob: -3.199096202850342
    3. ':return' → logprob: -4.449096202850342
    4. ':
' → logprob: -5.074096202850342
    5. 'return' → logprob: -5.324096202850342
    6. ' return' → logprob: -5.699096202850342
    7. '           ' → logprob: -5.824096202850342
    8. '0' → logprob: -7.074096202850342
    9. '   ' → logprob: -8.699095726013184
    10. '              ' → logprob: -9.199095726013184

Token 584: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7329537272453308
    2. '               ' → logprob: -1.2329537868499756
    3. 'return' → logprob: -1.4829537868499756
    4. '           ' → logprob: -6.9829535484313965
    5. '0' → logprob: -9.357954025268555
    6. '   ' → logprob: -9.607954025268555
    7. '       ' → logprob: -11.482954025268555
    8. '{return' → logprob: -11.732954025268555
    9. ' ' → logprob: -11.982954025268555
    10. '	return' → logprob: -12.357954025268555

Token 585: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029852005536668
    2. ' ' → logprob: -8.750298500061035
    3. 'return' (adapté à ' return') → logprob: -9.000298500061035
    4. ' return' → logprob: -11.000298500061035
    5. '   ' → logprob: -17.50029945373535
    6. '           ' → logprob: -18.75029945373535
    7. '       ' → logprob: -20.25029945373535
    8. '               ' → logprob: -20.62529945373535
    9. '  ' → logprob: -21.25029945373535
    10. '    ' → logprob: -21.87529945373535

Token 586: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۰' → logprob: -19.500009536743164
    4. '   ' → logprob: -21.500009536743164
    5. '０' → logprob: -22.000009536743164
    6. ' ' → logprob: -22.250009536743164
    7. ' ' → logprob: -22.500009536743164
    8. '  ' → logprob: -22.812509536743164
    9. '০' → logprob: -23.312509536743164
    10. '०' → logprob: -23.437509536743164

Token 587: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '۰' → logprob: -21.625
    4. '   ' → logprob: -24.5
    5. '０' → logprob: -25.125
    6. '০' → logprob: -25.5
    7. '<|end|>' → logprob: -25.625
    8. '०' → logprob: -25.75
    9. '٠' → logprob: -25.75
    10. '  ' → logprob: -26.25

Token 588: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 589: 'count' (ID: 5420)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: '_' (ID: 62)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6138280034065247
    2. '(' → logprob: -1.7388279438018799
    3. '_' → logprob: -2.23882794380188
    4. ' =' → logprob: -2.86382794380188
    5. '_values' → logprob: -3.48882794380188
    6. '_vals' → logprob: -3.61382794380188
    7. '_spaces' → logprob: -4.738828182220459
    8. 'inue' → logprob: -4.988828182220459
    9. '=' → logprob: -5.363828182220459
    10. '_space' → logprob: -5.738828182220459

Token 591: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3433855473995209
    2. '=' → logprob: -2.7183854579925537
    3. '_' → logprob: -3.4683854579925537
    4. '_true' → logprob: -3.9683854579925537
    5. ' =' → logprob: -4.218385696411133
    6. 'form' → logprob: -4.218385696411133
    7. 'vals' → logprob: -4.468385696411133
    8. '0' → logprob: -4.468385696411133
    9. 'results' → logprob: -4.468385696411133
    10. 'valid' → logprob: -4.593385696411133

Token 592: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04942835122346878
    2. ' =' → logprob: -3.2994284629821777
    3. '=' → logprob: -4.674428462982178
    4. '_s' → logprob: -7.549428462982178
    5. '_vals' → logprob: -7.799428462982178
    6. '_in' → logprob: -8.17442798614502
    7. '_' → logprob: -8.54942798614502
    8. '_values' → logprob: -9.04942798614502
    9. '_val' → logprob: -9.29942798614502
    10. '2' → logprob: -9.42442798614502

Token 593: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020612843800336123
    2. ' ' → logprob: -6.752061367034912
    3. 'sum' → logprob: -7.127061367034912
    4. ' sum' → logprob: -9.752060890197754
    5. 'eval' → logprob: -11.252060890197754
    6. '3' → logprob: -12.502060890197754
    7. '1' → logprob: -12.627060890197754
    8. '2' → logprob: -13.127060890197754
    9. 'len' → logprob: -13.877060890197754
    10. '(' → logprob: -14.002060890197754

Token 594: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.035522181540727615
    2. 'def' → logprob: -3.410522222518921
    3. ' for' → logprob: -6.285521984100342
    4. ' def' → logprob: -12.2855224609375
    5. 'count' → logprob: -13.7855224609375
    6. '```' → logprob: -13.7855224609375
    7. ')' → logprob: -14.1605224609375
    8. ' ' → logprob: -14.5355224609375
    9. 'from' → logprob: -14.6605224609375
    10. '[' → logprob: -14.7855224609375

Token 595: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4969668388366699
    2. ' len' → logprob: -1.49696683883667
    3. 'True' → logprob: -1.87196683883667
    4. 'len' → logprob: -4.37196683883667
    5. 'count' → logprob: -7.12196683883667
    6. ' count' → logprob: -7.99696683883667
    7. ' not' → logprob: -9.871967315673828
    8. ' ' → logprob: -9.996967315673828
    9. ' vals' → logprob: -10.246967315673828
    10. 'vals' → logprob: -10.621967315673828

Token 596: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008974744938313961
    2. ' :' → logprob: -4.758974552154541
    3. ':
' → logprob: -8.0089750289917
    4. ' :
' → logprob: -10.6339750289917
    5. '():' → logprob: -13.7589750289917
    6. ':

' → logprob: -14.3839750289917
    7. '):' → logprob: -15.1339750289917
    8. '   ' → logprob: -15.2589750289917
    9. '.' → logprob: -15.5089750289917
    10. ',' → logprob: -15.7589750289917

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010967529378831387
    2. ' True' → logprob: -5.76096773147583
    3. ' line' → logprob: -6.13596773147583
    4. 'True' → logprob: -6.38596773147583
    5. 'try' → logprob: -6.51096773147583
    6. ' try' → logprob: -7.26096773147583
    7. 'line' → logprob: -7.63596773147583
    8. 'formula' → logprob: -7.63596773147583
    9. ' formula' → logprob: -8.510967254638672
    10. 's' → logprob: -8.510967254638672

Token 598: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.15408775210380554
    2. 'vals' → logprob: -2.404087781906128
    3. 'try' → logprob: -3.654087781906128
    4. 'formula' → logprob: -4.154087543487549
    5. 'expr' → logprob: -5.904087543487549
    6. 'import' → logprob: -5.904087543487549
    7. ' line' → logprob: -6.529087543487549
    8. 'inp' → logprob: -6.779087543487549
    9. 'input' → logprob: -7.029087543487549
    10. 's' → logprob: -7.029087543487549

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759428143501282
    2. ' =' → logprob: -0.8259428143501282
    3. 's' → logprob: -13.950942993164062
    4. '=line' → logprob: -14.200942993164062
    5. '_' → logprob: -14.450942993164062
    6. ' ' → logprob: -14.825942993164062
    7. '=input' → logprob: -15.075942993164062
    8. '.' → logprob: -15.200942993164062
    9. '   ' → logprob: -16.075942993164062
    10. ' ' → logprob: -17.200942993164062

Token 600: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861456897109747
    2. ' input' → logprob: -4.758614540100098
    3. '=input' → logprob: -18.008615493774414
    4. 'try' → logprob: -18.633615493774414
    5. '(input' → logprob: -18.758615493774414
    6. '```' → logprob: -20.008615493774414
    7. '   ' → logprob: -20.133615493774414
    8. '_input' → logprob: -20.258615493774414
    9. '	input' → logprob: -20.633615493774414
    10. ' ' → logprob: -20.633615493774414

Token 601: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011594036914175376
    2. '(' → logprob: -9.750116348266602
    3. '().' → logprob: -10.125116348266602
    4. '('' → logprob: -12.500116348266602
    5. '()>' → logprob: -12.625116348266602
    6. '()
' → logprob: -12.750116348266602
    7. ' ()' → logprob: -13.000116348266602
    8. '("")' → logprob: -13.375116348266602
    9. '())' → logprob: -13.500116348266602
    10. '()">' → logprob: -15.000116348266602

Token 602: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007989393547177315
    2. 'if' → logprob: -5.507989406585693
    3. '.strip' → logprob: -6.757989406585693
    4. '   ' → logprob: -6.882989406585693
    5. '
' → logprob: -8.007988929748535
    6. ' try' → logprob: -8.382988929748535
    7. '<|end|>' → logprob: -8.382988929748535
    8. ' ' → logprob: -8.632988929748535
    9. ' =' → logprob: -8.757988929748535
    10. '=' → logprob: -8.882988929748535

Token 603: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038070641458034515
    2. 'if' (adapté à ' if') → logprob: -3.2880706787109375
    3. '   ' → logprob: -10.538070678710938
    4. ' try' → logprob: -14.163070678710938
    5. 'try' → logprob: -14.413070678710938
    6. '	if' → logprob: -14.413070678710938
    7. '    ' → logprob: -15.663070678710938
    8. ' ' → logprob: -15.913070678710938
    9. 'i' → logprob: -16.413070678710938
    10. '=' → logprob: -16.413070678710938

Token 604: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5916684865951538
    2. ' line' → logprob: -0.9666684865951538
    3. 'line' → logprob: -2.9666686058044434
    4. 'not' → logprob: -4.216668605804443
    5. '#line' → logprob: -11.591668128967285
    6. ' ' → logprob: -11.591668128967285
    7. '	line' → logprob: -13.216668128967285
    8. '(line' → logprob: -13.216668128967285
    9. '[line' → logprob: -13.341668128967285
    10. '=line' → logprob: -13.966668128967285

Token 605: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4742375910282135
    2. ' ==' → logprob: -0.9742375612258911
    3. '.strip' → logprob: -8.974237442016602
    4. '=' → logprob: -11.099237442016602
    5. '()==' → logprob: -12.474237442016602
    6. '=="' → logprob: -12.599237442016602
    7. '.' → logprob: -12.599237442016602
    8. '==
' → logprob: -13.224237442016602
    9. ')==' → logprob: -13.349237442016602
    10. '=='' → logprob: -13.474237442016602

Token 606: ' '.' (ID: 12662)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.03714974597096443
    2. '""' → logprob: -3.912149667739868
    3. ''' → logprob: -4.787149906158447
    4. '"' → logprob: -5.162149906158447
    5. ''ex' → logprob: -6.662149906158447
    6. ''end' → logprob: -7.037149906158447
    7. '"":' → logprob: -8.537149429321289
    8. ''e' → logprob: -11.287149429321289
    9. 'EOF' → logprob: -11.662149429321289
    10. ''t' → logprob: -12.037149429321289

Token 607: '':
' (ID: 7669)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7320072054862976
    2. '':' → logprob: -0.9820072054862976
    3. '':
' → logprob: -1.9820072650909424
    4. ''' → logprob: -5.232007026672363
    5. ''.' → logprob: -6.982007026672363
    6. '':
' → logprob: -8.482007026672363
    7. '.'' → logprob: -9.607007026672363
    8. ''):
' → logprob: -10.232007026672363
    9. '':

' → logprob: -10.857007026672363
    10. '':'' → logprob: -11.232007026672363

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3132949769496918
    2. '   ' → logprob: -1.3132950067520142
    3. '     ' → logprob: -12.063295364379883
    4. ' break' → logprob: -12.313295364379883
    5. '    ' → logprob: -12.563295364379883
    6. '   ' → logprob: -12.563295364379883
    7. '      ' → logprob: -12.688295364379883
    8. '	break' → logprob: -12.813295364379883
    9. ' ' → logprob: -12.813295364379883
    10. '           ' → logprob: -13.313295364379883

Token 609: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4972130358219147
    2. '   ' → logprob: -0.9972130060195923
    3. '       ' → logprob: -4.372212886810303
    4. ' break' → logprob: -4.872212886810303
    5. '	break' → logprob: -5.997212886810303
    6. '    
' → logprob: -10.372213363647461
    7. '           ' → logprob: -10.622213363647461
    8. '_break' → logprob: -11.247213363647461
    9. '    ' → logprob: -11.622213363647461
    10. '        
' → logprob: -12.247213363647461

Token 610: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13656064867973328
    2. 'vals' → logprob: -2.6365606784820557
    3. ' vals' → logprob: -3.2615606784820557
    4. '    
' → logprob: -4.136560440063477
    5. 'val' → logprob: -8.136560440063477
    6. '
' → logprob: -8.386560440063477
    7. '   
' → logprob: -8.511560440063477
    8. '_vals' → logprob: -8.636560440063477
    9. '(vals' → logprob: -8.636560440063477
    10. 'values' → logprob: -9.011560440063477

Token 611: '   ' (ID: 271)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.5051309466362
    2. '   ' → logprob: -1.6301310062408447
    3. ' vals' → logprob: -1.6301310062408447
    4. 'val' → logprob: -6.255130767822266
    5. '    
' → logprob: -7.005130767822266
    6. 'values' → logprob: -7.755130767822266
    7. '_vals' → logprob: -7.880130767822266
    8. ' val' → logprob: -8.130130767822266
    9. '(vals' → logprob: -8.380130767822266
    10. '   
' → logprob: -9.130130767822266

Token 612: ' count' (ID: 3605)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.35244306921958923
    2. 'count' (adapté à ' count') → logprob: -1.8524430990219116
    3. 'formula' → logprob: -2.102442979812622
    4. 'n' → logprob: -5.727443218231201
    5. 'cnt' → logprob: -5.727443218231201
    6. 'counts' → logprob: -5.727443218231201
    7. 'val' → logprob: -5.977443218231201
    8. '   ' → logprob: -5.977443218231201
    9. 'values' → logprob: -7.477443218231201
    10. 'form' → logprob: -7.852443218231201

Token 613: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.465036105713807e-06
    2. '_tokens' → logprob: -13.125007629394531
    3. '=' → logprob: -13.625007629394531
    4. ' =' → logprob: -13.875007629394531
    5. '_lines' → logprob: -14.250007629394531
    6. '=_' → logprob: -14.500007629394531
    7. '_=' → logprob: -15.000007629394531
    8. 's' → logprob: -15.625007629394531
    9. '   ' → logprob: -15.625007629394531
    10. '__' → logprob: -16.12500762939453

Token 614: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011822503292933106
    2. ' ' → logprob: -6.8761820793151855
    3. 'eval' → logprob: -9.376182556152344
    4. '2' → logprob: -10.626182556152344
    5. '{}' → logprob: -11.251182556152344
    6. '{' → logprob: -11.376182556152344
    7. ' eval' → logprob: -12.251182556152344
    8. '[' → logprob: -12.751182556152344
    9. '3' → logprob: -13.501182556152344
    10. 'sum' → logprob: -13.626182556152344

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000111768240458332
    2. 'eval' → logprob: -9.62511157989502
    3. '2' → logprob: -11.25011157989502
    4. '[' → logprob: -11.37511157989502
    5. '{}' → logprob: -12.25011157989502
    6. 'sum' → logprob: -12.37511157989502
    7. '{' → logprob: -13.00011157989502
    8. 'int' → logprob: -13.12511157989502
    9. '{}
' → logprob: -13.37511157989502
    10. ' ' → logprob: -13.50011157989502

Token 616: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03346691280603409
    2. '    
' → logprob: -3.7834668159484863
    3. '   
' → logprob: -5.783466815948486
    4. '
' → logprob: -5.908466815948486
    5. ' for' → logprob: -6.908466815948486
    6. '     
' → logprob: -7.033466815948486
    7. ' 
' → logprob: -7.408466815948486
    8. 'for' → logprob: -7.658466815948486
    9. 'val' → logprob: -8.158467292785645
    10. '    ' → logprob: -8.283467292785645

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0188550166785717
    2. ' vals' → logprob: -4.893855094909668
    3. ' for' → logprob: -5.268855094909668
    4. 'vals' → logprob: -5.893855094909668
    5. '    
' → logprob: -6.643855094909668
    6. 'for' → logprob: -6.893855094909668
    7. '(vals' → logprob: -8.268855094909668
    8. 'val' → logprob: -8.768855094909668
    9. '_vals' → logprob: -8.768855094909668
    10. ' val' → logprob: -9.268855094909668

Token 618: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6447188258171082
    2. 'vals' → logprob: -1.019718885421753
    3. ' for' → logprob: -2.394718885421753
    4. ' vals' → logprob: -4.519718647003174
    5. 'formula' → logprob: -4.769718647003174
    6. '   ' → logprob: -6.519718647003174
    7. 'form' → logprob: -7.269718647003174
    8. ' formula' → logprob: -7.644718647003174
    9. 'n' → logprob: -7.769718647003174
    10. 'values' → logprob: -8.269719123840332

Token 619: ' P' (ID: 398)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6460666060447693
    2. 'val' → logprob: -1.396066665649414
    3. 'ch' → logprob: -2.021066665649414
    4. 'i' → logprob: -2.771066665649414
    5. 'char' → logprob: -4.021066665649414
    6. 'formula' → logprob: -5.271066665649414
    7. 'v' → logprob: -5.396066665649414
    8. 'vals' → logprob: -6.646066665649414
    9. ' c' → logprob: -6.896066665649414
    10. ' val' → logprob: -7.021066665649414

Token 620: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20336352288722992
    2. 'in' → logprob: -1.7033635377883911
    3. ' ' → logprob: -6.453363418579102
    4. ',' → logprob: -8.828363418579102
    5. 'val' → logprob: -9.578363418579102
    6. '_val' → logprob: -10.578363418579102
    7. ' ,' → logprob: -10.578363418579102
    8. ' i' → logprob: -10.703363418579102
    9. '=' → logprob: -11.203363418579102
    10. 'i' → logprob: -11.703363418579102

Token 621: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13496869802474976
    2. 'range' → logprob: -2.1349687576293945
    3. '[' → logprob: -5.5099687576293945
    4. '0' → logprob: -5.6349687576293945
    5. ' ' → logprob: -8.384968757629395
    6. ' [' → logprob: -8.884968757629395
    7. '(' → logprob: -10.759968757629395
    8. '(range' → logprob: -13.384968757629395
    9. ' (' → logprob: -13.634968757629395
    10. '   ' → logprob: -15.259968757629395

Token 622: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.125
    4. '2' → logprob: -21.25
    5. '۰' → logprob: -21.625
    6. '012' → logprob: -22.375
    7. 'range' → logprob: -22.625
    8. '０' → logprob: -23.5
    9. '  ' → logprob: -24.0
    10. '
' → logprob: -24.125

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017083751736208797
    2. ' ,' → logprob: -6.376708507537842
    3. ',
' → logprob: -13.001708030700684
    4. ' ' → logprob: -13.501708030700684
    5. '0' → logprob: -13.876708030700684
    6. ']' → logprob: -14.126708030700684
    7. '   ' → logprob: -15.126708030700684
    8. '‌,' → logprob: -16.376708984375
    9. ',None' → logprob: -16.501708984375
    10. '

' → logprob: -16.626708984375

Token 624: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016241880075540394
    2. '0' → logprob: -9.250162124633789
    3. ' ' → logprob: -9.625162124633789
    4. '   ' → logprob: -15.250162124633789
    5. '  ' → logprob: -17.50016212463379
    6. '
' → logprob: -18.50016212463379
    7. '    ' → logprob: -19.50016212463379
    8. '```' → logprob: -19.62516212463379
    9. '       ' → logprob: -20.50016212463379
    10. ',' → logprob: -20.50016212463379

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007133854669518769
    2. ' ,' → logprob: -7.250713348388672
    3. '2' → logprob: -12.625713348388672
    4. ',
' → logprob: -16.875713348388672
    5. ' ' → logprob: -17.125713348388672
    6. '   ' → logprob: -19.125713348388672
    7. ',None' → logprob: -19.500713348388672
    8. '‌,' → logprob: -20.125713348388672
    9. '

' → logprob: -20.375713348388672
    10. '  ' → logprob: -20.375713348388672

Token 626: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '  ' → logprob: -20.500024795532227
    4. '   ' → logprob: -20.500024795532227
    5. '```' → logprob: -21.625024795532227
    6. '۲' → logprob: -21.750024795532227
    7. '    ' → logprob: -22.875024795532227
    8. '
' → logprob: -22.875024795532227
    9. '<|end|>' → logprob: -23.250024795532227
    10. '２' → logprob: -23.750024795532227

Token 627: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0612757205963135
    2. ']:' → logprob: -1.0612757205963135
    3. ']:
' → logprob: -1.1862757205963135
    4. ' ]' → logprob: -7.186275482177734
    5. ' ,' → logprob: -7.311275482177734
    6. ']' → logprob: -7.686275482177734
    7. ' ' → logprob: -8.186275482177734
    8. '   ' → logprob: -8.686275482177734
    9. ']:

' → logprob: -9.061275482177734
    10. ',
' → logprob: -9.561275482177734

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36455243825912476
    2. ' for' → logprob: -1.6145524978637695
    3. '   ' → logprob: -2.3645524978637695
    4. '<|end|>' → logprob: -4.6145524978637695
    5. '    ' → logprob: -6.9895524978637695
    6. ' ' → logprob: -7.6145524978637695
    7. ',' → logprob: -8.23955249786377
    8. 'for' → logprob: -8.61455249786377
    9. '        
' → logprob: -8.86455249786377
    10. '	for' → logprob: -8.98955249786377

Token 629: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018833613023161888
    2. '   ' → logprob: -4.768833637237549
    3. '       ' → logprob: -5.268833637237549
    4. '           ' → logprob: -5.768833637237549
    5. 'for' (adapté à ' for') → logprob: -6.768833637237549
    6. ' ' → logprob: -7.893833637237549
    7. '	for' → logprob: -8.51883316040039
    8. ' Q' → logprob: -9.39383316040039
    9. '<|end|>' → logprob: -10.26883316040039
    10. '    ' → logprob: -11.26883316040039

Token 630: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.3868732452392578
    2. ' Q' → logprob: -1.1368732452392578
    3. ' ' → logprob: -13.761873245239258
    4. '	Q' → logprob: -14.011873245239258
    5. '   ' → logprob: -15.386873245239258
    6. ',Q' → logprob: -17.011873245239258
    7. '<Q' → logprob: -17.261873245239258
    8. ' ' → logprob: -17.261873245239258
    9. '(Q' → logprob: -17.511873245239258
    10. '  ' → logprob: -17.636873245239258

Token 631: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008067715098150074
    2. 'in' → logprob: -7.12580680847168
    3. ' ' → logprob: -13.25080680847168
    4. 'In' → logprob: -15.75080680847168
    5. '	in' → logprob: -16.00080680847168
    6. ' ' → logprob: -17.00080680847168
    7. '_in' → logprob: -17.12580680847168
    8. '[' → logprob: -17.37580680847168
    9. ' 
' → logprob: -17.37580680847168
    10. '   ' → logprob: -17.37580680847168

Token 632: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47408702969551086
    2. ' [' → logprob: -0.9740869998931885
    3. ' ' → logprob: -12.34908676147461
    4. ' range' → logprob: -12.47408676147461
    5. 'range' → logprob: -13.59908676147461
    6. '0' → logprob: -15.22408676147461
    7. '   ' → logprob: -15.47408676147461
    8. ' ' → logprob: -16.09908676147461
    9. '[
' → logprob: -16.97408676147461
    10. '(' → logprob: -17.84908676147461

Token 633: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.37506675720215
    4. '[' → logprob: -19.75006675720215
    5. '
' → logprob: -20.75006675720215
    6. '  ' → logprob: -21.00006675720215
    7. '۰' → logprob: -21.12506675720215
    8. '2' → logprob: -21.37506675720215
    9. '012' → logprob: -21.37506675720215
    10. 'range' → logprob: -21.87506675720215

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014385659014806151
    2. ' ,' → logprob: -6.626438617706299
    3. '0' → logprob: -9.25143814086914
    4. ',
' → logprob: -11.37643814086914
    5. ' ' → logprob: -12.25143814086914
    6. '   ' → logprob: -15.62643814086914
    7. ' ,
' → logprob: -16.37643814086914
    8. '[' → logprob: -16.87643814086914
    9. ',[' → logprob: -16.87643814086914
    10. ',

' → logprob: -17.50143814086914

Token 635: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7347836494445801
    2. '1' → logprob: -0.7347836494445801
    3. ' ' → logprob: -3.35978364944458
    4. '2' → logprob: -5.10978364944458
    5. '
' → logprob: -14.984783172607422
    6. '```' → logprob: -14.984783172607422
    7. '   ' → logprob: -15.484783172607422
    8. '[' → logprob: -15.609783172607422
    9. '  ' → logprob: -16.234783172607422
    10. '012' → logprob: -16.359783172607422

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.125018119812012
    3. '2' → logprob: -13.500018119812012
    4. ',
' → logprob: -14.125018119812012
    5. '0' → logprob: -15.375018119812012
    6. '       ' → logprob: -15.375018119812012
    7. ' ' → logprob: -16.250017166137695
    8. ',[' → logprob: -16.250017166137695
    9. '[' → logprob: -16.375017166137695
    10. '   ' → logprob: -16.500017166137695

Token 637: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.625019073486328
    4. '```' → logprob: -19.000019073486328
    5. '[' → logprob: -19.125019073486328
    6. '0' → logprob: -19.250019073486328
    7. '  ' → logprob: -19.375019073486328
    8. '۲' → logprob: -20.875019073486328
    9. '
' → logprob: -21.000019073486328
    10. '1' → logprob: -21.375019073486328

Token 638: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.031057460233569145
    2. ']:' → logprob: -3.531057357788086
    3. ',' → logprob: -7.656057357788086
    4. ']:

' → logprob: -7.656057357788086
    5. '           ' → logprob: -9.031057357788086
    6. ']:
' → logprob: -9.406057357788086
    7. '       ' → logprob: -9.906057357788086
    8. ']' → logprob: -10.156057357788086
    9. ' ]' → logprob: -10.406057357788086
    10. ':' → logprob: -11.281057357788086

Token 639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020938136731274426
    2. ' for' → logprob: -8.62520980834961
    3. '       ' → logprob: -11.25020980834961
    4. '	       ' → logprob: -12.50020980834961
    5. 'for' → logprob: -12.75020980834961
    6. '         ' → logprob: -12.87520980834961
    7. '<|end|>' → logprob: -12.87520980834961
    8. '          ' → logprob: -13.12520980834961
    9. ' ' → logprob: -14.12520980834961
    10. '        ' → logprob: -14.62520980834961

Token 640: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6427774429321289
    2. ' for' → logprob: -0.8927774429321289
    3. '           ' → logprob: -3.142777442932129
    4. '       ' → logprob: -3.892777442932129
    5. '               ' → logprob: -7.267777442932129
    6. '	for' → logprob: -8.642777442932129
    7. '   ' → logprob: -9.642777442932129
    8. ' ' → logprob: -9.892777442932129
    9. '	       ' → logprob: -10.017777442932129
    10. '	' → logprob: -10.392777442932129

Token 641: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.47407835721969604
    2. 'R' → logprob: -0.974078357219696
    3. ' ' → logprob: -13.849078178405762
    4. ' ' → logprob: -15.099078178405762
    5. '   ' → logprob: -16.974079132080078
    6. '	R' → logprob: -17.599079132080078
    7. '  ' → logprob: -18.349079132080078
    8. 'A' → logprob: -18.536579132080078
    9. 'r' → logprob: -18.786579132080078
    10. '```' → logprob: -18.911579132080078

Token 642: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0052384985610842705
    2. 'in' → logprob: -5.2552385330200195
    3. '[' → logprob: -13.00523853302002
    4. ' ' → logprob: -13.50523853302002
    5. '   ' → logprob: -15.63023853302002
    6. 'In' → logprob: -15.75523853302002
    7. ' [' → logprob: -16.380237579345703
    8. '0' → logprob: -16.630237579345703
    9. '<|end|>' → logprob: -16.630237579345703
    10. '```' → logprob: -16.880237579345703

Token 643: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38687190413475037
    2. ' [' → logprob: -1.1368719339370728
    3. ' ' → logprob: -14.761872291564941
    4. ' range' → logprob: -14.886872291564941
    5. 'range' → logprob: -15.761872291564941
    6. '[
' → logprob: -17.386871337890625
    7. '   ' → logprob: -18.136871337890625
    8. ' ' → logprob: -18.636871337890625
    9. '0' → logprob: -18.886871337890625
    10. '<|end|>' → logprob: -19.386871337890625

Token 644: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38866716623306274
    2. '0' → logprob: -1.138667106628418
    3. ' [' → logprob: -6.638667106628418
    4. ' ' → logprob: -7.638667106628418
    5. '   ' → logprob: -12.888667106628418
    6. '[
' → logprob: -14.513667106628418
    7. 'range' → logprob: -14.763667106628418
    8. '```' → logprob: -15.513667106628418
    9. '(' → logprob: -15.638667106628418
    10. ' range' → logprob: -15.888667106628418

Token 645: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22454504668712616
    2. ' in' → logprob: -1.7245450019836426
    3. ' [' → logprob: -3.8495450019836426
    4. 'in' → logprob: -6.599545001983643
    5. ' ' → logprob: -9.3495454788208
    6. '0' → logprob: -9.4745454788208
    7. '][' → logprob: -10.8495454788208
    8. ',' → logprob: -11.4745454788208
    9. ']' → logprob: -11.8495454788208
    10. '   ' → logprob: -12.5995454788208

Token 646: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11391132324934006
    2. '[' → logprob: -2.2389113903045654
    3. ' ' → logprob: -7.113911151885986
    4. ' [' → logprob: -8.738911628723145
    5. '2' → logprob: -9.113911628723145
    6. '   ' → logprob: -13.488911628723145
    7. '[
' → logprob: -13.863911628723145
    8. '```' → logprob: -14.863911628723145
    9. '(' → logprob: -14.988911628723145
    10. '1' → logprob: -15.113911628723145

Token 647: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.034006986767053604
    2. ',' → logprob: -3.6590070724487305
    3. ' in' → logprob: -5.1590070724487305
    4. '][' → logprob: -6.7840070724487305
    5. ' [' → logprob: -7.9090070724487305
    6. ']:
' → logprob: -9.15900707244873
    7. ',[' → logprob: -9.28400707244873
    8. 'in' → logprob: -9.90900707244873
    9. '   ' → logprob: -10.15900707244873
    10. ']' → logprob: -10.65900707244873

Token 648: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004636484198272228
    2. '[' → logprob: -5.379636287689209
    3. ' ' → logprob: -11.629636764526367
    4. '0' → logprob: -12.254636764526367
    5. ' [' → logprob: -13.129636764526367
    6. '   ' → logprob: -15.504636764526367
    7. '```' → logprob: -16.129636764526367
    8. '1' → logprob: -16.379636764526367
    9. '(' → logprob: -17.254636764526367
    10. '[
' → logprob: -17.879636764526367

Token 649: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.018326926976442337
    2. ']:' → logprob: -4.018326759338379
    3. ']:
' → logprob: -9.643326759338379
    4. ']:

' → logprob: -10.018326759338379
    5. ']' → logprob: -10.768326759338379
    6. ':' → logprob: -10.893326759338379
    7. '           ' → logprob: -12.143326759338379
    8. ']:


' → logprob: -12.143326759338379
    9. '']:
' → logprob: -12.393326759338379
    10. ':
' → logprob: -12.518326759338379

Token 650: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007362048607319593
    2. '       ' → logprob: -5.632361888885498
    3. '           ' → logprob: -5.757361888885498
    4. '<|end|>' → logprob: -8.257362365722656
    5. ':' → logprob: -8.882362365722656
    6. '<|end|>' → logprob: -10.757362365722656
    7. '
' → logprob: -10.882362365722656
    8. '	       ' → logprob: -11.007362365722656
    9. '                
' → logprob: -11.132362365722656
    10. '```' → logprob: -11.132362365722656

Token 651: ' vals' (ID: 58985)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.02837289683520794
    2. 'val' → logprob: -3.9033730030059814
    3. ' if' → logprob: -5.528372764587402
    4. '                   ' → logprob: -6.528372764587402
    5. ' res' → logprob: -7.278372764587402
    6. ' result' → logprob: -7.403372764587402
    7. ' v' → logprob: -8.278372764587402
    8. 'v' → logprob: -8.403372764587402
    9. 'result' → logprob: -8.778372764587402
    10. 'res' → logprob: -8.903372764587402

Token 652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.552735447883606
    2. ' =' → logprob: -0.927735447883606
    3. '={'' → logprob: -3.5527353286743164
    4. '['' → logprob: -8.052735328674316
    5. ')' → logprob: -8.677735328674316
    6. '{'' → logprob: -11.177735328674316
    7. '={' → logprob: -11.177735328674316
    8. '({'' → logprob: -13.177735328674316
    9. '={
' → logprob: -13.177735328674316
    10. '={}' → logprob: -13.302735328674316

Token 653: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.018169023096561432
    2. ' {'' → logprob: -4.018168926239014
    3. '{' → logprob: -11.518169403076172
    4. '{"' → logprob: -11.643169403076172
    5. '({'' → logprob: -15.518169403076172
    6. '={'' → logprob: -16.518169403076172
    7. '{
' → logprob: -16.518169403076172
    8. '   ' → logprob: -17.268169403076172
    9. ' {' → logprob: -17.518169403076172
    10. '{}' → logprob: -17.518169403076172

Token 654: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.011048054322600365
    2. ''' → logprob: -4.511047840118408
    3. ' P' → logprob: -16.51104736328125
    4. '"P' → logprob: -16.51104736328125
    5. ':P' → logprob: -18.38604736328125
    6. '`' → logprob: -18.51104736328125
    7. '_P' → logprob: -18.88604736328125
    8. '	P' → logprob: -19.13604736328125
    9. '   ' → logprob: -19.38604736328125
    10. ' '' → logprob: -19.38604736328125

Token 655: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0019436265574768186
    2. ''' → logprob: -6.251943588256836
    3. ':' → logprob: -12.001943588256836
    4. ':P' → logprob: -12.001943588256836
    5. ' ':' → logprob: -13.751943588256836
    6. '':[' → logprob: -14.626943588256836
    7. '":' → logprob: -15.001943588256836
    8. '':'' → logprob: -15.376943588256836
    9. '']:' → logprob: -16.001943588256836
    10. '```' → logprob: -16.501943588256836

Token 656: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.339278580620885e-06
    2. ' P' → logprob: -13.000001907348633
    3. '	P' → logprob: -22.875001907348633
    4. ' ' → logprob: -24.000001907348633
    5. '0' → logprob: -24.625001907348633
    6. '=P' → logprob: -24.750001907348633
    7. ',P' → logprob: -24.875001907348633
    8. '   ' → logprob: -24.875001907348633
    9. '<P' → logprob: -25.000001907348633
    10. ':P' → logprob: -25.375001907348633

Token 657: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005639481823891401
    2. ',Q' → logprob: -5.880639553070068
    3. ','' → logprob: -6.380639553070068
    4. ' ,' → logprob: -7.130639553070068
    5. '',' → logprob: -8.13063907623291
    6. ',
' → logprob: -10.88063907623291
    7. ' ,'' → logprob: -11.75563907623291
    8. '','' → logprob: -12.13063907623291
    9. ''' → logprob: -12.25563907623291
    10. '               ' → logprob: -13.38063907623291

Token 658: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -6.392202976712724e-06
    2. ' Q' → logprob: -12.000006675720215
    3. ''' → logprob: -16.0000057220459
    4. '	Q' → logprob: -19.1250057220459
    5. '<Q' → logprob: -19.5000057220459
    6. '                   ' → logprob: -20.8750057220459
    7. ',Q' → logprob: -21.0000057220459
    8. '               ' → logprob: -21.5000057220459
    9. ' ' → logprob: -21.6250057220459
    10. '.Q' → logprob: -21.7500057220459

Token 659: '':' (ID: 2337)
  Prédit: '':''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.8925889730453491
    2. ':' → logprob: -1.0175889730453491
    3. '':' → logprob: -1.8925889730453491
    4. ''' → logprob: -2.7675890922546387
    5. ':'' → logprob: -4.392589092254639
    6. '','' → logprob: -6.892589092254639
    7. ','' → logprob: -7.392589092254639
    8. ':R' → logprob: -7.642589092254639
    9. ',Q' → logprob: -7.767589092254639
    10. '',' → logprob: -8.39258861541748

Token 660: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -4.811348480870947e-05
    2. 'R' → logprob: -10.00004768371582
    3. ' Q' → logprob: -12.87504768371582
    4. ''' → logprob: -17.00004768371582
    5. '<Q' → logprob: -17.12504768371582
    6. '	Q' → logprob: -17.37504768371582
    7. ',Q' → logprob: -17.62504768371582
    8. '_Q' → logprob: -21.62504768371582
    9. '(Q' → logprob: -21.87504768371582
    10. ' R' → logprob: -22.00004768371582

Token 661: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.011163247749209404
    2. ',' → logprob: -4.511163234710693
    3. ',R' → logprob: -9.636163711547852
    4. ' ,'' → logprob: -10.636163711547852
    5. ',
' → logprob: -11.386163711547852
    6. ',"' → logprob: -12.261163711547852
    7. '','' → logprob: -12.511163711547852
    8. ' ,' → logprob: -13.136163711547852
    9. ',Q' → logprob: -13.136163711547852
    10. ''' → logprob: -13.761163711547852

Token 662: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -9.960946772480384e-05
    2. 'R' → logprob: -9.250099182128906
    3. ' '' → logprob: -13.000099182128906
    4. '           ' → logprob: -15.375099182128906
    5. '                   ' → logprob: -15.500099182128906
    6. '               ' → logprob: -15.750099182128906
    7. '       ' → logprob: -15.875099182128906
    8. ' R' → logprob: -16.125099182128906
    9. ''S' → logprob: -16.125099182128906
    10. '   ' → logprob: -17.000099182128906

Token 663: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.008881637826561928
    2. ':R' → logprob: -5.133881568908691
    3. ':' → logprob: -5.883881568908691
    4. ''' → logprob: -9.383881568908691
    5. 'R' → logprob: -9.758881568908691
    6. '':'' → logprob: -11.633881568908691
    7. '":' → logprob: -12.133881568908691
    8. ' :' → logprob: -13.508881568908691
    9. ' R' → logprob: -13.633881568908691
    10. 'Q' → logprob: -13.758881568908691

Token 664: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.2729995988775045e-06
    2. ' R' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.7500057220459
    4. ' ' → logprob: -19.6250057220459
    5. ''' → logprob: -20.0000057220459
    6. '	R' → logprob: -20.0000057220459
    7. '  ' → logprob: -20.6250057220459
    8. 'r' → logprob: -20.8750057220459
    9. '<R' → logprob: -20.8750057220459
    10. '                   ' → logprob: -21.0000057220459

Token 665: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.023697635158896446
    2. '}
' → logprob: -3.7736976146698
    3. '               ' → logprob: -7.898697853088379
    4. ',' → logprob: -9.898697853088379
    5. '           ' → logprob: -11.523697853088379
    6. ' }' → logprob: -12.273697853088379
    7. '}
' → logprob: -12.523697853088379
    8. '                ' → logprob: -13.023697853088379
    9. '              ' → logprob: -13.023697853088379
    10. ' }
' → logprob: -13.273697853088379

Token 666: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008263969793915749
    2. ' result' → logprob: -5.758264064788818
    3. ' token' → logprob: -6.508264064788818
    4. 'result' → logprob: -6.633264064788818
    5. ' val' → logprob: -7.258264064788818
    6. 'token' → logprob: -7.258264064788818
    7. '                ' → logprob: -8.75826358795166
    8. ' if' → logprob: -9.00826358795166
    9. '                   ' → logprob: -9.25826358795166
    10. ' value' → logprob: -9.38326358795166

Token 667: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.32477083802223206
    2. 'result' → logprob: -2.074770927429199
    3. 'if' (adapté à ' if') → logprob: -2.699770927429199
    4. 'val' → logprob: -3.449770927429199
    5. ' if' → logprob: -3.949770927429199
    6. ' res' → logprob: -3.949770927429199
    7. 'v' → logprob: -4.574770927429199
    8. ' result' → logprob: -6.324770927429199
    9. ' val' → logprob: -6.324770927429199
    10. 'ret' → logprob: -9.3247709274292

Token 668: ' eval' (ID: 29383)
  Prédit: ' eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eval' → logprob: -0.575968861579895
    2. 'eval' → logprob: -0.825968861579895
    3. '(eval' → logprob: -10.450968742370605
    4. '.eval' → logprob: -15.200968742370605
    5. '_eval' → logprob: -15.950968742370605
    6. ' eva' → logprob: -17.200969696044922
    7. 'e' → logprob: -18.200969696044922
    8. '   ' → logprob: -18.325969696044922
    9. 'Eval' → logprob: -18.325969696044922
    10. ' ' → logprob: -18.325969696044922

Token 669: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -2.2842308680992573e-05
    2. '_' → logprob: -10.875022888183594
    3. '_form' → logprob: -12.625022888183594
    4. 'formula' → logprob: -15.125022888183594
    5. ' _' → logprob: -16.250022888183594
    6. 'Formula' → logprob: -17.500022888183594
    7. '```' → logprob: -18.125022888183594
    8. ' formula' → logprob: -18.750022888183594
    9. '_code' → logprob: -18.875022888183594
    10. '_function' → logprob: -18.875022888183594

Token 670: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -8.196732960641384e-05
    2. '(' → logprob: -9.500082015991211
    3. ' (' → logprob: -12.250082015991211
    4. '(
' → logprob: -14.000082015991211
    5. '(count' → logprob: -14.875082015991211
    6. '#line' → logprob: -15.375082015991211
    7. '(form' → logprob: -15.375082015991211
    8. '=line' → logprob: -15.375082015991211
    9. '[line' → logprob: -15.625082015991211
    10. '(Line' → logprob: -15.875082015991211

Token 671: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.16443699598312378
    2. '(form' → logprob: -2.2894370555877686
    3. '(' → logprob: -3.7894370555877686
    4. ',' → logprob: -3.9144370555877686
    5. ')' → logprob: -5.2894368171691895
    6. ',line' → logprob: -6.1644368171691895
    7. '(
' → logprob: -8.789437294006348
    8. ')==' → logprob: -9.164437294006348
    9. ' (' → logprob: -9.414437294006348
    10. ')(' → logprob: -9.914437294006348

Token 672: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.001932205050252378
    2. ' vals' → logprob: -6.251932144165039
    3. '(vals' → logprob: -12.626932144165039
    4. '
' → logprob: -16.87693214416504
    5. 'val' → logprob: -16.87693214416504
    6. '               ' → logprob: -17.25193214416504
    7. '                   ' → logprob: -17.37693214416504
    8. '
' → logprob: -17.37693214416504
    9. '_vals' → logprob: -17.37693214416504
    10. 'Vals' → logprob: -17.87693214416504

Token 673: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04211564362049103
    2. ')==' → logprob: -3.4171156883239746
    3. '==' → logprob: -4.792115688323975
    4. ' ==' → logprob: -10.042115211486816
    5. ']==' → logprob: -10.042115211486816
    6. '[' → logprob: -11.167115211486816
    7. ' )' → logprob: -11.667115211486816
    8. '==
' → logprob: -11.917115211486816
    9. ']' → logprob: -12.042115211486816
    10. '```' → logprob: -12.542115211486816

Token 674: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07014317065477371
    2. ' ==' → logprob: -2.695143222808838
    3. '=' → logprob: -8.94514274597168
    4. '==
' → logprob: -10.19514274597168
    5. '[' → logprob: -10.94514274597168
    6. ')==' → logprob: -12.32014274597168
    7. ']==' → logprob: -12.44514274597168
    8. '```' → logprob: -12.82014274597168
    9. ' ' → logprob: -12.94514274597168
    10. '()==' → logprob: -13.32014274597168

Token 675: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018101456225849688
    2. ' ' → logprob: -8.625181198120117
    3. '   ' → logprob: -13.625181198120117
    4. '0' → logprob: -16.500181198120117
    5. '1' → logprob: -17.000181198120117
    6. '  ' → logprob: -17.500181198120117
    7. '```' → logprob: -17.625181198120117
    8. '۲' → logprob: -18.500181198120117
    9. '    ' → logprob: -19.000181198120117
    10. '
' → logprob: -19.625181198120117

Token 676: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.000025749206543
    4. '  ' → logprob: -16.625024795532227
    5. '۲' → logprob: -16.750024795532227
    6. '0' → logprob: -17.625024795532227
    7. '```' → logprob: -17.625024795532227
    8. '1' → logprob: -18.125024795532227
    9. '２' → logprob: -18.250024795532227
    10. '২' → logprob: -18.562524795532227

Token 677: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3352486491203308
    2. ':' → logprob: -1.3352487087249756
    3. '                   ' → logprob: -3.8352487087249756
    4. '               ' → logprob: -9.835248947143555
    5. '                       ' → logprob: -10.210248947143555
    6. '                  ' → logprob: -11.085248947143555
    7. '):
' → logprob: -11.335248947143555
    8. ':
' → logprob: -11.585248947143555
    9. '():
' → logprob: -12.210248947143555
    10. ':

' → logprob: -12.210248947143555

Token 678: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003022153687197715
    2. '                       ' → logprob: -9.1253023147583
    3. 'count' → logprob: -9.6253023147583
    4. '               ' → logprob: -10.1253023147583
    5. '                  ' → logprob: -10.3753023147583
    6. '                    
' → logprob: -10.7503023147583
    7. ' count' → logprob: -12.2503023147583
    8. '                 ' → logprob: -12.5003023147583
    9. '                    ' → logprob: -12.7503023147583
    10. '                               ' → logprob: -12.8753023147583

Token 679: ' count' (ID: 3605)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013132700696587563
    2. 'count' (adapté à ' count') → logprob: -4.513132572174072
    3. '                       ' → logprob: -6.763132572174072
    4. ' count' → logprob: -7.388132572174072
    5. '                               ' → logprob: -8.76313304901123
    6. '               ' → logprob: -9.26313304901123
    7. '                  ' → logprob: -11.51313304901123
    8. '                           ' → logprob: -11.76313304901123
    9. '   ' → logprob: -11.76313304901123
    10. '       ' → logprob: -12.13813304901123

Token 680: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2519451081752777
    2. ' +=' → logprob: -1.5019451379776
    3. '+' → logprob: -11.626945495605469
    4. ']+=' → logprob: -12.376945495605469
    5. '=' → logprob: -13.001945495605469
    6. '+="' → logprob: -15.626945495605469
    7. '+='' → logprob: -15.626945495605469
    8. '   ' → logprob: -16.50194549560547
    9. ' ' → logprob: -16.62694549560547
    10. '    ' → logprob: -17.50194549560547

Token 681: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -19.625
    4. '```' → logprob: -23.0
    5. '  ' → logprob: -23.125
    6. ' ' → logprob: -23.25
    7. '
' → logprob: -23.375
    8. '<|end|>' → logprob: -25.0
    9. '           ' → logprob: -25.125
    10. '۱' → logprob: -25.125

Token 682: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -23.75
    4. '2' → logprob: -24.125
    5. '   ' → logprob: -24.375
    6. '۱' → logprob: -24.625
    7. '<|end|>' → logprob: -24.75
    8. '
' → logprob: -25.375
    9. '１' → logprob: -25.5
    10. '१' → logprob: -25.875

Token 683: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.244413766078651e-05
    2. '
' → logprob: -9.750082015991211
    3. 'count' → logprob: -11.500082015991211
    4. ' count' → logprob: -12.125082015991211
    5. '	count' → logprob: -12.625082015991211
    6. '    
' → logprob: -13.000082015991211
    7. '       ' → logprob: -14.375082015991211
    8. '<|end|>' → logprob: -14.750082015991211
    9. '                    
' → logprob: -15.250082015991211
    10. ' ' → logprob: -15.250082015991211

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020414141472429037
    2. ' count' → logprob: -6.877041339874268
    3. 'count' → logprob: -7.377041339874268
    4. '
' → logprob: -8.377041816711426
    5. '```' → logprob: -9.252041816711426
    6. '	count' → logprob: -10.627041816711426
    7. '       ' → logprob: -11.627041816711426
    8. '[count' → logprob: -11.627041816711426
    9. '<|end|>' → logprob: -13.002041816711426
    10. '           ' → logprob: -13.127041816711426

Token 685: ' print' (ID: 2123)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.833878508885391e-05
    2. ' count' → logprob: -10.250038146972656
    3. '   ' → logprob: -13.125038146972656
    4. '
' → logprob: -14.000038146972656
    5. '	count' → logprob: -17.000038146972656
    6. '.count' → logprob: -17.125038146972656
    7. '```' → logprob: -18.250038146972656
    8. '_count' → logprob: -18.500038146972656
    9. '    
' → logprob: -19.000038146972656
    10. 'print' (adapté à ' print') → logprob: -19.125038146972656

Token 686: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -9.65101717156358e-05
    2. '(' → logprob: -9.250096321105957
    3. '(cnt' → logprob: -16.000097274780273
    4. 'count' → logprob: -16.125097274780273
    5. '(c' → logprob: -17.375097274780273
    6. '(counter' → logprob: -17.875097274780273
    7. '(len' → logprob: -18.000097274780273
    8. '((' → logprob: -18.500097274780273
    9. '(
' → logprob: -18.500097274780273
    10. ' (' → logprob: -18.750097274780273

Token 687: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.250001907348633
    3. ')
' → logprob: -15.375001907348633
    4. '   ' → logprob: -16.875001907348633
    5. ')`' → logprob: -17.500001907348633
    6. '')' → logprob: -17.625001907348633
    7. '())' → logprob: -18.250001907348633
    8. '))' → logprob: -18.500001907348633
    9. '()' → logprob: -18.750001907348633
    10. ')#' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 685
Tokens correctement prédits (1ère position, stricte): 321
Tokens correctement prédits (1ère position, avec adaptation): 344
Tokens correctement prédits (top 10): 579
Précision stricte (1ère position): 46.86%
Précision adaptée (1ère position): 50.22%
Précision (top 10): 84.53%
================================================================================
