================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def count_pairs(L):
    res = 1
    n = L
    i = 2
    while i * i <= n:
        cnt = 0
        while n % i == 0:
            n //= i
            cnt += 1
        if cnt > 0:
            res *= (2 * cnt + 1)
        i += 1 if i==2 else 2
    if n > 1:
        res *= 3
    return (res + 1) // 2

for line in sys.stdin:
    L = int(line.strip())
    if L == 0:
        break
    print(count_pairs(L))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975533962249756
    2. '\n' → logprob: -0.8225533962249756
    3. '<|end|>' → logprob: -3.5725533962249756
    4. '\' → logprob: -4.322553634643555
    5. 'newline' → logprob: -5.072553634643555
    6. 'import' → logprob: -5.322553634643555
    7. '<|end|>' → logprob: -5.947553634643555
    8. '```' → logprob: -6.572553634643555
    9. '' → logprob: -6.822553634643555
    10. '
' → logprob: -6.947553634643555

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001617035741219297
    2. 'os' → logprob: -8.750162124633789
    3. ' math' → logprob: -13.625162124633789
    4. ' re' → logprob: -14.000162124633789
    5. '"os' → logprob: -14.500162124633789
    6. ' json' → logprob: -15.000162124633789
    7. '_os' → logprob: -16.62516212463379
    8. ' ' → logprob: -16.75016212463379
    9. ' io' → logprob: -16.87516212463379
    10. '	os' → logprob: -17.12516212463379

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27518370747566223
    2. '\n' → logprob: -2.77518367767334
    3. 'import' → logprob: -3.02518367767334
    4. '<|end|>' → logprob: -3.27518367767334
    5. '\' → logprob: -3.40018367767334
    6. '
' → logprob: -3.65018367767334
    7. '```' → logprob: -4.40018367767334
    8. '

' → logprob: -5.27518367767334
    9. '<|end|>' → logprob: -5.27518367767334
    10. ',' → logprob: -5.90018367767334

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8192157745361328
    2. '\' → logprob: -1.8192157745361328
    3. '```' → logprob: -1.8192157745361328
    4. 'import' → logprob: -2.319215774536133
    5. '\n' → logprob: -2.319215774536133
    6. '
' → logprob: -4.319215774536133
    7. 'def' → logprob: -4.694215774536133
    8. ',' → logprob: -5.069215774536133
    9. '

' → logprob: -6.569215774536133
    10. '`' → logprob: -6.694215774536133

Token 7: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003533559152856469
    2. ' calculate' → logprob: -6.003533363342285
    3. ' space' → logprob: -7.753533363342285
    4. '_' → logprob: -8.253533363342285
    5. ' factorial' → logprob: -9.128533363342285
    6. ' compute' → logprob: -9.753533363342285
    7. ' add' → logprob: -10.878533363342285
    8. ' math' → logprob: -10.878533363342285
    9. ' ```' → logprob: -11.128533363342285
    10. ' my' → logprob: -11.128533363342285

Token 8: '_pairs' (ID: 90005)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009690099395811558
    2. '(' → logprob: -5.634690284729004
    3. '_words' → logprob: -6.634690284729004
    4. '_s' → logprob: -6.884690284729004
    5. '_tokens' → logprob: -7.634690284729004
    6. '_occ' → logprob: -7.759690284729004
    7. '_items' → logprob: -7.759690284729004
    8. '_spaces' → logprob: -8.009690284729004
    9. '_space' → logprob: -8.384690284729004
    10. 's' → logprob: -8.884690284729004

Token 9: '(L' (ID: 11075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006271334132179618
    2. '_' → logprob: -7.750627040863037
    3. '_pairs' → logprob: -9.625627517700195
    4. '(user' → logprob: -10.875627517700195
    5. ')' → logprob: -11.375627517700195
    6. '```' → logprob: -11.375627517700195
    7. ' (' → logprob: -11.750627517700195
    8. '(
' → logprob: -12.000627517700195
    9. '(p' → logprob: -12.125627517700195
    10. 's' → logprob: -12.375627517700195

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18476805090904236
    2. ',' → logprob: -2.059767961502075
    3. ')' → logprob: -3.309767961502075
    4. '[' → logprob: -5.684768199920654
    5. ':' → logprob: -7.559768199920654
    6. ' ):' → logprob: -7.934768199920654
    7. ' ,' → logprob: -9.434767723083496
    8. 's' → logprob: -9.809767723083496
    9. '[]):' → logprob: -9.934767723083496
    10. '_pairs' → logprob: -10.684767723083496

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029735224321484566
    2. '(' → logprob: -4.279735088348389
    3. '   ' → logprob: -5.154735088348389
    4. ' :' → logprob: -5.154735088348389
    5. ':
' → logprob: -6.779735088348389
    6. '(:' → logprob: -7.654735088348389
    7. '():' → logprob: -7.904735088348389
    8. ' ' → logprob: -8.029735565185547
    9. '):' → logprob: -8.154735565185547
    10. '':' → logprob: -8.154735565185547

Token 12: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2510952651500702
    2. ' ' → logprob: -2.1260952949523926
    3. 'n' → logprob: -4.001095294952393
    4. ':' → logprob: -4.126095294952393
    5. ' 
' → logprob: -4.251095294952393
    6. '    
' → logprob: -4.751095294952393
    7. '\' → logprob: -4.751095294952393
    8. '```' → logprob: -5.251095294952393
    9. '  
' → logprob: -5.501095294952393
    10. '    ' → logprob: -5.501095294952393

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07983732223510742
    2. '=' → logprob: -2.5798373222351074
    3. ' ' → logprob: -7.829837322235107
    4. ' +=' → logprob: -7.954837322235107
    5. '  ' → logprob: -9.829837799072266
    6. '   ' → logprob: -9.954837799072266
    7. '[' → logprob: -11.079837799072266
    8. ')' → logprob: -11.204837799072266
    9. ' space' → logprob: -11.704837799072266
    10. ',' → logprob: -11.704837799072266

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05510354042053223
    2. '0' → logprob: -2.9301035404205322
    3. ' []' → logprob: -9.305103302001953
    4. ' {}' → logprob: -9.305103302001953
    5. ' defaultdict' → logprob: -10.805103302001953
    6. ' len' → logprob: -11.930103302001953
    7. '{}' → logprob: -12.555103302001953
    8. '[]' → logprob: -12.680103302001953
    9. ' ' → logprob: -13.305103302001953
    10. '  ' → logprob: -13.680103302001953

Token 15: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003258280921727419
    2. '{}' → logprob: -6.128258228302002
    3. ' ' → logprob: -7.378258228302002
    4. '[]' → logprob: -8.00325870513916
    5. 'default' → logprob: -9.62825870513916
    6. 'len' → logprob: -11.25325870513916
    7. '[' → logprob: -11.50325870513916
    8. ' {}' → logprob: -12.00325870513916
    9. ' []' → logprob: -12.50325870513916
    10. ' defaultdict' → logprob: -12.50325870513916

Token 16: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035015616565942764
    2. ' ' → logprob: -3.41001558303833
    3. '2' → logprob: -7.53501558303833
    4. '6' → logprob: -7.91001558303833
    5. ' 
' → logprob: -8.910016059875488
    6. ',' → logprob: -9.785016059875488
    7. '7' → logprob: -9.785016059875488
    8. '  
' → logprob: -10.535016059875488
    9. ' for' → logprob: -11.035016059875488
    10. '1' → logprob: -11.035016059875488

Token 17: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0393618568778038
    2. ' ' → logprob: -3.4143619537353516
    3. '2' → logprob: -6.039361953735352
    4. ' 
' → logprob: -6.539361953735352
    5. '6' → logprob: -7.164361953735352
    6. '7' → logprob: -8.664361953735352
    7. ',' → logprob: -8.789361953735352
    8. '
' → logprob: -9.414361953735352
    9. '  
' → logprob: -9.539361953735352
    10. '1' → logprob: -9.539361953735352

Token 18: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4052906036376953
    2. ' for' → logprob: -1.7802906036376953
    3. '0' → logprob: -2.0302906036376953
    4. ' 
' → logprob: -2.0302906036376953
    5. ' *' → logprob: -2.6552906036376953
    6. '     
' → logprob: -3.4052906036376953
    7. '
' → logprob: -3.5302906036376953
    8. '*' → logprob: -3.5302906036376953
    9. 'for' → logprob: -3.5302906036376953
    10. '    ' → logprob: -3.7802906036376953

Token 19: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7306320667266846
    2. ' =' → logprob: -0.7306320667266846
    3. '=' → logprob: -3.3556320667266846
    4. '_' → logprob: -7.3556318283081055
    5. '=len' → logprob: -7.7306318283081055
    6. 'um' → logprob: -8.480631828308105
    7. '  ' → logprob: -8.855631828308105
    8. '   ' → logprob: -9.480631828308105
    9. 'u' → logprob: -9.480631828308105
    10. '    ' → logprob: -9.855631828308105

Token 20: ' L' (ID: 451)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.007615152280777693
    2. 'len' → logprob: -4.882615089416504
    3. ' ' → logprob: -12.757615089416504
    4. '0' → logprob: -13.007615089416504
    5. ' L' → logprob: -13.632615089416504
    6. '(len' → logprob: -14.132615089416504
    7. ' ' → logprob: -14.507615089416504
    8. '=len' → logprob: -15.007615089416504
    9. ' int' → logprob: -15.132615089416504
    10. '[len' → logprob: -15.507615089416504

Token 21: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3233129978179932
    2. 'ength' → logprob: -1.4483129978179932
    3. '.' → logprob: -1.6983129978179932
    4. ' ' → logprob: -2.073312997817993
    5. '   ' → logprob: -2.448312997817993
    6. '.__' → logprob: -4.073312759399414
    7. '.length' → logprob: -4.323312759399414
    8. '**' → logprob: -4.573312759399414
    9. '.size' → logprob: -4.948312759399414
    10. ' -' → logprob: -4.948312759399414

Token 22: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3274651765823364
    2. '**' → logprob: -1.9524651765823364
    3. '   ' → logprob: -2.077465057373047
    4. '
' → logprob: -2.202465057373047
    5. '+' → logprob: -2.702465057373047
    6. '-' → logprob: -2.702465057373047
    7. ' **' → logprob: -3.077465057373047
    8. ' //' → logprob: -3.577465057373047
    9. ' *' → logprob: -3.827465057373047
    10. '    ' → logprob: -3.827465057373047

Token 23: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6171497106552124
    2. '
' → logprob: -1.9921497106552124
    3. ' //' → logprob: -2.617149829864502
    4. '-' → logprob: -2.867149829864502
    5. '   ' → logprob: -3.617149829864502
    6. ' for' → logprob: -3.992149829864502
    7. ' -' → logprob: -3.992149829864502
    8. ' 
' → logprob: -4.117149829864502
    9. '**' → logprob: -4.492149829864502
    10. '+' → logprob: -4.742149829864502

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5253640413284302
    2. '=' → logprob: -0.9003640413284302
    3. ' ' → logprob: -6.275363922119141
    4. 'n' → logprob: -8.77536392211914
    5. ' +=' → logprob: -9.52536392211914
    6. 'nt' → logprob: -10.02536392211914
    7. 'f' → logprob: -10.52536392211914
    8. 's' → logprob: -11.40036392211914
    9. ' *=' → logprob: -12.02536392211914
    10. '+' → logprob: -12.27536392211914

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08703157305717468
    2. '2' → logprob: -2.587031602859497
    3. '1' → logprob: -4.837031364440918
    4. '0' → logprob: -9.712031364440918
    5. ' n' → logprob: -9.962031364440918
    6. 'n' → logprob: -9.962031364440918
    7. ' ' → logprob: -11.962031364440918
    8. '```' → logprob: -12.462031364440918
    9. ' i' → logprob: -13.524531364440918
    10. ' math' → logprob: -13.837031364440918

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2707251310348511
    2. ' ' → logprob: -1.645725131034851
    3. '1' → logprob: -3.1457252502441406
    4. '0' → logprob: -6.895725250244141
    5. 'n' → logprob: -8.89572525024414
    6. ' n' → logprob: -9.39572525024414
    7. '3' → logprob: -11.77072525024414
    8. ' math' → logprob: -12.39572525024414
    9. '```' → logprob: -12.77072525024414
    10. '  ' → logprob: -12.83322525024414

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46344923973083496
    2. '<|end|>' → logprob: -1.713449239730835
    3. ' ' → logprob: -2.713449239730835
    4. ':' → logprob: -2.963449239730835
    5. ' 
' → logprob: -3.463449239730835
    6. '<|end|>' → logprob: -4.463449478149414
    7. ' while' → logprob: -4.713449478149414
    8. 'while' → logprob: -5.463449478149414
    9. '  
' → logprob: -5.588449478149414
    10. ':
' → logprob: -5.588449478149414

Token 28: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8953472971916199
    2. ':' → logprob: -1.3953473567962646
    3. '
' → logprob: -1.8953473567962646
    4. '<|end|>' → logprob: -2.6453473567962646
    5. ' while' → logprob: -3.3953473567962646
    6. ' 
' → logprob: -3.7703473567962646
    7. '*' → logprob: -4.6453471183776855
    8. 'while' → logprob: -4.6453471183776855
    9. '**' → logprob: -5.1453471183776855
    10. ',' → logprob: -5.2703471183776855

Token 29: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6218010187149048
    2. ' 
' → logprob: -1.6218010187149048
    3. ' while' → logprob: -2.3718008995056152
    4. 'while' (adapté à ' while') → logprob: -2.4968008995056152
    5. ' ' → logprob: -3.2468008995056152
    6. ':' → logprob: -4.746800899505615
    7. '  
' → logprob: -4.871800899505615
    8. '**' → logprob: -4.871800899505615
    9. '   
' → logprob: -5.121800899505615
    10. '*' → logprob: -5.246800899505615

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026661934331059456
    2. 'i' → logprob: -3.6516618728637695
    3. ' n' → logprob: -8.40166187286377
    4. ' ' → logprob: -9.77666187286377
    5. 'n' → logprob: -10.15166187286377
    6. ' ' → logprob: -10.77666187286377
    7. ' (' → logprob: -11.65166187286377
    8. '(i' → logprob: -12.52666187286377
    9. '	i' → logprob: -13.27666187286377
    10. '  ' → logprob: -13.77666187286377

Token 31: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7720581293106079
    2. '<=' → logprob: -1.147058129310608
    3. ' *' → logprob: -2.3970580101013184
    4. '*i' → logprob: -2.3970580101013184
    5. '*' → logprob: -3.2720580101013184
    6. '**' → logprob: -8.022058486938477
    7. ' ' → logprob: -9.772058486938477
    8. '<' → logprob: -10.772058486938477
    9. '*n' → logprob: -11.397058486938477
    10. 'i' → logprob: -11.647058486938477

Token 32: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0025604343973100185
    2. ' i' → logprob: -6.002560615539551
    3. '*i' → logprob: -10.62756061553955
    4. 'n' → logprob: -10.87756061553955
    5. '2' → logprob: -11.00256061553955
    6. '<=' → logprob: -11.50256061553955
    7. ' ' → logprob: -11.75256061553955
    8. ' <=' → logprob: -13.37756061553955
    9. '*' → logprob: -13.62756061553955
    10. '	i' → logprob: -14.00256061553955

Token 33: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14272816479206085
    2. '<=' → logprob: -2.017728090286255
    3. ' ' → logprob: -10.892727851867676
    4. ' <<=' → logprob: -11.767727851867676
    5. ' <' → logprob: -11.892727851867676
    6. '<' → logprob: -11.892727851867676
    7. '<|end|>' → logprob: -12.517727851867676
    8. ' ≤' → logprob: -13.517727851867676
    9. ')<=' → logprob: -13.767727851867676
    10. '=' → logprob: -13.892727851867676

Token 34: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009758212603628635
    2. ' n' → logprob: -4.634757995605469
    3. '   ' → logprob: -14.009757995605469
    4. '	n' → logprob: -14.259757995605469
    5. 'L' → logprob: -14.509757995605469
    6. ' ' → logprob: -16.00975799560547
    7. '```' → logprob: -16.38475799560547
    8. '    ' → logprob: -16.63475799560547
    9. ' L' → logprob: -17.00975799560547
    10. ' ' → logprob: -17.50975799560547

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044363055378198624
    2. ' :' → logprob: -3.169363021850586
    3. ' and' → logprob: -6.669363021850586
    4. 'and' → logprob: -10.294363021850586
    5. ':
' → logprob: -10.419363021850586
    6. ':**' → logprob: -11.419363021850586
    7. '):' → logprob: -11.919363021850586
    8. ' :
' → logprob: -12.419363021850586
    9. ':i' → logprob: -13.169363021850586
    10. ' ' → logprob: -13.794363021850586

Token 36: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13076040148735046
    2. ' :' → logprob: -2.255760431289673
    3. ':
' → logprob: -4.630760192871094
    4. ' :
' → logprob: -5.630760192871094
    5. ' ' → logprob: -6.130760192871094
    6. '   ' → logprob: -6.630760192871094
    7. '    ' → logprob: -8.630760192871094
    8. '       ' → logprob: -8.880760192871094
    9. ':\' → logprob: -9.130760192871094
    10. ' and' → logprob: -9.505760192871094

Token 37: ' cnt' (ID: 27340)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.050962068140506744
    2. ' if' → logprob: -4.050961971282959
    3. 'if' → logprob: -4.300961971282959
    4. ' while' → logprob: -5.175961971282959
    5. '    ' → logprob: -5.300961971282959
    6. 'while' → logprob: -6.175961971282959
    7. '0' → logprob: -6.175961971282959
    8. ' :' → logprob: -6.425961971282959
    9. ':' → logprob: -7.550961971282959
    10. '```' → logprob: -8.050962448120117

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10387182980775833
    2. '=' → logprob: -2.3538718223571777
    3. ' ' → logprob: -5.728871822357178
    4. ' +=' → logprob: -7.978871822357178
    5. '  ' → logprob: -11.228872299194336
    6. '<|end|>' → logprob: -11.228872299194336
    7. '    ' → logprob: -11.728872299194336
    8. '   ' → logprob: -11.853872299194336
    9. '<|end|>' → logprob: -12.728872299194336
    10. '+=' → logprob: -12.728872299194336

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20142103731632233
    2. ' ' → logprob: -1.7014210224151611
    3. '1' → logprob: -12.576420783996582
    4. '   ' → logprob: -14.076420783996582
    5. 'n' → logprob: -14.451420783996582
    6. '```' → logprob: -14.701420783996582
    7. ' ' → logprob: -14.763920783996582
    8. '  ' → logprob: -15.201420783996582
    9. '<|end|>' → logprob: -15.576420783996582
    10. '     ' → logprob: -15.701420783996582

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02976241149008274
    2. ' ' → logprob: -3.5297625064849854
    3. '1' → logprob: -11.654762268066406
    4. ' ' → logprob: -14.592262268066406
    5. '```' → logprob: -15.029762268066406
    6. 'n' → logprob: -15.092262268066406
    7. '  ' → logprob: -15.279762268066406
    8. '   ' → logprob: -15.342262268066406
    9. '2' → logprob: -15.342262268066406
    10. '-' → logprob: -16.217262268066406

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5265093445777893
    2. 'while' (adapté à ' while') → logprob: -1.1515092849731445
    3. '<|end|>' → logprob: -2.9015092849731445
    4. ' ' → logprob: -4.1515092849731445
    5. 'if' → logprob: -4.4015092849731445
    6. ' if' → logprob: -5.2765092849731445
    7. '<|end|>' → logprob: -6.1515092849731445
    8. '       ' → logprob: -7.2765092849731445
    9. '    ' → logprob: -7.2765092849731445
    10. '	while' → logprob: -7.7765092849731445

Token 44: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4287169277667999
    2. 'n' → logprob: -1.0537168979644775
    3. '(n' → logprob: -11.428716659545898
    4. ' ' → logprob: -13.428716659545898
    5. '	n' → logprob: -13.428716659545898
    6. ' (' → logprob: -13.803716659545898
    7. '    ' → logprob: -15.428716659545898
    8. '   ' → logprob: -15.553716659545898
    9. '```' → logprob: -15.553716659545898
    10. ')n' → logprob: -15.928716659545898

Token 45: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11288726329803467
    2. '%' → logprob: -2.237887382507324
    3. ' ' → logprob: -10.237887382507324
    4. '%i' → logprob: -10.612887382507324
    5. ' ' → logprob: -12.987887382507324
    6. '%s' → logprob: -14.737887382507324
    7. '%d' → logprob: -14.737887382507324
    8. '%x' → logprob: -15.612887382507324
    9. '<|end|>' → logprob: -15.612887382507324
    10. ' `%' → logprob: -15.612887382507324

Token 46: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.033656422048807144
    2. ' i' → logprob: -3.408656358718872
    3. ' ' → logprob: -11.908656120300293
    4. '<|end|>' → logprob: -13.533656120300293
    5. '	i' → logprob: -13.908656120300293
    6. '   ' → logprob: -14.158656120300293
    7. '<|end|>' → logprob: -14.908656120300293
    8. '  ' → logprob: -15.408656120300293
    9. '2' → logprob: -15.658656120300293
    10. '*i' → logprob: -16.53365707397461

Token 47: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38707399368286133
    2. ' ==' → logprob: -1.1370739936828613
    3. '=' → logprob: -8.887073516845703
    4. ' ' → logprob: -10.512073516845703
    5. '===' → logprob: -10.762073516845703
    6. ')==' → logprob: -11.762073516845703
    7. ']==' → logprob: -13.012073516845703
    8. '**' → logprob: -13.637073516845703
    9. '0' → logprob: -13.762073516845703
    10. '```' → logprob: -13.762073516845703

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. '  ' → logprob: -18.27975082397461
    4. ' ' → logprob: -18.90475082397461
    5. '   ' → logprob: -19.27975082397461
    6. '۰' → logprob: -20.52975082397461
    7. '```' → logprob: -21.02975082397461
    8. '00' → logprob: -21.65475082397461
    9. '٠' → logprob: -21.90475082397461
    10. '<|end|>' → logprob: -22.02975082397461

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -20.000295639038086
    4. '  ' → logprob: -20.125295639038086
    5. '۰' → logprob: -20.125295639038086
    6. '٠' → logprob: -21.625295639038086
    7. '```' → logprob: -22.125295639038086
    8. '    ' → logprob: -22.312795639038086
    9. '０' → logprob: -22.437795639038086
    10. '     ' → logprob: -22.687795639038086

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013570250011980534
    2. ':
' → logprob: -6.626357078552246
    3. '):' → logprob: -11.126357078552246
    4. '       ' → logprob: -12.501357078552246
    5. ',' → logprob: -13.251357078552246
    6. ' :' → logprob: -13.251357078552246
    7. '<|end|>' → logprob: -13.251357078552246
    8. ' and' → logprob: -13.501357078552246
    9. '):
' → logprob: -13.751357078552246
    10. '           ' → logprob: -13.751357078552246

Token 51: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024668595287948847
    2. ' cnt' → logprob: -7.002466678619385
    3. 'cnt' → logprob: -8.002467155456543
    4. ' ' → logprob: -8.002467155456543
    5. '```' → logprob: -8.377467155456543
    6. '1' → logprob: -8.502467155456543
    7. '            ' → logprob: -9.627467155456543
    8. '       ' → logprob: -9.627467155456543
    9. '          ' → logprob: -9.627467155456543
    10. '0' → logprob: -9.877467155456543

Token 52: ' n' (ID: 297)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.3944448232650757
    2. 'cnt' → logprob: -1.1444448232650757
    3. 'n' (adapté à ' n') → logprob: -5.644444942474365
    4. '            ' → logprob: -6.394444942474365
    5. ' n' → logprob: -6.894444942474365
    6. ' ' → logprob: -8.144444465637207
    7. '           ' → logprob: -8.144444465637207
    8. '               ' → logprob: -8.394444465637207
    9. ' ' → logprob: -8.769444465637207
    10. '                ' → logprob: -9.894444465637207

Token 53: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.30045485496520996
    2. ' //' → logprob: -1.55045485496521
    3. '=' → logprob: -4.050455093383789
    4. ' /=' → logprob: -4.300455093383789
    5. '//' → logprob: -4.425455093383789
    6. '/=' → logprob: -6.050455093383789
    7. ' ' → logprob: -7.050455093383789
    8. '%' → logprob: -7.925455093383789
    9. '/' → logprob: -8.175455093383789
    10. ' =' → logprob: -8.550455093383789

Token 54: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.935296834039036e-06
    2. '=i' → logprob: -12.87500286102295
    3. '=}' → logprob: -15.50000286102295
    4. 'i' → logprob: -15.75000286102295
    5. '=

' → logprob: -17.500003814697266
    6. ' =' → logprob: -18.375003814697266
    7. '=_' → logprob: -18.875003814697266
    8. '='' → logprob: -19.625003814697266
    9. '=
' → logprob: -20.000003814697266
    10. '=*/' → logprob: -20.000003814697266

Token 55: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022422909736633
    2. ' i' → logprob: -1.910224199295044
    3. '	i' → logprob: -16.28522491455078
    4. ' ' → logprob: -17.53522491455078
    5. '2' → logprob: -17.66022491455078
    6. ' ' → logprob: -20.41022491455078
    7. '```' → logprob: -20.53522491455078
    8. '=i' → logprob: -20.66022491455078
    9. ')i' → logprob: -21.03522491455078
    10. '*i' → logprob: -21.03522491455078

Token 56: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1942971646785736
    2. '1' → logprob: -2.5692970752716064
    3. 'cnt' → logprob: -2.8192970752716064
    4. '
' → logprob: -4.1942973136901855
    5. ',' → logprob: -5.1942973136901855
    6. '               ' → logprob: -5.3192973136901855
    7. '```' → logprob: -5.4442973136901855
    8. ' cnt' → logprob: -5.5692973136901855
    9. '       ' → logprob: -6.1942973136901855
    10. ' ' → logprob: -6.6942973136901855

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024944884702563286
    2. '1' → logprob: -4.52494478225708
    3. 'cnt' → logprob: -5.14994478225708
    4. ' cnt' → logprob: -5.52494478225708
    5. ' ' → logprob: -6.77494478225708
    6. '               ' → logprob: -6.77494478225708
    7. '       ' → logprob: -7.64994478225708
    8. '```' → logprob: -7.89994478225708
    9. '          ' → logprob: -8.899945259094238
    10. '            ' → logprob: -9.024945259094238

Token 58: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.038253314793109894
    2. ' cnt' → logprob: -3.2882533073425293
    3. '1' → logprob: -8.538253784179688
    4. 'count' → logprob: -11.663253784179688
    5. '	cnt' → logprob: -12.788253784179688
    6. '           ' → logprob: -13.038253784179688
    7. ' ' → logprob: -14.038253784179688
    8. '(cnt' → logprob: -14.288253784179688
    9. '```' → logprob: -14.788253784179688
    10. '_cnt' → logprob: -15.788253784179688

Token 59: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2527889013290405
    2. ' +=' → logprob: -1.5027889013290405
    3. '=' → logprob: -7.12778902053833
    4. '+' → logprob: -10.002788543701172
    5. ' =' → logprob: -11.752788543701172
    6. ']+=' → logprob: -13.002788543701172
    7. '<|end|>' → logprob: -14.877788543701172
    8. '+='' → logprob: -15.002788543701172
    9. ' +' → logprob: -15.127788543701172
    10. '+="' → logprob: -16.002788543701172

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.538042068481445
    4. '   ' → logprob: -18.663042068481445
    5. '۱' → logprob: -18.913042068481445
    6. '１' → logprob: -18.975542068481445
    7. '  ' → logprob: -18.975542068481445
    8. '<|end|>' → logprob: -19.225542068481445
    9. '```' → logprob: -19.225542068481445
    10. '    ' → logprob: -19.538042068481445

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -20.625015258789062
    4. '   ' → logprob: -21.000015258789062
    5. '<|end|>' → logprob: -21.125015258789062
    6. '１' → logprob: -21.500015258789062
    7. '۱' → logprob: -21.625015258789062
    8. '  ' → logprob: -22.187515258789062
    9. '१' → logprob: -22.375015258789062
    10. '১' → logprob: -22.687515258789062

Token 62: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09156070649623871
    2. '```' → logprob: -3.2165606021881104
    3. ' 
' → logprob: -3.5915606021881104
    4. '
' → logprob: -4.8415608406066895
    5. '        
' → logprob: -5.0915608406066895
    6. '   ' → logprob: -6.4665608406066895
    7. '    
' → logprob: -7.0915608406066895
    8. ' ' → logprob: -7.5915608406066895
    9. '<|end|>' → logprob: -7.5915608406066895
    10. '        ' → logprob: -7.8415608406066895

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014099683612585068
    2. '```' → logprob: -5.139099597930908
    3. '
' → logprob: -5.639099597930908
    4. '        
' → logprob: -6.264099597930908
    5. ' 
' → logprob: -6.889099597930908
    6. '   ' → logprob: -7.264099597930908
    7. '           ' → logprob: -8.139100074768066
    8. '    
' → logprob: -8.764100074768066
    9. '        ' → logprob: -8.764100074768066
    10. '    ' → logprob: -9.764100074768066

Token 64: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23660720884799957
    2. ' if' → logprob: -1.7366071939468384
    3. '   ' → logprob: -4.611607074737549
    4. ' ' → logprob: -4.861607074737549
    5. 'if' (adapté à ' if') → logprob: -5.111607074737549
    6. '```' → logprob: -5.111607074737549
    7. '    ' → logprob: -6.236607074737549
    8. '        ' → logprob: -6.736607074737549
    9. ' 
' → logprob: -7.736607074737549
    10. '        
' → logprob: -8.361607551574707

Token 65: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.0012230859138071537
    2. 'cnt' → logprob: -6.751223087310791
    3. '(cnt' → logprob: -10.001222610473633
    4. '	cnt' → logprob: -12.626222610473633
    5. ' ' → logprob: -13.126222610473633
    6. '[cnt' → logprob: -13.876222610473633
    7. ' ' → logprob: -14.126222610473633
    8. ' count' → logprob: -16.126222610473633
    9. ' c' → logprob: -16.251222610473633
    10. ' cn' → logprob: -16.501222610473633

Token 66: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04868842288851738
    2. '>' → logprob: -3.0486884117126465
    3. '<|end|>' → logprob: -10.173688888549805
    4. ':' → logprob: -10.798688888549805
    5. ' ' → logprob: -11.423688888549805
    6. '   ' → logprob: -12.173688888549805
    7. '<|end|>' → logprob: -12.173688888549805
    8. ' ' → logprob: -12.548688888549805
    9. '">' → logprob: -12.548688888549805
    10. '  ' → logprob: -12.798688888549805

Token 67: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3485879898071289
    2. ' ' → logprob: -1.223587989807129
    3. '=' → logprob: -9.223587989807129
    4. '<|end|>' → logprob: -10.598587989807129
    5. '  ' → logprob: -12.598587989807129
    6. ' ' → logprob: -12.848587989807129
    7. '<|end|>' → logprob: -12.973587989807129
    8. '```' → logprob: -13.348587989807129
    9. '   ' → logprob: -13.473587989807129
    10. ' res' → logprob: -13.598587989807129

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029776068404316902
    2. ' ' → logprob: -3.529776096343994
    3. '=' → logprob: -11.154775619506836
    4. '1' → logprob: -12.529775619506836
    5. ')' → logprob: -13.592275619506836
    6. '۰' → logprob: -13.967275619506836
    7. '<|end|>' → logprob: -14.092275619506836
    8. '```' → logprob: -14.717275619506836
    9. ' ' → logprob: -14.842275619506836
    10. '   ' → logprob: -15.092275619506836

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006739511154592037
    2. ':
' → logprob: -7.750673770904541
    3. '):' → logprob: -9.2506742477417
    4. ',' → logprob: -9.5006742477417
    5. '       ' → logprob: -9.8756742477417
    6. ' :' → logprob: -11.6256742477417
    7. '           ' → logprob: -13.1256742477417
    8. ')' → logprob: -13.6256742477417
    9. '):
' → logprob: -13.7506742477417
    10. '   ' → logprob: -13.7506742477417

Token 70: '           ' (ID: 352)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.25583529472351074
    2. 'res' → logprob: -1.7558352947235107
    3. '       ' → logprob: -3.2558352947235107
    4. '```' → logprob: -5.13083553314209
    5. '           ' → logprob: -5.25583553314209
    6. '        ' → logprob: -6.13083553314209
    7. '        
' → logprob: -8.50583553314209
    8. ' ```' → logprob: -8.63083553314209
    9. '``' → logprob: -9.13083553314209
    10. ' ' → logprob: -9.50583553314209

Token 71: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.348516047000885
    2. 'res' (adapté à ' res') → logprob: -1.2235159873962402
    3. '```' → logprob: -10.473516464233398
    4. '   ' → logprob: -11.098516464233398
    5. '           ' → logprob: -11.473516464233398
    6. '	res' → logprob: -12.223516464233398
    7. '(res' → logprob: -12.973516464233398
    8. '_res' → logprob: -13.348516464233398
    9. ' ```' → logprob: -13.473516464233398
    10. '    ' → logprob: -13.723516464233398

Token 72: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.3885676860809326
    2. '*=' → logprob: -1.3885676860809326
    3. '*' → logprob: -2.6385676860809326
    4. '=' → logprob: -7.388567924499512
    5. ' *' → logprob: -8.138567924499512
    6. '```' → logprob: -9.638567924499512
    7. ' ' → logprob: -10.013567924499512
    8. ' ' → logprob: -11.013567924499512
    9. ' =' → logprob: -11.263567924499512
    10. '**' → logprob: -11.888567924499512

Token 73: ' (' (ID: 350)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.005801401566714048
    2. 'cnt' → logprob: -5.755801200866699
    3. ' (' → logprob: -6.505801200866699
    4. ' cnt' → logprob: -6.880801200866699
    5. '[cnt' → logprob: -9.3808012008667
    6. '(count' → logprob: -12.2558012008667
    7. '(i' → logprob: -12.5058012008667
    8. '(' → logprob: -13.7558012008667
    9. '	cnt' → logprob: -13.7558012008667
    10. 'i' → logprob: -14.0058012008667

Token 74: '2' (ID: 17)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.12480118125677109
    2. ' cnt' → logprob: -2.4998011589050293
    3. '(cnt' → logprob: -3.3748011589050293
    4. ' (' → logprob: -7.124801158905029
    5. '(' → logprob: -8.749801635742188
    6. '[cnt' → logprob: -10.999801635742188
    7. '	cnt' → logprob: -11.624801635742188
    8. '_cnt' → logprob: -12.374801635742188
    9. 'count' → logprob: -12.624801635742188
    10. ' ' → logprob: -13.499801635742188

Token 75: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0031910240650177
    2. ' *' → logprob: -5.753190994262695
    3. 'cnt' → logprob: -11.503190994262695
    4. ' ' → logprob: -12.753190994262695
    5. '[cnt' → logprob: -15.878190994262695
    6. ' cnt' → logprob: -16.378190994262695
    7. '(cnt' → logprob: -17.503190994262695
    8. '	cnt' → logprob: -17.628190994262695
    9. '```' → logprob: -17.753190994262695
    10. '**' → logprob: -18.003190994262695

Token 76: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.0802738870552275e-05
    2. ' cnt' → logprob: -11.87501049041748
    3. '	cnt' → logprob: -13.50001049041748
    4. '(cnt' → logprob: -13.75001049041748
    5. 'count' → logprob: -13.87501049041748
    6. '[cnt' → logprob: -15.50001049041748
    7. 'cn' → logprob: -16.750011444091797
    8. '```' → logprob: -17.000011444091797
    9. 'c' → logprob: -17.750011444091797
    10. '_cnt' → logprob: -18.250011444091797

Token 77: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14267989993095398
    2. '+' → logprob: -2.0176799297332764
    3. ' ' → logprob: -13.642680168151855
    4. ')' → logprob: -13.892680168151855
    5. '```' → logprob: -14.142680168151855
    6. ' plus' → logprob: -14.892680168151855
    7. '＋' → logprob: -15.142680168151855
    8. ' +
' → logprob: -15.267680168151855
    9. ')+' → logprob: -15.517680168151855
    10. '+)' → logprob: -15.517680168151855

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036031559575349092
    2. ' ' → logprob: -5.628602981567383
    3. ')' → logprob: -14.003602981567383
    4. '```' → logprob: -14.816102981567383
    5. '2' → logprob: -15.066102981567383
    6. '3' → logprob: -15.128602981567383
    7. '+' → logprob: -15.316102981567383
    8. '   ' → logprob: -15.503602981567383
    9. ' ' → logprob: -15.566102981567383
    10. ' )' → logprob: -16.128602981567383

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.73446003627032e-05
    2. ' ' → logprob: -9.250097274780273
    3. '3' → logprob: -15.250097274780273
    4. '+' → logprob: -15.562597274780273
    5. '2' → logprob: -15.687597274780273
    6. ')' → logprob: -16.500097274780273
    7. '   ' → logprob: -16.812597274780273
    8. '```' → logprob: -17.187597274780273
    9. ' ' → logprob: -17.625097274780273
    10. '１' → logprob: -17.750097274780273

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045545989996753633
    2. ' )' → logprob: -7.750455379486084
    3. '   ' → logprob: -12.375455856323242
    4. '+' → logprob: -12.375455856323242
    5. '<|end|>' → logprob: -12.500455856323242
    6. ' ' → logprob: -12.875455856323242
    7. '       ' → logprob: -13.000455856323242
    8. ' +' → logprob: -13.750455856323242
    9. '```' → logprob: -13.875455856323242
    10. '),' → logprob: -14.000455856323242

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013182821683585644
    2. ' i' → logprob: -5.138182640075684
    3. '   ' → logprob: -5.513182640075684
    4. '        
' → logprob: -7.013182640075684
    5. '           ' → logprob: -7.763182640075684
    6. '```' → logprob: -7.763182640075684
    7. 'i' → logprob: -8.263182640075684
    8. '<|end|>' → logprob: -8.388182640075684
    9. ' 
' → logprob: -8.638182640075684
    10. '    
' → logprob: -8.763182640075684

Token 82: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027657704427838326
    2. ' i' → logprob: -3.9026577472686768
    3. '   ' → logprob: -5.402657508850098
    4. '    ' → logprob: -7.027657508850098
    5. ' ' → logprob: -7.902657508850098
    6. '```' → logprob: -7.902657508850098
    7. '        
' → logprob: -8.402657508850098
    8. '        ' → logprob: -8.902657508850098
    9. '           ' → logprob: -8.902657508850098
    10. '     ' → logprob: -9.027657508850098

Token 83: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16607828438282013
    2. ' +=' → logprob: -1.9160783290863037
    3. '+' → logprob: -5.166078090667725
    4. '++' → logprob: -9.041078567504883
    5. '=' → logprob: -12.416078567504883
    6. '+="' → logprob: -13.166078567504883
    7. '+='' → logprob: -13.166078567504883
    8. ']+=' → logprob: -14.041078567504883
    9. ' +' → logprob: -14.041078567504883
    10. ' ' → logprob: -14.541078567504883

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -18.750003814697266
    4. '```' → logprob: -19.750003814697266
    5. '１' → logprob: -20.750003814697266
    6. '  ' → logprob: -21.625003814697266
    7. '+' → logprob: -21.812503814697266
    8. '<|end|>' → logprob: -22.000003814697266
    9. '2' → logprob: -22.062503814697266
    10. '۱' → logprob: -22.187503814697266

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -17.5000057220459
    4. '```' → logprob: -18.0625057220459
    5. '<|end|>' → logprob: -18.6250057220459
    6. '１' → logprob: -18.8750057220459
    7. '۱' → logprob: -19.8125057220459
    8. '१' → logprob: -19.8750057220459
    9. '  ' → logprob: -20.1250057220459
    10. '+' → logprob: -20.1250057220459

Token 86: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29624927043914795
    2. '```' → logprob: -2.2962493896484375
    3. ' if' → logprob: -2.5462493896484375
    4. 'if' → logprob: -2.7962493896484375
    5. '    
' → logprob: -4.9212493896484375
    6. '
' → logprob: -5.6712493896484375
    7. ' ' → logprob: -6.4212493896484375
    8. '  
' → logprob: -7.4212493896484375
    9. '``' → logprob: -7.4212493896484375
    10. ' 
' → logprob: -7.5462493896484375

Token 87: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.028161298483610153
    2. ' ' → logprob: -4.028161525726318
    3. 'i' → logprob: -5.028161525726318
    4. '1' → logprob: -5.778161525726318
    5. '2' → logprob: -8.65316104888916
    6. '0' → logprob: -9.65316104888916
    7. '(i' → logprob: -10.90316104888916
    8. ' (' → logprob: -10.90316104888916
    9. '	i' → logprob: -11.27816104888916
    10. '  ' → logprob: -11.71566104888916

Token 88: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0025398707948625088
    2. ' ==' → logprob: -6.12753963470459
    3. '=' → logprob: -8.12753963470459
    4. '2' → logprob: -10.87753963470459
    5. '===' → logprob: -10.87753963470459
    6. ' ' → logprob: -11.12753963470459
    7. '```' → logprob: -13.37753963470459
    8. '3' → logprob: -14.00253963470459
    9. '>' → logprob: -14.12753963470459
    10. '+' → logprob: -14.37753963470459

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.333223139634356e-05
    2. ' ' → logprob: -10.375033378601074
    3. '1' → logprob: -13.125033378601074
    4. '  ' → logprob: -18.625032424926758
    5. '3' → logprob: -18.750032424926758
    6. '۲' → logprob: -19.875032424926758
    7. '```' → logprob: -20.375032424926758
    8. '   ' → logprob: -21.250032424926758
    9. '２' → logprob: -21.937532424926758
    10. '२' → logprob: -22.000032424926758

Token 90: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4289439618587494
    2. 'else' → logprob: -1.0539439916610718
    3. '2' → logprob: -8.678943634033203
    4. '3' → logprob: -10.053943634033203
    5. '6' → logprob: -11.303943634033203
    6. '1' → logprob: -12.428943634033203
    7. '4' → logprob: -12.428943634033203
    8. '	else' → logprob: -13.053943634033203
    9. '```' → logprob: -13.428943634033203
    10. ' ' → logprob: -13.678943634033203

Token 91: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009149204124696553
    2. ' ' → logprob: -7.000915050506592
    3. '1' → logprob: -13.250914573669434
    4. '6' → logprob: -13.875914573669434
    5. '<|end|>' → logprob: -15.500914573669434
    6. '   ' → logprob: -15.875914573669434
    7. '+' → logprob: -16.62591552734375
    8. '  ' → logprob: -16.75091552734375
    9. '```' → logprob: -17.00091552734375
    10. '    ' → logprob: -17.12591552734375

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. '1' → logprob: -13.500029563903809
    4. '<|end|>' → logprob: -16.937528610229492
    5. '+' → logprob: -17.000028610229492
    6. '6' → logprob: -17.187528610229492
    7. '```' → logprob: -17.562528610229492
    8. '   ' → logprob: -18.812528610229492
    9. '<|end|>' → logprob: -18.812528610229492
    10. '  ' → logprob: -19.062528610229492

Token 93: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044607508927583694
    2. 'if' → logprob: -3.794607400894165
    3. ' if' → logprob: -4.669607639312744
    4. '    
' → logprob: -5.294607639312744
    5. '```' → logprob: -5.294607639312744
    6. ' 
' → logprob: -8.169607162475586
    7. 'return' → logprob: -8.294607162475586
    8. ' ' → logprob: -8.544607162475586
    9. '
' → logprob: -8.669607162475586
    10. '  
' → logprob: -8.919607162475586

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30528682470321655
    2. 'if' → logprob: -1.4302868843078613
    3. ' if' → logprob: -4.430286884307861
    4. 'return' → logprob: -5.055286884307861
    5. '```' → logprob: -5.805286884307861
    6. '    
' → logprob: -6.555286884307861
    7. ' return' → logprob: -8.555286407470703
    8. '
' → logprob: -8.555286407470703
    9. '.' → logprob: -8.930286407470703
    10. '#' → logprob: -8.930286407470703

Token 95: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.020821204409003258
    2. ' if' → logprob: -4.1458210945129395
    3. '```' → logprob: -6.2708210945129395
    4. '
' → logprob: -6.6458210945129395
    5. '   ' → logprob: -7.3958210945129395
    6. '<|end|>' → logprob: -8.520821571350098
    7. '    
' → logprob: -8.645821571350098
    8. '#' → logprob: -9.020821571350098
    9. '  
' → logprob: -9.145821571350098
    10. ' ' → logprob: -9.395821571350098

Token 96: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020544925704598427
    2. 'n' → logprob: -3.89554500579834
    3. ' ' → logprob: -13.14554500579834
    4. '	n' → logprob: -14.14554500579834
    5. ' ' → logprob: -15.64554500579834
    6. '   ' → logprob: -16.770544052124023
    7. '_n' → logprob: -16.770544052124023
    8. '(n' → logprob: -18.395544052124023
    9. '```' → logprob: -18.520544052124023
    10. ' н' → logprob: -18.520544052124023

Token 97: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759617686271667
    2. ' >' → logprob: -0.8259617686271667
    3. ' ' → logprob: -11.70096206665039
    4. '!=' → logprob: -12.45096206665039
    5. ' ' → logprob: -13.20096206665039
    6. ' !=' → logprob: -13.32596206665039
    7. '">' → logprob: -13.32596206665039
    8. '&gt' → logprob: -13.82596206665039
    9. '.' → logprob: -13.95096206665039
    10. '1' → logprob: -14.20096206665039

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '>' → logprob: -16.87500762939453
    4. '   ' → logprob: -17.00000762939453
    5. '  ' → logprob: -17.37500762939453
    6. '```' → logprob: -18.00000762939453
    7. '<|end|>' → logprob: -18.12500762939453
    8. '१' → logprob: -19.25000762939453
    9. '۱' → logprob: -19.25000762939453
    10. '

' → logprob: -19.62500762939453

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.5000057220459
    4. '   ' → logprob: -18.2500057220459
    5. '>' → logprob: -19.3750057220459
    6. '۱' → logprob: -20.0000057220459
    7. '  ' → logprob: -20.0000057220459
    8. '<|end|>' → logprob: -20.2500057220459
    9. '１' → logprob: -20.5000057220459
    10. '१' → logprob: -20.8750057220459

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03365837410092354
    2. ':
' → logprob: -3.408658266067505
    3. ' :' → logprob: -11.658658027648926
    4. ' :
' → logprob: -13.283658027648926
    5. '   ' → logprob: -13.533658027648926
    6. ':

' → logprob: -14.658658027648926
    7. '):
' → logprob: -15.908658027648926
    8. '       ' → logprob: -16.158658981323242
    9. ':
' → logprob: -16.408658981323242
    10. '):' → logprob: -16.533658981323242

Token 101: '       ' (ID: 309)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.35594311356544495
    2. 'res' → logprob: -1.2309430837631226
    3. '   ' → logprob: -5.230943202972412
    4. '
' → logprob: -6.730943202972412
    5. '	res' → logprob: -8.230942726135254
    6. '    
' → logprob: -8.730942726135254
    7. ' 
' → logprob: -8.980942726135254
    8. '<|end|>' → logprob: -9.230942726135254
    9. '       ' → logprob: -9.480942726135254
    10. '```' → logprob: -9.730942726135254

Token 102: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0001830410328693688
    2. ' res' → logprob: -8.62518310546875
    3. '
' → logprob: -13.25018310546875
    4. '```' → logprob: -14.87518310546875
    5. '	res' → logprob: -15.00018310546875
    6. '   ' → logprob: -15.25018310546875
    7. '3' → logprob: -15.37518310546875
    8. 'ress' → logprob: -15.62518310546875
    9. 'resc' → logprob: -16.87518310546875
    10. '9' → logprob: -17.12518310546875

Token 103: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.005435573868453503
    2. ' *=' → logprob: -5.380435466766357
    3. '=' → logprob: -7.130435466766357
    4. '*' → logprob: -11.630435943603516
    5. '```' → logprob: -12.755435943603516
    6. '   ' → logprob: -14.255435943603516
    7. ' ' → logprob: -14.380435943603516
    8. ' =' → logprob: -14.505435943603516
    9. ' ' → logprob: -14.880435943603516
    10. '	' → logprob: -15.255435943603516

Token 104: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -17.00001335144043
    4. '   ' → logprob: -17.37501335144043
    5. '(' → logprob: -17.37501335144043
    6. '9' → logprob: -18.12501335144043
    7. '３' → logprob: -18.50001335144043
    8. '  ' → logprob: -18.87501335144043
    9. '۳' → logprob: -19.37501335144043
    10. '' → logprob: -19.37501335144043

Token 105: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.125001907348633
    4. '(' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '３' → logprob: -19.125001907348633
    7. '³' → logprob: -19.750001907348633
    8. '۳' → logprob: -20.250001907348633
    9. '2' → logprob: -20.250001907348633
    10. '`' → logprob: -20.500001907348633

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5385262966156006
    2. ' return' → logprob: -1.1635262966156006
    3. 'return' → logprob: -2.6635262966156006
    4. '
' → logprob: -3.5385262966156006
    5. '    
' → logprob: -6.41352653503418
    6. '```' → logprob: -6.53852653503418
    7. '	return' → logprob: -6.91352653503418
    8. ' 
' → logprob: -8.03852653503418
    9. ' ' → logprob: -8.53852653503418
    10. '  
' → logprob: -8.66352653503418

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02776321768760681
    2. ' return' → logprob: -4.027763366699219
    3. 'return' → logprob: -4.652763366699219
    4. '```' → logprob: -10.902763366699219
    5. '	return' → logprob: -12.027763366699219
    6. '
' → logprob: -13.152763366699219
    7. '<|end|>' → logprob: -13.152763366699219
    8. '    
' → logprob: -13.777763366699219
    9. ':return' → logprob: -14.027763366699219
    10. ' ' → logprob: -14.152763366699219

Token 108: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.90576171875
    2. 'return' (adapté à ' return') → logprob: -0.90576171875
    3. ' return' → logprob: -1.65576171875
    4. '
' → logprob: -7.90576171875
    5. '    
' → logprob: -9.03076171875
    6. ' ' → logprob: -10.53076171875
    7. '	return' → logprob: -10.78076171875
    8. '```' → logprob: -11.15576171875
    9. ' 
' → logprob: -11.40576171875
    10. '  
' → logprob: -11.65576171875

Token 109: ' (' (ID: 350)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.031239112839102745
    2. ' res' → logprob: -3.5312390327453613
    3. '(res' → logprob: -6.531239032745361
    4. ' (' → logprob: -10.40623950958252
    5. '	res' → logprob: -17.156238555908203
    6. '(' → logprob: -17.781238555908203
    7. '   ' → logprob: -18.031238555908203
    8. '```' → logprob: -18.656238555908203
    9. ' ' → logprob: -18.781238555908203
    10. 'r' → logprob: -19.156238555908203

Token 110: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0013332172529771924
    2. '(res' → logprob: -6.751333236694336
    3. ' res' → logprob: -8.751333236694336
    4. ' (' → logprob: -12.251333236694336
    5. '	res' → logprob: -17.626333236694336
    6. '   ' → logprob: -18.376333236694336
    7. '_res' → logprob: -19.126333236694336
    8. '$res' → logprob: -19.126333236694336
    9. ')' → logprob: -19.501333236694336
    10. ' ' → logprob: -20.126333236694336

Token 111: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6031181216239929
    2. ' -' → logprob: -1.3531181812286377
    3. ')' → logprob: -2.2281181812286377
    4. '+' → logprob: -3.3531181812286377
    5. '//' → logprob: -4.228117942810059
    6. ' //' → logprob: -4.353117942810059
    7. ' +' → logprob: -4.353117942810059
    8. ' ' → logprob: -4.978117942810059
    9. '```' → logprob: -6.478117942810059
    10. ' )' → logprob: -6.728117942810059

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38688212633132935
    2. ' ' → logprob: -1.1368820667266846
    3. '  ' → logprob: -12.261881828308105
    4. '   ' → logprob: -13.261881828308105
    5. ' ' → logprob: -13.636881828308105
    6. '0' → logprob: -13.886881828308105
    7. '2' → logprob: -14.261881828308105
    8. '```' → logprob: -15.011881828308105
    9. '-' → logprob: -15.386881828308105
    10. ' -' → logprob: -15.636881828308105

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '2' → logprob: -15.626326560974121
    4. '0' → logprob: -16.876325607299805
    5. '3' → logprob: -17.126325607299805
    6. '  ' → logprob: -17.251325607299805
    7. '   ' → logprob: -17.626325607299805
    8. ' ' → logprob: -17.626325607299805
    9. '7' → logprob: -17.751325607299805
    10. '-' → logprob: -18.001325607299805

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006697862991131842
    2. ')//' → logprob: -7.875669956207275
    3. ' )' → logprob: -8.250669479370117
    4. '//' → logprob: -10.750669479370117
    5. ' //' → logprob: -12.500669479370117
    6. ')>>' → logprob: -13.625669479370117
    7. '```' → logprob: -13.875669479370117
    8. '   ' → logprob: -14.375669479370117
    9. '2' → logprob: -15.875669479370117
    10. ' ' → logprob: -16.000669479370117

Token 115: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.030027704313397408
    2. ' //' → logprob: -3.5300276279449463
    3. '```' → logprob: -8.780027389526367
    4. '2' → logprob: -9.905027389526367
    5. '`' → logprob: -10.780027389526367
    6. ' ' → logprob: -11.405027389526367
    7. ')//' → logprob: -11.780027389526367
    8. '   ' → logprob: -12.030027389526367
    9. '0' → logprob: -12.155027389526367
    10. '1' → logprob: -12.530027389526367

Token 116: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '```' → logprob: -17.375295639038086
    4. '۲' → logprob: -18.000295639038086
    5. '２' → logprob: -18.625295639038086
    6. '202' → logprob: -18.937795639038086
    7. '  ' → logprob: -19.062795639038086
    8. '3' → logprob: -19.187795639038086
    9. '   ' → logprob: -19.187795639038086
    10. ' ' → logprob: -19.437795639038086

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۲' → logprob: -19.625001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '２' → logprob: -19.875001907348633
    6. '```' → logprob: -20.000001907348633
    7. '4' → logprob: -20.250001907348633
    8. '  ' → logprob: -20.500001907348633
    9. '२' → logprob: -21.250001907348633
    10. '٢' → logprob: -21.375001907348633

Token 118: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5704535245895386
    2. '<|end|>' → logprob: -1.0704535245895386
    3. '\n' → logprob: -2.945453643798828
    4. '#' → logprob: -4.570453643798828
    5. '```' → logprob: -4.820453643798828
    6. '(' → logprob: -5.570453643798828
    7. '\' → logprob: -5.820453643798828
    8. 'n' → logprob: -6.195453643798828
    9. '

' → logprob: -6.320453643798828
    10. '[' → logprob: -6.320453643798828

Token 120: ' line' (ID: 2543)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4961245357990265
    2. ' L' → logprob: -1.496124505996704
    3. ' i' → logprob: -2.121124505996704
    4. ' ' → logprob: -3.871124505996704
    5. ' x' → logprob: -4.621124744415283
    6. ' line' → logprob: -5.121124744415283
    7. ' n' → logprob: -5.746124744415283
    8. ' l' → logprob: -5.746124744415283
    9. '_' → logprob: -6.496124744415283
    10. ' num' → logprob: -6.871124744415283

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10036022216081619
    2. 'in' → logprob: -2.350360155105591
    3. 's' → logprob: -9.725359916687012
    4. ' ' → logprob: -10.350359916687012
    5. '	in' → logprob: -10.600359916687012
    6. '  ' → logprob: -12.225359916687012
    7. '_in' → logprob: -12.225359916687012
    8. ':' → logprob: -12.350359916687012
    9. '   ' → logprob: -12.600359916687012
    10. '_' → logprob: -12.850359916687012

Token 122: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07893098890781403
    2. ' sys' → logprob: -2.5789310932159424
    3. '=sys' → logprob: -10.828930854797363
    4. '	sys' → logprob: -11.203930854797363
    5. '(sys' → logprob: -11.828930854797363
    6. 'stdin' → logprob: -15.703930854797363
    7. '```' → logprob: -15.953930854797363
    8. 's' → logprob: -16.82893180847168
    9. 'iter' → logprob: -17.20393180847168
    10. '   ' → logprob: -17.45393180847168

Token 123: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0025044360663741827
    2. 'stdin' → logprob: -6.002504348754883
    3. '(stdin' → logprob: -11.627504348754883
    4. ' stdin' → logprob: -12.002504348754883
    5. '.readline' → logprob: -12.377504348754883
    6. '.' → logprob: -12.752504348754883
    7. '.stdout' → logprob: -13.377504348754883
    8. 'import' → logprob: -13.502504348754883
    9. '.argv' → logprob: -14.002504348754883
    10. 'in' → logprob: -14.252504348754883

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001408090116456151
    2. '.readline' → logprob: -7.126408100128174
    3. '.strip' → logprob: -7.751408100128174
    4. '.readlines' → logprob: -9.751407623291016
    5. '():' → logprob: -11.001407623291016
    6. ':
' → logprob: -11.251407623291016
    7. ':**' → logprob: -11.376407623291016
    8. '.rstrip' → logprob: -11.376407623291016
    9. '<|end|>' → logprob: -11.501407623291016
    10. '):' → logprob: -11.751407623291016

Token 125: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2754230201244354
    2. '   ' → logprob: -1.9004230499267578
    3. '<|end|>' → logprob: -2.900423049926758
    4. ':
' → logprob: -4.525423049926758
    5. '<|end|>' → logprob: -5.150423049926758
    6. '```' → logprob: -5.650423049926758
    7. '    
' → logprob: -6.025423049926758
    8. ',' → logprob: -6.025423049926758
    9. '.readlines' → logprob: -6.150423049926758
    10. '.readline' → logprob: -6.900423049926758

Token 126: ' L' (ID: 451)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.26176801323890686
    2. 'n' → logprob: -1.7617679834365845
    3. ' L' → logprob: -3.011768102645874
    4. 'L' (adapté à ' L') → logprob: -4.886767864227295
    5. ' num' → logprob: -7.886767864227295
    6. 'num' → logprob: -8.386768341064453
    7. ' x' → logprob: -8.636768341064453
    8. ' N' → logprob: -8.636768341064453
    9. 'N' → logprob: -8.886768341064453
    10. 'x' → logprob: -9.011768341064453

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42873433232307434
    2. '=' → logprob: -1.053734302520752
    3. '=int' → logprob: -11.30373477935791
    4. ' ' → logprob: -12.42873477935791
    5. '.' → logprob: -12.67873477935791
    6. '.strip' → logprob: -12.80373477935791
    7. ',' → logprob: -13.30373477935791
    8. '=line' → logprob: -13.30373477935791
    9. '_' → logprob: -13.42873477935791
    10. ')' → logprob: -13.55373477935791

Token 128: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00015908108616713434
    2. ' int' → logprob: -8.75015926361084
    3. 'line' → logprob: -14.50015926361084
    4. ' ' → logprob: -19.250158309936523
    5. '=int' → logprob: -19.250158309936523
    6. '[int' → logprob: -19.375158309936523
    7. '(int' → logprob: -19.625158309936523
    8. '   ' → logprob: -19.750158309936523
    9. 'len' → logprob: -20.125158309936523
    10. ' line' → logprob: -20.250158309936523

Token 129: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0015024791937321424
    2. '(' → logprob: -6.501502513885498
    3. '(Line' → logprob: -16.251502990722656
    4. '=line' → logprob: -17.126502990722656
    5. '[line' → logprob: -17.501502990722656
    6. ' (' → logprob: -17.501502990722656
    7. '#line' → logprob: -17.751502990722656
    8. ' line' → logprob: -17.876502990722656
    9. '(lines' → logprob: -18.251502990722656
    10. '(
' → logprob: -18.501502990722656

Token 130: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31427064538002014
    2. '.strip' → logprob: -1.3142706155776978
    3. '.rstrip' → logprob: -7.064270496368408
    4. '())' → logprob: -9.564270973205566
    5. '.readline' → logprob: -10.064270973205566
    6. 'rstrip' → logprob: -11.314270973205566
    7. 'strip' → logprob: -11.439270973205566
    8. ')
' → logprob: -12.439270973205566
    9. '()' → logprob: -12.814270973205566
    10. ' )' → logprob: -13.564270973205566

Token 131: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00442822091281414
    2. '()' → logprob: -6.004428386688232
    3. ')' → logprob: -6.254428386688232
    4. '())
' → logprob: -10.629427909851074
    5. '(' → logprob: -13.379427909851074
    6. '()))' → logprob: -14.004427909851074
    7. ' ())' → logprob: -14.129427909851074
    8. '())

' → logprob: -14.879427909851074
    9. '()
' → logprob: -15.004427909851074
    10. '))' → logprob: -15.504427909851074

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011147326789796352
    2. 'print' → logprob: -4.636147499084473
    3. ' print' → logprob: -7.136147499084473
    4. '    
' → logprob: -8.136147499084473
    5. '
' → logprob: -8.261147499084473
    6. '```' → logprob: -10.886147499084473
    7. '	print' → logprob: -11.761147499084473
    8. '<|end|>' → logprob: -11.886147499084473
    9. '  
' → logprob: -12.761147499084473
    10. ' 
' → logprob: -13.511147499084473

Token 133: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2258668690919876
    2. ' print' → logprob: -1.6008669137954712
    3. '   ' → logprob: -8.47586727142334
    4. 'result' → logprob: -9.72586727142334
    5. ' result' → logprob: -9.72586727142334
    6. 'if' (adapté à ' if') → logprob: -10.10086727142334
    7. ' if' → logprob: -10.35086727142334
    8. 'answer' → logprob: -11.35086727142334
    9. 'res' → logprob: -11.60086727142334
    10. '
' → logprob: -12.35086727142334

Token 134: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.008622255176305771
    2. 'L' → logprob: -4.758622169494629
    3. ' not' → logprob: -12.508622169494629
    4. ' ' → logprob: -12.758622169494629
    5. ' ' → logprob: -14.008622169494629
    6. '  ' → logprob: -16.008623123168945
    7. '   ' → logprob: -16.758623123168945
    8. '0' → logprob: -16.883623123168945
    9. 'not' → logprob: -17.633623123168945
    10. '	L' → logprob: -18.133623123168945

Token 135: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5236548185348511
    2. '==' → logprob: -0.8986548185348511
    3. '<=' → logprob: -8.27365493774414
    4. ' <=' → logprob: -8.52365493774414
    5. ' ' → logprob: -10.64865493774414
    6. '0' → logprob: -11.64865493774414
    7. '===' → logprob: -11.89865493774414
    8. '>' → logprob: -12.02365493774414
    9. '<' → logprob: -12.14865493774414
    10. ' <' → logprob: -12.39865493774414

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542822778224945
    2. ' ' → logprob: -3.895542860031128
    3. '  ' → logprob: -15.395543098449707
    4. '   ' → logprob: -15.520543098449707
    5. '۰' → logprob: -16.33304214477539
    6. '1' → logprob: -16.58304214477539
    7. '-' → logprob: -16.58304214477539
    8. '=' → logprob: -16.77054214477539
    9. '```' → logprob: -17.14554214477539
    10. ' -' → logprob: -17.27054214477539

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.251091377227567e-05
    2. ' ' → logprob: -10.125042915344238
    3. '-' → logprob: -13.250042915344238
    4. ' -' → logprob: -15.625042915344238
    5. '1' → logprob: -15.937542915344238
    6. '```' → logprob: -16.750041961669922
    7. '   ' → logprob: -17.000041961669922
    8. 's' → logprob: -17.625041961669922
    9. '۰' → logprob: -17.812541961669922
    10. '  ' → logprob: -17.812541961669922

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020606590434908867
    2. ':
' → logprob: -3.895606517791748
    3. ' :' → logprob: -10.270606994628906
    4. '   ' → logprob: -10.645606994628906
    5. ' :
' → logprob: -12.770606994628906
    6. ':return' → logprob: -13.520606994628906
    7. ':
' → logprob: -13.770606994628906
    8. '	break' → logprob: -15.770606994628906
    9. ':

' → logprob: -15.895606994628906
    10. '):
' → logprob: -16.270606994628906

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017214729450643063
    2. '   ' → logprob: -6.376721382141113
    3. ' break' → logprob: -11.626721382141113
    4. 'break' → logprob: -12.126721382141113
    5. '     ' → logprob: -13.501721382141113
    6. '           ' → logprob: -13.501721382141113
    7. '	break' → logprob: -13.876721382141113
    8. '      ' → logprob: -14.626721382141113
    9. '```' → logprob: -15.376721382141113
    10. '    ' → logprob: -16.00172233581543

Token 140: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3953624367713928
    2. ' break' → logprob: -1.145362377166748
    3. '   ' → logprob: -5.395362377166748
    4. '       ' → logprob: -5.770362377166748
    5. '	break' → logprob: -7.145362377166748
    6. '```' → logprob: -13.145362854003906
    7. '_break' → logprob: -13.270362854003906
    8. '
' → logprob: -13.395362854003906
    9. '           ' → logprob: -13.645362854003906
    10. '  ' → logprob: -14.270362854003906

Token 141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05363050848245621
    2. '    
' → logprob: -3.5536305904388428
    3. '
' → logprob: -3.8036305904388428
    4. 'print' → logprob: -7.053630352020264
    5. '  
' → logprob: -8.553630828857422
    6. '<|end|>' → logprob: -9.553630828857422
    7. ' print' → logprob: -9.678630828857422
    8. '        
' → logprob: -10.178630828857422
    9. ' 
' → logprob: -10.553630828857422
    10. '   
' → logprob: -10.678630828857422

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06555478274822235
    2. '    
' → logprob: -3.1905548572540283
    3. 'print' → logprob: -4.440554618835449
    4. ' print' → logprob: -5.065554618835449
    5. '
' → logprob: -5.940554618835449
    6. ' 
' → logprob: -7.315554618835449
    7. '  
' → logprob: -7.440554618835449
    8. '   
' → logprob: -9.31555461883545
    9. '<|end|>' → logprob: -9.31555461883545
    10. '     
' → logprob: -10.31555461883545

Token 143: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5479005575180054
    2. 'print' (adapté à ' print') → logprob: -1.2979005575180054
    3. ' print' → logprob: -1.9229005575180054
    4. '    
' → logprob: -6.797900676727295
    5. ' result' → logprob: -7.422900676727295
    6. 'result' → logprob: -7.547900676727295
    7. '
' → logprob: -9.297900199890137
    8. ' 
' → logprob: -10.297900199890137
    9. '```' → logprob: -10.297900199890137
    10. 'count' → logprob: -10.922900199890137

Token 144: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0004402055055834353
    2. '(' → logprob: -7.7504401206970215
    3. 'count' → logprob: -11.75044059753418
    4. '(f' → logprob: -14.12544059753418
    5. '((' → logprob: -15.25044059753418
    6. '(max' → logprob: -15.87544059753418
    7. '(c' → logprob: -16.12544059753418
    8. '(sum' → logprob: -16.25044059753418
    9. ' (' → logprob: -16.50044059753418
    10. '(pow' → logprob: -16.87544059753418

Token 145: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.375
    3. '_p' → logprob: -16.625
    4. ')_' → logprob: -16.75
    5. ')' → logprob: -17.0
    6. 'pairs' → logprob: -17.25
    7. '_parts' → logprob: -17.5
    8. '_ranges' → logprob: -17.625
    9. '```' → logprob: -18.375
    10. '_particles' → logprob: -18.625

Token 146: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0001818489981815219
    2. '(' → logprob: -8.625182151794434
    3. ')' → logprob: -13.375182151794434
    4. ' (' → logprob: -15.625182151794434
    5. ')(' → logprob: -15.625182151794434
    6. '((' → logprob: -15.750182151794434
    7. '(
' → logprob: -16.000181198120117
    8. '(`' → logprob: -16.750181198120117
    9. '(

' → logprob: -17.000181198120117
    10. '```' → logprob: -18.125181198120117

Token 147: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03805491328239441
    2. ')' → logprob: -3.288054943084717
    3. '()))' → logprob: -12.038054466247559
    4. '())' → logprob: -12.663054466247559
    5. ')))' → logprob: -13.163054466247559
    6. '(' → logprob: -13.788054466247559
    7. '))
' → logprob: -14.663054466247559
    8. ' ))' → logprob: -14.913054466247559
    9. '(L' → logprob: -15.663054466247559
    10. '()' → logprob: -15.788054466247559


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 145
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 126
Précision stricte (1ère position): 38.62%
Précision adaptée (1ère position): 41.38%
Précision (top 10): 86.90%
================================================================================
