================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    total_scores = []
    for _ in range(n):
        scores = list(map(int, input().split()))
        total_scores.append(sum(scores))
    print(max(total_scores), min(total_scores))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9284094572067261
    2. 'u' → logprob: -1.553409457206726
    3. '=' → logprob: -2.1784095764160156
    4. '+' → logprob: -2.3034095764160156
    5. 'o' → logprob: -2.8034095764160156
    6. '   ' → logprob: -3.5534095764160156
    7. '_' → logprob: -4.178409576416016
    8. '.' → logprob: -4.428409576416016
    9. '%' → logprob: -4.553409576416016
    10. ' =' → logprob: -4.928409576416016

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5641322135925293
    2. ' input' → logprob: -0.9391322135925293
    3. 'input' → logprob: -3.6891322135925293
    4. 'int' → logprob: -5.189132213592529
    5. ' ' → logprob: -5.439132213592529
    6. ' n' → logprob: -5.439132213592529
    7. 'n' → logprob: -8.439132690429688
    8. ' i' → logprob: -8.564132690429688
    9. ' a' → logprob: -9.689132690429688
    10. ' randint' → logprob: -9.689132690429688

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020951840560883284
    2. '(input' → logprob: -6.2520952224731445
    3. ' (' → logprob: -9.877095222473145
    4. '()' → logprob: -10.627095222473145
    5. '(
' → logprob: -11.002095222473145
    6. '```' → logprob: -11.002095222473145
    7. 'input' → logprob: -11.377095222473145
    8. ')' → logprob: -11.877095222473145
    9. ''' → logprob: -12.002095222473145
    10. '('' → logprob: -12.252095222473145

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46396809816360474
    2. ')' → logprob: -1.71396803855896
    3. '()' → logprob: -1.96396803855896
    4. '())' → logprob: -3.33896803855896
    5. '))' → logprob: -5.088968276977539
    6. '('' → logprob: -5.588968276977539
    7. ' ' → logprob: -6.713968276977539
    8. '()))' → logprob: -6.713968276977539
    9. '(
' → logprob: -7.588968276977539
    10. ''' → logprob: -8.213968276977539

Token 9: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8356913328170776
    2. ' ' → logprob: -1.2106913328170776
    3. '   ' → logprob: -2.460691452026367
    4. ':' → logprob: -3.335691452026367
    5. ')' → logprob: -3.460691452026367
    6. 'if' → logprob: -3.460691452026367
    7. '<|end|>' → logprob: -3.460691452026367
    8. '    ' → logprob: -3.835691452026367
    9. '  ' → logprob: -5.085691452026367
    10. ',' → logprob: -5.335691452026367

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.011614441871643
    2. '   ' → logprob: -1.261614441871643
    3. '<|end|>' → logprob: -2.2616143226623535
    4. ')' → logprob: -2.3866143226623535
    5. ' if' → logprob: -2.5116143226623535
    6. '    ' → logprob: -3.5116143226623535
    7. '  ' → logprob: -4.5116143226623535
    8. ' )' → logprob: -4.5116143226623535
    9. 'if' (adapté à ' if') → logprob: -5.1366143226623535
    10. '    
' → logprob: -6.1366143226623535

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.001641738461330533
    2. ' ' → logprob: -7.126641750335693
    3. 'n' → logprob: -7.376641750335693
    4. ' not' → logprob: -8.501641273498535
    5. ' ' → logprob: -12.126641273498535
    6. '  ' → logprob: -13.751641273498535
    7. 'not' → logprob: -14.126641273498535
    8. '	n' → logprob: -16.12664222717285
    9. '(n' → logprob: -16.12664222717285
    10. ')' → logprob: -16.37664222717285

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31525734066963196
    2. ' >' → logprob: -1.8152573108673096
    3. ' <=' → logprob: -2.8152573108673096
    4. ' <' → logprob: -4.065257549285889
    5. '==' → logprob: -4.440257549285889
    6. ' ' → logprob: -4.440257549285889
    7. '>' → logprob: -5.690257549285889
    8. ')' → logprob: -7.065257549285889
    9. '<|end|>' → logprob: -7.190257549285889
    10. '  ' → logprob: -7.815257549285889

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029752222821116447
    2. '0' → logprob: -3.529752254486084
    3. '1' → logprob: -15.154751777648926
    4. '  ' → logprob: -15.154751777648926
    5. ')' → logprob: -15.217251777648926
    6. ' ' → logprob: -15.217251777648926
    7. ' )' → logprob: -16.029752731323242
    8. ' EOF' → logprob: -16.842252731323242
    9. ' -' → logprob: -17.029752731323242
    10. '<|end|>' → logprob: -17.279752731323242

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019584903493523598
    2. ' ' → logprob: -6.25195837020874
    3. '-' → logprob: -10.626958847045898
    4. ' -' → logprob: -13.126958847045898
    5. '1' → logprob: -13.501958847045898
    6. '   ' → logprob: -14.376958847045898
    7. '42' → logprob: -14.876958847045898
    8. '  ' → logprob: -15.126958847045898
    9. '```' → logprob: -15.126958847045898
    10. '4' → logprob: -15.501958847045898

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.598092684522271e-05
    2. ':
' → logprob: -10.500056266784668
    3. ' :' → logprob: -11.250056266784668
    4. '   ' → logprob: -12.500056266784668
    5. ':return' → logprob: -12.625056266784668
    6. '):' → logprob: -12.750056266784668
    7. ':\' → logprob: -13.250056266784668
    8. '       ' → logprob: -13.500056266784668
    9. '':' → logprob: -14.625056266784668
    10. '():' → logprob: -15.000056266784668

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002336758654564619
    2. '   ' → logprob: -6.8773369789123535
    3. ' break' → logprob: -6.8773369789123535
    4. '\n' → logprob: -9.127336502075195
    5. ':' → logprob: -10.502336502075195
    6. '    ' → logprob: -10.502336502075195
    7. '	break' → logprob: -10.752336502075195
    8. '\' → logprob: -11.252336502075195
    9. '      ' → logprob: -11.377336502075195
    10. ' ' → logprob: -11.627336502075195

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.011935565620660782
    2. '       ' → logprob: -4.761935710906982
    3. 'break' (adapté à ' break') → logprob: -5.886935710906982
    4. '	break' → logprob: -8.511935234069824
    5. '   ' → logprob: -8.886935234069824
    6. '\n' → logprob: -9.386935234069824
    7. '_break' → logprob: -10.011935234069824
    8. ' \' → logprob: -11.136935234069824
    9. '    ' → logprob: -11.511935234069824
    10. '```' → logprob: -11.761935234069824

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2311087846755981
    2. '\n' → logprob: -1.2311087846755981
    3. '
' → logprob: -2.2311086654663086
    4. '    
' → logprob: -2.4811086654663086
    5. '<|end|>' → logprob: -2.4811086654663086
    6. ':' → logprob: -2.8561086654663086
    7. '```' → logprob: -3.6061086654663086
    8. '\' → logprob: -3.8561086654663086
    9. ')' → logprob: -5.106108665466309
    10. '#' → logprob: -5.356108665466309

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09025148302316666
    2. '<|end|>' → logprob: -3.7152514457702637
    3. '    
' → logprob: -3.9652514457702637
    4. '\n' → logprob: -4.590251445770264
    5. '```' → logprob: -4.715251445770264
    6. '#' → logprob: -5.465251445770264
    7. ')' → logprob: -5.465251445770264
    8. ':' → logprob: -5.715251445770264
    9. '
' → logprob: -5.840251445770264
    10. 'n' → logprob: -6.215251445770264

Token 20: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427201509475708
    2. ' ' → logprob: -1.9677201509475708
    3. 'print' → logprob: -3.0927200317382812
    4. '    ' → logprob: -3.3427200317382812
    5. ')' → logprob: -3.9677200317382812
    6. '       ' → logprob: -4.592720031738281
    7. '#' → logprob: -5.592720031738281
    8. '\' → logprob: -5.717720031738281
    9. ',' → logprob: -5.842720031738281
    10. '<|end|>' → logprob: -5.842720031738281

Token 21: '_scores' (ID: 63345)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0923602357506752
    2. '+' → logprob: -3.467360258102417
    3. ' ' → logprob: -3.842360258102417
    4. ' +' → logprob: -4.217360019683838
    5. ' =' → logprob: -4.842360019683838
    6. '_' → logprob: -4.967360019683838
    7. '+=' → logprob: -6.342360019683838
    8. '<|end|>' → logprob: -6.717360019683838
    9. '=' → logprob: -7.217360019683838
    10. '    ' → logprob: -7.342360019683838

Token 22: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6564581394195557
    2. '[' → logprob: -0.7814581394195557
    3. '+' → logprob: -4.656457901000977
    4. '+=' → logprob: -5.156457901000977
    5. '   ' → logprob: -5.906457901000977
    6. ' +' → logprob: -6.281457901000977
    7. ' =' → logprob: -6.656457901000977
    8. ' ' → logprob: -7.656457901000977
    9. '=' → logprob: -7.781457901000977
    10. ')' → logprob: -7.781457901000977

Token 23: ' []
' (ID: 8911)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34870344400405884
    2. '0' → logprob: -1.223703384399414
    3. ' []' → logprob: -9.098703384399414
    4. ' sum' → logprob: -9.348703384399414
    5. '[]' → logprob: -10.598703384399414
    6. 'sum' → logprob: -10.973703384399414
    7. ' n' → logprob: -12.098703384399414
    8. ' [' → logprob: -13.223703384399414
    9. '    ' → logprob: -13.598703384399414
    10. '  ' → logprob: -13.598703384399414

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17267544567584991
    2. '<|end|>' → logprob: -2.547675371170044
    3. ' ' → logprob: -3.297675371170044
    4. '    ' → logprob: -3.797675371170044
    5. '    
' → logprob: -5.047675609588623
    6. ' 
' → logprob: -5.297675609588623
    7. '       ' → logprob: -6.172675609588623
    8. '
' → logprob: -6.547675609588623
    9. '  ' → logprob: -7.047675609588623
    10. 'n' → logprob: -7.047675609588623

Token 25: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.330776572227478
    2. '   ' → logprob: -1.830776572227478
    3. ' for' → logprob: -2.2057766914367676
    4. ' ' → logprob: -5.330776691436768
    5. '    ' → logprob: -5.455776691436768
    6. 't' → logprob: -7.205776691436768
    7. '  ' → logprob: -8.45577621459961
    8. 'i' → logprob: -8.58077621459961
    9. '	for' → logprob: -8.58077621459961
    10. '    
' → logprob: -8.58077621459961

Token 26: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8751525282859802
    2. ' ' → logprob: -1.125152587890625
    3. ' _' → logprob: -1.500152587890625
    4. '_' → logprob: -3.375152587890625
    5. ' ‌' → logprob: -7.125152587890625
    6. 'i' → logprob: -8.500152587890625
    7. ' ▁' → logprob: -9.625152587890625
    8. '  ' → logprob: -9.750152587890625
    9. ' range' → logprob: -10.500152587890625
    10. ' student' → logprob: -10.500152587890625

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03419121354818344
    2. ' ' → logprob: -3.784191131591797
    3. 'in' → logprob: -4.784191131591797
    4. ' i' → logprob: -6.659191131591797
    5. 'i' → logprob: -7.159191131591797
    6. 'n' → logprob: -8.409191131591797
    7. '  ' → logprob: -8.659191131591797
    8. '	in' → logprob: -11.284191131591797
    9. ' n' → logprob: -11.534191131591797
    10. '   ' → logprob: -11.659191131591797

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197945028543472
    2. ' range' → logprob: -2.8119795322418213
    3. 'input' → logprob: -12.686979293823242
    4. '	range' → logprob: -13.061979293823242
    5. '(range' → logprob: -13.936979293823242
    6. 'ran' → logprob: -14.061979293823242
    7. 'rang' → logprob: -14.061979293823242
    8. 'n' → logprob: -14.436979293823242
    9. '[' → logprob: -14.561979293823242
    10. 'r' → logprob: -15.061979293823242

Token 29: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28963562846183777
    2. '(n' → logprob: -1.5396356582641602
    3. ' n' → logprob: -3.66463565826416
    4. ' (' → logprob: -4.66463565826416
    5. ' ' → logprob: -6.91463565826416
    6. 'n' → logprob: -7.78963565826416
    7. ' range' → logprob: -8.28963565826416
    8. '(range' → logprob: -9.28963565826416
    9. ' )' → logprob: -9.53963565826416
    10. '()' → logprob: -9.78963565826416

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01917256973683834
    2. ')' → logprob: -4.019172668457031
    3. ' ):' → logprob: -7.394172668457031
    4. '   ' → logprob: -8.519172668457031
    5. ':' → logprob: -9.144172668457031
    6. '):
' → logprob: -9.769172668457031
    7. ' )' → logprob: -10.519172668457031
    8. '():' → logprob: -12.894172668457031
    9. '+' → logprob: -13.644172668457031
    10. '       ' → logprob: -13.769172668457031

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22593970596790314
    2. '    ' → logprob: -2.1009397506713867
    3. ' ' → logprob: -2.7259397506713867
    4. '<|end|>' → logprob: -4.975939750671387
    5. '   ' → logprob: -5.475939750671387
    6. '        ' → logprob: -6.725939750671387
    7. '     ' → logprob: -8.225939750671387
    8. ' s' → logprob: -8.225939750671387
    9. '      ' → logprob: -8.725939750671387
    10. ' ' → logprob: -9.225939750671387

Token 32: ' scores' (ID: 18923)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.7133646011352539
    2. '   ' → logprob: -1.713364601135254
    3. ' s' → logprob: -2.088364601135254
    4. ' scores' → logprob: -2.588364601135254
    5. '    ' → logprob: -3.338364601135254
    6. ' player' → logprob: -3.338364601135254
    7. ' name' → logprob: -4.088364601135254
    8. 'score' → logprob: -4.338364601135254
    9. ' line' → logprob: -4.588364601135254
    10. ' ' → logprob: -5.588364601135254

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017127806320786476
    2. '=' → logprob: -4.767127990722656
    3. '.append' → logprob: -5.017127990722656
    4. '.' → logprob: -6.392127990722656
    5. '[' → logprob: -9.767127990722656
    6. '.extend' → logprob: -10.267127990722656
    7. ',' → logprob: -10.892127990722656
    8. ')' → logprob: -11.017127990722656
    9. ' .' → logprob: -11.142127990722656
    10. ' ' → logprob: -12.392127990722656

Token 34: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.009933745488524437
    2. 'list' → logprob: -4.634933948516846
    3. ' [' → logprob: -8.884933471679688
    4. ' ' → logprob: -11.509933471679688
    5. ' []' → logprob: -11.509933471679688
    6. '[' → logprob: -12.009933471679688
    7. ' input' → logprob: -12.384933471679688
    8. '	list' → logprob: -12.884933471679688
    9. '[list' → logprob: -13.259933471679688
    10. '[]' → logprob: -13.509933471679688

Token 35: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6996339559555054
    2. '(map' → logprob: -0.8246339559555054
    3. '(input' → logprob: -3.074634075164795
    4. '(int' → logprob: -4.074634075164795
    5. '()' → logprob: -6.824634075164795
    6. '(range' → logprob: -8.199633598327637
    7. '(eval' → logprob: -9.199633598327637
    8. '<|end|>' → logprob: -10.324633598327637
    9. '(filter' → logprob: -11.199633598327637
    10. '(data' → logprob: -11.324633598327637

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00040755473310127854
    2. '(' → logprob: -7.875407695770264
    3. '(input' → logprob: -12.000407218933105
    4. '<int' → logprob: -12.250407218933105
    5. 'int' → logprob: -12.375407218933105
    6. '=int' → logprob: -12.500407218933105
    7. ' int' → logprob: -12.625407218933105
    8. '(lambda' → logprob: -13.125407218933105
    9. '(str' → logprob: -13.375407218933105
    10. ' (' → logprob: -14.625407218933105

Token 37: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031100958585739136
    2. 'input' → logprob: -6.503109931945801
    3. '(' → logprob: -6.628109931945801
    4. ')' → logprob: -8.7531099319458
    5. ',input' → logprob: -9.1281099319458
    6. '=input' → logprob: -12.5031099319458
    7. ' input' → logprob: -12.6281099319458
    8. '(
' → logprob: -12.6281099319458
    9. '))' → logprob: -13.1281099319458
    10. '[input' → logprob: -13.8781099319458

Token 38: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47417184710502625
    2. ' input' → logprob: -0.9741718769073486
    3. '(input' → logprob: -9.72417163848877
    4. ')' → logprob: -10.97417163848877
    5. ',input' → logprob: -11.72417163848877
    6. '=input' → logprob: -12.34917163848877
    7. '	input' → logprob: -12.97417163848877
    8. ' )' → logprob: -13.34917163848877
    9. '<input' → logprob: -14.97417163848877
    10. '<|end|>' → logprob: -15.09917163848877

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003192685777321458
    2. '()' → logprob: -5.753192901611328
    3. '()))' → logprob: -12.253192901611328
    4. '(' → logprob: -12.628192901611328
    5. ' ().' → logprob: -13.128192901611328
    6. '())' → logprob: -13.128192901611328
    7. '()
' → logprob: -14.128192901611328
    8. '())))' → logprob: -14.628192901611328
    9. ')' → logprob: -15.628192901611328
    10. ' ()' → logprob: -15.628192901611328

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004115561489015818
    2. 'strip' → logprob: -5.504115581512451
    3. 'rstrip' → logprob: -10.379115104675293
    4. ' split' → logprob: -12.879115104675293
    5. ')' → logprob: -13.254115104675293
    6. '(split' → logprob: -13.379115104675293
    7. 'replace' → logprob: -17.37911605834961
    8. 'read' → logprob: -17.37911605834961
    9. '))' → logprob: -17.50411605834961
    10. '.split' → logprob: -17.62911605834961

Token 41: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010212142020463943
    2. '()' → logprob: -5.135211944580078
    3. '())' → logprob: -5.760211944580078
    4. '()))
' → logprob: -8.010211944580078
    5. '(' → logprob: -8.135211944580078
    6. '))' → logprob: -8.385211944580078
    7. '())))' → logprob: -8.385211944580078
    8. '()))

' → logprob: -11.510211944580078
    9. '()));' → logprob: -11.510211944580078
    10. '()))
' → logprob: -13.010211944580078

Token 42: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14283399283885956
    2. '       ' → logprob: -2.267833948135376
    3. ')' → logprob: -3.767833948135376
    4. '
' → logprob: -5.517834186553955
    5. '    
' → logprob: -7.017834186553955
    6. '        
' → logprob: -8.017833709716797
    7. '<|end|>' → logprob: -8.142833709716797
    8. ')
' → logprob: -8.267833709716797
    9. '    ' → logprob: -9.392833709716797
    10. ',' → logprob: -9.767833709716797

Token 43: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7687438130378723
    2. 'total' (adapté à ' total') → logprob: -1.0187437534332275
    3. '   ' → logprob: -1.8937437534332275
    4. '       ' → logprob: -4.518743991851807
    5. 'sum' → logprob: -5.268743991851807
    6. 'average' → logprob: -6.268743991851807
    7. '    ' → logprob: -6.893743991851807
    8. ')' → logprob: -6.893743991851807
    9. ' sum' → logprob: -7.018743991851807
    10. ' if' → logprob: -7.393743991851807

Token 44: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.00010592726175673306
    2. '_score' → logprob: -9.500105857849121
    3. '_' → logprob: -11.250105857849121
    4. 'scores' → logprob: -11.875105857849121
    5. '_total' → logprob: -12.000105857849121
    6. '_s' → logprob: -13.625105857849121
    7. '_sum' → logprob: -13.875105857849121
    8. ' _' → logprob: -15.125105857849121
    9. ')_' → logprob: -15.500105857849121
    10. '_results' → logprob: -15.625105857849121

Token 45: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06671233475208282
    2. '.extend' → logprob: -3.3167123794555664
    3. '.' → logprob: -3.5667123794555664
    4. '.ap' → logprob: -12.566712379455566
    5. '.ext' → logprob: -12.816712379455566
    6. '.=' → logprob: -13.316712379455566
    7. '.add' → logprob: -13.566712379455566
    8. ' .' → logprob: -13.566712379455566
    9. '.setdefault' → logprob: -13.691712379455566
    10. '.app' → logprob: -13.816712379455566

Token 46: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.02520890347659588
    2. '(scores' → logprob: -4.275208950042725
    3. '(' → logprob: -4.525208950042725
    4. '(score' → logprob: -9.650208473205566
    5. '(max' → logprob: -10.150208473205566
    6. 'sum' → logprob: -11.025208473205566
    7. '(tuple' → logprob: -11.650208473205566
    8. '((' → logprob: -11.900208473205566
    9. ' (' → logprob: -12.775208473205566
    10. '(min' → logprob: -12.900208473205566

Token 47: '(scores' (ID: 154090)
  Prédit: '(scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.0019374389667063951
    2. '(' → logprob: -6.251937389373779
    3. '(score' → logprob: -12.001937866210938
    4. ')' → logprob: -14.376937866210938
    5. 'scores' → logprob: -14.376937866210938
    6. '(s' → logprob: -14.626937866210938
    7. '(tokens' → logprob: -15.251937866210938
    8. ' (' → logprob: -16.001937866210938
    9. '(ids' → logprob: -16.251937866210938
    10. '(
' → logprob: -16.376937866210938

Token 48: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01841025985777378
    2. ')' → logprob: -4.2684102058410645
    3. '()))' → logprob: -5.6434102058410645
    4. '))
' → logprob: -8.018410682678223
    5. '())' → logprob: -8.893410682678223
    6. '   ' → logprob: -9.518410682678223
    7. ')))' → logprob: -9.643410682678223
    8. '(' → logprob: -10.893410682678223
    9. ' ))' → logprob: -11.018410682678223
    10. '       ' → logprob: -11.143410682678223

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0416247621178627
    2. '    
' → logprob: -4.041624546051025
    3. '<|end|>' → logprob: -4.291624546051025
    4. '
' → logprob: -4.916624546051025
    5. ')' → logprob: -7.291624546051025
    6. 'print' → logprob: -7.541624546051025
    7. '```' → logprob: -8.416625022888184
    8. '\n' → logprob: -8.916625022888184
    9. '  
' → logprob: -9.291625022888184
    10. '#' → logprob: -9.666625022888184

Token 50: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46962952613830566
    2. '   ' → logprob: -1.2196295261383057
    3. '    
' → logprob: -2.5946295261383057
    4. '```' → logprob: -6.719629287719727
    5. 'max' → logprob: -7.469629287719727
    6. 'total' → logprob: -7.594629287719727
    7. '\n' → logprob: -7.969629287719727
    8. '
' → logprob: -8.094629287719727
    9. '

' → logprob: -8.344629287719727
    10. ' 
' → logprob: -8.344629287719727

Token 51: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04461195319890976
    2. '(max' → logprob: -3.294611930847168
    3. '(sum' → logprob: -5.044611930847168
    4. '(min' → logprob: -9.919611930847168
    5. '(total' → logprob: -10.669611930847168
    6. '('' → logprob: -10.794611930847168
    7. '(
' → logprob: -12.544611930847168
    8. '()' → logprob: -12.544611930847168
    9. '(sorted' → logprob: -13.169611930847168
    10. '("' → logprob: -13.919611930847168

Token 52: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0004311460361350328
    2. '(' → logprob: -7.750431060791016
    3. 'total' → logprob: -15.500431060791016
    4. ' total' → logprob: -16.125431060791016
    5. ' (' → logprob: -16.500431060791016
    6. ',total' → logprob: -17.125431060791016
    7. '(max' → logprob: -17.750431060791016
    8. '(t' → logprob: -17.875431060791016
    9. ')' → logprob: -18.750431060791016
    10. '$total' → logprob: -19.500431060791016

Token 53: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -1.5048530030981055e-06
    2. 'scores' → logprob: -14.625001907348633
    3. '_' → logprob: -14.750001907348633
    4. '_score' → logprob: -14.750001907348633
    5. '(scores' → logprob: -16.250001907348633
    6. '_total' → logprob: -16.750001907348633
    7. '_s' → logprob: -17.750001907348633
    8. ')' → logprob: -18.125001907348633
    9. '_sc' → logprob: -18.375001907348633
    10. ')_' → logprob: -18.500001907348633

Token 54: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10036464035511017
    2. ')' → logprob: -2.3503646850585938
    3. ')))' → logprob: -9.225364685058594
    4. ' ))' → logprob: -10.100364685058594
    5. ' )' → logprob: -11.850364685058594
    6. '()))' → logprob: -12.475364685058594
    7. '))
' → logprob: -12.600364685058594
    8. '())' → logprob: -13.600364685058594
    9. '()' → logprob: -14.225364685058594
    10. ')}' → logprob: -15.100364685058594

Token 55: ' min' (ID: 1349)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6201547384262085
    2. 'min' → logprob: -1.6201547384262085
    3. ' total' → logprob: -1.6201547384262085
    4. ' min' → logprob: -2.745154857635498
    5. 'len' → logprob: -7.620154857635498
    6. ' ' → logprob: -7.870154857635498
    7. ' len' → logprob: -8.37015438079834
    8. ')' → logprob: -8.49515438079834
    9. 'max' → logprob: -8.62015438079834
    10. '"' → logprob: -8.99515438079834

Token 56: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.002517873188480735
    2. '(' → logprob: -6.0025177001953125
    3. ' (' → logprob: -10.377517700195312
    4. '(max' → logprob: -11.502517700195312
    5. '(parent' → logprob: -15.127517700195312
    6. '(min' → logprob: -15.127517700195312
    7. '(top' → logprob: -17.002517700195312
    8. '(target' → logprob: -17.127517700195312
    9. 'total' → logprob: -17.252517700195312
    10. '(t' → logprob: -17.377517700195312

Token 57: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -4.024604277219623e-05
    2. '(total' → logprob: -10.375040054321289
    3. '(scores' → logprob: -11.750040054321289
    4. 'scores' → logprob: -14.625040054321289
    5. 'total' → logprob: -15.500040054321289
    6. 'Scores' → logprob: -15.875040054321289
    7. '(' → logprob: -16.00004005432129
    8. '(_' → logprob: -16.37504005432129
    9. '_' → logprob: -16.75004005432129
    10. ')' → logprob: -17.87504005432129

Token 58: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0141702089458704
    2. '))' → logprob: -4.264170169830322
    3. ')))' → logprob: -12.26417064666748
    4. '())' → logprob: -13.88917064666748
    5. ' )' → logprob: -15.13917064666748
    6. '`)' → logprob: -15.38917064666748
    7. '()' → logprob: -15.88917064666748
    8. ')}' → logprob: -16.139169692993164
    9. '})' → logprob: -16.514169692993164
    10. ')")' → logprob: -16.639169692993164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 56
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 48.21%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 85.71%
================================================================================
