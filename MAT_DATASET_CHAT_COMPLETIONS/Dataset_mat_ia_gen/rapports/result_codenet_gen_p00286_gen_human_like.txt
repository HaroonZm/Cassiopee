================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

N, K = map(int, input().split())
parts = {}
for _ in range(K):
    line = input().split()
    name = line[0]
    h = int(line[1])
    g = [list(map(int, input().split())) for __ in range(h - 1)]
    # Build permutation of size N from this part
    perm = list(range(N))
    for row in range(h - 1):
        for c in range(N - 1):
            if g[row][c] == 1:
                perm[c], perm[c+1] = perm[c+1], perm[c]
    # Invert perm to get mapping from top to bottom
    # Actually we want: start from top i, follow perm to get bottom
    # Here perm[i] = position after this part for vertical line i (zero-based)
    # But the way we built perm is by swapping perm[c] and perm[c+1]
    # So it is final mapping from bottom to top? Actually perm is the bottom order.
    # To get the image of i, we just use perm[i].
    parts[name] = perm

E = int(input())
expressions = [input() for _ in range(E)]

# Parsing the expression language:
# expression := repetition | term + expression | term
# repetition := number ( expression )
# term := part_name | repetition
# number is integer >= 1
# part_name is a letter (A-Z)

# We parse and generate the overall permutation for each expression.

# Permutations are lists of length N, mapping line i (top) to line perm[i] (bottom).
# To combine permutations P and Q (concatenate parts P followed by Q), the resulting permutation R is R[i] = Q[P[i]]

class Parser:
    def __init__(self, s):
        self.s = s
        self.pos = 0
        self.len = len(s)

    def peek(self):
        if self.pos < self.len:
            return self.s[self.pos]
        return ''

    def eat(self, c):
        if self.peek() == c:
            self.pos += 1
            return True
        return False

    def parse_number(self):
        start = self.pos
        while self.peek().isdigit():
            self.pos += 1
        return int(self.s[start:self.pos])

    def parse_part(self):
        # parse either repetition: number(expr) or part_name
        if self.peek().isdigit():
            n = self.parse_number()
            assert self.eat('(')
            inner = self.parse_expr()
            assert self.eat(')')
            return self.repeat_permutation(inner, n)
        else:
            # part name is a single letter uppercase
            c = self.peek()
            assert 'A' <= c <= 'Z'
            self.pos += 1
            return parts[c]

    def parse_expr(self):
        # parse a sequence connected by '+'
        perm = self.parse_part()
        while self.eat('+'):
            right = self.parse_part()
            perm = self.combine(perm, right)
        return perm

    def combine(self, p1, p2):
        # compose two permutations: p1 followed by p2
        # i mapped by p1 then by p2: res[i] = p2[p1[i]]
        return [p2[p1[i]] for i in range(N)]

    def repeat_permutation(self, p, m):
        # exponentiate permutation p to power m
        # binary exponentiation
        res = list(range(N))
        base = p
        while m > 0:
            if m & 1:
                res = self.combine(res, base)
            base = self.combine(base, base)
            m >>= 1
        return res

for expr in expressions:
    parser = Parser(expr)
    perm = parser.parse_expr()
    print(*[x+1 for x in perm])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.288149118423462
    2. 't' → logprob: -1.413149118423462
    3. 'default' → logprob: -2.038149118423462
    4. '_' → logprob: -2.538149118423462
    5. 's' → logprob: -2.913149118423462
    6. 'encoding' → logprob: -3.663149118423462
    7. 'limit' → logprob: -4.038148880004883
    8. '_version' → logprob: -4.288148880004883
    9. 'rl' → logprob: -4.538148880004883
    10. 'sys' → logprob: -4.538148880004883

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 't' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.47616830468177795
    2. '_limit' → logprob: -0.9761682748794556
    3. '_depth' → logprob: -6.351168155670166
    4. 'depth' → logprob: -8.601168632507324
    5. ' limit' → logprob: -10.101168632507324
    6. 'lim' → logprob: -10.476168632507324
    7. '_stack' → logprob: -10.851168632507324
    8. '(limit' → logprob: -11.851168632507324
    9. '_rate' → logprob: -12.101168632507324
    10. '_lim' → logprob: -12.226168632507324

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8550976164988242e-05
    2. '(
' → logprob: -11.750018119812012
    3. ' (' → logprob: -12.375018119812012
    4. '(

' → logprob: -12.375018119812012
    5. '```' → logprob: -14.625018119812012
    6. '("("' → logprob: -14.750018119812012
    7. '((' → logprob: -14.750018119812012
    8. '(.' → logprob: -15.000018119812012
    9. '('' → logprob: -16.000019073486328
    10. '(
' → logprob: -16.375019073486328

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023612022399902
    2. '100' → logprob: -1.910236120223999
    3. ' ' → logprob: -12.660236358642578
    4. '500' → logprob: -12.785236358642578
    5. '300' → logprob: -13.285236358642578
    6. '999' → logprob: -13.660236358642578
    7. '1' → logprob: -13.910236358642578
    8. '150' → logprob: -14.285236358642578
    9. '200' → logprob: -14.785236358642578
    10. '(' → logprob: -15.160236358642578

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007129970006644726
    2. '00' → logprob: -5.757130146026611
    3. '000' → logprob: -5.757130146026611
    4. '4' → logprob: -7.382130146026611
    5. '6' → logprob: -9.007129669189453
    6. '5' → logprob: -11.507129669189453
    7. '```' → logprob: -12.007129669189453
    8. ')' → logprob: -12.257129669189453
    9. '3' → logprob: -12.382129669189453
    10. '**' → logprob: -12.382129669189453

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031121151987463236
    2. '9' → logprob: -6.003112316131592
    3. '8' → logprob: -7.503112316131592
    4. '6' → logprob: -9.378111839294434
    5. ' ' → logprob: -16.25311279296875
    6. '```' → logprob: -16.37811279296875
    7. ')' → logprob: -18.50311279296875
    8. '(' → logprob: -19.62811279296875
    9. '``' → logprob: -20.00311279296875
    10. '}' → logprob: -20.75311279296875

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7772374749183655
    2. ' =' → logprob: -0.7772374749183655
    3. ',' → logprob: -3.2772374153137207
    4. '=' → logprob: -3.4022374153137207
    5. ' ,' → logprob: -5.527237415313721
    6. '.' → logprob: -6.277237415313721
    7. '  ' → logprob: -6.777237415313721
    8. ')' → logprob: -7.027237415313721
    9. ' )' → logprob: -7.777237415313721
    10. '[' → logprob: -8.527237892150879

Token 15: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.2802035808563232
    2. ' M' → logprob: -1.5302035808563232
    3. 'K' → logprob: -1.6552035808563232
    4. ' K' → logprob: -2.0302035808563232
    5. '=' → logprob: -2.4052035808563232
    6. 'input' → logprob: -3.4052035808563232
    7. ' ' → logprob: -3.9052035808563232
    8. ' =' → logprob: -4.405203819274902
    9. '=int' → logprob: -5.155203819274902
    10. 'int' → logprob: -5.280203819274902

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890069484710693
    2. '=' → logprob: -2.5789008140563965
    3. ',' → logprob: -11.828900337219238
    4. '=input' → logprob: -12.953900337219238
    5. ' ' → logprob: -14.453900337219238
    6. '=int' → logprob: -15.453900337219238
    7. ' =
' → logprob: -16.078901290893555
    8. '=sys' → logprob: -16.203901290893555
    9. ')' → logprob: -16.828901290893555
    10. '=list' → logprob: -16.953901290893555

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1602558046579361
    2. 'map' → logprob: -1.910255789756775
    3. ' ' → logprob: -11.035255432128906
    4. ' input' → logprob: -11.910255432128906
    5. ' list' → logprob: -13.035255432128906
    6. 'int' → logprob: -13.035255432128906
    7. 'input' → logprob: -13.035255432128906
    8. ' int' → logprob: -14.410255432128906
    9. 'list' → logprob: -14.660255432128906
    10. '10' → logprob: -14.785255432128906

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2604331374168396
    2. '(' → logprob: -1.5104331970214844
    3. '(str' → logprob: -5.010433197021484
    4. '(input' → logprob: -6.635433197021484
    5. '(lambda' → logprob: -7.885433197021484
    6. '(list' → logprob: -10.385433197021484
    7. '(tuple' → logprob: -10.635433197021484
    8. '(len' → logprob: -11.135433197021484
    9. '(eval' → logprob: -11.385433197021484
    10. '(sys' → logprob: -12.260433197021484

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11237578839063644
    2. '(sys' → logprob: -2.3623757362365723
    3. '(' → logprob: -4.862375736236572
    4. 'input' → logprob: -6.487375736236572
    5. ',input' → logprob: -6.612375736236572
    6. ',' → logprob: -6.862375736236572
    7. ')' → logprob: -7.987375736236572
    8. 'sys' → logprob: -10.73737621307373
    9. ' input' → logprob: -10.86237621307373
    10. '(stdin' → logprob: -11.23737621307373

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25193557143211365
    2. 'input' → logprob: -1.501935601234436
    3. ' sys' → logprob: -12.251935958862305
    4. 'sys' → logprob: -13.751935958862305
    5. '(input' → logprob: -15.001935958862305
    6. ' ' → logprob: -16.001935958862305
    7. ')' → logprob: -16.126935958862305
    8. ',input' → logprob: -16.626935958862305
    9. '=input' → logprob: -17.001935958862305
    10. '	input' → logprob: -18.126935958862305

Token 21: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5062817931175232
    2. '().' → logprob: -1.006281852722168
    3. '()' → logprob: -3.506281852722168
    4. '(' → logprob: -7.506281852722168
    5. '()))' → logprob: -7.881281852722168
    6. ')' → logprob: -8.381281852722168
    7. '());' → logprob: -8.506281852722168
    8. '('' → logprob: -9.131281852722168
    9. '()),' → logprob: -9.881281852722168
    10. '(()' → logprob: -10.881281852722168

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010473522706888616
    2. 'strip' → logprob: -9.250104904174805
    3. 'rstrip' → logprob: -12.125104904174805
    4. ' split' → logprob: -13.000104904174805
    5. ')' → logprob: -14.250104904174805
    6. 'spl' → logprob: -15.750104904174805
    7. '(split' → logprob: -15.875104904174805
    8. 'read' → logprob: -16.750104904174805
    9. ' readline' → logprob: -18.750104904174805
    10. '())' → logprob: -19.000104904174805

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026675403118133545
    2. '))' → logprob: -3.6516754627227783
    3. '())' → logprob: -8.0266752243042
    4. '()' → logprob: -11.2766752243042
    5. '(' → logprob: -11.2766752243042
    6. '`)' → logprob: -12.2766752243042
    7. '),' → logprob: -12.4016752243042
    8. '()))' → logprob: -12.9016752243042
    9. ')))' → logprob: -13.1516752243042
    10. '('' → logprob: -13.2766752243042

Token 24: 'parts' (ID: 34761)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5827129483222961
    2. 'a' → logprob: -1.7077128887176514
    3. 'data' → logprob: -2.4577128887176514
    4. 'arr' → logprob: -3.4577128887176514
    5. ' A' → logprob: -3.5827128887176514
    6. 'dp' → logprob: -3.9577128887176514
    7. 'd' → logprob: -4.2077131271362305
    8. 'array' → logprob: -4.3327131271362305
    9. '
' → logprob: -4.5827131271362305
    10. 'graph' → logprob: -4.9577131271362305

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10929502546787262
    2. '=' → logprob: -2.484295129776001
    3. '_' → logprob: -4.359294891357422
    4. 's' → logprob: -5.734294891357422
    5. '[' → logprob: -6.734294891357422
    6. '_count' → logprob: -7.234294891357422
    7. '_sizes' → logprob: -7.484294891357422
    8. '=[]' → logprob: -7.609294891357422
    9. '_counts' → logprob: -8.234294891357422
    10. ')' → logprob: -8.609294891357422

Token 26: ' {}
' (ID: 11421)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.490634560585022
    2. '[]' → logprob: -1.740634560585022
    3. 'list' → logprob: -1.865634560585022
    4. '[input' → logprob: -1.865634560585022
    5. '[' → logprob: -2.2406344413757324
    6. ' []' → logprob: -2.6156344413757324
    7. '[list' → logprob: -2.8656344413757324
    8. ' list' → logprob: -3.1156344413757324
    9. '[int' → logprob: -5.365634441375732
    10. 'input' → logprob: -6.115634441375732

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005407234653830528
    2. ' for' → logprob: -6.505407333374023
    3. 'parts' → logprob: -6.880407333374023
    4. 'f' → logprob: -7.130407333374023
    5. 'a' → logprob: -7.630407333374023
    6. 'p' → logprob: -8.380407333374023
    7. '[' → logprob: -8.880407333374023
    8. 'count' → logprob: -8.880407333374023
    9. 'def' → logprob: -9.130407333374023
    10. 'd' → logprob: -9.130407333374023

Token 28: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.39811331033706665
    2. ' i' → logprob: -1.2731132507324219
    3. '_' → logprob: -3.523113250732422
    4. ' ' → logprob: -4.023113250732422
    5. 'i' → logprob: -6.898113250732422
    6. '  ' → logprob: -11.398113250732422
    7. ' part' → logprob: -11.898113250732422
    8. ' ' → logprob: -12.648113250732422
    9. '_i' → logprob: -12.898113250732422
    10. ' item' → logprob: -13.023113250732422

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20191796123981476
    2. 'in' → logprob: -1.7019180059432983
    3. ' ' → logprob: -8.57691764831543
    4. 'i' → logprob: -8.95191764831543
    5. 'n' → logprob: -9.57691764831543
    6. 's' → logprob: -11.20191764831543
    7. ',' → logprob: -11.32691764831543
    8. 'range' → logprob: -11.57691764831543
    9. '_' → logprob: -11.82691764831543
    10. 'a' → logprob: -11.82691764831543

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009227732080034912
    2. ' range' → logprob: -7.000922679901123
    3. 'parts' → logprob: -12.250923156738281
    4. 'input' → logprob: -13.500923156738281
    5. '(range' → logprob: -13.625923156738281
    6. 'ra' → logprob: -14.250923156738281
    7. 'rang' → logprob: -14.875923156738281
    8. '[' → logprob: -15.000923156738281
    9. ')' → logprob: -15.125923156738281
    10. 'r' → logprob: -15.250923156738281

Token 31: '(K' (ID: 28797)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.7341066002845764
    2. '(' → logprob: -0.9841066002845764
    3. '(N' → logprob: -2.4841065406799316
    4. ' (' → logprob: -3.7341065406799316
    5. ' range' → logprob: -3.8591065406799316
    6. 'N' → logprob: -4.859106540679932
    7. 'range' → logprob: -5.359106540679932
    8. ' ' → logprob: -5.984106540679932
    9. ' K' → logprob: -6.359106540679932
    10. '(range' → logprob: -8.23410701751709

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026826607063412666
    2. ')' → logprob: -6.877682685852051
    3. '):
' → logprob: -7.252682685852051
    4. ' ):' → logprob: -7.377682685852051
    5. ':' → logprob: -8.75268268585205
    6. '+' → logprob: -8.87768268585205
    7. ',' → logprob: -12.25268268585205
    8. ' )' → logprob: -12.62768268585205
    9. '-' → logprob: -13.50268268585205
    10. '):
' → logprob: -13.87768268585205

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03377928212285042
    2. ' parts' → logprob: -3.5337793827056885
    3. ' line' → logprob: -6.658779144287109
    4. ' part' → logprob: -7.283779144287109
    5. '    ' → logprob: -7.658779144287109
    6. ' input' → logprob: -8.15877914428711
    7. ' s' → logprob: -8.40877914428711
    8. ' token' → logprob: -9.15877914428711
    9. '   ' → logprob: -9.15877914428711
    10. ' ind' → logprob: -9.40877914428711

Token 34: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5341987013816833
    2. ' a' → logprob: -1.9091987609863281
    3. 'x' → logprob: -2.909198760986328
    4. 'p' → logprob: -3.034198760986328
    5. ' p' → logprob: -3.409198760986328
    6. 'l' → logprob: -3.784198760986328
    7. 's' → logprob: -4.409198760986328
    8. ' x' → logprob: -4.409198760986328
    9. 'u' → logprob: -4.659198760986328
    10. 'v' → logprob: -4.784198760986328

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014312525279819965
    2. '=' → logprob: -4.264312744140625
    3. 's' → logprob: -9.139312744140625
    4. '_parts' → logprob: -10.889312744140625
    5. '=line' → logprob: -11.389312744140625
    6. '_tokens' → logprob: -12.264312744140625
    7. '_' → logprob: -13.014312744140625
    8. ' ' → logprob: -13.639312744140625
    9. '_input' → logprob: -14.014312744140625
    10. '=input' → logprob: -14.014312744140625

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.28299957513809204
    2. 'input' → logprob: -1.4079995155334473
    3. 'list' → logprob: -6.907999515533447
    4. ' list' → logprob: -7.157999515533447
    5. 'int' → logprob: -10.657999992370605
    6. ' sys' → logprob: -10.782999992370605
    7. 'sys' → logprob: -11.282999992370605
    8. ' int' → logprob: -12.157999992370605
    9. ' ' → logprob: -13.407999992370605
    10. ' tuple' → logprob: -13.407999992370605

Token 37: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4741104245185852
    2. '().' → logprob: -0.9741104245185852
    3. '())' → logprob: -10.84911060333252
    4. '(' → logprob: -11.84911060333252
    5. '()>' → logprob: -13.97411060333252
    6. '()
' → logprob: -14.09911060333252
    7. '.' → logprob: -14.22411060333252
    8. ')' → logprob: -14.47411060333252
    9. '()<' → logprob: -14.47411060333252
    10. '()

' → logprob: -14.84911060333252

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3162468671798706
    2. 'strip' → logprob: -1.3162468671798706
    3. 'rstrip' → logprob: -5.81624698638916
    4. 'rs' → logprob: -13.69124698638916
    5. ' split' → logprob: -14.94124698638916
    6. 'replace' → logprob: -15.69124698638916
    7. 'spl' → logprob: -16.316246032714844
    8. '(split' → logprob: -16.441246032714844
    9. 'startswith' → logprob: -16.441246032714844
    10. ' strip' → logprob: -16.816246032714844

Token 39: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018576201051473618
    2. '(' → logprob: -4.143576145172119
    3. '('' → logprob: -6.018576145172119
    4. '())' → logprob: -10.643576622009277
    5. '("("' → logprob: -10.643576622009277
    6. '()`' → logprob: -12.018576622009277
    7. '("' → logprob: -12.143576622009277
    8. '(`' → logprob: -12.143576622009277
    9. '```' → logprob: -12.268576622009277
    10. '()]' → logprob: -12.393576622009277

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018661966547369957
    2. ' parts' → logprob: -4.518661975860596
    3. '[' → logprob: -6.393661975860596
    4. '    ' → logprob: -6.768661975860596
    5. 'parts' → logprob: -6.768661975860596
    6. '<|end|>' → logprob: -7.018661975860596
    7. ' ' → logprob: -7.393661975860596
    8. ' for' → logprob: -7.518661975860596
    9. 'tokens' → logprob: -8.643661499023438
    10. 'for' → logprob: -8.768661499023438

Token 41: ' name' (ID: 1308)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -1.5592560768127441
    2. 'p' → logprob: -1.9342560768127441
    3. 'part' → logprob: -1.9342560768127441
    4. ' part' → logprob: -1.9342560768127441
    5. 'key' → logprob: -2.559256076812744
    6. ' key' → logprob: -3.434256076812744
    7. 'name' (adapté à ' name') → logprob: -3.559256076812744
    8. ' parts' → logprob: -3.559256076812744
    9. 'a' → logprob: -3.559256076812744
    10. 'id' → logprob: -3.934256076812744

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006110924296081066
    2. ',' → logprob: -5.631111145019531
    3. '=' → logprob: -6.131111145019531
    4. '_parts' → logprob: -8.631111145019531
    5. '   ' → logprob: -10.256111145019531
    6. '[' → logprob: -10.506111145019531
    7. ' ' → logprob: -10.756111145019531
    8. ')' → logprob: -10.881111145019531
    9. '_' → logprob: -11.131111145019531
    10. ']' → logprob: -11.881111145019531

Token 43: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2519311308860779
    2. 'line' → logprob: -1.5019311904907227
    3. '(line' → logprob: -13.751931190490723
    4. '[line' → logprob: -15.001931190490723
    5. '	line' → logprob: -15.001931190490723
    6. '=line' → logprob: -15.376931190490723
    7. '#line' → logprob: -16.501930236816406
    8. ' ' → logprob: -17.001930236816406
    9. ' int' → logprob: -17.751930236816406
    10. 'int' → logprob: -18.501930236816406

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.580929347255733e-05
    2. '0' → logprob: -11.125016212463379
    3. '1' → logprob: -15.125016212463379
    4. '\[' → logprob: -15.250016212463379
    5. '```' → logprob: -15.625016212463379
    6. ' [' → logprob: -16.125015258789062
    7. '[-' → logprob: -16.625015258789062
    8. '[
' → logprob: -17.875015258789062
    9. '2' → logprob: -18.000015258789062
    10. '[int' → logprob: -19.000015258789062

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024596223374828696
    2. '1' → logprob: -8.375246047973633
    3. ' ' → logprob: -11.375246047973633
    4. '-' → logprob: -13.250246047973633
    5. '2' → logprob: -13.500246047973633
    6. ']' → logprob: -16.000246047973633
    7. '3' → logprob: -16.312746047973633
    8. '[' → logprob: -16.625246047973633
    9. ')' → logprob: -16.750246047973633
    10. ' -' → logprob: -17.375246047973633

Token 46: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012154294381616637
    2. '[' → logprob: -10.500121116638184
    3. ']
' → logprob: -10.500121116638184
    4. ' ]' → logprob: -10.625121116638184
    5. '<|end|>' → logprob: -11.375121116638184
    6. ')' → logprob: -11.625121116638184
    7. '']' → logprob: -12.125121116638184
    8. ',' → logprob: -12.250121116638184
    9. '   ' → logprob: -12.625121116638184
    10. '],' → logprob: -13.625121116638184

Token 47: '   ' (ID: 271)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.30606693029403687
    2. ' count' → logprob: -2.5560669898986816
    3. ',' → logprob: -3.1810669898986816
    4. 'count' → logprob: -3.5560669898986816
    5. '   ' → logprob: -3.6810669898986816
    6. 'parts' → logprob: -3.8060669898986816
    7. ' n' → logprob: -4.806066989898682
    8. ' num' → logprob: -4.806066989898682
    9. ' p' → logprob: -5.306066989898682
    10. ' =' → logprob: -5.306066989898682

Token 48: ' h' (ID: 312)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -1.332724690437317
    2. 'count' → logprob: -1.582724690437317
    3. ' parts' → logprob: -2.2077245712280273
    4. 'size' → logprob: -2.4577245712280273
    5. ' size' → logprob: -3.0827245712280273
    6. ' count' → logprob: -3.0827245712280273
    7. 'num' → logprob: -3.7077245712280273
    8. 'value' → logprob: -3.8327245712280273
    9. 'length' → logprob: -3.9577245712280273
    10. 'cost' → logprob: -4.207724571228027

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7804125547409058
    2. 'ash' → logprob: -1.2804125547409058
    3. ' =' → logprob: -1.5304125547409058
    4. 'eight' → logprob: -4.405412673950195
    5. 'ost' → logprob: -5.030412673950195
    6. '   ' → logprob: -5.030412673950195
    7. 'ashes' → logprob: -5.655412673950195
    8. 'igh' → logprob: -6.280412673950195
    9. '=int' → logprob: -6.530412673950195
    10. 'parts' → logprob: -6.655412673950195

Token 50: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10061929374933243
    2. ' int' → logprob: -2.350619316101074
    3. '[int' → logprob: -7.975619316101074
    4. '(int' → logprob: -11.100619316101074
    5. 'len' → logprob: -11.475619316101074
    6. 'list' → logprob: -11.475619316101074
    7. 'float' → logprob: -11.850619316101074
    8. ' ' → logprob: -12.475619316101074
    9. '<int' → logprob: -12.725619316101074
    10. '1' → logprob: -12.850619316101074

Token 51: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.000913370808120817
    2. '(' → logprob: -7.000913143157959
    3. ')' → logprob: -14.625913619995117
    4. '=line' → logprob: -14.875913619995117
    5. ' line' → logprob: -15.375913619995117
    6. '#line' → logprob: -15.375913619995117
    7. '[line' → logprob: -15.375913619995117
    8. '(
' → logprob: -15.500913619995117
    9. 'line' → logprob: -16.750913619995117
    10. ',line' → logprob: -17.125913619995117

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -11.500014305114746
    3. '1' → logprob: -13.250014305114746
    4. ')' → logprob: -14.125014305114746
    5. ' [' → logprob: -14.500014305114746
    6. '```' → logprob: -14.750014305114746
    7. '[-' → logprob: -14.875014305114746
    8. '][' → logprob: -15.625014305114746
    9. ']' → logprob: -15.750014305114746
    10. '()[' → logprob: -16.250015258789062

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002727793762460351
    2. '2' → logprob: -8.375272750854492
    3. ' ' → logprob: -10.750272750854492
    4. '3' → logprob: -11.500272750854492
    5. '[' → logprob: -13.187772750854492
    6. '0' → logprob: -13.250272750854492
    7. '-' → logprob: -13.562772750854492
    8. '])' → logprob: -13.875272750854492
    9. '4' → logprob: -13.937772750854492
    10. '```' → logprob: -14.375272750854492

Token 54: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006544489413499832
    2. ')' → logprob: -5.256544589996338
    3. '])
' → logprob: -6.756544589996338
    4. ']' → logprob: -9.63154411315918
    5. ''])' → logprob: -11.00654411315918
    6. ' ])' → logprob: -11.13154411315918
    7. ')
' → logprob: -11.25654411315918
    8. ')])' → logprob: -11.88154411315918
    9. '],' → logprob: -12.50654411315918
    10. '   ' → logprob: -12.88154411315918

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.099796362221241
    2. ' parts' → logprob: -2.4747962951660156
    3. 'parts' → logprob: -5.349796295166016
    4. ',' → logprob: -5.849796295166016
    5. '<|end|>' → logprob: -6.599796295166016
    6. ')' → logprob: -7.599796295166016
    7. ' if' → logprob: -7.724796295166016
    8. ' ' → logprob: -8.349796295166016
    9. ' for' → logprob: -8.724796295166016
    10. '  ' → logprob: -9.224796295166016

Token 56: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.061178207397461
    2. ' parts' → logprob: -1.311178207397461
    3. 'parts' → logprob: -1.686178207397461
    4. 'p' → logprob: -3.311178207397461
    5. 'if' → logprob: -3.561178207397461
    6. ' if' → logprob: -3.686178207397461
    7. ')' → logprob: -4.186178207397461
    8. 'count' → logprob: -5.061178207397461
    9. ',' → logprob: -5.061178207397461
    10. 'm' → logprob: -5.186178207397461

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1289021223783493
    2. ' =' → logprob: -2.1289021968841553
    3. 'iven' → logprob: -7.753901958465576
    4. 'o' → logprob: -8.253902435302734
    5. 'ift' → logprob: -8.503902435302734
    6. '=int' → logprob: -9.003902435302734
    7. 'a' → logprob: -9.378902435302734
    8. 'h' → logprob: -9.503902435302734
    9. 'ifts' → logprob: -9.503902435302734
    10. 'roup' → logprob: -9.628902435302734

Token 58: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01917092874646187
    2. ' int' → logprob: -4.019170761108398
    3. '0' → logprob: -7.769170761108398
    4. '[int' → logprob: -8.519170761108398
    5. 'float' → logprob: -8.894170761108398
    6. '(int' → logprob: -9.519170761108398
    7. 'line' → logprob: -10.144170761108398
    8. '[]' → logprob: -10.519170761108398
    9. ' ' → logprob: -10.769170761108398
    10. '1' → logprob: -10.769170761108398

Token 59: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0027126192580908537
    2. 'line' → logprob: -6.877712726593018
    3. 'list' → logprob: -7.127712726593018
    4. 'name' → logprob: -8.50271224975586
    5. 'float' → logprob: -8.75271224975586
    6. 'tuple' → logprob: -9.00271224975586
    7. '0' → logprob: -9.50271224975586
    8. '*' → logprob: -9.87771224975586
    9. ']' → logprob: -10.00271224975586
    10. ' int' → logprob: -10.12771224975586

Token 60: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00028493450372479856
    2. 'map' → logprob: -8.625285148620605
    3. '()' → logprob: -9.375285148620605
    4. '(range' → logprob: -11.750285148620605
    5. '(' → logprob: -11.875285148620605
    6. '(int' → logprob: -13.250285148620605
    7. ']' → logprob: -13.750285148620605
    8. ' map' → logprob: -14.000285148620605
    9. '()]' → logprob: -14.625285148620605
    10. '(m' → logprob: -15.375285148620605

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010981805389747024
    2. 'int' → logprob: -7.251098155975342
    3. ',int' → logprob: -8.2510986328125
    4. ']int' → logprob: -10.1260986328125
    5. ')' → logprob: -10.3760986328125
    6. '[int' → logprob: -10.6260986328125
    7. '=int' → logprob: -11.3760986328125
    8. '(' → logprob: -11.8760986328125
    9. '<int' → logprob: -12.1260986328125
    10. ' (' → logprob: -13.0010986328125

Token 62: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.03042115829885006
    2. ',' → logprob: -3.905421257019043
    3. ',line' → logprob: -5.780421257019043
    4. '(input' → logprob: -6.030421257019043
    5. '(' → logprob: -6.280421257019043
    6. ')' → logprob: -6.780421257019043
    7. '<|end|>' → logprob: -7.530421257019043
    8. ',input' → logprob: -8.655421257019043
    9. '#line' → logprob: -9.155421257019043
    10. '<|end|>' → logprob: -9.405421257019043

Token 63: ' input' (ID: 3422)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07093934714794159
    2. ' line' → logprob: -2.695939302444458
    3. 'input' → logprob: -7.195939540863037
    4. ' input' → logprob: -8.945939064025879
    5. '(line' → logprob: -10.195939064025879
    6. ')' → logprob: -10.820939064025879
    7. '[line' → logprob: -10.820939064025879
    8. '	line' → logprob: -11.445939064025879
    9. '   ' → logprob: -11.695939064025879
    10. '#line' → logprob: -11.945939064025879

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011677479778882116
    2. '.' → logprob: -9.875116348266602
    3. '()' → logprob: -9.875116348266602
    4. ' ().' → logprob: -12.625116348266602
    5. ')' → logprob: -12.750116348266602
    6. '(' → logprob: -13.375116348266602
    7. ' .' → logprob: -13.500116348266602
    8. '   ' → logprob: -13.750116348266602
    9. '.split' → logprob: -14.250116348266602
    10. '.readline' → logprob: -14.500116348266602

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00014597235713154078
    2. 'strip' → logprob: -9.00014591217041
    3. 'rstrip' → logprob: -11.12514591217041
    4. ')' → logprob: -12.50014591217041
    5. 'read' → logprob: -12.75014591217041
    6. '.readline' → logprob: -14.50014591217041
    7. ' split' → logprob: -15.00014591217041
    8. '(split' → logprob: -15.50014591217041
    9. 'plit' → logprob: -16.750146865844727
    10. 'str' → logprob: -17.250146865844727

Token 66: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.014161866158246994
    2. '()' → logprob: -4.889162063598633
    3. '))' → logprob: -5.139162063598633
    4. '())' → logprob: -7.889162063598633
    5. '()))
' → logprob: -9.139162063598633
    6. '(' → logprob: -9.139162063598633
    7. '())))' → logprob: -10.764162063598633
    8. '().' → logprob: -10.889162063598633
    9. '()));' → logprob: -11.389162063598633
    10. '())).' → logprob: -11.514162063598633

Token 67: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.7641094923019409
    2. '()' → logprob: -0.8891094923019409
    3. '())' → logprob: -2.2641096115112305
    4. '(' → logprob: -5.1391096115112305
    5. '(line' → logprob: -5.1391096115112305
    6. ')' → logprob: -5.6391096115112305
    7. ')]' → logprob: -6.7641096115112305
    8. ']' → logprob: -7.0141096115112305
    9. '()[' → logprob: -7.1391096115112305
    10. 'for' → logprob: -8.51410961151123

Token 68: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.035036325454711914
    2. '_' → logprob: -3.660036325454712
    3. 'range' → logprob: -5.285036087036133
    4. ' _' → logprob: -5.660036087036133
    5. '_range' → logprob: -9.660036087036133
    6. ' in' → logprob: -9.785036087036133
    7. ' ' → logprob: -11.035036087036133
    8. ' i' → logprob: -13.035036087036133
    9. ' __' → logprob: -13.410036087036133
    10. '(range' → logprob: -13.535036087036133

Token 69: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12733247876167297
    2. 'range' → logprob: -2.1273324489593506
    3. ' in' → logprob: -8.00233268737793
    4. '	range' → logprob: -10.50233268737793
    5. '(range' → logprob: -11.12733268737793
    6. '_' → logprob: -11.75233268737793
    7. 'in' → logprob: -11.75233268737793
    8. ' ' → logprob: -12.00233268737793
    9. '_range' → logprob: -12.62733268737793
    10. ' xrange' → logprob: -13.62733268737793

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08895942568778992
    2. ' range' → logprob: -2.4639594554901123
    3. '	range' → logprob: -11.963959693908691
    4. ' ' → logprob: -12.338959693908691
    5. 'rang' → logprob: -12.838959693908691
    6. 'r' → logprob: -13.213959693908691
    7. '  ' → logprob: -13.713959693908691
    8. '   ' → logprob: -13.963959693908691
    9. 'ran' → logprob: -14.088959693908691
    10. '(range' → logprob: -14.713959693908691

Token 71: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.010780387558043003
    2. 'h' → logprob: -4.885780334472656
    3. '(g' → logprob: -6.135780334472656
    4. '(' → logprob: -7.385780334472656
    5. '(N' → logprob: -9.385780334472656
    6. '(K' → logprob: -9.635780334472656
    7. 'g' → logprob: -9.885780334472656
    8. ' h' → logprob: -10.010780334472656
    9. ' (' → logprob: -10.010780334472656
    10. '(H' → logprob: -11.010780334472656

Token 72: ' -' (ID: 533)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004689760971814394
    2. ']' → logprob: -5.629689693450928
    3. ')' → logprob: -7.129689693450928
    4. '])' → logprob: -8.879690170288086
    5. ')])' → logprob: -9.629690170288086
    6. '])]' → logprob: -9.879690170288086
    7. ')]
' → logprob: -11.004690170288086
    8. ')]
' → logprob: -13.254690170288086
    9. ' )' → logprob: -13.254690170288086
    10. '   ' → logprob: -13.504690170288086

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015129582025110722
    2. ' ' → logprob: -6.5015130043029785
    3. '2' → logprob: -12.50151252746582
    4. ')' → logprob: -13.00151252746582
    5. '   ' → logprob: -13.00151252746582
    6. '0' → logprob: -13.50151252746582
    7. '  ' → logprob: -14.87651252746582
    8. '<|end|>' → logprob: -14.87651252746582
    9. '3' → logprob: -16.37651252746582
    10. '4' → logprob: -17.06401252746582

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.996708104154095e-05
    2. ' ' → logprob: -9.375100135803223
    3. '2' → logprob: -11.375100135803223
    4. '<|end|>' → logprob: -13.375100135803223
    5. '   ' → logprob: -14.500100135803223
    6. '3' → logprob: -14.625100135803223
    7. '0' → logprob: -14.750100135803223
    8. '  ' → logprob: -15.500100135803223
    9. '4' → logprob: -15.625100135803223
    10. '7' → logprob: -15.812600135803223

Token 75: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03855789080262184
    2. ']' → logprob: -3.413558006286621
    3. ')' → logprob: -5.663558006286621
    4. '])' → logprob: -6.788558006286621
    5. ')])' → logprob: -8.788558006286621
    6. '])]' → logprob: -9.288558006286621
    7. ')]
' → logprob: -10.788558006286621
    8. ']
' → logprob: -11.413558006286621
    9. ')
' → logprob: -12.038558006286621
    10. ')],' → logprob: -12.038558006286621

Token 76: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' Build' (ID: 10885)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6725576519966125
    2. ' parts' → logprob: -1.0475575923919678
    3. 'if' → logprob: -2.9225575923919678
    4. ' if' → logprob: -4.047557830810547
    5. 'for' → logprob: -4.422557830810547
    6. 'g' → logprob: -4.422557830810547
    7. ')' → logprob: -4.797557830810547
    8. 'name' → logprob: -4.922557830810547
    9. '   ' → logprob: -5.422557830810547
    10. ' for' → logprob: -5.547557830810547

Token 79: ' permutation' (ID: 135200)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.6805999875068665
    2. '<|end|>' → logprob: -1.8055999279022217
    3. 'parts' → logprob: -2.0555999279022217
    4. ' the' → logprob: -2.8055999279022217
    5. 'g' → logprob: -3.3055999279022217
    6. ' g' → logprob: -3.3055999279022217
    7. ' a' → logprob: -3.9305999279022217
    8. ' graph' → logprob: -4.555600166320801
    9. 'graph' → logprob: -4.930600166320801
    10. 'the' → logprob: -5.430600166320801

Token 80: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4040704667568207
    2. '<|end|>' → logprob: -2.2790703773498535
    3. '[' → logprob: -2.4040703773498535
    4. '   ' → logprob: -3.4040703773498535
    5. ']' → logprob: -3.9040703773498535
    6. 'g' → logprob: -3.9040703773498535
    7. ' =' → logprob: -4.1540703773498535
    8. 's' → logprob: -4.4040703773498535
    9. ' parts' → logprob: -5.1540703773498535
    10. ' g' → logprob: -5.4040703773498535

Token 81: ' size' (ID: 2349)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5762823820114136
    2. 'g' → logprob: -1.8262823820114136
    3. '[' → logprob: -1.9512823820114136
    4. 'indices' → logprob: -2.576282501220703
    5. ' range' → logprob: -2.826282501220703
    6. 'list' → logprob: -3.201282501220703
    7. ' [' → logprob: -3.326282501220703
    8. 'h' → logprob: -3.326282501220703
    9. 'parts' → logprob: -3.326282501220703
    10. '[h' → logprob: -3.576282501220703

Token 82: ' N' (ID: 478)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06328334659337997
    2. ' h' → logprob: -2.8132834434509277
    3. 'N' → logprob: -7.313283443450928
    4. ' N' → logprob: -7.813283443450928
    5. ' ' → logprob: -9.43828296661377
    6. ' parts' → logprob: -9.43828296661377
    7. 'parts' → logprob: -10.06328296661377
    8. 'n' → logprob: -12.06328296661377
    9. 'K' → logprob: -12.43828296661377
    10. '1' → logprob: -12.68828296661377

Token 83: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5182197093963623
    2. ']' → logprob: -2.2682197093963623
    3. '[' → logprob: -2.8932197093963623
    4. 'p' → logprob: -3.0182197093963623
    5. '   ' → logprob: -3.0182197093963623
    6. ' p' → logprob: -3.3932197093963623
    7. '<|end|>' → logprob: -3.3932197093963623
    8. 'g' → logprob: -4.143219947814941
    9. ' g' → logprob: -4.768219947814941
    10. 's' → logprob: -4.768219947814941

Token 84: ' this' (ID: 495)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.867485523223877
    2. ' g' → logprob: -0.867485523223877
    3. ' [' → logprob: -3.117485523223877
    4. '[' → logprob: -3.492485523223877
    5. ' ' → logprob: -3.867485523223877
    6. ' the' → logprob: -4.492485523223877
    7. '1' → logprob: -4.867485523223877
    8. 'the' → logprob: -4.992485523223877
    9. ' range' → logprob: -5.242485523223877
    10. '0' → logprob: -5.367485523223877

Token 85: ' part' (ID: 997)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9800180196762085
    2. '<|end|>' → logprob: -1.2300180196762085
    3. ')' → logprob: -1.3550180196762085
    4. '   ' → logprob: -3.855018138885498
    5. ' ' → logprob: -4.230018138885498
    6. ']' → logprob: -5.105018138885498
    7. '(' → logprob: -5.230018138885498
    8. ' =' → logprob: -5.855018138885498
    9. '_' → logprob: -5.980018138885498
    10. ',' → logprob: -6.105018138885498

Token 87: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' perm' (ID: 5961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1699347048997879
    2. ' =' → logprob: -1.9199347496032715
    3. 'utation' → logprob: -4.7949347496032715
    4. 'utations' → logprob: -6.9199347496032715
    5. 'ation' → logprob: -8.669934272766113
    6. '=[]' → logprob: -9.794934272766113
    7. 'u' → logprob: -10.294934272766113
    8. 'ution' → logprob: -10.294934272766113
    9. 'ut' → logprob: -10.794934272766113
    10. 's' → logprob: -10.919934272766113

Token 90: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06730375438928604
    2. ' list' → logprob: -3.5673036575317383
    3. '[list' → logprob: -3.8173036575317383
    4. '[' → logprob: -4.692303657531738
    5. ' [' → logprob: -5.817303657531738
    6. '[]' → logprob: -6.942303657531738
    7. '[g' → logprob: -6.942303657531738
    8. 'g' → logprob: -7.817303657531738
    9. ' []' → logprob: -9.567303657531738
    10. ' g' → logprob: -10.067303657531738

Token 91: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0001414426224073395
    2. '(' → logprob: -8.875141143798828
    3. 'range' → logprob: -13.500141143798828
    4. '(map' → logprob: -17.500141143798828
    5. ' (' → logprob: -18.375141143798828
    6. '	range' → logprob: -18.625141143798828
    7. '(i' → logprob: -18.875141143798828
    8. '```' → logprob: -18.875141143798828
    9. '((' → logprob: -19.000141143798828
    10. '(rank' → logprob: -19.000141143798828

Token 92: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3132994472980499
    2. '(' → logprob: -1.3132994174957275
    3. '(n' → logprob: -11.063299179077148
    4. '(
' → logprob: -12.063299179077148
    5. ' (' → logprob: -12.438299179077148
    6. '1' → logprob: -12.563299179077148
    7. ')' → logprob: -12.688299179077148
    8. 'N' → logprob: -12.813299179077148
    9. ' N' → logprob: -14.563299179077148
    10. '(K' → logprob: -14.813299179077148

Token 93: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003150980919599533
    2. ' ))' → logprob: -6.253150939941406
    3. '))
' → logprob: -7.003150939941406
    4. ')' → logprob: -8.378150939941406
    5. '))

' → logprob: -10.503150939941406
    6. ' )' → logprob: -10.628150939941406
    7. ')))' → logprob: -11.628150939941406
    8. ' ))
' → logprob: -12.003150939941406
    9. ' ' → logprob: -12.628150939941406
    10. '-' → logprob: -13.253150939941406

Token 94: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8310266137123108
    2. '<|end|>' → logprob: -1.081026554107666
    3. '[' → logprob: -1.956026554107666
    4. 'for' (adapté à ' for') → logprob: -4.456026554107666
    5. '.' → logprob: -4.581026554107666
    6. '   ' → logprob: -4.831026554107666
    7. ' for' → logprob: -4.956026554107666
    8. '[
' → logprob: -5.206026554107666
    9. ']' → logprob: -5.206026554107666
    10. ' ' → logprob: -5.331026554107666

Token 96: ' row' (ID: 5225)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.375898003578186
    2. 'i' → logprob: -1.875898003578186
    3. ' h' → logprob: -2.1258978843688965
    4. ' i' → logprob: -2.2508978843688965
    5. 'g' → logprob: -2.5008978843688965
    6. ' g' → logprob: -2.5008978843688965
    7. ' _' → logprob: -3.1258978843688965
    8. '_' → logprob: -3.8758978843688965
    9. ' j' → logprob: -4.0008978843688965
    10. '__' → logprob: -4.2508978843688965

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004520196467638016
    2. 'in' → logprob: -5.504520416259766
    3. ' ' → logprob: -8.004520416259766
    4. '<|end|>' → logprob: -9.879520416259766
    5. 's' → logprob: -11.129520416259766
    6. ',' → logprob: -12.129520416259766
    7. '_idx' → logprob: -12.379520416259766
    8. 'index' → logprob: -12.504520416259766
    9. '_index' → logprob: -13.004520416259766
    10. '_' → logprob: -13.129520416259766

Token 98: ' range' (ID: 3352)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.17246699333190918
    2. 'range' → logprob: -2.297466993331909
    3. ' range' → logprob: -3.547466993331909
    4. ' g' → logprob: -3.547466993331909
    5. 're' → logprob: -9.547467231750488
    6. ' ' → logprob: -9.797467231750488
    7. '   ' → logprob: -9.984967231750488
    8. ' reversed' → logprob: -10.359967231750488
    9. 'h' → logprob: -10.672467231750488
    10. '  ' → logprob: -11.234967231750488

Token 99: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6334275007247925
    2. '(h' → logprob: -0.8834275007247925
    3. '1' → logprob: -3.258427619934082
    4. '(len' → logprob: -4.508427619934082
    5. 'h' → logprob: -5.133427619934082
    6. 'len' → logprob: -8.008427619934082
    7. ' ' → logprob: -10.133427619934082
    8. ' (' → logprob: -10.133427619934082
    9. ' h' → logprob: -10.508427619934082
    10. '   ' → logprob: -10.883427619934082

Token 100: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.37809187173843384
    2. '):
' → logprob: -2.003091812133789
    3. '-' → logprob: -2.128091812133789
    4. ' -' → logprob: -2.878091812133789
    5. '   ' → logprob: -5.753091812133789
    6. ')' → logprob: -7.378091812133789
    7. ' ):' → logprob: -8.503091812133789
    8. '1' → logprob: -9.003091812133789
    9. ' ' → logprob: -9.253091812133789
    10. ' ):
' → logprob: -9.378091812133789

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034118397161364555
    2. ' ' → logprob: -8.375341415405273
    3. '2' → logprob: -9.250341415405273
    4. '   ' → logprob: -11.500341415405273
    5. '```' → logprob: -13.250341415405273
    6. ')' → logprob: -14.375341415405273
    7. '  ' → logprob: -15.125341415405273
    8. '       ' → logprob: -15.250341415405273
    9. '           ' → logprob: -15.562841415405273
    10. '-' → logprob: -15.562841415405273

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. '2' → logprob: -10.125059127807617
    3. ' ' → logprob: -11.000059127807617
    4. '   ' → logprob: -13.750059127807617
    5. '```' → logprob: -14.875059127807617
    6. '-' → logprob: -15.625059127807617
    7. '3' → logprob: -15.875059127807617
    8. '0' → logprob: -16.562559127807617
    9. ')' → logprob: -16.750059127807617
    10. '  ' → logprob: -16.875059127807617

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14281828701496124
    2. '):
' → logprob: -2.0178182125091553
    3. ' ):' → logprob: -10.267818450927734
    4. ':' → logprob: -10.517818450927734
    5. '   ' → logprob: -10.642818450927734
    6. '):
' → logprob: -10.642818450927734
    7. ')' → logprob: -11.767818450927734
    8. ',' → logprob: -11.767818450927734
    9. ' ):
' → logprob: -12.392818450927734
    10. '):

' → logprob: -12.642818450927734

Token 104: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5910623669624329
    2. '   ' → logprob: -1.216062307357788
    3. '       ' → logprob: -2.591062307357788
    4. 'for' → logprob: -2.716062307357788
    5. '    ' → logprob: -6.466062545776367
    6. ':' → logprob: -6.591062545776367
    7. '```' → logprob: -6.716062545776367
    8. ',' → logprob: -7.091062545776367
    9. ' if' → logprob: -7.466062545776367
    10. ' perm' → logprob: -7.591062545776367

Token 105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5790567994117737
    2. ' for' → logprob: -0.8290567994117737
    3. '   ' → logprob: -5.829056739807129
    4. ' i' → logprob: -9.579056739807129
    5. 'i' → logprob: -10.454056739807129
    6. '	for' → logprob: -11.204056739807129
    7. '       ' → logprob: -11.204056739807129
    8. 'j' → logprob: -11.329056739807129
    9. ' ' → logprob: -11.329056739807129
    10. ' j' → logprob: -11.329056739807129

Token 106: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.05630624294281
    2. ' i' → logprob: -1.30630624294281
    3. ' col' → logprob: -1.80630624294281
    4. 'col' → logprob: -2.4313063621520996
    5. ' j' → logprob: -2.6813063621520996
    6. 'j' → logprob: -3.0563063621520996
    7. 'pos' → logprob: -5.9313063621521
    8. 'idx' → logprob: -6.3063063621521
    9. 'k' → logprob: -6.8063063621521
    10. ' pos' → logprob: -6.8063063621521

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019949134439229965
    2. 'in' → logprob: -4.019948959350586
    3. 'range' → logprob: -6.644948959350586
    4. ' ' → logprob: -8.019948959350586
    5. '  ' → logprob: -10.019948959350586
    6. '   ' → logprob: -10.394948959350586
    7. 'ange' → logprob: -10.769948959350586
    8. ' range' → logprob: -10.894948959350586
    9. 'n' → logprob: -11.394948959350586
    10. ',' → logprob: -11.894948959350586

Token 108: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.016040820628404617
    2. 'range' → logprob: -4.141040802001953
    3. ' perm' → logprob: -12.891040802001953
    4. ' ' → logprob: -13.266040802001953
    5. 'perm' → logprob: -14.266040802001953
    6. '(range' → logprob: -14.766040802001953
    7. ' xrange' → logprob: -15.016040802001953
    8. 'g' → logprob: -15.266040802001953
    9. 'ange' → logprob: -15.266040802001953
    10. '	range' → logprob: -15.641040802001953

Token 109: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001790374517440796
    2. '(' → logprob: -6.751790523529053
    3. 'N' → logprob: -7.751790523529053
    4. '(len' → logprob: -8.751790046691895
    5. '1' → logprob: -11.626790046691895
    6. 'len' → logprob: -11.751790046691895
    7. '(n' → logprob: -12.251790046691895
    8. ' (' → logprob: -12.751790046691895
    9. '0' → logprob: -12.876790046691895
    10. '   ' → logprob: -13.001790046691895

Token 110: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.530293345451355
    2. '-' → logprob: -0.905293345451355
    3. '):' → logprob: -5.5302934646606445
    4. '):
' → logprob: -5.7802934646606445
    5. '   ' → logprob: -10.030293464660645
    6. '       ' → logprob: -11.280293464660645
    7. ')' → logprob: -11.405293464660645
    8. '1' → logprob: -12.280293464660645
    9. '           ' → logprob: -12.405293464660645
    10. '):
' → logprob: -12.780293464660645

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023154958034865558
    2. ' ' → logprob: -8.375231742858887
    3. 'row' → logprob: -14.625231742858887
    4. '   ' → logprob: -15.375231742858887
    5. '2' → logprob: -16.25023078918457
    6. '-' → logprob: -16.81273078918457
    7. ')' → logprob: -17.43773078918457
    8. ' row' → logprob: -17.50023078918457
    9. '  ' → logprob: -17.87523078918457
    10. 'c' → logprob: -18.18773078918457

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7994282795116305e-05
    2. 'row' → logprob: -10.50004768371582
    3. ' ' → logprob: -10.87504768371582
    4. '(' → logprob: -14.25004768371582
    5. '(row' → logprob: -15.25004768371582
    6. '2' → logprob: -16.00004768371582
    7. ' row' → logprob: -16.12504768371582
    8. '-' → logprob: -16.25004768371582
    9. '   ' → logprob: -16.37504768371582
    10. 'c' → logprob: -16.87504768371582

Token 113: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09008317440748215
    2. '):' → logprob: -2.465083122253418
    3. '           ' → logprob: -7.465083122253418
    4. '       ' → logprob: -8.215083122253418
    5. '):
' → logprob: -8.215083122253418
    6. '   ' → logprob: -11.465083122253418
    7. '):

' → logprob: -12.215083122253418
    8. '               ' → logprob: -12.340083122253418
    9. ')' → logprob: -13.090083122253418
    10. ' -' → logprob: -13.215083122253418

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013049285858869553
    2. ' if' → logprob: -5.388049125671387
    3. '            ' → logprob: -6.138049125671387
    4. ' ' → logprob: -6.263049125671387
    5. '<|end|>' → logprob: -6.513049125671387
    6. ',' → logprob: -7.388049125671387
    7. '               ' → logprob: -7.638049125671387
    8. '            
' → logprob: -7.888049125671387
    9. '          ' → logprob: -8.263049125671387
    10. '        ' → logprob: -8.888049125671387

Token 115: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07681012898683548
    2. '           ' → logprob: -2.826810121536255
    3. 'if' (adapté à ' if') → logprob: -4.576810359954834
    4. '               ' → logprob: -5.451810359954834
    5. '<|end|>' → logprob: -10.201809883117676
    6. ' ' → logprob: -10.451809883117676
    7. '       ' → logprob: -11.326809883117676
    8. '	       ' → logprob: -11.451809883117676
    9. '	if' → logprob: -11.576809883117676
    10. '   ' → logprob: -11.701809883117676

Token 116: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.47456806898117065
    2. ' g' → logprob: -0.9745680689811707
    3. '   ' → logprob: -8.099568367004395
    4. ' not' → logprob: -9.099568367004395
    5. ' ' → logprob: -11.224568367004395
    6. ' parts' → logprob: -11.474568367004395
    7. ' int' → logprob: -11.599568367004395
    8. 'not' → logprob: -11.599568367004395
    9. 'int' → logprob: -12.099568367004395
    10. '  ' → logprob: -12.474568367004395

Token 117: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -4.227250610711053e-05
    2. '[' → logprob: -10.875041961669922
    3. '][' → logprob: -11.375041961669922
    4. '[line' → logprob: -12.625041961669922
    5. ')[' → logprob: -12.750041961669922
    6. ' [' → logprob: -13.000041961669922
    7. '[level' → logprob: -14.625041961669922
    8. '[col' → logprob: -14.625041961669922
    9. '       ' → logprob: -15.125041961669922
    10. '           ' → logprob: -15.125041961669922

Token 118: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.34949132800102234
    2. '[c' → logprob: -1.2244913578033447
    3. '[row' → logprob: -7.349491119384766
    4. '[' → logprob: -8.224491119384766
    5. ']' → logprob: -9.724491119384766
    6. ' ][' → logprob: -11.349491119384766
    7. ' [' → logprob: -11.599491119384766
    8. '[r' → logprob: -11.724491119384766
    9. '[C' → logprob: -12.099491119384766
    10. 'c' → logprob: -12.224491119384766

Token 119: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.931863051955588e-05
    2. ' c' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.375059127807617
    4. ' ' → logprob: -16.375059127807617
    5. '[' → logprob: -16.875059127807617
    6. '           ' → logprob: -16.875059127807617
    7. '	c' → logprob: -16.875059127807617
    8. '       ' → logprob: -17.375059127807617
    9. '[c' → logprob: -17.875059127807617
    10. '
' → logprob: -18.000059127807617

Token 120: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.535278856754303
    2. ']' → logprob: -1.0352787971496582
    3. ']:' → logprob: -3.160278797149658
    4. '==' → logprob: -4.660278797149658
    5. ' ]' → logprob: -5.785278797149658
    6. ' ==' → logprob: -6.160278797149658
    7. ']>' → logprob: -6.660278797149658
    8. '):' → logprob: -8.785279273986816
    9. '[' → logprob: -8.910279273986816
    10. ']:
' → logprob: -8.910279273986816

Token 121: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0633181482553482
    2. ' ==' → logprob: -2.9383182525634766
    3. ':' → logprob: -4.813318252563477
    4. ']==' → logprob: -9.063318252563477
    5. '>' → logprob: -9.438318252563477
    6. '=' → logprob: -10.188318252563477
    7. '[' → logprob: -11.063318252563477
    8. ' :' → logprob: -12.063318252563477
    9. '!=' → logprob: -12.438318252563477
    10. '==-' → logprob: -12.938318252563477

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00326077314093709
    2. ' ' → logprob: -6.128260612487793
    3. '0' → logprob: -7.253260612487793
    4. ''' → logprob: -8.003260612487793
    5. '-' → logprob: -12.128260612487793
    6. '   ' → logprob: -12.253260612487793
    7. ''-' → logprob: -12.503260612487793
    8. ''*' → logprob: -12.628260612487793
    9. ''<' → logprob: -13.128260612487793
    10. ''>' → logprob: -13.315760612487793

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044401636114344
    2. '0' → logprob: -7.875443935394287
    3. ' ' → logprob: -9.750444412231445
    4. ''' → logprob: -12.875444412231445
    5. ''-' → logprob: -14.250444412231445
    6. ''*' → logprob: -14.500444412231445
    7. '-' → logprob: -14.625444412231445
    8. '   ' → logprob: -15.125444412231445
    9. 'True' → logprob: -15.250444412231445
    10. '2' → logprob: -15.812944412231445

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26531165838241577
    2. ':
' → logprob: -1.7653117179870605
    3. ' and' → logprob: -3.6403117179870605
    4. '               ' → logprob: -4.5153117179870605
    5. '):
' → logprob: -4.5153117179870605
    6. '):' → logprob: -4.7653117179870605
    7. '           ' → logprob: -5.8903117179870605
    8. ',' → logprob: -7.0153117179870605
    9. 'and' → logprob: -7.5153117179870605
    10. ')' → logprob: -8.015311241149902

Token 125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018679486820474267
    2. ' perm' → logprob: -6.751867771148682
    3. 'perm' → logprob: -8.12686824798584
    4. '           ' → logprob: -8.75186824798584
    5. ' if' → logprob: -9.75186824798584
    6. ',' → logprob: -9.87686824798584
    7. '                
' → logprob: -10.62686824798584
    8. '	           ' → logprob: -10.75186824798584
    9. '<|end|>' → logprob: -10.75186824798584
    10. '                   ' → logprob: -11.25186824798584

Token 126: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.5781561136245728
    2. 'perm' (adapté à ' perm') → logprob: -0.8281561136245728
    3. '                   ' → logprob: -6.203155994415283
    4. '               ' → logprob: -8.953156471252441
    5. '   ' → logprob: -10.078156471252441
    6. '           ' → logprob: -11.953156471252441
    7. 'per' → logprob: -12.703156471252441
    8. '                       ' → logprob: -12.703156471252441
    9. '```' → logprob: -13.203156471252441
    10. ' permutation' → logprob: -13.328156471252441

Token 127: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.125000953674316
    3. 'c' → logprob: -16.625
    4. ' [' → logprob: -16.875
    5. ',c' → logprob: -18.5
    6. '][' → logprob: -18.75
    7. '	c' → logprob: -18.75
    8. '   ' → logprob: -19.125
    9. '[col' → logprob: -19.5
    10. '[i' → logprob: -19.75

Token 128: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0410018265247345
    2. ',' → logprob: -4.166001796722412
    3. '],' → logprob: -4.291001796722412
    4. ' +' → logprob: -5.416001796722412
    5. '+c' → logprob: -5.416001796722412
    6. ',c' → logprob: -6.916001796722412
    7. '+,' → logprob: -7.166001796722412
    8. ' ,' → logprob: -8.91600227355957
    9. '[c' → logprob: -10.16600227355957
    10. '+=' → logprob: -10.66600227355957

Token 129: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.005234002135694027
    2. ' perm' → logprob: -5.2552337646484375
    3. '               ' → logprob: -16.255233764648438
    4. 'per' → logprob: -17.005233764648438
    5. '           ' → logprob: -17.380233764648438
    6. '                   ' → logprob: -17.505233764648438
    7. '<|end|>' → logprob: -19.255233764648438
    8. '=' → logprob: -19.505233764648438
    9. '            ' → logprob: -19.505233764648438
    10. 'perf' → logprob: -19.505233764648438

Token 130: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00014084660506341606
    2. 'c' → logprob: -8.875141143798828
    3. '[' → logprob: -14.500141143798828
    4. 'perm' → logprob: -16.125141143798828
    5. '[
' → logprob: -16.375141143798828
    6. '(c' → logprob: -17.125141143798828
    7. '```' → logprob: -17.125141143798828
    8. ' c' → logprob: -17.750141143798828
    9. '
' → logprob: -17.750141143798828
    10. '=c' → logprob: -18.250141143798828

Token 131: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011783202644437551
    2. ' +' → logprob: -6.75117826461792
    3. '+c' → logprob: -11.751178741455078
    4. '+
' → logprob: -15.501178741455078
    5. '＋' → logprob: -18.251178741455078
    6. '+]' → logprob: -18.626178741455078
    7. 'c' → logprob: -19.376178741455078
    8. '+=' → logprob: -19.626178741455078
    9. '1' → logprob: -20.251178741455078
    10. ' +
' → logprob: -20.501178741455078

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. 'c' → logprob: -12.250009536743164
    3. ' ' → logprob: -12.500009536743164
    4. '```' → logprob: -14.500009536743164
    5. '   ' → logprob: -16.250009536743164
    6. ']' → logprob: -16.875009536743164
    7. '0' → logprob: -16.875009536743164
    8. ')' → logprob: -17.250009536743164
    9. 'token' → logprob: -18.000009536743164
    10. '  ' → logprob: -18.375009536743164

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002146812155842781
    2. '=' → logprob: -6.5021467208862305
    3. ']=' → logprob: -7.5021467208862305
    4. ' =' → logprob: -9.75214672088623
    5. ' ]' → logprob: -10.50214672088623
    6. '<|end|>' → logprob: -12.12714672088623
    7. ')' → logprob: -15.12714672088623
    8. '']' → logprob: -15.87714672088623
    9. ']
' → logprob: -15.87714672088623
    10. '`]' → logprob: -15.87714672088623

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003609101288020611
    2. ' =' → logprob: -5.6286091804504395
    3. '<|end|>' → logprob: -12.378608703613281
    4. '=c' → logprob: -13.128608703613281
    5. '=
' → logprob: -13.253608703613281
    6. '.=' → logprob: -15.628608703613281
    7. '=

' → logprob: -16.12860870361328
    8. ']=' → logprob: -16.25360870361328
    9. '=}' → logprob: -16.25360870361328
    10. '=user' → logprob: -16.37860870361328

Token 135: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.04858759790658951
    2. ' perm' → logprob: -3.0485875606536865
    3. 'per' → logprob: -15.923587799072266
    4. 'perf' → logprob: -16.923587799072266
    5. '_perm' → logprob: -17.798587799072266
    6. ' ' → logprob: -17.923587799072266
    7. '   ' → logprob: -18.173587799072266
    8. ' perms' → logprob: -18.423587799072266
    9. 'perl' → logprob: -18.423587799072266
    10. 'pert' → logprob: -19.048587799072266

Token 136: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.547789674485102e-05
    2. 'c' → logprob: -10.250035285949707
    3. '(c' → logprob: -18.125036239624023
    4. '[' → logprob: -18.250036239624023
    5. '	c' → logprob: -18.625036239624023
    6. ' c' → logprob: -18.750036239624023
    7. '```' → logprob: -18.750036239624023
    8. '<c' → logprob: -20.500036239624023
    9. ')c' → logprob: -20.625036239624023
    10. '[
' → logprob: -20.875036239624023

Token 137: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001334559783572331
    2. '[c' → logprob: -9.625133514404297
    3. '+c' → logprob: -9.875133514404297
    4. ' +' → logprob: -11.500133514404297
    5. '+
' → logprob: -12.750133514404297
    6. 'c' → logprob: -13.375133514404297
    7. '[' → logprob: -15.125133514404297
    8. '+,' → logprob: -15.375133514404297
    9. '1' → logprob: -15.750133514404297
    10. '[
' → logprob: -16.000133514404297

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.375014305114746
    3. '+' → logprob: -14.000014305114746
    4. '   ' → logprob: -14.000014305114746
    5. '0' → logprob: -15.125014305114746
    6. '```' → logprob: -15.125014305114746
    7. ',' → logprob: -16.125015258789062
    8. '
' → logprob: -16.187515258789062
    9. '  ' → logprob: -16.562515258789062
    10. '11' → logprob: -16.750015258789062

Token 139: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11296498775482178
    2. '],' → logprob: -2.2379651069641113
    3. ',c' → logprob: -9.987964630126953
    4. ' ,' → logprob: -10.237964630126953
    5. ']' → logprob: -10.987964630126953
    6. '),' → logprob: -10.987964630126953
    7. 'perm' → logprob: -11.487964630126953
    8. '[c' → logprob: -12.612964630126953
    9. '},' → logprob: -12.862964630126953
    10. '>,' → logprob: -12.862964630126953

Token 140: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.00017982252757064998
    2. ' perm' → logprob: -8.6251802444458
    3. 'per' → logprob: -15.2501802444458
    4. 'perf' → logprob: -17.125179290771484
    5. 'part' → logprob: -18.250179290771484
    6. 'pert' → logprob: -18.500179290771484
    7. '   ' → logprob: -19.375179290771484
    8. '```' → logprob: -20.000179290771484
    9. 'perl' → logprob: -20.000179290771484
    10. 'prem' → logprob: -20.125179290771484

Token 141: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.546478935983032e-05
    2. 'c' → logprob: -10.625025749206543
    3. '[' → logprob: -14.625025749206543
    4. ']' → logprob: -16.250024795532227
    5. 'parts' → logprob: -16.250024795532227
    6. '```' → logprob: -16.250024795532227
    7. 'token' → logprob: -16.500024795532227
    8. 'tokens' → logprob: -16.625024795532227
    9. '][' → logprob: -17.250024795532227
    10. 'perm' → logprob: -18.000024795532227

Token 142: ']
' (ID: 1592)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.6309158205986023
    2. 'c' → logprob: -0.8809158205986023
    3. ']' → logprob: -3.005915880203247
    4. '])' → logprob: -6.005915641784668
    5. '+' → logprob: -7.505915641784668
    6. '+c' → logprob: -7.505915641784668
    7. '][' → logprob: -9.505915641784668
    8. ')' → logprob: -9.880915641784668
    9. '(c' → logprob: -9.880915641784668
    10. '	c' → logprob: -10.005915641784668

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.870760977268219
    2. ')' → logprob: -1.3707609176635742
    3. '<|end|>' → logprob: -1.3707609176635742
    4. ' parts' → logprob: -3.495760917663574
    5. '```' → logprob: -4.120760917663574
    6. 'parts' → logprob: -4.870760917663574
    7. 'for' → logprob: -5.245760917663574
    8. ' for' → logprob: -5.495760917663574
    9. ' )' → logprob: -6.995760917663574
    10. '<|end|>' → logprob: -6.995760917663574

Token 144: ' #' (ID: 1069)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.7503169178962708
    2. ')' → logprob: -1.250316858291626
    3. '<|end|>' → logprob: -1.875316858291626
    4. ' parts' → logprob: -3.500316858291626
    5. '   ' → logprob: -3.750316858291626
    6. 'for' → logprob: -4.750317096710205
    7. 'name' → logprob: -5.375317096710205
    8. '\n' → logprob: -5.750317096710205
    9. 'newline' → logprob: -5.750317096710205
    10. '```' → logprob: -6.375317096710205

Token 145: ' In' (ID: 730)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.004822530318051577
    2. ' parts' → logprob: -5.379822731018066
    3. '   ' → logprob: -9.879822731018066
    4. '#' → logprob: -10.629822731018066
    5. 'for' → logprob: -10.629822731018066
    6. 'perm' → logprob: -10.879822731018066
    7. 'if' → logprob: -11.254822731018066
    8. 'part' → logprob: -11.379822731018066
    9. 'per' → logprob: -11.879822731018066
    10. 'import' → logprob: -11.879822731018066

Token 146: 'vert' (ID: 2339)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.3472519814968109
    2. 'parts' → logprob: -1.3472520112991333
    3. '   ' → logprob: -3.7222518920898438
    4. '#' → logprob: -6.472251892089844
    5. 'dex' → logprob: -6.722251892089844
    6. 'v' → logprob: -7.222251892089844
    7. 'for' → logprob: -7.222251892089844
    8. 'sert' → logprob: -7.597251892089844
    9. '       ' → logprob: -7.847251892089844
    10. '    ' → logprob: -8.097251892089844

Token 147: ' perm' (ID: 5961)
  Prédit: '_perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -0.37959328293800354
    2. 'perm' → logprob: -1.3795932531356812
    3. ' perm' → logprob: -2.7545933723449707
    4. ' permutation' → logprob: -8.629592895507812
    5. '_' → logprob: -9.379592895507812
    6. '_per' → logprob: -9.379592895507812
    7. 'ed' → logprob: -9.504592895507812
    8. 'Perm' → logprob: -10.379592895507812
    9. 'per' → logprob: -10.754592895507812
    10. ' =' → logprob: -11.629592895507812

Token 148: ' to' (ID: 316)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.04868433251976967
    2. 'invert' → logprob: -4.048684120178223
    3. 'perm' → logprob: -4.548684120178223
    4. '   ' → logprob: -4.798684120178223
    5. ' inv' → logprob: -4.923684120178223
    6. 'inverse' → logprob: -5.923684120178223
    7. '_inv' → logprob: -7.548684120178223
    8. ' perm' → logprob: -8.423684120178223
    9. ' =' → logprob: -8.923684120178223
    10. ' invert' → logprob: -9.048684120178223

Token 149: ' get' (ID: 717)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6721166372299194
    2. ' parts' → logprob: -2.547116756439209
    3. '#' → logprob: -2.672116756439209
    4. 'get' → logprob: -2.797116756439209
    5. 'perm' → logprob: -3.047116756439209
    6. ' get' → logprob: -3.172116756439209
    7. '{' → logprob: -3.422116756439209
    8. 'invert' → logprob: -3.672116756439209
    9. ' [' → logprob: -3.922116756439209
    10. 'parts' → logprob: -4.172116756439209

Token 150: ' mapping' (ID: 22573)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.8123241662979126
    2. ' inv' → logprob: -1.5623241662979126
    3. ' inverse' → logprob: -1.8123241662979126
    4. 'inverse' → logprob: -1.8123241662979126
    5. ' the' → logprob: -6.062324047088623
    6. ' its' → logprob: -6.187324047088623
    7. ' part' → logprob: -6.312324047088623
    8. 'perm' → logprob: -6.437324047088623
    9. 'invert' → logprob: -6.562324047088623
    10. 'part' → logprob: -6.562324047088623

Token 151: ' from' (ID: 591)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.3532960116863251
    2. ' inv' → logprob: -1.2282960414886475
    3. 'inverse' → logprob: -6.228295803070068
    4. '   ' → logprob: -7.103295803070068
    5. ' inverse' → logprob: -7.353295803070068
    6. 'invert' → logprob: -7.478295803070068
    7. 'perm' → logprob: -8.228296279907227
    8. '_inv' → logprob: -8.478296279907227
    9. ' =' → logprob: -8.978296279907227
    10. ' perm' → logprob: -9.478296279907227

Token 152: ' top' (ID: 2344)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -1.4633324146270752
    2. 'final' → logprob: -1.5883324146270752
    3. 'position' → logprob: -1.8383324146270752
    4. ' perm' → logprob: -2.588332414627075
    5. ' final' → logprob: -2.713332414627075
    6. ' position' → logprob: -2.963332414627075
    7. 'positions' → logprob: -3.713332414627075
    8. 'original' → logprob: -3.963332414627075
    9. 'per' → logprob: -3.963332414627075
    10. 'index' → logprob: -4.338332176208496

Token 153: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25304338335990906
    2. 'to' → logprob: -1.7530434131622314
    3. '_to' → logprob: -3.5030434131622314
    4. '<|end|>' → logprob: -5.378043174743652
    5. '_' → logprob: -5.753043174743652
    6. 'token' → logprob: -6.378043174743652
    7. 'indices' → logprob: -6.628043174743652
    8. '_token' → logprob: -7.253043174743652
    9. '-level' → logprob: -7.253043174743652
    10. '_indices' → logprob: -7.378043174743652

Token 154: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.004498485010117292
    2. ' bottom' → logprob: -5.629498481750488
    3. 'down' → logprob: -7.504498481750488
    4. 'bot' → logprob: -8.254498481750488
    5. 'perm' → logprob: -9.879498481750488
    6. 'original' → logprob: -11.379498481750488
    7. 'top' → logprob: -12.754498481750488
    8. 'final' → logprob: -12.879498481750488
    9. '_bottom' → logprob: -12.879498481750488
    10. 'per' → logprob: -13.004498481750488

Token 155: '
' (ID: 198)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.1302383542060852
    2. ' inv' → logprob: -2.3802382946014404
    3. 'invert' → logprob: -4.0052385330200195
    4. 'inverse' → logprob: -4.8802385330200195
    5. 'perm' → logprob: -6.2552385330200195
    6. ' invert' → logprob: -7.3802385330200195
    7. '   ' → logprob: -7.6302385330200195
    8. ' inverse' → logprob: -7.6302385330200195
    9. ' perm' → logprob: -9.38023853302002
    10. '_inv' → logprob: -10.13023853302002

Token 156: '   ' (ID: 271)
  Prédit: ' inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.8504446744918823
    2. 'inv' → logprob: -0.8504446744918823
    3. ' perm' → logprob: -2.725444793701172
    4. '   ' → logprob: -3.475444793701172
    5. 'inverse' → logprob: -3.975444793701172
    6. ' inverse' → logprob: -4.350444793701172
    7. '_inv' → logprob: -5.350444793701172
    8. '
' → logprob: -5.975444793701172
    9. 'perm' → logprob: -5.975444793701172
    10. ' inverted' → logprob: -6.850444793701172

Token 157: ' #' (ID: 1069)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00912513118237257
    2. ' inv' → logprob: -5.759125232696533
    3. 'perm' → logprob: -5.884125232696533
    4. 'inverse' → logprob: -6.009125232696533
    5. 'invert' → logprob: -7.509125232696533
    6. 'ip' → logprob: -10.009124755859375
    7. 'in' → logprob: -10.259124755859375
    8. 'pos' → logprob: -10.884124755859375
    9. 'rev' → logprob: -11.009124755859375
    10. ' inverse' → logprob: -11.759124755859375

Token 158: ' Actually' (ID: 50557)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.01716495491564274
    2. ' inv' → logprob: -4.892165184020996
    3. 'inverse' → logprob: -5.142165184020996
    4. 'perm' → logprob: -5.892165184020996
    5. 'invert' → logprob: -7.517165184020996
    6. 'rev' → logprob: -9.142165184020996
    7. 'pos' → logprob: -9.392165184020996
    8. 'ip' → logprob: -9.767165184020996
    9. 'in' → logprob: -10.267165184020996
    10. ' inverse' → logprob: -10.392165184020996

Token 159: ' we' (ID: 581)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.7380127310752869
    2. ',' → logprob: -1.3630127906799316
    3. 'perm' → logprob: -1.7380127906799316
    4. ' inv' → logprob: -3.2380127906799316
    5. ' perm' → logprob: -4.113012790679932
    6. 'invert' → logprob: -4.738012790679932
    7. 'inverse' → logprob: -5.238012790679932
    8. ' for' → logprob: -5.613012790679932
    9. ' we' → logprob: -5.738012790679932
    10. ' inverse' → logprob: -6.113012790679932

Token 160: ' want' (ID: 1682)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.13506411015987396
    2. ' need' → logprob: -2.885064125061035
    3. 'should' → logprob: -3.385064125061035
    4. 'want' → logprob: -4.385064125061035
    5. ' want' → logprob: -5.135064125061035
    6. ' should' → logprob: -5.135064125061035
    7. 'invert' → logprob: -5.510064125061035
    8. '=' → logprob: -5.885064125061035
    9. 'have' → logprob: -6.385064125061035
    10. '#' → logprob: -7.260064125061035

Token 161: ':' (ID: 25)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24846118688583374
    2. 'to' → logprob: -2.2484612464904785
    3. ' the' → logprob: -2.3734612464904785
    4. 'the' → logprob: -4.6234612464904785
    5. 'top' → logprob: -5.7484612464904785
    6. ' top' → logprob: -6.4984612464904785
    7. 'perm' → logprob: -6.4984612464904785
    8. ' a' → logprob: -6.6234612464904785
    9. ' inverse' → logprob: -6.9984612464904785
    10. ' perm' → logprob: -7.3734612464904785

Token 162: ' start' (ID: 1604)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.9152435064315796
    2. ' inv' → logprob: -1.0402435064315796
    3. 'top' → logprob: -2.915243625640869
    4. 'inverse' → logprob: -2.915243625640869
    5. ' inverse' → logprob: -3.415243625640869
    6. ' top' → logprob: -3.790243625640869
    7. 'for' → logprob: -4.040243625640869
    8. ' for' → logprob: -4.290243625640869
    9. 'perm' → logprob: -4.290243625640869
    10. 'from' → logprob: -5.040243625640869

Token 163: ' from' (ID: 591)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.1117933988571167
    2. '_pos' → logprob: -1.6117933988571167
    3. ' =' → logprob: -1.7367933988571167
    4. '_positions' → logprob: -2.1117935180664062
    5. 'to' → logprob: -2.4867935180664062
    6. 'pos' → logprob: -3.3617935180664062
    7. '_indices' → logprob: -4.611793518066406
    8. 'from' → logprob: -4.986793518066406
    9. '=' → logprob: -5.111793518066406
    10. '_inv' → logprob: -5.361793518066406

Token 164: ' top' (ID: 2344)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.7636749744415283
    2. '0' → logprob: -1.5136749744415283
    3. 'bottom' → logprob: -2.7636749744415283
    4. ' perm' → logprob: -2.8886749744415283
    5. 'top' → logprob: -3.0136749744415283
    6. 'range' → logprob: -3.0136749744415283
    7. 'the' → logprob: -3.2636749744415283
    8. ' range' → logprob: -4.263674736022949
    9. '[' → logprob: -4.388674736022949
    10. ' bottom' → logprob: -4.513674736022949

Token 165: ' i' (ID: 575)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.197221040725708
    2. ' =' → logprob: -1.447221040725708
    3. '_' → logprob: -2.322221040725708
    4. 'perm' → logprob: -2.447221040725708
    5. '=' → logprob: -2.822221040725708
    6. ' perm' → logprob: -3.322221040725708
    7. 'nd' → logprob: -3.697221040725708
    8. ' ,' → logprob: -3.822221040725708
    9. '_perm' → logprob: -3.822221040725708
    10. 'n' → logprob: -4.197220802307129

Token 167: ' follow' (ID: 2622)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.20107723772525787
    2. ' perm' → logprob: -2.3260772228240967
    3. 'for' → logprob: -4.451077461242676
    4. 'i' → logprob: -4.576077461242676
    5. 'top' → logprob: -4.701077461242676
    6. ' i' → logprob: -4.826077461242676
    7. 'pos' → logprob: -4.826077461242676
    8. ' for' → logprob: -5.326077461242676
    9. ')' → logprob: -5.576077461242676
    10. '[' → logprob: -6.076077461242676

Token 168: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.03697938844561577
    2. ' perm' → logprob: -3.4119794368743896
    3. 'the' → logprob: -6.2869791984558105
    4. ' the' → logprob: -7.5369791984558105
    5. 'per' → logprob: -9.161979675292969
    6. 'inverse' → logprob: -9.161979675292969
    7. 'i' → logprob: -9.286979675292969
    8. ' permutation' → logprob: -9.661979675292969
    9. 'for' → logprob: -9.786979675292969
    10. ' permutations' → logprob: -9.911979675292969

Token 169: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4991053640842438
    2. '<|end|>' → logprob: -1.7491053342819214
    3. '
' → logprob: -2.624105453491211
    4. ',' → logprob: -3.624105453491211
    5. '=' → logprob: -3.999105453491211
    6. '[i' → logprob: -3.999105453491211
    7. '   ' → logprob: -4.124105453491211
    8. '[::-' → logprob: -4.999105453491211
    9. ' for' → logprob: -5.374105453491211
    10. '```' → logprob: -5.374105453491211

Token 170: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.36998793482780457
    2. 'find' → logprob: -2.119987964630127
    3. ' get' → logprob: -2.619987964630127
    4. 'i' → logprob: -2.744987964630127
    5. 'bottom' → logprob: -3.619987964630127
    6. ' find' → logprob: -4.244987964630127
    7. 'index' → logprob: -6.494987964630127
    8. 'perm' → logprob: -6.494987964630127
    9. 'top' → logprob: -6.744987964630127
    10. ' i' → logprob: -6.869987964630127

Token 171: ' bottom' (ID: 8725)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8825142979621887
    2. ' to' → logprob: -1.882514238357544
    3. ' i' → logprob: -2.007514238357544
    4. ' position' → logprob: -2.132514238357544
    5. ' bottom' → logprob: -2.882514238357544
    6. 'position' → logprob: -3.757514238357544
    7. 'the' → logprob: -4.132514476776123
    8. ' final' → logprob: -4.257514476776123
    9. 'i' → logprob: -4.382514476776123
    10. 'to' → logprob: -4.632514476776123

Token 172: '
' (ID: 198)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.1599388122558594
    2. '   ' → logprob: -2.0349388122558594
    3. 'inverse' → logprob: -2.1599388122558594
    4. '<|end|>' → logprob: -2.2849388122558594
    5. '_inv' → logprob: -2.9099388122558594
    6. '
' → logprob: -3.0349388122558594
    7. 'invert' → logprob: -3.0349388122558594
    8. '_inverse' → logprob: -3.5349388122558594
    9. 'perm' → logprob: -3.6599388122558594
    10. ')' → logprob: -4.034938812255859

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0257766246795654
    2. 'inv' → logprob: -1.9007766246795654
    3. 'inverse' → logprob: -2.7757766246795654
    4. '
' → logprob: -3.0257766246795654
    5. ' inv' → logprob: -3.0257766246795654
    6. 'perm' → logprob: -3.0257766246795654
    7. '<|end|>' → logprob: -3.0257766246795654
    8. ' perm' → logprob: -3.1507766246795654
    9. 'in' → logprob: -3.7757766246795654
    10. ' for' → logprob: -3.7757766246795654

Token 174: ' #' (ID: 1069)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.6870289444923401
    2. 'perm' → logprob: -2.4370288848876953
    3. 'in' → logprob: -2.6870288848876953
    4. 'invert' → logprob: -2.6870288848876953
    5. 'inverse' → logprob: -2.8120288848876953
    6. '<|end|>' → logprob: -2.8120288848876953
    7. 'parts' → logprob: -2.9370288848876953
    8. ' parts' → logprob: -3.8120288848876953
    9. 'for' → logprob: -4.562028884887695
    10. '<|end|>' → logprob: -4.562028884887695

Token 175: ' Here' (ID: 7306)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.47433754801750183
    2. 'inv' → logprob: -1.8493375778198242
    3. ' parts' → logprob: -1.9743375778198242
    4. 'in' → logprob: -3.849337577819824
    5. 'for' → logprob: -4.099337577819824
    6. 'perm' → logprob: -4.224337577819824
    7. 'inverse' → logprob: -4.599337577819824
    8. ' inv' → logprob: -5.099337577819824
    9. 'invert' → logprob: -6.099337577819824
    10. ' for' → logprob: -6.099337577819824

Token 176: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -1.0120660066604614
    2. 'inv' → logprob: -1.6370660066604614
    3. 'inverse' → logprob: -2.637065887451172
    4. ',' → logprob: -2.762065887451172
    5. ' perm' → logprob: -3.012065887451172
    6. 'invert' → logprob: -3.012065887451172
    7. '   ' → logprob: -3.137065887451172
    8. ' inv' → logprob: -3.387065887451172
    9. ' is' → logprob: -3.512065887451172
    10. 'in' → logprob: -4.137065887451172

Token 177: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30760499835014343
    2. '<|end|>' → logprob: -1.8076050281524658
    3. '=' → logprob: -2.807605028152466
    4. ' is' → logprob: -4.432604789733887
    5. '<|end|>' → logprob: -4.682604789733887
    6. '[' → logprob: -5.182604789733887
    7. '_inverse' → logprob: -5.682604789733887
    8. '[c' → logprob: -6.307604789733887
    9. ' represents' → logprob: -6.807604789733887
    10. 'inverse' → logprob: -6.932604789733887

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004518769681453705
    2. ' ]' → logprob: -5.754518985748291
    3. ' is' → logprob: -7.879518985748291
    4. ']=' → logprob: -8.004518508911133
    5. '[i' → logprob: -8.629518508911133
    6. ' =' → logprob: -9.504518508911133
    7. '=' → logprob: -9.754518508911133
    8. 'def' → logprob: -10.004518508911133
    9. ')' → logprob: -10.254518508911133
    10. '[' → logprob: -10.879518508911133

Token 179: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4788409173488617
    2. 'the' → logprob: -1.353840947151184
    3. 'position' → logprob: -3.6038408279418945
    4. 'final' → logprob: -3.7288408279418945
    5. 'index' → logprob: -3.9788408279418945
    6. ' the' → logprob: -4.4788408279418945
    7. 'new' → logprob: -4.6038408279418945
    8. 'per' → logprob: -4.7288408279418945
    9. 'perm' → logprob: -5.3538408279418945
    10. 'bottom' → logprob: -5.8538408279418945

Token 181: ' after' (ID: 1934)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' this' (ID: 495)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.32868295907974243
    2. 'per' → logprob: -2.3286828994750977
    3. 'app' → logprob: -2.5786828994750977
    4. ' perm' → logprob: -3.2036828994750977
    5. ' permutation' → logprob: -4.078682899475098
    6. 'i' → logprob: -4.203682899475098
    7. 'the' → logprob: -5.078682899475098
    8. ' following' → logprob: -5.078682899475098
    9. 'following' → logprob: -5.078682899475098
    10. ' applying' → logprob: -5.203682899475098

Token 183: ' part' (ID: 997)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.3590483069419861
    2. ' parts' → logprob: -1.7340483665466309
    3. '<|end|>' → logprob: -2.734048366546631
    4. 'for' → logprob: -3.859048366546631
    5. '   ' → logprob: -4.609048366546631
    6. ')' → logprob: -4.609048366546631
    7. '
' → logprob: -5.234048366546631
    8. '(parts' → logprob: -5.984048366546631
    9. ')
' → logprob: -5.984048366546631
    10. ' for' → logprob: -5.984048366546631

Token 184: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' vertical' (ID: 17679)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15796637535095215
    2. 'element' → logprob: -2.657966375350952
    3. ' i' → logprob: -3.782966375350952
    4. 'position' → logprob: -4.032966613769531
    5. 'top' → logprob: -4.032966613769531
    6. 'the' → logprob: -4.782966613769531
    7. ' element' → logprob: -5.532966613769531
    8. 'index' → logprob: -6.782966613769531
    9. ' the' → logprob: -6.782966613769531
    10. ' top' → logprob: -7.282966613769531

Token 186: ' line' (ID: 2543)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' i' (ID: 575)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.06601287424564362
    2. '   ' → logprob: -3.1910128593444824
    3. ' parts' → logprob: -4.066012859344482
    4. 'for' → logprob: -6.691012859344482
    5. ')' → logprob: -7.066012859344482
    6. '<|end|>' → logprob: -7.066012859344482
    7. '(parts' → logprob: -7.441012859344482
    8. ',' → logprob: -7.566012859344482
    9. '
' → logprob: -7.941012859344482
    10. ')
' → logprob: -8.94101333618164

Token 188: ' (' (ID: 350)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.4415957033634186
    2. '   ' → logprob: -1.6915956735610962
    3. ' parts' → logprob: -2.6915957927703857
    4. 'in' → logprob: -3.6915957927703857
    5. 'for' → logprob: -3.8165957927703857
    6. 'inv' → logprob: -3.9415957927703857
    7. 'inverse' → logprob: -4.941595554351807
    8. ' for' → logprob: -5.441595554351807
    9. '<|end|>' → logprob: -5.441595554351807
    10. 'perm' → logprob: -5.566595554351807

Token 189: 'zero' (ID: 29221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000703376077581197
    2. ')
' → logprob: -7.75070333480835
    3. ' )' → logprob: -8.250703811645508
    4. '<|end|>' → logprob: -12.750703811645508
    5. '#' → logprob: -13.625703811645508
    6. ')

' → logprob: -14.000703811645508
    7. '),' → logprob: -14.125703811645508
    8. ')
' → logprob: -14.500703811645508
    9. ')return' → logprob: -14.500703811645508
    10. ')#' → logprob: -14.500703811645508

Token 190: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.061743684113025665
    2. '-index' → logprob: -2.93674373626709
    3. 'based' → logprob: -5.43674373626709
    4. ' -' → logprob: -6.18674373626709
    5. '-' → logprob: -8.31174373626709
    6. ' based' → logprob: -10.06174373626709
    7. 'Based' → logprob: -10.06174373626709
    8. '_based' → logprob: -10.31174373626709
    9. 'indexed' → logprob: -10.68674373626709
    10. ')' → logprob: -11.31174373626709

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019650737522169948
    2. ')
' → logprob: -9.12519645690918
    3. ' )' → logprob: -9.62519645690918
    4. '#' → logprob: -12.25019645690918
    5. '```' → logprob: -12.62519645690918
    6. ')

' → logprob: -13.37519645690918
    7. ')#' → logprob: -13.50019645690918
    8. '<|end|>' → logprob: -13.50019645690918
    9. '),' → logprob: -13.62519645690918
    10. ',' → logprob: -13.87519645690918

Token 192: '   ' (ID: 271)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.25101226568222046
    2. '   ' → logprob: -1.6260123252868652
    3. ' parts' → logprob: -3.7510123252868652
    4. '<|end|>' → logprob: -7.626012325286865
    5. '(parts' → logprob: -8.626011848449707
    6. '
' → logprob: -8.626011848449707
    7. ')' → logprob: -8.751011848449707
    8. 'for' → logprob: -9.001011848449707
    9. '    
' → logprob: -9.376011848449707
    10. ',' → logprob: -9.626011848449707

Token 193: ' #' (ID: 1069)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.030390409752726555
    2. ' parts' → logprob: -4.03039026260376
    3. '   ' → logprob: -4.78039026260376
    4. 'for' → logprob: -6.40539026260376
    5. 'inv' → logprob: -7.53039026260376
    6. 'perm' → logprob: -8.030390739440918
    7. 'def' → logprob: -8.280390739440918
    8. ')' → logprob: -8.905390739440918
    9. 'per' → logprob: -9.155390739440918
    10. 'invert' → logprob: -9.155390739440918

Token 194: ' But' (ID: 3072)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.004431186243891716
    2. ' parts' → logprob: -5.754431247711182
    3. '   ' → logprob: -8.129430770874023
    4. 'inv' → logprob: -8.379430770874023
    5. 'for' → logprob: -8.504430770874023
    6. '#' → logprob: -9.129430770874023
    7. 'def' → logprob: -10.004430770874023
    8. 'in' → logprob: -10.504430770874023
    9. 'positions' → logprob: -10.504430770874023
    10. 'reverse' → logprob: -10.504430770874023

Token 195: ' the' (ID: 290)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7834262251853943
    2. ' perm' → logprob: -1.658426284790039
    3. 'perm' → logprob: -1.658426284790039
    4. 'we' → logprob: -2.783426284790039
    5. ' the' → logprob: -3.033426284790039
    6. ' for' → logprob: -4.658426284790039
    7. 'the' → logprob: -4.658426284790039
    8. ' to' → logprob: -4.783426284790039
    9. ' you' → logprob: -5.283426284790039
    10. 'for' → logprob: -5.408426284790039

Token 196: ' way' (ID: 2006)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.6425632238388062
    2. ' next' → logprob: -2.0175633430480957
    3. ' code' → logprob: -2.8925633430480957
    4. ' perm' → logprob: -2.8925633430480957
    5. 'for' → logprob: -3.1425633430480957
    6. 'next' → logprob: -3.2675633430480957
    7. ' for' → logprob: -4.142563343048096
    8. '#' → logprob: -4.392563343048096
    9. '=' → logprob: -4.392563343048096
    10. 'parts' → logprob: -4.517563343048096

Token 197: ' we' (ID: 581)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.018985550850629807
    2. ' perm' → logprob: -4.643985748291016
    3. 'the' → logprob: -5.268985748291016
    4. 'you' → logprob: -7.018985748291016
    5. 'it' → logprob: -7.268985748291016
    6. 'per' → logprob: -7.768985748291016
    7. ' the' → logprob: -8.018985748291016
    8. 'part' → logprob: -8.268985748291016
    9. 'parts' → logprob: -8.268985748291016
    10. 'it's' → logprob: -8.518985748291016

Token 198: ' built' (ID: 8113)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.96034175157547
    2. 'apply' → logprob: -1.4603416919708252
    3. 'are' → logprob: -1.9603416919708252
    4. 'constructed' → logprob: -2.585341691970825
    5. ' have' → logprob: -2.960341691970825
    6. 'build' → logprob: -3.835341691970825
    7. ' are' → logprob: -4.085341930389404
    8. ' constructed' → logprob: -4.210341930389404
    9. 'use' → logprob: -4.335341930389404
    10. 'construct' → logprob: -5.085341930389404

Token 199: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.007108659949153662
    2. ' perm' → logprob: -5.007108688354492
    3. 'the' → logprob: -8.382108688354492
    4. 'per' → logprob: -9.507108688354492
    5. ',' → logprob: -10.257108688354492
    6. ' the' → logprob: -10.882108688354492
    7. '#' → logprob: -11.882108688354492
    8. 'part' → logprob: -11.882108688354492
    9. '   ' → logprob: -12.507108688354492
    10. 'it' → logprob: -12.757108688354492

Token 200: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19416122138500214
    2. ' ,' → logprob: -2.4441611766815186
    3. '[i' → logprob: -3.4441611766815186
    4. ' is' → logprob: -3.5691611766815186
    5. '[' → logprob: -4.569161415100098
    6. ' =' → logprob: -5.194161415100098
    7. '<|end|>' → logprob: -5.944161415100098
    8. ')' → logprob: -6.319161415100098
    9. ',
' → logprob: -6.694161415100098
    10. '=' → logprob: -7.319161415100098

Token 201: ' by' (ID: 656)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.6386137008666992
    2. ' not' → logprob: -2.013613700866699
    3. ' reversed' → logprob: -2.263613700866699
    4. ' actually' → logprob: -2.513613700866699
    5. 'from' → logprob: -2.638613700866699
    6. 'the' → logprob: -2.638613700866699
    7. 'not' → logprob: -3.013613700866699
    8. 'actually' → logprob: -3.388613700866699
    9. ' inverted' → logprob: -3.513613700866699
    10. 're' → logprob: -3.638613700866699

Token 202: ' swapping' (ID: 132194)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.8115308880805969
    2. 'sw' → logprob: -1.1865308284759521
    3. ' swapping' → logprob: -1.9365308284759521
    4. ' applying' → logprob: -2.686530828475952
    5. 'com' → logprob: -4.061531066894531
    6. ' iter' → logprob: -5.561531066894531
    7. ' app' → logprob: -6.061531066894531
    8. 'sim' → logprob: -6.186531066894531
    9. ' composing' → logprob: -6.186531066894531
    10. ' sim' → logprob: -6.311531066894531

Token 203: ' perm' (ID: 5961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: '[c' (ID: 22840)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5519298315048218
    2. '[c' → logprob: -0.9269298315048218
    3. '+' → logprob: -4.551929950714111
    4. ']' → logprob: -4.676929950714111
    5. '][' → logprob: -5.801929950714111
    6. '       ' → logprob: -7.301929950714111
    7. '),' → logprob: -7.426929950714111
    8. '[' → logprob: -7.551929950714111
    9. ']
' → logprob: -7.551929950714111
    10. '   ' → logprob: -7.801929950714111

Token 206: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8473882079124451
    2. '])' → logprob: -1.5973882675170898
    3. ',' → logprob: -2.59738826751709
    4. ']' → logprob: -3.09738826751709
    5. '[c' → logprob: -3.47238826751709
    6. '<|end|>' → logprob: -3.47238826751709
    7. '[' → logprob: -3.72238826751709
    8. ')]' → logprob: -3.72238826751709
    9. '[::-' → logprob: -3.72238826751709
    10. '   ' → logprob: -3.84738826751709

Token 207: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.4740796685218811
    2. 'perm' → logprob: -0.9740796685218811
    3. 'per' → logprob: -13.224080085754395
    4. ' perms' → logprob: -14.224080085754395
    5. ' ' → logprob: -16.599079132080078
    6. '_perm' → logprob: -16.974079132080078
    7. 'perf' → logprob: -17.474079132080078
    8. ' ' → logprob: -17.849079132080078
    9. ' perf' → logprob: -18.599079132080078
    10. 'prem' → logprob: -18.599079132080078

Token 208: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.47626737493556e-05
    2. '[' → logprob: -10.62503433227539
    3. 'c' → logprob: -11.87503433227539
    4. '\[' → logprob: -13.87503433227539
    5. ']' → logprob: -14.12503433227539
    6. '[C' → logprob: -14.62503433227539
    7. '```' → logprob: -15.00003433227539
    8. ' [' → logprob: -15.00003433227539
    9. ')' → logprob: -15.62503433227539
    10. '[
' → logprob: -16.00003433227539

Token 209: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012535653077065945
    2. ' +' → logprob: -6.876253604888916
    3. '])' → logprob: -9.501253128051758
    4. '+c' → logprob: -9.501253128051758
    5. '   ' → logprob: -10.001253128051758
    6. '],' → logprob: -11.501253128051758
    7. ']),' → logprob: -12.501253128051758
    8. 'c' → logprob: -12.626253128051758
    9. '+
' → logprob: -13.626253128051758
    10. '1' → logprob: -13.876253128051758

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010163593105971813
    2. ' ' → logprob: -9.750102043151855
    3. '+' → logprob: -10.750102043151855
    4. '   ' → logprob: -11.375102043151855
    5. '```' → logprob: -12.375102043151855
    6. 'c' → logprob: -13.812602043151855
    7. '])' → logprob: -13.937602043151855
    8. ')' → logprob: -14.375102043151855
    9. '  ' → logprob: -15.000102043151855
    10. '     ' → logprob: -15.187602043151855

Token 211: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038438981864601374
    2. '),' → logprob: -6.253843784332275
    3. '):' → logprob: -6.628843784332275
    4. '])' → logprob: -8.253844261169434
    5. ']' → logprob: -9.378844261169434
    6. ' )' → logprob: -9.753844261169434
    7. ')
' → logprob: -9.878844261169434
    8. ',' → logprob: -10.003844261169434
    9. '):
' → logprob: -10.378844261169434
    10. '   ' → logprob: -10.503844261169434

Token 212: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' So' (ID: 2632)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' it' (ID: 480)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.959979236125946
    2. 'perm' → logprob: -1.0849792957305908
    3. '#' → logprob: -2.459979295730591
    4. ' pass' → logprob: -3.084979295730591
    5. 'for' → logprob: -3.209979295730591
    6. ' for' → logprob: -3.459979295730591
    7. 'continue' → logprob: -3.584979295730591
    8. ' perm' → logprob: -4.209979057312012
    9. 'parts' → logprob: -4.959979057312012
    10. ' parts' → logprob: -5.084979057312012

Token 216: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8772037625312805
    2. 's' → logprob: -1.0022037029266357
    3. 'is' → logprob: -2.2522037029266357
    4. ''s' → logprob: -3.2522037029266357
    5. ' seems' → logprob: -4.002203941345215
    6. ' continues' → logprob: -4.627203941345215
    7. ' remains' → logprob: -5.252203941345215
    8. '=' → logprob: -5.377203941345215
    9. 'means' → logprob: -5.627203941345215
    10. ' appears' → logprob: -5.627203941345215

Token 217: ' final' (ID: 1721)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.6333417296409607
    2. ' perm' → logprob: -2.2583417892456055
    3. 'inverse' → logprob: -2.2583417892456055
    4. 'not' → logprob: -2.6333417892456055
    5. ' inverse' → logprob: -3.2583417892456055
    6. ' not' → logprob: -3.3833417892456055
    7. 'the' → logprob: -3.5083417892456055
    8. ' the' → logprob: -3.6333417892456055
    9. 'inv' → logprob: -4.3833417892456055
    10. 'per' → logprob: -4.8833417892456055

Token 218: ' mapping' (ID: 22573)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.11542762070894241
    2. ' parts' → logprob: -2.6154277324676514
    3. '   ' → logprob: -3.3654277324676514
    4. '(parts' → logprob: -7.365427494049072
    5. '<|end|>' → logprob: -8.86542797088623
    6. '.parts' → logprob: -9.11542797088623
    7. ')' → logprob: -9.24042797088623
    8. '
' → logprob: -9.36542797088623
    9. ',' → logprob: -9.86542797088623
    10. '    
' → logprob: -10.36542797088623

Token 219: ' from' (ID: 591)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.16897422075271606
    2. '   ' → logprob: -2.2939741611480713
    3. ' parts' → logprob: -2.9189741611480713
    4. '(parts' → logprob: -8.418973922729492
    5. ')' → logprob: -9.293973922729492
    6. '<|end|>' → logprob: -10.168973922729492
    7. '.parts' → logprob: -10.168973922729492
    8. 'def' → logprob: -10.418973922729492
    9. '_parts' → logprob: -10.793973922729492
    10. 'part' → logprob: -10.918973922729492

Token 220: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.013135521672666073
    2. ' top' → logprob: -4.6381354331970215
    3. 'initial' → logprob: -7.0131354331970215
    4. 'i' → logprob: -7.5131354331970215
    5. 'original' → logprob: -7.5131354331970215
    6. 'input' → logprob: -7.7631354331970215
    7. 'start' → logprob: -8.26313591003418
    8. 'bottom' → logprob: -8.51313591003418
    9. '0' → logprob: -9.26313591003418
    10. 'index' → logprob: -9.63813591003418

Token 221: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.666082501411438
    2. ' to' → logprob: -0.916082501411438
    3. 'to' → logprob: -2.7910823822021484
    4. '=' → logprob: -4.166082382202148
    5. ',' → logprob: -5.541082382202148
    6. ')' → logprob: -6.166082382202148
    7. '<|end|>' → logprob: -6.791082382202148
    8. 'perm' → logprob: -7.166082382202148
    9. '_to' → logprob: -9.041082382202148
    10. ' ,' → logprob: -9.166082382202148

Token 222: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0005673298146575689
    2. ' top' → logprob: -7.500567436218262
    3. 'bottom' → logprob: -11.250567436218262
    4. '[top' → logprob: -15.000567436218262
    5. '	top' → logprob: -15.125567436218262
    6. 'the' → logprob: -15.125567436218262
    7. 'start' → logprob: -16.250566482543945
    8. '(top' → logprob: -16.875566482543945
    9. '```' → logprob: -17.125566482543945
    10. 'initial' → logprob: -17.375566482543945

Token 223: '?' (ID: 30)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41882866621017456
    2. '<|end|>' → logprob: -2.6688287258148193
    3. 'perm' → logprob: -3.0438287258148193
    4. '
' → logprob: -3.1688287258148193
    5. 'inverse' → logprob: -3.1688287258148193
    6. 'inv' → logprob: -3.2938287258148193
    7. 'invert' → logprob: -3.5438287258148193
    8. '```' → logprob: -4.41882848739624
    9. '#' → logprob: -4.66882848739624
    10. 'def' → logprob: -4.66882848739624

Token 224: ' Actually' (ID: 50557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' perm' (ID: 5961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34283286333084106
    2. '<|end|>' → logprob: -1.7178328037261963
    3. ' =' → logprob: -2.4678328037261963
    4. '[c' → logprob: -4.217833042144775
    5. '<|end|>' → logprob: -5.592833042144775
    6. '[i' → logprob: -6.092833042144775
    7. '[' → logprob: -6.217833042144775
    8. '=[' → logprob: -6.967833042144775
    9. ' is' → logprob: -7.092833042144775
    10. '=c' → logprob: -7.467833042144775

Token 227: ' the' (ID: 290)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.004906415939331
    2. 'top' → logprob: -2.254906415939331
    3. ' the' → logprob: -2.379906415939331
    4. ' final' → logprob: -2.379906415939331
    5. 'the' → logprob: -2.504906415939331
    6. ' from' → logprob: -2.629906415939331
    7. ' top' → logprob: -2.879906415939331
    8. 'final' → logprob: -3.004906415939331
    9. 'bottom' → logprob: -3.754906415939331
    10. ' bottom' → logprob: -4.00490665435791

Token 228: ' bottom' (ID: 8725)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -1.457112193107605
    2. 'next' → logprob: -1.582112193107605
    3. 'mapping' → logprob: -1.832112193107605
    4. 'final' → logprob: -1.957112193107605
    5. 'inverse' → logprob: -2.7071123123168945
    6. 'top' → logprob: -3.2071123123168945
    7. 'result' → logprob: -3.2071123123168945
    8. 'current' → logprob: -3.4571123123168945
    9. 'identity' → logprob: -3.7071123123168945
    10. 'forward' → logprob: -4.0821123123168945

Token 229: ' order' (ID: 2569)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8247087597846985
    2. '<|end|>' → logprob: -1.3247087001800537
    3. 'perm' → logprob: -1.9497087001800537
    4. ')' → logprob: -3.3247087001800537
    5. '#' → logprob: -3.9497087001800537
    6. 'inverse' → logprob: -4.574708938598633
    7. 'invert' → logprob: -4.574708938598633
    8. 'inv' → logprob: -4.574708938598633
    9. '<|end|>' → logprob: -4.574708938598633
    10. '
' → logprob: -4.824708938598633

Token 232: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' To' (ID: 2514)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.871654748916626
    2. 'inverse' → logprob: -1.871654748916626
    3. 'for' → logprob: -2.371654748916626
    4. 'inv' → logprob: -2.871654748916626
    5. '#' → logprob: -2.996654748916626
    6. 'invert' → logprob: -3.121654748916626
    7. ')' → logprob: -3.246654748916626
    8. 'def' → logprob: -3.996654748916626
    9. '<|end|>' → logprob: -4.246654510498047
    10. 'Inverse' → logprob: -4.246654510498047

Token 234: ' get' (ID: 717)
  Prédit: 'invert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invert' → logprob: -0.15541335940361023
    2. ' invert' → logprob: -2.1554133892059326
    3. ' get' → logprob: -4.0304131507873535
    4. 'get' → logprob: -5.2804131507873535
    5. 'perm' → logprob: -7.4054131507873535
    6. ' find' → logprob: -7.5304131507873535
    7. 'apply' → logprob: -7.6554131507873535
    8. ' continue' → logprob: -7.7804131507873535
    9. 'find' → logprob: -7.9054131507873535
    10. 'continue' → logprob: -7.9054131507873535

Token 235: ' the' (ID: 290)
  Prédit: ' inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -1.0718114376068115
    2. 'inverse' → logprob: -1.1968114376068115
    3. 'inv' → logprob: -2.0718114376068115
    4. 'top' → logprob: -2.4468114376068115
    5. ' top' → logprob: -3.0718114376068115
    6. ' inv' → logprob: -3.1968114376068115
    7. ' the' → logprob: -3.5718114376068115
    8. 'the' → logprob: -4.696811676025391
    9. 'perm' → logprob: -5.321811676025391
    10. 'start' → logprob: -5.821811676025391

Token 236: ' image' (ID: 3621)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.16901659965515137
    2. ' inverse' → logprob: -2.0440165996551514
    3. 'inv' → logprob: -4.1690168380737305
    4. 'top' → logprob: -6.0440168380737305
    5. 'reverse' → logprob: -6.6690168380737305
    6. ' next' → logprob: -7.0440168380737305
    7. 'next' → logprob: -7.0440168380737305
    8. 'in' → logprob: -7.1690168380737305
    9. 'invert' → logprob: -7.2940168380737305
    10. ' top' → logprob: -7.2940168380737305

Token 237: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10549939423799515
    2. ' of' → logprob: -3.730499505996704
    3. ' perm' → logprob: -4.355499267578125
    4. '=' → logprob: -4.480499267578125
    5. 'perm' → logprob: -4.480499267578125
    6. '_' → logprob: -5.605499267578125
    7. ':' → logprob: -5.605499267578125
    8. 's' → logprob: -5.855499267578125
    9. 'of' → logprob: -5.980499267578125
    10. ',' → logprob: -5.980499267578125

Token 238: ' i' (ID: 575)
  Prédit: ' perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.8592469692230225
    2. 'perm' → logprob: -0.8592469692230225
    3. 'i' → logprob: -2.4842469692230225
    4. ' i' → logprob: -2.9842469692230225
    5. 'top' → logprob: -5.234247207641602
    6. ' top' → logprob: -5.234247207641602
    7. ' the' → logprob: -5.859247207641602
    8. 'the' → logprob: -6.109247207641602
    9. ' a' → logprob: -7.609247207641602
    10. 'pos' → logprob: -7.734247207641602

Token 239: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5141789317131042
    2. '[i' → logprob: -1.764178991317749
    3. '=' → logprob: -2.514178991317749
    4. '[' → logprob: -2.639178991317749
    5. ',' → logprob: -3.389178991317749
    6. ' perm' → logprob: -4.76417875289917
    7. ':' → logprob: -4.88917875289917
    8. ' :' → logprob: -5.38917875289917
    9. ' in' → logprob: -5.38917875289917
    10. 'perm' → logprob: -5.88917875289917

Token 240: ' we' (ID: 581)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.4470868110656738
    2. ' next' → logprob: -1.6970868110656738
    3. ' perm' → logprob: -1.8220868110656738
    4. 'perm' → logprob: -2.447086811065674
    5. 'i' → logprob: -2.572086811065674
    6. ' for' → logprob: -2.822086811065674
    7. ' we' → logprob: -3.947086811065674
    8. ' ' → logprob: -3.947086811065674
    9. ' idx' → logprob: -4.072086811065674
    10. 'inv' → logprob: -4.072086811065674

Token 241: ' just' (ID: 1327)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.6686657071113586
    2. ' need' → logprob: -1.0436656475067139
    3. '=' → logprob: -3.168665647506714
    4. 'need' → logprob: -3.543665647506714
    5. ' should' → logprob: -3.793665647506714
    6. 'should' → logprob: -4.793665885925293
    7. 'want' → logprob: -4.918665885925293
    8. ']' → logprob: -5.293665885925293
    9. ' =' → logprob: -5.293665885925293
    10. 'continue' → logprob: -6.293665885925293

Token 242: ' use' (ID: 1199)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'write' → logprob: -1.1543470621109009
    2. 'need' → logprob: -1.7793470621109009
    3. ' need' → logprob: -2.0293469429016113
    4. 'do' → logprob: -2.4043469429016113
    5. 'apply' → logprob: -2.9043469429016113
    6. 'find' → logprob: -3.1543469429016113
    7. 'print' → logprob: -3.1543469429016113
    8. ' want' → logprob: -3.4043469429016113
    9. 'perm' → logprob: -4.029346942901611
    10. 'follow' → logprob: -4.029346942901611

Token 243: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.018160592764616013
    2. ' perm' → logprob: -4.018160820007324
    3. 'per' → logprob: -12.393160820007324
    4. '[' → logprob: -12.893160820007324
    5. '```' → logprob: -13.643160820007324
    6. '
' → logprob: -13.768160820007324
    7. '`' → logprob: -14.393160820007324
    8. 'space' → logprob: -15.393160820007324
    9. 'perf' → logprob: -15.393160820007324
    10. '_perm' → logprob: -15.768160820007324

Token 244: '[i' (ID: 1768)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.05268923565745354
    2. ' parts' → logprob: -3.67768931388855
    3. '   ' → logprob: -3.92768931388855
    4. '<|end|>' → logprob: -6.302689075469971
    5. ')' → logprob: -6.552689075469971
    6. '(parts' → logprob: -6.802689075469971
    7. 'for' → logprob: -6.802689075469971
    8. ',' → logprob: -9.052689552307129
    9. 'lines' → logprob: -9.302689552307129
    10. '.parts' → logprob: -9.302689552307129

Token 245: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008779930067248642
    2. ' ]' → logprob: -7.625877857208252
    3. '[i' → logprob: -8.50087833404541
    4. '])' → logprob: -8.87587833404541
    5. '[' → logprob: -11.12587833404541
    6. ']
' → logprob: -11.50087833404541
    7. '],' → logprob: -12.50087833404541
    8. ')]' → logprob: -12.62587833404541
    9. ']))' → logprob: -13.12587833404541
    10. '][' → logprob: -13.12587833404541

Token 246: '   ' (ID: 271)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.09042888879776001
    2. '   ' → logprob: -2.8404288291931152
    3. 'for' → logprob: -4.215428829193115
    4. ' parts' → logprob: -4.965428829193115
    5. ')' → logprob: -5.965428829193115
    6. 'def' → logprob: -7.590428829193115
    7. '<|end|>' → logprob: -7.590428829193115
    8. '#' → logprob: -8.090429306030273
    9. '(parts' → logprob: -8.090429306030273
    10. '```' → logprob: -8.215429306030273

Token 247: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.043437130749225616
    2. '   ' → logprob: -3.6684372425079346
    3. '<|end|>' → logprob: -5.1684370040893555
    4. ' parts' → logprob: -5.4184370040893555
    5. ')' → logprob: -5.5434370040893555
    6. '(parts' → logprob: -7.1684370040893555
    7. 'for' → logprob: -7.2934370040893555
    8. '
' → logprob: -8.543437004089355
    9. 'lines' → logprob: -8.668437004089355
    10. '    
' → logprob: -9.043437004089355

Token 248: '[name' (ID: 23001)
  Prédit: '[name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[name' → logprob: -0.0007342241005972028
    2. '[' → logprob: -7.250734329223633
    3. '[line' → logprob: -11.500734329223633
    4. 'name' → logprob: -12.625734329223633
    5. '\[' → logprob: -13.375734329223633
    6. '.setdefault' → logprob: -13.500734329223633
    7. '[size' → logprob: -14.250734329223633
    8. '[
' → logprob: -14.250734329223633
    9. '```' → logprob: -14.375734329223633
    10. '[i' → logprob: -14.875734329223633

Token 249: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008208265644498169
    2. ']=' → logprob: -7.125820636749268
    3. ' ]' → logprob: -12.250821113586426
    4. '])' → logprob: -12.750821113586426
    5. '].' → logprob: -12.875821113586426
    6. '[' → logprob: -13.500821113586426
    7. '=' → logprob: -13.625821113586426
    8. '][' → logprob: -13.875821113586426
    9. '],' → logprob: -14.750821113586426
    10. ']+=' → logprob: -14.750821113586426

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.084072045981884
    2. ' =' → logprob: -2.7090721130371094
    3. '<|end|>' → logprob: -4.834072113037109
    4. ']' → logprob: -5.584072113037109
    5. ')' → logprob: -7.209072113037109
    6. '=[]' → logprob: -7.584072113037109
    7. '[' → logprob: -7.959072113037109
    8. '=[' → logprob: -8.83407211303711
    9. ']=' → logprob: -8.95907211303711
    10. ',' → logprob: -9.08407211303711

Token 251: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.005234952084720135
    2. ' perm' → logprob: -5.255234718322754
    3. 'per' → logprob: -14.255234718322754
    4. '   ' → logprob: -15.005234718322754
    5. 'perf' → logprob: -16.50523567199707
    6. 'tuple' → logprob: -18.50523567199707
    7. '_perm' → logprob: -18.88023567199707
    8. 'pert' → logprob: -19.50523567199707
    9. ' ' → logprob: -19.75523567199707
    10. '(' → logprob: -19.88023567199707

Token 252: '

' (ID: 279)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.428365707397461
    2. 'target' → logprob: -1.553365707397461
    3. 'query' → logprob: -1.553365707397461
    4. 'answer' → logprob: -2.803365707397461
    5. 'result' → logprob: -3.303365707397461
    6. 'final' → logprob: -3.553365707397461
    7. 'rest' → logprob: -3.803365707397461
    8. 'start' → logprob: -3.928365707397461
    9. 'for' → logprob: -4.053365707397461
    10. 'def' → logprob: -4.178365707397461

Token 253: 'E' (ID: 36)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.021139144897461
    2. 'query' → logprob: -2.396139144897461
    3. 'result' → logprob: -2.521139144897461
    4. 'target' → logprob: -2.521139144897461
    5. 'answer' → logprob: -3.146139144897461
    6. '```' → logprob: -3.146139144897461
    7. 'for' → logprob: -3.271139144897461
    8. 'def' → logprob: -3.396139144897461
    9. 'name' → logprob: -3.521139144897461
    10. 'final' → logprob: -3.896139144897461

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.565464735031128
    2. '[' → logprob: -1.690464735031128
    3. ' =' → logprob: -1.690464735031128
    4. '_' → logprob: -1.940464735031128
    5. 'm' → logprob: -2.940464735031128
    6. 'x' → logprob: -3.815464735031128
    7. '#' → logprob: -3.940464735031128
    8. 'for' → logprob: -4.440464973449707
    9. 'of' → logprob: -4.565464973449707
    10. ' parts' → logprob: -4.690464973449707

Token 255: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00765182264149189
    2. ' int' → logprob: -4.8826518058776855
    3. 'K' → logprob: -11.382652282714844
    4. '[int' → logprob: -11.882652282714844
    5. 'map' → logprob: -12.132652282714844
    6. ' K' → logprob: -12.132652282714844
    7. '{}' → logprob: -12.507652282714844
    8. '[]' → logprob: -12.507652282714844
    9. 'len' → logprob: -13.507652282714844
    10. ' ' → logprob: -13.757652282714844

Token 256: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003285520360805094
    2. '(' → logprob: -8.62532901763916
    3. 'input' → logprob: -9.25032901763916
    4. ' (' → logprob: -10.62532901763916
    5. '(E' → logprob: -11.25032901763916
    6. '(int' → logprob: -11.50032901763916
    7. 'E' → logprob: -13.12532901763916
    8. '(
' → logprob: -13.75032901763916
    9. '=input' → logprob: -13.87532901763916
    10. ' input' → logprob: -15.00032901763916

Token 257: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07971657812595367
    2. '()' → logprob: -2.829716682434082
    3. '())
' → logprob: -4.579716682434082
    4. ')' → logprob: -4.954716682434082
    5. '()
' → logprob: -8.704716682434082
    6. '(' → logprob: -9.329716682434082
    7. ')
' → logprob: -11.329716682434082
    8. '())
' → logprob: -12.079716682434082
    9. ' ())' → logprob: -12.454716682434082
    10. '().' → logprob: -12.579716682434082

Token 258: 'express' (ID: 23787)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.0972095727920532
    2. 'for' → logprob: -1.3472095727920532
    3. 'events' → logprob: -2.4722094535827637
    4. 'result' → logprob: -2.4722094535827637
    5. 'answers' → logprob: -2.7222094535827637
    6. 'queries' → logprob: -3.3472094535827637
    7. 'results' → logprob: -3.5972094535827637
    8. 'query' → logprob: -3.9722094535827637
    9. 'ans' → logprob: -4.222209453582764
    10. 'res' → logprob: -4.347209453582764

Token 259: 'ions' (ID: 756)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.5759406089782715
    2. 'ions' → logprob: -0.8259406089782715
    3. ' =' → logprob: -14.32594108581543
    4. 'IONS' → logprob: -15.20094108581543
    5. 's' → logprob: -15.95094108581543
    6. 'i' → logprob: -16.95094108581543
    7. '=' → logprob: -17.07594108581543
    8. '_' → logprob: -17.32594108581543
    9. '```' → logprob: -17.70094108581543
    10. 'iones' → logprob: -17.95094108581543

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00601743720471859
    2. '=' → logprob: -5.131017208099365
    3. '[]' → logprob: -10.256017684936523
    4. 's' → logprob: -11.006017684936523
    5. '=[]' → logprob: -11.006017684936523
    6. '_' → logprob: -11.756017684936523
    7. '[' → logprob: -12.381017684936523
    8. ' ' → logprob: -13.256017684936523
    9. '  ' → logprob: -13.881017684936523
    10. ',' → logprob: -14.006017684936523

Token 261: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3280806839466095
    2. '[' → logprob: -1.828080654144287
    3. '[input' → logprob: -2.328080654144287
    4. ' []' → logprob: -4.078080654144287
    5. ' [' → logprob: -6.078080654144287
    6. '[]
' → logprob: -7.578080654144287
    7. '[int' → logprob: -7.703080654144287
    8. '[list' → logprob: -7.828080654144287
    9. '[line' → logprob: -8.328081130981445
    10. '[array' → logprob: -9.203081130981445

Token 262: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0182405486702919
    2. ' input' → logprob: -4.018240451812744
    3. 'list' → logprob: -9.768240928649902
    4. '(input' → logprob: -11.143240928649902
    5. '[]' → logprob: -11.768240928649902
    6. '[input' → logprob: -12.643240928649902
    7. ')' → logprob: -12.768240928649902
    8. ']' → logprob: -14.143240928649902
    9. '   ' → logprob: -14.268240928649902
    10. ' list' → logprob: -14.268240928649902

Token 263: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6940558552742004
    2. '()]' → logprob: -0.6940558552742004
    3. '().' → logprob: -7.069056034088135
    4. '())' → logprob: -10.319055557250977
    5. '()].' → logprob: -11.694055557250977
    6. ' ()' → logprob: -12.444055557250977
    7. ']' → logprob: -12.819055557250977
    8. ']()' → logprob: -12.819055557250977
    9. '()]
' → logprob: -13.819055557250977
    10. '()+' → logprob: -14.069055557250977

Token 264: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7045362591743469
    2. '().' → logprob: -0.7045362591743469
    3. '()]' → logprob: -5.079536437988281
    4. '.strip' → logprob: -6.204536437988281
    5. '.split' → logprob: -6.329536437988281
    6. ' for' → logprob: -7.954536437988281
    7. ']' → logprob: -8.204536437988281
    8. ')' → logprob: -8.329536437988281
    9. 'for' → logprob: -8.704536437988281
    10. '())' → logprob: -9.579536437988281

Token 265: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020695803686976433
    2. ' in' → logprob: -4.020695686340332
    3. ' _' → logprob: -6.395695686340332
    4. ' range' → logprob: -7.145695686340332
    5. '_E' → logprob: -10.020695686340332
    6. 'in' → logprob: -10.895695686340332
    7. ' E' → logprob: -11.270695686340332
    8. 'range' → logprob: -12.395695686340332
    9. 'E' → logprob: -13.020695686340332
    10. ' ' → logprob: -13.520695686340332

Token 266: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3943342864513397
    2. ' range' → logprob: -1.519334316253662
    3. ' in' → logprob: -2.519334316253662
    4. 'in' → logprob: -3.894334316253662
    5. 'E' → logprob: -5.144334316253662
    6. ' E' → logprob: -8.644333839416504
    7. '_range' → logprob: -9.644333839416504
    8. ' ' → logprob: -10.519333839416504
    9. '_' → logprob: -11.769333839416504
    10. '(E' → logprob: -11.769333839416504

Token 267: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18564735352993011
    2. 'E' → logprob: -1.9356473684310913
    3. ' range' → logprob: -3.6856472492218018
    4. ' E' → logprob: -11.810647010803223
    5. '[E' → logprob: -12.060647010803223
    6. '(range' → logprob: -12.185647010803223
    7. '(E' → logprob: -12.685647010803223
    8. '[' → logprob: -16.56064796447754
    9. ' ' → logprob: -16.81064796447754
    10. '"E' → logprob: -16.93564796447754

Token 268: '(E' (ID: 20882)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.20151741802692413
    2. '(E' → logprob: -1.7015174627304077
    3. ' E' → logprob: -9.201517105102539
    4. '(' → logprob: -13.076517105102539
    5. '
' → logprob: -14.951517105102539
    6. ' ' → logprob: -14.951517105102539
    7. '	E' → logprob: -15.451517105102539
    8. ' (' → logprob: -15.701517105102539
    9. '   ' → logprob: -16.45151710510254
    10. ')' → logprob: -17.20151710510254

Token 269: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3141622543334961
    2. ']' → logprob: -1.314162254333496
    3. ')' → logprob: -7.064162254333496
    4. '])' → logprob: -10.689162254333496
    5. '])]' → logprob: -11.939162254333496
    6. '()]' → logprob: -12.064162254333496
    7. ' ]' → logprob: -12.189162254333496
    8. ']
' → logprob: -13.939162254333496
    9. ')])' → logprob: -14.314162254333496
    10. '}]' → logprob: -14.314162254333496

Token 270: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0834479331970215
    2. 'results' → logprob: -1.3334479331970215
    3. 'stack' → logprob: -2.4584479331970215
    4. 'res' → logprob: -2.7084479331970215
    5. 'def' → logprob: -2.8334479331970215
    6. 'for' → logprob: -2.9584479331970215
    7. 'final' → logprob: -3.2084479331970215
    8. 'answer' → logprob: -3.8334479331970215
    9. 'answers' → logprob: -3.8334479331970215
    10. 'from' → logprob: -3.9584479331970215

Token 271: ' Parsing' (ID: 173321)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5449872016906738
    2. 'for' → logprob: -1.4199872016906738
    3. 'from' → logprob: -2.169987201690674
    4. 'result' → logprob: -3.669987201690674
    5. 'dp' → logprob: -4.294987201690674
    6. 'results' → logprob: -4.294987201690674
    7. 'answers' → logprob: -6.044987201690674
    8. 'answer' → logprob: -6.169987201690674
    9. 'stack' → logprob: -6.169987201690674
    10. 'res' → logprob: -6.294987201690674

Token 272: ' the' (ID: 290)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.05460786819458
    2. ' pos' → logprob: -1.80460786819458
    3. 'def' → logprob: -1.92960786819458
    4. 'tokens' → logprob: -2.42960786819458
    5. 'expr' → logprob: -2.55460786819458
    6. 'idx' → logprob: -2.92960786819458
    7. 'token' → logprob: -3.67960786819458
    8. ' tokens' → logprob: -4.05460786819458
    9. 'import' → logprob: -4.55460786819458
    10. ' idx' → logprob: -4.55460786819458

Token 273: ' expression' (ID: 12973)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24208159744739532
    2. 'from' → logprob: -1.992081642150879
    3. 'import' → logprob: -2.867081642150879
    4. 'for' → logprob: -5.117081642150879
    5. 'next' → logprob: -5.242081642150879
    6. 'express' → logprob: -5.617081642150879
    7. ' next' → logprob: -5.867081642150879
    8. 'token' → logprob: -6.492081642150879
    9. '#' → logprob: -7.867081642150879
    10. ' def' → logprob: -7.867081642150879

Token 274: ' language' (ID: 6439)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7039264440536499
    2. 'pos' → logprob: -1.70392644405365
    3. 'import' → logprob: -2.7039265632629395
    4. 'idx' → logprob: -2.7039265632629395
    5. 'tokens' → logprob: -3.0789265632629395
    6. 'stack' → logprob: -3.4539265632629395
    7. ' pos' → logprob: -4.0789265632629395
    8. 'expr' → logprob: -4.2039265632629395
    9. 'class' → logprob: -4.3289265632629395
    10. 'from' → logprob: -4.4539265632629395

Token 275: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04050316661596298
    2. 'class' → logprob: -4.165503025054932
    3. 'pos' → logprob: -4.415503025054932
    4. 'import' → logprob: -5.040503025054932
    5. 'from' → logprob: -6.665503025054932
    6. 'tokens' → logprob: -6.665503025054932
    7. 'result' → logprob: -7.040503025054932
    8. 'token' → logprob: -7.290503025054932
    9. 'idx' → logprob: -7.790503025054932
    10. 'next' → logprob: -8.04050350189209

Token 276: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.061477821320295334
    2. 'from' → logprob: -3.6864778995513916
    3. 'pos' → logprob: -4.3114776611328125
    4. 'import' → logprob: -4.5614776611328125
    5. 'class' → logprob: -4.8114776611328125
    6. 'idx' → logprob: -7.1864776611328125
    7. 'for' → logprob: -7.4364776611328125
    8. 'token' → logprob: -7.5614776611328125
    9. 'tokens' → logprob: -8.811477661132812
    10. '#' → logprob: -8.811477661132812

Token 277: ' expression' (ID: 12973)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09500200301408768
    2. 'from' → logprob: -3.0950019359588623
    3. 'class' → logprob: -3.3450019359588623
    4. 'import' → logprob: -5.220002174377441
    5. 'for' → logprob: -6.470002174377441
    6. ' def' → logprob: -7.220002174377441
    7. 'token' → logprob: -7.470002174377441
    8. ' class' → logprob: -7.595002174377441
    9. '#' → logprob: -7.595002174377441
    10. ' from' → logprob: -8.970002174377441

Token 278: ' :=' (ID: 3405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5484104156494141
    2. '=' → logprob: -0.9234104156494141
    3. '_tokens' → logprob: -4.048410415649414
    4. 'tokens' → logprob: -5.798410415649414
    5. 's' → logprob: -6.548410415649414
    6. 'def' → logprob: -6.673410415649414
    7. '=[]' → logprob: -8.173410415649414
    8. '_lines' → logprob: -8.423410415649414
    9. '_parts' → logprob: -8.423410415649414
    10. ')' → logprob: -8.548410415649414

Token 279: ' repetition' (ID: 100556)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.8178992867469788
    2. 'factor' → logprob: -2.067899227142334
    3. 'expression' → logprob: -2.442899227142334
    4. ''' → logprob: -2.692899227142334
    5. ' term' → logprob: -2.692899227142334
    6. '"' → logprob: -2.942899227142334
    7. ' factor' → logprob: -3.692899227142334
    8. ' expression' → logprob: -3.817899227142334
    9. ' name' → logprob: -4.067899227142334
    10. 'expr' → logprob: -4.067899227142334

Token 280: ' |' (ID: 1022)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7051098942756653
    2. ' ' → logprob: -2.2051098346710205
    3. '<|end|>' → logprob: -2.3301098346710205
    4. '<|end|>' → logprob: -3.2051098346710205
    5. '(' → logprob: -3.3301098346710205
    6. '=' → logprob: -3.4551098346710205
    7. '*' → logprob: -3.7051098346710205
    8. '\n' → logprob: -3.8301098346710205
    9. '_' → logprob: -3.9551098346710205
    10. '\' → logprob: -4.0801100730896

Token 281: ' term' (ID: 2914)
  Prédit: 'conc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conc' → logprob: -1.012539267539978
    2. 'term' → logprob: -1.262539267539978
    3. 'sequence' → logprob: -1.637539267539978
    4. 'factor' → logprob: -2.7625393867492676
    5. 'expression' → logprob: -3.6375393867492676
    6. 'variable' → logprob: -4.012539386749268
    7. 'identifier' → logprob: -4.012539386749268
    8. 'concat' → logprob: -4.387539386749268
    9. 'composition' → logprob: -5.512539386749268
    10. 'token' → logprob: -6.137539386749268

Token 282: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7648692727088928
    2. 'term' → logprob: -1.889869213104248
    3. 'tokens' → logprob: -2.014869213104248
    4. 'token' → logprob: -2.389869213104248
    5. '#' → logprob: -3.639869213104248
    6. '[' → logprob: -4.014869213104248
    7. '[
' → logprob: -4.264869213104248
    8. '   ' → logprob: -4.389869213104248
    9. '(
' → logprob: -4.389869213104248
    10. 'pos' → logprob: -4.764869213104248

Token 283: ' expression' (ID: 12973)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -2.026289224624634
    2. '[
' → logprob: -2.026289224624634
    3. '[]' → logprob: -2.401289224624634
    4. 'tokens' → logprob: -2.651289224624634
    5. '<|end|>' → logprob: -2.776289224624634
    6. ' =' → logprob: -3.026289224624634
    7. 'for' → logprob: -3.151289224624634
    8. ' ' → logprob: -3.276289224624634
    9. 'def' → logprob: -3.276289224624634
    10. '(
' → logprob: -3.526289224624634

Token 284: ' |' (ID: 1022)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5043059587478638
    2. 'def' → logprob: -1.8793059587478638
    3. '+' → logprob: -3.004305839538574
    4. '```' → logprob: -3.004305839538574
    5. '
' → logprob: -4.504305839538574
    6. 'expression' → logprob: -4.629305839538574
    7. 'for' → logprob: -4.754305839538574
    8. ' =' → logprob: -4.754305839538574
    9. ' #' → logprob: -4.879305839538574
    10. '[' → logprob: -5.004305839538574

Token 285: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.009083430282771587
    2. ' term' → logprob: -5.259083271026611
    3. 're' → logprob: -6.009083271026611
    4. 'factor' → logprob: -7.884083271026611
    5. 'expression' → logprob: -7.884083271026611
    6. '#' → logprob: -8.88408374786377
    7. 'token' → logprob: -9.38408374786377
    8. '''' → logprob: -9.38408374786377
    9. '...' → logprob: -9.50908374786377
    10. 'variable' → logprob: -10.25908374786377

Token 286: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0695165395736694
    2. '<|end|>' → logprob: -1.0695165395736694
    3. '#' → logprob: -2.319516658782959
    4. '<|end|>' → logprob: -2.819516658782959
    5. ' ' → logprob: -3.819516658782959
    6. '=' → logprob: -4.194516658782959
    7. '_' → logprob: -4.194516658782959
    8. 'token' → logprob: -4.444516658782959
    9. '_token' → logprob: -4.569516658782959
    10. 'def' → logprob: -4.694516658782959

Token 287: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13633610308170319
    2. '#' → logprob: -3.511336088180542
    3. 'pos' → logprob: -3.761336088180542
    4. 'token' → logprob: -4.011336326599121
    5. 'term' → logprob: -4.136336326599121
    6. 'tokens' → logprob: -4.136336326599121
    7. 'expression' → logprob: -4.886336326599121
    8. 'next' → logprob: -5.261336326599121
    9. 'expr' → logprob: -6.011336326599121
    10. 'import' → logprob: -6.511336326599121

Token 288: ' repetition' (ID: 100556)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011512365192174911
    2. 'import' → logprob: -5.386512279510498
    3. 'from' → logprob: -5.886512279510498
    4. 'class' → logprob: -6.511512279510498
    5. 'pos' → logprob: -6.636512279510498
    6. '#' → logprob: -7.511512279510498
    7. 'tokens' → logprob: -7.761512279510498
    8. 'token' → logprob: -8.511512756347656
    9. 'Next' → logprob: -11.011512756347656
    10. 'i' → logprob: -11.136512756347656

Token 289: ' :=' (ID: 3405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007084279786795378
    2. '=' → logprob: -5.132084369659424
    3. '<|end|>' → logprob: -8.132083892822266
    4. ' ' → logprob: -8.257083892822266
    5. '_' → logprob: -8.882083892822266
    6. '<|end|>' → logprob: -9.132083892822266
    7. '_token' → logprob: -9.382083892822266
    8. ':' → logprob: -10.132083892822266
    9. ' ::=' → logprob: -10.257083892822266
    10. ',' → logprob: -10.507083892822266

Token 290: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4076473116874695
    2. ' number' → logprob: -2.6576473712921143
    3. 'digit' → logprob: -2.7826473712921143
    4. 'int' → logprob: -3.2826473712921143
    5. 'integer' → logprob: -3.2826473712921143
    6. 'term' → logprob: -3.2826473712921143
    7. 'factor' → logprob: -4.032647132873535
    8. 'num' → logprob: -4.407647132873535
    9. ' integer' → logprob: -5.157647132873535
    10. 'expression' → logprob: -5.282647132873535

Token 291: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' expression' (ID: 12973)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0289311408996582
    2. '[' → logprob: -1.0289311408996582
    3. '(' → logprob: -1.6539311408996582
    4. '<|end|>' → logprob: -2.903931140899658
    5. ''' → logprob: -4.778931140899658
    6. '{' → logprob: -5.028931140899658
    7. '\(' → logprob: -5.278931140899658
    8. ' (' → logprob: -5.528931140899658
    9. '\[' → logprob: -5.903931140899658
    10. '\' → logprob: -6.153931140899658

Token 293: ' )
' (ID: 3270)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36799558997154236
    2. '(' → logprob: -1.3679956197738647
    3. 'tokens' → logprob: -4.242995738983154
    4. 'token' → logprob: -4.742995738983154
    5. ')' → logprob: -4.867995738983154
    6. 'i' → logprob: -5.742995738983154
    7. 'pos' → logprob: -5.742995738983154
    8. '(
' → logprob: -6.117995738983154
    9. '[' → logprob: -6.492995738983154
    10. '#' → logprob: -6.492995738983154

Token 295: ' term' (ID: 2914)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0104127312079072
    2. 'import' → logprob: -5.260412693023682
    3. 'from' → logprob: -5.385412693023682
    4. 'pos' → logprob: -8.13541316986084
    5. 'class' → logprob: -9.01041316986084
    6. 'idx' → logprob: -9.38541316986084
    7. 'index' → logprob: -10.51041316986084
    8. 'i' → logprob: -10.88541316986084
    9. 'tokens' → logprob: -11.26041316986084
    10. '#' → logprob: -11.76041316986084

Token 296: ' :=' (ID: 3405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22342506051063538
    2. '=' → logprob: -1.723425030708313
    3. 'def' → logprob: -4.973424911499023
    4. ':' → logprob: -5.348424911499023
    5. '<|end|>' → logprob: -5.848424911499023
    6. ')' → logprob: -6.473424911499023
    7. ' ' → logprob: -6.723424911499023
    8. 's' → logprob: -8.098424911499023
    9. '```' → logprob: -8.098424911499023
    10. ',' → logprob: -8.098424911499023

Token 297: ' part' (ID: 997)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -1.0941290855407715
    2. '[' → logprob: -1.2191290855407715
    3. '[a' → logprob: -1.2191290855407715
    4. 'name' → logprob: -4.2191290855407715
    5. ' [' → logprob: -4.3441290855407715
    6. '(?:' → logprob: -4.4691290855407715
    7. '[name' → logprob: -4.7191290855407715
    8. 'import' → logprob: -5.0941290855407715
    9. 'a' → logprob: -5.3441290855407715
    10. '([' → logprob: -5.4691290855407715

Token 298: '_name' (ID: 2483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.366371512413025
    2. '(' → logprob: -1.741371512413025
    3. 'tokens' → logprob: -1.866371512413025
    4. 'token' → logprob: -1.991371512413025
    5. ')' → logprob: -2.7413716316223145
    6. '+' → logprob: -2.7413716316223145
    7. ' ' → logprob: -4.2413716316223145
    8. 'pos' → logprob: -4.4913716316223145
    9. '<|end|>' → logprob: -4.8663716316223145
    10. 'import' → logprob: -4.8663716316223145

Token 299: ' |' (ID: 1022)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04621228948235512
    2. 'pos' → logprob: -3.2962121963500977
    3. 'import' → logprob: -5.796212196350098
    4. 'idx' → logprob: -6.546212196350098
    5. 'class' → logprob: -6.796212196350098
    6. 'from' → logprob: -6.921212196350098
    7. 'i' → logprob: -7.421212196350098
    8. 'index' → logprob: -7.421212196350098
    9. 'tokens' → logprob: -8.546212196350098
    10. 'token' → logprob: -9.546212196350098

Token 300: ' repetition' (ID: 100556)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09337350726127625
    2. ''' → logprob: -2.4683735370635986
    3. '"' → logprob: -6.7183732986450195
    4. ' (' → logprob: -7.2183732986450195
    5. '(parts' → logprob: -7.2183732986450195
    6. '("("' → logprob: -7.4683732986450195
    7. '(expression' → logprob: -8.21837329864502
    8. '\(' → logprob: -8.21837329864502
    9. '(?:' → logprob: -9.71837329864502
    10. '(lambda' → logprob: -9.84337329864502

Token 301: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7220655679702759
    2. '(' → logprob: -1.2220655679702759
    3. ')' → logprob: -2.8470654487609863
    4. '<|end|>' → logprob: -3.2220654487609863
    5. 'tokens' → logprob: -3.5970654487609863
    6. 'token' → logprob: -3.8470654487609863
    7. '[' → logprob: -4.722065448760986
    8. '+' → logprob: -4.847065448760986
    9. ' ' → logprob: -5.097065448760986
    10. '```' → logprob: -5.347065448760986

Token 302: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00408801669254899
    2. 'pos' → logprob: -6.379087924957275
    3. 'import' → logprob: -6.504087924957275
    4. 'from' → logprob: -8.004088401794434
    5. 'i' → logprob: -8.254088401794434
    6. 'idx' → logprob: -9.004088401794434
    7. 'class' → logprob: -9.254088401794434
    8. 'index' → logprob: -10.754088401794434
    9. ')' → logprob: -11.504088401794434
    10. '(' → logprob: -11.504088401794434

Token 303: ' number' (ID: 2086)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02975292131304741
    2. 'pos' → logprob: -3.7797529697418213
    3. 'import' → logprob: -5.779752731323242
    4. 'i' → logprob: -6.404752731323242
    5. 'idx' → logprob: -7.154752731323242
    6. 'class' → logprob: -7.779752731323242
    7. 'from' → logprob: -8.154752731323242
    8. 'index' → logprob: -9.029752731323242
    9. 'tokens' → logprob: -9.404752731323242
    10. 'token' → logprob: -10.654752731323242

Token 304: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6667042970657349
    2. ' =' → logprob: -1.1667042970657349
    3. ' ' → logprob: -2.4167041778564453
    4. '=' → logprob: -3.0417041778564453
    5. '<|end|>' → logprob: -4.416704177856445
    6. '[' → logprob: -4.666704177856445
    7. 'def' → logprob: -4.916704177856445
    8. ')' → logprob: -6.166704177856445
    9. 's' → logprob: -6.791704177856445
    10. ',' → logprob: -7.166704177856445

Token 305: ' integer' (ID: 16336)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.06886819005012512
    2. '""' → logprob: -3.1938681602478027
    3. ' ''' → logprob: -4.318868160247803
    4. ''' → logprob: -5.443868160247803
    5. 'r' → logprob: -6.068868160247803
    6. 'int' → logprob: -6.943868160247803
    7. '1' → logprob: -7.068868160247803
    8. '0' → logprob: -7.193868160247803
    9. ' r' → logprob: -7.318868160247803
    10. '[]' → logprob: -7.693868160247803

Token 306: ' >=' (ID: 5064)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.602180540561676
    2. 'pos' → logprob: -1.1021804809570312
    3. 'i' → logprob: -2.8521804809570312
    4. 'import' → logprob: -3.4771804809570312
    5. 'idx' → logprob: -4.227180480957031
    6. 'class' → logprob: -4.977180480957031
    7. 'index' → logprob: -5.227180480957031
    8. 'from' → logprob: -5.727180480957031
    9. 'tokens' → logprob: -6.977180480957031
    10. 'token' → logprob: -8.227180480957031

Token 307: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013777334243059158
    2. '0' → logprob: -6.626377582550049
    3. '2' → logprob: -10.126378059387207
    4. ' ' → logprob: -11.501378059387207
    5. ''' → logprob: -13.501378059387207
    6. '`' → logprob: -15.876378059387207
    7. '3' → logprob: -16.50137710571289
    8. '```' → logprob: -16.50137710571289
    9. '   ' → logprob: -16.75137710571289
    10. '
' → logprob: -17.25137710571289

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6550729419104755e-05
    2. '0' → logprob: -10.375036239624023
    3. ' ' → logprob: -12.250036239624023
    4. '2' → logprob: -15.250036239624023
    5. '   ' → logprob: -15.625036239624023
    6. '
' → logprob: -16.750036239624023
    7. '```' → logprob: -17.625036239624023
    8. ''' → logprob: -18.000036239624023
    9. '  ' → logprob: -18.500036239624023
    10. '`' → logprob: -19.375036239624023

Token 309: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18779300153255463
    2. 'pos' → logprob: -1.9377930164337158
    3. 'i' → logprob: -4.562792778015137
    4. 'idx' → logprob: -4.937792778015137
    5. 'import' → logprob: -5.312792778015137
    6. 'from' → logprob: -6.437792778015137
    7. 'index' → logprob: -6.562792778015137
    8. 'class' → logprob: -6.562792778015137
    9. 'tokens' → logprob: -9.187792778015137
    10. '#' → logprob: -9.937792778015137

Token 310: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011842860840260983
    2. 'pos' → logprob: -5.011842727661133
    3. 'import' → logprob: -6.011842727661133
    4. 'i' → logprob: -6.261842727661133
    5. 'idx' → logprob: -8.011842727661133
    6. 'from' → logprob: -8.511842727661133
    7. 'class' → logprob: -9.261842727661133
    8. 'tokens' → logprob: -9.761842727661133
    9. 'index' → logprob: -10.386842727661133
    10. ' def' → logprob: -11.261842727661133

Token 311: ' part' (ID: 997)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04982662573456764
    2. 'pos' → logprob: -3.2998266220092773
    3. 'import' → logprob: -5.049826622009277
    4. 'i' → logprob: -5.674826622009277
    5. 'class' → logprob: -7.049826622009277
    6. 'from' → logprob: -7.674826622009277
    7. 'idx' → logprob: -7.799826622009277
    8. 'index' → logprob: -9.674826622009277
    9. 'tokens' → logprob: -10.299826622009277
    10. 'token' → logprob: -11.549826622009277

Token 312: '_name' (ID: 2483)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9747436046600342
    2. '<|end|>' → logprob: -0.9747436046600342
    3. '_name' → logprob: -1.7247436046600342
    4. '<|end|>' → logprob: -3.724743604660034
    5. ' =' → logprob: -4.349743843078613
    6. 's' → logprob: -4.724743843078613
    7. 'name' → logprob: -5.724743843078613
    8. '=' → logprob: -5.849743843078613
    9. 'def' → logprob: -6.349743843078613
    10. ' ' → logprob: -6.599743843078613

Token 313: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3787875175476074
    2. '=' → logprob: -1.6287875175476074
    3. '_' → logprob: -2.7537875175476074
    4. '<|end|>' → logprob: -3.3787875175476074
    5. ')' → logprob: -5.128787517547607
    6. ' is' → logprob: -5.503787517547607
    7. '[' → logprob: -6.253787517547607
    8. ' ' → logprob: -6.378787517547607
    9. ',' → logprob: -6.378787517547607
    10. 's' → logprob: -6.628787517547607

Token 314: ' a' (ID: 261)
  Prédit: ''['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''[' → logprob: -0.4408153295516968
    2. '[a' → logprob: -1.9408153295516968
    3. '[A' → logprob: -2.3158154487609863
    4. '"[' → logprob: -2.4408154487609863
    5. 'r' → logprob: -3.9408154487609863
    6. '[r' → logprob: -6.190815448760986
    7. 'a' → logprob: -6.565815448760986
    8. ''' → logprob: -6.690815448760986
    9. 'str' → logprob: -7.190815448760986
    10. ' '[' → logprob: -7.815815448760986

Token 315: ' letter' (ID: 10263)
  Prédit: '-z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.024380790069699287
    2. 'l' → logprob: -4.399380683898926
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.399380683898926
    4. '-Za' → logprob: -5.899380683898926
    5. '"' → logprob: -7.149380683898926
    6. 'str' → logprob: -7.274380683898926
    7. '-Z' → logprob: -7.524380683898926
    8. 'b' → logprob: -7.649380683898926
    9. 'bc' → logprob: -8.024380683898926
    10. ''s' → logprob: -8.524380683898926

Token 316: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7726510763168335
    2. 'import' → logprob: -1.2726510763168335
    3. 'from' → logprob: -2.147651195526123
    4. 'pos' → logprob: -2.272651195526123
    5. 'idx' → logprob: -3.772651195526123
    6. 'i' → logprob: -5.022651195526123
    7. 'class' → logprob: -5.147651195526123
    8. 'index' → logprob: -6.022651195526123
    9. 'stack' → logprob: -8.647650718688965
    10. 'dp' → logprob: -9.022650718688965

Token 317: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21217167377471924
    2. ')' → logprob: -2.0871715545654297
    3. 'A' → logprob: -3.9621715545654297
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.08717155456543
    5. '[a' → logprob: -5.33717155456543
    6. 's' → logprob: -5.33717155456543
    7. ')+' → logprob: -6.08717155456543
    8. ' a' → logprob: -6.21217155456543
    9. 'import' → logprob: -6.33717155456543
    10. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.58717155456543

Token 318: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.14579705893993378
    2. '-Za' → logprob: -2.14579701423645
    3. '-' → logprob: -4.645797252655029
    4. '-z' → logprob: -5.270797252655029
    5. 'Z' → logprob: -5.895797252655029
    6. 'z' → logprob: -7.770797252655029
    7. '..' → logprob: -8.645796775817871
    8. ')' → logprob: -8.645796775817871
    9. '...' → logprob: -9.270796775817871
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.145796775817871

Token 319: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02034730091691017
    2. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -4.6453471183776855
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.6453471183776855
    4. ',' → logprob: -6.5203471183776855
    5. ')]' → logprob: -6.8953471183776855
    6. ')])' → logprob: -6.8953471183776855
    7. '|' → logprob: -7.0203471183776855
    8. '])' → logprob: -7.3953471183776855
    9. ']+' → logprob: -7.3953471183776855
    10. ']' → logprob: -7.8953471183776855

Token 320: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15759608149528503
    2. 'import' → logprob: -2.6575961112976074
    3. 'pos' → logprob: -3.1575961112976074
    4. 'i' → logprob: -4.282596111297607
    5. 'idx' → logprob: -4.407596111297607
    6. 'from' → logprob: -5.532596111297607
    7. 'index' → logprob: -6.032596111297607
    8. '```' → logprob: -7.907596111297607
    9. 'class' → logprob: -8.03259563446045
    10. 'tokens' → logprob: -9.90759563446045

Token 321: ' We' (ID: 1416)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7986337542533875
    2. 'import' → logprob: -1.0486338138580322
    3. 'from' → logprob: -2.2986338138580322
    4. 'class' → logprob: -3.2986338138580322
    5. 'def' → logprob: -3.2986338138580322
    6. 'i' → logprob: -3.9236338138580322
    7. 'idx' → logprob: -5.798633575439453
    8. 'tokens' → logprob: -6.798633575439453
    9. 'token' → logprob: -7.048633575439453
    10. 'index' → logprob: -7.798633575439453

Token 322: ' parse' (ID: 8420)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45132067799568176
    2. ' need' → logprob: -2.4513206481933594
    3. 'def' → logprob: -2.5763206481933594
    4. '=' → logprob: -2.5763206481933594
    5. ' ' → logprob: -3.4513206481933594
    6. ' def' → logprob: -3.8263206481933594
    7. '_' → logprob: -3.9513206481933594
    8. 'import' → logprob: -4.076320648193359
    9. 'm' → logprob: -4.451320648193359
    10. ' want' → logprob: -5.576320648193359

Token 323: ' and' (ID: 326)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6963122487068176
    2. 'import' → logprob: -1.1963121891021729
    3. 'def' → logprob: -1.8213121891021729
    4. 'idx' → logprob: -4.696312427520752
    5. 'index' → logprob: -4.696312427520752
    6. 'class' → logprob: -4.946312427520752
    7. 'i' → logprob: -5.071312427520752
    8. 'from' → logprob: -6.071312427520752
    9. 's' → logprob: -6.946312427520752
    10. '```' → logprob: -7.196312427520752

Token 324: ' generate' (ID: 10419)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.017250608652830124
    2. ' evaluate' → logprob: -4.5172505378723145
    3. 'token' → logprob: -5.7672505378723145
    4. 'eval' → logprob: -6.2672505378723145
    5. 'execute' → logprob: -7.5172505378723145
    6. 'def' → logprob: -8.767251014709473
    7. ' tokenize' → logprob: -9.517251014709473
    8. 'build' → logprob: -9.517251014709473
    9. '#' → logprob: -9.642251014709473
    10. 'expand' → logprob: -9.767251014709473

Token 325: ' the' (ID: 290)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.050530463457107544
    2. 'def' → logprob: -4.175530433654785
    3. 'idx' → logprob: -4.675530433654785
    4. 'tokens' → logprob: -4.800530433654785
    5. 'from' → logprob: -5.675530433654785
    6. ' pos' → logprob: -5.800530433654785
    7. 'import' → logprob: -5.800530433654785
    8. 'index' → logprob: -6.050530433654785
    9. 'code' → logprob: -6.175530433654785
    10. 'i' → logprob: -6.425530433654785

Token 326: ' overall' (ID: 10705)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -1.1118462085723877
    2. 'next' → logprob: -1.2368462085723877
    3. 'def' → logprob: -1.6118462085723877
    4. ' next' → logprob: -2.8618462085723877
    5. 'perm' → logprob: -2.8618462085723877
    6. 'code' → logprob: -3.8618462085723877
    7. 'tokens' → logprob: -3.9868462085723877
    8. ' permutation' → logprob: -4.986845970153809
    9. 'result' → logprob: -5.361845970153809
    10. ' code' → logprob: -5.361845970153809

Token 327: ' permutation' (ID: 135200)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7417840361595154
    2. 'per' → logprob: -1.3667840957641602
    3. 'pos' → logprob: -2.11678409576416
    4. 'perm' → logprob: -2.11678409576416
    5. 'position' → logprob: -4.86678409576416
    6. 'mapping' → logprob: -4.86678409576416
    7. 'code' → logprob: -5.36678409576416
    8. 'import' → logprob: -5.86678409576416
    9. '#' → logprob: -5.86678409576416
    10. ' permutation' → logprob: -7.24178409576416

Token 328: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5070037841796875
    2. 'pos' → logprob: -1.3820037841796875
    3. 'i' → logprob: -3.5070037841796875
    4. 'class' → logprob: -3.7570037841796875
    5. 'import' → logprob: -4.1320037841796875
    6. 'idx' → logprob: -4.1320037841796875
    7. '(' → logprob: -4.2570037841796875
    8. 'index' → logprob: -4.3820037841796875
    9. ')' → logprob: -4.8820037841796875
    10. '
' → logprob: -5.0070037841796875

Token 329: ' each' (ID: 2454)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8431628346443176
    2. ' the' → logprob: -1.0931627750396729
    3. 'each' → logprob: -2.218162775039673
    4. 'express' → logprob: -2.593162775039673
    5. ' each' → logprob: -3.218162775039673
    6. ' expressions' → logprob: -6.093163013458252
    7. 'expression' → logprob: -6.093163013458252
    8. 'def' → logprob: -6.218163013458252
    9. ' an' → logprob: -6.968163013458252
    10. 'an' → logprob: -7.343163013458252

Token 330: ' expression' (ID: 12973)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6744303703308105
    2. 'idx' → logprob: -1.9244303703308105
    3. 'class' → logprob: -1.9244303703308105
    4. 'def' → logprob: -2.0494303703308105
    5. 'index' → logprob: -2.9244303703308105
    6. 'i' → logprob: -5.5494303703308105
    7. 'expression' → logprob: -5.6744303703308105
    8. 'expr' → logprob: -5.9244303703308105
    9. '
' → logprob: -6.2994303703308105
    10. 'position' → logprob: -6.4244303703308105

Token 331: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.619887113571167
    2. 'pos' → logprob: -1.119887113571167
    3. 'idx' → logprob: -2.619887113571167
    4. 'import' → logprob: -3.369887113571167
    5. 'class' → logprob: -3.994887113571167
    6. 'index' → logprob: -5.494887351989746
    7. 'i' → logprob: -5.619887351989746
    8. 'from' → logprob: -6.994887351989746
    9. '```' → logprob: -7.744887351989746
    10. ' pos' → logprob: -7.869887351989746

Token 332: '#' (ID: 2)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02443198300898075
    2. 'def' → logprob: -4.524432182312012
    3. 'idx' → logprob: -4.524432182312012
    4. 'class' → logprob: -6.774432182312012
    5. 'i' → logprob: -7.024432182312012
    6. 'index' → logprob: -8.024432182312012
    7. 'import' → logprob: -9.524432182312012
    8. 'from' → logprob: -11.649432182312012
    9. '```' → logprob: -12.524432182312012
    10. ' pos' → logprob: -12.774432182312012

Token 333: ' Perm' (ID: 20550)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1191021054983139
    2. 'import' → logprob: -2.6191020011901855
    3. 'idx' → logprob: -3.8691020011901855
    4. 'def' → logprob: -4.3691020011901855
    5. 'i' → logprob: -5.6191020011901855
    6. 'index' → logprob: -6.8691020011901855
    7. 'from' → logprob: -7.1191020011901855
    8. 'class' → logprob: -7.8691020011901855
    9. ' pos' → logprob: -11.994102478027344
    10. '```' → logprob: -12.369102478027344

Token 334: 'utations' (ID: 104048)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005492129363119602
    2. 'utations' → logprob: -5.755492210388184
    3. 'utation' → logprob: -6.255492210388184
    4. 's' → logprob: -8.880492210388184
    5. 'ut' → logprob: -9.505492210388184
    6. 'import' → logprob: -9.630492210388184
    7. ' def' → logprob: -10.130492210388184
    8. '_cache' → logprob: -10.630492210388184
    9. '_parts' → logprob: -11.505492210388184
    10. '#' → logprob: -12.005492210388184

Token 335: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42852938175201416
    2. 'def' → logprob: -1.3035293817520142
    3. '=' → logprob: -2.9285292625427246
    4. '_' → logprob: -4.178529262542725
    5. 'import' → logprob: -5.678529262542725
    6. ',' → logprob: -6.678529262542725
    7. ' def' → logprob: -7.428529262542725
    8. ')' → logprob: -7.928529262542725
    9. '
' → logprob: -7.928529262542725
    10. 's' → logprob: -8.053529739379883

Token 336: ' lists' (ID: 19471)
  Prédit: 'represented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represented' → logprob: -0.21092353761196136
    2. ' represented' → logprob: -1.7109235525131226
    3. 'lists' → logprob: -5.335923671722412
    4. ' lists' → logprob: -5.460923671722412
    5. 'list' → logprob: -8.210923194885254
    6. 'functions' → logprob: -10.085923194885254
    7. 'com' → logprob: -10.585923194885254
    8. 'stored' → logprob: -11.210923194885254
    9. ' functions' → logprob: -11.460923194885254
    10. 'encoded' → logprob: -11.710923194885254

Token 337: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' length' (ID: 5517)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00022606621496379375
    2. 'inte' → logprob: -8.750226020812988
    3. 'ints' → logprob: -10.625226020812988
    4. ' int' → logprob: -11.000226020812988
    5. ' integers' → logprob: -11.000226020812988
    6. '[int' → logprob: -11.625226020812988
    7. '<int' → logprob: -15.250226020812988
    8. ' ints' → logprob: -15.250226020812988
    9. 'length' → logprob: -15.375226020812988
    10. 'indices' → logprob: -16.000226974487305

Token 339: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.8961017202818766e-05
    2. ' N' → logprob: -9.750059127807617
    3. '(N' → logprob: -15.250059127807617
    4. '[N' → logprob: -15.750059127807617
    5. '`' → logprob: -16.250059127807617
    6. '```' → logprob: -16.625059127807617
    7. ' ' → logprob: -18.375059127807617
    8. '=N' → logprob: -19.125059127807617
    9. '``' → logprob: -19.750059127807617
    10. '_N' → logprob: -20.000059127807617

Token 340: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3960894048213959
    2. 'pos' → logprob: -1.1460894346237183
    3. 'idx' → logprob: -5.021089553833008
    4. 'class' → logprob: -6.646089553833008
    5. 'index' → logprob: -7.396089553833008
    6. 'import' → logprob: -7.646089553833008
    7. 'from' → logprob: -8.771089553833008
    8. 'i' → logprob: -11.396089553833008
    9. 'position' → logprob: -11.646089553833008
    10. 'expr' → logprob: -12.896089553833008

Token 341: ' mapping' (ID: 22573)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34023571014404297
    2. 'def' → logprob: -1.340235710144043
    3. ' where' → logprob: -4.340235710144043
    4. 'where' → logprob: -5.215235710144043
    5. ' representing' → logprob: -5.465235710144043
    6. 'represent' → logprob: -6.215235710144043
    7. '[' → logprob: -7.215235710144043
    8. ' #' → logprob: -7.590235710144043
    9. 'with' → logprob: -8.840235710144043
    10. 'identity' → logprob: -9.215235710144043

Token 342: ' line' (ID: 2543)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4126858413219452
    2. 'positions' → logprob: -2.1626858711242676
    3. 'top' → logprob: -2.2876858711242676
    4. 'i' → logprob: -2.6626858711242676
    5. '0' → logprob: -4.287685871124268
    6. '[' → logprob: -4.412685871124268
    7. 'indices' → logprob: -5.037685871124268
    8. 'position' → logprob: -5.162685871124268
    9. ' positions' → logprob: -5.787685871124268
    10. ' i' → logprob: -6.162685871124268

Token 343: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5254358053207397
    2. '=' → logprob: -1.6504358053207397
    3. 's' → logprob: -2.7754359245300293
    4. 'from' → logprob: -3.1504359245300293
    5. ')' → logprob: -3.5254359245300293
    6. ' to' → logprob: -4.150435924530029
    7. ']' → logprob: -4.650435924530029
    8. '[' → logprob: -5.150435924530029
    9. 'to' → logprob: -5.150435924530029
    10. 'def' → logprob: -5.275435924530029

Token 344: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.20568984746932983
    2. 'to' → logprob: -1.7056899070739746
    3. 's' → logprob: -6.955689907073975
    4. 'from' → logprob: -7.205689907073975
    5. ')' → logprob: -7.330689907073975
    6. '_to' → logprob: -7.830689907073975
    7. ' ->' → logprob: -7.955689907073975
    8. '->' → logprob: -8.705689430236816
    9. 'def' → logprob: -8.830689430236816
    10. 'i' → logprob: -9.205689430236816

Token 345: 'top' (ID: 8169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6440208554267883
    2. ' to' → logprob: -1.1440207958221436
    3. 'to' → logprob: -2.0190207958221436
    4. '0' → logprob: -4.769021034240723
    5. 'top' → logprob: -5.019021034240723
    6. ' at' → logprob: -5.519021034240723
    7. ' top' → logprob: -6.019021034240723
    8. 'from' → logprob: -7.019021034240723
    9. 'i' → logprob: -8.394021034240723
    10. ' from' → logprob: -9.144021034240723

Token 346: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23248493671417236
    2. ' to' → logprob: -2.607484817504883
    3. 'to' → logprob: -2.732484817504883
    4. ']' → logprob: -3.732484817504883
    5. '_to' → logprob: -5.107484817504883
    6. 'def' → logprob: -5.482484817504883
    7. '):' → logprob: -5.732484817504883
    8. '#' → logprob: -5.732484817504883
    9. '])' → logprob: -5.732484817504883
    10. 'indices' → logprob: -5.857484817504883

Token 347: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.43427133560180664
    2. ' to' → logprob: -1.5592713356018066
    3. ')' → logprob: -2.6842713356018066
    4. 'from' → logprob: -3.1842713356018066
    5. 'def' → logprob: -4.434271335601807
    6. '#' → logprob: -4.559271335601807
    7. ',' → logprob: -5.559271335601807
    8. '_to' → logprob: -6.309271335601807
    9. '=' → logprob: -6.934271335601807
    10. ' from' → logprob: -8.059270858764648

Token 348: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.18117709457874298
    2. 'position' → logprob: -2.1811771392822266
    3. ' line' → logprob: -3.1811771392822266
    4. ' position' → logprob: -5.806177139282227
    5. 'bottom' → logprob: -5.806177139282227
    6. 'i' → logprob: -6.181177139282227
    7. 'pos' → logprob: -7.306177139282227
    8. 'final' → logprob: -7.306177139282227
    9. ' its' → logprob: -7.431177139282227
    10. 'its' → logprob: -7.806177139282227

Token 349: ' perm' (ID: 5961)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2885599732398987
    2. 'i' → logprob: -1.413559913635254
    3. '[i' → logprob: -5.288559913635254
    4. ')' → logprob: -6.788559913635254
    5. '[' → logprob: -8.163559913635254
    6. ' after' → logprob: -9.163559913635254
    7. ' position' → logprob: -9.163559913635254
    8. '_i' → logprob: -9.288559913635254
    9. ' ' → logprob: -9.538559913635254
    10. '_' → logprob: -9.913559913635254

Token 350: '[i' (ID: 1768)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5931671261787415
    2. ' =' → logprob: -1.8431670665740967
    3. 'def' → logprob: -2.3431670665740967
    4. '=' → logprob: -2.4681670665740967
    5. ']' → logprob: -2.9681670665740967
    6. '=[]' → logprob: -3.9681670665740967
    7. 'utation' → logprob: -4.218167304992676
    8. 'import' → logprob: -5.218167304992676
    9. '_' → logprob: -5.593167304992676
    10. 's' → logprob: -6.593167304992676

Token 351: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.88418151892256e-05
    2. ' ]' → logprob: -10.750059127807617
    3. '],' → logprob: -11.625059127807617
    4. ']=' → logprob: -11.875059127807617
    5. ']
' → logprob: -12.125059127807617
    6. '[' → logprob: -12.500059127807617
    7. ')' → logprob: -13.125059127807617
    8. '])' → logprob: -13.375059127807617
    9. '']' → logprob: -14.125059127807617
    10. ']:' → logprob: -14.125059127807617

Token 352: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04082536697387695
    2. 'def' → logprob: -3.540825366973877
    3. 'idx' → logprob: -4.790825366973877
    4. 'index' → logprob: -6.290825366973877
    5. ' pos' → logprob: -8.165824890136719
    6. 'i' → logprob: -8.415824890136719
    7. 'class' → logprob: -8.540824890136719
    8. 'position' → logprob: -10.165824890136719
    9. '_pos' → logprob: -10.290824890136719
    10. ')' → logprob: -10.915824890136719

Token 353: 'bottom' (ID: 29677)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.545151948928833
    2. 'bottom' → logprob: -1.045151948928833
    3. ')' → logprob: -2.920151948928833
    4. 'i' → logprob: -4.795151710510254
    5. 'the' → logprob: -6.295151710510254
    6. ' bottom' → logprob: -6.545151710510254
    7. '])' → logprob: -7.045151710510254
    8. ' top' → logprob: -7.670151710510254
    9. 'position' → logprob: -7.670151710510254
    10. 'positions' → logprob: -8.295151710510254

Token 354: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050117604434490204
    2. ']' → logprob: -3.1751174926757812
    3. '])' → logprob: -5.050117492675781
    4. 'def' → logprob: -7.800117492675781
    5. '#' → logprob: -9.050117492675781
    6. ' )' → logprob: -10.675117492675781
    7. ')]' → logprob: -10.675117492675781
    8. '[' → logprob: -10.925117492675781
    9. ',' → logprob: -11.300117492675781
    10. ')
' → logprob: -11.425117492675781

Token 355: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08850236982107162
    2. 'pos' → logprob: -2.5885024070739746
    3. 'idx' → logprob: -5.588502407073975
    4. 'import' → logprob: -5.838502407073975
    5. 'class' → logprob: -6.088502407073975
    6. 'index' → logprob: -7.963502407073975
    7. 'from' → logprob: -8.963501930236816
    8. 'i' → logprob: -9.088501930236816
    9. '```' → logprob: -10.838501930236816
    10. ' def' → logprob: -11.088501930236816

Token 356: ' To' (ID: 2514)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.49599552154541016
    2. 'def' → logprob: -0.9959955215454102
    3. 'idx' → logprob: -3.99599552154541
    4. 'class' → logprob: -6.62099552154541
    5. 'import' → logprob: -6.87099552154541
    6. 'index' → logprob: -7.87099552154541
    7. 'i' → logprob: -7.99599552154541
    8. 'from' → logprob: -8.62099552154541
    9. '```' → logprob: -11.49599552154541
    10. 'position' → logprob: -13.12099552154541

Token 357: ' combine' (ID: 21700)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07666262984275818
    2. 'combine' → logprob: -3.451662540435791
    3. 'apply' → logprob: -4.201662540435791
    4. 'define' → logprob: -4.201662540435791
    5. 'parse' → logprob: -6.201662540435791
    6. 'merge' → logprob: -6.326662540435791
    7. 'multiply' → logprob: -6.326662540435791
    8. 'do' → logprob: -6.451662540435791
    9. 'compose' → logprob: -6.951662540435791
    10. 'complete' → logprob: -7.076662540435791

Token 358: ' permutations' (ID: 174595)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -1.0662102699279785
    2. 'per' → logprob: -1.3162102699279785
    3. 'perm' → logprob: -1.5662102699279785
    4. 'two' → logprob: -2.5662102699279785
    5. 'p' → logprob: -3.4412102699279785
    6. ' perm' → logprob: -3.9412102699279785
    7. ' permutations' → logprob: -3.9412102699279785
    8. ' =' → logprob: -4.0662102699279785
    9. ' p' → logprob: -5.3162102699279785
    10. ' perms' → logprob: -6.8162102699279785

Token 359: ' P' (ID: 398)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22929053008556366
    2. '1' → logprob: -2.60429048538208
    3. 'A' → logprob: -3.35429048538208
    4. ' A' → logprob: -3.97929048538208
    5. 'def' → logprob: -4.10429048538208
    6. ' =' → logprob: -4.10429048538208
    7. ' ,' → logprob: -4.35429048538208
    8. '(p' → logprob: -5.72929048538208
    9. '[p' → logprob: -5.85429048538208
    10. ' of' → logprob: -5.97929048538208

Token 360: ' and' (ID: 326)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28979483246803284
    2. ' =' → logprob: -1.7897948026657104
    3. ',' → logprob: -2.789794921875
    4. 'A' → logprob: -5.164794921875
    5. '2' → logprob: -5.914794921875
    6. '[i' → logprob: -6.164794921875
    7. '=' → logprob: -6.289794921875
    8. '[' → logprob: -6.289794921875
    9. 'def' → logprob: -6.539794921875
    10. '_' → logprob: -6.789794921875

Token 361: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.029756855219602585
    2. ' Q' → logprob: -3.529756784439087
    3. '[' → logprob: -13.029756546020508
    4. 'perm' → logprob: -13.154756546020508
    5. 'q' → logprob: -13.904756546020508
    6. '	Q' → logprob: -14.654756546020508
    7. 'M' → logprob: -15.404756546020508
    8. 'P' → logprob: -15.779756546020508
    9. ' ' → logprob: -15.904756546020508
    10. 'p' → logprob: -15.904756546020508

Token 362: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2477654218673706
    2. ':' → logprob: -1.9977654218673706
    3. 'def' → logprob: -3.24776554107666
    4. ' =' → logprob: -4.12276554107666
    5. '):' → logprob: -4.12276554107666
    6. ' ,' → logprob: -5.99776554107666
    7. '[' → logprob: -6.12276554107666
    8. ' :' → logprob: -6.24776554107666
    9. '[i' → logprob: -6.62276554107666
    10. '):
' → logprob: -7.12276554107666

Token 363: 'conc' (ID: 50621)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33520662784576416
    2. 'def' → logprob: -2.7102065086364746
    3. ' p' → logprob: -2.9602065086364746
    4. ')' → logprob: -3.7102065086364746
    5. ' def' → logprob: -3.8352065086364746
    6. ' perm' → logprob: -4.335206508636475
    7. ',' → logprob: -4.335206508636475
    8. 'p' → logprob: -4.460206508636475
    9. ' ):' → logprob: -4.585206508636475
    10. '[' → logprob: -4.710206508636475

Token 364: 'atenate' (ID: 63439)
  Prédit: 'atenate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -0.4776681959629059
    2. 'aten' → logprob: -1.6026681661605835
    3. 'at' → logprob: -1.7276681661605835
    4. '```' → logprob: -7.727668285369873
    5. ')' → logprob: -8.977667808532715
    6. 'ate' → logprob: -9.602667808532715
    7. 'a' → logprob: -10.477667808532715
    8. '+' → logprob: -11.352667808532715
    9. '**' → logprob: -12.602667808532715
    10. ' at' → logprob: -12.727667808532715

Token 365: ' parts' (ID: 7881)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2584795653820038
    2. ' permutations' → logprob: -2.383479595184326
    3. '):
' → logprob: -3.383479595184326
    4. ',' → logprob: -4.008479595184326
    5. '),' → logprob: -4.008479595184326
    6. ')' → logprob: -4.758479595184326
    7. '(p' → logprob: -4.758479595184326
    8. 's' → logprob: -5.508479595184326
    9. ' ' → logprob: -5.633479595184326
    10. ' perm' → logprob: -5.633479595184326

Token 366: ' P' (ID: 398)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2073950618505478
    2. ',' → logprob: -2.332395076751709
    3. '):
' → logprob: -3.082395076751709
    4. '),' → logprob: -4.082395076751709
    5. ')' → logprob: -4.707395076751709
    6. '   ' → logprob: -5.957395076751709
    7. ' =' → logprob: -6.082395076751709
    8. ' ):' → logprob: -6.207395076751709
    9. ' ,' → logprob: -6.332395076751709
    10. '1' → logprob: -6.332395076751709

Token 367: ' followed' (ID: 12661)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32621490955352783
    2. '):' → logprob: -1.7012149095535278
    3. 'def' → logprob: -3.0762147903442383
    4. ')' → logprob: -3.7012147903442383
    5. '):
' → logprob: -4.826214790344238
    6. '),' → logprob: -5.326214790344238
    7. '   ' → logprob: -5.576214790344238
    8. ' =' → logprob: -6.576214790344238
    9. ' ,' → logprob: -6.701214790344238
    10. ' def' → logprob: -7.076214790344238

Token 368: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.005987693555653095
    2. 'Q' → logprob: -5.255987644195557
    3. ' by' → logprob: -7.880987644195557
    4. '=' → logprob: -8.130988121032715
    5. ')' → logprob: -10.505988121032715
    6. '#' → logprob: -10.880988121032715
    7. '   ' → logprob: -11.005988121032715
    8. 'perm' → logprob: -12.255988121032715
    9. ',' → logprob: -12.880988121032715
    10. '```' → logprob: -13.130988121032715

Token 369: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.12692904472351074
    2. ' Q' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.62692928314209
    4. ')' → logprob: -15.62692928314209
    5. ',' → logprob: -16.376928329467773
    6. '	Q' → logprob: -16.501928329467773
    7. '`' → logprob: -16.751928329467773
    8. ',Q' → logprob: -16.876928329467773
    9. 'R' → logprob: -17.001928329467773
    10. 'q' → logprob: -17.126928329467773

Token 370: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05770714953541756
    2. '):
' → logprob: -3.0577070713043213
    3. ' ):' → logprob: -5.5577073097229
    4. '),' → logprob: -6.0577073097229
    5. ')' → logprob: -6.9327073097229
    6. ',' → logprob: -7.4327073097229
    7. 'def' → logprob: -7.8077073097229
    8. ']):' → logprob: -8.432706832885742
    9. ' ):
' → logprob: -8.557706832885742
    10. '):
' → logprob: -9.057706832885742

Token 371: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022341711446642876
    2. ' def' → logprob: -3.897341728210449
    3. ' for' → logprob: -7.647341728210449
    4. ')' → logprob: -8.02234172821045
    5. 'for' → logprob: -8.27234172821045
    6. 'perm' → logprob: -8.39734172821045
    7. ' perm' → logprob: -8.52234172821045
    8. ' we' → logprob: -9.39734172821045
    9. '[' → logprob: -9.64734172821045
    10. 'import' → logprob: -10.27234172821045

Token 372: ' resulting' (ID: 20547)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6733514666557312
    2. ' next' → logprob: -1.673351526260376
    3. 'result' → logprob: -1.798351526260376
    4. ' result' → logprob: -2.673351526260376
    5. ' def' → logprob: -3.798351526260376
    6. ' combined' → logprob: -3.798351526260376
    7. 'next' → logprob: -4.298351287841797
    8. '#' → logprob: -5.423351287841797
    9. 'combined' → logprob: -5.673351287841797
    10. '[' → logprob: -7.673351287841797

Token 373: ' permutation' (ID: 135200)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.4785950183868408
    2. ' =' → logprob: -1.7285950183868408
    3. ' perm' → logprob: -2.103595018386841
    4. '_perm' → logprob: -3.228595018386841
    5. ' permutation' → logprob: -3.728595018386841
    6. 'def' → logprob: -4.853594779968262
    7. ' def' → logprob: -6.228594779968262
    8. '[' → logprob: -6.228594779968262
    9. '=' → logprob: -6.603594779968262
    10. '[i' → logprob: -6.603594779968262

Token 374: ' R' (ID: 460)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013596252538263798
    2. '=' → logprob: -4.513596057891846
    3. ' is' → logprob: -6.013596057891846
    4. ' will' → logprob: -10.138596534729004
    5. ' =[' → logprob: -11.138596534729004
    6. '=[' → logprob: -11.763596534729004
    7. ' has' → logprob: -11.888596534729004
    8. '[' → logprob: -12.013596534729004
    9. ' ' → logprob: -12.763596534729004
    10. ' =
' → logprob: -12.888596534729004

Token 375: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04321875795722008
    2. '=' → logprob: -3.1682188510894775
    3. ' =[' → logprob: -9.043218612670898
    4. '[' → logprob: -10.543218612670898
    5. '=[' → logprob: -10.543218612670898
    6. ' =
' → logprob: -10.793218612670898
    7. '[i' → logprob: -11.293218612670898
    8. ')' → logprob: -12.293218612670898
    9. '=
' → logprob: -12.793218612670898
    10. '   ' → logprob: -13.543218612670898

Token 376: ' R' (ID: 460)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2040981650352478
    2. ' [' → logprob: -1.7040982246398926
    3. '[i' → logprob: -7.204098224639893
    4. '[p' → logprob: -7.204098224639893
    5. '[q' → logprob: -7.704098224639893
    6. '[len' → logprob: -8.079097747802734
    7. '[n' → logprob: -9.079097747802734
    8. '[N' → logprob: -9.704097747802734
    9. '[j' → logprob: -10.204097747802734
    10. '[token' → logprob: -10.329097747802734

Token 377: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760607719421387
    2. ' =' → logprob: -0.8260607719421387
    3. '=[' → logprob: -9.326061248779297
    4. '[i' → logprob: -10.576061248779297
    5. '[' → logprob: -12.076061248779297
    6. ' =[' → logprob: -14.451061248779297
    7. '[c' → logprob: -15.826061248779297
    8. '[u' → logprob: -16.201061248779297
    9. '[p' → logprob: -16.701061248779297
    10. '   ' → logprob: -17.076061248779297

Token 378: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045426786527968943
    2. ']=' → logprob: -7.875454425811768
    3. '=' → logprob: -9.75045394897461
    4. ' ]' → logprob: -11.87545394897461
    5. ' =' → logprob: -12.87545394897461
    6. '[' → logprob: -13.12545394897461
    7. '][' → logprob: -13.37545394897461
    8. '[i' → logprob: -14.12545394897461
    9. ']
' → logprob: -14.25045394897461
    10. '   ' → logprob: -14.87545394897461

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38692185282707214
    2. ' =' → logprob: -1.1369218826293945
    3. ']' → logprob: -10.886921882629395
    4. '[' → logprob: -10.886921882629395
    5. ']=' → logprob: -12.011921882629395
    6. ')' → logprob: -13.136921882629395
    7. '=[' → logprob: -13.261921882629395
    8. ' =[' → logprob: -14.011921882629395
    9. ' =
' → logprob: -14.261921882629395
    10. '   ' → logprob: -14.761921882629395

Token 380: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00012654215970542282
    2. ' Q' → logprob: -9.500126838684082
    3. 'perm' → logprob: -10.625126838684082
    4. 'P' → logprob: -11.500126838684082
    5. 'parts' → logprob: -11.750126838684082
    6. 'q' → logprob: -11.750126838684082
    7. '	Q' → logprob: -14.875126838684082
    8. ' perm' → logprob: -15.750126838684082
    9. '(Q' → logprob: -15.750126838684082
    10. 'per' → logprob: -15.750126838684082

Token 381: '[P' (ID: 132164)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10024042427539825
    2. '[P' → logprob: -2.350240468978882
    3. 'P' → logprob: -10.725240707397461
    4. 'perm' → logprob: -11.600240707397461
    5. '[p' → logprob: -13.850240707397461
    6. '[
' → logprob: -13.975240707397461
    7. '[[' → logprob: -15.350240707397461
    8. ' [' → logprob: -15.850240707397461
    9. '][' → logprob: -16.22524070739746
    10. '_perm' → logprob: -16.47524070739746

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -13.500004768371582
    3. '[I' → logprob: -13.625004768371582
    4. '][' → logprob: -13.750004768371582
    5. ']' → logprob: -14.000004768371582
    6. '[P' → logprob: -15.000004768371582
    7. 'i' → logprob: -16.0000057220459
    8. '[j' → logprob: -16.6250057220459
    9. 'perm' → logprob: -17.1250057220459
    10. 'erm' → logprob: -17.3750057220459

Token 383: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2546205222606659
    2. '[i' → logprob: -1.5046205520629883
    3. ']]' → logprob: -6.254620552062988
    4. '][' → logprob: -7.379620552062988
    5. '])' → logprob: -9.504620552062988
    6. '[' → logprob: -10.754620552062988
    7. ' ]' → logprob: -11.254620552062988
    8. ')]' → logprob: -11.879620552062988
    9. ']]]' → logprob: -12.379620552062988
    10. '])]' → logprob: -12.504620552062988

Token 384: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0021548995282500982
    2. 'class' → logprob: -6.50215482711792
    3. 'pos' → logprob: -8.377155303955078
    4. 'import' → logprob: -8.752155303955078
    5. 'from' → logprob: -8.752155303955078
    6. 'idx' → logprob: -9.877155303955078
    7. 'i' → logprob: -10.252155303955078
    8. '```' → logprob: -11.502155303955078
    9. 'index' → logprob: -12.002155303955078
    10. '
' → logprob: -13.502155303955078

Token 385: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.5764498114585876
    2. ' Parser' → logprob: -0.8264498114585876
    3. 'Tokenizer' → logprob: -8.701449394226074
    4. 'Evaluator' → logprob: -9.451449394226074
    5. '_parser' → logprob: -9.701449394226074
    6. 'Expr' → logprob: -10.076449394226074
    7. 'Node' → logprob: -10.701449394226074
    8. ' Node' → logprob: -10.951449394226074
    9. 'Parse' → logprob: -11.076449394226074
    10. ' Expr' → logprob: -11.201449394226074

Token 386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005848454311490059
    2. ':
' → logprob: -7.875585079193115
    3. '(' → logprob: -9.125584602355957
    4. '():' → logprob: -9.750584602355957
    5. '(object' → logprob: -11.000584602355957
    6. ' :' → logprob: -12.000584602355957
    7. '{' → logprob: -12.750584602355957
    8. '<|end|>' → logprob: -13.250584602355957
    9. '(":' → logprob: -13.375584602355957
    10. '>:' → logprob: -13.375584602355957

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056675899773836136
    2. ' def' → logprob: -3.056675910949707
    3. '	def' → logprob: -6.181675910949707
    4. 'def' → logprob: -6.306675910949707
    5. '    
' → logprob: -6.806675910949707
    6. '<|end|>' → logprob: -7.306675910949707
    7. '    ' → logprob: -7.681675910949707
    8. ' indentation' → logprob: -7.806675910949707
    9. '```' → logprob: -8.181675910949707
    10. '(indent' → logprob: -8.556675910949707

Token 388: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.032336484640836716
    2. '   ' → logprob: -3.657336473464966
    3. 'def' (adapté à ' def') → logprob: -5.157336711883545
    4. '	def' → logprob: -8.657336235046387
    5. ' indentation' → logprob: -10.907336235046387
    6. ' ' → logprob: -11.282336235046387
    7. ' indent' → logprob: -11.532336235046387
    8. '    ' → logprob: -11.782336235046387
    9. '   ' → logprob: -12.157336235046387
    10. ' ' → logprob: -12.282336235046387

Token 389: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.02995666302740574
    2. '__' → logprob: -3.529956579208374
    3. ' __' → logprob: -9.029956817626953
    4. ' init' → logprob: -10.029956817626953
    5. '_init' → logprob: -10.154956817626953
    6. 'def' → logprob: -14.279956817626953
    7. '```' → logprob: -14.529956817626953
    8. '___' → logprob: -14.654956817626953
    9. 'int' → logprob: -14.904956817626953
    10. '`' → logprob: -15.279956817626953

Token 390: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. ' init' → logprob: -14.750000953674316
    3. '(init' → logprob: -16.875
    4. 'int' → logprob: -17.125
    5. '```' → logprob: -18.0
    6. '__' → logprob: -18.25
    7. 'iter' → logprob: -18.875
    8. 'new' → logprob: -19.125
    9. '`' → logprob: -19.25
    10. '   ' → logprob: -19.375

Token 391: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030031058937311172
    2. '__(' → logprob: -3.7800309658050537
    3. '(' → logprob: -5.405031204223633
    4. ' (' → logprob: -7.405031204223633
    5. '<|end|>' → logprob: -7.905031204223633
    6. 'self' → logprob: -8.030031204223633
    7. '(Parser' → logprob: -8.280031204223633
    8. '__' → logprob: -9.280031204223633
    9. '__(
' → logprob: -9.280031204223633
    10. '=self' → logprob: -9.405031204223633

Token 392: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00038837024476379156
    2. ' self' → logprob: -7.875388145446777
    3. '   ' → logprob: -12.500388145446777
    4. '(self' → logprob: -12.500388145446777
    5. '       ' → logprob: -15.250388145446777
    6. '	self' → logprob: -15.500388145446777
    7. ')' → logprob: -15.625388145446777
    8. ' ' → logprob: -16.625389099121094
    9. ',self' → logprob: -17.000389099121094
    10. ',' → logprob: -18.000389099121094

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010213557630777359
    2. 'self' → logprob: -5.010213375091553
    3. ' ,' → logprob: -6.260213375091553
    4. '(self' → logprob: -7.260213375091553
    5. ',self' → logprob: -7.510213375091553
    6. ',input' → logprob: -9.010213851928711
    7. ' self' → logprob: -9.135213851928711
    8. ' (' → logprob: -10.760213851928711
    9. '<|end|>' → logprob: -11.385213851928711
    10. '(' → logprob: -11.510213851928711

Token 394: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038210056722164154
    2. 'expression' → logprob: -4.288209915161133
    3. 's' → logprob: -4.538209915161133
    4. 'expr' → logprob: -5.038209915161133
    5. 'express' → logprob: -5.163209915161133
    6. ' self' → logprob: -7.538209915161133
    7. 'text' → logprob: -8.413209915161133
    8. ' expression' → logprob: -10.413209915161133
    9. 'input' → logprob: -10.788209915161133
    10. ' s' → logprob: -10.913209915161133

Token 395: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3944031894207001
    2. '):
' → logprob: -1.5194032192230225
    3. ',' → logprob: -2.2694032192230225
    4. '):
' → logprob: -6.894402980804443
    5. ' ):' → logprob: -7.519402980804443
    6. '   ' → logprob: -7.644402980804443
    7. ')' → logprob: -7.769402980804443
    8. ':' → logprob: -8.269403457641602
    9. 'self' → logprob: -8.519403457641602
    10. 's' → logprob: -9.144403457641602

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004405074752867222
    2. 's' → logprob: -6.0044050216674805
    3. 'self' → logprob: -7.3794050216674805
    4. ' s' → logprob: -7.3794050216674805
    5. '   ' → logprob: -7.6294050216674805
    6. ' self' → logprob: -9.25440502166748
    7. 'def' → logprob: -10.00440502166748
    8. ' ' → logprob: -10.75440502166748
    9. '     ' → logprob: -12.37940502166748
    10. ' def' → logprob: -12.37940502166748

Token 397: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007751794066280127
    2. '       ' → logprob: -5.007751941680908
    3. ' self' → logprob: -6.882751941680908
    4. '   ' → logprob: -11.88275146484375
    5. '	self' → logprob: -13.50775146484375
    6. ' ' → logprob: -14.50775146484375
    7. 'import' → logprob: -14.75775146484375
    8. 'def' → logprob: -14.88275146484375
    9. '(self' → logprob: -15.00775146484375
    10. '        ' → logprob: -15.75775146484375

Token 398: '.s' (ID: 640)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7501514554023743
    2. '.s' → logprob: -0.7501514554023743
    3. '_s' → logprob: -3.2501513957977295
    4. ' s' → logprob: -4.750151634216309
    5. '_str' → logprob: -6.125151634216309
    6. '_string' → logprob: -6.625151634216309
    7. '.' → logprob: -7.125151634216309
    8. '_code' → logprob: -7.375151634216309
    9. '=s' → logprob: -8.125151634216309
    10. ' .' → logprob: -8.125151634216309

Token 399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030481869354844093
    2. ' =' → logprob: -3.5304818153381348
    3. '=self' → logprob: -7.905481815338135
    4. '=s' → logprob: -8.655482292175293
    5. ',' → logprob: -10.280482292175293
    6. '   ' → logprob: -10.405482292175293
    7. '<|end|>' → logprob: -11.155482292175293
    8. '       ' → logprob: -11.280482292175293
    9. 'import' → logprob: -11.405482292175293
    10. '=[]' → logprob: -11.655482292175293

Token 400: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024756586644798517
    2. ' s' → logprob: -6.002475738525391
    3. '_s' → logprob: -18.62747573852539
    4. '   ' → logprob: -19.75247573852539
    5. ' ' → logprob: -20.00247573852539
    6. '{s' → logprob: -20.00247573852539
    7. '    ' → logprob: -20.75247573852539
    8. '(s' → logprob: -21.00247573852539
    9. '`s' → logprob: -21.12747573852539
    10. '	s' → logprob: -21.37747573852539

Token 401: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021616803482174873
    2. '
' → logprob: -4.6466169357299805
    3. '   ' → logprob: -5.7716169357299805
    4. 'self' → logprob: -5.8966169357299805
    5. 'def' → logprob: -6.1466169357299805
    6. '<|end|>' → logprob: -6.3966169357299805
    7. ',' → logprob: -7.8966169357299805
    8. '0' → logprob: -8.52161693572998
    9. '<|end|>' → logprob: -8.52161693572998
    10. ' self' → logprob: -8.77161693572998

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027958674356341362
    2. '   ' → logprob: -4.402958869934082
    3. 'self' → logprob: -4.527958869934082
    4. 'def' → logprob: -5.777958869934082
    5. ' self' → logprob: -6.902958869934082
    6. ' def' → logprob: -9.527958869934082
    7. ',' → logprob: -9.777958869934082
    8. '	' → logprob: -9.777958869934082
    9. ' ' → logprob: -9.902958869934082
    10. '           ' → logprob: -10.027958869934082

Token 403: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008582308888435364
    2. '       ' → logprob: -5.25858211517334
    3. '   ' → logprob: -6.00858211517334
    4. 'pos' → logprob: -7.13358211517334
    5. ' self' → logprob: -9.50858211517334
    6. 'def' → logprob: -11.50858211517334
    7. ' ' → logprob: -14.50858211517334
    8. '           ' → logprob: -14.50858211517334
    9. '0' → logprob: -14.63358211517334
    10. '	self' → logprob: -15.13358211517334

Token 404: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1570189744234085
    2. '.pos' → logprob: -2.4070188999176025
    3. '.i' → logprob: -2.9070188999176025
    4. 'i' → logprob: -8.032018661499023
    5. 'idx' → logprob: -9.282018661499023
    6. '.idx' → logprob: -9.657018661499023
    7. '_pos' → logprob: -10.532018661499023
    8. 'len' → logprob: -10.782018661499023
    9. '.len' → logprob: -11.032018661499023
    10. 'index' → logprob: -11.032018661499023

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11284126341342926
    2. ' =' → logprob: -2.2378413677215576
    3. '0' → logprob: -11.112841606140137
    4. ' ' → logprob: -13.237841606140137
    5. '<|end|>' → logprob: -14.612841606140137
    6. '+=' → logprob: -14.987841606140137
    7. '    ' → logprob: -14.987841606140137
    8. '   ' → logprob: -15.362841606140137
    9. ' +=' → logprob: -15.612841606140137
    10. ')' → logprob: -15.862841606140137

Token 406: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.500003814697266
    4. '1' → logprob: -23.125003814697266
    5. '  ' → logprob: -23.375003814697266
    6. '       ' → logprob: -23.750003814697266
    7. '     ' → logprob: -24.500003814697266
    8. '۰' → logprob: -24.875003814697266
    9. '         ' → logprob: -25.250003814697266
    10. '```' → logprob: -25.250003814697266

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -22.5
    4. '   ' → logprob: -23.375
    5. '=' → logprob: -23.5
    6. '０' → logprob: -24.25
    7. '[' → logprob: -25.25
    8. '  ' → logprob: -25.375
    9. '```' → logprob: -25.625
    10. '০' → logprob: -25.75

Token 408: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031024407595396042
    2. ' def' → logprob: -4.15602445602417
    3. 'def' → logprob: -4.65602445602417
    4. '<|end|>' → logprob: -6.28102445602417
    5. '       ' → logprob: -6.90602445602417
    6. '    
' → logprob: -7.28102445602417
    7. '	def' → logprob: -7.78102445602417
    8. ' ' → logprob: -7.90602445602417
    9. ':' → logprob: -8.156023979187012
    10. '        
' → logprob: -9.031023979187012

Token 409: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041100796312093735
    2. 'def' → logprob: -4.291100978851318
    3. ' def' → logprob: -4.291100978851318
    4. '    
' → logprob: -4.666100978851318
    5. '	def' → logprob: -6.541100978851318
    6. '<|end|>' → logprob: -7.291100978851318
    7. '        
' → logprob: -7.541100978851318
    8. ' 
' → logprob: -8.16610050201416
    9. '```' → logprob: -8.79110050201416
    10. '       ' → logprob: -9.04110050201416

Token 410: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14318178594112396
    2. '   ' → logprob: -2.268181800842285
    3. ' def' → logprob: -3.518181800842285
    4. '       ' → logprob: -9.143181800842285
    5. '    
' → logprob: -9.393181800842285
    6. '        
' → logprob: -10.518181800842285
    7. '	def' → logprob: -10.893181800842285
    8. 'self' (adapté à ' self') → logprob: -11.768181800842285
    9. '```' → logprob: -13.893181800842285
    10. '
' → logprob: -14.268181800842285

Token 411: '.len' (ID: 41284)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6321161985397339
    2. '_len' → logprob: -1.8821161985397339
    3. '=' → logprob: -2.0071163177490234
    4. 'len' → logprob: -2.6321163177490234
    5. ' def' → logprob: -3.3821163177490234
    6. 'n' → logprob: -3.8821163177490234
    7. 'c' → logprob: -5.132116317749023
    8. '.len' → logprob: -5.257116317749023
    9. '_length' → logprob: -5.382116317749023
    10. 'length' → logprob: -5.382116317749023

Token 412: ' =' (ID: 314)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5069547891616821
    2. '=' → logprob: -2.1319546699523926
    3. ' =' → logprob: -2.2569546699523926
    4. '<|end|>' → logprob: -2.3819546699523926
    5. 's' → logprob: -3.1319546699523926
    6. '(self' → logprob: -3.7569546699523926
    7. 'self' → logprob: -5.131954669952393
    8. '_s' → logprob: -6.006954669952393
    9. '(' → logprob: -6.131954669952393
    10. '=self' → logprob: -7.006954669952393

Token 413: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011048289015889168
    2. ' len' → logprob: -4.511048316955566
    3. '(len' → logprob: -14.511048316955566
    4. '=len' → logprob: -17.63604736328125
    5. '       ' → logprob: -18.01104736328125
    6. '	len' → logprob: -18.51104736328125
    7. '[len' → logprob: -18.76104736328125
    8. '   ' → logprob: -19.01104736328125
    9. ',len' → logprob: -19.38604736328125
    10. '<len' → logprob: -20.76104736328125

Token 414: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0013820211170241237
    2. 's' → logprob: -6.751381874084473
    3. '(self' → logprob: -8.501381874084473
    4. 'self' → logprob: -11.751381874084473
    5. '(' → logprob: -14.251381874084473
    6. ' s' → logprob: -17.12638282775879
    7. '_s' → logprob: -17.62638282775879
    8. ' (' → logprob: -18.75138282775879
    9. '(
' → logprob: -19.00138282775879
    10. ' self' → logprob: -19.50138282775879

Token 415: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006039070431143045
    2. '<|end|>' → logprob: -7.625603675842285
    3. '       ' → logprob: -10.250603675842285
    4. ')
' → logprob: -10.625603675842285
    5. '<|end|>' → logprob: -11.000603675842285
    6. ' )' → logprob: -11.250603675842285
    7. '   ' → logprob: -11.375603675842285
    8. 'self' → logprob: -12.500603675842285
    9. ')}' → logprob: -13.500603675842285
    10. '`)' → logprob: -13.625603675842285

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22642262279987335
    2. ' def' → logprob: -1.851422667503357
    3. 'def' → logprob: -3.3514225482940674
    4. '    
' → logprob: -4.8514227867126465
    5. ' 
' → logprob: -6.8514227867126465
    6. '```' → logprob: -8.101422309875488
    7. ' ' → logprob: -8.226422309875488
    8. '        
' → logprob: -8.351422309875488
    9. '	def' → logprob: -8.601422309875488
    10. '  
' → logprob: -8.726422309875488

Token 417: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.578559160232544
    2. ' def' → logprob: -0.828559160232544
    3. '   ' → logprob: -5.953558921813965
    4. '	def' → logprob: -11.078558921813965
    5. '    
' → logprob: -13.328558921813965
    6. ' next' → logprob: -14.328558921813965
    7. ' 
' → logprob: -14.828558921813965
    8. ' ' → logprob: -15.328558921813965
    9. '_def' → logprob: -15.578558921813965
    10. ' token' → logprob: -15.578558921813965

Token 418: ' peek' (ID: 54757)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.36795666813850403
    2. 'eat' → logprob: -1.6179566383361816
    3. 'next' → logprob: -2.6179566383361816
    4. 'consume' → logprob: -3.4929566383361816
    5. 'skip' → logprob: -5.492956638336182
    6. 'e' → logprob: -7.117956638336182
    7. 'advance' → logprob: -7.367956638336182
    8. 'parse' → logprob: -8.49295711517334
    9. 'accept' → logprob: -8.74295711517334
    10. 'error' → logprob: -9.36795711517334

Token 419: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7029415965080261
    2. '(self' → logprob: -0.8279415965080261
    3. '(' → logprob: -2.702941656112671
    4. ' (' → logprob: -7.452941417694092
    5. ' ()' → logprob: -8.70294189453125
    6. 'self' → logprob: -10.07794189453125
    7. '<|end|>' → logprob: -10.07794189453125
    8. '('' → logprob: -10.95294189453125
    9. 'def' → logprob: -11.70294189453125
    10. ' ' → logprob: -11.70294189453125

Token 420: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.057275187224149704
    2. '()' → logprob: -3.4322752952575684
    3. '():
' → logprob: -5.057275295257568
    4. '():' → logprob: -5.307275295257568
    5. ')' → logprob: -5.932275295257568
    6. 'self' → logprob: -5.932275295257568
    7. '):' → logprob: -5.932275295257568
    8. '(' → logprob: -6.057275295257568
    9. '):
' → logprob: -6.682275295257568
    10. ' ' → logprob: -9.43227481842041

Token 421: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.063185453414917
    2. 'return' → logprob: -1.188185453414917
    3. ' return' → logprob: -1.313185453414917
    4. '       ' → logprob: -2.563185453414917
    5. ' if' → logprob: -6.938185691833496
    6. '   ' → logprob: -7.438185691833496
    7. 'if' → logprob: -7.813185691833496
    8. '	return' → logprob: -8.313185691833496
    9. '()
' → logprob: -8.313185691833496
    10. '           ' → logprob: -8.438185691833496

Token 422: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023450445383787155
    2. ' return' → logprob: -4.0234503746032715
    3. 'if' (adapté à ' if') → logprob: -5.2734503746032715
    4. ' if' → logprob: -8.77345085144043
    5. 'self' → logprob: -12.27345085144043
    6. '       ' → logprob: -14.02345085144043
    7. '   ' → logprob: -15.89845085144043
    8. ':return' → logprob: -16.89845085144043
    9. '	return' → logprob: -17.14845085144043
    10. '        
' → logprob: -17.52345085144043

Token 423: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815006136894226
    2. ' self' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.143150329589844
    4. '	self' → logprob: -17.143150329589844
    5. '(self' → logprob: -17.143150329589844
    6. '   ' → logprob: -18.268150329589844
    7. '       ' → logprob: -19.268150329589844
    8. '_self' → logprob: -19.268150329589844
    9. '0' → logprob: -19.518150329589844
    10. '=self' → logprob: -20.518150329589844

Token 424: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -1.0325924449716695e-05
    2. 'pos' → logprob: -11.50001049041748
    3. '<' → logprob: -17.375009536743164
    4. 'self' → logprob: -17.750009536743164
    5. '[pos' → logprob: -17.875009536743164
    6. ' .' → logprob: -18.125009536743164
    7. '	pos' → logprob: -18.125009536743164
    8. '.len' → logprob: -18.625009536743164
    9. '(pos' → logprob: -19.000009536743164
    10. '_.' → logprob: -19.250009536743164

Token 425: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.13975894451141357
    2. '<len' → logprob: -2.514759063720703
    3. '>=' → logprob: -3.139759063720703
    4. ' <' → logprob: -5.639759063720703
    5. '<size' → logprob: -6.514759063720703
    6. '==' → logprob: -7.889759063720703
    7. '<int' → logprob: -8.514759063720703
    8. '[' → logprob: -8.889759063720703
    9. ' >=' → logprob: -8.889759063720703
    10. '<class' → logprob: -10.014759063720703

Token 426: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2014622688293457
    2. 'len' → logprob: -1.7014622688293457
    3. ' len' → logprob: -10.451461791992188
    4. ' self' → logprob: -10.826461791992188
    5. '(len' → logprob: -17.576461791992188
    6. '=len' → logprob: -17.576461791992188
    7. '   ' → logprob: -17.951461791992188
    8. '	len' → logprob: -18.451461791992188
    9. '	self' → logprob: -18.701461791992188
    10. '[len' → logprob: -19.451461791992188

Token 427: '.len' (ID: 41284)
  Prédit: '.len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.len' → logprob: -0.048613931983709335
    2. 'len' → logprob: -3.048614025115967
    3. '<len' → logprob: -11.048613548278809
    4. '	len' → logprob: -12.298613548278809
    5. '_len' → logprob: -12.673613548278809
    6. '=len' → logprob: -13.673613548278809
    7. ' len' → logprob: -14.173613548278809
    8. ',len' → logprob: -15.048613548278809
    9. '.pos' → logprob: -15.673613548278809
    10. 'Len' → logprob: -15.798613548278809

Token 428: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2988153398036957
    2. 'and' → logprob: -2.2988152503967285
    3. ' and' → logprob: -3.0488152503967285
    4. ':return' → logprob: -3.0488152503967285
    5. ':' → logprob: -3.2988152503967285
    6. '():
' → logprob: -3.9238152503967285
    7. '           ' → logprob: -6.4238152503967285
    8. '):
' → logprob: -6.9238152503967285
    9. '[' → logprob: -7.4238152503967285
    10. 'return' → logprob: -7.6738152503967285

Token 429: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6878840923309326
    2. '           ' → logprob: -0.8128840923309326
    3. ' return' → logprob: -2.9378840923309326
    4. '	return' → logprob: -7.937884330749512
    5. '
' → logprob: -8.562884330749512
    6. ':return' → logprob: -9.187884330749512
    7. '   ' → logprob: -10.062884330749512
    8. '	       ' → logprob: -10.437884330749512
    9. ' ' → logprob: -10.812884330749512
    10. '{return' → logprob: -10.937884330749512

Token 430: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008061755215749145
    2. ' return' → logprob: -7.2508063316345215
    3. '           ' → logprob: -9.250805854797363
    4. '
' → logprob: -16.50080680847168
    5. '	return' → logprob: -17.62580680847168
    6. '            
' → logprob: -17.87580680847168
    7. ':return' → logprob: -18.00080680847168
    8. '   ' → logprob: -18.50080680847168
    9. '{return' → logprob: -18.75080680847168
    10. '       ' → logprob: -18.87580680847168

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '(self' → logprob: -20.501502990722656
    4. '	self' → logprob: -21.001502990722656
    5. '[self' → logprob: -21.876502990722656
    6. '_self' → logprob: -21.876502990722656
    7. '=self' → logprob: -22.251502990722656
    8. 's' → logprob: -22.751502990722656
    9. '`' → logprob: -22.876502990722656
    10. '$self' → logprob: -23.001502990722656

Token 432: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.750001907348633
    3. ' .' → logprob: -14.250001907348633
    4. 's' → logprob: -14.750001907348633
    5. '.user' → logprob: -17.625001907348633
    6. ' ' → logprob: -19.375001907348633
    7. '	s' → logprob: -20.000001907348633
    8. 'user' → logprob: -20.125001907348633
    9. ').' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.625001907348633

Token 433: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00020401719666551799
    2. 'self' → logprob: -8.500204086303711
    3. '[' → logprob: -14.875204086303711
    4. ' self' → logprob: -16.62520408630371
    5. '(self' → logprob: -16.87520408630371
    6. '```' → logprob: -18.00020408630371
    7. '[
' → logprob: -18.37520408630371
    8. '
' → logprob: -18.75020408630371
    9. '	self' → logprob: -19.25020408630371
    10. '   ' → logprob: -19.25020408630371

Token 434: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.38687190413475037
    2. 'pos' → logprob: -1.1368719339370728
    3. '_pos' → logprob: -14.386872291564941
    4. '	pos' → logprob: -15.511872291564941
    5. ' pos' → logprob: -15.761872291564941
    6. '[pos' → logprob: -16.636871337890625
    7. 'Pos' → logprob: -17.511871337890625
    8. ',pos' → logprob: -19.761871337890625
    9. '.position' → logprob: -20.011871337890625
    10. '-pos' → logprob: -20.511871337890625

Token 435: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3357953131198883
    2. 'return' (adapté à ' return') → logprob: -1.835795283317566
    3. '   ' → logprob: -2.8357954025268555
    4. ' return' → logprob: -4.0857954025268555
    5. '        
' → logprob: -4.5857954025268555
    6. ''' → logprob: -4.5857954025268555
    7. '
' → logprob: -4.9607954025268555
    8. 'None' → logprob: -5.3357954025268555
    9. 'else' → logprob: -5.5857954025268555
    10. ' None' → logprob: -5.9607954025268555

Token 438: ' ''

' (ID: 107005)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.00010068230039905757
    2. 'None' → logprob: -9.500101089477539
    3. '""' → logprob: -11.250101089477539
    4. '''
' → logprob: -11.625101089477539
    5. ''' → logprob: -12.750101089477539
    6. ' ''' → logprob: -14.250101089477539
    7. ' None' → logprob: -16.50010108947754
    8. ''',' → logprob: -16.87510108947754
    9. ''\' → logprob: -16.87510108947754
    10. '"' → logprob: -19.00010108947754

Token 439: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14359833300113678
    2. ' def' → logprob: -2.0185983180999756
    3. '   ' → logprob: -7.143598556518555
    4. '```' → logprob: -9.518598556518555
    5. ')' → logprob: -10.518598556518555
    6. '	def' → logprob: -12.143598556518555
    7. ' ' → logprob: -12.268598556518555
    8. '    
' → logprob: -12.393598556518555
    9. '.' → logprob: -12.393598556518555
    10. ' 
' → logprob: -12.518598556518555

Token 440: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005784685257822275
    2. ' def' → logprob: -5.255784511566162
    3. '   ' → logprob: -7.505784511566162
    4. '    
' → logprob: -14.75578498840332
    5. '	def' → logprob: -15.38078498840332
    6. ' ' → logprob: -16.25578498840332
    7. ' 
' → logprob: -16.88078498840332
    8. '  
' → logprob: -18.13078498840332
    9. '       ' → logprob: -18.25578498840332
    10. '```' → logprob: -18.38078498840332

Token 441: ' eat' (ID: 11237)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.302406370639801
    2. 'eat' → logprob: -1.5524063110351562
    3. 'advance' → logprob: -3.0524063110351562
    4. 'next' → logprob: -6.302406311035156
    5. ' consume' → logprob: -9.802406311035156
    6. 'expect' → logprob: -10.052406311035156
    7. 'e' → logprob: -11.177406311035156
    8. 'skip' → logprob: -11.927406311035156
    9. 'accept' → logprob: -11.927406311035156
    10. ' advance' → logprob: -12.052406311035156

Token 442: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48110318183898926
    2. '(self' → logprob: -1.2311031818389893
    3. '('' → logprob: -2.4811031818389893
    4. ' (' → logprob: -5.23110294342041
    5. '("' → logprob: -8.48110294342041
    6. ' ' → logprob: -8.73110294342041
    7. '()' → logprob: -8.73110294342041
    8. '(char' → logprob: -9.35610294342041
    9. '("("' → logprob: -9.60610294342041
    10. 'self' → logprob: -9.98110294342041

Token 443: ',' (ID: 11)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6806049942970276
    2. '(' → logprob: -0.8056049942970276
    3. '(self' → logprob: -3.805604934692383
    4. ')' → logprob: -4.930604934692383
    5. ' ' → logprob: -5.180604934692383
    6. ' (' → logprob: -5.180604934692383
    7. 'self' → logprob: -6.555604934692383
    8. '("("' → logprob: -6.930604934692383
    9. '  ' → logprob: -7.430604934692383
    10. '(
' → logprob: -7.805604934692383

Token 444: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6552361249923706
    2. 'ch' → logprob: -1.9052361249923706
    3. 'char' → logprob: -2.03023624420166
    4. ')' → logprob: -2.03023624420166
    5. 'token' → logprob: -3.03023624420166
    6. 'self' → logprob: -5.28023624420166
    7. ')c' → logprob: -5.53023624420166
    8. ' c' → logprob: -5.65523624420166
    9. ' ' → logprob: -5.78023624420166
    10. ' ch' → logprob: -6.78023624420166

Token 445: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7164559960365295
    2. ')' → logprob: -0.8414559960365295
    3. '=' → logprob: -3.4664559364318848
    4. '):' → logprob: -4.466455936431885
    5. '<|end|>' → logprob: -5.091455936431885
    6. '   ' → logprob: -5.216455936431885
    7. 'self' → logprob: -5.716455936431885
    8. ')=' → logprob: -6.216455936431885
    9. '       ' → logprob: -6.466455936431885
    10. ')return' → logprob: -6.466455936431885

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07728658616542816
    2. '(' → logprob: -4.202286720275879
    3. 'if' → logprob: -4.202286720275879
    4. ' if' → logprob: -4.202286720275879
    5. '(True' → logprob: -4.327286720275879
    6. 'self' → logprob: -4.952286720275879
    7. '(self' → logprob: -6.077286720275879
    8. 'True' → logprob: -6.452286720275879
    9. '   ' → logprob: -6.702286720275879
    10. ' (' → logprob: -6.952286720275879

Token 447: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01832856610417366
    2. 'self' → logprob: -4.768328666687012
    3. ' if' → logprob: -5.268328666687012
    4. '       ' → logprob: -5.893328666687012
    5. 'assert' → logprob: -6.393328666687012
    6. 'return' → logprob: -9.768328666687012
    7. '```' → logprob: -12.018328666687012
    8. '   ' → logprob: -12.143328666687012
    9. '	if' → logprob: -12.393328666687012
    10. 'c' → logprob: -12.393328666687012

Token 448: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141363143920898
    2. ' self' → logprob: -1.701413631439209
    3. '	self' → logprob: -15.826414108276367
    4. '(self' → logprob: -16.201414108276367
    5. '       ' → logprob: -17.326414108276367
    6. 'c' → logprob: -17.451414108276367
    7. ' c' → logprob: -17.451414108276367
    8. ' ' → logprob: -18.451414108276367
    9. '   ' → logprob: -18.576414108276367
    10. ' ' → logprob: -18.951414108276367

Token 449: '.peek' (ID: 73296)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.11244461685419083
    2. '.pos' → logprob: -2.4874446392059326
    3. 'pos' → logprob: -3.8624446392059326
    4. '.peek' → logprob: -6.4874444007873535
    5. 'peek' → logprob: -8.487444877624512
    6. 's' → logprob: -8.487444877624512
    7. ' .' → logprob: -8.862444877624512
    8. '.' → logprob: -9.362444877624512
    9. '[pos' → logprob: -11.362444877624512
    10. ' pos' → logprob: -11.487444877624512

Token 450: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.532864511013031
    2. '()==' → logprob: -1.0328645706176758
    3. '==' → logprob: -2.907864570617676
    4. ' ==' → logprob: -6.032864570617676
    5. ')==' → logprob: -10.032864570617676
    6. ')' → logprob: -10.282864570617676
    7. ']==' → logprob: -11.407864570617676
    8. '=' → logprob: -12.782864570617676
    9. '()!=' → logprob: -13.157864570617676
    10. ' ()' → logprob: -13.657864570617676

Token 451: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14820486307144165
    2. ' ==' → logprob: -2.023204803466797
    3. '()==' → logprob: -5.273204803466797
    4. '()' → logprob: -8.023204803466797
    5. ')==' → logprob: -10.273204803466797
    6. '=' → logprob: -11.773204803466797
    7. ']==' → logprob: -11.898204803466797
    8. ')' → logprob: -11.898204803466797
    9. '===' → logprob: -13.898204803466797
    10. '=='' → logprob: -14.523204803466797

Token 452: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005530327325686812
    2. ' c' → logprob: -7.500553131103516
    3. '	c' → logprob: -19.250553131103516
    4. ')c' → logprob: -19.500553131103516
    5. '(c' → logprob: -20.250553131103516
    6. '```' → logprob: -20.375553131103516
    7. ' ' → logprob: -20.750553131103516
    8. '`' → logprob: -20.750553131103516
    9. '<|end|>' → logprob: -21.250553131103516
    10. '_c' → logprob: -22.000553131103516

Token 453: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.001352379797026515
    2. ':' → logprob: -7.501352310180664
    3. '):
' → logprob: -7.501352310180664
    4. '           ' → logprob: -8.751352310180664
    5. '       ' → logprob: -9.626352310180664
    6. 'self' → logprob: -12.251352310180664
    7. ' :
' → logprob: -13.126352310180664
    8. '():
' → logprob: -13.251352310180664
    9. ':self' → logprob: -13.251352310180664
    10. '<|end|>' → logprob: -13.501352310180664

Token 454: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0560171939432621
    2. '           ' → logprob: -3.3060171604156494
    3. ' self' → logprob: -5.3060173988342285
    4. 'self' → logprob: -5.4310173988342285
    5. ':
' → logprob: -5.4310173988342285
    6. '
' → logprob: -6.5560173988342285
    7. '<|end|>' → logprob: -7.3060173988342285
    8. '<|end|>' → logprob: -7.3060173988342285
    9. ':' → logprob: -8.18101692199707
    10. '):
' → logprob: -8.55601692199707

Token 455: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0010004170471802354
    2. '           ' → logprob: -7.00100040435791
    3. ' self' → logprob: -9.50100040435791
    4. '
' → logprob: -11.25100040435791
    5. '               ' → logprob: -14.50100040435791
    6. '	self' → logprob: -15.12600040435791
    7. '   ' → logprob: -15.50100040435791
    8. '(self' → logprob: -16.251001358032227
    9. '       ' → logprob: -17.501001358032227
    10. '{
' → logprob: -17.626001358032227

Token 456: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0002525184245314449
    2. 'pos' → logprob: -8.375252723693848
    3. '.' → logprob: -11.625252723693848
    4. '.s' → logprob: -12.000252723693848
    5. 'eat' → logprob: -13.125252723693848
    6. '.e' → logprob: -13.375252723693848
    7. '_pos' → logprob: -14.250252723693848
    8. '	pos' → logprob: -14.625252723693848
    9. '.consume' → logprob: -15.000252723693848
    10. '.user' → logprob: -15.000252723693848

Token 457: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005532711511477828
    2. ' +=' → logprob: -7.500553131103516
    3. ']+=' → logprob: -15.125553131103516
    4. '   ' → logprob: -18.000553131103516
    5. '       ' → logprob: -18.250553131103516
    6. '           ' → logprob: -18.750553131103516
    7. '    ' → logprob: -20.750553131103516
    8. '	' → logprob: -20.750553131103516
    9. '+='' → logprob: -20.875553131103516
    10. '=' → logprob: -21.125553131103516

Token 458: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'len' → logprob: -16.5
    3. ' ' → logprob: -19.125
    4. '   ' → logprob: -20.25
    5. '           ' → logprob: -21.375
    6. '       ' → logprob: -22.375
    7. '     ' → logprob: -24.625
    8. '```' → logprob: -24.625
    9. '+' → logprob: -25.0
    10. '１' → logprob: -25.125

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'len' → logprob: -18.0
    3. ' ' → logprob: -20.25
    4. '   ' → logprob: -21.875
    5. '```' → logprob: -23.125
    6. '' → logprob: -24.5
    7. '۱' → logprob: -24.5
    8. '１' → logprob: -24.625
    9. 'length' → logprob: -24.875
    10. '+' → logprob: -25.0

Token 460: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008915711659938097
    2. 'return' → logprob: -8.00089168548584
    3. '<|end|>' → logprob: -8.62589168548584
    4. '       ' → logprob: -9.25089168548584
    5. '
' → logprob: -9.37589168548584
    6. '		' → logprob: -10.00089168548584
    7. '<|end|>' → logprob: -10.25089168548584
    8. ' return' → logprob: -10.25089168548584
    9. '	       ' → logprob: -10.50089168548584
    10. '               ' → logprob: -11.25089168548584

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.064297824399546e-05
    2. '
' → logprob: -10.750070571899414
    3. '       ' → logprob: -11.000070571899414
    4. 'return' → logprob: -11.250070571899414
    5. '	       ' → logprob: -12.250070571899414
    6. '               ' → logprob: -12.375070571899414
    7. ' return' → logprob: -12.500070571899414
    8. '		' → logprob: -13.000070571899414
    9. 'True' → logprob: -14.250070571899414
    10. ' True' → logprob: -14.500070571899414

Token 462: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16099710762500763
    2. 'return' (adapté à ' return') → logprob: -1.9109971523284912
    3. ' return' → logprob: -7.285996913909912
    4. 'True' → logprob: -9.53599739074707
    5. '
' → logprob: -12.03599739074707
    6. '       ' → logprob: -12.28599739074707
    7. 'true' → logprob: -13.53599739074707
    8. '   ' → logprob: -13.78599739074707
    9. ' True' → logprob: -14.03599739074707
    10. '               ' → logprob: -14.41099739074707

Token 463: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.836499985889532e-05
    2. ' True' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.500059127807617
    4. '1' → logprob: -18.875059127807617
    5. '(True' → logprob: -19.625059127807617
    6. 'c' → logprob: -20.625059127807617
    7. 'true' → logprob: -21.500059127807617
    8. '
' → logprob: -21.750059127807617
    9. 'TRUE' → logprob: -23.500059127807617
    10. '=True' → logprob: -23.500059127807617

Token 464: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021569548698607832
    2. 'return' → logprob: -8.875215530395508
    3. '
' → logprob: -10.500215530395508
    4. '	' → logprob: -10.750215530395508
    5. '   ' → logprob: -11.500215530395508
    6. ' return' → logprob: -11.625215530395508
    7. '<|end|>' → logprob: -13.125215530395508
    8. '           ' → logprob: -13.500215530395508
    9. '	return' → logprob: -13.875215530395508
    10. 'False' → logprob: -14.625215530395508

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014073748607188463
    2. 'return' → logprob: -7.501407146453857
    3. '   ' → logprob: -7.626407146453857
    4. '
' → logprob: -8.876407623291016
    5. '	' → logprob: -9.376407623291016
    6. 'False' → logprob: -10.251407623291016
    7. ' return' → logprob: -10.501407623291016
    8. '           ' → logprob: -10.626407623291016
    9. 'def' → logprob: -11.251407623291016
    10. '	return' → logprob: -11.751407623291016

Token 466: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03430342301726341
    2. 'False' → logprob: -4.409303188323975
    3. '
' → logprob: -4.909303188323975
    4. 'return' (adapté à ' return') → logprob: -5.159303188323975
    5. '   ' → logprob: -5.659303188323975
    6. ' return' → logprob: -5.909303188323975
    7. ' False' → logprob: -6.409303188323975
    8. '           ' → logprob: -8.784303665161133
    9. 'else' → logprob: -8.909303665161133
    10. ' 
' → logprob: -9.659303665161133

Token 467: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001170225441455841
    2. ' False' → logprob: -6.7511701583862305
    3. '(False' → logprob: -20.001171112060547
    4. '_false' → logprob: -22.376171112060547
    5. '=False' → logprob: -22.376171112060547
    6. 'false' → logprob: -23.501171112060547
    7. 'None' → logprob: -24.876171112060547
    8. '.False' → logprob: -25.501171112060547
    9. 'True' → logprob: -25.876171112060547
    10. '0' → logprob: -26.876171112060547

Token 468: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10941600054502487
    2. '<|end|>' → logprob: -2.3594160079956055
    3. '```' → logprob: -5.7344160079956055
    4. '    
' → logprob: -5.8594160079956055
    5. '
' → logprob: -6.6094160079956055
    6. '<|end|>' → logprob: -6.9844160079956055
    7. 'def' → logprob: -8.109416007995605
    8. ' 
' → logprob: -8.984416007995605
    9. '        
' → logprob: -9.484416007995605
    10. ' def' → logprob: -10.359416007995605

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010509459301829338
    2. 'def' → logprob: -5.010509490966797
    3. '
' → logprob: -6.135509490966797
    4. '    
' → logprob: -7.010509490966797
    5. '```' → logprob: -8.010509490966797
    6. ' def' → logprob: -8.385509490966797
    7. ' ' → logprob: -9.760509490966797
    8. '

' → logprob: -10.760509490966797
    9. '        
' → logprob: -10.885509490966797
    10. ' 
' → logprob: -11.135509490966797

Token 470: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25305652618408203
    2. '   ' → logprob: -1.503056526184082
    3. ' def' → logprob: -6.878056526184082
    4. '```' → logprob: -9.628056526184082
    5. '    
' → logprob: -11.253056526184082
    6. '
' → logprob: -11.503056526184082
    7. '	def' → logprob: -12.128056526184082
    8. '``' → logprob: -14.253056526184082
    9. ' ' → logprob: -14.503056526184082
    10. '

' → logprob: -15.003056526184082

Token 471: ' parse' (ID: 8420)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'error' → logprob: -0.7686356902122498
    2. 'parse' → logprob: -0.7686356902122498
    3. 'next' → logprob: -3.6436357498168945
    4. 'consume' → logprob: -4.0186357498168945
    5. 'skip' → logprob: -4.1436357498168945
    6. 'expect' → logprob: -4.6436357498168945
    7. 'eat' → logprob: -6.5186357498168945
    8. 'number' → logprob: -7.0186357498168945
    9. 'fail' → logprob: -9.268635749816895
    10. 'advance' → logprob: -9.393635749816895

Token 472: '_number' (ID: 11733)
  Prédit: '_expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.773570716381073
    2. '_expr' → logprob: -1.0235707759857178
    3. '_term' → logprob: -2.0235707759857178
    4. '_factor' → logprob: -3.1485707759857178
    5. '_exp' → logprob: -6.398570537567139
    6. '(self' → logprob: -6.898570537567139
    7. 'Expression' → logprob: -7.898570537567139
    8. '_part' → logprob: -8.023571014404297
    9. 'Term' → logprob: -8.398571014404297
    10. '_primary' → logprob: -8.648571014404297

Token 473: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005336335860192776
    2. '(' → logprob: -5.255336284637451
    3. '(
' → logprob: -9.75533676147461
    4. 'self' → logprob: -10.50533676147461
    5. '():
' → logprob: -12.25533676147461
    6. '()' → logprob: -12.50533676147461
    7. '   ' → logprob: -13.25533676147461
    8. '	self' → logprob: -13.50533676147461
    9. ' (' → logprob: -13.63033676147461
    10. '(s' → logprob: -14.25533676147461

Token 474: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06891025602817535
    2. '):
' → logprob: -3.1939103603363037
    3. '):' → logprob: -4.318910121917725
    4. 'self' → logprob: -5.193910121917725
    5. '(' → logprob: -5.693910121917725
    6. '():
' → logprob: -6.693910121917725
    7. ')' → logprob: -7.193910121917725
    8. '():' → logprob: -8.818910598754883
    9. '   ' → logprob: -8.943910598754883
    10. 'def' → logprob: -9.068910598754883

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002086023800075054
    2. '   ' → logprob: -7.252086162567139
    3. 'num' → logprob: -7.377086162567139
    4. 'while' → logprob: -8.50208568572998
    5. '```' → logprob: -8.62708568572998
    6. 'token' → logprob: -10.37708568572998
    7. ' while' → logprob: -10.50208568572998
    8. 'result' → logprob: -10.62708568572998
    9. ' ' → logprob: -10.87708568572998
    10. 'digits' → logprob: -10.87708568572998

Token 476: ' start' (ID: 1604)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4436761736869812
    2. '       ' → logprob: -1.193676233291626
    3. 'start' (adapté à ' start') → logprob: -3.193676233291626
    4. 'n' → logprob: -4.568675994873047
    5. ' num' → logprob: -6.318675994873047
    6. '```' → logprob: -7.443675994873047
    7. 'val' → logprob: -7.443675994873047
    8. ' start' → logprob: -7.693675994873047
    9. 'res' → logprob: -9.443675994873047
    10. ' n' → logprob: -9.818675994873047

Token 477: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006751020438969135
    2. ' =' → logprob: -5.00675106048584
    3. '=self' → logprob: -11.00675106048584
    4. '=
' → logprob: -12.25675106048584
    5. 'idx' → logprob: -12.38175106048584
    6. 'pos' → logprob: -12.50675106048584
    7. 'self' → logprob: -13.63175106048584
    8. '_pos' → logprob: -14.00675106048584
    9. '=int' → logprob: -14.13175106048584
    10. 'while' → logprob: -14.13175106048584

Token 478: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015024791937321424
    2. ' self' → logprob: -6.501502513885498
    3. '       ' → logprob: -15.87650203704834
    4. '
' → logprob: -17.751502990722656
    5. '	self' → logprob: -18.126502990722656
    6. '   ' → logprob: -18.876502990722656
    7. '0' → logprob: -19.001502990722656
    8. '(self' → logprob: -19.251502990722656
    9. ' ' → logprob: -19.751502990722656
    10. '=self' → logprob: -19.876502990722656

Token 479: '.pos' (ID: 25321)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2014540582895279
    2. '.pos' → logprob: -1.7014540433883667
    3. '_pos' → logprob: -10.451454162597656
    4. '	pos' → logprob: -12.326454162597656
    5. '
' → logprob: -12.826454162597656
    6. ' pos' → logprob: -13.701454162597656
    7. 'while' → logprob: -13.826454162597656
    8. '   ' → logprob: -14.326454162597656
    9. ',pos' → logprob: -14.326454162597656
    10. 'parse' → logprob: -14.576454162597656

Token 480: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.016931861639022827
    2. '       ' → logprob: -4.516932010650635
    3. ' while' → logprob: -5.266932010650635
    4. '
' → logprob: -8.266931533813477
    5. '```' → logprob: -8.391931533813477
    6. '	while' → logprob: -9.391931533813477
    7. '<|end|>' → logprob: -10.391931533813477
    8. 'While' → logprob: -10.641931533813477
    9. '        
' → logprob: -10.891931533813477
    10. '<|end|>' → logprob: -11.391931533813477

Token 481: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07861731201410294
    2. '       ' → logprob: -2.7036173343658447
    3. ' while' → logprob: -4.828617095947266
    4. '```' → logprob: -7.953617095947266
    5. '	while' → logprob: -8.953617095947266
    6. '   ' → logprob: -9.578617095947266
    7. '
' → logprob: -10.328617095947266
    8. 'While' → logprob: -10.453617095947266
    9. '``' → logprob: -11.203617095947266
    10. '           ' → logprob: -12.453617095947266

Token 482: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0005993809318169951
    2. '       ' → logprob: -8.000598907470703
    3. ' while' → logprob: -8.250598907470703
    4. '	while' → logprob: -13.250598907470703
    5. 'While' → logprob: -14.375598907470703
    6. '   ' → logprob: -15.500598907470703
    7. '
' → logprob: -15.625598907470703
    8. '```' → logprob: -16.625598907470703
    9. '           ' → logprob: -17.875598907470703
    10. '        
' → logprob: -18.500598907470703

Token 483: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132633566856384
    2. ' self' → logprob: -1.3132634162902832
    3. '0' → logprob: -13.563262939453125
    4. ' ' → logprob: -15.438262939453125
    5. '(self' → logprob: -15.813262939453125
    6. '	self' → logprob: -17.938262939453125
    7. ' ' → logprob: -18.438262939453125
    8. '1' → logprob: -18.938262939453125
    9. ' (' → logprob: -19.688262939453125
    10. '   ' → logprob: -19.813262939453125

Token 484: '.peek' (ID: 73296)
  Prédit: '.pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.2812967598438263
    2. 'pos' → logprob: -1.656296730041504
    3. '.peek' → logprob: -3.031296730041504
    4. '.s' → logprob: -5.656296730041504
    5. 'peek' → logprob: -6.031296730041504
    6. 's' → logprob: -9.281296730041504
    7. '[pos' → logprob: -10.656296730041504
    8. '<s' → logprob: -10.656296730041504
    9. ' pos' → logprob: -11.031296730041504
    10. '	pos' → logprob: -11.281296730041504

Token 485: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.18356122076511383
    2. '()' → logprob: -1.8085612058639526
    3. 'isdigit' → logprob: -5.933561325073242
    4. '>=' → logprob: -7.683561325073242
    5. '()>' → logprob: -7.808561325073242
    6. '>' → logprob: -9.308561325073242
    7. '   ' → logprob: -10.058561325073242
    8. '```' → logprob: -10.308561325073242
    9. 'and' → logprob: -10.933561325073242
    10. '.is' → logprob: -11.058561325073242

Token 486: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.9361264946837764e-07
    2. '>=' → logprob: -17.125
    3. 'isal' → logprob: -17.25
    4. 'iss' → logprob: -17.375
    5. 'is' → logprob: -17.625
    6. ' is' → logprob: -18.0
    7. ''' → logprob: -18.375
    8. 'isas' → logprob: -18.875
    9. '>' → logprob: -18.875
    10. '```' → logprob: -19.75

Token 487: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.576621413230896
    2. '():' → logprob: -0.826621413230896
    3. '()' → logprob: -7.3266215324401855
    4. '():
' → logprob: -11.201621055603027
    5. '()):
' → logprob: -12.826621055603027
    6. '():

' → logprob: -12.826621055603027
    7. '()==' → logprob: -13.076621055603027
    8. ':' → logprob: -13.701621055603027
    9. '(' → logprob: -14.451621055603027
    10. '()>' → logprob: -15.201621055603027

Token 488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034980308264493942
    2. ':
' → logprob: -7.003498077392578
    3. '       ' → logprob: -7.128498077392578
    4. '   ' → logprob: -7.628498077392578
    5. ':' → logprob: -7.753498077392578
    6. ' and' → logprob: -8.003498077392578
    7. '<|end|>' → logprob: -9.128498077392578
    8. '):
' → logprob: -9.253498077392578
    9. '<|end|>' → logprob: -9.753498077392578
    10. '	       ' → logprob: -9.878498077392578

Token 489: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0041611455380916595
    2. ' self' → logprob: -5.879161357879639
    3. '           ' → logprob: -6.629161357879639
    4. '   ' → logprob: -11.00416088104248
    5. '	self' → logprob: -11.75416088104248
    6. '
' → logprob: -13.00416088104248
    7. ' ' → logprob: -13.25416088104248
    8. '	       ' → logprob: -13.37916088104248
    9. '       ' → logprob: -14.62916088104248
    10. '{
' → logprob: -14.62916088104248

Token 490: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0009153862483799458
    2. 'pos' → logprob: -7.00091552734375
    3. ' pos' → logprob: -13.12591552734375
    4. '	pos' → logprob: -13.75091552734375
    5. '_pos' → logprob: -14.50091552734375
    6. '[pos' → logprob: -15.62591552734375
    7. ',pos' → logprob: -16.75091552734375
    8. 'advance' → logprob: -18.87591552734375
    9. 's' → logprob: -19.00091552734375
    10. '.position' → logprob: -19.00091552734375

Token 491: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00044401636114344
    2. ' +=' → logprob: -7.750443935394287
    3. ']+=' → logprob: -11.250444412231445
    4. '           ' → logprob: -16.250444412231445
    5. '   ' → logprob: -17.125444412231445
    6. 'self' → logprob: -17.250444412231445
    7. '```' → logprob: -17.375444412231445
    8. '=' → logprob: -17.375444412231445
    9. '+='' → logprob: -17.875444412231445
    10. '       ' → logprob: -18.500444412231445

Token 492: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.625019073486328
    4. '```' → logprob: -21.062519073486328
    5. '0' → logprob: -21.312519073486328
    6. '１' → logprob: -21.625019073486328
    7. '۱' → logprob: -21.687519073486328
    8. '
' → logprob: -22.125019073486328
    9. ' ' → logprob: -22.375019073486328
    10. '  ' → logprob: -23.000019073486328

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -20.0
    5. '
' → logprob: -21.5625
    6. '۱' → logprob: -22.0
    7. '１' → logprob: -22.1875
    8. '+' → logprob: -22.4375
    9. '0' → logprob: -22.5625
    10. '১' → logprob: -22.6875

Token 494: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14873850345611572
    2. '<|end|>' → logprob: -2.148738384246826
    3. '<|end|>' → logprob: -4.148738384246826
    4. 'tokens' → logprob: -6.523738384246826
    5. 'return' → logprob: -6.648738384246826
    6. 'token' → logprob: -6.898738384246826
    7. ' tokens' → logprob: -7.648738384246826
    8. '
' → logprob: -8.148738861083984
    9. ' if' → logprob: -8.648738861083984
    10. ' return' → logprob: -9.148738861083984

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012905134819447994
    2. ' if' → logprob: -5.387905120849609
    3. '
' → logprob: -6.137905120849609
    4. 'return' → logprob: -6.512905120849609
    5. '<|end|>' → logprob: -7.012905120849609
    6. 'if' → logprob: -7.262905120849609
    7. ' return' → logprob: -7.512905120849609
    8. '        
' → logprob: -7.512905120849609
    9. 'token' → logprob: -7.637905120849609
    10. '<|end|>' → logprob: -8.13790512084961

Token 496: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9851452708244324
    2. 'if' → logprob: -1.1101453304290771
    3. ' if' → logprob: -1.6101453304290771
    4. 'num' → logprob: -2.610145330429077
    5. 'number' → logprob: -4.610145092010498
    6. 'return' (adapté à ' return') → logprob: -4.735145092010498
    7. ' number' → logprob: -6.235145092010498
    8. ' num' → logprob: -6.985145092010498
    9. ' return' → logprob: -7.110145092010498
    10. 'token' → logprob: -7.235145092010498

Token 497: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023268191143870354
    2. ' int' → logprob: -3.773268222808838
    3. 'self' → logprob: -10.77326774597168
    4. ' self' → logprob: -13.27326774597168
    5. '(int' → logprob: -17.14826774597168
    6. ' ' → logprob: -19.27326774597168
    7. '[int' → logprob: -19.27326774597168
    8. '	int' → logprob: -20.02326774597168
    9. '=int' → logprob: -20.14826774597168
    10. '<int' → logprob: -20.52326774597168

Token 498: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005582740413956344
    2. '(' → logprob: -7.500558376312256
    3. 'self' → logprob: -13.000557899475098
    4. ' (' → logprob: -13.250557899475098
    5. '(s' → logprob: -14.375557899475098
    6. '(Parser' → logprob: -15.375557899475098
    7. '(parser' → logprob: -15.375557899475098
    8. '(this' → logprob: -16.250558853149414
    9. '((' → logprob: -17.250558853149414
    10. '('' → logprob: -18.250558853149414

Token 499: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0033584432676434517
    2. 's' → logprob: -5.878358364105225
    3. '(s' → logprob: -8.128358840942383
    4. ')' → logprob: -8.878358840942383
    5. 'self' → logprob: -9.628358840942383
    6. '(self' → logprob: -10.753358840942383
    7. ' s' → logprob: -11.878358840942383
    8. '(' → logprob: -12.128358840942383
    9. '[self' → logprob: -12.628358840942383
    10. '[' → logprob: -13.253358840942383

Token 500: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0002658655575942248
    2. '[self' → logprob: -8.250266075134277
    3. '[' → logprob: -12.375266075134277
    4. 'start' → logprob: -16.12526512145996
    5. '[
' → logprob: -16.50026512145996
    6. 'self' → logprob: -16.87526512145996
    7. ')[' → logprob: -17.37526512145996
    8. ')' → logprob: -18.12526512145996
    9. '```' → logprob: -18.25026512145996
    10. '   ' → logprob: -19.00026512145996

Token 501: ':self' (ID: 28173)
  Prédit: ':self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':self' → logprob: -0.027244912460446358
    2. 'self' → logprob: -3.652244806289673
    3. '[self' → logprob: -7.902245044708252
    4. ' self' → logprob: -8.152244567871094
    5. ':' → logprob: -9.277244567871094
    6. ' :' → logprob: -9.652244567871094
    7. '
' → logprob: -10.152244567871094
    8. '	self' → logprob: -10.277244567871094
    9. ',self' → logprob: -11.027244567871094
    10. '(self' → logprob: -11.527244567871094

Token 502: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -8.697387966094539e-05
    2. 'pos' → logprob: -9.500086784362793
    3. '.' → logprob: -12.250086784362793
    4. '[pos' → logprob: -13.250086784362793
    5. '	pos' → logprob: -13.750086784362793
    6. ' .' → logprob: -14.125086784362793
    7. '   ' → logprob: -14.250086784362793
    8. '.pass' → logprob: -14.250086784362793
    9. '.p' → logprob: -14.375086784362793
    10. '.s' → logprob: -14.625086784362793

Token 503: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -3.404745439183898e-05
    2. ']' → logprob: -10.62503433227539
    3. '])
' → logprob: -12.37503433227539
    4. '       ' → logprob: -13.37503433227539
    5. ' ])' → logprob: -13.37503433227539
    6. ')' → logprob: -13.50003433227539
    7. '],' → logprob: -14.75003433227539
    8. '])]' → logprob: -15.75003433227539
    9. ''])' → logprob: -16.12503433227539
    10. ')]' → logprob: -16.37503433227539

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4311644732952118
    2. '```' → logprob: -1.4311645030975342
    3. '<|end|>' → logprob: -2.306164503097534
    4. 'def' → logprob: -4.931164264678955
    5. '<|end|>' → logprob: -6.181164264678955
    6. '    
' → logprob: -7.181164264678955
    7. '
' → logprob: -7.306164264678955
    8. '``' → logprob: -7.931164264678955
    9. ' def' → logprob: -8.681164741516113
    10. '	def' → logprob: -9.556164741516113

Token 505: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10651978850364685
    2. '
' → logprob: -2.4815196990966797
    3. 'def' (adapté à ' def') → logprob: -4.60651969909668
    4. ' def' → logprob: -5.98151969909668
    5. '<|end|>' → logprob: -6.23151969909668
    6. '    
' → logprob: -6.60651969909668
    7. '<|end|>' → logprob: -7.35651969909668
    8. '```' → logprob: -8.10651969909668
    9. ' 
' → logprob: -8.60651969909668
    10. '

' → logprob: -8.60651969909668

Token 506: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00040528984391130507
    2. ' parse' → logprob: -7.875405311584473
    3. 'error' → logprob: -11.750405311584473
    4. 'consume' → logprob: -12.375405311584473
    5. 'skip' → logprob: -12.500405311584473
    6. 'eat' → logprob: -13.125405311584473
    7. 'expect' → logprob: -13.125405311584473
    8. 'factor' → logprob: -13.250405311584473
    9. 'next' → logprob: -13.500405311584473
    10. '_parse' → logprob: -15.250405311584473

Token 507: '_part' (ID: 24053)
  Prédit: '_expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.6274739503860474
    2. '_term' → logprob: -0.8774739503860474
    3. '_factor' → logprob: -3.127473831176758
    4. '_expr' → logprob: -5.127473831176758
    5. '_part' → logprob: -8.002473831176758
    6. '_primary' → logprob: -9.377473831176758
    7. '_atom' → logprob: -11.002473831176758
    8. '_exp' → logprob: -11.252473831176758
    9. 'term' → logprob: -12.252473831176758
    10. 'expression' → logprob: -12.502473831176758

Token 508: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12853947281837463
    2. '_name' → logprob: -2.128539562225342
    3. '(' → logprob: -7.378539562225342
    4. 'name' → logprob: -8.003539085388184
    5. 'Name' → logprob: -8.128539085388184
    6. '_NAME' → logprob: -9.003539085388184
    7. 'self' → logprob: -9.753539085388184
    8. '   ' → logprob: -10.003539085388184
    9. '_' → logprob: -10.378539085388184
    10. '()' → logprob: -10.628539085388184

Token 509: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0627522468566895
    2. '_name' → logprob: -1.4377522468566895
    3. '):
' → logprob: -1.6877522468566895
    4. '):' → logprob: -1.8127522468566895
    5. ')' → logprob: -3.0627522468566895
    6. 'self' → logprob: -4.6877522468566895
    7. 'name' → logprob: -5.4377522468566895
    8. '   ' → logprob: -5.8127522468566895
    9. 'Name' → logprob: -5.8127522468566895
    10. '       ' → logprob: -7.4377522468566895

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010794912232086062
    2. ' if' → logprob: -8.001079559326172
    3. 'name' → logprob: -8.126079559326172
    4. 'if' → logprob: -8.626079559326172
    5. 'self' → logprob: -8.876079559326172
    6. '   ' → logprob: -9.626079559326172
    7. ' name' → logprob: -10.751079559326172
    8. ' self' → logprob: -11.251079559326172
    9. '           ' → logprob: -12.501079559326172
    10. '```' → logprob: -12.626079559326172

Token 511: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15381282567977905
    2. 'if' → logprob: -2.778812885284424
    3. 'c' → logprob: -3.278812885284424
    4. 'ch' → logprob: -4.278812885284424
    5. 'name' → logprob: -4.278812885284424
    6. ' if' → logprob: -4.653812885284424
    7. ' c' → logprob: -5.778812885284424
    8. 'token' → logprob: -7.153812885284424
    9. 'part' → logprob: -7.528812885284424
    10. 'char' → logprob: -7.653812885284424

Token 512: ' parse' (ID: 8420)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2492080181837082
    2. 'ch' → logprob: -1.8742079734802246
    3. 'if' → logprob: -3.3742079734802246
    4. '       ' → logprob: -4.124207973480225
    5. 'name' → logprob: -4.624207973480225
    6. 'self' → logprob: -6.124207973480225
    7. '   ' → logprob: -6.249207973480225
    8. ' c' → logprob: -6.874207973480225
    9. 'char' → logprob: -7.624207973480225
    10. ' ch' → logprob: -7.749207973480225

Token 513: ' either' (ID: 4784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11644630879163742
    2. 'self' → logprob: -2.9914462566375732
    3. '       ' → logprob: -3.2414462566375732
    4. 'name' → logprob: -4.991446495056152
    5. ' if' → logprob: -4.991446495056152
    6. 'while' → logprob: -5.491446495056152
    7. 'part' → logprob: -7.241446495056152
    8. 'c' → logprob: -7.866446495056152
    9. 'assert' → logprob: -8.116446495056152
    10. '   ' → logprob: -8.116446495056152

Token 514: ' repetition' (ID: 100556)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06461931765079498
    2. ' self' → logprob: -3.564619302749634
    3. 're' → logprob: -4.439619541168213
    4. 'if' → logprob: -4.564619541168213
    5. '   ' → logprob: -5.814619541168213
    6. 'letter' → logprob: -6.064619541168213
    7. 'part' → logprob: -6.439619541168213
    8. ' part' → logprob: -7.439619541168213
    9. '       ' → logprob: -7.564619541168213
    10. ' if' → logprob: -7.689619541168213

Token 515: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5694101452827454
    2. 'if' → logprob: -1.3194100856781006
    3. '(self' → logprob: -2.1944100856781006
    4. ' or' → logprob: -3.5694100856781006
    5. ' if' → logprob: -4.81941032409668
    6. '   ' → logprob: -5.06941032409668
    7. 'or' → logprob: -5.69441032409668
    8. '
' → logprob: -5.69441032409668
    9. 'self' → logprob: -5.94441032409668
    10. 'def' → logprob: -6.19441032409668

Token 516: ' number' (ID: 2086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10467617958784103
    2. ' if' → logprob: -2.4796762466430664
    3. '       ' → logprob: -5.604676246643066
    4. 'number' → logprob: -6.104676246643066
    5. 'self' → logprob: -6.229676246643066
    6. 'token' → logprob: -6.354676246643066
    7. 'def' → logprob: -6.604676246643066
    8. 'c' → logprob: -7.229676246643066
    9. 'If' → logprob: -7.354676246643066
    10. 'name' → logprob: -7.479676246643066

Token 517: '(expr' (ID: 78746)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.44627073407173157
    2. '(' → logprob: -1.9462707042694092
    3. ' (' → logprob: -2.196270704269409
    4. 'or' → logprob: -2.821270704269409
    5. '=' → logprob: -4.696270942687988
    6. '(
' → logprob: -4.946270942687988
    7. '   ' → logprob: -5.446270942687988
    8. '       ' → logprob: -5.571270942687988
    9. 'def' → logprob: -5.571270942687988
    10. ' =' → logprob: -5.696270942687988

Token 518: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20209115743637085
    2. ' or' → logprob: -2.2020912170410156
    3. '       ' → logprob: -2.8270912170410156
    4. '()' → logprob: -5.577091217041016
    5. 'or' → logprob: -6.077091217041016
    6. '   ' → logprob: -6.702091217041016
    7. '(self' → logprob: -6.827091217041016
    8. ')
' → logprob: -7.202091217041016
    9. '())' → logprob: -7.827091217041016
    10. '|' → logprob: -7.827091217041016

Token 519: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18475346267223358
    2. ' or' → logprob: -2.18475341796875
    3. '
' → logprob: -3.80975341796875
    4. 'if' → logprob: -4.05975341796875
    5. ' if' → logprob: -4.93475341796875
    6. 'or' → logprob: -5.80975341796875
    7. '   ' → logprob: -5.93475341796875
    8. 'def' → logprob: -6.93475341796875
    9. ',' → logprob: -7.05975341796875
    10. '        
' → logprob: -7.05975341796875

Token 520: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.41734203696250916
    2. 'self' → logprob: -1.2923420667648315
    3. '       ' → logprob: -3.667341947555542
    4. ' part' → logprob: -4.167342185974121
    5. ' self' → logprob: -4.542342185974121
    6. 'letter' → logprob: -5.167342185974121
    7. '   ' → logprob: -6.542342185974121
    8. 'name' → logprob: -6.542342185974121
    9. '           ' → logprob: -6.917342185974121
    10. 'def' → logprob: -7.167342185974121

Token 521: '_name' (ID: 2483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12430430203676224
    2. 'if' → logprob: -3.2493042945861816
    3. '(self' → logprob: -3.3743042945861816
    4. '   ' → logprob: -3.9993042945861816
    5. 'def' → logprob: -4.499304294586182
    6. '
' → logprob: -4.999304294586182
    7. ' if' → logprob: -5.749304294586182
    8. 'self' → logprob: -7.499304294586182
    9. ':
' → logprob: -7.624304294586182
    10. '        
' → logprob: -7.749304294586182

Token 522: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04182714223861694
    2. '
' → logprob: -3.5418272018432617
    3. 'if' → logprob: -5.291827201843262
    4. '   ' → logprob: -5.666827201843262
    5. 'def' → logprob: -6.791827201843262
    6. ' if' → logprob: -7.041827201843262
    7. '        
' → logprob: -7.791827201843262
    8. ',' → logprob: -8.666827201843262
    9. '<|end|>' → logprob: -8.666827201843262
    10. 'token' → logprob: -8.916827201843262

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006799076218158007
    2. '   ' → logprob: -8.125679969787598
    3. 'if' → logprob: -8.375679969787598
    4. ' if' → logprob: -9.125679969787598
    5. '```' → logprob: -10.625679969787598
    6. 'token' → logprob: -11.375679969787598
    7. '           ' → logprob: -12.250679969787598
    8. '        
' → logprob: -14.250679969787598
    9. 'def' → logprob: -14.375679969787598
    10. ',' → logprob: -14.750679969787598

Token 524: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8998540639877319
    2. '       ' → logprob: -1.024854063987732
    3. ' if' → logprob: -1.774854063987732
    4. 'c' → logprob: -3.1498541831970215
    5. ' c' → logprob: -4.2748541831970215
    6. 'ch' → logprob: -5.1498541831970215
    7. 'token' → logprob: -6.3998541831970215
    8. '   ' → logprob: -7.7748541831970215
    9. 'char' → logprob: -9.149853706359863
    10. ' token' → logprob: -9.399853706359863

Token 525: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011053125374019146
    2. ' self' → logprob: -4.511053085327148
    3. '   ' → logprob: -12.386053085327148
    4. ' ' → logprob: -14.261053085327148
    5. '	self' → logprob: -15.636053085327148
    6. '  ' → logprob: -16.26105308532715
    7. ''s' → logprob: -16.38605308532715
    8. '(self' → logprob: -16.63605308532715
    9. '0' → logprob: -16.76105308532715
    10. ''' → logprob: -17.13605308532715

Token 526: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.04190041869878769
    2. 'peek' → logprob: -3.791900396347046
    3. '.e' → logprob: -4.041900634765625
    4. '.s' → logprob: -7.541900634765625
    5. 'eat' → logprob: -8.541900634765625
    6. '.' → logprob: -9.541900634765625
    7. 'e' → logprob: -10.166900634765625
    8. '.pos' → logprob: -10.291900634765625
    9. 's' → logprob: -11.041900634765625
    10. '.pe' → logprob: -11.666900634765625

Token 527: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0037472255062311888
    2. '()' → logprob: -5.628747463226318
    3. 'isdigit' → logprob: -9.75374698638916
    4. '.is' → logprob: -9.87874698638916
    5. '()==' → logprob: -10.75374698638916
    6. '()>' → logprob: -12.75374698638916
    7. '   ' → logprob: -13.00374698638916
    8. '.' → logprob: -13.12874698638916
    9. '>().' → logprob: -13.62874698638916
    10. ' and' → logprob: -13.75374698638916

Token 528: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.00038586699520237744
    2. 'is' → logprob: -7.875385761260986
    3. ''' → logprob: -12.500386238098145
    4. ' is' → logprob: -13.500386238098145
    5. ''is' → logprob: -15.125386238098145
    6. 'digit' → logprob: -16.375385284423828
    7. '   ' → logprob: -16.625385284423828
    8. 'isal' → logprob: -16.875385284423828
    9. ''s' → logprob: -17.000385284423828
    10. ''\' → logprob: -17.125385284423828

Token 529: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07262501865625381
    2. '():
' → logprob: -2.697624921798706
    3. '()' → logprob: -5.947625160217285
    4. ':' → logprob: -10.322625160217285
    5. '()==' → logprob: -11.197625160217285
    6. '():
' → logprob: -11.947625160217285
    7. '():

' → logprob: -12.197625160217285
    8. '(' → logprob: -12.447625160217285
    9. '()):
' → logprob: -12.572625160217285
    10. '()>' → logprob: -12.822625160217285

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07577023655176163
    2. 'num' → logprob: -3.325770139694214
    3. '       ' → logprob: -3.950770139694214
    4. 'number' → logprob: -5.700770378112793
    5. 'token' → logprob: -6.200770378112793
    6. 'self' → logprob: -6.325770378112793
    7. '	       ' → logprob: -6.575770378112793
    8. ' num' → logprob: -6.575770378112793
    9. 'n' → logprob: -6.700770378112793
    10. ' number' → logprob: -6.825770378112793

Token 531: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03603310510516167
    2. 'n' (adapté à ' n') → logprob: -3.5360331535339355
    3. ' num' → logprob: -5.4110331535339355
    4. '           ' → logprob: -7.1610331535339355
    5. ' n' → logprob: -7.6610331535339355
    6. 'count' → logprob: -7.6610331535339355
    7. 'number' → logprob: -10.536032676696777
    8. 'times' → logprob: -10.911032676696777
    9. 'x' → logprob: -11.161032676696777
    10. 'k' → logprob: -12.286032676696777

Token 532: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2938961684703827
    2. ' =' → logprob: -1.543896198272705
    3. 'um' → logprob: -3.418896198272705
    4. 'umber' → logprob: -4.793896198272705
    5. '   ' → logprob: -10.918895721435547
    6. '       ' → logprob: -11.668895721435547
    7. '=self' → logprob: -11.918895721435547
    8. ' ' → logprob: -12.168895721435547
    9. 'u' → logprob: -12.418895721435547
    10. 'number' → logprob: -12.918895721435547

Token 533: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003751744283363223
    2. ' self' → logprob: -5.628751754760742
    3. '0' → logprob: -9.003751754760742
    4. 'int' → logprob: -11.253751754760742
    5. 'n' → logprob: -11.753751754760742
    6. '           ' → logprob: -12.753751754760742
    7. ' ' → logprob: -13.378751754760742
    8. '1' → logprob: -14.128751754760742
    9. '[self' → logprob: -14.128751754760742
    10. '(self' → logprob: -14.503751754760742

Token 534: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0025445125065743923
    2. '.parse' → logprob: -6.002544403076172
    3. ' parse' → logprob: -9.877544403076172
    4. 'next' → logprob: -12.377544403076172
    5. '	parse' → logprob: -12.877544403076172
    6. 'n' → logprob: -13.377544403076172
    7. '_parse' → logprob: -13.377544403076172
    8. ' ' → logprob: -13.502544403076172
    9. '(parse' → logprob: -13.752544403076172
    10. '=parse' → logprob: -14.002544403076172

Token 535: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0006465525948442519
    2. 'number' → logprob: -7.375646591186523
    3. '_' → logprob: -11.375646591186523
    4. '_token' → logprob: -12.500646591186523
    5. '_NUMBER' → logprob: -13.500646591186523
    6. 'token' → logprob: -14.250646591186523
    7. 'Number' → logprob: -14.375646591186523
    8. ' number' → logprob: -14.625646591186523
    9. ' ' → logprob: -14.750646591186523
    10. '_n' → logprob: -14.875646591186523

Token 536: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04694504663348198
    2. '       ' → logprob: -3.296945095062256
    3. '
' → logprob: -6.171945095062256
    4. '	       ' → logprob: -6.421945095062256
    5. '    	' → logprob: -7.296945095062256
    6. '   ' → logprob: -7.296945095062256
    7. '<|end|>' → logprob: -7.421945095062256
    8. '<|end|>' → logprob: -7.421945095062256
    9. '		' → logprob: -7.671945095062256
    10. '            
' → logprob: -8.046944618225098

Token 537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04248166084289551
    2. '       ' → logprob: -3.4174816608428955
    3. ' if' → logprob: -5.542481422424316
    4. 'if' → logprob: -5.917481422424316
    5. '(' → logprob: -7.167481422424316
    6. '   ' → logprob: -8.292481422424316
    7. '[' → logprob: -8.792481422424316
    8. '               ' → logprob: -9.042481422424316
    9. '	       ' → logprob: -9.417481422424316
    10. '            
' → logprob: -9.542481422424316

Token 538: ' assert' (ID: 3696)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48637109994888306
    2. ' if' → logprob: -0.9863710999488831
    3. 'self' → logprob: -4.736371040344238
    4. ' self' → logprob: -6.236371040344238
    5. '           ' → logprob: -7.486371040344238
    6. 'assert' (adapté à ' assert') → logprob: -7.861371040344238
    7. '       ' → logprob: -8.236371040344238
    8. '{
' → logprob: -9.486371040344238
    9. '   ' → logprob: -9.861371040344238
    10. '	if' → logprob: -10.361371040344238

Token 539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06199076771736145
    2. ' self' → logprob: -2.811990737915039
    3. '(self' → logprob: -10.811990737915039
    4. '	self' → logprob: -13.686990737915039
    5. '   ' → logprob: -14.061990737915039
    6. ' ' → logprob: -14.936990737915039
    7. '[self' → logprob: -15.311990737915039
    8. '=self' → logprob: -15.936990737915039
    9. ' ' → logprob: -16.06199073791504
    10. '           ' → logprob: -16.68699073791504

Token 540: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.010328604839742184
    2. 'eat' → logprob: -5.260328769683838
    3. '.peek' → logprob: -5.510328769683838
    4. '.s' → logprob: -7.135328769683838
    5. 'peek' → logprob: -9.38532829284668
    6. 'e' → logprob: -10.01032829284668
    7. 's' → logprob: -10.01032829284668
    8. ' .' → logprob: -10.88532829284668
    9. '.' → logprob: -10.88532829284668
    10. '   ' → logprob: -12.88532829284668

Token 541: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00038229089113883674
    2. '('' → logprob: -8.375382423400879
    3. 'a' → logprob: -10.000382423400879
    4. '(at' → logprob: -10.375382423400879
    5. ''at' → logprob: -10.500382423400879
    6. '```' → logprob: -11.750382423400879
    7. '(' → logprob: -12.000382423400879
    8. 'eat' → logprob: -12.250382423400879
    9. '(a' → logprob: -12.750382423400879
    10. 'atch' → logprob: -12.875382423400879

Token 542: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.31499195098876953
    2. ''' → logprob: -1.3149919509887695
    3. '("("' → logprob: -6.5649919509887695
    4. '(' → logprob: -8.56499195098877
    5. ' '('' → logprob: -9.31499195098877
    6. '"' → logprob: -10.56499195098877
    7. ''(' → logprob: -12.06499195098877
    8. '   ' → logprob: -13.18999195098877
    9. ' ('' → logprob: -13.31499195098877
    10. '`' → logprob: -13.43999195098877

Token 543: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.894790981779806e-05
    2. '(' → logprob: -10.000048637390137
    3. ')' → logprob: -12.750048637390137
    4. '')' → logprob: -15.375048637390137
    5. '(',' → logprob: -16.000049591064453
    6. ')')
' → logprob: -16.500049591064453
    7. '(\'' → logprob: -16.875049591064453
    8. '("' → logprob: -16.875049591064453
    9. '(('' → logprob: -17.875049591064453
    10. ''' → logprob: -18.125049591064453

Token 544: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28759637475013733
    2. ')
' → logprob: -1.912596344947815
    3. '           ' → logprob: -2.5375964641571045
    4. '),' → logprob: -3.7875964641571045
    5. 'self' → logprob: -8.662596702575684
    6. '       ' → logprob: -8.912596702575684
    7. '')' → logprob: -9.787596702575684
    8. ',' → logprob: -10.662596702575684
    9. '')
' → logprob: -11.162596702575684
    10. ')
' → logprob: -11.412596702575684

Token 545: '           ' (ID: 352)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.6829048991203308
    2. '           ' → logprob: -1.0579049587249756
    3. '       ' → logprob: -1.9329049587249756
    4. 'exp' → logprob: -6.9329047203063965
    5. ' expr' → logprob: -7.5579047203063965
    6. 'sub' → logprob: -7.6829047203063965
    7. 'inner' → logprob: -8.432905197143555
    8. 'result' → logprob: -8.932905197143555
    9. 'res' → logprob: -8.932905197143555
    10. 'expression' → logprob: -9.182905197143555

Token 546: ' inner' (ID: 12694)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.042638055980205536
    2. 'sub' → logprob: -3.792638063430786
    3. 'exp' → logprob: -4.792637825012207
    4. '           ' → logprob: -5.292637825012207
    5. 'inner' (adapté à ' inner') → logprob: -5.542637825012207
    6. 'res' → logprob: -6.667637825012207
    7. 'ex' → logprob: -8.792637825012207
    8. 'e' → logprob: -8.792637825012207
    9. ' expr' → logprob: -9.542637825012207
    10. ' sub' → logprob: -9.542637825012207

Token 547: ' =' (ID: 314)
  Prédit: '_perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_perm' → logprob: -0.16591854393482208
    2. ' =' → logprob: -2.2909185886383057
    3. '_expr' → logprob: -3.9159185886383057
    4. '=' → logprob: -4.290918350219727
    5. 'perm' → logprob: -4.665918350219727
    6. '_per' → logprob: -4.915918350219727
    7. 'expr' → logprob: -6.915918350219727
    8. '_result' → logprob: -9.415918350219727
    9. 'per' → logprob: -9.415918350219727
    10. '   ' → logprob: -9.540918350219727

Token 548: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008742451667785645
    2. ' self' → logprob: -4.758742332458496
    3. '           ' → logprob: -9.008742332458496
    4. '   ' → logprob: -13.008742332458496
    5. '               ' → logprob: -14.008742332458496
    6. '       ' → logprob: -14.133742332458496
    7. '         ' → logprob: -14.508742332458496
    8. '(self' → logprob: -15.383742332458496
    9. ' ' → logprob: -15.508742332458496
    10. '                   ' → logprob: -15.883742332458496

Token 549: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.018161529675126076
    2. '.parse' → logprob: -4.018161296844482
    3. ' parse' → logprob: -12.51816177368164
    4. '   ' → logprob: -13.14316177368164
    5. 'def' → logprob: -13.89316177368164
    6. '=parse' → logprob: -13.89316177368164
    7. '	parse' → logprob: -13.89316177368164
    8. ' ' → logprob: -14.01816177368164
    9. '(parse' → logprob: -14.64316177368164
    10. '_parse' → logprob: -15.01816177368164

Token 550: '_expr' (ID: 53654)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.19282487034797668
    2. '_expression' → logprob: -1.8178248405456543
    3. 'expr' → logprob: -5.192824840545654
    4. 'Expression' → logprob: -6.317824840545654
    5. ')' → logprob: -6.942824840545654
    6. 'self' → logprob: -6.942824840545654
    7. 'express' → logprob: -7.567824840545654
    8. '_expr' → logprob: -7.692824840545654
    9. '()' → logprob: -8.317825317382812
    10. 'exp' → logprob: -8.442825317382812

Token 551: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6136267185211182
    2. '           ' → logprob: -1.4886267185211182
    3. '()' → logprob: -1.4886267185211182
    4. ')' → logprob: -5.488626480102539
    5. ')
' → logprob: -6.113626480102539
    6. '())' → logprob: -7.613626480102539
    7. '())
' → logprob: -8.238626480102539
    8. 'return' → logprob: -10.238626480102539
    9. '       ' → logprob: -10.363626480102539
    10. '()
' → logprob: -10.988626480102539

Token 552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001366744691040367
    2. 'return' → logprob: -10.000136375427246
    3. '       ' → logprob: -10.375136375427246
    4. ')' → logprob: -11.125136375427246
    5. 'self' → logprob: -11.250136375427246
    6. '		' → logprob: -11.750136375427246
    7. '<|end|>' → logprob: -12.000136375427246
    8. '<|end|>' → logprob: -12.125136375427246
    9. '               ' → logprob: -12.625136375427246
    10. '	       ' → logprob: -13.000136375427246

Token 553: ' assert' (ID: 3696)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assert' (adapté à ' assert') → logprob: -0.2539805471897125
    2. '           ' → logprob: -1.5039805173873901
    3. 'self' → logprob: -6.25398063659668
    4. ' assert' → logprob: -9.87898063659668
    5. 'for' → logprob: -10.25398063659668
    6. 'while' → logprob: -10.62898063659668
    7. '   ' → logprob: -12.75398063659668
    8. 'result' → logprob: -12.87898063659668
    9. '       ' → logprob: -13.12898063659668
    10. ' self' → logprob: -13.12898063659668

Token 554: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011073531582951546
    2. ' self' → logprob: -4.511073589324951
    3. '           ' → logprob: -10.761073112487793
    4. '(self' → logprob: -12.886073112487793
    5. '   ' → logprob: -14.386073112487793
    6. '	self' → logprob: -15.261073112487793
    7. ' ' → logprob: -15.636073112487793
    8. '         ' → logprob: -15.636073112487793
    9. ' ' → logprob: -15.761073112487793
    10. '[self' → logprob: -15.886073112487793

Token 555: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.0019349466310814023
    2. 'eat' → logprob: -6.251935005187988
    3. 'e' → logprob: -12.126935005187988
    4. '.' → logprob: -15.501935005187988
    5. ').' → logprob: -15.626935005187988
    6. ' eat' → logprob: -15.876935005187988
    7. ' .' → logprob: -16.001934051513672
    8. ',e' → logprob: -16.751934051513672
    9. '	e' → logprob: -17.251934051513672
    10. '.consume' → logprob: -17.376934051513672

Token 556: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -2.927930654550437e-05
    2. 'eat' → logprob: -11.000029563903809
    3. '('' → logprob: -11.875029563903809
    4. 'ат' → logprob: -13.750029563903809
    5. '(' → logprob: -14.000029563903809
    6. '_at' → logprob: -14.375029563903809
    7. 'a' → logprob: -14.750029563903809
    8. ' at' → logprob: -14.875029563903809
    9. '(at' → logprob: -15.000029563903809
    10. '```' → logprob: -15.250029563903809

Token 557: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.14342638850212097
    2. '')' → logprob: -2.0184264183044434
    3. ')' → logprob: -7.268426418304443
    4. '(' → logprob: -10.143425941467285
    5. '   ' → logprob: -12.393425941467285
    6. ''' → logprob: -13.143425941467285
    7. '")' → logprob: -13.518425941467285
    8. ' ')'' → logprob: -13.768425941467285
    9. '('.')' → logprob: -13.893425941467285
    10. ' ' → logprob: -14.268425941467285

Token 558: ')')
' (ID: 80616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011109127663075924
    2. '')' → logprob: -4.511109352111816
    3. ')')
' → logprob: -10.261109352111816
    4. ')'' → logprob: -10.761109352111816
    5. ')")' → logprob: -13.011109352111816
    6. ')').' → logprob: -13.386109352111816
    7. ')'),' → logprob: -14.011109352111816
    8. ')','' → logprob: -15.011109352111816
    9. ')',' → logprob: -16.7611083984375
    10. '('' → logprob: -17.5111083984375

Token 559: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001387009397149086
    2. 'return' → logprob: -9.375138282775879
    3. '
' → logprob: -10.375138282775879
    4. ' return' → logprob: -11.500138282775879
    5. '		' → logprob: -12.125138282775879
    6. '       ' → logprob: -12.500138282775879
    7. '            
' → logprob: -13.750138282775879
    8. '               ' → logprob: -14.000138282775879
    9. ',' → logprob: -14.250138282775879
    10. '	       ' → logprob: -15.500138282775879

Token 560: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22013558447360992
    2. 'res' → logprob: -2.2201356887817383
    3. 'result' → logprob: -3.4701356887817383
    4. 'perm' → logprob: -3.5951356887817383
    5. 'return' (adapté à ' return') → logprob: -3.9701356887817383
    6. 'inner' → logprob: -5.095135688781738
    7. 'for' → logprob: -6.720135688781738
    8. ' res' → logprob: -7.095135688781738
    9. 'rep' → logprob: -7.470135688781738
    10. 'p' → logprob: -7.470135688781738

Token 561: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4016888439655304
    2. '[' → logprob: -2.276688814163208
    3. 'pow' → logprob: -2.776688814163208
    4. '[self' → logprob: -2.776688814163208
    5. 'multiply' → logprob: -3.151688814163208
    6. 'compose' → logprob: -3.276688814163208
    7. 'combine' → logprob: -5.026689052581787
    8. 'power' → logprob: -5.401689052581787
    9. 'mul' → logprob: -5.776689052581787
    10. 'inner' → logprob: -6.526689052581787

Token 562: '.repeat' (ID: 109361)
  Prédit: '.compose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compose' → logprob: -1.614288091659546
    2. '.repeat' → logprob: -1.614288091659546
    3. 'repeat' → logprob: -1.864288091659546
    4. '.multiply' → logprob: -2.239288091659546
    5. '.combine' → logprob: -2.489288091659546
    6. '.pow' → logprob: -2.614288091659546
    7. 'pow' → logprob: -3.239288091659546
    8. '._' → logprob: -3.364288091659546
    9. '.power' → logprob: -3.739288091659546
    10. 'multiply' → logprob: -3.864288091659546

Token 563: '_per' (ID: 10938)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004408278502523899
    2. '(' → logprob: -5.629408359527588
    3. 'n' → logprob: -8.87940788269043
    4. '_perm' → logprob: -8.87940788269043
    5. 'perm' → logprob: -9.25440788269043
    6. '[n' → logprob: -9.37940788269043
    7. ' (' → logprob: -9.62940788269043
    8. '*n' → logprob: -9.87940788269043
    9. '*' → logprob: -10.00440788269043
    10. '_times' → logprob: -10.25440788269043

Token 564: 'mutation' (ID: 92896)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.46807146072387695
    2. 'mute' → logprob: -1.468071460723877
    3. 'mutation' → logprob: -2.343071460723877
    4. 'mut' → logprob: -3.093071460723877
    5. 't' → logprob: -6.718071460723877
    6. 'mission' → logprob: -7.593071460723877
    7. 'mt' → logprob: -9.218070983886719
    8. 'mit' → logprob: -9.468070983886719
    9. 'r' → logprob: -11.593070983886719
    10. '```' → logprob: -11.718070983886719

Token 565: '(inner' (ID: 125841)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000912774819880724
    2. '(inner' → logprob: -7.500912666320801
    3. '(' → logprob: -8.3759126663208
    4. 'n' → logprob: -9.6259126663208
    5. '*' → logprob: -10.8759126663208
    6. '[n' → logprob: -11.6259126663208
    7. '*n' → logprob: -11.7509126663208
    8. '*(' → logprob: -12.1259126663208
    9. ' (' → logprob: -12.5009126663208
    10. '((' → logprob: -12.7509126663208

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011232316493988037
    2. ',n' → logprob: -4.511232376098633
    3. '(n' → logprob: -9.636232376098633
    4. ' ,' → logprob: -9.886232376098633
    5. '[n' → logprob: -10.636232376098633
    6. ')' → logprob: -11.011232376098633
    7. 'n' → logprob: -11.511232376098633
    8. '),' → logprob: -11.511232376098633
    9. '*n' → logprob: -13.136232376098633
    10. ',
' → logprob: -13.511232376098633

Token 567: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815006136894226
    2. ' n' → logprob: -4.0181498527526855
    3. '           ' → logprob: -16.143150329589844
    4. '	n' → logprob: -16.643150329589844
    5. ')n' → logprob: -17.643150329589844
    6. '               ' → logprob: -18.518150329589844
    7. '   ' → logprob: -18.768150329589844
    8. '                   ' → logprob: -19.393150329589844
    9. '    ' → logprob: -19.643150329589844
    10. ' ' → logprob: -19.643150329589844

Token 568: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007312587113119662
    2. ')
' → logprob: -7.375731468200684
    3. '       ' → logprob: -9.375731468200684
    4. '   ' → logprob: -11.625731468200684
    5. ' )' → logprob: -12.000731468200684
    6. '           ' → logprob: -12.750731468200684
    7. ')
' → logprob: -14.875731468200684
    8. ',' → logprob: -15.000731468200684
    9. '),' → logprob: -15.125731468200684
    10. '*' → logprob: -15.875731468200684

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025649568997323513
    2. '   ' → logprob: -6.377564907073975
    3. 'def' → logprob: -8.377565383911133
    4. '<|end|>' → logprob: -8.627565383911133
    5. '	' → logprob: -9.002565383911133
    6. ')' → logprob: -9.502565383911133
    7. '
' → logprob: -9.502565383911133
    8. '```' → logprob: -9.752565383911133
    9. '           ' → logprob: -10.252565383911133
    10. '        
' → logprob: -10.502565383911133

Token 570: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012811839114874601
    2. '   ' → logprob: -7.001281261444092
    3. 'else' (adapté à ' else') → logprob: -9.376280784606934
    4. '
' → logprob: -9.626280784606934
    5. 'def' → logprob: -9.876280784606934
    6. '	' → logprob: -9.876280784606934
    7. '           ' → logprob: -10.251280784606934
    8. '        
' → logprob: -10.501280784606934
    9. 'return' → logprob: -10.876280784606934
    10. '```' → logprob: -11.626280784606934

Token 571: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19110769033432007
    2. ' if' → logprob: -2.441107749938965
    3. ':
' → logprob: -2.816107749938965
    4. '           ' → logprob: -4.441107749938965
    5. 'if' → logprob: -4.816107749938965
    6. ':' → logprob: -5.191107749938965
    7. 'name' → logprob: -8.066107749938965
    8. ',' → logprob: -8.066107749938965
    9. '   ' → logprob: -8.191107749938965
    10. ' part' → logprob: -8.441107749938965

Token 572: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16138052940368652
    2. 'name' → logprob: -2.4113805294036865
    3. 'c' → logprob: -3.6613805294036865
    4. 'if' → logprob: -4.161380767822266
    5. 'ch' → logprob: -5.036380767822266
    6. 'part' → logprob: -5.161380767822266
    7. ' c' → logprob: -5.661380767822266
    8. ' if' → logprob: -7.411380767822266
    9. ' name' → logprob: -7.536380767822266
    10. '           ' → logprob: -7.911380767822266

Token 573: ' #' (ID: 1069)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.5809218883514404
    2. 'c' → logprob: -1.0809218883514404
    3. 'ch' → logprob: -2.3309218883514404
    4. 'part' → logprob: -5.9559221267700195
    5. '       ' → logprob: -7.3309221267700195
    6. 'char' → logprob: -7.8309221267700195
    7. '           ' → logprob: -7.9559221267700195
    8. 'p' → logprob: -9.33092212677002
    9. ' name' → logprob: -11.45592212677002
    10. '   ' → logprob: -11.45592212677002

Token 574: ' part' (ID: 997)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8213475346565247
    2. 'name' → logprob: -1.0713474750518799
    3. 'ch' → logprob: -1.5713474750518799
    4. 'part' → logprob: -5.196347713470459
    5. 'char' → logprob: -6.321347713470459
    6. '           ' → logprob: -6.696347713470459
    7. 'p' → logprob: -7.196347713470459
    8. '       ' → logprob: -8.1963472366333
    9. 'token' → logprob: -9.1963472366333
    10. 'self' → logprob: -10.5713472366333

Token 575: ' name' (ID: 1308)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.1320798099040985
    2. 'name' → logprob: -2.132079839706421
    3. ' =' → logprob: -6.132079601287842
    4. '           ' → logprob: -6.507079601287842
    5. '=' → logprob: -7.007079601287842
    6. '       ' → logprob: -7.632079601287842
    7. '   ' → logprob: -10.507080078125
    8. '_' → logprob: -11.632080078125
    9. 'Name' → logprob: -11.882080078125
    10. '            
' → logprob: -12.382080078125

Token 576: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3980622887611389
    2. ' =' → logprob: -1.5230622291564941
    3. '           ' → logprob: -2.273062229156494
    4. 'name' → logprob: -5.648062229156494
    5. 'return' → logprob: -6.148062229156494
    6. '       ' → logprob: -7.148062229156494
    7. 'token' → logprob: -8.273062705993652
    8. 'char' → logprob: -8.648062705993652
    9. '=name' → logprob: -9.023062705993652
    10. 'c' → logprob: -9.398062705993652

Token 577: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016197188524529338
    2. ' self' → logprob: -7.001619815826416
    3. '           ' → logprob: -7.626619815826416
    4. '       ' → logprob: -8.501619338989258
    5. '   ' → logprob: -11.876619338989258
    6. '               ' → logprob: -12.126619338989258
    7. '         ' → logprob: -14.001619338989258
    8. '          ' → logprob: -14.501619338989258
    9. '             ' → logprob: -14.751619338989258
    10. '            ' → logprob: -14.751619338989258

Token 578: ' single' (ID: 4590)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0989905521273613
    2. 'single' → logprob: -2.4739904403686523
    3. 'uppercase' → logprob: -5.223990440368652
    4. 'letter' → logprob: -5.598990440368652
    5. 'capital' → logprob: -7.348990440368652
    6. 'upper' → logprob: -9.348990440368652
    7. 'part' → logprob: -10.098990440368652
    8. 'A' → logprob: -10.598990440368652
    9. '
' → logprob: -10.723990440368652
    10. ' single' → logprob: -10.973990440368652

Token 579: ' letter' (ID: 10263)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46539807319641113
    2. ' uppercase' → logprob: -1.9653980731964111
    3. 'uppercase' → logprob: -2.340398073196411
    4. 'letter' → logprob: -2.715398073196411
    5. 'char' → logprob: -3.715398073196411
    6. ' self' → logprob: -4.215397834777832
    7. 'character' → logprob: -4.215397834777832
    8. ' character' → logprob: -4.965397834777832
    9. 'upper' → logprob: -5.715397834777832
    10. ' letter' → logprob: -5.840397834777832

Token 580: ' uppercase' (ID: 79050)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.41731446981430054
    2. '           ' → logprob: -1.9173145294189453
    3. 'ch' → logprob: -2.1673145294189453
    4. 'token' → logprob: -3.4173145294189453
    5. 'name' → logprob: -3.7923145294189453
    6. ' c' → logprob: -4.542314529418945
    7. 'char' → logprob: -5.167314529418945
    8. 'return' → logprob: -5.292314529418945
    9. ' ch' → logprob: -6.667314529418945
    10. '       ' → logprob: -6.792314529418945

Token 581: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6932451725006104
    2. 'c' → logprob: -0.9432451725006104
    3. 'ch' → logprob: -2.5682451725006104
    4. 'name' → logprob: -4.443244934082031
    5. ' c' → logprob: -4.818244934082031
    6. 'char' → logprob: -5.193244934082031
    7. 'token' → logprob: -5.443244934082031
    8. ' ch' → logprob: -6.318244934082031
    9. 'return' → logprob: -6.568244934082031
    10. 'part' → logprob: -8.068244934082031

Token 582: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21337956190109253
    2. '       ' → logprob: -1.7133796215057373
    3. 'token' → logprob: -5.213379383087158
    4. 'c' → logprob: -6.588379383087158
    5. 'name' → logprob: -6.713379383087158
    6. 'char' → logprob: -6.838379383087158
    7. 'return' → logprob: -6.963379383087158
    8. 'ch' → logprob: -7.088379383087158
    9. ' c' → logprob: -7.463379383087158
    10. 'part' → logprob: -9.338379859924316

Token 583: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.4440804123878479
    2. 'ch' → logprob: -1.1940803527832031
    3. 'name' → logprob: -3.194080352783203
    4. '           ' → logprob: -4.569080352783203
    5. 'char' → logprob: -6.194080352783203
    6. ' c' → logprob: -6.944080352783203
    7. 'part' → logprob: -7.569080352783203
    8. ' ch' → logprob: -8.444080352783203
    9. 'p' → logprob: -8.694080352783203
    10. 'token' → logprob: -8.819080352783203

Token 584: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693272531032562
    2. ' =' → logprob: -2.1269326210021973
    3. '   ' → logprob: -13.126933097839355
    4. '=self' → logprob: -13.876933097839355
    5. '       ' → logprob: -14.376933097839355
    6. '           ' → logprob: -15.126933097839355
    7. '=c' → logprob: -15.126933097839355
    8. ' ' → logprob: -16.12693214416504
    9. '  ' → logprob: -16.12693214416504
    10. '=
' → logprob: -16.50193214416504

Token 585: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007101670489646494
    2. ' self' → logprob: -7.2507100105285645
    3. '           ' → logprob: -15.750710487365723
    4. '   ' → logprob: -17.000709533691406
    5. '	self' → logprob: -17.000709533691406
    6. '       ' → logprob: -17.625709533691406
    7. '(self' → logprob: -18.875709533691406
    8. '[self' → logprob: -19.750709533691406
    9. ' ' → logprob: -19.875709533691406
    10. '               ' → logprob: -20.500709533691406

Token 586: '.peek' (ID: 73296)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.3595844805240631
    2. '.peek' → logprob: -1.2345844507217407
    3. 'peek' → logprob: -5.484584331512451
    4. '.parse' → logprob: -5.609584331512451
    5. 's' → logprob: -5.859584331512451
    6. 'parse' → logprob: -7.984584331512451
    7. '.next' → logprob: -10.98458480834961
    8. '.' → logprob: -11.10958480834961
    9. '.pe' → logprob: -11.98458480834961
    10. '.pos' → logprob: -12.10958480834961

Token 587: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.28369149565696716
    2. '()' → logprob: -1.5336915254592896
    3. '       ' → logprob: -4.03369140625
    4. '           ' → logprob: -4.78369140625
    5. '();' → logprob: -5.40869140625
    6. '[' → logprob: -9.15869140625
    7. '
' → logprob: -9.15869140625
    8. 'c' → logprob: -9.40869140625
    9. ';' → logprob: -9.65869140625
    10. 'self' → logprob: -10.15869140625

Token 588: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5035870671272278
    2. '       ' → logprob: -1.503587007522583
    3. 'self' → logprob: -1.753587007522583
    4. '   ' → logprob: -9.753586769104004
    5. ' self' → logprob: -9.753586769104004
    6. 'if' → logprob: -10.503586769104004
    7. '	       ' → logprob: -12.128586769104004
    8. '	self' → logprob: -12.878586769104004
    9. '               ' → logprob: -13.378586769104004
    10. 'c' → logprob: -13.503586769104004

Token 589: ' assert' (ID: 3696)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004418013151735067
    2. '       ' → logprob: -6.379417896270752
    3. '           ' → logprob: -6.504417896270752
    4. 'if' → logprob: -7.004417896270752
    5. 'assert' (adapté à ' assert') → logprob: -8.25441837310791
    6. ' self' → logprob: -10.25441837310791
    7. '   ' → logprob: -11.87941837310791
    8. 'c' → logprob: -12.50441837310791
    9. '	self' → logprob: -13.75441837310791
    10. ' if' → logprob: -16.129417419433594

Token 590: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.509618878364563
    2. 'c' → logprob: -1.134618878364563
    3. ''' → logprob: -2.7596187591552734
    4. ' '' → logprob: -5.009618759155273
    5. ''C' → logprob: -5.134618759155273
    6. ' c' → logprob: -6.884618759155273
    7. 'A' → logprob: -8.509618759155273
    8. 'self' → logprob: -8.759618759155273
    9. '   ' → logprob: -9.134618759155273
    10. '('' → logprob: -9.259618759155273

Token 591: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13037972152233124
    2. ''A' → logprob: -2.2553796768188477
    3. 'c' → logprob: -4.130379676818848
    4. ''' → logprob: -6.755379676818848
    5. '65' → logprob: -9.380379676818848
    6. 'C' → logprob: -10.380379676818848
    7. ''C' → logprob: -10.755379676818848
    8. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -11.880379676818848
    9. '"A' → logprob: -13.005379676818848
    10. 'self' → logprob: -13.380379676818848

Token 592: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5332478142227046e-05
    2. ''<' → logprob: -12.125015258789062
    3. 'A' → logprob: -12.375015258789062
    4. 'Z' → logprob: -12.500015258789062
    5. ''[' → logprob: -14.375015258789062
    6. ''''' → logprob: -14.500015258789062
    7. '"' → logprob: -15.250015258789062
    8. ''A' → logprob: -16.125015258789062
    9. ''>' → logprob: -16.375015258789062
    10. '''' → logprob: -16.375015258789062

Token 593: ' <=' (ID: 5017)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.39201611280441284
    2. '<=' → logprob: -1.1420161724090576
    3. '```' → logprob: -5.7670159339904785
    4. ''''' → logprob: -7.0170159339904785
    5. 'Z' → logprob: -7.7670159339904785
    6. '"' → logprob: -8.892016410827637
    7. ' <=' → logprob: -9.392016410827637
    8. '''' → logprob: -9.892016410827637
    9. 'A' → logprob: -10.017016410827637
    10. ']<=' → logprob: -10.267016410827637

Token 594: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.128163257315464e-07
    2. ' c' → logprob: -15.25
    3. '	c' → logprob: -22.375
    4. ')c' → logprob: -22.625
    5. '_c' → logprob: -23.375
    6. 'cation' → logprob: -23.75
    7. '$c' → logprob: -24.5
    8. 'code' → logprob: -24.75
    9. '```' → logprob: -24.875
    10. 'с' → logprob: -25.0

Token 595: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.006445830687880516
    2. ' <=' → logprob: -5.13144588470459
    3. '<' → logprob: -7.63144588470459
    4. 'and' → logprob: -11.25644588470459
    5. '           ' → logprob: -11.88144588470459
    6. ' and' → logprob: -13.00644588470459
    7. '>=' → logprob: -13.25644588470459
    8. ')<=' → logprob: -13.50644588470459
    9. '          ' → logprob: -14.00644588470459
    10. '       ' → logprob: -14.25644588470459

Token 596: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00409656623378396
    2. 'Z' → logprob: -5.504096508026123
    3. ' '' → logprob: -11.629096984863281
    4. ''z' → logprob: -11.879096984863281
    5. '>Z' → logprob: -14.379096984863281
    6. '`' → logprob: -14.629096984863281
    7. '"' → logprob: -14.754096984863281
    8. ' Z' → logprob: -15.004096984863281
    9. '	Z' → logprob: -16.00409698486328
    10. '_Z' → logprob: -16.62909698486328

Token 597: 'Z' (ID: 57)
  Prédit: 'Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -1.0325924449716695e-05
    2. ''' → logprob: -11.50001049041748
    3. ' Z' → logprob: -15.75001049041748
    4. ''z' → logprob: -17.625009536743164
    5. '_Z' → logprob: -17.750009536743164
    6. '`' → logprob: -17.750009536743164
    7. '>Z' → logprob: -17.750009536743164
    8. '[' → logprob: -18.625009536743164
    9. '"' → logprob: -19.125009536743164
    10. '['' → logprob: -19.125009536743164

Token 598: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05780572071671486
    2. ',' → logprob: -3.5578057765960693
    3. '           ' → logprob: -4.55780553817749
    4. '
' → logprob: -4.68280553817749
    5. ')
' → logprob: -5.80780553817749
    6. '',' → logprob: -6.43280553817749
    7. '<|end|>' → logprob: -6.93280553817749
    8. ')' → logprob: -7.05780553817749
    9. '   ' → logprob: -8.182806015014648
    10. ''
' → logprob: -8.307806015014648

Token 599: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3549666106700897
    2. '       ' → logprob: -1.229966640472412
    3. 'self' → logprob: -5.229966640472412
    4. '   ' → logprob: -7.479966640472412
    5. '	       ' → logprob: -8.229966163635254
    6. '<|end|>' → logprob: -8.854966163635254
    7. ' self' → logprob: -10.104966163635254
    8. '```' → logprob: -10.479966163635254
    9. '<|end|>' → logprob: -11.104966163635254
    10. '	   ' → logprob: -11.229966163635254

Token 600: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.036280084401369095
    2. '           ' → logprob: -3.6612801551818848
    3. '       ' → logprob: -4.661280155181885
    4. ' self' → logprob: -8.161279678344727
    5. 'c' → logprob: -8.911279678344727
    6. '   ' → logprob: -9.911279678344727
    7. '	self' → logprob: -13.036279678344727
    8. '               ' → logprob: -14.161279678344727
    9. 'perm' → logprob: -14.661279678344727
    10. 'per' → logprob: -15.161279678344727

Token 601: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0006631145952269435
    2. '.e' → logprob: -7.7506632804870605
    3. 'pos' → logprob: -8.375662803649902
    4. 'eat' → logprob: -13.375662803649902
    5. '.consume' → logprob: -15.875662803649902
    6. '	pos' → logprob: -16.00066375732422
    7. ',pos' → logprob: -17.00066375732422
    8. '.advance' → logprob: -17.25066375732422
    9. '   ' → logprob: -17.62566375732422
    10. '.next' → logprob: -17.62566375732422

Token 602: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009831507923081517
    2. ' +=' → logprob: -7.000983238220215
    3. '           ' → logprob: -9.625983238220215
    4. '=' → logprob: -13.000983238220215
    5. '+' → logprob: -13.500983238220215
    6. ']+=' → logprob: -13.625983238220215
    7. '       ' → logprob: -15.500983238220215
    8. '+
' → logprob: -15.500983238220215
    9. '```' → logprob: -16.0009822845459
    10. '1' → logprob: -16.2509822845459

Token 603: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -19.25
    5. '2' → logprob: -21.375
    6. '
' → logprob: -21.625
    7. '１' → logprob: -22.0
    8. '۱' → logprob: -22.25
    9. '  ' → logprob: -23.0
    10. '#' → logprob: -23.625

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. '```' → logprob: -22.375
    4. '１' → logprob: -22.75
    5. '   ' → logprob: -23.375
    6. '۱' → logprob: -23.625
    7. '
' → logprob: -23.875
    8. '১' → logprob: -24.875
    9. '१' → logprob: -24.875
    10. '+' → logprob: -25.25

Token 605: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016495637595653534
    2. 'return' → logprob: -4.141495704650879
    3. ' return' → logprob: -8.016495704650879
    4. '   ' → logprob: -10.391495704650879
    5. '	       ' → logprob: -10.391495704650879
    6. '<|end|>' → logprob: -10.641495704650879
    7. '       ' → logprob: -11.141495704650879
    8. '		' → logprob: -11.391495704650879
    9. '            
' → logprob: -12.016495704650879
    10. '	return' → logprob: -12.391495704650879

Token 606: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03561100736260414
    2. '           ' → logprob: -3.4106109142303467
    3. ' return' → logprob: -6.910611152648926
    4. '       ' → logprob: -7.160611152648926
    5. '   ' → logprob: -8.910611152648926
    6. 'part' → logprob: -11.285611152648926
    7. 'parts' → logprob: -11.285611152648926
    8. '
' → logprob: -11.535611152648926
    9. '```' → logprob: -12.410611152648926
    10. 'c' → logprob: -12.410611152648926

Token 607: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.225939872208983e-05
    2. '           ' → logprob: -10.875032424926758
    3. '       ' → logprob: -11.625032424926758
    4. ' return' → logprob: -12.750032424926758
    5. '   ' → logprob: -14.125032424926758
    6. '
' → logprob: -15.125032424926758
    7. 'parts' → logprob: -15.250032424926758
    8. 'result' → logprob: -17.125032424926758
    9. 'part' → logprob: -17.375032424926758
    10. 'ret' → logprob: -18.000032424926758

Token 608: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -4.692145012086257e-05
    2. ' parts' → logprob: -10.125046730041504
    3. '   ' → logprob: -13.375046730041504
    4. 'self' → logprob: -13.625046730041504
    5. '(parts' → logprob: -13.625046730041504
    6. '           ' → logprob: -14.250046730041504
    7. '[' → logprob: -14.250046730041504
    8. '       ' → logprob: -14.500046730041504
    9. 'part' → logprob: -14.750046730041504
    10. 'list' → logprob: -16.50004768371582

Token 609: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: 0.0
    2. 'c' → logprob: -17.625
    3. '[' → logprob: -18.0
    4. '[C' → logprob: -20.25
    5. '[name' → logprob: -21.125
    6. '[get' → logprob: -21.625
    7. ' [' → logprob: -21.75
    8. '\[' → logprob: -22.0
    9. '(c' → logprob: -22.125
    10. '```' → logprob: -22.375

Token 610: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001749351795297116
    2. '][' → logprob: -9.375174522399902
    3. ' ]' → logprob: -9.750174522399902
    4. '[' → logprob: -12.250174522399902
    5. ']()' → logprob: -12.250174522399902
    6. '']' → logprob: -12.375174522399902
    7. '][:' → logprob: -12.500174522399902
    8. '][]' → logprob: -12.875174522399902
    9. '<|end|>' → logprob: -13.000174522399902
    10. '   ' → logprob: -13.625174522399902

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2070247083902359
    2. '
' → logprob: -1.8320246934890747
    3. '```' → logprob: -3.9570248126983643
    4. '<|end|>' → logprob: -5.457024574279785
    5. 'def' → logprob: -5.832024574279785
    6. '    
' → logprob: -8.082024574279785
    7. ' def' → logprob: -9.457024574279785
    8. '

' → logprob: -9.582024574279785
    9. '<|end|>' → logprob: -9.957024574279785
    10. '``' → logprob: -10.707024574279785

Token 612: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04353596270084381
    2. 'def' (adapté à ' def') → logprob: -3.1685359477996826
    3. ' def' → logprob: -7.918536186218262
    4. '```' → logprob: -9.293536186218262
    5. '
' → logprob: -9.668536186218262
    6. '    
' → logprob: -11.668536186218262
    7. ' ' → logprob: -12.043536186218262
    8. '	def' → logprob: -14.168536186218262
    9. 'class' → logprob: -14.918536186218262
    10. '``' → logprob: -14.918536186218262

Token 613: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -2.7968066206085496e-05
    2. ' parse' → logprob: -10.875027656555176
    3. 'combine' → logprob: -12.125027656555176
    4. 'def' → logprob: -13.250027656555176
    5. '   ' → logprob: -14.875027656555176
    6. 'merge' → logprob: -15.000027656555176
    7. '_parse' → logprob: -15.625027656555176
    8. ' ' → logprob: -16.250028610229492
    9. 'compose' → logprob: -16.250028610229492
    10. '(parse' → logprob: -16.250028610229492

Token 614: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -2.7133641196996905e-05
    2. '_expression' → logprob: -10.75002670288086
    3. '_term' → logprob: -12.50002670288086
    4. 'expr' → logprob: -13.50002670288086
    5. '_factor' → logprob: -14.75002670288086
    6. 'Expr' → logprob: -17.37502670288086
    7. '_exp' → logprob: -18.00002670288086
    8. '_part' → logprob: -18.50002670288086
    9. '(expr' → logprob: -18.62502670288086
    10. '__' → logprob: -19.00002670288086

Token 615: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002569289645180106
    2. '(' → logprob: -9.000256538391113
    3. '   ' → logprob: -9.625256538391113
    4. 'self' → logprob: -10.125256538391113
    5. 'def' → logprob: -11.375256538391113
    6. '_(' → logprob: -12.625256538391113
    7. '       ' → logprob: -12.750256538391113
    8. '	self' → logprob: -13.625256538391113
    9. '(
' → logprob: -13.625256538391113
    10. '__(' → logprob: -13.625256538391113

Token 616: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0029319413006305695
    2. '   ' → logprob: -6.127932071685791
    3. 'self' → logprob: -8.502931594848633
    4. 'def' → logprob: -8.877931594848633
    5. '(' → logprob: -9.002931594848633
    6. '       ' → logprob: -9.627931594848633
    7. '):
' → logprob: -9.877931594848633
    8. ')' → logprob: -10.127931594848633
    9. '():' → logprob: -10.627931594848633
    10. '():
' → logprob: -10.752931594848633

Token 617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0159908439964056
    2. 'res' → logprob: -5.140990734100342
    3. 'perm' → logprob: -5.140990734100342
    4. 'result' → logprob: -5.640990734100342
    5. '   ' → logprob: -9.0159912109375
    6. 'r' → logprob: -9.0159912109375
    7. 'left' → logprob: -9.6409912109375
    8. 'p' → logprob: -10.0159912109375
    9. ' res' → logprob: -10.0159912109375
    10. 'R' → logprob: -10.1409912109375

Token 618: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5440302491188049
    2. 'result' → logprob: -1.7940301895141602
    3. 'left' → logprob: -2.04403018951416
    4. 'perm' → logprob: -2.54403018951416
    5. '       ' → logprob: -3.16903018951416
    6. 'p' → logprob: -6.16903018951416
    7. 'lhs' → logprob: -8.29403018951416
    8. 'cur' → logprob: -8.41903018951416
    9. 'ret' → logprob: -9.16903018951416
    10. 'P' → logprob: -9.16903018951416

Token 619: ' parse' (ID: 8420)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2736642360687256
    2. 'result' → logprob: -2.2736642360687256
    3. 'perm' → logprob: -2.3986642360687256
    4. 'left' → logprob: -3.2736642360687256
    5. 'p' → logprob: -5.273664474487305
    6. '       ' → logprob: -6.898664474487305
    7. 'P' → logprob: -7.273664474487305
    8. '   ' → logprob: -8.773664474487305
    9. 'lhs' → logprob: -8.773664474487305
    10. 'R' → logprob: -8.898664474487305

Token 620: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36440137028694153
    2. 'term' → logprob: -1.2394013404846191
    3. 'perm' → logprob: -5.239401340484619
    4. 'left' → logprob: -5.364401340484619
    5. 'res' → logprob: -6.364401340484619
    6. 'result' → logprob: -6.489401340484619
    7. 'per' → logprob: -6.739401340484619
    8. ' self' → logprob: -8.114401817321777
    9. '       ' → logprob: -8.364401817321777
    10. 'part' → logprob: -8.739401817321777

Token 621: ' sequence' (ID: 16281)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.009815353900194168
    2. '_term' → logprob: -5.384815216064453
    3. ' term' → logprob: -5.884815216064453
    4. 'part' → logprob: -7.009815216064453
    5. 'def' → logprob: -7.384815216064453
    6. 'per' → logprob: -8.134815216064453
    7. 'perm' → logprob: -8.884815216064453
    8. 'factor' → logprob: -9.009815216064453
    9. 'expr' → logprob: -9.634815216064453
    10. '   ' → logprob: -10.259815216064453

Token 622: ' connected' (ID: 12079)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02979203499853611
    2. '()' → logprob: -3.779792070388794
    3. '           ' → logprob: -6.279791831970215
    4. 'result' → logprob: -6.529791831970215
    5. '   ' → logprob: -7.404791831970215
    6. 'self' → logprob: -7.779791831970215
    7. '()
' → logprob: -8.029791831970215
    8. ' =' → logprob: -8.279791831970215
    9. 'term' → logprob: -8.279791831970215
    10. 'token' → logprob: -8.404791831970215

Token 623: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.19216080009937286
    2. 'with' → logprob: -2.0671608448028564
    3. '   ' → logprob: -4.067160606384277
    4. ' by' → logprob: -4.067160606384277
    5. '       ' → logprob: -5.067160606384277
    6. ' with' → logprob: -5.317160606384277
    7. 'def' → logprob: -6.692160606384277
    8. '           ' → logprob: -8.067160606384277
    9. 'to' → logprob: -8.567160606384277
    10. '_by' → logprob: -8.567160606384277

Token 624: ' '+' (ID: 30120)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48449259996414185
    2. 'self' → logprob: -1.859492540359497
    3. ''+' → logprob: -2.109492540359497
    4. ''' → logprob: -2.859492540359497
    5. 'term' → logprob: -3.859492540359497
    6. 'plus' → logprob: -4.609492778778076
    7. '   ' → logprob: -5.234492778778076
    8. 'terms' → logprob: -5.859492778778076
    9. ' +' → logprob: -6.484492778778076
    10. '+
' → logprob: -6.484492778778076

Token 625: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.8793397545814514
    2. '=' → logprob: -1.7543396949768066
    3. 'def' → logprob: -2.1293396949768066
    4. ''' → logprob: -2.7543396949768066
    5. '('' → logprob: -2.7543396949768066
    6. ')' → logprob: -3.0043396949768066
    7. '()' → logprob: -3.7543396949768066
    8. '+' → logprob: -4.129339694976807
    9. '   ' → logprob: -4.129339694976807
    10. ' =' → logprob: -4.129339694976807

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001389400800690055
    2. '   ' → logprob: -7.376389503479004
    3. '```' → logprob: -7.876389503479004
    4. 'def' → logprob: -8.876389503479004
    5. 'result' → logprob: -9.251389503479004
    6. 'perm' → logprob: -10.751389503479004
    7. 'self' → logprob: -10.876389503479004
    8. 'res' → logprob: -11.001389503479004
    9. 'current' → logprob: -11.251389503479004
    10. 'tokens' → logprob: -11.501389503479004

Token 627: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' (adapté à ' perm') → logprob: -1.0505785942077637
    2. '       ' → logprob: -1.1755785942077637
    3. 'res' → logprob: -1.8005785942077637
    4. 'left' → logprob: -2.5505785942077637
    5. 'result' → logprob: -2.9255785942077637
    6. 'p' → logprob: -3.1755785942077637
    7. 'per' → logprob: -7.300578594207764
    8. 'ret' → logprob: -7.800578594207764
    9. 'first' → logprob: -7.925578594207764
    10. 'P' → logprob: -8.050579071044922

Token 628: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325153350830078
    2. '=' → logprob: -3.773251533508301
    3. 's' → logprob: -12.6482515335083
    4. '   ' → logprob: -13.3982515335083
    5. ' ' → logprob: -15.0232515335083
    6. '       ' → logprob: -15.3982515335083
    7. '=[]' → logprob: -15.6482515335083
    8. '_' → logprob: -16.023250579833984
    9. 'erm' → logprob: -16.148250579833984
    10. '	' → logprob: -16.273250579833984

Token 629: ' self' (ID: 1051)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6068798899650574
    2. '[' → logprob: -1.3568799495697021
    3. 'list' → logprob: -1.7318799495697021
    4. 'None' → logprob: -4.606879711151123
    5. 'self' → logprob: -5.981879711151123
    6. '[]' → logprob: -5.981879711151123
    7. '[list' → logprob: -6.231879711151123
    8. '[self' → logprob: -6.856879711151123
    9. 'perm' → logprob: -7.106879711151123
    10. ' [' → logprob: -7.856879711151123

Token 630: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.029820039868354797
    2. 'parse' → logprob: -3.529819965362549
    3. '   ' → logprob: -10.529820442199707
    4. '.' → logprob: -10.654820442199707
    5. ' parse' → logprob: -11.654820442199707
    6. '=parse' → logprob: -13.404820442199707
    7. ' .' → logprob: -13.529820442199707
    8. '(parse' → logprob: -13.904820442199707
    9. '	parse' → logprob: -13.904820442199707
    10. 'parts' → logprob: -14.029820442199707

Token 631: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -1.9743012671824545e-05
    2. '_term' → logprob: -11.000020027160645
    3. 'part' → logprob: -12.750020027160645
    4. '_per' → logprob: -17.625019073486328
    5. '_expr' → logprob: -17.875019073486328
    6. '_factor' → logprob: -18.375019073486328
    7. '_' → logprob: -19.000019073486328
    8. ' part' → logprob: -19.000019073486328
    9. 'Part' → logprob: -19.000019073486328
    10. '_parts' → logprob: -19.875019073486328

Token 632: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0735771432518959
    2. '()' → logprob: -3.3235771656036377
    3. '
' → logprob: -3.9485771656036377
    4. '()
' → logprob: -4.323576927185059
    5. '        
' → logprob: -7.323576927185059
    6. '[' → logprob: -8.073576927185059
    7. ')' → logprob: -8.198576927185059
    8. '(' → logprob: -8.573576927185059
    9. ')
' → logprob: -9.073576927185059
    10. '[]' → logprob: -9.198576927185059

Token 633: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47934961318969727
    2. '       ' → logprob: -0.9793496131896973
    3. ' while' → logprob: -5.854349613189697
    4. '```' → logprob: -6.729349613189697
    5. '
' → logprob: -7.229349613189697
    6. '   ' → logprob: -8.479349136352539
    7. '``' → logprob: -9.229349136352539
    8. '	while' → logprob: -9.229349136352539
    9. '	' → logprob: -10.729349136352539
    10. '        
' → logprob: -11.979349136352539

Token 634: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006736095994710922
    2. '       ' → logprob: -5.0067362785339355
    3. ' while' → logprob: -11.006735801696777
    4. '   ' → logprob: -13.381735801696777
    5. '	while' → logprob: -13.881735801696777
    6. '```' → logprob: -13.881735801696777
    7. '
' → logprob: -14.631735801696777
    8. 'While' → logprob: -15.256735801696777
    9. '``' → logprob: -16.881736755371094
    10. '        
' → logprob: -17.881736755371094

Token 635: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006721059791743755
    2. ' self' → logprob: -5.006721019744873
    3. '(self' → logprob: -12.631721496582031
    4. '   ' → logprob: -13.256721496582031
    5. '	self' → logprob: -15.131721496582031
    6. ' ' → logprob: -16.38172149658203
    7. '[self' → logprob: -16.38172149658203
    8. 'True' → logprob: -16.88172149658203
    9. '
' → logprob: -17.00672149658203
    10. '     ' → logprob: -17.13172149658203

Token 636: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.009629765525460243
    2. 'eat' → logprob: -4.759629726409912
    3. '.peek' → logprob: -8.38463020324707
    4. 'e' → logprob: -8.63463020324707
    5. ' and' → logprob: -8.63463020324707
    6. '.' → logprob: -8.88463020324707
    7. ' .' → logprob: -9.63463020324707
    8. 'peek' → logprob: -9.63463020324707
    9. 'and' → logprob: -10.13463020324707
    10. '.s' → logprob: -10.38463020324707

Token 637: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.874882430769503e-05
    2. 'eat' → logprob: -10.625079154968262
    3. '.at' → logprob: -11.000079154968262
    4. '<' → logprob: -11.125079154968262
    5. '.peek' → logprob: -12.250079154968262
    6. 'atch' → logprob: -13.000079154968262
    7. ' at' → logprob: -13.500079154968262
    8. 'aat' → logprob: -13.750079154968262
    9. 'At' → logprob: -13.875079154968262
    10. 'peek' → logprob: -13.875079154968262

Token 638: '('+' (ID: 108514)
  Prédit: '('+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('+' → logprob: -0.0008695332217030227
    2. ''+' → logprob: -7.3758697509765625
    3. '('' → logprob: -8.375869750976562
    4. '(' → logprob: -11.500869750976562
    5. '("+' → logprob: -13.250869750976562
    6. '+' → logprob: -15.500869750976562
    7. ''' → logprob: -15.500869750976562
    8. ' ('' → logprob: -16.250869750976562
    9. '   ' → logprob: -16.500869750976562
    10. '='+' → logprob: -17.125869750976562

Token 639: ''):
' (ID: 26539)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.43685027956962585
    2. ''):
' → logprob: -1.5618503093719482
    3. ''):' → logprob: -2.6868503093719482
    4. ''' → logprob: -3.0618503093719482
    5. '('+' → logprob: -4.311850070953369
    6. '):
' → logprob: -5.186850070953369
    7. '')' → logprob: -5.561850070953369
    8. '):' → logprob: -6.561850070953369
    9. '('' → logprob: -6.686850070953369
    10. '+' → logprob: -6.686850070953369

Token 640: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04716453701257706
    2. 'next' → logprob: -4.172164440155029
    3. 'p' → logprob: -4.672164440155029
    4. ' next' → logprob: -5.047164440155029
    5. 'rhs' → logprob: -5.297164440155029
    6. 'q' → logprob: -5.672164440155029
    7. ' p' → logprob: -6.672164440155029
    8. 'right' → logprob: -6.672164440155029
    9. 'Q' → logprob: -7.422164440155029
    10. ' rhs' → logprob: -7.547164440155029

Token 641: ' right' (ID: 1849)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4007626473903656
    2. 'right' (adapté à ' right') → logprob: -1.150762677192688
    3. 'rhs' → logprob: -4.900762557983398
    4. 'other' → logprob: -5.775762557983398
    5. 'p' → logprob: -6.775762557983398
    6. '           ' → logprob: -7.025762557983398
    7. 'r' → logprob: -7.525762557983398
    8. 'second' → logprob: -8.400762557983398
    9. ' next' → logprob: -9.150762557983398
    10. 'q' → logprob: -9.275762557983398

Token 642: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520451843738556
    2. '=' → logprob: -1.5020451545715332
    3. '_perm' → logprob: -9.127045631408691
    4. 'perm' → logprob: -12.252045631408691
    5. '   ' → logprob: -13.877045631408691
    6. ' ' → logprob: -14.627045631408691
    7. '_per' → logprob: -15.002045631408691
    8. '_part' → logprob: -15.252045631408691
    9. '       ' → logprob: -15.627045631408691
    10. ')' → logprob: -15.877045631408691

Token 643: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00218987581320107
    2. ' self' → logprob: -6.127190113067627
    3. '           ' → logprob: -12.377189636230469
    4. '(self' → logprob: -15.752189636230469
    5. '       ' → logprob: -15.877189636230469
    6. '   ' → logprob: -16.25218963623047
    7. '               ' → logprob: -16.37718963623047
    8. '	self' → logprob: -16.87718963623047
    9. '[self' → logprob: -17.50218963623047
    10. '         ' → logprob: -17.62718963623047

Token 644: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.38687586784362793
    2. 'parse' → logprob: -1.136875867843628
    3. '.' → logprob: -12.761876106262207
    4. ' parse' → logprob: -13.761876106262207
    5. '=parse' → logprob: -14.761876106262207
    6. '	parse' → logprob: -14.886876106262207
    7. ' .' → logprob: -16.26187515258789
    8. 'parser' → logprob: -17.51187515258789
    9. '(parse' → logprob: -17.63687515258789
    10. '   ' → logprob: -17.88687515258789

Token 645: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.040894266217947006
    2. '_expr' → logprob: -3.2908942699432373
    3. 'part' → logprob: -6.040894031524658
    4. 'expr' → logprob: -7.665894031524658
    5. '_term' → logprob: -14.915894508361816
    6. 'Part' → logprob: -15.915894508361816
    7. ' part' → logprob: -16.6658935546875
    8. 'Expr' → logprob: -17.0408935546875
    9. '_parts' → logprob: -17.4158935546875
    10. '_perm' → logprob: -17.5408935546875

Token 646: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016470879781991243
    2. 'perm' → logprob: -7.126646995544434
    3. '
' → logprob: -7.376646995544434
    4. '       ' → logprob: -9.626646995544434
    5. ' perm' → logprob: -10.501646995544434
    6. ',' → logprob: -10.501646995544434
    7. 'for' → logprob: -10.751646995544434
    8. '#' → logprob: -10.876646995544434
    9. ')
' → logprob: -11.376646995544434
    10. '               ' → logprob: -11.501646995544434

Token 647: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4269363582134247
    2. '           ' → logprob: -1.176936388015747
    3. 'perm' → logprob: -4.051936149597168
    4. 'for' → logprob: -4.801936149597168
    5. ' for' → logprob: -4.926936149597168
    6. ' perm' → logprob: -5.176936149597168
    7. '```' → logprob: -7.801936149597168
    8. '   ' → logprob: -8.176936149597168
    9. 'per' → logprob: -9.801936149597168
    10. '               ' → logprob: -11.926936149597168

Token 648: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' (adapté à ' perm') → logprob: -0.0024640022311359644
    2. '           ' → logprob: -6.2524638175964355
    3. ' perm' → logprob: -8.002464294433594
    4. '       ' → logprob: -9.127464294433594
    5. 'per' → logprob: -10.002464294433594
    6. '   ' → logprob: -11.252464294433594
    7. 'temp' → logprob: -11.627464294433594
    8. '#' → logprob: -12.002464294433594
    9. 'new' → logprob: -12.002464294433594
    10. 'combined' → logprob: -12.502464294433594

Token 649: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931498050689697
    2. ' =' → logprob: -0.6931498050689697
    3. '=[' → logprob: -13.31814956665039
    4. '[' → logprob: -15.31814956665039
    5. '＝' → logprob: -15.44314956665039
    6. '   ' → logprob: -15.81814956665039
    7. ' =[' → logprob: -16.06814956665039
    8. '           ' → logprob: -16.44314956665039
    9. '       ' → logprob: -16.56814956665039
    10. 'new' → logprob: -17.06814956665039

Token 650: ' self' (ID: 1051)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.25669562816619873
    2. '[' → logprob: -1.5066956281661987
    3. '[q' → logprob: -6.131695747375488
    4. '[right' → logprob: -6.756695747375488
    5. 'self' → logprob: -7.131695747375488
    6. '[r' → logprob: -8.381695747375488
    7. ' [' → logprob: -9.631695747375488
    8. '[left' → logprob: -9.631695747375488
    9. '[next' → logprob: -9.631695747375488
    10. '[get' → logprob: -10.506695747375488

Token 651: '.combine' (ID: 196448)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20642828941345215
    2. 'combine' → logprob: -2.081428289413452
    3. 'compose' → logprob: -3.206428289413452
    4. 'perm' → logprob: -5.831428527832031
    5. '[r' → logprob: -6.331428527832031
    6. '[R' → logprob: -6.456428527832031
    7. 'lambda' → logprob: -6.706428527832031
    8. '[self' → logprob: -6.706428527832031
    9. '[right' → logprob: -6.831428527832031
    10. '[next' → logprob: -6.831428527832031

Token 652: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005980466026812792
    2. 'perm' → logprob: -5.255980491638184
    3. '(per' → logprob: -8.005980491638184
    4. '(P' → logprob: -8.255980491638184
    5. '_perm' → logprob: -9.130980491638184
    6. 'per' → logprob: -10.880980491638184
    7. '_per' → logprob: -11.005980491638184
    8. 'Perm' → logprob: -13.380980491638184
    9. ' perm' → logprob: -13.380980491638184
    10. '(
' → logprob: -13.630980491638184

Token 653: 'perm' (ID: 34794)
  Prédit: 'perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -1.2948405128554441e-05
    2. ' perm' → logprob: -11.62501335144043
    3. 'self' → logprob: -13.00001335144043
    4. '           ' → logprob: -13.87501335144043
    5. 'per' → logprob: -14.50001335144043
    6. '               ' → logprob: -16.50001335144043
    7. '   ' → logprob: -17.00001335144043
    8. '       ' → logprob: -17.12501335144043
    9. 'perf' → logprob: -18.25001335144043
    10. '_perm' → logprob: -18.50001335144043

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009852928342297673
    2. ',right' → logprob: -7.000985145568848
    3. '[right' → logprob: -10.000985145568848
    4. ' ,' → logprob: -11.125985145568848
    5. 'right' → logprob: -11.375985145568848
    6. '(right' → logprob: -13.750985145568848
    7. '           ' → logprob: -14.500985145568848
    8. ' right' → logprob: -15.250985145568848
    9. ')' → logprob: -16.000986099243164
    10. '   ' → logprob: -16.875986099243164

Token 655: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -5.836499985889532e-05
    2. ' right' → logprob: -9.7500581741333
    3. '[right' → logprob: -19.125059127807617
    4. '	right' → logprob: -20.750059127807617
    5. '(right' → logprob: -21.375059127807617
    6. '
' → logprob: -21.375059127807617
    7. '.right' → logprob: -21.750059127807617
    8. '           ' → logprob: -21.750059127807617
    9. 'left' → logprob: -21.875059127807617
    10. '   ' → logprob: -22.000059127807617

Token 656: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001983590889722109
    2. ')
' → logprob: -6.251983642578125
    3. '           ' → logprob: -10.501983642578125
    4. '       ' → logprob: -10.626983642578125
    5. '   ' → logprob: -13.751983642578125
    6. ')return' → logprob: -14.751983642578125
    7. ')

' → logprob: -14.876983642578125
    8. ' )' → logprob: -15.126983642578125
    9. ']' → logprob: -15.626983642578125
    10. ')`' → logprob: -15.751983642578125

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005072583444416523
    2. 'return' → logprob: -5.380072593688965
    3. '```' → logprob: -8.755072593688965
    4. '
' → logprob: -9.255072593688965
    5. '           ' → logprob: -9.380072593688965
    6. 'def' → logprob: -10.380072593688965
    7. ' return' → logprob: -10.505072593688965
    8. '   ' → logprob: -10.505072593688965
    9. ',' → logprob: -12.005072593688965
    10. ')' → logprob: -12.130072593688965

Token 658: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38785719871520996
    2. 'return' (adapté à ' return') → logprob: -1.13785719871521
    3. '   ' → logprob: -7.887857437133789
    4. 'perm' → logprob: -8.137857437133789
    5. 'def' → logprob: -8.887857437133789
    6. ' return' → logprob: -9.637857437133789
    7. '```' → logprob: -9.637857437133789
    8. '           ' → logprob: -10.762857437133789
    9. '
' → logprob: -11.637857437133789
    10. '	' → logprob: -12.512857437133789

Token 659: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.0001589618914294988
    2. ' perm' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.25015926361084
    4. 'per' → logprob: -16.625158309936523
    5. '       ' → logprob: -16.750158309936523
    6. 'perf' → logprob: -18.375158309936523
    7. '           ' → logprob: -18.625158309936523
    8. '[' → logprob: -18.875158309936523
    9. '     ' → logprob: -19.750158309936523
    10. '    ' → logprob: -20.375158309936523

Token 660: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021371750626713037
    2. '
' → logprob: -6.877137184143066
    3. '<|end|>' → logprob: -7.377137184143066
    4. '    
' → logprob: -8.252137184143066
    5. 'def' → logprob: -8.752137184143066
    6. '<|end|>' → logprob: -10.252137184143066
    7. '```' → logprob: -11.627137184143066
    8. ' def' → logprob: -12.502137184143066
    9. '        
' → logprob: -12.627137184143066
    10. '  
' → logprob: -13.377137184143066

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001127955736592412
    2. '
' → logprob: -7.37612771987915
    3. 'def' → logprob: -7.62612771987915
    4. '    
' → logprob: -11.626128196716309
    5. '```' → logprob: -12.376128196716309
    6. ' def' → logprob: -14.876128196716309
    7. '        
' → logprob: -16.501127243041992
    8. '   ' → logprob: -17.251127243041992
    9. '#' → logprob: -17.501127243041992
    10. '	def' → logprob: -17.501127243041992

Token 662: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020121131092309952
    2. 'def' (adapté à ' def') → logprob: -4.020121097564697
    3. '
' → logprob: -6.270121097564697
    4. '```' → logprob: -9.895121574401855
    5. '    
' → logprob: -11.020121574401855
    6. ' def' → logprob: -11.520121574401855
    7. '        
' → logprob: -15.770121574401855
    8. '	def' → logprob: -15.895121574401855
    9. '``' → logprob: -16.39512062072754
    10. '

' → logprob: -16.52012062072754

Token 663: ' combine' (ID: 21700)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combine' → logprob: -0.00016754455282352865
    2. 'repeat' → logprob: -9.000167846679688
    3. 'def' → logprob: -11.375167846679688
    4. ' combine' → logprob: -11.375167846679688
    5. 'parse' → logprob: -11.625167846679688
    6. 'comb' → logprob: -12.250167846679688
    7. '   ' → logprob: -13.500167846679688
    8. 'class' → logprob: -14.000167846679688
    9. 'consume' → logprob: -14.000167846679688
    10. 'combined' → logprob: -14.250167846679688

Token 664: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006338051171042025
    2. '(' → logprob: -7.375633716583252
    3. '(
' → logprob: -12.37563419342041
    4. 'self' → logprob: -13.00063419342041
    5. 'def' → logprob: -15.25063419342041
    6. '   ' → logprob: -15.50063419342041
    7. ' (' → logprob: -16.125633239746094
    8. '[self' → logprob: -17.375633239746094
    9. '       ' → logprob: -18.375633239746094
    10. '(

' → logprob: -18.500633239746094

Token 665: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011772842844948173
    2. '(' → logprob: -9.250117301940918
    3. 'self' → logprob: -11.000117301940918
    4. '   ' → logprob: -12.875117301940918
    5. '(
' → logprob: -14.000117301940918
    6. 'def' → logprob: -14.500117301940918
    7. '       ' → logprob: -14.750117301940918
    8. ',' → logprob: -15.625117301940918
    9. ' (' → logprob: -15.750117301940918
    10. '[self' → logprob: -16.375118255615234

Token 666: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19055460393428802
    2. 'P' → logprob: -1.9405546188354492
    3. 'p' → logprob: -3.565554618835449
    4. 'perm' → logprob: -7.440554618835449
    5. 'a' → logprob: -8.06555461883545
    6. ' self' → logprob: -8.31555461883545
    7. 'left' → logprob: -8.56555461883545
    8. 'lambda' → logprob: -9.44055461883545
    9. ' P' → logprob: -9.69055461883545
    10. '   ' → logprob: -9.94055461883545

Token 667: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13747639954090118
    2. '1' → logprob: -2.1374764442443848
    3. '   ' → logprob: -5.262476444244385
    4. 'erm' → logprob: -5.762476444244385
    5. '[' → logprob: -7.262476444244385
    6. '[p' → logprob: -8.262475967407227
    7. 'erms' → logprob: -8.512475967407227
    8. ',p' → logprob: -8.637475967407227
    9. ' ,' → logprob: -9.262475967407227
    10. 'r' → logprob: -9.387475967407227

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014448833651840687
    2. ',p' → logprob: -4.264448642730713
    3. ' ,' → logprob: -8.889449119567871
    4. 'self' → logprob: -9.889449119567871
    5. ',self' → logprob: -10.264449119567871
    6. '[p' → logprob: -11.389449119567871
    7. '   ' → logprob: -11.389449119567871
    8. '[' → logprob: -11.514449119567871
    9. '       ' → logprob: -11.764449119567871
    10. 'p' → logprob: -12.389449119567871

Token 669: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.026876764371991158
    2. ' p' → logprob: -3.65187668800354
    3. 'lambda' → logprob: -8.026876449584961
    4. '   ' → logprob: -8.776876449584961
    5. ' lambda' → logprob: -9.651876449584961
    6. '       ' → logprob: -10.901876449584961
    7. ' ' → logprob: -12.776876449584961
    8. '[p' → logprob: -12.901876449584961
    9. '    ' → logprob: -13.776876449584961
    10. '           ' → logprob: -13.776876449584961

Token 670: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019410114036872983
    2. '[' → logprob: -6.501941204071045
    3. '2' → logprob: -8.001940727233887
    4. '[]' → logprob: -10.626940727233887
    5. '_' → logprob: -10.751940727233887
    6. '   ' → logprob: -11.251940727233887
    7. '```' → logprob: -11.626940727233887
    8. '[
' → logprob: -12.251940727233887
    9. 'def' → logprob: -12.501940727233887
    10. '[:]' → logprob: -12.626940727233887

Token 671: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6278029084205627
    2. '[i' → logprob: -1.627802848815918
    3. '[self' → logprob: -2.377802848815918
    4. '):
' → logprob: -2.627802848815918
    5. '       ' → logprob: -2.752802848815918
    6. '[' → logprob: -4.252802848815918
    7. '):' → logprob: -4.752802848815918
    8. '   ' → logprob: -5.252802848815918
    9. '(self' → logprob: -5.627802848815918
    10. '[
' → logprob: -5.752802848815918

Token 672: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34992191195487976
    2. '[p' → logprob: -1.7249219417572021
    3. '[i' → logprob: -2.724921941757202
    4. '       ' → logprob: -3.474921941757202
    5. ' [' → logprob: -4.099921703338623
    6. '   ' → logprob: -6.599921703338623
    7. '[
' → logprob: -7.099921703338623
    8. '[n' → logprob: -7.599921703338623
    9. '[j' → logprob: -8.599922180175781
    10. '[token' → logprob: -8.849922180175781

Token 673: ' #' (ID: 1069)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.59039306640625
    2. '[' → logprob: -0.84039306640625
    3. 'return' → logprob: -5.09039306640625
    4. '[r' → logprob: -5.34039306640625
    5. '   ' → logprob: -6.46539306640625
    6. '[R' → logprob: -7.59039306640625
    7. '[i' → logprob: -7.71539306640625
    8. '[N' → logprob: -8.09039306640625
    9. '[n' → logprob: -8.46539306640625
    10. ' [' → logprob: -8.46539306640625

Token 674: ' compose' (ID: 43360)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25694698095321655
    2. '[p' → logprob: -1.7569470405578613
    3. '[' → logprob: -3.6319470405578613
    4. ' return' → logprob: -5.131947040557861
    5. '[r' → logprob: -5.131947040557861
    6. 'r' → logprob: -5.756947040557861
    7. '   ' → logprob: -5.881947040557861
    8. 'R' → logprob: -6.131947040557861
    9. '       ' → logprob: -6.506947040557861
    10. '[i' → logprob: -6.756947040557861

Token 675: ' two' (ID: 1920)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.05814262479543686
    2. '[' → logprob: -3.43314266204834
    3. '[i' → logprob: -4.05814266204834
    4. '   ' → logprob: -6.05814266204834
    5. ' [' → logprob: -6.05814266204834
    6. 'p' → logprob: -7.05814266204834
    7. 'return' → logprob: -7.43314266204834
    8. '       ' → logprob: -8.30814266204834
    9. 'def' → logprob: -8.93314266204834
    10. '[
' → logprob: -9.05814266204834

Token 676: ' permutations' (ID: 174595)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8348612189292908
    2. '[p' → logprob: -1.2098612785339355
    3. '[' → logprob: -1.4598612785339355
    4. 'perm' → logprob: -3.7098612785339355
    5. 'def' → logprob: -5.9598612785339355
    6. '[
' → logprob: -5.9598612785339355
    7. 'per' → logprob: -6.2098612785339355
    8. ' p' → logprob: -6.8348612785339355
    9. ' [' → logprob: -6.8348612785339355
    10. '[i' → logprob: -7.4598612785339355

Token 677: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4170973598957062
    2. '[p' → logprob: -1.9170973300933838
    3. ' =' → logprob: -2.917097330093384
    4. '       ' → logprob: -3.292097330093384
    5. '[
' → logprob: -3.417097330093384
    6. 'def' → logprob: -4.417097568511963
    7. ' [' → logprob: -4.417097568511963
    8. '[i' → logprob: -4.417097568511963
    9. '   ' → logprob: -4.917097568511963
    10. '[self' → logprob: -5.042097568511963

Token 678: ' p' (ID: 275)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.03151751682162285
    2. '[' → logprob: -3.531517505645752
    3. '[N' → logprob: -7.531517505645752
    4. ' [' → logprob: -7.781517505645752
    5. '[i' → logprob: -7.781517505645752
    6. '   ' → logprob: -8.65651798248291
    7. '[q' → logprob: -9.40651798248291
    8. '[n' → logprob: -10.03151798248291
    9. '[len' → logprob: -10.53151798248291
    10. '[j' → logprob: -10.65651798248291

Token 679: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.41226813197135925
    2. 'erm' → logprob: -1.9122681617736816
    3. '1' → logprob: -2.9122681617736816
    4. '[' → logprob: -3.0372681617736816
    5. ' =' → logprob: -3.4122681617736816
    6. '   ' → logprob: -3.9122681617736816
    7. 'p' → logprob: -4.662268161773682
    8. '=' → logprob: -5.162268161773682
    9. '=[' → logprob: -5.162268161773682
    10. '[p' → logprob: -5.912268161773682

Token 680: ' followed' (ID: 12661)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6381091475486755
    2. '[p' → logprob: -1.5131092071533203
    3. '=' → logprob: -2.3881092071533203
    4. '[i' → logprob: -3.3881092071533203
    5. '[' → logprob: -3.5131092071533203
    6. ',' → logprob: -3.6381092071533203
    7. 'p' → logprob: -3.8881092071533203
    8. '=[' → logprob: -4.38810920715332
    9. ')' → logprob: -4.63810920715332
    10. '2' → logprob: -5.13810920715332

Token 681: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.000929091009311378
    2. 'p' → logprob: -7.00092887878418
    3. ' by' → logprob: -11.37592887878418
    4. ' p' → logprob: -12.75092887878418
    5. '   ' → logprob: -14.25092887878418
    6. 'lambda' → logprob: -14.50092887878418
    7. '       ' → logprob: -14.62592887878418
    8. 'b' → logprob: -14.62592887878418
    9. '(p' → logprob: -15.00092887878418
    10. '=' → logprob: -15.37592887878418

Token 682: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015643771039322019
    2. ' p' → logprob: -6.5015645027160645
    3. 'lambda' → logprob: -10.751564025878906
    4. '[' → logprob: -11.001564025878906
    5. '[p' → logprob: -11.001564025878906
    6. '   ' → logprob: -12.501564025878906
    7. '       ' → logprob: -14.001564025878906
    8. ' lambda' → logprob: -14.126564025878906
    9. ' [' → logprob: -14.251564025878906
    10. '[
' → logprob: -14.501564025878906

Token 683: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007566197891719639
    2. 'p' → logprob: -7.250756740570068
    3. 'erm' → logprob: -10.62575626373291
    4. '[' → logprob: -11.62575626373291
    5. 'r' → logprob: -12.50075626373291
    6. '1' → logprob: -12.62575626373291
    7. ' p' → logprob: -13.50075626373291
    8. '[p' → logprob: -13.62575626373291
    9. '```' → logprob: -13.75075626373291
    10. '
' → logprob: -14.37575626373291

Token 684: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.780887246131897
    2. '[' → logprob: -0.905887246131897
    3. '[
' → logprob: -3.4058871269226074
    4. '[p' → logprob: -3.9058871269226074
    5. '       ' → logprob: -4.280887126922607
    6. '[self' → logprob: -4.655887126922607
    7. 'def' → logprob: -4.780887126922607
    8. ' =' → logprob: -4.780887126922607
    9. '(' → logprob: -4.780887126922607
    10. '(self' → logprob: -5.155887126922607

Token 685: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24060025811195374
    2. '       ' → logprob: -1.9906002283096313
    3. '[i' → logprob: -3.865600347518921
    4. '[
' → logprob: -4.115600109100342
    5. ' [' → logprob: -4.115600109100342
    6. '   ' → logprob: -4.490600109100342
    7. ' =' → logprob: -5.740600109100342
    8. '```' → logprob: -6.615600109100342
    9. 'def' → logprob: -6.865600109100342
    10. '[p' → logprob: -6.865600109100342

Token 686: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32461774349212646
    2. '[p' → logprob: -1.8246177434921265
    3. 'return' → logprob: -2.949617862701416
    4. '[r' → logprob: -3.449617862701416
    5. '       ' → logprob: -4.449617862701416
    6. ' [' → logprob: -4.574617862701416
    7. ' return' → logprob: -5.824617862701416
    8. '[i' → logprob: -6.449617862701416
    9. '[n' → logprob: -6.449617862701416
    10. '[N' → logprob: -6.699617862701416

Token 687: ' i' (ID: 575)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.7523311972618103
    2. 'return' → logprob: -1.002331256866455
    3. '[' → logprob: -2.752331256866455
    4. 'R' → logprob: -3.877331256866455
    5. ' return' → logprob: -4.002331256866455
    6. '[r' → logprob: -4.252331256866455
    7. '   ' → logprob: -4.627331256866455
    8. ' [' → logprob: -4.627331256866455
    9. '[i' → logprob: -4.877331256866455
    10. '       ' → logprob: -5.127331256866455

Token 688: ' mapped' (ID: 47205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08104321360588074
    2. ' =' → logprob: -2.956043243408203
    3. '=' → logprob: -4.081043243408203
    4. '   ' → logprob: -5.956043243408203
    5. '[n' → logprob: -6.456043243408203
    6. 'm' → logprob: -6.956043243408203
    7. '[i' → logprob: -7.206043243408203
    8. 'nt' → logprob: -7.831043243408203
    9. ' n' → logprob: -7.956043243408203
    10. ' in' → logprob: -7.956043243408203

Token 689: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6987619400024414
    2. '=' → logprob: -1.0737619400024414
    3. ' p' → logprob: -3.3237619400024414
    4. '[i' → logprob: -3.5737619400024414
    5. ' to' → logprob: -3.5737619400024414
    6. 'to' → logprob: -4.573761940002441
    7. ' in' → logprob: -4.573761940002441
    8. ' ' → logprob: -4.823761940002441
    9. ',' → logprob: -4.948761940002441
    10. '       ' → logprob: -5.073761940002441

Token 690: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0668763667345047
    2. 'lambda' → logprob: -2.9418764114379883
    3. ' p' → logprob: -5.191876411437988
    4. ' lambda' → logprob: -5.566876411437988
    5. '(lambda' → logprob: -7.066876411437988
    6. '=lambda' → logprob: -7.441876411437988
    7. '   ' → logprob: -7.441876411437988
    8. ' =' → logprob: -9.191876411437988
    9. '[p' → logprob: -9.566876411437988
    10. '2' → logprob: -9.691876411437988

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03863668814301491
    2. '2' → logprob: -3.2886366844177246
    3. 'erm' → logprob: -7.788636684417725
    4. '[p' → logprob: -9.663637161254883
    5. '```' → logprob: -9.913637161254883
    6. 'p' → logprob: -10.413637161254883
    7. '[' → logprob: -11.038637161254883
    8. 'erms' → logprob: -12.663637161254883
    9. ' p' → logprob: -13.038637161254883
    10. 'r' → logprob: -13.163637161254883

Token 692: ' then' (ID: 1815)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.31642231345176697
    2. ',' → logprob: -2.0664222240448
    3. '[p' → logprob: -3.0664222240448
    4. ' =' → logprob: -3.8164222240448
    5. ',
' → logprob: -4.441422462463379
    6. '[' → logprob: -4.441422462463379
    7. '       ' → logprob: -4.691422462463379
    8. 'p' → logprob: -5.316422462463379
    9. '   ' → logprob: -5.316422462463379
    10. '=' → logprob: -5.316422462463379

Token 693: ' by' (ID: 656)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4848285913467407
    2. 'lambda' → logprob: -1.3598285913467407
    3. ' lambda' → logprob: -2.484828472137451
    4. '=lambda' → logprob: -3.859828472137451
    5. ' p' → logprob: -4.359828472137451
    6. '(lambda' → logprob: -5.609828472137451
    7. '[' → logprob: -5.609828472137451
    8. ' =' → logprob: -6.484828472137451
    9. '=' → logprob: -7.609828472137451
    10. '[
' → logprob: -8.60982894897461

Token 694: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014203116297721863
    2. ' p' → logprob: -4.264203071594238
    3. 'lambda' → logprob: -10.764203071594238
    4. ' lambda' → logprob: -11.014203071594238
    5. '   ' → logprob: -13.889203071594238
    6. ' ' → logprob: -14.639203071594238
    7. '(lambda' → logprob: -16.139204025268555
    8. '=lambda' → logprob: -16.139204025268555
    9. '[' → logprob: -16.389204025268555
    10. '  ' → logprob: -16.639204025268555

Token 695: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.875
    3. '   ' → logprob: -16.0
    4. '[' → logprob: -16.75
    5. ' ' → logprob: -16.75
    6. 'p' → logprob: -17.0
    7. '```' → logprob: -17.5
    8. '[p' → logprob: -17.875
    9. '1' → logprob: -18.0
    10. '  ' → logprob: -18.125

Token 696: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7234286069869995
    2. '[p' → logprob: -1.3484286069869995
    3. '[i' → logprob: -1.7234286069869995
    4. '[
' → logprob: -2.848428726196289
    5. ' =' → logprob: -4.598428726196289
    6. '=' → logprob: -5.848428726196289
    7. '   ' → logprob: -6.098428726196289
    8. ' [' → logprob: -7.098428726196289
    9. '[c' → logprob: -7.223428726196289
    10. '=[' → logprob: -8.348428726196289

Token 697: ' res' (ID: 694)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6402387022972107
    2. '[p' → logprob: -0.8902387022972107
    3. ' [' → logprob: -2.8902387619018555
    4. '[
' → logprob: -5.1402387619018555
    5. '[i' → logprob: -7.3902387619018555
    6. ' p' → logprob: -9.765238761901855
    7. ' [
' → logprob: -9.765238761901855
    8. '   ' → logprob: -10.515238761901855
    9. '[int' → logprob: -11.390238761901855
    10. '[self' → logprob: -11.390238761901855

Token 698: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.256965309381485
    2. ' =' → logprob: -1.5069652795791626
    3. '[i' → logprob: -5.506965160369873
    4. '=[' → logprob: -7.756965160369873
    5. '[p' → logprob: -8.631965637207031
    6. '   ' → logprob: -8.631965637207031
    7. '[' → logprob: -9.256965637207031
    8. '[
' → logprob: -10.881965637207031
    9. '=
' → logprob: -11.506965637207031
    10. ' =[' → logprob: -11.631965637207031

Token 699: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05192217230796814
    2. ']=' → logprob: -3.176922082901001
    3. '=' → logprob: -5.05192232131958
    4. ' =' → logprob: -6.42692232131958
    5. ' ]' → logprob: -7.30192232131958
    6. '       ' → logprob: -9.676921844482422
    7. '   ' → logprob: -9.926921844482422
    8. '=p' → logprob: -10.551921844482422
    9. ']=(' → logprob: -11.301921844482422
    10. '[p' → logprob: -11.926921844482422

Token 700: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008590460754930973
    2. ' =' → logprob: -4.8835906982421875
    3. '=[' → logprob: -7.1335906982421875
    4. '[' → logprob: -9.133590698242188
    5. '=
' → logprob: -9.883590698242188
    6. '   ' → logprob: -12.008590698242188
    7. ' =[' → logprob: -12.508590698242188
    8. '[p' → logprob: -12.633590698242188
    9. '[i' → logprob: -13.133590698242188
    10. '[
' → logprob: -13.258590698242188

Token 701: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00043138445471413434
    2. ' p' → logprob: -7.750431537628174
    3. '[p' → logprob: -15.000431060791016
    4. '   ' → logprob: -15.375431060791016
    5. ' ' → logprob: -17.750431060791016
    6. '	p' → logprob: -18.000431060791016
    7. '`' → logprob: -18.000431060791016
    8. '```' → logprob: -18.125431060791016
    9. '[' → logprob: -18.250431060791016
    10. '  ' → logprob: -18.625431060791016

Token 702: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2596842050552368
    2. '[p' → logprob: -1.7596842050552368
    3. 'p' → logprob: -2.8846840858459473
    4. '1' → logprob: -8.009684562683105
    5. ' p' → logprob: -8.259684562683105
    6. '(p' → logprob: -9.884684562683105
    7. '[' → logprob: -10.009684562683105
    8. '   ' → logprob: -11.384684562683105
    9. 'erm' → logprob: -12.009684562683105
    10. '=p' → logprob: -12.509684562683105

Token 703: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0014128545299172401
    2. '[' → logprob: -6.751412868499756
    3. 'p' → logprob: -8.501412391662598
    4. '[
' → logprob: -10.751412391662598
    5. '(p' → logprob: -12.501412391662598
    6. '[i' → logprob: -12.876412391662598
    7. '   ' → logprob: -13.376412391662598
    8. 'perm' → logprob: -13.626412391662598
    9. ' =' → logprob: -13.751412391662598
    10. '[[' → logprob: -13.751412391662598

Token 704: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. 'erm' → logprob: -13.250001907348633
    3. 'erms' → logprob: -15.625001907348633
    4. 'r' → logprob: -16.375001907348633
    5. 'ermit' → logprob: -16.750001907348633
    6. 'ermut' → logprob: -16.750001907348633
    7. 'p' → logprob: -16.875001907348633
    8. 'return' → logprob: -17.375001907348633
    9. 'ermin' → logprob: -18.375001907348633
    10. 'i' → logprob: -18.875001907348633

Token 705: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.306760805164231e-05
    2. 'i' → logprob: -11.75001335144043
    3. ']' → logprob: -12.37501335144043
    4. '[' → logprob: -14.37501335144043
    5. '][' → logprob: -15.75001335144043
    6. '[
' → logprob: -15.87501335144043
    7. '[p' → logprob: -16.25001335144043
    8. '(i' → logprob: -17.00001335144043
    9. ' i' → logprob: -17.00001335144043
    10. '   ' → logprob: -18.12501335144043

Token 706: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010902655776590109
    2. '[i' → logprob: -10.25010871887207
    3. ']
' → logprob: -10.37510871887207
    4. ' ]' → logprob: -10.75010871887207
    5. '       ' → logprob: -11.37510871887207
    6. '   ' → logprob: -12.87510871887207
    7. ']+' → logprob: -13.62510871887207
    8. ']]' → logprob: -13.87510871887207
    9. ')]' → logprob: -14.12510871887207
    10. '[' → logprob: -14.12510871887207

Token 707: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6066544651985168
    2. '       ' → logprob: -0.8566544651985168
    3. '   ' → logprob: -4.231654644012451
    4. ' [' → logprob: -5.106654644012451
    5. ' =' → logprob: -5.981654644012451
    6. '[
' → logprob: -6.106654644012451
    7. '[i' → logprob: -6.731654644012451
    8. 'def' → logprob: -6.981654644012451
    9. '```' → logprob: -7.356654644012451
    10. '`' → logprob: -8.231654167175293

Token 708: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07710593193769455
    2. '[' → logprob: -3.20210599899292
    3. 'res' → logprob: -3.95210599899292
    4. ' res' → logprob: -4.57710599899292
    5. 'result' → logprob: -6.70210599899292
    6. 'return' (adapté à ' return') → logprob: -7.07710599899292
    7. '   ' → logprob: -7.45210599899292
    8. ' [' → logprob: -7.70210599899292
    9. '           ' → logprob: -7.95210599899292
    10. '[
' → logprob: -8.952105522155762

Token 709: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0011791547294706106
    2. '[' → logprob: -6.751179218292236
    3. ' [' → logprob: -11.751178741455078
    4. '[i' → logprob: -14.876178741455078
    5. '[N' → logprob: -14.876178741455078
    6. '[j' → logprob: -16.251178741455078
    7. '[np' → logprob: -16.251178741455078
    8. '[list' → logprob: -16.751178741455078
    9. '[(' → logprob: -16.876178741455078
    10. '[len' → logprob: -17.376178741455078

Token 710: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5213274309644476e-05
    2. ' p' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.125015258789062
    4. '	p' → logprob: -17.375015258789062
    5. ')p' → logprob: -17.750015258789062
    6. '       ' → logprob: -18.500015258789062
    7. '[p' → logprob: -18.500015258789062
    8. '(p' → logprob: -18.625015258789062
    9. '<p' → logprob: -18.625015258789062
    10. '  ' → logprob: -18.750015258789062

Token 711: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. '[p' → logprob: -12.000006675720215
    3. '[' → logprob: -15.125006675720215
    4. 'p' → logprob: -15.875006675720215
    5. '(p' → logprob: -16.62500762939453
    6. 'erm' → logprob: -17.00000762939453
    7. '₂' → logprob: -17.12500762939453
    8. '۲' → logprob: -18.25000762939453
    9. '```' → logprob: -18.25000762939453
    10. ' p' → logprob: -18.62500762939453

Token 712: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0007108822464942932
    2. 'p' → logprob: -7.375710964202881
    3. '[' → logprob: -9.500710487365723
    4. '[
' → logprob: -12.625710487365723
    5. '[[' → logprob: -13.625710487365723
    6. '[c' → logprob: -14.125710487365723
    7. '(p' → logprob: -14.250710487365723
    8. ' [' → logprob: -14.375710487365723
    9. '
' → logprob: -14.875710487365723
    10. '][' → logprob: -15.000710487365723

Token 713: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '[i' → logprob: -13.000001907348633
    3. 'i' → logprob: -16.875001907348633
    4. 'erm' → logprob: -17.500001907348633
    5. 'r' → logprob: -18.625001907348633
    6. '[p' → logprob: -19.125001907348633
    7. '１' → logprob: -19.500001907348633
    8. ']' → logprob: -19.625001907348633
    9. '```' → logprob: -19.687501907348633
    10. 'p' → logprob: -19.750001907348633

Token 714: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5451681974809617e-05
    2. 'i' → logprob: -11.125015258789062
    3. ']' → logprob: -14.375015258789062
    4. ']]' → logprob: -16.875015258789062
    5. '_i' → logprob: -17.000015258789062
    6. '])' → logprob: -18.625015258789062
    7. '[c' → logprob: -19.125015258789062
    8. '```' → logprob: -19.125015258789062
    9. '(i' → logprob: -19.375015258789062
    10. '   ' → logprob: -20.125015258789062

Token 715: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009949409868568182
    2. ']]' → logprob: -7.00099515914917
    3. '[i' → logprob: -9.625994682312012
    4. ' ]' → logprob: -11.750994682312012
    5. ']+' → logprob: -12.125994682312012
    6. '   ' → logprob: -13.375994682312012
    7. 'i' → logprob: -14.125994682312012
    8. 'for' → logprob: -14.625994682312012
    9. ']
' → logprob: -14.750994682312012
    10. '[' → logprob: -15.625994682312012

Token 716: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25207483768463135
    2. 'for' → logprob: -1.5020748376846313
    3. ']' → logprob: -9.8770751953125
    4. '[i' → logprob: -10.3770751953125
    5. '       ' → logprob: -10.6270751953125
    6. '	for' → logprob: -10.7520751953125
    7. '   ' → logprob: -11.7520751953125
    8. '           ' → logprob: -12.0020751953125
    9. '        ' → logprob: -14.5020751953125
    10. '               ' → logprob: -14.5020751953125

Token 717: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002036595979006961
    2. ' i' → logprob: -8.500204086303711
    3. ' range' → logprob: -17.00020408630371
    4. 'range' → logprob: -17.25020408630371
    5. ' in' → logprob: -19.37520408630371
    6. ' ' → logprob: -20.87520408630371
    7. 'in' → logprob: -21.12520408630371
    8. ' ' → logprob: -21.62520408630371
    9. '	i' → logprob: -21.62520408630371
    10. '   ' → logprob: -21.75020408630371

Token 718: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5776978731155396
    2. ' in' → logprob: -0.8276978731155396
    3. 'range' → logprob: -6.45269775390625
    4. ' range' → logprob: -8.70269775390625
    5. 'i' → logprob: -11.45269775390625
    6. ' ' → logprob: -13.32769775390625
    7. '0' → logprob: -14.32769775390625
    8. '   ' → logprob: -14.82769775390625
    9. ']' → logprob: -15.45269775390625
    10. '(range' → logprob: -15.45269775390625

Token 719: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. ' ' → logprob: -17.125158309936523
    4. '   ' → logprob: -17.750158309936523
    5. '(range' → logprob: -17.875158309936523
    6. '  ' → logprob: -19.500158309936523
    7. '
' → logprob: -20.000158309936523
    8. 'i' → logprob: -20.125158309936523
    9. '	range' → logprob: -20.375158309936523
    10. 'in' → logprob: -20.500158309936523

Token 720: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008065330912359059
    2. ' N' → logprob: -7.3758063316345215
    3. 'len' → logprob: -8.75080680847168
    4. '(N' → logprob: -11.50080680847168
    5. ' len' → logprob: -12.12580680847168
    6. '   ' → logprob: -12.50080680847168
    7. '(len' → logprob: -13.50080680847168
    8. '       ' → logprob: -15.00080680847168
    9. '           ' → logprob: -15.25080680847168
    10. '	N' → logprob: -15.62580680847168

Token 721: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002507643774151802
    2. ']' → logprob: -6.00250768661499
    3. '])' → logprob: -11.502507209777832
    4. '])]' → logprob: -11.752507209777832
    5. ' ]' → logprob: -12.252507209777832
    6. '')]' → logprob: -13.252507209777832
    7. '}]' → logprob: -13.252507209777832
    8. ')' → logprob: -13.377507209777832
    9. ']]' → logprob: -13.502507209777832
    10. ')])' → logprob: -14.377507209777832

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02416902966797352
    2. '```' → logprob: -3.7741689682006836
    3. 'def' → logprob: -7.274168968200684
    4. '
' → logprob: -8.774168968200684
    5. '    
' → logprob: -10.149168968200684
    6. '<|end|>' → logprob: -11.649168968200684
    7. '`' → logprob: -12.274168968200684
    8. '``' → logprob: -12.274168968200684
    9. '[' → logprob: -12.774168968200684
    10. ' def' → logprob: -12.899168968200684

Token 723: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019431571708992124
    2. 'def' (adapté à ' def') → logprob: -6.251943111419678
    3. '```' → logprob: -11.501943588256836
    4. ' def' → logprob: -12.626943588256836
    5. '
' → logprob: -14.126943588256836
    6. '    
' → logprob: -15.126943588256836
    7. '	def' → logprob: -16.876943588256836
    8. '   ' → logprob: -17.501943588256836
    9. '       ' → logprob: -17.751943588256836
    10. '``' → logprob: -18.501943588256836

Token 724: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -5.796184723294573e-06
    2. ' repeat' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.500005722045898
    4. 'parse' → logprob: -16.5000057220459
    5. 'def' → logprob: -16.8750057220459
    6. 'reverse' → logprob: -17.2500057220459
    7. '_repeat' → logprob: -17.7500057220459
    8. '.repeat' → logprob: -19.3750057220459
    9. 'return' → logprob: -19.6250057220459
    10. '  ' → logprob: -19.6250057220459

Token 725: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0003724006237462163
    2. '(self' → logprob: -8.000371932983398
    3. '_perm' → logprob: -10.625371932983398
    4. 'self' → logprob: -12.625371932983398
    5. '   ' → logprob: -12.625371932983398
    6. '_' → logprob: -12.875371932983398
    7. '_permission' → logprob: -13.250371932983398
    8. '_self' → logprob: -14.875371932983398
    9. '_permissions' → logprob: -15.000371932983398
    10. '_PER' → logprob: -15.750371932983398

Token 726: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -9.841743303695694e-05
    2. 'm' → logprob: -9.62509822845459
    3. 'mute' → logprob: -10.62509822845459
    4. 'mission' → logprob: -12.50009822845459
    5. 'mut' → logprob: -12.75009822845459
    6. 'utation' → logprob: -13.62509822845459
    7. 'Mutation' → logprob: -16.000099182128906
    8. 'putation' → logprob: -17.125099182128906
    9. 'mun' → logprob: -17.375099182128906
    10. 'mu' → logprob: -17.375099182128906

Token 727: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.782141569303349e-05
    2. '(' → logprob: -9.50009822845459
    3. 'self' → logprob: -11.50009822845459
    4. '   ' → logprob: -11.87509822845459
    5. 'def' → logprob: -12.25009822845459
    6. '       ' → logprob: -14.50009822845459
    7. ' (' → logprob: -14.87509822845459
    8. '(
' → logprob: -16.875097274780273
    9. '	self' → logprob: -17.250097274780273
    10. ' ' → logprob: -18.375097274780273

Token 728: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008787082624621689
    2. ',' → logprob: -7.250878810882568
    3. 'self' → logprob: -8.75087833404541
    4. '(' → logprob: -12.50087833404541
    5. '       ' → logprob: -13.25087833404541
    6. 'def' → logprob: -13.25087833404541
    7. '   ' → logprob: -13.50087833404541
    8. ',self' → logprob: -14.12587833404541
    9. ' (' → logprob: -14.62587833404541
    10. ' self' → logprob: -14.87587833404541

Token 729: ' p' (ID: 275)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.057556577026844025
    2. ' perm' → logprob: -3.682556629180908
    3. 'p' → logprob: -4.182556629180908
    4. 'self' → logprob: -4.307556629180908
    5. ' p' → logprob: -7.307556629180908
    6. ' self' → logprob: -7.432556629180908
    7. 'per' → logprob: -7.682556629180908
    8. '   ' → logprob: -8.93255615234375
    9. 'base' → logprob: -9.55755615234375
    10. '_perm' → logprob: -10.55755615234375

Token 730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008304747752845287
    2. '(self' → logprob: -8.12583065032959
    3. 'self' → logprob: -8.50083065032959
    4. '   ' → logprob: -9.12583065032959
    5. ',self' → logprob: -9.12583065032959
    6. ',p' → logprob: -9.62583065032959
    7. ' ,' → logprob: -10.75083065032959
    8. '       ' → logprob: -11.75083065032959
    9. 'def' → logprob: -12.25083065032959
    10. ',
' → logprob: -13.00083065032959

Token 731: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44002431631088257
    2. ' n' → logprob: -1.4400243759155273
    3. 'k' → logprob: -2.5650243759155273
    4. ' k' → logprob: -3.4400243759155273
    5. 'r' → logprob: -4.940024375915527
    6. ' r' → logprob: -6.565024375915527
    7. '   ' → logprob: -7.440024375915527
    8. 'count' → logprob: -8.315024375915527
    9. ' times' → logprob: -8.815024375915527
    10. 'times' → logprob: -8.940024375915527

Token 732: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1271074265241623
    2. '):' → logprob: -2.1271073818206787
    3. '):
' → logprob: -8.752107620239258
    4. ':' → logprob: -11.502107620239258
    5. ')' → logprob: -12.252107620239258
    6. '):

' → logprob: -12.627107620239258
    7. ' ):
' → logprob: -14.127107620239258
    8. '   ' → logprob: -14.252107620239258
    9. ':
' → logprob: -14.252107620239258
    10. ',' → logprob: -14.377107620239258

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021347946021705866
    2. '[' → logprob: -7.377134799957275
    3. ' if' → logprob: -7.377134799957275
    4. 'if' → logprob: -7.877134799957275
    5. '   ' → logprob: -8.377134323120117
    6. 'result' → logprob: -9.252134323120117
    7. '```' → logprob: -10.752134323120117
    8. ',' → logprob: -10.877134323120117
    9. ' [' → logprob: -11.002134323120117
    10. ' result' → logprob: -11.377134323120117

Token 734: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22091437876224518
    2. 'result' → logprob: -2.220914363861084
    3. '       ' → logprob: -3.095914363861084
    4. 'if' → logprob: -3.220914363861084
    5. 'r' → logprob: -5.970914363861084
    6. 'ret' → logprob: -6.470914363861084
    7. 'def' → logprob: -8.220914840698242
    8. ' res' → logprob: -9.470914840698242
    9. ' if' → logprob: -9.845914840698242
    10. '   ' → logprob: -11.095914840698242

Token 735: ' exponent' (ID: 51159)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3771069645881653
    2. 'res' → logprob: -1.6271069049835205
    3. 'result' → logprob: -2.6271069049835205
    4. 'def' → logprob: -3.1271069049835205
    5. '       ' → logprob: -7.2521071434021
    6. 'r' → logprob: -8.002106666564941
    7. ' if' → logprob: -8.127106666564941
    8. '   ' → logprob: -9.377106666564941
    9. ' res' → logprob: -9.877106666564941
    10. 'ret' → logprob: -11.002106666564941

Token 736: 'iate' (ID: 5373)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04295991361141205
    2. ' =' → logprob: -3.5429599285125732
    3. 'iation' → logprob: -4.417959690093994
    4. '   ' → logprob: -7.917959690093994
    5. ':' → logprob: -8.292960166931152
    6. 'i' → logprob: -9.167960166931152
    7. 'iate' → logprob: -9.792960166931152
    8. '       ' → logprob: -9.792960166931152
    9. 'def' → logprob: -10.167960166931152
    10. '```' → logprob: -10.292960166931152

Token 737: ' permutation' (ID: 135200)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26178407669067383
    2. '       ' → logprob: -2.386784076690674
    3. '   ' → logprob: -3.011784076690674
    4. 'self' → logprob: -3.261784076690674
    5. '(p' → logprob: -3.886784076690674
    6. '(self' → logprob: -4.011784076690674
    7. 'p' → logprob: -4.636784076690674
    8. '(' → logprob: -7.261784076690674
    9. ' p' → logprob: -8.011783599853516
    10. 'return' → logprob: -8.011783599853516

Token 738: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31875741481781006
    2. '(self' → logprob: -1.56875741481781
    3. '   ' → logprob: -3.0687575340270996
    4. 'self' → logprob: -5.3187575340271
    5. '(p' → logprob: -5.3187575340271
    6. '(' → logprob: -5.9437575340271
    7. '{' → logprob: -6.9437575340271
    8. 'def' → logprob: -6.9437575340271
    9. ',' → logprob: -7.0687575340271
    10. ' ' → logprob: -7.5687575340271

Token 739: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0884268656373024
    2. '(self' → logprob: -2.9634268283843994
    3. ',' → logprob: -4.0884270668029785
    4. 'def' → logprob: -5.2134270668029785
    5. '(' → logprob: -5.7134270668029785
    6. '   ' → logprob: -5.8384270668029785
    7. '{' → logprob: -6.8384270668029785
    8. 'self' → logprob: -7.3384270668029785
    9. ' =' → logprob: -7.5884270668029785
    10. '(p' → logprob: -7.5884270668029785

Token 740: ' power' (ID: 3470)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.013870817609131336
    2. 'the' → logprob: -4.888870716094971
    3. ' the' → logprob: -5.138870716094971
    4. ' m' → logprob: -8.013871192932129
    5. 'p' → logprob: -10.763871192932129
    6. 'power' → logprob: -11.138871192932129
    7. 'pow' → logprob: -12.638871192932129
    8. ' p' → logprob: -13.138871192932129
    9. ' power' → logprob: -13.138871192932129
    10. 'multip' → logprob: -13.388871192932129

Token 741: ' m' (ID: 284)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3494866192340851
    2. '(p' → logprob: -1.5994865894317627
    3. '       ' → logprob: -2.4744865894317627
    4. 'm' → logprob: -5.849486827850342
    5. ' p' → logprob: -6.349486827850342
    6. '[p' → logprob: -6.849486827850342
    7. 'def' → logprob: -7.099486827850342
    8. '(' → logprob: -7.474486827850342
    9. '   ' → logprob: -7.599486827850342
    10. '[' → logprob: -8.099486351013184

Token 742: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050230544060468674
    2. '   ' → logprob: -3.5502305030822754
    3. 'def' → logprob: -5.050230503082275
    4. '```' → logprob: -5.300230503082275
    5. '(self' → logprob: -6.050230503082275
    6. ',' → logprob: -6.050230503082275
    7. '(p' → logprob: -7.425230503082275
    8. '{' → logprob: -7.550230503082275
    9. ':
' → logprob: -7.550230503082275
    10. '
' → logprob: -7.800230503082275

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024597218725830317
    2. '   ' → logprob: -6.627459526062012
    3. 'def' → logprob: -8.377459526062012
    4. ':
' → logprob: -8.502459526062012
    5. ':' → logprob: -9.002459526062012
    6. '
' → logprob: -9.252459526062012
    7. ' =' → logprob: -9.377459526062012
    8. ',' → logprob: -9.627459526062012
    9. '=' → logprob: -9.877459526062012
    10. '        
' → logprob: -9.877459526062012

Token 744: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19713079929351807
    2. 'res' → logprob: -1.822130799293518
    3. 'if' → logprob: -5.1971306800842285
    4. ' res' → logprob: -5.5721306800842285
    5. 'result' → logprob: -5.6971306800842285
    6. 'def' → logprob: -6.3221306800842285
    7. ' if' → logprob: -7.3221306800842285
    8. 'pow' → logprob: -7.5721306800842285
    9. 'perm' → logprob: -7.8221306800842285
    10. 'r' → logprob: -8.072131156921387

Token 745: ' binary' (ID: 15600)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9054915904998779
    2. 'if' → logprob: -1.405491590499878
    3. 'def' → logprob: -1.655491590499878
    4. 'result' → logprob: -2.155491590499878
    5. '       ' → logprob: -3.155491590499878
    6. ' res' → logprob: -8.030491828918457
    7. ' if' → logprob: -8.280491828918457
    8. '   ' → logprob: -8.530491828918457
    9. '```' → logprob: -10.155491828918457
    10. 'r' → logprob: -10.405491828918457

Token 746: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7746107578277588
    2. ' exponent' → logprob: -0.7746107578277588
    3. 'exp' → logprob: -3.399610757827759
    4. 'pow' → logprob: -4.39961051940918
    5. '_ex' → logprob: -4.52461051940918
    6. 'search' → logprob: -4.89961051940918
    7. 'e' → logprob: -5.64961051940918
    8. ' search' → logprob: -6.02461051940918
    9. '_' → logprob: -6.14961051940918
    10. '_exp' → logprob: -6.77461051940918

Token 747: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.3727448880672455
    2. 'ation' → logprob: -1.4977449178695679
    3. 'def' → logprob: -2.6227447986602783
    4. '       ' → logprob: -4.497745037078857
    5. '   ' → logprob: -6.122745037078857
    6. 't' → logprob: -7.122745037078857
    7. '[' → logprob: -8.8727445602417
    8. 'entation' → logprob: -8.9977445602417
    9. 'ion' → logprob: -9.9977445602417
    10. 'token' → logprob: -9.9977445602417

Token 748: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8374163508415222
    2. 'res' → logprob: -1.587416410446167
    3. 'def' → logprob: -1.587416410446167
    4. 'result' → logprob: -1.962416410446167
    5. '   ' → logprob: -4.337416172027588
    6. ' res' → logprob: -6.087416172027588
    7. '```' → logprob: -6.962416172027588
    8. '
' → logprob: -7.587416172027588
    9. 'p' → logprob: -8.087416648864746
    10. ' result' → logprob: -8.462416648864746

Token 749: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0402163565158844
    2. '   ' → logprob: -3.6652164459228516
    3. 'def' → logprob: -5.290216445922852
    4. ' =' → logprob: -5.665216445922852
    5. '[' → logprob: -6.665216445922852
    6. '```' → logprob: -6.915216445922852
    7. '=' → logprob: -7.290216445922852
    8. ':' → logprob: -7.540216445922852
    9. ',' → logprob: -7.540216445922852
    10. ' def' → logprob: -8.665216445922852

Token 750: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.13443079590797424
    2. '       ' → logprob: -2.5094308853149414
    3. 'result' → logprob: -3.2594308853149414
    4. 'def' → logprob: -5.509430885314941
    5. ' res' → logprob: -6.634430885314941
    6. 'if' → logprob: -8.759430885314941
    7. 'pow' → logprob: -9.009430885314941
    8. '```' → logprob: -9.134430885314941
    9. 'r' → logprob: -9.509430885314941
    10. '   ' → logprob: -9.759430885314941

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859191179275513
    2. ' =' → logprob: -3.0485918521881104
    3. '=[' → logprob: -12.923591613769531
    4. ',' → logprob: -13.673591613769531
    5. '=
' → logprob: -14.923591613769531
    6. ' =[' → logprob: -15.673591613769531
    7. '=[]' → logprob: -15.923591613769531
    8. '[' → logprob: -16.67359161376953
    9. '   ' → logprob: -16.79859161376953
    10. '=

' → logprob: -17.29859161376953

Token 752: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.896309739408025e-07
    2. ' list' → logprob: -14.125000953674316
    3. '[list' → logprob: -18.5
    4. '=list' → logprob: -20.875
    5. '(list' → logprob: -21.25
    6. '[' → logprob: -21.375
    7. '   ' → logprob: -21.75
    8. 'List' → logprob: -22.875
    9. '```' → logprob: -23.0
    10. '	list' → logprob: -23.375

Token 753: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00043102685594931245
    2. 'range' → logprob: -7.750431060791016
    3. ' range' → logprob: -15.125431060791016
    4. '	range' → logprob: -17.625431060791016
    5. '(' → logprob: -19.125431060791016
    6. '.range' → logprob: -19.375431060791016
    7. '   ' → logprob: -20.375431060791016
    8. '
' → logprob: -21.250431060791016
    9. '=' → logprob: -21.625431060791016
    10. ')' → logprob: -21.875431060791016

Token 754: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5759565830230713
    2. '(N' → logprob: -0.8259565830230713
    3. ' N' → logprob: -12.325956344604492
    4. '	N' → logprob: -12.450956344604492
    5. ')' → logprob: -12.575956344604492
    6. '   ' → logprob: -13.450956344604492
    7. ',N' → logprob: -13.700956344604492
    8. '[N' → logprob: -14.575956344604492
    9. '       ' → logprob: -14.700956344604492
    10. '(' → logprob: -14.825956344604492

Token 755: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.003169272094964981
    2. '))' → logprob: -6.003169059753418
    3. ')
' → logprob: -7.378169059753418
    4. ')' → logprob: -10.378169059753418
    5. '))
' → logprob: -10.753169059753418
    6. '       ' → logprob: -11.378169059753418
    7. '   ' → logprob: -13.128169059753418
    8. ' ))
' → logprob: -13.753169059753418
    9. '))

' → logprob: -14.128169059753418
    10. ')
' → logprob: -15.503169059753418

Token 756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07020106911659241
    2. 'while' → logprob: -2.9452011585235596
    3. '```' → logprob: -5.0702009201049805
    4. '   ' → logprob: -5.8202009201049805
    5. 'for' → logprob: -6.3202009201049805
    6. 'i' → logprob: -7.1952009201049805
    7. 'temp' → logprob: -7.3202009201049805
    8. ' while' → logprob: -7.5702009201049805
    9. 't' → logprob: -7.5702009201049805
    10. 'def' → logprob: -7.8202009201049805

Token 757: ' base' (ID: 3611)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.011910472065210342
    2. 'p' → logprob: -5.761910438537598
    3. '       ' → logprob: -5.886910438537598
    4. 'for' → logprob: -6.011910438537598
    5. '   ' → logprob: -6.761910438537598
    6. 'def' → logprob: -7.511910438537598
    7. 'm' → logprob: -8.011910438537598
    8. 'i' → logprob: -8.261910438537598
    9. 'pow' → logprob: -8.261910438537598
    10. 'power' → logprob: -8.511910438537598

Token 758: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04860236495733261
    2. ' =' → logprob: -3.048602342605591
    3. '=p' → logprob: -11.548602104187012
    4. '=
' → logprob: -13.173602104187012
    5. '   ' → logprob: -14.048602104187012
    6. ',' → logprob: -14.048602104187012
    7. '[' → logprob: -14.673602104187012
    8. 'p' → logprob: -15.298602104187012
    9. '<|end|>' → logprob: -15.298602104187012
    10. '       ' → logprob: -15.673602104187012

Token 759: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01250989455729723
    2. ' p' → logprob: -4.387509822845459
    3. '[p' → logprob: -16.637510299682617
    4. 'list' → logprob: -16.762510299682617
    5. '	p' → logprob: -17.012510299682617
    6. '   ' → logprob: -17.512510299682617
    7. '[' → logprob: -17.762510299682617
    8. ' ' → logprob: -18.137510299682617
    9. '<p' → logprob: -18.262510299682617
    10. ' list' → logprob: -18.512510299682617

Token 760: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06336727738380432
    2. '<|end|>' → logprob: -3.3133673667907715
    3. '<|end|>' → logprob: -4.3133673667907715
    4. '       ' → logprob: -5.6883673667907715
    5. '[:]' → logprob: -6.3133673667907715
    6. '  
' → logprob: -6.8133673667907715
    7. 'while' → logprob: -6.9383673667907715
    8. '[:' → logprob: -6.9383673667907715
    9. '.copy' → logprob: -7.3133673667907715
    10. ' 
' → logprob: -7.5633673667907715

Token 761: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.669114351272583
    2. '       ' → logprob: -0.794114351272583
    3. '```' → logprob: -3.669114351272583
    4. ' while' → logprob: -5.669114112854004
    5. '   ' → logprob: -5.669114112854004
    6. 'for' → logprob: -6.669114112854004
    7. '	while' → logprob: -7.294114112854004
    8. '
' → logprob: -8.169114112854004
    9. '``' → logprob: -8.294114112854004
    10. '[' → logprob: -8.419114112854004

Token 762: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.038907550275325775
    2. ' while' → logprob: -3.663907527923584
    3. '       ' → logprob: -4.663907527923584
    4. '   ' → logprob: -6.788907527923584
    5. '	while' → logprob: -6.913907527923584
    6. 'm' → logprob: -7.288907527923584
    7. 'for' → logprob: -8.538908004760742
    8. '```' → logprob: -10.413908004760742
    9. '	' → logprob: -11.163908004760742
    10. ' for' → logprob: -11.163908004760742

Token 763: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.048589982092380524
    2. ' m' → logprob: -3.0485899448394775
    3. '	m' → logprob: -13.798589706420898
    4. '           ' → logprob: -14.298589706420898
    5. '       ' → logprob: -14.673589706420898
    6. '   ' → logprob: -15.548589706420898
    7. '(m' → logprob: -16.4235897064209
    8. ' ' → logprob: -16.4235897064209
    9. '    ' → logprob: -16.9235897064209
    10. '        ' → logprob: -17.1735897064209

Token 764: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00011868205183418468
    2. ' >' → logprob: -9.250118255615234
    3. '   ' → logprob: -11.750118255615234
    4. '&gt' → logprob: -11.750118255615234
    5. ':' → logprob: -13.000118255615234
    6. '%' → logprob: -13.750118255615234
    7. '
' → logprob: -14.125118255615234
    8. ':
' → logprob: -14.250118255615234
    9. '```' → logprob: -14.375118255615234
    10. '[' → logprob: -15.250118255615234

Token 765: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929743405431509
    2. ' ' → logprob: -5.130929946899414
    3. '1' → logprob: -14.380929946899414
    4. '>' → logprob: -15.880929946899414
    5. '   ' → logprob: -16.255929946899414
    6. '=' → logprob: -16.380929946899414
    7. '[' → logprob: -16.505929946899414
    8. '```' → logprob: -16.755929946899414
    9. '    ' → logprob: -17.255929946899414
    10. '       ' → logprob: -17.380929946899414

Token 766: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005996698047965765
    2. '1' → logprob: -5.5059967041015625
    3. ' ' → logprob: -6.7559967041015625
    4. 'm' → logprob: -7.2559967041015625
    5. '```' → logprob: -11.005996704101562
    6. ' m' → logprob: -11.255996704101562
    7. '[' → logprob: -11.880996704101562
    8. '>' → logprob: -12.630996704101562
    9. '[m' → logprob: -13.130996704101562
    10. 'tokens' → logprob: -14.630996704101562

Token 767: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.055662184953689575
    2. ':' → logprob: -3.555662155151367
    3. ' :
' → logprob: -4.680662155151367
    4. '       ' → logprob: -4.930662155151367
    5. '           ' → logprob: -5.055662155151367
    6. ' :' → logprob: -7.180662155151367
    7. '[' → logprob: -7.430662155151367
    8. '<|end|>' → logprob: -7.805662155151367
    9. ' if' → logprob: -8.305662155151367
    10. '   ' → logprob: -8.555662155151367

Token 768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04991395026445389
    2. ' if' → logprob: -3.5499138832092285
    3. '[' → logprob: -4.7999138832092285
    4. '       ' → logprob: -5.1749138832092285
    5. '<|end|>' → logprob: -6.2999138832092285
    6. '        ' → logprob: -7.0499138832092285
    7. '	       ' → logprob: -7.6749138832092285
    8. '            ' → logprob: -7.7999138832092285
    9. '          ' → logprob: -7.7999138832092285
    10. '               ' → logprob: -8.174914360046387

Token 769: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8167842626571655
    2. ' if' → logprob: -1.0667842626571655
    3. '           ' → logprob: -1.5667842626571655
    4. '       ' → logprob: -6.316784381866455
    5. '[' → logprob: -7.441784381866455
    6. '	       ' → logprob: -7.441784381866455
    7. '               ' → logprob: -7.566784381866455
    8. 'If' → logprob: -7.691784381866455
    9. '	if' → logprob: -7.941784381866455
    10. '   ' → logprob: -8.316783905029297

Token 770: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.12694533169269562
    2. 'm' → logprob: -2.1269452571868896
    3. '(m' → logprob: -11.501945495605469
    4. ' (' → logprob: -12.001945495605469
    5. '           ' → logprob: -14.501945495605469
    6. '	m' → logprob: -15.126945495605469
    7. ')m' → logprob: -16.25194549560547
    8. '            ' → logprob: -17.50194549560547
    9. ' ' → logprob: -18.00194549560547
    10. '               ' → logprob: -18.50194549560547

Token 771: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.4740777015686035
    2. '&' → logprob: -0.9740777015686035
    3. ' ' → logprob: -15.599077224731445
    4. '&amp' → logprob: -16.349077224731445
    5. '&B' → logprob: -16.599077224731445
    6. '＆' → logprob: -16.724077224731445
    7. '&nbsp' → logprob: -16.974077224731445
    8. '   ' → logprob: -17.349077224731445
    9. '&
' → logprob: -17.349077224731445
    10. ' ' → logprob: -17.474077224731445

Token 772: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '           ' → logprob: -17.375036239624023
    4. '   ' → logprob: -17.750036239624023
    5. '(' → logprob: -18.625036239624023
    6. 'm' → logprob: -18.875036239624023
    7. '               ' → logprob: -19.125036239624023
    8. '```' → logprob: -19.125036239624023
    9. '                   ' → logprob: -20.375036239624023
    10. ' (' → logprob: -20.500036239624023

Token 773: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '(' → logprob: -19.250001907348633
    5. '           ' → logprob: -20.875001907348633
    6. 'm' → logprob: -21.000001907348633
    7. '```' → logprob: -21.000001907348633
    8. '{' → logprob: -21.375001907348633
    9. '01' → logprob: -21.625001907348633
    10. '  ' → logprob: -22.125001907348633

Token 774: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08302658796310425
    2. ':' → logprob: -2.583026647567749
    3. '               ' → logprob: -5.83302640914917
    4. '           ' → logprob: -8.208026885986328
    5. '=' → logprob: -8.333026885986328
    6. '==' → logprob: -8.458026885986328
    7. '):
' → logprob: -8.458026885986328
    8. '[' → logprob: -9.958026885986328
    9. ' ==' → logprob: -10.333026885986328
    10. '<|end|>' → logprob: -10.333026885986328

Token 775: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2038867175579071
    2. ' res' → logprob: -1.9538867473602295
    3. 'res' → logprob: -3.4538867473602295
    4. '           ' → logprob: -4.95388650894165
    5. '[' → logprob: -6.70388650894165
    6. ' =' → logprob: -6.95388650894165
    7. '                ' → logprob: -7.70388650894165
    8. '            ' → logprob: -8.578886985778809
    9. '                
' → logprob: -8.953886985778809
    10. '              ' → logprob: -8.953886985778809

Token 776: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.038829006254673004
    2. ' res' → logprob: -3.2888290882110596
    3. '               ' → logprob: -7.1638288497924805
    4. '                   ' → logprob: -12.16382884979248
    5. '           ' → logprob: -12.91382884979248
    6. '	res' → logprob: -13.16382884979248
    7. '                ' → logprob: -13.66382884979248
    8. '[' → logprob: -13.91382884979248
    9. '   ' → logprob: -14.91382884979248
    10. ' ' → logprob: -15.53882884979248

Token 777: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196824833750725
    2. ' =' → logprob: -2.8119683265686035
    3. '[' → logprob: -15.436967849731445
    4. '   ' → logprob: -15.686967849731445
    5. '           ' → logprob: -16.561967849731445
    6. '=[' → logprob: -17.311967849731445
    7. '＝' → logprob: -17.811967849731445
    8. '       ' → logprob: -17.936967849731445
    9. '    ' → logprob: -18.311967849731445
    10. '            ' → logprob: -18.311967849731445

Token 778: ' self' (ID: 1051)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00017505438881926239
    2. 'self' → logprob: -8.750175476074219
    3. ' [' → logprob: -11.375175476074219
    4. '[p' → logprob: -13.250175476074219
    5. '[' → logprob: -13.375175476074219
    6. ' self' → logprob: -13.500175476074219
    7. '(self' → logprob: -15.125175476074219
    8. '   ' → logprob: -17.25017547607422
    9. '	self' → logprob: -18.50017547607422
    10. ' ' → logprob: -19.37517547607422

Token 779: '.combine' (ID: 196448)
  Prédit: '.combine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.combine' → logprob: -0.0059477598406374454
    2. 'combine' → logprob: -5.130947589874268
    3. 'self' → logprob: -11.380948066711426
    4. '   ' → logprob: -12.755948066711426
    5. '[self' → logprob: -13.255948066711426
    6. '.' → logprob: -14.380948066711426
    7. '.compose' → logprob: -14.880948066711426
    8. ' combine' → logprob: -14.880948066711426
    9. '.self' → logprob: -15.505948066711426
    10. '['' → logprob: -15.880948066711426

Token 780: '(res' (ID: 8331)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023318851366639137
    2. '(res' → logprob: -3.7733187675476074
    3. ' res' → logprob: -9.523319244384766
    4. '	res' → logprob: -16.023319244384766
    5. '_res' → logprob: -16.773319244384766
    6. ',res' → logprob: -16.773319244384766
    7. '               ' → logprob: -17.523319244384766
    8. '                   ' → logprob: -17.648319244384766
    9. '$res' → logprob: -17.773319244384766
    10. '           ' → logprob: -19.523319244384766

Token 781: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.718606891809031e-05
    2. 'base' → logprob: -9.875066757202148
    3. ' ,' → logprob: -11.125066757202148
    4. ' base' → logprob: -14.500066757202148
    5. '(base' → logprob: -15.375066757202148
    6. ',p' → logprob: -15.875066757202148
    7. ';base' → logprob: -16.75006675720215
    8. ',
' → logprob: -16.87506675720215
    9. ',b' → logprob: -17.37506675720215
    10. ')' → logprob: -19.37506675720215

Token 782: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0031777136027812958
    2. ' base' → logprob: -5.753177642822266
    3. '(base' → logprob: -17.378177642822266
    4. '           ' → logprob: -17.878177642822266
    5. '	base' → logprob: -19.378177642822266
    6. '               ' → logprob: -20.128177642822266
    7. 'Base' → logprob: -21.253177642822266
    8. '_base' → logprob: -21.378177642822266
    9. '   ' → logprob: -21.628177642822266
    10. '.base' → logprob: -21.753177642822266

Token 783: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2015780359506607
    2. ')
' → logprob: -1.7015780210494995
    3. '           ' → logprob: -8.951578140258789
    4. '               ' → logprob: -10.701578140258789
    5. ')
' → logprob: -12.076578140258789
    6. ')

' → logprob: -13.451578140258789
    7. ' )' → logprob: -13.701578140258789
    8. ' )
' → logprob: -14.201578140258789
    9. '[' → logprob: -14.451578140258789
    10. ')`
' → logprob: -14.701578140258789

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04196923226118088
    2. 'm' → logprob: -3.9169692993164062
    3. '               ' → logprob: -5.291969299316406
    4. ' m' → logprob: -5.541969299316406
    5. '```' → logprob: -5.541969299316406
    6. '            
' → logprob: -6.166969299316406
    7. '       ' → logprob: -6.416969299316406
    8. '(m' → logprob: -6.791969299316406
    9. '[' → logprob: -7.166969299316406
    10. '                
' → logprob: -7.666969299316406

Token 785: ' base' (ID: 3611)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01222977600991726
    2. '           ' → logprob: -4.887229919433594
    3. 'base' (adapté à ' base') → logprob: -5.387229919433594
    4. ' m' → logprob: -11.262229919433594
    5. '       ' → logprob: -11.262229919433594
    6. '          ' → logprob: -13.012229919433594
    7. '   ' → logprob: -13.012229919433594
    8. '```' → logprob: -13.137229919433594
    9. '               ' → logprob: -13.512229919433594
    10. '            ' → logprob: -13.762229919433594

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001234428636962548
    2. ' =' → logprob: -9.000123023986816
    3. '=
' → logprob: -17.500123977661133
    4. '=

' → logprob: -17.875123977661133
    5. '=}' → logprob: -19.750123977661133
    6. '＝' → logprob: -20.375123977661133
    7. '.=' → logprob: -20.875123977661133
    8. '*=' → logprob: -21.375123977661133
    9. '   ' → logprob: -22.750123977661133
    10. '	' → logprob: -23.625123977661133

Token 787: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.313314952421933e-05
    2. ' self' → logprob: -9.750062942504883
    3. '[self' → logprob: -12.250062942504883
    4. '(self' → logprob: -17.750062942504883
    5. '[' → logprob: -18.125062942504883
    6. '	self' → logprob: -18.875062942504883
    7. '   ' → logprob: -19.250062942504883
    8. '=self' → logprob: -20.500062942504883
    9. '           ' → logprob: -22.250062942504883
    10. '`' → logprob: -22.250062942504883

Token 788: '.combine' (ID: 196448)
  Prédit: '.combine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.combine' → logprob: -0.4295516312122345
    2. 'self' → logprob: -1.179551601409912
    3. 'combine' → logprob: -3.179551601409912
    4. ' self' → logprob: -9.67955207824707
    5. '[self' → logprob: -9.67955207824707
    6. '(self' → logprob: -11.17955207824707
    7. '.compose' → logprob: -11.17955207824707
    8. 'def' → logprob: -11.67955207824707
    9. '=self' → logprob: -12.67955207824707
    10. '.self' → logprob: -12.67955207824707

Token 789: '(base' (ID: 25314)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.011092972941696644
    2. '(base' → logprob: -4.5110931396484375
    3. ' base' → logprob: -10.011093139648438
    4. '	base' → logprob: -15.511093139648438
    5. '.base' → logprob: -18.011093139648438
    6. '/base' → logprob: -18.386093139648438
    7. '_base' → logprob: -19.011093139648438
    8. ';base' → logprob: -19.886093139648438
    9. ',' → logprob: -20.511093139648438
    10. '-base' → logprob: -20.886093139648438

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. 'base' → logprob: -11.750008583068848
    3. '(base' → logprob: -15.625008583068848
    4. ' ,' → logprob: -15.875008583068848
    5. ';base' → logprob: -17.50000762939453
    6. ',
' → logprob: -17.62500762939453
    7. ' base' → logprob: -19.12500762939453
    8. ',b' → logprob: -19.62500762939453
    9. '[' → logprob: -20.75000762939453
    10. '_,' → logprob: -20.75000762939453

Token 791: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.306760805164231e-05
    2. ' base' → logprob: -11.25001335144043
    3. '(base' → logprob: -19.87501335144043
    4. '	base' → logprob: -21.62501335144043
    5. ' ' → logprob: -24.12501335144043
    6. '_base' → logprob: -24.12501335144043
    7. '.base' → logprob: -24.37501335144043
    8. 'baseline' → logprob: -24.50001335144043
    9. '   ' → logprob: -24.62501335144043
    10. 'basis' → logprob: -24.75001335144043

Token 792: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008792542852461338
    2. ')
' → logprob: -4.758792400360107
    3. '           ' → logprob: -9.258792877197266
    4. ',' → logprob: -10.008792877197266
    5. '       ' → logprob: -10.633792877197266
    6. '   ' → logprob: -12.258792877197266
    7. ')return' → logprob: -12.883792877197266
    8. '<|end|>' → logprob: -13.508792877197266
    9. ')

' → logprob: -14.133792877197266
    10. '),' → logprob: -14.383792877197266

Token 793: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047867968678474426
    2. 'm' → logprob: -3.422868013381958
    3. '```' → logprob: -4.922867774963379
    4. ' m' → logprob: -5.422867774963379
    5. '       ' → logprob: -6.672867774963379
    6. '	m' → logprob: -7.797867774963379
    7. '   ' → logprob: -7.797867774963379
    8. '``' → logprob: -9.172867774963379
    9. '(m' → logprob: -9.422867774963379
    10. '		' → logprob: -9.672867774963379

Token 794: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.0007706748438067734
    2. '           ' → logprob: -7.250770568847656
    3. ' m' → logprob: -9.750770568847656
    4. '       ' → logprob: -13.625770568847656
    5. '   ' → logprob: -14.125770568847656
    6. '```' → logprob: -15.750770568847656
    7. ' ' → logprob: -16.000770568847656
    8. '	m' → logprob: -16.250770568847656
    9. '  ' → logprob: -16.375770568847656
    10. '          ' → logprob: -16.875770568847656

Token 795: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.018417634069919586
    2. ' >>=' → logprob: -4.268417835235596
    3. '//=' → logprob: -5.643417835235596
    4. '=' → logprob: -7.268417835235596
    5. '   ' → logprob: -13.018417358398438
    6. '>' → logprob: -13.268417358398438
    7. ' //' → logprob: -13.893417358398438
    8. '>>>' → logprob: -14.018417358398438
    9. '//' → logprob: -14.518417358398438
    10. '```' → logprob: -15.393417358398438

Token 796: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.375001907348633
    4. '```' → logprob: -19.250001907348633
    5. '0' → logprob: -20.875001907348633
    6. '`' → logprob: -21.750001907348633
    7. '１' → logprob: -21.750001907348633
    8. '       ' → logprob: -21.750001907348633
    9. '01' → logprob: -21.875001907348633
    10. ' ' → logprob: -22.125001907348633

Token 797: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.625
    4. '0' → logprob: -18.625
    5. '   ' → logprob: -19.8125
    6. '=' → logprob: -20.625
    7. '`' → logprob: -20.6875
    8. '01' → logprob: -20.75
    9. '
' → logprob: -20.75
    10. '１' → logprob: -20.8125

Token 798: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011158646084368229
    2. 'return' → logprob: -4.511158466339111
    3. ' return' → logprob: -9.26115894317627
    4. '   ' → logprob: -11.76115894317627
    5. '	' → logprob: -12.38615894317627
    6. '	return' → logprob: -13.38615894317627
    7. '{return' → logprob: -14.76115894317627
    8. '<|end|>' → logprob: -14.76115894317627
    9. '0' → logprob: -15.01115894317627
    10. '```' → logprob: -15.26115894317627

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03027673251926899
    2. 'return' → logprob: -3.5302767753601074
    3. ' return' → logprob: -7.780276775360107
    4. '   ' → logprob: -10.03027629852295
    5. '	' → logprob: -10.53027629852295
    6. '	return' → logprob: -10.65527629852295
    7. '<|end|>' → logprob: -12.53027629852295
    8. '{return' → logprob: -12.90527629852295
    9. '```' → logprob: -13.28027629852295
    10. '           ' → logprob: -13.78027629852295

Token 800: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3886220455169678
    2. '       ' → logprob: -1.1386220455169678
    3. ' return' → logprob: -6.513622283935547
    4. '	return' → logprob: -8.888622283935547
    5. '   ' → logprob: -9.638622283935547
    6. '	' → logprob: -9.888622283935547
    7. '	   ' → logprob: -13.013622283935547
    8. '{return' → logprob: -13.138622283935547
    9. ':return' → logprob: -13.388622283935547
    10. '           ' → logprob: -13.638622283935547

Token 801: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0206720617134124e-05
    2. ' res' → logprob: -11.50001049041748
    3. '	res' → logprob: -22.000009536743164
    4. '   ' → logprob: -22.250009536743164
    5. '$res' → logprob: -22.250009536743164
    6. '(res' → logprob: -23.250009536743164
    7. '_res' → logprob: -23.750009536743164
    8. 'ret' → logprob: -24.250009536743164
    9. 're' → logprob: -24.500009536743164
    10. '       ' → logprob: -24.750009536743164

Token 802: '

' (ID: 279)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.018399957567453384
    2. 'def' → logprob: -4.268400192260742
    3. 'p' → logprob: -6.018400192260742
    4. 'result' → logprob: -6.518400192260742
    5. '```' → logprob: -8.768400192260742
    6. 'print' → logprob: -10.268400192260742
    7. 'res' → logprob: -10.643400192260742
    8. 'for' → logprob: -10.643400192260742
    9. 'Parser' → logprob: -11.018400192260742
    10. 'parse' → logprob: -11.018400192260742

Token 803: 'for' (ID: 1938)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.5637344717979431
    2. 'result' → logprob: -0.9387344717979431
    3. 'print' → logprob: -3.688734531402588
    4. 'def' → logprob: -5.688734531402588
    5. 'for' → logprob: -5.938734531402588
    6. 'parsed' → logprob: -6.188734531402588
    7. 'res' → logprob: -6.313734531402588
    8. 'expr' → logprob: -6.438734531402588
    9. 'p' → logprob: -6.813734531402588
    10. '#' → logprob: -6.938734531402588

Token 804: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.10100039094686508
    2. ' expr' → logprob: -2.8510003089904785
    3. 'expression' → logprob: -3.9760003089904785
    4. '_expr' → logprob: -5.6010003089904785
    5. ' line' → logprob: -5.7260003089904785
    6. ' expression' → logprob: -5.7260003089904785
    7. 'e' → logprob: -6.1010003089904785
    8. '_' → logprob: -6.2260003089904785
    9. 'line' → logprob: -6.2260003089904785
    10. 'exp' → logprob: -6.7260003089904785

Token 805: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132883608341217
    2. ' in' → logprob: -1.3132883310317993
    3. 'for' → logprob: -11.563288688659668
    4. '_in' → logprob: -11.938288688659668
    5. 's' → logprob: -12.813288688659668
    6. 'ine' → logprob: -13.063288688659668
    7. 'e' → logprob: -13.563288688659668
    8. 'n' → logprob: -13.938288688659668
    9. 'expr' → logprob: -14.313288688659668
    10. ' ' → logprob: -15.063288688659668

Token 806: ' expressions' (ID: 43578)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.018165279179811478
    2. ' expressions' → logprob: -4.018165111541748
    3. '(express' → logprob: -11.143165588378906
    4. 'Expressions' → logprob: -14.143165588378906
    5. '```' → logprob: -16.643165588378906
    6. 'sys' → logprob: -17.518165588378906
    7. '[' → logprob: -18.143165588378906
    8. '[]' → logprob: -18.268165588378906
    9. 'E' → logprob: -18.768165588378906
    10. 'expression' → logprob: -19.018165588378906

Token 807: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06613539904356003
    2. ':
' → logprob: -2.8161354064941406
    3. '(parser' → logprob: -6.941135406494141
    4. '():
' → logprob: -7.191135406494141
    5. '_parser' → logprob: -7.566135406494141
    6. '):
' → logprob: -8.69113540649414
    7. '(Parser' → logprob: -8.69113540649414
    8. '(p' → logprob: -8.94113540649414
    9. 'for' → logprob: -9.19113540649414
    10. '<|end|>' → logprob: -9.31613540649414

Token 808: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02172798290848732
    2. ' parser' → logprob: -4.646728038787842
    3. 'parser' → logprob: -5.021728038787842
    4. '```' → logprob: -6.021728038787842
    5. '_parser' → logprob: -7.146728038787842
    6. ':
' → logprob: -7.646728038787842
    7. '(parser' → logprob: -7.771728038787842
    8. '	parser' → logprob: -8.021727561950684
    9. ':' → logprob: -8.271727561950684
    10. 'Parser' → logprob: -8.646727561950684

Token 809: ' parser' (ID: 14216)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5061337351799011
    2. 'parser' (adapté à ' parser') → logprob: -1.006133794784546
    3. '   ' → logprob: -3.756133794784546
    4. ' parser' → logprob: -5.381133556365967
    5. ' p' → logprob: -5.756133556365967
    6. '```' → logprob: -8.381134033203125
    7. 'res' → logprob: -9.631134033203125
    8. 'perm' → logprob: -9.881134033203125
    9. 'result' → logprob: -10.506134033203125
    10. 'ps' → logprob: -11.506134033203125

Token 810: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760138034820557
    2. ' =' → logprob: -0.8260138034820557
    3. '=
' → logprob: -9.826013565063477
    4. '=parse' → logprob: -11.701013565063477
    5. '(Parser' → logprob: -13.076013565063477
    6. '_=' → logprob: -13.326013565063477
    7. '_parser' → logprob: -13.326013565063477
    8. '   ' → logprob: -13.576013565063477
    9. ' =
' → logprob: -14.076013565063477
    10. 'parser' → logprob: -14.451013565063477

Token 811: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.0002613358374219388
    2. ' Parser' → logprob: -8.250261306762695
    3. '(Parser' → logprob: -17.500261306762695
    4. '.Parser' → logprob: -18.375261306762695
    5. 'parser' → logprob: -20.500261306762695
    6. '_parser' → logprob: -20.750261306762695
    7. 'Parsing' → logprob: -21.250261306762695
    8. 'Parsed' → logprob: -21.375261306762695
    9. 'Parse' → logprob: -21.625261306762695
    10. ' parser' → logprob: -22.375261306762695

Token 812: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.3132770359516144
    2. 'expr' → logprob: -1.313277006149292
    3. ' expr' → logprob: -11.188277244567871
    4. '(' → logprob: -15.063277244567871
    5. 'for' → logprob: -15.313277244567871
    6. '(expression' → logprob: -15.438277244567871
    7. '(express' → logprob: -15.688277244567871
    8. '_expr' → logprob: -15.813277244567871
    9. 'express' → logprob: -15.938277244567871
    10. 'parser' → logprob: -16.188276290893555

Token 813: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13571003079414368
    2. '(parser' → logprob: -3.0107100009918213
    3. '   ' → logprob: -3.5107100009918213
    4. ')
' → logprob: -3.5107100009918213
    5. ').' → logprob: -4.6357102394104
    6. '(Parser' → logprob: -5.8857102394104
    7. '.parse' → logprob: -6.0107102394104
    8. '.parser' → logprob: -6.8857102394104
    9. '(parsed' → logprob: -8.010709762573242
    10. '(' → logprob: -8.760709762573242

Token 814: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5529031753540039
    2. 'result' → logprob: -1.552903175354004
    3. 'perm' → logprob: -1.552903175354004
    4. '```' → logprob: -7.677903175354004
    5. 'ans' → logprob: -7.802903175354004
    6. '   ' → logprob: -8.177903175354004
    7. 'print' → logprob: -8.427903175354004
    8. 'out' → logprob: -10.802903175354004
    9. 'final' → logprob: -11.177903175354004
    10. 'r' → logprob: -11.677903175354004

Token 815: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' (adapté à ' perm') → logprob: -0.5849877595901489
    2. 'res' → logprob: -1.084987759590149
    3. 'result' → logprob: -2.3349876403808594
    4. 'ans' → logprob: -4.834987640380859
    5. 'final' → logprob: -8.95998764038086
    6. 'overall' → logprob: -10.83498764038086
    7. 'answer' → logprob: -10.95998764038086
    8. 'out' → logprob: -11.20998764038086
    9. 'print' → logprob: -11.45998764038086
    10. '   ' → logprob: -11.83498764038086

Token 816: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142708718776703
    2. ' =' → logprob: -1.7014271020889282
    3. '   ' → logprob: -11.576427459716797
    4. '.' → logprob: -13.326427459716797
    5. ')' → logprob: -14.076427459716797
    6. '=
' → logprob: -14.326427459716797
    7. '=parse' → logprob: -15.951427459716797
    8. ' =)' → logprob: -16.076427459716797
    9. ' ' → logprob: -16.201427459716797
    10. ':' → logprob: -16.201427459716797

Token 817: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.16022564470767975
    2. ' parser' → logprob: -1.9102256298065186
    3. '(parser' → logprob: -14.285225868225098
    4. '   ' → logprob: -14.660225868225098
    5. '	parser' → logprob: -14.660225868225098
    6. '.parser' → logprob: -18.41022491455078
    7. 'Parser' → logprob: -18.66022491455078
    8. 'parse' → logprob: -18.66022491455078
    9. 'par' → logprob: -18.78522491455078
    10. ' ' → logprob: -19.16022491455078

Token 818: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -2.6537622034084052e-05
    2. 'parse' → logprob: -10.62502670288086
    3. '.' → logprob: -13.62502670288086
    4. '=parse' → logprob: -14.87502670288086
    5. '_parse' → logprob: -15.50002670288086
    6. '	parse' → logprob: -16.25002670288086
    7. '   ' → logprob: -16.75002670288086
    8. '(parse' → logprob: -16.87502670288086
    9. '.Parse' → logprob: -17.25002670288086
    10. '().' → logprob: -17.25002670288086

Token 819: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.0036089823115617037
    2. 'expr' → logprob: -5.6286091804504395
    3. 'perm' → logprob: -12.628608703613281
    4. 'Expr' → logprob: -12.628608703613281
    5. '_perm' → logprob: -14.128608703613281
    6. '(expr' → logprob: -14.503608703613281
    7. 'per' → logprob: -15.128608703613281
    8. 'express' → logprob: -15.378608703613281
    9. '()' → logprob: -16.50360870361328
    10. '```' → logprob: -16.87860870361328

Token 820: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004854211118072271
    2. '()
' → logprob: -5.629854202270508
    3. 'print' → logprob: -6.879854202270508
    4. '   ' → logprob: -8.754854202270508
    5. '(' → logprob: -11.504854202270508
    6. '();' → logprob: -11.629854202270508
    7. '[:]' → logprob: -11.754854202270508
    8. '[' → logprob: -12.254854202270508
    9. 'for' → logprob: -12.254854202270508
    10. '[]' → logprob: -12.504854202270508

Token 821: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2793563604354858
    2. 'print' → logprob: -1.6543563604354858
    3. 'output' → logprob: -1.6543563604354858
    4. 'inv' → logprob: -2.1543564796447754
    5. 'answer' → logprob: -2.6543564796447754
    6. 'result' → logprob: -3.0293564796447754
    7. 'res' → logprob: -3.4043564796447754
    8. '   ' → logprob: -3.9043564796447754
    9. 'ans' → logprob: -4.154356479644775
    10. 'out' → logprob: -4.404356479644775

Token 822: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005425965879112482
    2. 'for' → logprob: -5.755425930023193
    3. '   ' → logprob: -7.130425930023193
    4. 'answer' → logprob: -7.880425930023193
    5. 'output' → logprob: -7.880425930023193
    6. 'inv' → logprob: -8.505426406860352
    7. 'result' → logprob: -8.755426406860352
    8. 'res' → logprob: -9.005426406860352
    9. 'out' → logprob: -10.130426406860352
    10. 'ans' → logprob: -10.255426406860352

Token 823: '(*' (ID: 9000)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1401374489068985
    2. '(*' → logprob: -2.2651374340057373
    3. '(' → logprob: -3.7651374340057373
    4. '("' → logprob: -5.765137672424316
    5. '(*(' → logprob: -7.640137672424316
    6. 'perm' → logprob: -9.390137672424316
    7. '('\' → logprob: -9.765137672424316
    8. '(sum' → logprob: -12.140137672424316
    9. ''' → logprob: -12.265137672424316
    10. '(len' → logprob: -12.765137672424316

Token 824: '[' (ID: 58)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.0001601539261173457
    2. '[' → logprob: -8.750160217285156
    3. '[p' → logprob: -14.250160217285156
    4. 'range' → logprob: -14.375160217285156
    5. ' perm' → logprob: -15.125160217285156
    6. '(' → logprob: -16.000160217285156
    7. '[i' → logprob: -16.750160217285156
    8. '[(' → logprob: -19.000160217285156
    9. 'per' → logprob: -19.125160217285156
    10. 'perf' → logprob: -19.500160217285156

Token 825: 'x' (ID: 87)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.0009278989746235311
    2. 'p' → logprob: -7.250927925109863
    3. '[' → logprob: -9.000927925109863
    4. 'x' → logprob: -10.500927925109863
    5. '(' → logprob: -10.625927925109863
    6. '[p' → logprob: -10.750927925109863
    7. ' perm' → logprob: -11.875927925109863
    8. 'i' → logprob: -12.500927925109863
    9. '[i' → logprob: -12.500927925109863
    10. 'pos' → logprob: -13.500927925109863

Token 826: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1506853699684143
    2. 'for' → logprob: -2.2756853103637695
    3. ' +' → logprob: -3.7756853103637695
    4. ' for' → logprob: -4.2756853103637695
    5. '   ' → logprob: -9.15068531036377
    6. '[' → logprob: -9.40068531036377
    7. ')' → logprob: -9.40068531036377
    8. '[i' → logprob: -10.90068531036377
    9. ']' → logprob: -11.77568531036377
    10. '  ' → logprob: -12.52568531036377

Token 827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. '0' → logprob: -14.375012397766113
    4. '+' → logprob: -15.750012397766113
    5. 'x' → logprob: -16.25001335144043
    6. 'for' → logprob: -16.87501335144043
    7. '`' → logprob: -18.12501335144043
    8. '```' → logprob: -18.50001335144043
    9. '   ' → logprob: -18.75001335144043
    10. '=' → logprob: -18.87501335144043

Token 828: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023304643109440804
    2. ' for' → logprob: -3.7733047008514404
    3. ')' → logprob: -9.89830493927002
    4. '   ' → logprob: -12.14830493927002
    5. 'perm' → logprob: -13.52330493927002
    6. ',' → logprob: -14.39830493927002
    7. '	for' → logprob: -15.27330493927002
    8. '(' → logprob: -15.39830493927002
    9. ' ' → logprob: -15.39830493927002
    10. '  ' → logprob: -15.64830493927002

Token 829: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.038304947316646576
    2. 'perm' → logprob: -3.2883050441741943
    3. ' x' → logprob: -8.413305282592773
    4. ' perm' → logprob: -10.163305282592773
    5. 'per' → logprob: -13.038305282592773
    6. 'p' → logprob: -14.288305282592773
    7. 'range' → logprob: -15.663305282592773
    8. 'pos' → logprob: -16.913305282592773
    9. '(x' → logprob: -18.163305282592773
    10. 'in' → logprob: -18.413305282592773

Token 830: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06197160854935646
    2. ' in' → logprob: -2.811971664428711
    3. 'i' → logprob: -13.936971664428711
    4. 'x' → logprob: -14.311971664428711
    5. ' ' → logprob: -14.436971664428711
    6. '  ' → logprob: -15.061971664428711
    7. '	in' → logprob: -15.186971664428711
    8. '[in' → logprob: -15.311971664428711
    9. '_in' → logprob: -16.06197166442871
    10. 'int' → logprob: -16.43697166442871

Token 831: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -2.816093228830141e-06
    2. ' perm' → logprob: -13.00000286102295
    3. 'range' → logprob: -14.50000286102295
    4. ' range' → logprob: -20.625001907348633
    5. 'perf' → logprob: -21.500001907348633
    6. '
' → logprob: -21.875001907348633
    7. '   ' → logprob: -22.375001907348633
    8. 'per' → logprob: -22.875001907348633
    9. '  ' → logprob: -24.000001907348633
    10. 'pred' → logprob: -24.500001907348633

Token 832: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.023304877802729607
    2. ')' → logprob: -3.7733049392700195
    3. ')])' → logprob: -10.02330493927002
    4. '))' → logprob: -12.02330493927002
    5. ')]' → logprob: -13.14830493927002
    6. ']' → logprob: -13.52330493927002
    7. ' ])' → logprob: -13.64830493927002
    8. '   ' → logprob: -13.89830493927002
    9. '])
' → logprob: -13.89830493927002
    10. '})' → logprob: -14.27330493927002


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 830
Tokens correctement prédits (1ère position, stricte): 231
Tokens correctement prédits (1ère position, avec adaptation): 259
Tokens correctement prédits (top 10): 579
Précision stricte (1ère position): 27.83%
Précision adaptée (1ère position): 31.20%
Précision (top 10): 69.76%
================================================================================
